<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Extensibility</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconextensibility"></A>Extensibility</H1>

<P>Unlike a document type definition (DTD), XML-Data Reduced (XDR) schemas are extensible. That is, they are built on an open content model. Schema authors are free to add their own elements and attributes to XDR schema documents. For example, you can add additional constraints to a declaration for a <B>pages</B> element. The following sample code declares the <B>pages</B> element and assigns it an <B>int</B> data type. Extended tags from the <B>myExt</B> namespace are used to augment this information with an added limitation that books must have a minimum of 50 pages and a maximum of 100 pages.</P>

<PRE class="code">&lt;ElementType name="pages" <B>xmlns:myExt</B>="urn:myschema-extensions"&gt;
  &lt;datatype dt:type="int" /&gt;
  &lt;<B>myExt:min</B>&gt;50&lt;/myExt:min&gt;
  &lt;<B>myExt:max</B>&gt;100&lt;/myExt:max&gt;
&lt;/ElementType&gt;</PRE>

<P>Although validation will only check that the value of a particular <B>pages</B> element is an integer, your application can use the information provided by the added elements in the <B>myExt</B> namespace to perform additional validation.</P>

<P>Use of a namespace is a requirement for adding elements and attributes to a schema. For more information about namespaces, see <A HREF="xml_concepts_9dpv.htm">Using Namespaces in Documents</A>.</P>

<H2 class="dtH2">Referencing Other Schemas</H2>

<P>Custom schemas can be built out of standard parts. For example, suppose that a definition for an <B>Address</B> element from another schema has met your needs. With namespaces, this schema can be used directly with a reference to the original schema rather than copying the definition.</P>

<P>To reference an element defined in another schema, you must first use a namespace declaration to introduce the other schema. This declaration consists of an attribute beginning with <code><b class="cfe">"xmlns:"</b></code>, followed by a name of your choice, called the prefix, and a value that is the Uniform Resource Identifier (URI) of the other schema.</P>

<PRE class="code">&lt;ElementType name="PurchaseOrder"
             <B>xmlns:abcde=</B>"http://contoso.com/stuff.xml"&gt;</PRE>

<P>The schema has a namespace URI of <code class="ce">"http://contoso.com/stuff.xml"</code> and a prefix of <code class="ce">"abcde"</code>. The namespace URI identifies the other schema precisely; the prefix is a local name that you now use to refer to that schema and to the elements it defines as though they were defined in your schema. If the other schema has a suitable <B>shipTo</B> element defined, you can use it by writing the following.</P>

<PRE class="code">&lt;ElementType name="shipTo"
             xmlns:abcde="http://contoso.com/stuff.xml"&gt;
   &lt;element type="<B>abcde:Address</B>"/&gt;
&lt;/ElementType&gt;</PRE>

<P>In the type attribute of the first child element declaration for the value <code><b class="cfe">"abcde:Address"</b></code>, the prefix <code><b class="cfe">"abcde"</b></code> is matched to the enclosing namespace declaration; thus, <code><b class="cfe">"abcde:Address"</b></code> has the effect of meaning "the Address element" as defined in the schema <code class="ce">"http://contoso.com/stuff.xml"</code>.</P>

<P>However, this has an effect on the XML document as well. For example, in the following purchase order document you must also reference the other schema namespace.</P>

<PRE class="code">&lt;PurchaseOrder <B>xmlns:abcde="http://contoso.com/stuff.xml"</B>&gt;
  &lt;shipTo&gt;
    &lt;abcde:Address&gt;
      &lt;abcde:name&gt;Alice Smith&lt;/abcde:name&gt;
      &lt;abcde:street&gt;123 Maple Street&lt;/abcde:street&gt;
      &lt;abcde:city&gt;Mill Valley&lt;/abcde:city&gt;
      &lt;abcde:state&gt;CA&lt;/abcde:state&gt;
      &lt;abcde:zip&gt;90952&lt;/abcde:zip&gt;
    &lt;/abcde:Address&gt;
  &lt;/shipTo&gt;
  &lt;orderDate&gt;1999-05-20&lt;/orderDate&gt;
  &lt;shipDate&gt;1999-05-25&lt;/shipDate&gt;
  &lt;comments&gt;
    Get these things to me in a hurry, my lawn is going wild!
  &lt;/comments&gt;
  &lt;Items&gt;
    &lt;Item&gt;
      &lt;productName&gt;Lawnmower, model BUZZ-1&lt;/productName&gt;
      &lt;quantity&gt;1&lt;/quantity&gt;
      &lt;price&gt;148.95&lt;/price&gt;
    &lt;/Item&gt;
    &lt;Item&gt;
      &lt;productName&gt;Weed Wacker, model SNOOZE-2&lt;/productName&gt;
      &lt;quantity&gt;1&lt;/quantity&gt;
      &lt;price&gt;39.98&lt;/price&gt;
    &lt;/Item&gt;
  &lt;/Items&gt;
&lt;/PurchaseOrder&gt;</PRE>

<P>You can determine that the <B>Address</B> element is defined by the schema at <B>http://contoso.com/stuff.xml</B>. When you build specialized schemas from more widely understood standard parts, like the preceding <B>Address</B> element, those portions can often be processed by standard software components. For example, if you have an Extensible Stylesheet Language (XSL) template available for the <B>Address</B> element, as defined in the schema <B>http://contoso.com/stuff.xml</B>, you can reuse this general purpose address styling code anywhere that <B>Address</B> appears.</P>

<P>The same prefix is used in both the schema and in the document instance: in the schema for all purchase orders, and in a specific purchase order. However this is not necessary, because the prefix is only a local alias for the namespace URI, and you can use any prefix in the document instance. You are only required to use the same prefix in a document when you declare the namespace and when you use elements from that namespace, as in the following example.</P>

<PRE class="code">&lt;PurchaseOrder <B>xmlns:z</B>="http://contoso.com/stuff.xml"&gt;
  &lt;shipTo&gt;
    &lt;<B>z:</B>Address&gt;
      &lt;<B>z:</B>name&gt;Alice Smith&lt;/z:name&gt;
      &lt;<B>z:</B>street&gt;123 Maple Street&lt;/z:street&gt;
      &lt;<B>z:</B>city&gt;Mill Valley&lt;/z:city&gt;
      &lt;<B>z:</B>state&gt;CA&lt;/z:state&gt;
      &lt;<B>z:</B>zip&gt;90952&lt;/z:zip&gt;
    &lt;/z:Address&gt;
  &lt;/shipTo&gt;
&lt;/PurchaseOrder&gt;</PRE>

<P>The declaration of a namespace is scoped to the element on which it appears. It makes the namespace prefix available, and associates it with the namespace URI for that element and anything it contains, unless overridden by another, enclosed namespace declaration. Therefore, because the namespace is only used on the <B>Address</B> element, the namespace declaration can appear on the <B>Address</B> element instead, as follows.</P>

<PRE class="code">&lt;PurchaseOrder&gt;
  &lt;shipTo&gt;
    &lt;<B>z:Address</B> xmlns:z="http://contoso.com/stuff.xml"&gt;
      &lt;z:name&gt;Alice Smith&lt;/z:name&gt;
      &lt;z:street&gt;123 Maple Street&lt;/z:street&gt;
      &lt;z:city&gt;Mill Valley&lt;/z:city&gt;
      &lt;z:state&gt;CA&lt;/z:state&gt;
      &lt;z:zip&gt;90952&lt;/z:zip&gt;
    &lt;/z:Address&gt;
  &lt;/shipTo&gt;
&lt;/PurchaseOrder&gt;</PRE>

<H2 class="dtH2">Omitting Prefixes</H2>

<P>You can also omit a prefix to a namespace, which can make for more legible documents. In the following example, by omitting the prefix from the namespace declaration, you indicate that any child element without a prefix is defined by the specified namespace.</P>

<PRE class="code">&lt;PurchaseOrder&gt;
  &lt;shipTo&gt;
    &lt;Address xmlns="http://contoso.com/stuff.xml"&gt;
      &lt;name&gt;Alice Smith&lt;/name&gt;
      &lt;street&gt;123 Maple Street&lt;/street&gt;
      &lt;city&gt;Mill Valley&lt;/city&gt;
      &lt;state&gt;CA&lt;/state&gt;
      &lt;zip&gt;90952&lt;/zip&gt;
    &lt;/Address&gt;
  &lt;/shipTo&gt;
&lt;/PurchaseOrder&gt;</PRE>

<P>Namespace prefixes are only for intra-document bookkeeping. The corresponding namespace URI is what is important, so all four of the <B>Address</B> elements in the preceding examples mean exactly the same thing.</P>

<P>Although the <B>Address</B> element has been identified as being defined by the schema <B>http://contoso.com/stuff.xml</B>, <B>PurchaseOrder</B> has not been similarly tied to a schema. To do this, assuming a schema named <B>http://fabrikam.com/PO.xml</B> defines a <B>PurchaseOrder</B>, you can write the following.</P>

<PRE class="code">&lt;PurchaseOrder xmlns="http://fabrikam.com/PO.xml"&gt;
  &lt;shipTo&gt;
    &lt;Address xmlns="http://contoso.com/stuff.xml"  &gt;
      &lt;name&gt;Alice Smith&lt;/name&gt;
      &lt;street&gt;123 Maple Street&lt;/street&gt;
      &lt;city&gt;Mill Valley&lt;/city&gt;
      &lt;state&gt;CA&lt;/state&gt;
      &lt;zip&gt;90952&lt;/zip&gt;
    &lt;/Address&gt;
  &lt;/shipTo&gt;
  &lt;orderDate&gt;1999-05-20&lt;/orderDate&gt;
  &lt;shipDate&gt;1999-05-25&lt;/shipDate&gt;
  &lt;comments&gt;
     Get these things to me in a hurry, my lawn is going wild!
  &lt;/comments&gt;
  &lt;Items&gt;
    &lt;Item&gt;
      &lt;productName&gt;Lawnmower, model BUZZ-1&lt;/productName&gt;
      &lt;quantity&gt;1&lt;/quantity&gt;
      &lt;price&gt;148.95&lt;/price&gt;
    &lt;/Item&gt;
    &lt;Item&gt;
      &lt;productName&gt;Baby Monitor, model SNOOZE-2&lt;/productName&gt;
      &lt;quantity&gt;1&lt;/quantity&gt;
      &lt;price&gt;39.98&lt;/price&gt;
    &lt;/Item&gt;
  &lt;/Items&gt;
&lt;/PurchaseOrder&gt;</PRE>

<P>This declares that the <B>PurchaseOrder</B> element and all elements it contains are defined within the schema <B>http://fabrikam.com/PO.xml</B>, except for <B>Address</B> and the elements it contains, which are defined within <B>xmlns="http://contoso.com/stuff.xml</B>. In both cases, explicit prefixes are omitted.</P>

<H2 class="dtH2">Multiple Namespaces</H2>

<P>You can declare multiple namespaces on a single element. You can also use several prefixes to refer to the same namespace. The following example demonstrates this can be done and shows that this document is functionally equivalent to the previous one.</P>

<PRE class="code">&lt;PurchaseOrder xmlns:a="http://fabrikam.com/PO.xml"
xmlns:b="http://contoso.com/stuff.xml"
xmlns:c="http://contoso.com/stuff.xml"&gt;
  &lt;a:shipTo&gt;
    &lt;b:Address &gt;
      &lt;c:name&gt;Alice Smith&lt;/c:name&gt;
      &lt;b:street&gt;123 Maple Street&lt;/b:street&gt;
      &lt;c:city&gt;Mill Valley&lt;/c:city&gt;
      &lt;b:state&gt;CA&lt;/b:state&gt;
      &lt;c:zip&gt;90952&lt;/c:zip&gt;
    &lt;/b:Address&gt;
  &lt;/a:shipTo&gt;
  &lt;a:orderDate&gt;1999-05-20&lt;/a:orderDate&gt;
  &lt;a:shipDate&gt;1999-05-25&lt;/a:shipDate&gt;
  &lt;a:comments&gt;
      Get these things to me in a hurry, my lawn is going wild!
  &lt;/a:comments&gt;
  &lt;a:Items&gt;
    &lt;a:Item&gt;
      &lt;a:productName&gt;Lawnmower, model BUZZ-1&lt;/a:productName&gt;
      &lt;a:quantity&gt;1&lt;/a:quantity&gt;
      &lt;a:price&gt;148.95&lt;/a:price&gt;
    &lt;/a:Item&gt;
    &lt;a:Item&gt;
      &lt;a:productName&gt;Baby Monitor&lt;/a:productName&gt;
      &lt;a:quantity&gt;1&lt;/a:quantity&gt;
      &lt;a:price&gt;39.98&lt;/a:price&gt;
    &lt;/a:Item&gt;
  &lt;/a:Items&gt;
&lt;/a:PurchaseOrder&gt;</PRE>

<H2 class="dtH2">Open Content Model</H2>

<P>If a document schema has elements with an open content model, you can include elements not mentioned in the original schema, provided they are assigned to a specific namespace, either with a default namespace in scope or with a prefix. You can also include undefined attributes in an element, provided the attribute is qualified by a prefix and the prefix is in scope. For example, suppose that a third schema defines an element called <B>trackingInformation</B>. Because <B>PurchaseOrder</B> is defined as having an open content model, you can simply add this element directly to the instance.</P>

<PRE class="code">&lt;PurchaseOrder xmlns="http://fabrikam.com/PO.xml"&gt;
  &lt;shipTo&gt;
    &lt;Address xmlns="http://contoso.com/stuff.xml"&gt;
      &lt;name&gt;Denise Smith&lt;/name&gt;
      &lt;street&gt;123 Maple Street&lt;/street&gt;
      &lt;city&gt;Mill Valley&lt;/city&gt;
      &lt;state&gt;CA&lt;/state&gt;
      &lt;zip&gt;90952&lt;/zip&gt;
    &lt;/Address&gt;
  &lt;/shipTo&gt;
  &lt;orderDate&gt;1999-05-20&lt;/orderDate&gt;
  &lt;shipDate&gt;1999-05-25&lt;/shipDate&gt;
  &lt;comments&gt;
      Get these things to me in a hurry. My lawn is going wild!
  &lt;/comments&gt;
  &lt;Items&gt;
    &lt;Item&gt;
      &lt;productName&gt;Lawnmower, model BUZZ-1&lt;/productName&gt;
      &lt;quantity&gt;1&lt;/quantity&gt;
      &lt;price&gt;148.95&lt;/price&gt;
    &lt;/Item&gt;
    &lt;Item&gt;
      &lt;productName&gt;Baby Monitor, model SNOOZE-2&lt;/productName&gt;
      &lt;quantity&gt;1&lt;/quantity&gt;
      &lt;price&gt;39.98&lt;/price&gt;
    &lt;/Item&gt;
  &lt;/Items&gt;
  &lt;trackingInformation xmlns="http://example.microsoft.com/tracking.xml"&gt;
    &lt;route&gt;1234-5678&lt;/route&gt;
    &lt;signature&gt;32143912850-3959159=1395&lt;/signature&gt;
  &lt;/trackingInformation&gt;
&lt;/PurchaseOrder&gt;</PRE>

<P>Because namespace qualification is required for any undefined attribute or element, the <B>trackingInformation</B> element would not have been valid if its <B>xmlns</B> attribute had been omitted.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
