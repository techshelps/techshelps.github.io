<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Preserving Markup Characters by Using CDATA Sections</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconpreservingmarkupcharactersbyusingcdatasections"></A>Preserving Markup Characters by Using CDATA Sections</H1>

<P>CDATA sections within an XML document can contain markup elements common to XML, without affecting whether the document is well-formed. For example, if you want to include a mathematical XML application using the &lt; and &gt; characters to refer to less-than and greater-than, you can use a CDATA section.</P>

<P>To specify that a given element in the result tree will contain a CDATA section, include the element name as a value of the <code class="ce">cdata-section-elements</code> attribute of the <code class="ce">&lt;xsl:output&gt;</code> element. The CDATA section created in this way will preserve white space and character entities.</P>

<H4 class="dtH4">Example</H4>

<P>The XSLT processor scans the result tree, making a CDATA section of each item in the <code class="ce">cdata-section-elements</code> attribute.</P>

<P>To create the CDATA section, the elements listed as values of the <code class="ce">cdata-section-elements</code> attribute must be elements in the result tree, not the source tree. In the preceding examples, the Microsoft JScript&reg; code appears as a text node within the source tree's <code class="ce">&lt;scriptcode&gt;</code> element, but <code class="ce">the cdata-section-elements</code> attribute refers to and affects <code class="ce">&lt;script&gt;</code> elements in the result tree.</P>

<P>HTML does not recognize CDATA sections. Do not use this option when generating HTML.</P>

<P class="label"><B>XML File (cdata.xml)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;?xml-stylesheet type="text/xsl" href="cdata.xsl" ?&gt;
&lt;document&gt;
<B>&lt;scriptcode</B> language="JScript"&gt;
function message(msg){
alert(msg);
}
&lt;/scriptcode&gt;
&lt;/document&gt;</PRE>

<P class="label"><B>XSLT File (cdata.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:output <code><b class="cfe">cdata-section-elements="script"</b></code>/&gt;

&lt;xsl:template <B>match="scriptcode"</B>&gt;
&lt;document&gt;
&lt;script language="JScript"&gt;
&lt;xsl:value-of select="."/&gt;
&lt;/script&gt;
&lt;/document&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P>None (blank).</P>

<P class="label"><B>Processor Output</B></P>

<PRE class="code">&lt;?xml version="1.0" encoding="UTF-16"?&gt;&lt;document&gt;&lt;script language="JScript"&gt;&lt;![CDATA[
function message(msg){
alert(msg);
}
]]&gt;&lt;/script&gt;&lt;/document&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_concepts_2ayb.htm">CDATA Sections</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
