<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Navigating Along the namespace Axis</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconnavigatingalongthenamespaceaxis"></A>Navigating Along the namespace Axis</H1>

<P>When the context node is an element, the <code class="ce">namespace::</code> axis will locate all namespace nodes which apply to that element. The <code class="ce">namespace:: </code>axis can be used only with elements, and locates only namespace nodes.</P>

<P>A typical XSLT style sheet for use with Microsoft Internet Explorer declares two namespaces: one for elements in the XSLT namespace itself, and one for elements in the HTML 4.0 namespace. Although our sample <B>orgchart.xml </B>document contains no namespace declarations, the following XSLT style sheet, <B>namespace.xsl</B>, can be used with any source XML document which does contain them. </P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">&lt;?xml-stylesheet?&gt;</code> processing instruction refers to this style sheet itself. Therefore you can even open this style sheet directly in Internet Explorer.</BLOCKQUOTE>

<P>The <B>namespace.xsl</B> style sheet contains three template rules:

<UL type="disc">
	<LI>The template rule <code class="ce">&lt;xsl:template match="/"&gt;</code> sets up basic HTML elements in the result tree.</li>

	<LI>The template rule <code class="ce">&lt;xsl:template match="text()"/&gt;</code> suppresses all text nodes.</li>

	<LI>The template rule <code class="ce">&lt;xsl:template match="*"&gt;</code> matches all element nodes. For each element:
<UL type="disc">
	<LI>A heading is instantiated in the result tree, Namespaces in effect for <code class="ce">&lt;elementname&gt;</code> element:.</li>

	<LI>A table is created consisting of two rows. Row 1 is the table column headings: Local name, Namespace URI, and Namespace node(s). Row 2 shows, the value of the <code class="ce">local-name()</code> function for the context node; the value of the <code class="ce">namespace-uri()</code> function for the context node; and the value(s) of any namespace node(s) in scope for the context node, each on a separate line.</li>
</UL>
</li>
</UL>

<H4 class="dtH4">Example</H4>

<P>Regardless of the namespace URI, which applies to a given element name (shown in the second column), each element has a namespace node (third column, the nodes along the <code class="ce">namespace::</code> axis) for every namespace that it or any of its ancestors declares.</P>

<P class="label"><B>XML File (nsdemo.xml)</B></P>

<PRE class="code">&lt;?xml version="1.0" ?&gt;
&lt;?xml-stylesheet type="text/xsl" href="namespace.xsl" ?&gt;
&lt;nsdemo
    xmlns:ns="http://uri.for.ns-prefix"
    xmlns="http://uri.for.no-prefix"&gt;
    &lt;branch1&gt;
        &lt;ns:sub_branch1.1/&gt;
        &lt;sub_branch1.2/&gt;
    &lt;/branch1&gt;
    &lt;branch2 xmlns:ns2="http://uri.for.ns2-prefix"&gt;
        &lt;ns:sub_branch2.1/&gt;
        &lt;sub_branch2.2/&gt;
        &lt;ns2:sub_branch2.3/&gt;
    &lt;/branch2&gt;
&lt;/nsdemo&gt;</PRE>

<P class="label"><B>XSLT File (namespace.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="namespace.xsl" ?&gt;
&lt;xsl:stylesheet version="1.0" 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns="http://www.w3.org/TR/REC-html40" &gt;

    &lt;xsl:template match="/"&gt;
        &lt;html&gt;
            &lt;head&gt;&lt;title&gt;Namespaces in XSLT Style Sheet&lt;/title&gt;&lt;/head&gt;
            &lt;body&gt;
                &lt;xsl:apply-templates /&gt;
            &lt;/body&gt;
            &lt;/html&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match="text()"/&gt;

    &lt;xsl:template match="*"&gt;
        &lt;h3&gt;Namespaces in effect for &amp;lt;&lt;xsl:value-of select="name()"/&gt;&amp;gt; element:&lt;/h3&gt;
        &lt;table border="1"&gt;
            &lt;tr&gt;
                &lt;th&gt;Local-name&lt;/th&gt;
                &lt;th&gt;Namespace-uri&lt;/th&gt;
                &lt;th&gt;Namespace node(s)&lt;/th&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td valign="top"&gt;&lt;xsl:value-of select="local-name()"/&gt;&lt;/td&gt;
                &lt;td valign="top"&gt;&lt;xsl:value-of select="namespace-uri()"/&gt;&lt;/td&gt;
                &lt;td valign="top"&gt;
                    &lt;xsl:for-each select="<code><b class="cfe">namespace::*</b></code>"&gt;
                        &lt;xsl:value-of select="."/&gt;&lt;br /&gt;
                    &lt;/xsl:for-each&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
        &lt;/table&gt;
          &lt;xsl:apply-templates/&gt;
    &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="xsltnamespace1.gif" ALT="" BORDER=0></P>

<P class="fig"><IMG SRC="xsltnamespace2.gif" ALT="" BORDER=0></P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xpath_hdi_2_4ldf.htm">Sample XML File for Navigating XPath Axes</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
