<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Overview of the DOM to SAX Example</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="sax_domtosax_overview"></A>Overview of the DOM to SAX Example</H1>

<P>The DOM to SAX example is Microsoft&reg; Visual Basic&reg; code that executes when you click a command button on the application form. The code in this example performs the following tasks:

<UL type="disc">
	<LI>Creates <code class="ce">DOMDocument</code><B>, </B><code class="ce">SAXXMLReader</code>, and <code class="ce">MXXMLWriter</code> objects.</li>

	<LI>Sets the XML writer (<code class="ce">wrt</code>) object for the value of the <code class="ce">ContentHandler</code> property of the SAX reader (<code class="ce">rdr</code>) object.</li>

	<LI>Passes the DOM document (<code class="ce">xmlDoc</code>) object to the <code class="ce">parse</code> method of the SAX reader.</li>

	<LI>Writes the results of the SAX events to the <code class="ce">output</code> property of the SAX writer.</li>

	<LI>Displays the SAX writer output using a Visual Basic text box control on the application form.</li>
</UL>

<P class="labelproc"><B>To run the code sample</B>

<OL type="1">
	<LI>Copy the <A HREF="sdk_booksxml_30rw.htm">sample XML file (books.xml)</A> and paste it into a text file. Save the file as <B>books.xml</B>.</li>

	<LI>Create a Standard EXE project in Visual Basic. Save the empty project as <B>dom2sax.vbp</B> to the same directory where you saved <B>books.xml</B>. Name the form file using the default name of <B>Form1.frm</B>.</li>

	<LI>Create a reference to MSXML 5.0. To do this, select <B>References...</B> from the <B>Project</B> menu, and then check the box for <B>Microsoft XML, v5.0</B>.</li>

	<LI>Double click on the <B>TextBox</B> icon from the tools menu. A <B>TextBox</B> control will appear on the project's form named Text1. In the properties for Text1, set the <B>ScrollBars</B> property to a value of "2 - Vertical" and set the <B>MultiLine</B> property to True.</li>

	<LI>From the <B>View</B> menu, click <B>Code</B>.</li>

	<LI>Copy the Visual Basic code listing above, and paste it into the Visual Basic code editor, replacing any code already there.</li>

	<LI>From the <B>Run</B> menu, click <B>Start</B>.</li>

	<LI>Verify that the output is the same (pass-through) as the contents of the original <B>books.xml</B>. To view the contents of the output more easily, resize the application form as needed.</li>
</OL>

<H2 class="dtH2">Complete Code for the DOM to SAX Example</H2>

<PRE class="code">Private Function HandleErrors()
    MsgBox Err.Description
End Function

Private Sub Form_Resize()
    'Resize text box to size of form.
    Text1.Width = Form1.Width - 350
    Text1.Height = Form1.Height - 750
End Sub

Private Sub Form_Load()

    'Resize text box to size of form.
    Text1 = "&lt;?xml version=""1.0""?&gt;" &amp; vbCrLf
    Text1.Top = 100
    Text1.Left = 100
    Text1.Width = Form1.Width - 350
    Text1.Height = Form1.Height &#0150; 750
    'Create a DOMDocument object.
    Dim xmlDoc As New DOMDocument50
    'Create the SAX reader.
    Dim rdr As New SAXXMLReader50
    'Create the XML writer.
    Dim wrt As New MXXMLWriter50

    On Error GoTo errorHandler

    'Load the DOM document.
    xmlDoc.async = False
    xmlDoc.Load  App.Path &amp; "\books.xml"

    'Set properties on the XML writer.
    wrt.byteOrderMark = True
    wrt.omitXMLDeclaration = True
    wrt.indent = True

    'Set the XML writer to the SAX content handler.
    Set rdr.contentHandler = wrt
    Set rdr.dtdHandler = wrt
    Set rdr.errorHandler = wrt
    rdr.putProperty "http://xml.org/sax/properties/lexical-handler", wrt
    rdr.putProperty "http://xml.org/sax/properties/declaration-handler", wrt

    'Parse the DOMDocument object.
    rdr.parse xmlDoc

    'Show the results in the text box.
    Text1.Text = Text1.Text &amp; wrt.output

    Exit Sub

errorHandler:
    HandleErrors
End Sub</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_devgd_hdi_domtosax_6zle.htm">Passing a DOMDocument Object as a Parse() Parameter</A> | <A HREF="sax_isaxxmlreader_6nmt.htm">ISAXXMLReader Interface</A> | <A HREF="sax_isaxxmlreader_4zvo.htm">parse Method</A> | <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A> | <A HREF="sdk_booksxml_30rw.htm">Sample XML File (books.xml)</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
