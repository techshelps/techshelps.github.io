<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using ServerXMLHTTP in a Multitiered Environment</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmobjxmldomserverxmlhttp_multitiered"></A><SUP></SUP>Using ServerXMLHTTP in a Multitiered Environment</H1>

<P>The following example shows how <code class="ce">ServerXMLHTTP</code> can be used to access a news service on a backend server and deliver it to a Web client.</P>

<H2 class="dtH2">Request on the Presentation Tier</H2>

<P>A simple Web page, <B>latestnews.asp</B>, contains a link to the <B>ServerXMLHTTP.asp</B> page on the business tier server.</P>

<PRE class="code">&lt;html&gt;
&lt;head&gt;
   &lt;title&gt;Latest News&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;a href="http://myserver/myproject/ServerXMLHttp.asp"&gt;Latest News&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;</PRE>

<H2 class="dtH2">Request on the Business Tier</H2>

<P>The <B>ServerXMLHTTP.asp</B> page resides on the business or middle tier. This page contains Microsoft&reg; JScript&reg; that opens a connection to a <B>NewsService.asp</B> page on a server at the data services tier.</P>

<PRE class="code">&lt;%@language=JScript%&gt;
&lt;% 
var srvXMLHTTP
srvXMLHTTP = Server.CreateObject("Msxml2.ServerXMLHTTP.5.0");
srvXMLHTTP.open ("GET", "http://dataserver/news/NewsService.asp", false);
srvXmlHttp.send(); 
newsElement = srvXMLHTTP.responseXML.selectSingleNode("/news/story1");
%&gt;

&lt;html&gt;
&lt;body&gt;
&lt;p&gt;Top News Story&lt;p&gt;
&lt;%Response.Write(newsElement.text);%&gt;
&lt;/body&gt;
&lt;/html&gt;</PRE>

<H2 class="dtH2">Response on the Data Services Tier</H2>

<P>The <B>NewsService.asp</B> page resides on the data services or middle tier. This page contains JScript that loads an XML document, <B>news.xml</B>, into a <code class="ce">DOMDocument</code> object named <code class="ce">Result</code>, and then saves the object directly to the <B>Response</B> object, which is returned to <B>ServerXMLHTTP.asp</B> on the business tier.</P>

<PRE class="code">&lt;%@language=JScript%&gt;
&lt;%
var Result = Server.CreateObject("Msxml2.DOMDocument.5.0");
Result.async = false;
Result.load(Server.MapPath("news.xml"));
Response.ContentType = "text/xml";
Result.save(Response);
%&gt;</PRE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;A document comprised of the latest news stories collected by a news service can be quite large. For this example, the <B>news.xml</B> document loaded by <B>NewsService.asp</B> is small and simple.</BLOCKQUOTE>

<PRE class="code">&lt;?xml version ="1.0"?&gt;
&lt;news&gt;
   &lt;story1&gt;Here is the top news story…&lt;/story1&gt;
   &lt;story2&gt;News is the next news story.&lt;/story2&gt;
&lt;/news&gt;</PRE>

<H2 class="dtH2">Response on the Business Tier</H2>

<P><B>ServerXMLHTTP.asp</B> handles the response on the business tier. In this case, <B>ServerXMLHTTP.asp</B> loads the response into the <code class="ce">xmlResult</code> (<code class="ce">DOMDocument</code>) object. The DOM selects a single node from the document using the <code class="ce">selectSingleNode</code> method of <code class="ce">DOMDocument</code>, setting the results to the <code class="ce">newsElement</code> object. The program then writes the text property of the <code class="ce">newsElement</code> object (along with HTML) to the Web page on the requesting client computer on the presentation tier.</P>

<PRE class="code">&lt;%@language=JScript%&gt;
&lt;% 
var srvXMLHTTP;
srvXMLHTTP = Server.CreateObject("Msxml2.ServerXMLHTTP.5.0");
srvXMLHTTP.open ("GET", "http://dataserver/news/NewsService.asp", false);
srvXMLHTTP.send(); 
newsElement = srvXMLHTTP.responseXML.selectSingleNode("/news/story1");
%&gt;

&lt;html&gt;
&lt;body&gt;
&lt;p&gt;Top News Story&lt;p&gt;
&lt;%Response.Write(newsElement.text);%&gt;
&lt;/body&gt;
&lt;/html&gt;</PRE>

<H2 class="dtH2">Response on the Presentation Tier</H2>

<P>The user sees the following output in the Web browser.</P>

<BLOCKQUOTE class="dtBlock">
Top News Story</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Here is the top news story…</BLOCKQUOTE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
