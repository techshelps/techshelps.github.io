<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>element</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xsdrefelementelement"></A>element</H1>

<P>Declares an element.</P>

<PRE class="syntax">&lt;element
  abstract = Boolean&nbsp;: false
  block = (#all | List of (extension | restriction | substitution))
  default = string
  final = (#all | List of (extension | restriction))
  fixed = string
  form = (qualified | unqualified)
  id = ID
  maxOccurs = (<I>nonNegativeInteger</I> | unbounded)&nbsp;: 1
  minOccurs = <I>nonNegativeInteger</I>&nbsp;: 1
  name = NCName
  nillable = <I>Boolean&nbsp;</I>: false
  ref = <I>QName</I>
  substitutionGroup = QName
  type = <I>QName</I>
  {any attributes with non-schema Namespace}…&gt;
Content: (annotation?, ((simpleType | complexType)?, (unique | key | 
keyref)*))
&lt;/element&gt;</PRE>

<H4 class="dtH4">Attributes</H4>

<DL>
<DT><B>abstract</B></DT>

<DD>An indicator of whether the element can be used in an instance document. If this value is <B>true</B>, the element cannot appear in the instance document. Instead, another element whose <B>substitutionGroup</B> attribute contains the qualified name (QName) of this element must appear in this element's place. More than one element can reference this element in its <B>substitutionGroup</B> attribute.

<P>The default is <B>false</B>.


<P>Optional.
</dd>

<DT><B>block</B></DT>

<DD>The type of derivation. The <B>block</B> attribute prevents an element that has the specified type of derivation from being used in place of this element. This value can contain <B>#all</B> or a list that is a subset of <B>extension</B>, <B>restriction</B>, or <B>substitution</B>.

<P class="fineprint">

<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=50%><B>extension</B></TD>
<TD width=50%>Prevents elements derived by extension from being used in place of this element.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>restriction</B></TD>
<TD width=50%>Prevents elements derived by restriction from being used in place of this element.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>substitution</B></TD>
<TD width=50%>Prevents elements derived by substitution from being used in place of this element.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>#all</B></TD>
<TD width=50%>Prevents all derived elements from being used in place of this element.</TD>
</TR>
</table></div>


<P class="fineprint">


<P>Optional.
</dd>

<DT><B>default</B></DT>

<DD>The default value of the element if its content is a simple type or its content is textOnly.

<P>The <B>fixed</B> and <B>default</B> attributes are mutually exclusive.


<P>If the element contains a simple type, this value must be a valid value of that type.


<P>Optional.
</dd>

<DT><B>substitutionGroup</B></DT>

<DD>The name of an element for which this element can be substituted. This element must have the same type or a type derived from the type of the specified element.

<P>This attribute can be used on any element if the referring element is declared at the global level (parent is <B>schema</B> element).


<P>This value must be a QName.


<P>Optional.
</dd>

<DT><B>final</B></DT>

<DD>The type of derivation. The <B>final</B> attribute sets the default value of the <B>final</B> attribute on the <B>element</B> element. This value can contain <B>#all</B> or a list that is a subset of <B>extension</B> or <B>restriction</B>.

<P class="fineprint">

<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=50%><B>extension</B></TD>
<TD width=50%>Prevents elements derived by extension from being used in place of this element.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>restriction</B></TD>
<TD width=50%>Prevents elements derived by restriction from being used in place of this element.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>#all</B></TD>
<TD width=50%>Prevents all derived elements from being used in place of this element.</TD>
</TR>
</table></div>


<P class="fineprint">


<P>Prohibited if the containing element is not the <B>schema</B> element.


<P>Optional.
</dd>

<DT><B>fixed</B></DT>

<DD>The predetermined, unchangeable value of the element if its content is a simple type or its content is textOnly.

<P>The <B>fixed</B> and <B>default</B> attributes are mutually exclusive.


<P>Optional.
</dd>

<DT><B>form</B></DT>

<DD>The form for the element. The default value is the value of the <B>elementFormDefault</B> attribute of the <B>schema</B> element containing the attribute. The value must be one of the following strings: "qualified" or "unqualified".

<P>If the value is unqualified, this element is not required to be qualified with the namespace prefix.


<P>If the value is qualified, this element must be qualified with the namespace prefix.


<P>Optional.
</dd>

<DT><B>id</B></DT>

<DD>The ID of this element. The <B>id</B> value must be of type ID and be unique within the document containing this element.

<P>Optional.
</dd>

<DT><B>maxOccurs</B></DT>

<DD>The maximum number of times the element can occur within the containing element. The value can be an integer greater than or equal to zero. To set no limit on the maximum number, use the string "unbounded".

<P>Prohibited if the containing element is the <B>schema</B> element.


<P>Optional.
</dd>

<DT><B>minOccurs</B></DT>

<DD>The minimum number of times the element can occur within the containing element. The value can be an integer greater than or equal to zero. To specify that this element is optional, set this attribute to zero.

<P>Prohibited if the containing element is the <B>schema</B> element.


<P>Optional.
</dd>

<DT><B>name</B></DT>

<DD>The name of the element. The name must be a no-colon-name (NCName) as defined in the XML Namespaces specification. <B>Name</B> and <B>ref</B> attributes cannot both be present.

<P>Required if the containing element is the <B>schema</B> element.


<P>Optional.
</dd>

<DT><B>nillable</B></DT>

<DD>The indicator of whether an explicit nil value can be assigned to the element. This applies to element content and not the attributes of the element. The default is <B>false</B>.

<P>If <B>nillable</B> is <B>true</B>, this enables an instance of the element to have the <B>nil</B> attribute set to <B>true</B>. The <B>nil</B> attribute is defined as part of the XML Schema namespace for instances.


<P>For example, the following fragment defines a single element with <B>nillable</B> set to <B>true</B>.


<PRE class="code">&lt;xs:element name="myDate" type="xs:date" nillable="true"/&gt;</PRE>


<P>The following fragment uses that element and has an explicit nil value (<B>nil</B> attribute set to <B>true</B>).


<PRE class="code">&lt;myDate xsi:nil="true"&gt;&lt;/myDate&gt;</PRE>


<P>Optional.
</dd>

<DT><B>ref</B></DT>

<DD>The name of an element declared in this schema (or another schema indicated by the specified namespace). The <B>ref</B> value must be a QName. The <B>ref</B> can include a namespace prefix.

<P>Prohibited if the containing element is the <B>schema</B> element.


<P>If the <B>ref</B> attribute is present, <B>complexType</B>, <B>simpleType</B>, <B>key</B>, <B>keyref</B>, and <B>unique</B> elements and <B>nillable</B>, <B>default</B>, <B>fixed</B>, <B>form</B>, <B>block</B>, and <B>type</B> attributes cannot be present. 


<PRE class="code">&lt;xs:element ref="comment"/&gt;</PRE>


<P>Optional.
</dd>

<DT><B>type</B></DT>

<DD>Either the name of a built-in data type, or the name of a <A HREF="xsd_ref_7xpw.htm">simpleType</A> or <A HREF="xsd_ref_9qpg.htm">complexType</A> element defined in this schema (or another schema indicated by the specified namespace). The supplied value must correspond to the <B>name</B> attribute on the <B>simpleType</B> or <B>complexType</B> element that is referenced.

<P>The <B>type</B> and <B>ref</B> attributes are mutually exclusive.


<P>To declare an element using an existing simple type or complex type definition, use the <B>type</B> attribute to specify the existing type.


<PRE class="code">&lt;xs:element name="name" type="xs:string"/&gt;</PRE>


<P>Optional.
</dd>
</DL>

<H4 class="dtH4">Element Information</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=34%><B>Number of occurrences</B></TD>
<TD width=66%>Number of elements defined in the schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Parent elements</B></TD>
<TD width=66%><A HREF="xsd_ref_1m9g.htm">schema</A>, <A HREF="xsd_ref_5yes.htm">choice</A>, <A HREF="xsd_ref_6hys.htm">all</A>, <A HREF="xsd_ref_1otw.htm">sequence</A></TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Contents</B></TD>
<TD width=66%><A HREF="xsd_ref_7xpw.htm">simpleType</A>, <A HREF="xsd_ref_9qpg.htm">complexType</A>, <A HREF="xsd_ref_6pv8.htm">key</A>, <A HREF="xsd_ref_0mes.htm">keyref</A>, <A HREF="xsd_ref_7md0.htm">unique</A></TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Remarks</H4>

<P>An element declaration associates a name with a type definition, which can be a built-in data type, a simple type, or a complex type.</P>

<P>Element declarations can be present as child elements of the <B>schema</B> element (having global scope) or within complex type definitions. Within complex types, element declarations can be present as local declarations or references to elements with global scope.</P>

<P>Global element declarations must directly define complex types.</P>

<P>A <B>simpleType</B> or <B>complexType</B> element can be present as a child only if both the <B>ref</B> and <B>type</B> attributes are not present.</P>

<P>In addition, elements can appear by reference within <B>choice</B>, <B>all</B>, <B>sequence</B>, and <B>complexType</B> elements.</P>

<H4 class="dtH4">Examples</H4>

<P>The following example contains two elements that can serve as substitutes for another element.</P>

<PRE class="code">&lt;xs:element name="cat" type="xs:string"/&gt;
&lt;xs:element name="dog" type="xs:string"/&gt;
&lt;xs:element name="redDog" type="xs:string"
    substitutionGroup="dog" /&gt;
&lt;xs:element name="brownDog" type="xs:string"
    substitutionGroup ="dog" /&gt;

&lt;xs:element name="pets"&gt;
  &lt;xs:complexType&gt;
    &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
      &lt;xs:element ref="cat"/&gt;
      &lt;xs:element ref="dog"/&gt;
    &lt;/xs:choice&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:element&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_ref_7gh1.htm">XML Schema Reference (XSD)</A> | <A HREF="xsd_ref_1yer.htm">XML Schema Elements</A> </P>

<P>For more information, see the W3C XML Schema Part 1: Structures Recommendation at http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-element.</P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://www.w3.org/TR/REC-xml-names">W3C Namespaces in XML Recommendation</A> | <A HREF="http://www.w3.org/1999/XMLSchema-instance">XML Schema Namespace for Instances</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
