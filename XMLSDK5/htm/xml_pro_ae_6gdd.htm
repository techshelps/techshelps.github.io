<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>data Property (IXMLDOMCharacterData)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmprodata"></A>data Property (IXMLDOMCharacterData)</H1>

<P>Stores the node data depending on the node type.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">strValue = oXMLDOMCharacterData.data;
objXMLDOMCharacterData.data = strValue;</PRE>

<H4 class="dtH4">Example</H4>

<P>The following script example walks the document tree and checks for comment node types. If one is found, it displays its contents with the <code class="ce">data</code> property.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var comment;
var root;
xmlDoc.async = false;
xmlDoc.loadXML("&lt;root&gt;&lt;!-- Hello --&gt;&lt;/root&gt;");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;root = xmlDoc.documentElement;
&nbsp;&nbsp;&nbsp;for (var i=0; i&lt;root.childNodes.length; i++) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (root.childNodes.item(i).nodeType == 8) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comment = root.childNodes.item(i);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(comment.data);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">strValue = oXMLDOMCharacterData.data
objXMLDOMCharacterData.data = strValue</PRE>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft&reg; Visual Basic&reg; example walks the document tree and checks for comment node types. If one is found, it displays its contents with the <code class="ce">data</code> property.</P>

<PRE class="code">Dim xmlDoc As New DOMDocument50
Dim comment As IXMLDOMComment
Dim root As IXMLDOMElement
xmlDoc.async = False
xmlDoc.loadXML ("&lt;root&gt;&lt;!-- Hello --&gt;&lt;/root&gt;")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set root = xmlDoc.documentElement
&nbsp;&nbsp;&nbsp;For i = 0 To (root.childNodes.length - 1)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If root.childNodes.Item(i).nodeType = NODE_COMMENT Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set comment = root.childNodes.Item(i)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox comment.Data
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End If
&nbsp;&nbsp;&nbsp;Next
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT get_data(
    BSTR *strData);
HRESULT put_data(
    BSTR strData);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>strData</I> [out, retval][in]</DT>

<DD>The same value as the <code class="ce">nodeValue</code> for this node.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>S_FALSE (for <code class="ce">get_data</code> only)</DT>

<DD>The value returned if there is no character data node.</dd>

<DT>E_INVALIDARG (for <code class="ce">get_data</code> only)</DT>

<DD>The value returned if the <code class="ce">data</code> parameter is Null.</dd>

<DT>E_FAIL (for <code class="ce">put_data</code> only)</DT>

<DD>The value returned if an error occurs.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>String. The property is read/write. It contains the same value as the <code class="ce">nodeValue</code> for this node. The meaning of the value depends on the <code class="ce">nodeType</code> property of the <code class="ce">IXMLDOMNode</code>, as follows.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=34%>NODE_CDATA_SECTION</TD>
<TD width=66%>A string representing the text stored in the CDATA section.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>NODE_COMMENT</TD>
<TD width=66%>The content of the comment, exclusive of the comment start and end sequence.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>NODE_TEXT</TD>
<TD width=66%>A string representing the text stored in the text node.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A> | <A HREF="xml_pro_no_5zvp.htm">nodeType Property</A> | <A HREF="xml_pro_no_7sth.htm">nodeValue Property</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomcdatasection_4u9a.htm">IXMLDOMCDATASection</A> | <A HREF="xml_obj_ixmldomcharacterdata_4ov5.htm">IXMLDOMCharacterData</A> | <A HREF="xml_obj_ixmldomcomment_40ac.htm">IXMLDOMComment</A> | <A HREF="xml_obj_ixmldomtext_8sxg.htm">IXMLDOMText</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
