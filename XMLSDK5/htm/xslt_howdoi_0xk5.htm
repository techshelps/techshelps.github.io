<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Process Multiple XML Documents</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xslt_hdi_process_multiple"></A>Process Multiple XML Documents</H1>

<P>You can incorporate XML from external documents by using the <code class="ce">document()</code> function. This function takes as an argument either the relative or absolute URL of the document you want to retrieve. The URL is specified as a string or as a node in which the text value of that node resolves to a URL. For example, the following statement loads the <B>Ancillary.xml</B> document and holds it in the <code class="ce">ancillary</code> variable.</P>

<PRE class="code">&lt;xsl:<B>variable</B> name="<B>ancillary</B>" select="<B>document('ancillary.xml')</B>"/&gt;</PRE>

<P>The <B>Ancillary.xml</B> document is located in the same directory as the original source XML document, and returns the resulting node set in the variable named <code class="ce">ancillary</code>. Alternatively, you could declare this ancillary document in the <B>Sales.xml</B> file:</P>

<PRE class="code">...
&lt;sales&gt;
   &lt;ancillary_doc href="ancillary.xml"/&gt;
...
&lt;/sales&gt;</PRE>

<P>In this case, you would reference it in <B>Transform.xsl</B> as follows:</P>

<PRE class="code">&lt;xsl:<B>variable</B> name="<B>ancillary</B>" select="<B>document(//ancillary_doc/@href)</B>"/&gt;</PRE>

<P>In the first case, the argument of the document function is a string. In the second case, the argument is a node set.</P>

<P>With <code class="ce">document()</code>, you load the entire contents of the document, and then select elements from the document by using XML Path Language (XPath) expressions.</P>

<P>In this exercise, first you will create the external document, <B>Ancillary.xml</B>. This document contains a watermark and a copyright notice for the sales report. Then you will add code to <B>Transform.xsl</B> to retrieve the <B>Ancillary.xml</B> file and format the data in that file.</P>

<P class="labelproc"><B>To create Ancillary.xml</B>

<OL type="1">
	<LI>In your HTML or text editor, open a new, empty file.</li>

	<LI>Add the following code to the file:
<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;document&gt;
   &lt;watermark&gt;Scootney Publishing&lt;/watermark&gt;
   &lt;copyright&gt;Copyright 2000, Scootney Publishing. All Rights Reserved.&lt;/copyright&gt;
&lt;/document&gt;</PRE>
</li>

	<LI>In the same folder as <B>Sales.xml</B>, save the file as <B>Ancillary.xml.</B> Then close the file.</li>
</OL>

<P class="labelproc"><B>To update Transform.xsl to extract data from Ancillary.xml</B>

<OL type="1">
	<LI>In your HTML or text editor, open <B>Transform.xsl</B> and locate the <code class="ce">&lt;body&gt;</code> line.</li>

	<LI>Immediately below the <code class="ce">&lt;body&gt;</code> line, add the following code:
<PRE class="code">&lt;xsl:<B>variable</B> name="<B>ancillary</B>" select="<B>document('ancillary.xml')</B>"/&gt;</PRE>

<P>This loads the <B>Ancillary.xml</B> document and returns the resulting node set in the variable named <code class="ce">ancillary</code>.
</li>

	<LI>Directly below the line that you just added, add the following code:
<PRE class="code">&lt;DIV style="position:absolute;font-size:96;font-family:Times New Roman;
      color:#F0F0F0;<B>z-index:-1</B>"&gt;
   &lt;xsl:value-of select="<B>$ancillary//watermark</B>"/&gt;
&lt;/DIV&gt;</PRE>

<P>This code reads the &lt;<code class="ce">watermark&gt;</code> element from <B>Ancillary.xml</B> and formats the string it contains as a watermark. The XPath expression, <code class="ce">$ancillary//watermark</code>, resolves to all <code class="ce">&lt;watermark&gt;</code> elements in the <B>Ancillary.xml</B> file. 

<BLOCKQUOTE class="dtBlock">
<b class="le">Note&nbsp;&nbsp;&nbsp;</b>As an alternative to the variable declaration, you can accomplish the same effect by referencing the external XML document directly, as follows:</BLOCKQUOTE>

<PRE class="code"><code class="ce">&lt;xsl:value-of select="</code><code><b class="cfe">document('ancillary.xml'</b></code>)//watermark<code class="ce">"/&gt;</code></PRE>

<BLOCKQUOTE class="dtBlock">
However, using a variable to hold the external document is more efficient if you need to reference the document more than once, as is the case in this exercise.</BLOCKQUOTE>
</li>

	<LI>Immediately above the <code class="ce">&lt;/body&gt;</code> tag, add the following code:
<PRE class="code">&lt;DIV style="font-size:9"&gt;
   &lt;xsl:value-of select="<B>$ancillary//copyright</B>"/&gt;
&lt;/DIV&gt;</PRE>

<P>These lines insert and format the copyright notice string from <B>Ancillary.xml</B>.
</li>

	<LI>Save <B>Transform.xsl</B>.</li>
</OL>

<P class="labelproc"><B>To view the source and ancillary files</B>

<UL type="disc">
	<LI>In Internet Explorer, press F5 to refresh the display of <B>Sales.xml</B>. The page now looks like this:
<P class="fig1"><IMG SRC="xsltut04.gif" ALT="" BORDER=0>
</li>
</UL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
