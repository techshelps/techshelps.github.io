<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>setStartMode Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthsetstartmode"></A>setStartMode Method</H1>

<P>Performs subsets of larger XSL Transformations (XSLT) by selecting the XSLT mode with which to start. This minimizes the amount of XSLT processing.</P>

<P>The default value of the start mode is the empty string, "".</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">var xslt = new ActiveXObject("Msxml2.XSLTemplate.5.0");
var xslDoc = new ActiveXObject("Msxml2.FreeThreadedDOMDocument.5.0");
var xslProc;
xslDoc.async = false;
xslDoc.load("sample2.xsl");
xslt.stylesheet = xslDoc;
var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
xmlDoc.async = false;
xmlDoc.load("books.xml");
xslProc = xslt.createProcessor();
xslProc.input = xmlDoc;
xslProc.setStartMode("view");
xslProc.transform();
alert(xslProc.output);</PRE>

<P class="label"><B>File Name: Sample2.xsl</B></P>

<PRE class="code">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;
   &lt;xsl:output method="html"/&gt;
   &lt;xsl:param name="param1"/&gt;
  &lt;xsl:template match="/"&gt;
      Hello
  &lt;/xsl:template&gt;
  &lt;xsl:template match="/" mode="edit"&gt;
      In Edit Mode
  &lt;/xsl:template&gt;
  &lt;xsl:template match="/" mode="view"&gt;
      In View Mode
  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">objXSLProcessor.setStartMode(mode, namespaceURI);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>mode</I></DT>

<DD>The desired mode as a string. It must be the base name part of the qualified name.</dd>

<DT><I>namespaceURI</I> (optional)</DT>

<DD>The full namespace URI to fully qualify the start mode name.</dd>
</DL>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">objXSLProcessor.setStartMode(mode, namespaceURI)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>mode</I></DT>

<DD>The desired mode as a string. It must be the base name part of the qualified name.</dd>

<DT><I>namespaceURI</I> (optional)</DT>

<DD>The full namespace URI to fully qualify the start mode name.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<PRE class="code">Dim xslt As New Msxml2.XSLTemplate50
Dim xslDoc As New Msxml2.FreeThreadedDOMDocument50
Dim xmlDoc As New Msxml2.DOMDocument50
Dim xslProc As IXSLProcessor
xslDoc.async = False
xslDoc.Load "sample2.xsl"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set xslt.stylesheet = xslDoc

&nbsp;&nbsp;&nbsp;xmlDoc.async = False
&nbsp;&nbsp;&nbsp;xmlDoc.Load "books.xml"
&nbsp;&nbsp;&nbsp;If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
&nbsp;&nbsp;&nbsp;Else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set xslProc = xslt.createProcessor()
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xslProc.input = xmlDoc
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xslProc.setStartMode "view"

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xslProc.Transform
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox xslProc.output
&nbsp;&nbsp;&nbsp;End If
End If</PRE>

<P class="label"><B>File Name: Sample2.xsl</B></P>

<PRE class="code">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;
   &lt;xsl:output method="html"/&gt;
   &lt;xsl:param name="param1"/&gt;
  &lt;xsl:template match="/"&gt;
      Hello
  &lt;/xsl:template&gt;
  &lt;xsl:template match="/" mode="edit"&gt;
      In Edit Mode
  &lt;/xsl:template&gt;
  &lt;xsl:template match="/" mode="view"&gt;
      In View Mode
  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT setStartMode(BSTR mode, BSTR namespaceURI);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>mode</I> [in]</DT>

<DD>The desired mode as a string. It must be the base name part of the qualified name.</dd>

<DT><I>namespaceURI</I> [in, optional]</DT>

<DD>The full namespace URI to fully qualify the start mode name.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>Success</dd>

<DT>E_FAIL</DT>

<DD>The value returned if the value of the <code class="ce">readyState</code> property is <code class="ce">READYSTATE_INTERACTIVE</code>.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the mode base name contains a colon character or is an invalid name.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>Using <code class="ce">setStartMode</code> is essentially the same as an XSLT style sheet that starts with the following rule.</P>

<PRE class="code">&lt;xsl:template match="/"&gt;
   &lt;xsl:apply-templates select="*" mode="{mode}"/&gt;
&lt;/xsl:template&gt;</PRE>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P>Applies to: <A HREF="xml_obj_ixslprocessor_9j8y.htm">IXSLProcessor</A></P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P>W3C Qualified Names section of the <A HREF="http://go.microsoft.com/fwlink/?LinkId=4842">XSLT Version 1.0 W3C Recommendation</A> | <A HREF="http://go.microsoft.com/fwlink/?LinkId=4852">W3C Namespaces in XML Recommendation</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
