<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using Other Namespaces</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconusingothernamespaces"></A>Using Other Namespaces</H1>

<P>The <B>include</B> element allows you to reference and use schema components from external namespaces so that you do not have to redefine elements in every schema that requires the same existing content model or data type. It is possible to create new schemas that borrow or leverage from existing schemas.</P>

<H4 class="dtH4">Example</H4>

<P>The following example shows the definitions and declarations from the <code class="ce">humanresources.xsd</code> schema are available to the containing schema through the use of the <B>include</B> element.</P>

<PRE class="code">&lt;xs:schema 
   xmlns="http://www.w3.org/2001/XMLSchema"
   xmlns:xs="http://www.w3.org/2001/XMLSchema-datatypes"
   targetNamespace="http://www.example.com"&gt;
&lt;/xs:schema&gt;

&lt;xs:include xmlns:myschema="http://www.myschema.com/humanresources.xsd" /&gt;</PRE>

<P>Alternatively, if you want to merge data from documents marked up according to two schemas, you could create a schema that would validate a new XML document (XML document instances). In the instance of a document marked up according to this schema, you only need to declare this schema (not the included schema).</P>

<H2 class="dtH2">Multiple Schemas</H2>

<P>Multiple schemas from the same target namespace can be nested. This is useful if you want to create new XML documents based on data coming from several sources.</P>

<H4 class="dtH4">Example</H4>

<P>The following example shows a schema for cookbooks that includes the content models from the recipebooks schema. The recipebooks schema describes content models for desserts and wines.</P>

<PRE class="code">&lt;xs:schema 
xmlns="http://www.w3.org/2001/XMLSchema"
targetNamespace="http://www.example.com/schemas/cookbooks"&gt;
&lt;xs:import schemaLocation=http://www.example.com/schemas/recipebooks.xsd /&gt;

   &lt;xs:element name="catalog" type="catalogType" /&gt;
   &lt;xs:complexType name="catalogType"&gt;
      &lt;xs:sequence&gt;
         &lt;xs:element name="desserts" type="cookbooks:dessertsType" /&gt;
         &lt;xs:element name="wines" type="cookbooks:winesType" /&gt;
      &lt;/xs:sequence&gt;
   &lt;xs:attribute name="myISBN" type="cookbooks:ISBN" /&gt;
   &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_devnamespaces_8a7n.htm">Using Namespaces in Schemas</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
