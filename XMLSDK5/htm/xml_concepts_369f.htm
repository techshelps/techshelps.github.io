<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Processing Instructions</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconprocessinginstructions"></A>Processing Instructions</H1>

<P>Processing instructions can be used to pass information to applications in a way that escapes most XML rules. Processing instructions do not have to follow much internal syntax, can include markup characters without escaping them, and can appear anywhere in the document outside of other markup. They can appear in the prolog, including the document type definition (DTD), in textual content, or after the document. Their appearance is not noted by schema or DTD processors.</P>

<P>Processing instructions must begin with an identifier called a target, which follows rules similar to those for element and attribute names. Processing instruction targets are case-sensitive and must start with a letter or underscore. The rest of the target can contain letters, digits, hyphens, underscores, periods, and colons. Any valid XML textual characters can appear after the target.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The World Wide Web Consortium (W3C) Namespaces in XML recommendation suggests you avoid the use of colons in processing instruction names.</BLOCKQUOTE>

<P>The following is the processing instruction syntax in the document map.</P>

<P><code class="ce">&lt;?xml-stylesheet type="text/xsl" href="show_book.xsl"?&gt;</code></P>

<P>Processing of the contents ends immediately after the string <code class="ce">?&gt;</code> is encountered.</P>

<H2 class="dtH2">Style Sheet Processing Instructions</H2>

<P>In accordance with the W3C recommendation, Microsoft&reg; Internet Explorer implements an <code class="ce">xml-stylesheet</code> processing instruction. This processing instruction must appear in the prolog, before the document or root element. Multiple processing instructions can appear, which can be useful with cascading style sheets, but most browsers use the first supported style sheet and ignore the rest.</P>

<P>The syntax for a style sheet processing instruction is as follows:</P>

<PRE class="code">&lt;?xml-stylesheet type="<I>type</I>" href="<I>uri</I>" ?&gt;</PRE>

<P>where</P>

<BLOCKQUOTE class="dtBlock">
<I>type</I> is text/css (to link to a cascading style sheet file) or text/xsl (to link to an XSLT file)</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<I>uri</I> is the Uniform Resource Identifier (URI) of the style sheet. This URI is relative to the location of the XML document itself.</BLOCKQUOTE>

<P>The following is an <code class="ce">xml-stylesheet</code> processing instruction identifying a style sheet built using a cascading style sheet.</P>

<PRE class="code">&lt;?xml-stylesheet href="/style.css" type="text/css" title="default stylesheet"?&gt;</PRE>

<P>The following is an <code class="ce">xml-stylesheet</code> processing instruction identifying a style sheet built using Extensible Stylesheet Language (XSL).</P>

<PRE class="code">&lt;?xml-stylesheet href="/style.xsl" type="text/xsl" title="default stylesheet"?&gt;</PRE>

<P>The following processing instruction is legal, but difficult for applications to process.</P>

<PRE class="code">&lt;?style &#0150; oh, try /style.css ?&gt;</PRE>

<P>Many processing instructions use pseudo-attributes, content that looks like attributes and is easier for applications to process. The preceding example can be rendered using the W3C <code class="ce">xml-stylesheet</code> processing instruction:</P>

<PRE class="code">&lt;?xml-stylesheet href="/style.css" type="text/css" title="default stylesheet"?&gt;</PRE>

<P>You can use processing instructions in the prolog to specify other document-wide processing, but you must write an application to support them.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;Although the use of processing instructions is sometimes discouraged, their loose structure and the flexibility of their placement make them useful for sending messages to an application without disrupting the flow of XML information.</BLOCKQUOTE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_concepts_4awg.htm">Document Map</A></P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=4852">World Wide Web Consortium Namespaces in XML Recommendation</A> | <A HREF="http://go.microsoft.com/fwlink/?LinkId=4854">Associating Style Sheets with XML Documents, Version 1.0 (W3C Recommendation 29 June 1999)</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
