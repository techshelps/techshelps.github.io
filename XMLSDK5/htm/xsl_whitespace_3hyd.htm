<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Preserving or Stripping White Space</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconpreservingorstrippingwhitespace"></A>Preserving or Stripping White Space</H1>

<P>XSLT can distinguish nodes that contain white space intermingled with other characters. The white space is considered inseparable from the other text in the node.</P>

<P>For nodes that contain nothing but white space, the <code class="ce">&lt;xsl:preserve-space&gt;</code> and <code class="ce">&lt;xsl:strip-space&gt;</code> elements determine how the nodes are output.</P>

<H2 class="dtH2">Preserving White Space with &lt;xsl:preserve-space&gt;</H2>

<P>The <code class="ce">&lt;xsl:preserve-space&gt;</code> element provides a list of those elements in the source document whose white space must be preserved on output. The <code class="ce">&lt;xsl:preserve-space&gt;</code> element is always an empty, top-level element&#0151;for example, a child of the <code class="ce">&lt;xsl:stylesheet&gt;</code> element in an XSLT style sheet.</P>

<P>The following is the general syntax.</P>

<PRE class="code">&lt;xsl:preserve-space elements="<I>elem1 elem2...elemN</I>" /&gt;</PRE>

<P>In this syntax, <I>elem1</I> through <I>elemN</I> are the names (without the enclosing &lt; and &gt; delimiters) of all elements whose white space must be preserved.</P>

<P>You can specify all of the elements in the source document with the asterisk operator ("*"), as follows:</P>

<PRE class="code">&lt;xsl:preserve-space elements="*" /&gt;</PRE>

<P>Because all of the content of an XML document is, by default, preserved, <code class="ce">&lt;xsl:preserve-space&gt;</code> is only useful when you have used <code class="ce">&lt;xsl:strip-space&gt;</code> to override the default behavior. In such cases, use <code class="ce">&lt;xsl:preserve-space&gt;</code> to identify exceptions to the explicit stripping of white space.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The Microsoft&reg; XSLT processor will process all of a document's white space only if the <code class="ce">preserveWhiteSpace</code> property has been set to True prior to loading the document into the DOM. For more information, see <A HREF="xsl_whitespace_48bp.htm">How the MSXML Processor Parses White Space</A>.</BLOCKQUOTE>

<H2 class="dtH2">Removing White Space with &lt;xsl:strip-space&gt;</H2>

<P>The <code class="ce">&lt;xsl:strip-space&gt;</code> element provides a list of elements in the source document that have content which must be removed from the output tree. The <code class="ce">&lt;xsl:strip-space&gt;</code> element is an empty, top-level element.</P>

<P>The following is the general syntax.</P>

<PRE class="code">&lt;xsl:strip-space elements="<I>elem1 elem2...elemN</I>" /&gt;</PRE>

<P>In this syntax, <I>elem1</I> through <I>elemN</I> are the names (without the enclosing &lt; and &gt; delimiters) of all elements whose white space must be removed.</P>

<P>You can specify all of the elements in the source document with the asterisk operator ("*"), as follows:</P>

<PRE class="code">&lt;xsl:strip-space elements="*" /&gt;</PRE>

<P>If an element appears in both an <code class="ce">&lt;xsl:strip-space&gt;</code> and <code class="ce">&lt;xsl:preserve-space&gt;</code> list, the specification that appears last applies. Therefore, a typical sequence of these two elements in an XSLT style sheet is as follows:</P>

<PRE class="code">&lt;xsl:strip-space elements="*" /&gt;
&lt;xsl:preserve-space elements="<I>elem1 elem2...elemN</I>" /&gt;</PRE>

<P>If this order were reversed, the explicit <code class="ce">preserve-space</code> settings for <I>elem1</I>, <I>elem2</I>, and so on would be overridden by the global <code class="ce">strip-space</code> setting.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
