<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Declaring Namespaces</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcondeclaringnamespaces"></A>Declaring Namespaces</H1>

<P>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office provides support for associating elements and attributes with namespaces. You can use a default or explicit declaration to declare namespaces. In both cases, the declaration associates a Uniform Resource Identifier (URI) with particular element and attribute names.</P>

<H2 class="dtH2">Choosing Namespace URIs</H2>

<P>Developers creating new XML vocabularies might need to choose URIs for use as namespace identifiers. The following are general guidelines for creating new vocabularies that need namespace identifiers.

<UL type="disc">
	<LI>Use namespace URIs that you control.
<P>Although the Namespaces in XML<I> </I>recommendation does not prohibit borrowing, do not create a new namespace using a URI you do not control.
</li>

	<LI>Use URIs that are persistent.
<P>Although they are usually maintained, domain names do expire. Other URI facilities, such as Uniform Resource Names (URNs) and Permanent URLs (PURLs), guarantee persistence beyond the domain name infrastructure.
</li>

	<LI>Use URIs that consistently point to the same location.
<P>Although the Namespaces in XML<I> </I>recommendation does not prohibit the use of relative URI references in namespace identifiers, their use is largely undefined.
</li>

	<LI>Identify and describe the namespace URI in the documentation for your vocabulary.</li>
</UL>

<H2 class="dtH2">Default Declaration</H2>

<P>The default declaration declares a namespace in effect for an element and all other elements contained within it where the element is not prefixed. The following example declares the <code class="ce">&lt;catalog&gt;</code> element&#0151;and all its element descendents that do not have a prefix&#0151;to be members of the namespace declared using the URI http://www.example.microsoft.com/catalog/.</P>

<P class="label"><B>Example</B></P>

<P><CODE>&lt;catalog <code><b class="cfe">xmlns="http://www.example.microsoft.com/catalog/"&gt;</b></code></CODE></P>

<PRE class="code">  &lt;book id="bk101"&gt;
     ...
  &lt;/book&gt;
  &lt;book id="bk109"&gt;
     ...
  &lt;/book&gt;
&lt;/catalog&gt;</PRE>

<P>If the URI reference is an empty string, unprefixed elements within the scope of the declaration are not considered to belong to any namespace. Default declarations are commonly used when a document contains only elements from a particular namespace, or when one namespace effectively dominates all others.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;Default namespaces do not directly apply to attributes.</BLOCKQUOTE>

<H2 class="dtH2">Explicit Declaration</H2>

<P>An explicit declaration defines a shorthand, or prefix, to substitute for the full name of a namespace. Use an explicit declaration to reference a node from a namespace separate from your default namespace.</P>

<P>If the catalog example created in the document map had to represent its currency values using an element from a different namespace, it might include both a declaration for the catalog as a whole and an explicit declaration for the element describing the prices.</P>

<P>Explicit declarations of namespace prefixes use attribute names beginning with the <code class="ce">xmlns</code> attribute and followed by the prefix. The value of the attribute is the namespace URI.</P>

<H4 class="dtH4">Example</H4>

<P>The following example declares <code class="ce">cat</code> and <code class="ce">money</code> to be shorthand for the full names of their respective namespaces. All elements beginning with <code class="ce">cat:</code> or <code class="ce">money:</code> are considered to be from the namespace <code class="ce">"http://www.example.microsoft.com/catalog/"</code> or <code class="ce">"http://www.example.microsoft.com/currency/"</code>, respectively.</P>

<PRE class="code">&lt;cat:catalog xmlns:cat="http://www.example.microsoft.com/catalog/"
   xmlns:money="http://www.example.microsoft.com/currency/"&gt;
  &lt;cat:book id="bk101"&gt;
     &lt;cat:author&gt;&amp;#71;ambardella, Matthew&lt;/cat:author&gt;
     &lt;cat:title&gt;XML Developer's &amp;#x47;uide&lt;/cat:title&gt;
     &lt;cat:genre&gt;Computer&lt;/cat:genre&gt;
     &lt;money:price&gt;44.95&lt;/money:price&gt;
     &lt;cat:publish_date&gt;2000-10-01&lt;/cat:publish_date&gt;
     &lt;cat:description&gt;&lt;![CDATA[An in-depth look at creating applications with XML, using &lt;, &gt;,]]&gt; and &amp;amp;.&lt;/cat:description&gt;
  &lt;/cat:book&gt;
  &lt;cat:book id="bk109"&gt;
     &lt;cat:author&gt;Kress, Peter&lt;/cat:author&gt;
     &lt;cat:title&gt;Paradox Lost&lt;/cat:title&gt;
     &lt;cat:genre&gt;Science Fiction&lt;/cat:genre&gt;
     &lt;money:price&gt;6.95&lt;/money:price&gt;
     &lt;cat:publish_date&gt;2000-11-02&lt;/cat:publish_date&gt;
     &lt;cat:description&gt;After an inadvertant trip through a Heisenberg Uncertainty Device, James Salway discovers the problems of being quantum.&lt;/cat:description&gt;
  &lt;/cat:book&gt;
&lt;/cat:catalog&gt;</PRE>

<P>Explicit declarations are useful when a node contains elements from different namespaces. You can also fix default namespace declarations with explicit namespace declarations.</P>

<H4 class="dtH4">Example</H4>

<P>The following example is almost identical to the preceding example. However, all of the elements except <code class="ce">price</code> use the default namespace declaration, avoiding repeated <code class="ce">cat:</code> prefixes. All of the elements except <code class="ce">price</code> are associated with the namespace URI <code class="ce">"http://www.example.microsoft.com/catalog/"</code>; <code class="ce">price</code> is associated with <code class="ce">"http://www.example.microsoft.com/currency/"</code>.</P>

<PRE class="code">&lt;catalog xmlns="http://www.example.microsoft.com/catalog/"
   xmlns:money="http://www.example.microsoft.com/currency/"&gt;
  &lt;book id="bk101"&gt;
     &lt;author&gt;&amp;#71;ambardella, Matthew&lt;/author&gt;
     &lt;title&gt;XML Developer's &amp;#x47;uide&lt;/title&gt;
     &lt;genre&gt;Computer&lt;/genre&gt;
     &lt;money:price&gt;44.95&lt;/money:price&gt;
     &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
     &lt;description&gt;&lt;![CDATA[An in-depth look at creating applications with XML, using &lt;, &gt;,]]&gt; and &amp;amp;.&lt;/description&gt;
  &lt;/book&gt;
  &lt;book id="bk109"&gt;
     &lt;author&gt;Kress, Peter&lt;/author&gt;
     &lt;title&gt;Paradox Lost&lt;/title&gt;
     &lt;genre&gt;Science Fiction&lt;/genre&gt;
     &lt;money:price&gt;6.95&lt;/money:price&gt;
     &lt;publish_date&gt;2000-11-02&lt;/publish_date&gt;
     &lt;description&gt;After an inadvertant trip through a Heisenberg Uncertainty Device, James Salway discovers the problems of being quantum.&lt;/description&gt;
  &lt;/book&gt;
&lt;/catalog&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_concepts_4awg.htm">Document Map</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
