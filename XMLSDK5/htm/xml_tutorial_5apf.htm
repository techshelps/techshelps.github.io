<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Author XML Elements</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmtuttut1authoringelements"></A>Author XML Elements</H1>
<script SRC="utilityfuncs.js"></script>
<H2 class="dtH2">What is an XML element?</H2>

<P>XML is a meta-markup language, a set of rules for creating semantic tags used to describe data. An XML element is made up of a start tag, an end tag, and data in between. The start and end tags describe the data within the tags, which is considered the value of the element. For example, the following XML element is a <code class="ce">&lt;director&gt;</code> element with the value <code class="ce">Matthew Dunn</code>.</P>

<PRE class="code">&lt;director&gt;Matthew Dunn&lt;/director&gt;</PRE>

<P>The element name <code class="ce">&lt;director&gt;</code> allows you to mark up the value <code class="ce">Matthew Dunn</code> semantically, so you can differentiate that particular bit of data from another, similar bit of data. For example, there might be another element with the value <code class="ce">Matthew Dunn</code>:</P>

<PRE class="code">&lt;actor&gt;Matthew Dunn&lt;/actor&gt;</PRE>

<P>Because each element has a different tag name, you can easily tell that one element refers to Matthew Dunn, the director, while the other refers to Matthew Dunn, the actor<I>.</I> If there were no way to mark up the data semantically, having two elements with the same value might cause confusion.</P>

<P>In addition, XML tags are case-sensitive, so the following are each a different element.</P>

<PRE class="code">&lt;City&gt; &lt;CITY&gt; &lt;city&gt;</PRE>

<H3 class="dtH3">Attributes</H3>

<P>An element can optionally contain one or more attributes. An attribute is a name-value pair separated by an equal sign (=).</P>

<PRE class="code">&lt;CITY ZIP="01085"&gt;Westfield&lt;/CITY&gt;</PRE>

<P>In this example, <code class="ce">ZIP="01085"</code> is an attribute of the <code class="ce">&lt;CITY&gt;</code> element. Attributes are used to attach additional, secondary information to an element, usually meta information. Attributes can also accept default values, while elements cannot. Each attribute of an element can be specified only once, but in any order.</P>

<H2 class="dtH2">Try it!</H2>

<P>In the following text box, type the title of a favorite movie and then click <B>Continue</B>.</P>
<input STYLE="color:#8B0000" TYPE="text" name="movieName" onkeypress="checkPress()"><input style="background-color:#66CCFF" TYPE="button" value="Continue" name="CONTINUE" onkeypress="checkPress()" onclick="fillWords()"><script>  function fillWords(){    try {      xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");      }      catch (e) {        msxmlNotInstalledError();        return;      }     if (movieName.value != ""){      document.all.section2.style.display = 'block';      if (movieName.value.indexOf(" ",0) == -1){	    document.all.plural1.innerText = "";}	  else document.all.plural1.innerText = "s";	  document.all.title1.innerText = movieName.value;	  }	else alert("You must enter a movie name.");  }</script><div ID="section2" style="display:none"><p><font face="verdana">In the box below, enter a single-word description of the word<span ID="plural1"></span>&nbsp;<span ID="title1" STYLE="color:#8B0000"></span> (movie, film, screenplay, title, and so on) and then click the Continue button.</font></p><input STYLE="color:#8B0000" TYPE="text" name="tagName" onkeypress="checkPress()"><input style="background-color:#66CCFF" TYPE="button" value="Continue" name="cont1" onkeypress="checkPress()" onclick="fillXMLExample()"><script>function testXML(TheXMLString){     try {         oDomDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");         return oDomDoc.loadXML("<" + TheXMLString + "/>");         }     catch (e) {         msxmlNotInstalledError();         return;      }}function fillXMLExample(){    if (tagName.value == "")    	alert("You must enter one word into the text box.");    else {    	if(testXML(tagName.value) == false)    		alert("The description, as typed, cannot be used as an \nXML tagname. Please remove any white spaces or \nany other special characters from the description.");    	else {            myString = "&lt;" + tagName.value + "&gt;" + movieName.value + "&lt;/" + tagName.value + "&gt;" ;         	document.all.section3.style.display = 'block';            document.all.xmlElement.innerHTML = "<PRE>" + myString + "</PRE>";        }   }}</script><xml id="xmltest"></xml><div ID="section3" style="display:none"><p><font face="verdana">You have just created the following XML element:</font></p><blockquote STYLE="color:#8B0000"><div ID="xmlElement"></div></blockquote></div></div>
<H2 class="dtH2">Check the syntax</H2>

<P>Because XML is a highly structured language, it is important that all XML be well-formed. That is, the XML must have both a start tag and end tag, and must be authored using the proper syntax. In the following box, create an XML element with a start tag, an end tag, and a value on a single line. Click the <B>Well-formed?</B> button to see if your XML is correct.</P>
<input TYPE="TEXT" STYLE="color:#8B0000" SIZE="70" name="XMLsource" onkeypress="checkPress()"><input style="background-color:#66CCFF" TYPE="button" value="Well-formed?" name="wellFormed" onclick="checkWellFormed()"><script LANGUAGE="JScript">function checkPress(){  if (event.keyCode == 13) {  switch (event.srcElement.name) {    case "movieName":	  fillWords();	  break;	case "tagName":	  fillXMLExample();	  break;	case "XMLsource" :      checkWellFormed();	  break;	  }	event.keyCode = 0;	}  }function checkWellFormed(){  if (XMLsource.value != "")    {     try {         oXmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");         oXmlDoc.loadXML(XMLsource.value);         if (oXmlDoc.parseError.reason == "")            alert("Your XML is well-formed.");         else            alert("Error at position " + oXmlDoc.parseError.linepos + ": " + oXmlDoc.parseError.reason);         }     catch (e) {         msxmlNotInstalledError();         return;      }    }  else alert("Please enter an XML element.");}</script><xml id="xmlid"></xml><H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
