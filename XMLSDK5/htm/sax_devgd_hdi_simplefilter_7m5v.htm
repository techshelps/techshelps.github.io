<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Essential Handler Methods</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="sax_hdi_simplefilter_handlermethods"></A>Essential Handler Methods</H1>

<P>Although the Simple API for XML (SAX) can catch many events as it parses through a document, this application focuses on the most frequently used methods. In this example, the <code class="ce">ContentHandlerImpl</code> class implements all methods for <code class="ce">IVBSAXContentHandler</code> and <code class="ce">IVBSAXErrorHandler</code> interfaces, but code is added only to those methods that you want the application to be aware of, including <code class="ce">documentLocator</code>, <code class="ce">startElement</code>, <code class="ce">endElement</code>, <code class="ce">characters</code>, and <code class="ce">endDocument</code> for the <code class="ce">ContentHandler</code>, and <code class="ce">fatalError</code> for the <code class="ce">ErrorHandler</code>. As the reader passes through the document, it reports events in document order: <code class="ce">documentLocator</code>, followed by <code class="ce">startDocument</code>, <code class="ce">startElement</code>, <code class="ce">characters</code>, <code class="ce">endElement</code>, and <code class="ce">endDocument</code>.</P>

<H2 class="dtH2">set IVBSAXContentHandler_documentLocator method</H2>

<P>The <code class="ce">set IVBSAXContentHandler_documentLocator</code> method is the first event thrown by the SAX reader when is passes through a document. This method receives a pointer to the <code class="ce">IVBSAXLocator</code> interface, which provides methods for returning the column number, line number, public ID, or system ID for a current document. Because this is the first method thrown, it is a good place to put initialization code.</P>

<P>In the following snippet, the <code class="ce">Initialize</code> procedure sets the <code class="ce">TitleTrue</code> flag, the flag that indicates if the element is within scope, to False. This procedure also sets the <code class="ce">errorHappen</code> flag to False. This flag is used to indicate that a fatal error has been thrown by the <code class="ce">ErrorHandler</code> and prevents the HandleError procedure in the form from overwriting the error message thrown by the <code class="ce">ErrorHandler</code>.</P>

<PRE class="code">Private Property Set IVBSAXContentHandler_documentLocator(ByVal RHS As _
                                                    MSXML2.IVBSAXLocator)
    Initialize
End Property

Private Sub Initialize()
    errorHappen = False
    TitleTrue = False
End Sub</PRE>

<H2 class="dtH2">startElement Method</H2>

<P>The <code class="ce">startElement</code> event is thrown by the reader each time it encounters the "&lt;" character of a new element. The <code class="ce">startElement</code> method receives the namespace URI for the element, the local name, and the qualified name of the element. Attributes for the element are sent as a separate object containing the type, URI, local name, and value of each attribute. These values can be accessed from the attributes object within the <code class="ce">startElement</code> method.</P>

<P>In this method, the first <code class="ce">if</code> clause sets the <code class="ce">FilterTrue</code> flag if the element name passed by the <code class="ce">startElement</code> event matches the element name specified as the filter criteria. When <code class="ce">FilterTrue</code> is True, the second <code class="ce">if</code> clause invokes the <code class="ce">startElement</code> method from the <code class="ce">oContentHandler</code> object, which holds a reference pointing to <code class="ce">oWriter</code>, the <code class="ce">MXXMLWriter</code> object created in the form. This pushes the data passed by the <code class="ce">startElement</code> method to the <code class="ce">oWriter</code> object.</P>

<PRE class="code">Private Sub IVBSAXContentHandler_startElement(strNamespaceURI As String, _
                                              strLocalName As String, _
                                              strQName As String, _
                                              ByVal oAttributes As _
                                              MSXML2.IVBSAXAttributes)
    If strLocalName = FilterCriteria Then
        FilterTrue = True
    End If
    If FilterTrue Then
        oContentHandler.startElement strNamespaceURI, strLocalName, _
                                     strQName, oAttributes
    End If
End Sub</PRE>

<H2 class="dtH2">characters Method</H2>

<P>The <code class="ce">characters</code> method receives the character content between the opening and closing tags of an element. For this example, the <code class="ce">characters</code> method contains code that pushes character data to the writer only when the <code class="ce">FilterTrue</code> flag is set to True.</P>

<PRE class="code">Private Sub IVBSAXContentHandler_characters(strChars As String)
    If FilterTrue Then
           oContentHandler.characters strChars
    End If
End Sub</PRE>

<H2 class="dtH2">endElement Method</H2>

<P>SAX often throws events in pairs, modeling the structure of the XML document. For example, a <code class="ce">startDocument</code> event has a corresponding <code class="ce">endDocument</code> event and a <code class="ce">startElement</code> event has a corresponding <code class="ce">endElement</code> event. For the <code class="ce">endElement</code> method, the first <code class="ce">if</code> clause pushes the content received by the <code class="ce">endElement</code> method to the writer when the <code class="ce">FilterTrue</code> flag is True. The second <code class="ce">if</code> clause sets the <code class="ce">FilterCriteria</code> flag to False when the value passed by the <code class="ce">endElement</code> method matches the filter criteria. This indicates that the element is no longer in scope.</P>

<PRE class="code">Private Sub IVBSAXContentHandler_endElement(strNamespaceURI As String, _
                                             strLocalName As String, _
                                             strQName As String)
    If FilterTrue Then
         oContentHandler.endElement strNamespaceURI, strLocalName, _
                                    strQName
    End If
    If strLocalName = FilterCriteria Then
        FilterTrue = False
    End If
End Sub</PRE>

<H2 class="dtH2">fatalError Method</H2>

<P>Finally, code is added to the <code class="ce">fatalError</code> method to capture any errors thrown by the reader during parsing. If a fatal error is received, the error message is displayed in the Text1 box. The <code class="ce">errorHappen</code> flag is set to True, preventing the HandlerError routine in the form from overwriting the <code class="ce">fatalError</code> error message.</P>

<PRE class="code">Private Sub IVBSAXErrorHandler_fatalError(ByVal oLocator As _
                                          MSXML2.IVBSAXLocator, _
                                          strErrorMessage As String,_ 
                                          ByVal nErrorCode As Long)
    Form1.Text1.Text = strErrorMessage &amp; nErrorCode
    errorHappen = True
End Sub</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_devgd_hdi_simplefilter_0rzi.htm">Run the Application</A> | <A HREF="sax_imxwriter_9f39.htm">IMXWriter Interface</A> | <A HREF="sax_mxxmlwriter_0m5v.htm">MXXMLWriter CoClass</A> | <A HREF="sax_contenthandler_7nad.htm">ISAXContentHandler Interface</A> | <A HREF="sax_isaxerrorhandler_2syt.htm">ISAXErrorHandler Interface</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
