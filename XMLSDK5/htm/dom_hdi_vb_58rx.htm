<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Source: validateDOM.frm</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="dom_hdi_vb_validatedom"></A>Source: validateDOM.frm</H1>

<P>The source code performs the following basic steps:

<OL type="1">
	<LI>Creates a DOM instance (<code class="ce">oXMLDoc</code>) to hold the XML data.</li>

	<LI>Creates a DOM instance (<code class="ce">oXSDDoc</code>) to hold the XML Schema definition.</li>

	<LI>Creates an <code class="ce">IXMLSchemaCollection</code> or <code class="ce">IXMLSchemaCollection2</code> object (<code class="ce">oSCache</code>). This object is also called a schema cache.  The application then adds the XML Schema definition (<code class="ce">oXSDDoc</code>) to the <code class="ce">oSCache</code>.</li>

	<LI>Associates <code class="ce">oSCache</code> with the <code class="ce">schemas</code> property of the DOM object for the XML data (<code class="ce">oXMLDoc</code>).</li>

	<LI>Calls the following validation methods on the DOM object for XML data (<code class="ce">oXMLDoc</code>):
<UL type="disc">
	<LI>Calls the <code class="ce">validate</code> method on <code class="ce">oXMLDoc</code> to validate the data set as a whole
<P>and/or
</li>

	<LI>Calls the <code class="ce">validateNode(oNode)</code> method on <code class="ce">oXMLDoc</code> to validate a node object (<code class="ce">oNode</code>) selected from <code class="ce">oXMLDoc</code>.</li>
</UL>
</li>

	<LI>Checks the error returned from <code class="ce">validate</code> method and/or the <code class="ce">validateNode(oNode)</code> method, to determine if the specified XML data set is valid against the given XML Schema definition.</li>
</OL>

<P class="label"><B>Visual Basic Source File (validateDOM.frm)</B></P>

<PRE class="code">Private Sub Form_Load()
    ' Output string:
    Dim strout As String
    strout = ""
    
    ' Load an XML document into a DOM instance.
    Dim oXMLDoc As DOMDocument50
    Set oXMLDoc = DOMFromFile(App.path + "\books.xml")
    If oXMLDoc Is Nothing Then
        Exit Sub
    End If
    
    ' Load the schema for the xml document.
    Dim oXSDDoc As DOMDocument50
    Set oXSDDoc = DOMFromFile(App.path + "\books.xsd")
    If oXSDDoc Is Nothing Then
        Exit Sub
    End If
    
    ' Create a schema cache instance.
    Dim oSCache As New XMLSchemaCache50
    
    ' Add the just-loaded schema definition to the schema collection
    oSCache.Add "urn:books", oXSDDoc
    
    ' Assign the schema to the XML document's schema collection.
    Set oXMLDoc.schemas = oSCache
    
    ' Validate the entire DOM.
    strout = strout _
        + "Validating DOM..." + vbNewLine
    Dim oError As IXMLDOMParseError
    Set oError = oXMLDoc.Validate
    If oError.errorCode &lt;&gt; 0 Then
        strout = strout + vbTab _
            + "XMLDoc is not valid because " _
            + vbNewLine + oError.reason + vbNewLine
    Else
        strout = strout _
            + vbTab + "XMLDoc is validated:" + vbNewLine _
            + oXMLDoc.xml + vbNewLine
    End If
    
    Dim oNodes As IXMLDOMNodeList
    ' Validate all "//books" nodes, node by node.
    strout = strout _
           + "Validating all book nodes, '//book\', " _
           + "one by one ..." + vbNewLine
    Set oNodes = oXMLDoc.selectNodes("//book")
    strout = strout + ValidateNodes(oXMLDoc, oNodes)
    
    ' Validate all children of //books nodes, node by node.
    strout = strout _
           + "Validating all children of all book nodes, //book/*, " _
           + "one by one ..." + vbNewLine
    Set oNodes = oXMLDoc.selectNodes("//book/*")
    strout = strout + ValidateNodes(oXMLDoc, oNodes)
    
    MsgBox strout
End Sub

Private Function DOMFromFile(ByVal path As String)
    If path = "" Then
        Set DOMFromFile = Nothing
        Exit Function
    End If
    
    Dim dom As New DOMDocument50
    dom.async = False
    dom.validateOnParse = False
    dom.resolveExternals = False
    dom.preserveWhiteSpace = True
    If dom.Load(path) = False Then
        MsgBox "Can't create DOM from " + path
        Set DOMFromFile = Nothing
        Exit Function
    End If
    Set DOMFromFile = dom
End Function

Private Function ValidateNodes(oXMLDoc As DOMDocument50, _
                            oNodes As IXMLDOMNodeList) As String
    If oXMLDoc Is Nothing Then
        ValidateNodes = "Error in ValidateNodes(): Invalid oXMLDoc"
        Exit Function
    End If
    
    If oNodes Is Nothing Then
        ValidateNodes = "Error in ValidateNodes(): Invalid oNodes"
        Exit Function
    End If
    
    Dim oNode As IXMLDOMNode
    Dim oError As IXMLDOMParseError
    Dim strout As String
    
    For i = 0 To oNodes.length - 1
        Set oNode = oNodes.nextNode
        If Not (oNode Is Nothing) Then
           Set oError = oXMLDoc.validateNode(oNode)
           If oError.errorCode = 0 Then
               strout = strout + vbTab _
                   + "&lt;" + oNode.nodeName + "&gt; (" _
                   + CStr(i) + ") is a valid node " + vbNewLine
           Else
               strout = strout + vbTab _
                   + "&lt;" + oNode.nodeName + "&gt; (" + CStr(i) + ") " _
                   + "is not valid because" + vbNewLine _
                   + oError.reason + vbNewLine
           End If
        End If
    Next
    ValidateNodes = strout
End Function</PRE>

<P class="labelproc"><B>To add validateDOM.frm to the project</B>

<UL type="disc">
	<LI>Copy the code listing above. Paste it into the Visual Basic code editor as the <B>form_load</B> subroutine, replacing any code fragments that are already there.</li>
</UL>

<P>Next, we'll add the <A HREF="dom_hdi_vb_1x9h.htm">resource files</A>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
