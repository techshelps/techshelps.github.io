<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>XSLT Sample: Breakfast Menu</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconxsltsamplebreakfastmenu"></A>XSLT Sample: Breakfast Menu</H1>

<P>The Breakfast Menu sample demonstrates XML data islands and includes the following files.

<UL type="disc">
	<LI><A HREF="#xmconsimpleislandshtm">simple-islands.htm</A></li>

	<LI><A HREF="#xmconsimplexml">simple.xml</A></li>

	<LI><A HREF="#xmconsimplexsl">simple.xsl</A></li>

	<LI><A HREF="#xmconsimpleasp">simple.asp</A></li>
</UL>

<P>To test the sample, copy the files to a folder on your local drive. Then do one of the following (beginners might want to try all three methods):

<UL type="disc">
	<LI>Open <B>simple.xml</B> using Internet Explorer by double clicking the file from Explorer.</li>

	<LI>Open <B>simple-islands.htm</B> using Internet Explorer by double clicking the file from Explorer.</li>

	<LI>Open <B>simple.asp</B> page by using Internet Explorer with a URL such as "http://localhost/breakfast/simple.asp".</li>
</UL>

<P>The last option assumes that IIS is running on your machine and that you have created a breakfast virtual directory and placed all the files in it.</P>



<P class="label"><B><A NAME="xmconsimpleislandshtm"></A>HTML File (simple-islands.htm)</B></P>

<PRE class="code">&lt;HTML&gt;
  &lt;HEAD&gt;
    &lt;TITLE&gt;Simple demo of Microsoft XSL Processor&lt;/TITLE&gt;
  &lt;/HEAD&gt;

  &lt;XML id="source" src="simple.xml"&gt;&lt;/XML&gt;
  &lt;XML id="style" src="simple.xsl"&gt;&lt;/XML&gt;
  
  &lt;SCRIPT FOR="window" EVENT="onload"&gt;
    xslTarget.innerHTML = source.transformNode(style.XMLDocument);
  &lt;/SCRIPT&gt;

&lt;BODY&gt;
    &lt;P STYLE="font-size:10pt; font-family:Verdana; color:gray"&gt;
      &lt;B&gt;This demo shows the use of data islands for 
          loading XML source and XSLT style sheets, and for 
          inserting the transformed result into the Web page.&lt;/B&gt;
    &lt;/P&gt;
    &lt;DIV id="xslTarget"&gt;&lt;/DIV&gt;
  &lt;/BODY&gt;
&lt;/HTML&gt;</PRE>



<P class="label"><B><A NAME="xmconsimplexml"></A>XML File (simple.xml)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;?xml:stylesheet type="text/xsl" href="simple.xsl" ?&gt;
&lt;breakfast-menu&gt;
  &lt;food&gt;
    &lt;name&gt;Belgian Waffles&lt;/name&gt;
    &lt;price&gt;$5.95&lt;/price&gt;
    &lt;description&gt;Two of our famous Belgian Waffles 
      with plenty of real maple syrup.&lt;/description&gt;
    &lt;calories&gt;650&lt;/calories&gt;
  &lt;/food&gt;
  &lt;food&gt;
    &lt;name&gt;Strawberry Belgian Waffles&lt;/name&gt;
    &lt;price&gt;$7.95&lt;/price&gt;
    &lt;description&gt;Light Belgian waffles covered with 
     strawberries and whipped cream.&lt;/description&gt;
    &lt;calories&gt;900&lt;/calories&gt;
  &lt;/food&gt;
  &lt;food&gt;
    &lt;name&gt;Berry-Berry Belgian Waffles&lt;/name&gt;
    &lt;price&gt;$8.95&lt;/price&gt;
    &lt;description&gt;Light Belgian waffles covered 
      with an assortment of fresh berries 
      and whipped cream.&lt;/description&gt;
    &lt;calories&gt;900&lt;/calories&gt;
  &lt;/food&gt;
  &lt;food&gt;
    &lt;name&gt;French Toast&lt;/name&gt;
    &lt;price&gt;$4.50&lt;/price&gt;
    &lt;description&gt;Thick slices made from our homemade 
     sourdough bread.&lt;/description&gt;
    &lt;calories&gt;600&lt;/calories&gt;
  &lt;/food&gt;
  &lt;food&gt;
    &lt;name&gt;Homestyle Breakfast&lt;/name&gt;
    &lt;price&gt;$6.95&lt;/price&gt;
    &lt;description&gt;Two eggs, bacon or sausage, toast, 
      and our ever-popular hash browns.&lt;/description&gt;
    &lt;calories&gt;950&lt;/calories&gt;
  &lt;/food&gt;
&lt;/breakfast-menu&gt;</PRE>



<P class="label"><B><A NAME="xmconsimplexsl"></A>XSLT File (simple.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
  &lt;xsl:template match="/"&gt;
    &lt;HTML&gt;
      &lt;BODY STYLE="font-family:Arial, helvetica, sans-serif; font-size:12pt;
            background-color:#EEEEEE"&gt;
        &lt;xsl:for-each select="breakfast-menu/food"&gt;
          &lt;DIV STYLE="background-color:teal; color:white; padding:4px"&gt;
            &lt;SPAN STYLE="font-weight:bold; color:white"&gt;&lt;xsl:value-of select="name"/&gt;&lt;/SPAN&gt;
            - &lt;xsl:value-of select="price"/&gt;
          &lt;/DIV&gt;
          &lt;DIV STYLE="margin-left:20px; margin-bottom:1em; font-size:10pt"&gt;
            &lt;xsl:value-of select="description"/&gt;
            &lt;SPAN STYLE="font-style:italic"&gt;
              (&lt;xsl:value-of select="calories"/&gt; calories per serving)
            &lt;/SPAN&gt;
          &lt;/DIV&gt;
        &lt;/xsl:for-each&gt;
      &lt;/BODY&gt;
    &lt;/HTML&gt;
  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>



<P class="label"><B><A NAME="xmconsimpleasp"></A>ASP File (simple.asp)</B></P>

<PRE class="code">&lt;%@ LANGUAGE = JScript %&gt;
&lt;%
  // Set the source and style sheet locations here.
  var sourceFile = Server.MapPath("simple.xml");
  var styleFile = Server.MapPath("simple.xsl");
  
  // Load the XML.
  var source = Server.CreateObject("Msxml2.DOMDocument.5.0");
  source.async = false;
  source.load(sourceFile);

  // Load the XSLT.
  var style = Server.CreateObject("Msxml2.DOMDocument.5.0");
  style.async = false;
  style.load(styleFile);
  Response.Write(source.transformNode(style));
%&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
