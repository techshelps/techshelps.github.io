<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IXMLDOMNodeList</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmobjxmldomnodelist"></A>IXMLDOMNodeList</H1>

<P>Supports iteration through the live collection, in addition to indexed access.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Example</H4>

<P>The following script example creates an <code class="ce">IXMLDOMNodeList</code> object by using the document's <code class="ce">getElementsByTagName</code> method.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var objNodeList;
xmlDoc.load("books.xml");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;objNodeList = xmlDoc.getElementsByTagName("author");
&nbsp;&nbsp;&nbsp;alert(objNodeList.length);
&nbsp;&nbsp;&nbsp;for (var objNode in objNodeList)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(objNode.xml);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft&reg; Visual Basic&reg; example creates an <code class="ce">IXMLDOMNodeList</code> object by using the document's <code class="ce">getElementsByTagName</code> method, and examines the content of each node.</P>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim objNodeList As IXMLDOMNodeList
Dim objNode As IXMLDOMNode
xmlDoc.Load ("books.xml")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set objNodeList = xmlDoc.getElementsByTagName("author")
&nbsp;&nbsp;&nbsp;MsgBox objNodeList.length
&nbsp;&nbsp;&nbsp;For Each objNode In objNodeList
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox objNode.xml
&nbsp;&nbsp;&nbsp;Next
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Example</H4>

<P>The following C/C++ example gets all elements with node name <code class="ce">AUTHOR</code> and displays the number of nodes found with the following sample.</P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;COLLECTION
   xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;DATE dt:dt="datetime"&gt;1998-10-13T15:56:00&lt;/DATE&gt;
  &lt;BOOK&gt;
    &lt;TITLE&gt;Lover Birds&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Cynthia Randall&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
  &lt;/BOOK&gt;
  &lt;BOOK&gt;
    &lt;TITLE&gt;The Sundered Grail&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Eva Corets&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
  &lt;/BOOK&gt;
  &lt;BOOK&gt;
    &lt;TITLE&gt;Splish Splash&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Paula Thurman&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Scootney&lt;/PUBLISHER&gt;
  &lt;/BOOK&gt;
&lt;/COLLECTION&gt;

#import "msxml5.dll"
using namespace MSXML2;

inline void TESTHR( HRESULT _hr ) 
   { if FAILED(_hr) throw(_hr); }

void XMLDOMNodeListSample()
{
   try {
      IXMLDOMDocumentPtr docPtr;
      IXMLDOMNodeListPtr NodeListPtr;
      IXMLDOMNodePtr DOMNodePtr;

      //init
      TESTHR(CoInitialize(NULL)); 
      TESTHR(docPtr.CreateInstance("Msxml2.DOMDocument.5.0"));

      // load a document
      _variant_t varXml("C:\\book.xml");
      _variant_t varOut((bool)TRUE);
      varOut = docPtr-&gt;load(varXml);
      if ((bool)varOut == FALSE)
         throw(0);
      NodeListPtr = docPtr-&gt;getElementsByTagName("AUTHOR");
      MessageBox(NULL, _bstr_t(NodeListPtr-&gt;length), _T("Node List length"), MB_OK);
   } catch(...)
   {
      MessageBox(NULL, _T("Exception occurred"), _T("Error"), MB_OK);
   }
   CoUninitialize();
}</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>A <code class="ce">NodeList</code> collection is live; that is, the addition and removal of nodes, and changes within nodes, are immediately reflected in the collection. This means that two successive requests for items using the same index can return two different items, depending on changes to the collection. This also means that changes to the node objects are immediately available in the nodes obtained from the list. </P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 2.0 and later</P>

<H4 class="dtH4">Requirements</H4>

<P><B>Implementation:</B> msxml5.dll, msxml2.lib</P>
<div class=filtered><span class="lang">[C/C++]</span>

<P><B>Header and IDL files:</B> msxml2.h, msxml2.idl</P>
</div><!-- [C/C++] -->

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_obj_ixmldomnodelist_3d84.htm">IXMLDOMNodeList Members</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
