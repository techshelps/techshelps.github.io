<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Accessing the Document Tree</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconaccessingthedocumenttree"></A>Accessing the Document Tree</H1>

<P>You can access the tree for an XML document either by beginning at the root element and moving from node to node or by querying for a specific node or nodes. You can navigate to the root element of the document by using the <code class="ce">documentElement</code> property. This property returns the root element as an <code class="ce">IXMLDOMNode</code>.</P>

<P>The following <B>books.xml</B> file is the same as the file used in the document map.</P>

<PRE class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="show_book.xsl"?&gt;
&lt;!DOCTYPE catalog SYSTEM "catalog.dtd"&gt;
&lt;!--catalog last updated 2000-11-01--&gt;
&lt;catalog xmlns="http://www.example.com/catalog/"&gt;
  &lt;book id="bk101"&gt;
     &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
     &lt;title&gt;XML Developer's Guide&lt;/title&gt;
     &lt;genre&gt;Computer&lt;/genre&gt;
     &lt;price&gt;44.95&lt;/price&gt;
     &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
     &lt;description&gt;&lt;![CDATA[An in-depth look at creating applications with XML, using &lt;, &gt;,]]&gt; and &amp;amp;.&lt;/description&gt;
  &lt;/book&gt;
  &lt;book id="bk109"&gt;
     &lt;author&gt;Kress, Peter&lt;/author&gt;
     &lt;title&gt;Paradox Lost&lt;/title&gt;
     &lt;genre&gt;Science Fiction&lt;/genre&gt;
     &lt;price&gt;6.95&lt;/price&gt;
     &lt;publish_date&gt;2000-11-02&lt;/publish_date&gt;
     &lt;description&gt;After an inadvertant trip through a Heisenberg Uncertainty Device, James Salway discovers the problems of being quantum.&lt;/description&gt;
  &lt;/book&gt;
&lt;/catalog&gt;</PRE>

<P>You can walk the tree to the first level of elements contained by the root using Microsoft&reg; Visual Basic&reg; Scripting Edition (VBScript).</P>

<PRE class="code">Dim root
Dim xmlDoc
Dim child
 
Set xmlDoc = CreateObject("Msxml2.DOMDocument.5.0")
xmlDoc.async = False
xmlDoc.load("c:\books.xml")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;'Set root to the XML document's root element, COLLECTION:
&nbsp;&nbsp;&nbsp;Set root = xmlDoc.documentElement
&nbsp;&nbsp;&nbsp;'Walk from the root to each of its child nodes:
&nbsp;&nbsp;&nbsp;For Each child In root.childNodes
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  MsgBox child.text
&nbsp;&nbsp;&nbsp;Next
End If</PRE>

<P>When run, this example displays the text of each of the root's child nodes (book elements) as a separate text message.</P>

<P>You can use the following methods to navigate to a specific node or nodes deep within the tree.

<UL type="disc">
	<LI><A HREF="xml_mth_hn_6cys.htm">nodeFromID method</A>
<P>The <code class="ce">nodeFromID</code> method takes a unique ID, as identified by an XML schema or document type definition (DTD), and returns the node corresponding to that specific ID.
</li>

	<LI><A HREF="xml_mth_dg_96hv.htm">getElementsByTagName method (DOMDocument)</A>
<P>The <code class="ce">getElementsByTagName</code> method takes a string representing a specific tag name and returns all element nodes with this tag name.
</li>
</UL>

<P>You can use the following code to retrieve all element nodes named <code class="ce">&lt;AUTHOR&gt;</code> in <B>books.xml</B>.</P>

<PRE class="code">Dim ElemList
Dim xmlDoc
Set xmlDoc = CreateObject("Msxml2.DOMDocument.5.0")
xmlDoc.async = False
xmlDoc.load("c:\xml\books.xml")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set ElemList = xmlDoc.getElementsByTagName("author")
&nbsp;&nbsp;&nbsp;For i=0 To (ElemList.length -1)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox ElemList.item(i).xml
&nbsp;&nbsp;&nbsp;Next
End If</PRE>

<P>The <code class="ce">selectNodes</code> method of the <code class="ce">IXMLDOMNode</code> object offers a more flexible way of accessing nodes using XML Path Language (XPath).</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_concepts_4awg.htm">Document Map</A> | <A HREF="xml_pro_ae_6xro.htm">documentElement Property</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A> | <A HREF="xml_mth_sz_3oz7.htm">selectNodes Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
