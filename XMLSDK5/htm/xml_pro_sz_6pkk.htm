<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>text Property</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmprotext"></A>text Property</H1>

<P>Represents the text content of the node or the concatenated text representing the node and its descendants.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">strValue = oXMLDOMNode.text;</PRE>

<H4 class="dtH4">Example</H4>

<P>The following script example creates an <code class="ce">IXMLDOMNode</code> of type NODE_ENTITY, and then displays the object's text value, including that of any of the object's child nodes.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var currNode;
xmlDoc.async = false;
xmlDoc.load("books.xml");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;currNode = xmlDoc.documentElement.childNodes.item(0);
&nbsp;&nbsp;&nbsp;alert(currNode.text);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">strValue = oXMLDOMNode.text</PRE>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft&reg; Visual Basic&reg; example creates an <code class="ce">IXMLDOMNode</code> of type NODE_ENTITY, and then displays the object's text value, including that of any of the object's child nodes.</P>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim currNode As IXMLDOMNode
xmlDoc.async = False
xmlDoc.Load ("books.xml")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set currNode = xmlDoc.documentElement.childNodes.Item(0)
&nbsp;&nbsp;&nbsp;MsgBox currNode.Text
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT get_text(
    BSTR *text);
HRESULT put_text(
    BSTR text);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>text </I>[out, retval]</DT>

<DD>A string representing the text content of this node and its descendants. This value varies depending on the value of the <code class="ce">nodeType</code> method.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>S_FALSE</DT>

<DD>The value returned when there is no text.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the <code class="ce">text</code> parameter is Null.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>String. The property is read/write. When concatenated, the text represents the contents of text or CDATA nodes. All concatenated text nodes are normalized according to <code class="ce">xml:space</code> attributes and the value of the <code class="ce">preserveWhiteSpace</code> switch. Concatenated CDATA text is not normalized. (Child nodes that contain NODE_COMMENT and NODE_PROCESSING_INSTRUCTION nodes are not concatenated.) .text trims the whitespace on the edges of the result, and "normalizes" \r\n =&gt; \n, but otherwise just concatenates text.</P>

<P>Retrieves and sets the string representing the text contents of this node or the concatenated text representing this node and its descendants.</P>

<P>For more precise control over text manipulation in an XML document, use the lower-level <code class="ce">nodeValue</code> property, which returns the raw text associated with a NODE_TEXT node.</P>

<P>Consider the <code class="ce">&lt;root&gt;</code> element in this example:</P>

<PRE class="code">&lt;root att="   123   a   &lt;   "&gt;
   &lt;a&gt;   a   a   &lt;/a&gt;
   &lt;!--   comment   b   --&gt;
   &lt;?pi   pi   c   ?&gt;
   &lt;![CDATA[   cdata   d   ]]&gt;
   e   f
&lt;/root&gt;</PRE>

<P>The <code class="ce">text</code> property for this element returns the following concatenated text.</P>

<PRE class="code">"a a   cdata   d    e f"</PRE>

<P>Note that the white space within the CDATA node is preserved.</P>

<P>This value depends on the value of the <code class="ce">nodeType</code> property.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=47%>NODE_ATTRIBUTE
<P>NODE_DOCUMENT</P>

<P>NODE_ENTITY</P>
</TD>
<TD width=53%>Returns a string representing the value of the node. This is the concatenated text of all subnodes with entities expanded.</TD>
</TR>

<TR VALIGN="top">
<TD width=47%>NODE_CDATA_SECTION
<P>NODE_COMMENT</P>

<P>NODE_PROCESSING_INSTRUCTION</P>

<P>NODE_TEXT</P>
</TD>
<TD width=53%>Returns the text contained in the node, which is the same as the <code class="ce">nodeValue</code> property.</TD>
</TR>

<TR VALIGN="top">
<TD width=47%>NODE_DOCUMENT_TYPE
<P>NODE_NOTATION</P>
</TD>
<TD width=53%>Returns the empty string (""). These node types do not have associated text.</TD>
</TR>

<TR VALIGN="top">
<TD width=47%>NODE_DOCUMENT_FRAGMENT</TD>
<TD width=53%>Returns the text comprised of the concatenation of all descendant nodes.</TD>
</TR>

<TR VALIGN="top">
<TD width=47%>NODE_ELEMENT</TD>
<TD width=53%>Contains a string that represents the element content. This will also include the text content from all child elements, concatenated in document order. For example, consider the following XML.
<PRE class="code">&lt;count&gt;
  &lt;item&gt;one&lt;/item&gt;
  &lt;item&gt;two&lt;/item&gt;
  &lt;item&gt;three&lt;/item&gt;
  &lt;item&gt;four&lt;/item&gt;
&lt;/count&gt;</PRE>

<P>The <code class="ce">text</code> property for the <code class="ce">&lt;count&gt;</code> element contains the value <code class="ce">"one two three four"</code>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=47%>NODE_ENTITY_REFERENCE</TD>
<TD width=53%>Returns the string representation of the entity reference.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_pro_no_5zvp.htm">nodeType Property</A> | <A HREF="xml_pro_no_7sth.htm">nodeValue Property</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomattribute_34kl.htm">IXMLDOMAttribute</A> | <A HREF="xml_obj_ixmldomcdatasection_4u9a.htm">IXMLDOMCDATASection</A> | <A HREF="xml_obj_ixmldomcharacterdata_4ov5.htm">IXMLDOMCharacterData</A> | <A HREF="xml_obj_ixmldomcomment_40ac.htm">IXMLDOMComment</A> | <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A> | <A HREF="xml_obj_ixmldomdocumentfragment_0zxw.htm">IXMLDOMDocumentFragment</A> | <A HREF="xml_obj_ixmldomdocumenttype_619h.htm">IXMLDOMDocumentType</A> | <A HREF="xml_obj_ixmldomelement_8yyc.htm">IXMLDOMElement</A> | <A HREF="xml_obj_ixmldomentity_2c8p.htm">IXMLDOMEntity</A> | <A HREF="xml_obj_ixmldomentityreference_25k5.htm">IXMLDOMEntityReference</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A> | <A HREF="xml_obj_ixmldomnotation_5d7y.htm">IXMLDOMNotation</A> | <A HREF="xml_obj_ixmldomprocessinginstruction_6ilw.htm">IXMLDOMProcessingInstruction</A> | <A HREF="xml_obj_ixmldomtext_8sxg.htm">IXMLDOMText</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
