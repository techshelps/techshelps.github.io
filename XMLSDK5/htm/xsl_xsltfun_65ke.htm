<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>format-number Function</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefformatnumberfunction"></A>format-number Function</H1>

<P>Converts numbers into strings. The conversion is the result of formatting the number specified in the first argument (<I>number</I>), using the format specified in the second argument (<I>string</I>), and applying the rules defined in the decimal format named in the third optional argument (string). If the third argument, the decimal format name, is omitted, the default decimal format is used. This function and the <code class="ce">&lt;xsl:decimal-format&gt;</code> element are designed to be used together.</P>

<PRE class="syntax"><I>string</I> format-number(<I>number</I>, <I>string</I>, <I>string</I>?)</PRE>

<H4 class="dtH4">Remarks</H4>

<P>The first argument specifies the <I>input value</I>. For example, the number 5351.</P>

<P>The second argument specifies the <I>format pattern</I>. For example, the string '###.###,00'.</P>

<P>The third argument is an optional <I>decimal format name</I>. This enables any character to be used in the format pattern string; the character is assigned a role in the <code class="ce">&lt;xsl:decimal-format&gt;</code> element. A common decimal format name is <code class="ce">european</code>, used to reverse the role of comma and period from the default.</P>

<P>In the format pattern, the following characters are supported "."; ","; "#","%","0", and the Unicode per-mille character (#x2030). The "#" character is used to describe integers. The "." and "," characters are used to describe the location and type of punctuation. The "0" character is used to place a 0 before and after the "." character when the position would otherwise show no numeral, such as 00.3 or 3.00. When truncating digits to the right of the decimal points, the number is rounded. The number to the left of the decimal point is never truncated.</P>

<P>The input value and format pattern string must both be present or an error will be thrown. If the input value cannot be coerced to a number by using the rules in the <code class="ce">number()</code> function, the format-number function returns NaN. If the format pattern string is not a valid pattern string, the function returns the input value, unchanged.</P>

<P>The decimal format name, if present, represents the name of a decimal format as specified in an <code class="ce">&lt;xsl:decimal-format&gt;</code> element. The decimal format name must be a qualified name. If you specify a decimal format name in the function, there must be an <code class="ce">&lt;xsl:decimal-format&gt;</code> element in the style sheet with the same name.</P>

<P>The <code class="ce">&lt;xsl:decimal-format&gt;</code> element can override the default number formatting pattern. The <code class="ce">&lt;xsl:decimal-format&gt;</code> element follows the formatting specifier patterns of the <code class="ce">java.text.DecimalFormat</code> class. For examples of using the <code class="ce">format-number</code> function with <code class="ce">&lt;xsl:decimal-format&gt;</code>, see <A HREF="xsl_elm_af_5pbo.htm">&lt;xsl:decimal-format&gt; Element</A>.</P>

<H4 class="dtH4">Examples</H4>

<P>The following XSLT lines return "24.535,20":</P>

<PRE class="code">&lt;xsl:decimal-format name="european" decimal-separator=',' grouping-separator='.' /&gt;
&lt;xsl:value-of select="<B>format-number</B>(24535.2, '###.###,00', 'european')"/&gt;</PRE>

<P>The following function call returns "5,351":</P>

<PRE class="code">format-number(5351,"#,###")</PRE>

<P>The following function call returns "5351.00":</P>

<PRE class="code">format-number(5351, "#.00")</PRE>

<P>The following function call returns "53.5100":</P>

<PRE class="code">format-number(53.51, "#.0000")</PRE>

<P>The following function call returns "0053.5100":</P>

<PRE class="code">format-number(53.51, "0000.0000")</PRE>

<P>The following function call returns "0053.51":</P>

<PRE class="code">format-number(53.51, "0000.####")</PRE>

<P>The following function call returns "53.6":</P>

<PRE class="code">format-number(53.56, "0.0")</PRE>

<P>For a complete example of applying this function to XML data using an XSLT style sheet, see <A HREF="xsl_elm_af_65wl.htm">Example of &lt;xsl:decimal-format&gt;</A>.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_devdatatypes_065v.htm">Data Types in Schemas</A> | <A HREF="xsd_xdrref_3w6d.htm">XDR Schema Data Types Reference</A> | <A HREF="xsd_ref_5bc5.htm">XML Data Types Reference</A> | <A HREF="xsl_elm_af_5pbo.htm">&lt;xsl:decimal-format&gt; Element</A> | <A HREF="xslt_howdoi_2put.htm">Initiate XSLT in a Script</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
