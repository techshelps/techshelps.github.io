<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>context Property</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmprocontext"></A>context Property</H1>

<P>Gets the node (subtree) that is applied to the selection.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">var objXMLDOMNode = objXMLDOMSelection.context;
objXMLDOMSelection.context = objXMLDOMNode;</PRE>

<H4 class="dtH4">Example</H4>

<P>The following script example shows what is contained in the context of a selection after a query is executed. It also shows that the selection is reset when this property is changed.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var selection;
xmlDoc.loadXML("&lt;Customer&gt;Microsoft&lt;/Customer&gt;");
xmlDoc.setProperty("SelectionLanguage", "XPath");
selection = xmlDoc.selectNodes("//Customer");
alert(selection.context.xml);</PRE>

<P>The <code class="ce">selection.context.xml</code> contains <code class="ce">"&lt;Customer&gt;Microsoft&lt;/Customer&gt;"</code>; <code class="ce">selection.length </code>= 1.</P>

<PRE class="code">xmlDoc.loadXML("&lt;new&gt;none&lt;/new&gt;");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;alert(selection.context.xml);
}</PRE>

<P>The <code class="ce">selection.context.xml</code> contains <code class="ce">"&lt;new&gt;none&lt;/new&gt;"</code>; <code class="ce">selection.length </code>= 0.</P>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">Set objXMLDOMNode = objXMLDOMSelection.context
objXMLDOMSelection.context = objXMLDOMNode</PRE>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft&reg; Visual Basic&reg; example shows what is contained in the context of a selection after a query is executed. It also shows that the selected set is reset when this property is changed.</P>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim selection As Msxml2.IXMLDOMSelection

xmlDoc.loadXML ("&lt;Customer&gt;Microsoft&lt;/Customer&gt;")
xmlDoc.setProperty "SelectionLanguage", "XPath"
Set selection = xmlDoc.selectNodes("//Customer")
MsgBox selection.context.xml</PRE>

<P>The <code class="ce">selection.context.xml</code> contains <code class="ce">"&lt;Customer&gt;Microsoft&lt;/Customer&gt;"</code>; <code class="ce">selection.length</code> = 1.</P>

<PRE class="code">xmlDoc.loadXML ("&lt;new&gt;none&lt;/new&gt;")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;MsgBox selection.context.xml
End If</PRE>

<P>The <code class="ce">selection.context.xml</code> contains <code class="ce">"&lt;new&gt;none&lt;/new&gt;"</code>; <code class="ce">selection.length</code> = 0.</P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT get_context(IXMLDOMNode ** ppNode);
HRESULT putref_context(IXMLDOMNode * pNode);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>ppNode</I> [out, retval]</DT>

<DD>The subtree to apply the pattern to.</dd>

<DT><I>pNode</I> [in]</DT>

<DD>The subtree to apply the pattern to.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if the method is successful.</dd>

<DT>S_FALSE (for <code class="ce">get_context</code> only)</DT>

<DD>The value returned if the context is invalid.</dd>

<DT>E_INVALIDARG (for <code class="ce">get_context</code> only)</DT>

<DD>The value returned if the input argument is Null.</dd>

<DT>E_FAIL (for <code class="ce">putref_context</code> only)</DT>

<DD>The value returned if a node with a different threading model is provided.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<P>The following C/C++ example shows what is contained in the <code class="ce">context</code> property after <code class="ce">selectNodes</code> is executed.</P>

<PRE class="code">#import "msxml5.dll"
using namespace MSXML2;

#define CHECK_AND_RELEASE(pInterface)  \
if(pInterface) \
   {\
pInterface-&gt;Release();\
pInterface = NULL;\
   }\

#define RELEASE(pInterface)  \
   {\
pInterface-&gt;Release();\
pInterface = NULL;\
   }\

BOOL DOMSelectionContextDemo()
{
   BOOL bResult = FALSE;
   short sResult = FALSE;
   IXMLDOMSelection *pIXMLDOMSelection=NULL;
   IXMLDOMNode *pIXMLDOMNode=NULL;
   IXMLDOMDocument2 *pIXMLDOMDocument2=NULL;
   HRESULT hr;
   BSTR bstrValue;

   try
   {
      hr=CoCreateInstance(CLSID_DOMDocument, NULL, CLSCTX_SERVER, 
         IID_IXMLDOMDocument2, (LPVOID*)(&amp;pIXMLDOMDocument2));
      SUCCEEDED(hr) ? 0 : throw hr;

      if(pIXMLDOMDocument2)
      {
         hr=pIXMLDOMDocument2-&gt;put_async(VARIANT_FALSE);
         if(SUCCEEDED(hr))
         {
            hr=pIXMLDOMDocument2-&gt;load(_variant_t( 
               _T("d:\\inetpub\\wwwroot\\samplexml.xml")), &amp;sResult);
            if(SUCCEEDED(hr) &amp;&amp; (sResult==VARIANT_TRUE))
            {
               hr=pIXMLDOMDocument2-&gt;selectNodes( 
               _T("*/BOOK[TITLE='Lover Birds']"),
               (IXMLDOMNodeList**)&amp;pIXMLDOMSelection);
               if(SUCCEEDED(hr))
               {
                  if(SUCCEEDED(hr) &amp;&amp; pIXMLDOMSelection)
                  {
                     hr=pIXMLDOMSelection-&gt;get_context(&amp;pIXMLDOMNode);
                     if(SUCCEEDED(hr) &amp;&amp; pIXMLDOMNode)
                     {
                        hr=pIXMLDOMNode-&gt;get_xml(&amp;bstrValue);
                        if(SUCCEEDED(hr))
                           ::MessageBox(NULL, bstrValue, _T("Current 
                              Selection Context"), MB_OK);
                        bResult=TRUE;
                        RELEASE(pIXMLDOMNode);
                     }
                     RELEASE(pIXMLDOMSelection);
                  }
               }
            }
         }
         RELEASE(pIXMLDOMDocument2);
      }
   }
   catch(...)
   {
      CHECK_AND_RELEASE(pIXMLDOMNode);
      CHECK_AND_RELEASE(pIXMLDOMSelection);
      CHECK_AND_RELEASE(pIXMLDOMDocument2);
      DisplayErrorToUser();
   }
   return bResult;
}</PRE>

<P class="label"><B>Data File: d:\\inetpub\\wwwroot\\samplexml.xml</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;COLLECTION xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
   &lt;DATE dt:dt="datetime"&gt;1998-10-13T15:56:00&lt;/DATE&gt;
   &lt;BOOK&gt;
      &lt;TITLE&gt;Lover Birds&lt;/TITLE&gt;
      &lt;AUTHOR&gt;Cynthia Randall&lt;/AUTHOR&gt;
      &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
   &lt;/BOOK&gt;
   &lt;BOOK&gt;
      &lt;TITLE&gt;The Sundered Grail&lt;/TITLE&gt;
      &lt;AUTHOR&gt;Eva Corets&lt;/AUTHOR&gt;
      &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
   &lt;/BOOK&gt;
&lt;/COLLECTION&gt;</PRE>

<P class="label"><B>Output (in a message box)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;COLLECTION xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
   &lt;DATE dt:dt="datetime"&gt;1998-10-13T15:56:00&lt;/DATE&gt;
   &lt;BOOK&gt;
      &lt;TITLE&gt;Lover Birds&lt;/TITLE&gt;
      &lt;AUTHOR&gt;Cynthia Randall&lt;/AUTHOR&gt;
      &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
   &lt;/BOOK&gt;
   &lt;BOOK&gt;
      &lt;TITLE&gt;The Sundered Grail&lt;/TITLE&gt;
      &lt;AUTHOR&gt;Eva Corets&lt;/AUTHOR&gt;
      &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
   &lt;/BOOK&gt;
&lt;/COLLECTION&gt;</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>Because the <code class="ce">selectNodes</code> method can be called on any node type, <code class="ce">context</code> can also be assigned any node type. A node from a document different from the one that originally created <code class="ce">IXMLDOMSelection</code> can also be specified as long as it has the same threading model. Calling <code class="ce">context</code> also resets the state of the node list so that <code class="ce">nextNode</code> starts over.</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P>Applies to: <A HREF="xml_obj_ixmldomselection_0jvy.htm">IXMLDOMSelection</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
