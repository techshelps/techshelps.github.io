<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>dataType Property</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmprodatatype"></A>dataType Property</H1>

<P>Specifies the data type for this element or attribute. When a DTD is used, the <code class="ce">dataType</code> property is only applicable to attributes, in which case dataType returns the attribute-type according to the DTD. The value returned will use XDR naming conventions, however. In other words, the type is returned in lower-case. This is different from the DTD convention. When using XDR, or when an element has a dt:dt attribute, elements may also have datatypes.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">objValue = oXMLDOMNode.dataType;
objXMLDOMNode.dataType = objValue;</PRE>

<H4 class="dtH4">Example</H4>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
xmlDoc.async = false;
xmlDoc.loadXML("&lt;root/&gt;");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;var root = xmlDoc.documentElement;
&nbsp;&nbsp;&nbsp;root.dataType = "int";
&nbsp;&nbsp;&nbsp;root.nodeTypedValue = 5;
&nbsp;&nbsp;&nbsp;alert(xmlDoc.xml);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">objValue = oXMLDOMNode.dataType
objXMLDOMNode.dataType = objValue</PRE>

<H4 class="dtH4">Example</H4>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim root As IXMLDOMElement
xmlDoc.async = False
xmlDoc.loadXML "&lt;root/&gt;"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set root = xmlDoc.documentElement
&nbsp;&nbsp;&nbsp;root.dataType = "int"
&nbsp;&nbsp;&nbsp;root.nodeTypedValue = 5
&nbsp;&nbsp;&nbsp;MsgBox xmlDoc.xml
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT get_dataType(
    VARIANT *dataTypeName);
HRESULT put_dataType(
    BSTR dataTypeName);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>dataTypeName</I> [out, retval][in]</DT>

<DD>The VARIANT can be a BSTR that contains the data type name, or VT_NULL if no data type is defined.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>S_FALSE (for <code class="ce">get_dataType</code> only)</DT>

<DD>The value returned if the node is not typed.</dd>

<DT>E_INVALIDARG (for <code class="ce">get_dataType</code> only)</DT>

<DD>The value returned if the <code class="ce">dataTypeName</code> parameter is Null.</dd>

<DT>E_FAIL (for <code class="ce">put_dataType</code> only)</DT>

<DD>The value returned if an error occurs.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The property is read/write. The VARIANT can be a BSTR that contains the data type name, or VT_NULL if no data type is defined. This property applies to DTDs only, not to XML-Data Reduced (XDR) schemas or XML Schemas (XSD). This value depends on the value of the <code class="ce">nodeType</code> property of the <code class="ce">IXMLDOMNode</code>.</P>

<P>This member is an extension of the World Wide Web Consortium (W3C) Document Object Model (DOM).</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=50%>NODE_ATTRIBUTE</TD>
<TD width=50%>Contains the string representation of the data type specifier included in the schema, or Null if no data type is specified.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>NODE_CDATA_SECTION
<P>NODE_COMMENT NODE_DOCUMENT</P>

<P>NODE_DOCUMENT_FRAGMENT</P>

<P>NODE_DOCUMENT_TYPE</P>

<P>NODE_ENTITY</P>

<P>NODE_NOTATION</P>

<P>NODE_PROCESSING_INSTRUCTION</P>

<P>NODE_TEXT</P>
</TD>
<TD width=50%>Contains the constant string value "string". These node types do not have data types, so the <code class="ce">dataType</code> property cannot be set for these node types. Attempts to set this property are ignored.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>NODE_ELEMENT</TD>
<TD width=50%>Contains the string representation of the data type specifier included on the instance of the element or in the schema, or Null if no data type is specified.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>NODE_ENTITY_REFERENCE</TD>
<TD width=50%>Contains the string representation of the data type specifier for the referenced entity. This is limited to entities with a single data type on the root level element of the subtree corresponding to the entity. Contains Null if no data type is specified. It is not possible to set the data type of an entity reference. The data type must be set directly on the referenced element. Attempts to set the value of the <code class="ce">dataType</code> property are ignored.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_pro_no_5zvp.htm">nodeType Property</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomattribute_34kl.htm">IXMLDOMAttribute</A> | <A HREF="xml_obj_ixmldomcdatasection_4u9a.htm">IXMLDOMCDATASection</A> | <A HREF="xml_obj_ixmldomcharacterdata_4ov5.htm">IXMLDOMCharacterData</A> | <A HREF="xml_obj_ixmldomcomment_40ac.htm">IXMLDOMComment</A> | <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A> | <A HREF="xml_obj_ixmldomdocumentfragment_0zxw.htm">IXMLDOMDocumentFragment</A> | <A HREF="xml_obj_ixmldomdocumenttype_619h.htm">IXMLDOMDocumentType</A> | <A HREF="xml_obj_ixmldomelement_8yyc.htm">IXMLDOMElement</A> | <A HREF="xml_obj_ixmldomentity_2c8p.htm">IXMLDOMEntity</A> | <A HREF="xml_obj_ixmldomentityreference_25k5.htm">IXMLDOMEntityReference</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A> | <A HREF="xml_obj_ixmldomnotation_5d7y.htm">IXMLDOMNotation</A> | <A HREF="xml_obj_ixmldomprocessinginstruction_6ilw.htm">IXMLDOMProcessingInstruction</A> | <A HREF="xml_obj_ixmldomtext_8sxg.htm">IXMLDOMText</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
