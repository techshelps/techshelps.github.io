<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>transformNode Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthtransformnode"></A>transformNode Method</H1>

<P>Processes this node and its children using the supplied XSL Transformations (XSLT) style sheet and returns the resulting transformation.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">strValue = oXMLDOMNode.transformNode(objStylesheet);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>objstylesheet</I></DT>

<DD>An object. A valid XML document or DOM node that consists of XSLT elements that direct the transformation of this node.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>A string. Returns a string that contains the product of the transformation of this XML document based on the XSLT style sheet.</P>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft® JScript® example fills an HTML <code class="ce">DIV</code> tag with the result of <code class="ce">transformNode</code>.</P>

<PRE class="code">&lt;SCRIPT&gt;
&nbsp;&nbsp;&nbsp;// Load data.
&nbsp;&nbsp;&nbsp;var source = new ActiveXObject("Msxml2.DOMDocument.5.0");
&nbsp;&nbsp;&nbsp;source.async = false;
&nbsp;&nbsp;&nbsp;source.load("books.xml");
&nbsp;&nbsp;&nbsp;if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
&nbsp;&nbsp;&nbsp;} else {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Load style sheet.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var stylesheet = new ActiveXObject("Msxml2.DOMDocument.5.0");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stylesheet.async = false
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stylesheet.load("sample.xsl");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Fill a div tag with the result of the transform
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;divInfo.innerHTML = source.transformNode(stylesheet);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}
}
&lt;/SCRIPT&gt;</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">strValue = oXMLDOMNode.transformNode(objStylesheet)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>objstylesheet</I></DT>

<DD>An object. A valid XML document or DOM node that consists of XSLT elements that direct the transformation of this node.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>A string. Returns a string that contains the product of the transformation of this XML document based on the XSLT style sheet.</P>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft® Visual Basic® example displays the result of <code class="ce">transformNode</code>.</P>

<PRE class="code">Dim source As New Msxml2.DOMDocument50
Dim stylesheet As New Msxml2.DOMDocument50

' Load data.
source.async = False
source.Load "books.xml"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;' Load style sheet.
&nbsp;&nbsp;&nbsp;stylesheet.async = False
&nbsp;&nbsp;&nbsp;stylesheet.Load "sample.xsl"
&nbsp;&nbsp;&nbsp;If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
&nbsp;&nbsp;&nbsp;Else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Do the transform.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox source.transformNode(stylesheet)
&nbsp;&nbsp;&nbsp;End If
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT transformNode(
    IXMLDOMNode *stylesheet,
    BSTR *xmlString);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>stylesheet</I> [in]</DT>

<DD>A valid XML document or DOM node that consists of XSLT elements that direct the transformation of this node.</dd>

<DT><I>xmlString</I> [out, retval]</DT>

<DD>A string that contains the product of the transformation of this XML document based on the XSLT style sheet.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the <code class="ce">stylesheet</code> or <code class="ce">xmlString</code> parameter is Null.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The <code class="ce">stylesheet</code> parameter must be either a <code class="ce">DOMDocument</code> node, in which case the document is assumed to be an Extensible Stylesheet Language (XSL) style sheet, or a Document Object Model (DOM) node in the XSL style sheet, in which case this node is treated as a standalone style sheet fragment.</P>

<P>The source node defines a context in which the style sheet operates, but navigation outside this scope is allowed. For example, a style sheet can use the <code class="ce">id</code> function to access other parts of the document.</P>

<P>This method supports both standalone and embedded style sheets and also provides the ability to run a localized style sheet fragment against a particular source node.</P>

<P>This member is an extension of the World Wide Web Consortium (W3C) DOM.</P>

<P>For more information about XSLT style sheets, see the <A HREF="xsl_ref_overview_1vad.htm">XSLT Reference</A>.</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_domprocess_0tyq.htm">Using XSLT with DOM or SAX</A> | <A HREF="xpath_functions_05da.htm">id Function</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomattribute_34kl.htm">IXMLDOMAttribute</A> | <A HREF="xml_obj_ixmldomcdatasection_4u9a.htm">IXMLDOMCDATASection</A> | <A HREF="xml_obj_ixmldomcharacterdata_4ov5.htm">IXMLDOMCharacterData</A> | <A HREF="xml_obj_ixmldomcomment_40ac.htm">IXMLDOMComment</A> | <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A> | <A HREF="xml_obj_ixmldomdocumentfragment_0zxw.htm">IXMLDOMDocumentFragment</A> | <A HREF="xml_obj_ixmldomdocumenttype_619h.htm">IXMLDOMDocumentType</A> | <A HREF="xml_obj_ixmldomelement_8yyc.htm">IXMLDOMElement</A> | <A HREF="xml_obj_ixmldomentity_2c8p.htm">IXMLDOMEntity</A> | <A HREF="xml_obj_ixmldomentityreference_25k5.htm">IXMLDOMEntityReference</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A> | <A HREF="xml_obj_ixmldomnotation_5d7y.htm">IXMLDOMNotation</A> | <A HREF="xml_obj_ixmldomprocessinginstruction_6ilw.htm">IXMLDOMProcessingInstruction</A> | <A HREF="xml_obj_ixmldomtext_8sxg.htm">IXMLDOMText</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
