<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>addObject Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthaddobject"></A>addObject Method</H1>

<P>Adds objects into a style sheet.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">objXSLProcessor.addObject(obj, namespaceURI);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>obj</I></DT>

<DD>The object to pass in. Optionally, you can pass a null value here to signal to the processor that an object previously added should be released.</dd>

<DT><I>namespaceURI</I></DT>

<DD>The namespace to use inside the style sheet to identify the object.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<P>The following script example passes an object to the style sheet.</P>

<PRE class="code">var xsldoc = new ActiveXObject("Msxml2.FreeThreadedDOMDocument.5.0");
var xmldoc = new ActiveXObject("Msxml2.FreeThreadedDOMDocument.5.0");
var xsltemp = new ActiveXObject("Msxml2.XSLTemplate.5.0");
var xslproc;

xsldoc.load("d:\\inetpub\\wwwroot\\sampleXSLWithObject.xml");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;xsltemp.stylesheet = xsldoc.documentElement;
&nbsp;&nbsp;&nbsp;xslproc = xsltemp.createProcessor();
&nbsp;&nbsp;&nbsp;xmldoc.loadXML("&lt;level&gt;Twelve&lt;/level&gt;");
&nbsp;&nbsp;&nbsp;xslproc.input = xmldoc;

&nbsp;&nbsp;&nbsp;xslproc.addObject(xmldoc, "urn:my-object");
&nbsp;&nbsp;&nbsp;xslproc.transform();
&nbsp;&nbsp;&nbsp;alert(xslproc.output);
}</PRE>

<P class="label"><B>File Name: d:\inetpub\wwwroot\sampleXSLWithObject.xml</B></P>

<PRE class="code">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
xmlns:myObj="urn:my-object"&gt;
&lt;xsl:output method="xml" indent="yes"/&gt;
&lt;xsl:template match="/"&gt;
   &lt;xsl:element name="stage"&gt;
   &lt;xsl:value-of select="myObj:get-text()"/&gt;
   &lt;/xsl:element&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Output</B></P>

<PRE class="code">&lt;?xml version="1.0" encoding="UTF-16"?&gt;
&lt;stage&gt;
Twelve
&lt;/stage&gt;</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">objXSLProcessor.addObject(obj, namespaceURI)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>obj</I></DT>

<DD>The object to pass in. Optionally, you can pass a null object value here such as Nothing to signal to the processor that an object previously added should be released.</dd>

<DT><I>namespaceURI</I></DT>

<DD>The namespace to use inside the style sheet to identify the object.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<P>The following Visual Basic example passes an object to the style sheet.</P>

<PRE class="code">Dim xsldoc As New Msxml2.FreeThreadedDOMDocument50
Dim xmldoc As New Msxml2.FreeThreadedDOMDocument50
Dim xsltemp As New Msxml2.XSLTemplate50
Dim xslproc As Msxml2.IXSLProcessor

xsldoc.Load "d:\inetpub\wwwroot\sampleXSLWithObject.xml"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set xsltemp.stylesheet = xsldoc.documentElement
&nbsp;&nbsp;&nbsp;Set xslproc = xsltemp.createProcessor
&nbsp;&nbsp;&nbsp;xmldoc.loadXML "&lt;level&gt;Twelve&lt;/level&gt;"
&nbsp;&nbsp;&nbsp;xslproc.input = xmldoc

&nbsp;&nbsp;&nbsp;xslproc.addObject xmldoc, "urn:my-object"
&nbsp;&nbsp;&nbsp;xslproc.Transform
&nbsp;&nbsp;&nbsp;MsgBox xslproc.output
End If</PRE>

<P class="label"><B>File Name: d:\inetpub\wwwroot\sampleXSLWithObject.xml</B></P>

<PRE class="code">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0" 
xmlns:myObj="urn:my-object"&gt;
&lt;xsl:output method="xml" indent="yes"/&gt;
&lt;xsl:template match="/"&gt;
   &lt;xsl:element name="stage"&gt;
   &lt;xsl:value-of select="myObj:get-text()"/&gt;
   &lt;/xsl:element&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Output</B></P>

<PRE class="code">&lt;?xml version="1.0" encoding="UTF-16"?&gt;
&lt;stage&gt;
Twelve
&lt;/stage&gt;</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT addObject (IDispatch* obj, BSTR namespaceURI);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>obj</I> [in]</DT>

<DD>The object to pass in. Optionally, you can pass a NULL IDispatch here to signal to the processor that an object previously added should be released.</dd>

<DT><I>namespaceURI</I> [in]</DT>

<DD>The namespace that will be used inside the style sheet to identify the object.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<P>E_FAIL if the value of the <code class="ce">readyState</code> property is <code class="ce">READYSTATE_INTERACTIVE</code>.</P>
</div><!-- [C/C++] -->

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">Remarks</H4>

<P>Numbers are coerced to double, everything is coerced into a string, and objects return an error.</P>

<P>The syntax <code class="ce">get-</code> is used to retrieve the property value exposed by the object that was passed into the style sheet. In the preceding example, the value for the property <code class="ce">'text'</code> was retrieved as follows:</P>

<PRE class="code">&lt;xsl:value-of select="myObj:get-text()"/&gt;</PRE>

<P>For example, if the object that was passed into the style sheet included a property called <code class="ce">sheepcount</code>, you would use the following syntax to retrieve the value of that property.</P>

<PRE class="code">&lt;xsl:value-of select="myObj:get-sheepcount()"/&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P>Applies to: <A HREF="xml_obj_ixslprocessor_9j8y.htm">IXSLProcessor</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
