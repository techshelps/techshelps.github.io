<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Determining the Context Node</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcondeterminingthecontextnode"></A>Determining the Context Node</H1>

<P>The context node of an XML Path Language (XPath) location path is the node relative to the expression being evaluated.</P>

<P>In lengthy XPath expressions, the context node implicitly changes as the processor hits various steps in moving along the expression from left to right. For example, consider the expression:</P>

<PRE class="code">attribute::scale/ancestor::weather/forecast[position()=2]/attribute::day</PRE>

<UL type="disc">
	<LI>When evaluation of the expression begins, the context node is the parent element of a <code class="ce">scale</code> attribute.</li>

	<LI>The <code class="ce">/ancestor::weather</code> term is evaluated in terms of the <code class="ce">scale</code> attribute.</li>

	<LI><code class="ce">/forecast[position()=2]</code> assumes the context node to be the result of the previous location step, that is, in the case of the sample document, the second <code class="ce">&lt;forecast&gt;</code> child of the <code class="ce">&lt;weather&gt;</code> element.</li>

	<LI><code class="ce">/attribute::day </code>locates the <code class="ce">day</code> attribute of the elements resulting from the previous step.</li>
</UL>

<P>For XSLT, understanding the context node, and knowing what it is at any given point, is critical to successful use of the standard.</P>

<H4 class="dtH4">Example</H4>

<P>In the following XSLT file, the XPath expressions appear as bold text.</P>

<P class="label"><B>XSLT File (weathersimple.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;
&lt;!-- suppress text nodes not covered in subsequent template rule --&gt;
&lt;xsl:template match="text()"/&gt;

&lt;xsl:template match="<code><b class="cfe">temperature</b></code>"&gt;
    Today&lt;xsl:choose&gt;
        &lt;xsl:when test="<code><b class="cfe">name(..)</b></code>='today'"&gt;'s &lt;/xsl:when&gt;
        &lt;xsl:otherwise &gt;&lt;xsl:value-of select="<code><b class="cfe">../@day</b></code>" /&gt;'s &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
temperature: &lt;xsl:value-of select="<code><b class="cfe">.</b></code>" /&gt;&lt;br /&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P>What is displayed in the result tree by this template rule depends entirely on the context node. The template rule matches a single element type in the source tree, <code class="ce">&lt;temperature&gt;</code>, and the corresponding match pattern (<CODE>match="temperature"</CODE>) is what establishes the context node within the body of the template rule. However, the <code class="ce">&lt;temperature&gt;</code> element type can be a child of either the <code class="ce">&lt;today&gt;</code> element or a <code class="ce">&lt;forecast&gt;</code> element, and the <code class="ce">&lt;xsl:choose&gt;</code> element operates accordingly:

<UL type="disc">
	<LI>Is the parent element named <code class="ce">&lt;today&gt;</code>? (This is the <code class="ce">test="name(..)="'today'"</code> attribute in the <code class="ce">&lt;xsl:when&gt;</code> element.) If so, just output "Today's temperature:" and the value of the <code class="ce">&lt;temperature&gt;</code> element itself.</li>

	<LI>If the parent element is <I>not</I> named <code class="ce">&lt;today&gt; </code>(this is the <code class="ce">&lt;xsl:otherwise&gt;</code> element's role), output the word "Today," the value of that parent element's <code class="ce">day</code> attribute (e.g. "+1"), and the string "'s temperature: ".</li>
</UL>

<P>If the context node did not change each time this template rule fired, it would not be possible to produce different output for each occurrence of the <code class="ce">&lt;temperature&gt;</code> element.</P>

<P class="label"><B>XML File (weather.xml)</B></P>

<P>Change the <code class="ce">href</code> attribute in <B>weather.xml</B> (shown in <A HREF="xpath_concepts5_4pbi.htm">Sample XML Data File for XPath Context and Navigation</A>) to reference <B>weathersimple.xsl</B>.</P>

<P class="label"><B>Formatted Output</B></P>

<BLOCKQUOTE class="dtBlock">
Today's temperature: 76<BR>
Today+1's temperature: 81<BR>
Today+2's temperature: 72</BLOCKQUOTE>

<P class="label"><B>Processor Output</B></P>

<PRE class="code">&lt;?xml version="1.0" encoding="UTF-16"?&gt;
    Today's 
temperature: 76&lt;br /&gt;
    Today+1's 
temperature: 81&lt;br /&gt;
    Today+2's 
temperature: 72&lt;br /&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
