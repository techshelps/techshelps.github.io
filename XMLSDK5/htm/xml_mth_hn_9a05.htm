<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>normalize Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthnormalize"></A>normalize Method</H1>

<P>Normalizes all descendant elements by combining two or more adjacent text nodes into one unified text node.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">oXMLDOMElement.normalize();</PRE>

<H4 class="dtH4">Example</H4>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var nodeRoot;
xmlDoc.async = false;
xmlDoc.loadXML("&lt;root/&gt;");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;nodeRoot = xmlDoc.documentElement;
&nbsp;&nbsp;&nbsp;nodeRoot.appendChild(xmlDoc.createTextNode("Hello "));
&nbsp;&nbsp;&nbsp;nodeRoot.appendChild(xmlDoc.createTextNode("World"));
&nbsp;&nbsp;&nbsp;nodeRoot.appendChild(xmlDoc.createTextNode("!"));
&nbsp;&nbsp;&nbsp;alert(nodeRoot.childNodes.length);
&nbsp;&nbsp;&nbsp;nodeRoot.normalize();
&nbsp;&nbsp;&nbsp;alert(nodeRoot.childNodes.length);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">oXMLDOMElement.normalize</PRE>

<H4 class="dtH4">Example</H4>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim nodeRoot As IXMLDOMElement
xmlDoc.async = False
xmlDoc.loadXML "&lt;root/&gt;"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set nodeRoot = xmlDoc.documentElement
&nbsp;&nbsp;&nbsp;nodeRoot.appendChild xmlDoc.createTextNode("Hello ")
&nbsp;&nbsp;&nbsp;nodeRoot.appendChild xmlDoc.createTextNode("World")
&nbsp;&nbsp;&nbsp;nodeRoot.appendChild xmlDoc.createTextNode("!")
&nbsp;&nbsp;&nbsp;MsgBox nodeRoot.childNodes.length
&nbsp;&nbsp;&nbsp;nodeRoot.normalize
&nbsp;&nbsp;&nbsp;MsgBox nodeRoot.childNodes.length
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT normalize(void);</PRE>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>E_FAIL</DT>

<DD>The value returned if an error occurs.</dd>
</DL>

<H4 class="dtH4">C/C++ Example</H4>

<PRE class="code">BOOL DOMElementNormalize()
{
   BOOL bResult = FALSE;
   IXMLDOMElement *pIXMLDOMElement = NULL;
   IXMLDOMDocument *pIXMLDOMDocument = NULL;
   HRESULT hr;
   
   try
   {
      // Create an instance of DOMDocument and initialize
      // pIXMLDOMDocument.
      // Load/create an XML fragment.
      hr = pIXMLDOMDocument-&gt;get_documentElement(&amp;pIXMLDOMElement);
      SUCCEEDED(hr) ? 0 : throw hr;

      if(pIXMLDOMElement )
      {
         hr = pIXMLDOMElement-&gt;normalize();
         if(SUCCEEDED(m_hr))
            bResult = TRUE;
         pIXMLDOMElement-&gt;Release();
      }
   }
   catch(...)
   {
      if(pIXMLDOMElement)
         pIXMLDOMElement-&gt;Release();
      DisplayErrorToUser();
   }
   return bResult;
}</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>This method converts all text node descendants of this element (at any depth) into a "normal" form where no text nodes are adjacent. In normal form, text nodes can be separated only by markup, such as tags, comments, processing instructions, CDATA sections, and entity references. The normal form is useful for operations that require a particular document tree structure and ensures that the XML Document Object Model (DOM) view of a document is identical when saved and reloaded.</P>

<P>Collapsed node objects are deleted automatically.</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_obj_ixmldomtext_8sxg.htm">IXMLDOMText</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomelement_8yyc.htm">IXMLDOMElement</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
