<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SAX2 Visual Basic Common Notices</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="sax2_reference_commonnoticesvb"></A>SAX2 Visual Basic Common Notices</H1>

<H2 class="dtH2">Visual Basic Wrappers</H2>

<P>Microsoft&reg; Visual Basic&reg; wrappers are constructed from C++/COM interfaces by:

<UL type="disc">
	<LI>Replacing the "I" prefix in front of the interface/class name with "IVB".</li>

	<LI>Replacing all string representations from w_char_t*/int to BSTR. For handlers, strings should be passed by reference.</li>

	<LI>Replacing IerrorInfo parameters with BSTRs containing error messages.</li>

	<LI>Replacing HRESULT parameters with long.</li>

	<LI>Making all parameter names follow simplified Hungarian notation for Visual Basic. For example, <I>strName</I> is used in place of <I>pwchName</I>. Prefixes are "srt", "n", "l", and "o".</li>

	<LI>Wherever C++ uses NULL, Visual Basic uses VT_Empty.</li>

	<LI>All interfaces are derived from <code class="ce">IDispatch</code>.</li>
</UL>

<P>Currently, Visual Basic and C++ wrappers are completely disconnected for the user. However, the same coclasses implement both C++ and VB interfaces.</P>

<H2 class="dtH2">Features</H2>

<P>Features handled and recognized by SAXXMLReader are:

<UL type="disc">
	<LI><code class="ce">"exhaustive-errors"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/external-general-entities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/external-parameter-entities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/lexical-handler/parameter-entities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/namespaces"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/namespace-prefixes"</code></li>

	<LI><code class="ce">"preserve-system-identifiers"</code></li>

	<LI><code class="ce">"schema-validation"</code></li>

	<LI><code class="ce">"server-http-request"</code></li>
</UL>

<H2 class="dtH2">Properties</H2>

<P>Properties handled and recognized by SAXXMLReader are:

<UL type="disc">
	<LI><code class="ce">"http://xml.org/sax/properties/lexical-handler"</code></li>

	<LI><code class="ce">"http://xml.org/sax/properties/declaration-handler"</code></li>

	<LI><code class="ce">"http://xml.org/sax/properties/dom-node"</code></li>

	<LI><code class="ce">"http://xml.org/sax/properties/xml-string"</code></li>

	<LI><code class="ce">"schemas"</code></li>

	<LI><code class="ce">"schema-declaration-handler"</code></li>

	<LI><code class="ce">"charset"</code></li>

	<LI><code class="ce">"xmldecl-encoding"</code></li>

	<LI><code class="ce">"xmldecl-version"</code></li>

	<LI><code class="ce">"xmldecl-standalone"</code></li>
</UL>

<H2 class="dtH2">Base interface</H2>

<P>All interfaces are derived from <code class="ce">IDispatch</code>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
