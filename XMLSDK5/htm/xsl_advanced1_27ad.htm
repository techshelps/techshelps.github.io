<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Step 3: Sorting the Source Tree Clone</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconstep3sortingthesourcetreeclone"></A>Step 3: Sorting the Source Tree Clone</H1>

<P>To sort the modified clone of the source tree, convert it to a node-set, using the <code class="ce">msxsl:node-set()</code> function. Then pass it, in its sorted form, to a template rule that handles it the same way the original source tree itself would be handled.</P>

<P>To do this, add some new lines to the template rule for the root <code class="ce">&lt;products&gt;</code> element. This is illustrated in the example below.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note&nbsp;&nbsp;&nbsp;</b>To use the <code class="ce">msxsl:node-set()</code> function, the style sheet's <code class="ce">&lt;xml:stylesheet&gt;</code> element must include the following namespace declaration:</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">xmlns:msxsl="urn:schemas-microsoft-com:xslt"</code></BLOCKQUOTE>

<H4 class="dtH4">Example</H4>

<P>In the formatted output at the end of this topic, note the position of the Virtual Widgets product. If the products had been sorted by the <code class="ce">&lt;price&gt;</code> element alone, the position of this product would be considerably different.</P>

<P>Also note the new column in the table, which lists the value of the new <code class="ce">&lt;usd_equiv&gt;</code> element.</P>

<P>For this technique to work, the style sheet must not include a namespace declaration for the HTML 4.0 namespace, which you will typically include when transforming XML to HTML that is compatible with Internet Explorer. This is because the generated <code class="ce">&lt;usd_equiv&gt;</code> element, which includes no namespace prefix, is in the default namespace. But because <code class="ce">&lt;usd_equiv&gt;</code> is not an HTML element, it will not appear in the result tree.</P>

<P class="label"><B>XML File (prodsort.xml)</B></P>

<P>Use <B>prodsort.xml</B>, in <A HREF="xsl_advanced1_6llz.htm">Sample XML Data File for XSLT Sorting</A>. Change the <code class="ce">href</code> attribute to reference <B>prodsortcvar.xsl</B>.</P>

<P class="label"><B>XSLT File (prodsortcvar.xsl)</B></P>

<P>The <code class="ce">product</code> template rule with a <code class="ce">mode</code> attribute and a new <code class="ce">&lt;xsl:apply-templates&gt;</code> element invokes another <code class="ce">product </code>template rule. This rule is used for <code class="ce">&lt;product&gt;</code> elements that do not have a <code class="ce">mode</code> attribute. These two template rules are shown below, and the <B>prodsortcvar.xsl</B> file is now complete. For the entire completed <B>prodsortcvar.xsl</B> file, see <A HREF="xsl_advanced1_8jtz.htm">Sample XSLT File for Sorting</A>.</P>

<PRE class="code">&lt;xsl:template match="products"&gt;
    &lt;!-- Create a variable to hold the generated result tree fragment. --&gt;
    &lt;xsl:variable name="prods_with_usd"&gt;
        &lt;xsl:apply-templates select="product" mode="calc_usd" /&gt;
    &lt;/xsl:variable&gt;
    &lt;TABLE width="75%"&gt;
        &lt;tr&gt;
            &lt;th&gt;Category&lt;/th&gt;
            &lt;th&gt;Prod ID&lt;/th&gt;
            &lt;th&gt;Name/Version&lt;/th&gt;
            &lt;th&gt;Description&lt;/th&gt;
            &lt;th&gt;Price (Currency)&lt;/th&gt;
            &lt;th&gt;Price (USD)&lt;/th&gt;
        &lt;/tr&gt;
        &lt;!-- Fill remainder of table with source tree "clone". --&gt;
<code><b class="cfe">        &lt;xsl:apply-templates select="msxsl:node-set($prods_with_usd)/product"&gt;</b></code>
<code><b class="cfe">            &lt;xsl:sort select="usd_equiv" data-type="number" /&gt;</b></code>
<code><b class="cfe">        &lt;/xsl:apply-templates&gt;</b></code>
    &lt;/TABLE&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="product"&gt;
    &lt;tr&gt;
        &lt;td valign="top"&gt;&lt;xsl:value-of select="categ"/&gt;&lt;/td&gt;
        &lt;td valign="top"&gt;&lt;xsl:value-of select="@prodID"/&gt;&lt;/td&gt;
        &lt;td valign="top"&gt;&lt;xsl:value-of select="concat(name, '/', version)"/&gt;&lt;/td&gt;
        &lt;td valign="top"&gt;&lt;xsl:value-of select="descr"/&gt;&lt;/td&gt;
        &lt;td valign="top" align="center"&gt;&lt;xsl:value-of select="concat(price, ' (', price/@curr, ')')"/&gt;&lt;/td&gt;
        &lt;td valign="top" align="right"&gt;&lt;xsl:value-of select="<code><b class="cfe">usd_equiv</b></code>"/&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="xsltsortcvar.gif" ALT="" BORDER=0></P>

<P class="label"><B>Processor Output</B></P>

<P>A portion of the output is shown here.</P>

<PRE class="code">&lt;HTML xmlns:msxsl="urn:schemas-microsoft-com:xslt"&gt;
&lt;HEAD&gt;
&lt;META http-equiv="Content-Type" content="text/html; charset=UTF-16"&gt;
&lt;TITLE&gt;Wooden Rings and More!&lt;/TITLE&gt;
&lt;STYLE type="text/css"&gt;
            th {background-color: silver;
               font-family: Tahoma,Verdana,Arial,sans-serif}
            td {background-color: white;
               font-family: Tahoma,Verdana,Arial,sans-serif}
         &lt;/STYLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;TABLE width="75%"&gt;
&lt;tr&gt;
&lt;th&gt;Category&lt;/th&gt;
&lt;th&gt;Prod ID&lt;/th&gt;
&lt;th&gt;Name/Version&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Price (Currency)&lt;/th&gt;
&lt;th&gt;Price (USD)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt;Craftware&lt;/td&gt;
&lt;td valign="top"&gt;WR1016&lt;/td&gt;
&lt;td valign="top"&gt;Wooden Rings/1.6&lt;/td&gt;
&lt;td valign="top"&gt;Our best-selling oaken toroids&lt;/td&gt;
&lt;td valign="top" align="center"&gt;27.99 (USD)&lt;/td&gt;
&lt;td valign="top" align="right"&gt;27.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt;Software&lt;/td&gt;
...
&lt;/TABLE&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
