<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Determining the Context Position</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcondeterminingthecontextposition"></A>Determining the Context Position</H1>

<P>Similar to context size, context position, where you are in the node-set, is as important in determining what a style sheet needs at any one time. A typical example can be performing an action for every Nth node.</P>

<P>You can use the <A HREF="xpath_concepts5_4pbi.htm">Sample XML Data File for XPath Context and Navigation</A>, to display information for each day on a separate line, coloring the odd lines white and the even lines yellow. This provides easy legibility when there are a large amount of data to be displayed. Use the following XSLT template rule to display just the temperature values:</P>

<P>The following template rule display just the temperature values:

<UL type="disc">
	<LI>The match pattern, <code class="ce">match="weather/*"</code>, selects all children (*) of all children named "<code class="ce">weather</code>" of the context node, that is, of the document root node. Therefore, it selects a node-set consisting of the <code class="ce">&lt;today&gt;</code> element and the two <code class="ce">&lt;forecast&gt;</code> elements.</li>

	<LI>The template rule declares a local variable, called <code class="ce">odd_or_even</code>, whose value is either the <code class="ce">"odd"</code> or <code class="ce">"even"</code> string, depending on the value of the position within the node-set of the node currently being processed.</li>

	<LI>The test uses the <code class="ce">position()</code> function, which returns an integer whose value is that of the current node's position in the node-set. The test calculates the remainder of this integer when divided by 2. If the result is 0, then the result of the test is true, and <code class="ce">$odd_or_even</code> is <code class="ce">"even"</code>; otherwise it is <code class="ce">"odd"</code>.</li>

	<LI>The <code class="ce">&lt;xsl:choose&gt;</code> element that follows the variable's assignment tests the variable's value. If <code class="ce">"odd"</code>, the temperature is inserted into a <code class="ce">&lt;p&gt;</code> element whose background-color is white; otherwise, the <code class="ce">&lt;p&gt;</code> element's background-color will be yellow.</li>
</UL>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The use of the <code class="ce">position()</code> function in the <code class="ce">&lt;xsl:variable&gt;</code> code.</BLOCKQUOTE>

<P>For more information about <code class="ce">position()</code>, see <A HREF="xpath_concepts8_4v77.htm">Processing Node-Sets by Using Node-Set Functions</A>.</P>

<H4 class="dtH4">Example</H4>

<P class="label"><B>XML File (weather.xml)</B></P>

<P>Change the <code class="ce">href</code> attribute in <B>weather.xml</B> (shown in <A HREF="xpath_concepts5_4pbi.htm">Sample XML Data File for XPath Context and Navigation</A>) to reference <B>weathercontextposn.xsl</B>.</P>

<P class="label"><B>XSLT File (weathercontextposn.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="weather/*"&gt;
    &lt;xsl:variable name="odd_or_even"&gt;
        &lt;xsl:choose&gt;
            &lt;xsl:when test="<code><b class="cfe">position()</b></code> mod 2 = 0"&gt;even&lt;/xsl:when&gt;
            &lt;xsl:otherwise&gt;odd&lt;/xsl:otherwise&gt;
        &lt;/xsl:choose&gt;
    &lt;/xsl:variable&gt;
    &lt;xsl:choose&gt;
        &lt;xsl:when test="$odd_or_even = 'even'"&gt;
            &lt;p style="background-color: yellow"&gt;even row: 
                &lt;xsl:value-of select="./temperature" /&gt;
            &lt;/p&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:otherwise&gt;
            &lt;p style="background-color: white"&gt;odd row: 
                &lt;xsl:value-of select="./temperature" /&gt;
            &lt;/p&gt;
        &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="xsltweathercontextposn.gif" ALT="" BORDER=0></P>

<P class="label"><B>Processor Output</B></P>

<PRE class="code">&lt;?xml version="1.0" encoding="UTF-16"?&gt;&lt;p style="background-color: white"&gt;odd row: 
                76&lt;/p&gt;&lt;p style="background-color: yellow"&gt;even row: 
                81&lt;/p&gt;&lt;p style="background-color: white"&gt;odd row: 
                72&lt;/p&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
