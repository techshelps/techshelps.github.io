<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Introduction to DTD Syntax</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcondtd_introsyntax"></A>Introduction to DTD Syntax</H1>

<P>DTDs use a specialized non-XML vocabulary, which includes the following grammar for writing and declaring markup rules that define a specific type of XML document structure:

<UL type="disc">
	<LI><A HREF="dtd_ref_2wjc.htm">ATTLIST declarations</A></li>

	<LI><A HREF="dtd_ref_5um0.htm">ELEMENT declarations</A></li>

	<LI><A HREF="dtd_ref_9t14.htm">ENTITY declarations</A></li>

	<LI><A HREF="dtd_ref_627s.htm">NOTATION declarations</A></li>
</UL>

<P>DTD declaration statements can be added internally as a section within the <code class="ce">&lt;!DOCTYPE&gt;</code> declaration of the XML document. Alternatively, you can use a resource URI to point to an external DTD file.</P>

<P>For example, the following is an internal DTD that could be added to the <A HREF="sdk_booksxml_30rw.htm">sample XML file (Books.xml)</A> to describe and validate its contents.</P>

<P class="label"><B>Internal DTD</B></P>

<PRE class="code">&lt;!DOCTYPE catalog [ 
&lt;!ELEMENT catalog    (book+) &gt;
&lt;!ELEMENT book       (author, title, genre, price, publish_date, description) &gt;
&lt;!ATTLIST book       id ID #REQUIRED &gt;
&lt;!ELEMENT author         (#PCDATA)   &gt;
&lt;!ELEMENT title          (#PCDATA)   &gt;
&lt;!ELEMENT genre          (#PCDATA)   &gt;
&lt;!ELEMENT price          (#PCDATA)   &gt;
&lt;!ELEMENT publish_date   (#PCDATA)   &gt;
&lt;!ELEMENT description    (#PCDATA)   &gt;
]&gt;
</PRE>

<P>The first line identifies "catalog" as the document type (<code class="ce">DOCTYPE</code>), which also happens to be the name of the root element. After this, various elements are defined for the "catalog" document type.</P>

<P>A set of open ([) and close (]) brackets contain this DTD as an internal section within the DOCTYPE statement. This section needs to be inserted at the top of the <B>books.xml</B> sample file so that it can be read as a set of directives for the XML parser to use when validating and parsing the remaining XML portion of the of the document. The DTD declaration statements are made within these brackets:

<UL type="disc">
	<LI>The first <code class="ce">ELEMENT</code> statement declares the document element, in this case the <code class="ce">&lt;catalog&gt;</code> element. It states that <code class="ce">&lt;catalog&gt;</code> must include one or more <code class="ce">&lt;book&gt;</code> elements as children, as indicated by a trailing <B>+</B> sign. </li>

	<LI>The second <code class="ce">ELEMENT</code> statement declares the <code class="ce">&lt;book&gt;</code> element, and that its contents are restricted to the following six child elements (which must be used in this order): <code class="ce">&lt;author&gt;</code>, <code class="ce">&lt;title&gt;</code>, <code class="ce">&lt;genre&gt;</code>, <code class="ce">&lt;price&gt;</code>, <code class="ce">&lt;publish_date&gt;</code>, and <code class="ce">&lt;description&gt;</code>. The <code class="ce">&lt;catalog&gt;</code> and <code class="ce">&lt;book&gt;</code> elements both exemplify what is known as a <I>structured-element content model</I>, where these elements only permit certain specified elements as their contents.</li>

	<LI>Next, an <code class="ce">ATTLIST</code> statement declares a required <code class="ce">id</code> attribute for use with the <code class="ce">&lt;book&gt;</code> element. </li>

	<LI>The remaining <code class="ce">ELEMENT</code> statements in the DTD declare that for each of the six element children for <code class="ce">&lt;book&gt;</code>, only text is allowed as content. This is specified by the <code class="ce">#PCDATA</code> keyword, which means parsed character data. By contrast, elements that allow either text or a combination of text and other markup have a <I>mixed content model</I>.</li>
</UL>

<H4 class="dtH4">See Also</H4>

<P><A HREF="dtd_dev_31rn.htm">What is a DTD?</A> | <A HREF="dtd_dev_7xbb.htm">Authoring DTDs</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
