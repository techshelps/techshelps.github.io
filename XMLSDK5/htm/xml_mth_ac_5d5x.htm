<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>createNode Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthcreatenode"></A>createNode Method</H1>

<P>Creates a node using the supplied type, name, and namespace.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">var objXMLDOMNode = oXMLDOMDocument.createNode(Type, name, namespaceURI);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>Type</I></DT>

<DD>A variant. A value that uniquely identifies the node type. This can be specified using either the integer value or the string value. For the complete list of values, see <A HREF="xml_enm_3ipf.htm">XML DOM Enumerated Constants</A> or the description for the <code class="ce">name</code> parameter.</dd>

<DT><I>name</I></DT>

<DD>A string containing the value for the new node's <code class="ce">nodeName</code> property. The relationship between the <code class="ce">name</code> and <code class="ce">Type</code> parameters is summarized in the <B>Remarks</B> section of this topic.</dd>

<DT><I>namespaceURI</I></DT>

<DD>A string defining the namespace URI. If specified, the node is created in the context of the <code class="ce">namespaceURI</code> parameter with the prefix specified on the node name. If the <code class="ce">name</code> parameter does not have a prefix, this is treated as the default namespace.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>Object. Returns the newly created node.</P>

<H4 class="dtH4">Example</H4>

<P>The following script example creates an attribute node called <code class="ce">Sci-Fi</code> and adds it to the attributes for the <code class="ce">DOMDocument</code> object.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var MyNode;
var namedNodeMap;
xmlDoc.async = false;
xmlDoc.load("books.xml");
MyNode = xmlDoc.createNode(2, "Sci-Fi", "");
namedNodeMap = xmlDoc.documentElement.childNodes.item(0).attributes;
namedNodeMap.setNamedItem(MyNode);
alert(xmlDoc.documentElement.xml);</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">Set objXMLDOMNode = oXMLDOMDocument.createNode(Type, name, namespaceURI)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>Type</I></DT>

<DD>A variant. A value that uniquely identifies the node type. This can be specified using either the integer value or the string value. For the complete list of values, see the <A HREF="xml_enm_3ipf.htm">XML DOM Enumerated Constants</A> or the description for the <code class="ce">name</code> parameter.</dd>

<DT><I>name</I></DT>

<DD>A string containing the value for the new node's <code class="ce">nodeName</code> property. The relationship between the <code class="ce">name</code> and <code class="ce">Type</code> parameters is summarized in the <B>Remarks</B> section of this topic.</dd>

<DT><I>namespaceURI</I></DT>

<DD>A string defining the namespace URI. If specified, the node is created in the context of the <code class="ce">namespaceURI</code> parameter with the prefix specified on the node name. If the <code class="ce">name</code> parameter does not have a prefix, this is treated as the default namespace.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>An object. Returns the newly created node.</P>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft&reg; Visual Basic&reg; example creates an attribute node called <code class="ce">Sci-Fi </code>and adds it to the attributes for the <code class="ce">DOMDocument</code> object.</P>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim MyNode As IXMLDOMNode
Dim namedNodeMap As IXMLDOMNamedNodeMap
xmlDoc.async = False
xmlDoc.Load ("books.xml")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set MyNode = xmlDoc.createNode(NODE_ATTRIBUTE, "Sci-Fi", "")
&nbsp;&nbsp;&nbsp;Set namedNodeMap = xmlDoc.documentElement.childNodes.Item(0).Attributes
&nbsp;&nbsp;&nbsp;namedNodeMap.setNamedItem MyNode
&nbsp;&nbsp;&nbsp;MsgBox (xmlDoc.documentElement.xml)
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT createNode(
    VARIANT Type,
    BSTR name,
    BSTR namespaceURI,
    IXMLDOMNode **node);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>Type</I> [in]</DT>

<DD>The value that uniquely identifies the node type. This can be specified using either the integer value or the string value. For the complete list of values, see the <A HREF="xml_enm_3ipf.htm">XML DOM Enumerated Constants</A> or the description given for the <code class="ce">name</code> parameter.</dd>

<DT><I>name</I> [in]</DT>

<DD>The value for the new node's <code class="ce">nodeName</code> property. The relationship between the <code class="ce">name</code> and <code class="ce">Type</code> parameters is summarized in the <B>Remarks</B> section of this topic.</dd>

<DT><I>namespaceURI</I> [in]</DT>

<DD>The namespace URI. If specified, the node is created in the context of the <code class="ce">namespaceURI</code> parameter with the prefix specified on the node name. If the <code class="ce">name</code> parameter does not have a prefix, this is treated as the default namespace.</dd>

<DT><I>node</I> [out, retval]</DT>

<DD>The newly created node.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the <code class="ce">node</code> parameter is Null.</dd>

<DT>E_FAIL</DT>

<DD>The value returned if an error occurs.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The <code class="ce">name</code> parameter depends on the value of the <code class="ce">Type</code> parameter:</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=50%><code class="ce">NODE_ATTRIBUTE</code></TD>
<TD width=50%>The name of the attribute.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">NODE_CDATA_SECTION</code>, <code class="ce">NODE_COMMENT</code>, <code class="ce">NODE_DOCUMENT</code>, <code class="ce">NODE_DOCUMENT_FRAGMENT</code>, <code class="ce">NODE_TEXT</code></TD>
<TD width=50%>The <code class="ce">nodeName</code> property for these node types is a constant value; the <code class="ce">name</code> parameter is ignored.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">NODE_DOCUMENT_TYPE</code></TD>
<TD width=50%>The name of the document type; for example, the xxx in <code class="ce">&lt;!DOCTYPE xxx ...&gt;</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">NODE_ELEMENT</code></TD>
<TD width=50%>The name of the XML tag, with any namespace prefix included if present.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">NODE_ENTITY</code></TD>
<TD width=50%>The name of the entity.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">NODE_ENTITY_REFERENCE</code></TD>
<TD width=50%>The name of the entity referenced. The name does not include the leading ampersand or the trailing semicolon. The name includes the namespace, if one is present.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">NODE_NOTATION</code></TD>
<TD width=50%>The name of the notation.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">NODE_PROCESSING_INSTRUCTION</code></TD>
<TD width=50%>The target, the first token following the &lt;? characters.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>You cannot create a node of type <code class="ce">NODE_DOCUMENT</code>, <code class="ce">NODE_DOCUMENT_TYPE</code>, <code class="ce">NODE_ENTITY</code>, or <code class="ce">NODE_NOTATION</code>.</P>

<P>When a node is created, it is created in the context of a namespace if one is supplied (if the <code class="ce">namespaceURI</code> parameter is supplied). If one is not supplied, the node is created in the namespace of the document. If the <code class="ce">namespaceURI</code> parameter is specified, the node is created in the context of the <code class="ce">namespaceURI</code> parameter with the prefix specified on the node name.</P>

<P>For node types that do not have names, the empty string, "", should be passed as the <code class="ce">name</code> parameter.</P>

<P>For elements and entity references, when the value of the <code class="ce">namespaceURI</code> parameter is anything other than "", and the value of the <code class="ce">name</code> parameter does not contain a prefix (xxx in xxx:yyy), the value of the <code class="ce">namespaceURI</code> parameter is treated as the default namespace.</P>

<P>Attributes cannot be scoped to a default namespace, and other elements are not qualified to a particular namespace; they are treated as being from the namespace defined by the document itself.</P>

<P>When the value of <code class="ce">namespaceURI</code> parameter is the empty string, "", the node is created without a namespace. Creating a qualified node without specifying a nonempty <code class="ce">namespaceURI</code> returns an error. This member is an extension of the Worldwide Web Consortium (W3C) Document Object Model (DOM).</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_pro_no_0691.htm">nodeName Property</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
