<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Sorting by a Single Column</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconsortingbyasinglecolumn"></A>Sorting by a Single Column</H1>

<P>In this topic, we add a single <code class="ce">&lt;xsl:sort&gt;</code> element to the above unsorted example.</P>

<H4 class="dtH4">Example</H4>

<P>Each <code class="ce">&lt;product&gt;</code> element is processed by a separate <code class="ce">product</code> template rule. This rule is invoked as a result of the <code class="ce">&lt;xsl:apply-templates&gt;</code> element in the <code class="ce">products</code> template rule. Suppose you want to sort your products by category. To do so, add an <code class="ce">&lt;xsl:sort&gt;</code> element as a child of the <code class="ce">&lt;xsl:apply-templates&gt;</code> element in the <code class="ce">products</code> template rule.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">&lt;xsl:apply-templates&gt;</code> element, which is typically empty, must be changed to a non-empty start tag/end tag pair. Also note that the value of the <code class="ce">&lt;xsl:sort&gt;</code> element's <code class="ce">select</code> attribute is relative to the context node established by the <code class="ce">&lt;xsl:apply-templates&gt;</code> element. It is not relative to the context node established by the <code class="ce">&lt;xsl:template&gt;</code> element's <code class="ce">match</code> attribute. Therefore, <code class="ce">&lt;xsl:sort select="product/categ"/&gt; </code>will not work correctly.</BLOCKQUOTE>

<P class="label"><B>XML File (prodsort.xml)</B></P>

<P>Use <B>prodsort.xml</B>, in <A HREF="xsl_advanced1_6llz.htm">Sample XML Data File for XSLT Sorting</A>. Change the <code class="ce">href</code> attribute to reference <B>prodsort1.xsl</B>.</P>

<P class="label"><B>XSLT File (prodsort1.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/"&gt;
   &lt;HTML&gt;
      &lt;HEAD&gt;
         &lt;TITLE&gt;Wooden Rings and More!&lt;/TITLE&gt;
         &lt;STYLE type="text/css"&gt;
            th {background-color: silver;
               font-family: Tahoma,Verdana,Arial,sans-serif}
            td {background-color: white;
               font-family: Tahoma,Verdana,Arial,sans-serif}
         &lt;/STYLE&gt;
      &lt;/HEAD&gt;
      &lt;BODY&gt;
         &lt;xsl:apply-templates/&gt;
      &lt;/BODY&gt;
   &lt;/HTML&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="products"&gt;
    &lt;TABLE width="75%"&gt;
        &lt;tr&gt;
            &lt;th&gt;Category&lt;/th&gt;
            &lt;th&gt;Prod ID&lt;/th&gt;
            &lt;th&gt;Name/Version&lt;/th&gt;
            &lt;th&gt;Description&lt;/th&gt;
            &lt;th&gt;Price/Units&lt;/th&gt;
        &lt;/tr&gt;
<code><b class="cfe">        &lt;xsl:apply-templates&gt;</b></code>
<code><b class="cfe">            &lt;xsl:sort select="categ"/&gt;</b></code>
<code><b class="cfe">        &lt;/xsl:apply-templates&gt;</b></code>
    &lt;/TABLE&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="product"&gt;
   &lt;tr&gt;
      &lt;td valign="top"&gt;&lt;xsl:value-of select="categ"/&gt;&lt;/td&gt;
      &lt;td valign="top"&gt;&lt;xsl:value-of select="@prodID"/&gt;&lt;/td&gt;
      &lt;td valign="top"&gt;&lt;xsl:value-of select="concat(name, '/', version)"/&gt;&lt;/td&gt;
      &lt;td valign="top"&gt;&lt;xsl:value-of select="descr"/&gt;&lt;/td&gt;
      &lt;td valign="top" align="center"&gt;&lt;xsl:value-of select="concat(price, ' (', price/@curr, ')')"/&gt;&lt;/td&gt;
   &lt;/tr&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="xsltprodsort1.gif" ALT="" BORDER=0></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
