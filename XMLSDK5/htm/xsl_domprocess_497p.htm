<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Transforming XML Data Islands in an HTML Page</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcontransformingxmldataislandsinanhtmlpage"></A>Transforming XML Data Islands in an HTML Page</H1>

<P>When building an XSLT solution that uses Internet Explorer, you might want to use data islands as a convenient way to access XML data from an HTML page. Because XSLT is itself an XML grammar, data islands can be used to load style sheets as well. The <A HREF="xsl_domprocess_3xx1.htm#xmconsimpleislandshtm">simple-islands.htm</A> example uses two data islands to load both the source XML data and the XSLT style sheet. The <code class="ce">transformNode</code> method is used on these two data islands to generate HTML code that can then be inserted into the page.</P>

<P>When the <B>simple-islands.htm</B> page, including the data islands, is completely loaded, the <code class="ce">onload</code> event fires and the <code class="ce">transformNode</code> method is executed on the XML source data. The result of this call is XML text, which in this example is well-formed HTML text. You can feed this text directly into the <code class="ce">&lt;xslTarget&gt;</code> element as in <code class="ce">xslTarget.innerHTML = source.transformNode(style.XMLDocument) </code></P>

<P>The object returned from a data island is a DHTML DOM object (in this case it is the DHTML object associated with the <code class="ce">&lt;XML&gt;</code> element), not an XML DOM object. The <code class="ce">style.XMLDocument</code> property ensures that a <code class="ce">style</code> object is passed to the <code class="ce">transformNode</code> method as an XML DOM object.</P>

<P>There is no need to write <code class="ce">source.XMLDocument.transformNode(style.XMLDocument)</code>, because <code class="ce">transformNode</code> is an XML DOM method, not a DHTML method. When an XML DOM method is called on a DHTML object corresponding to the XML data island element, the script engine automatically resolves it to the XML DOM Document node. In general, the <code class="ce">XMLDocument</code> property is not required if another DOM property or method is being applied. </P>

<P>You can also write <code class="ce">source.XMLDocument.transformNode(style.documentElement)</code> and apply the style sheet to the document element instead of the root. However, the style sheet must reflect this. For example, the document element must be handled by a rule other than the root template <code class="ce">xsl:template match="/"</code>, which will not be invoked unless the style sheet is executed against the document root. It is recommended that you process your style sheets off the document root so that they will also work for directly browsing XML. For more information about the differences between the document root and the document element, see <A HREF="xpath_concepts4_6uib.htm">How the DOM Defines the Context for XPath Expressions</A>.</P>

<P>For more information, see <A HREF="xslt_starter_731u.htm">Deploying XSLT in Internet Explorer</A>.</P>

<H4 class="dtH4">Example</H4>

<P>For an example of an HTML page with XML Data Islands, see <A HREF="xsl_domprocess_3xx1.htm#xmconsimpleislandshtm">simple-islands.htm</A> in <A HREF="xsl_domprocess_3xx1.htm">XSLT Sample: Breakfast Menu</A>.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_concepts2_2n03.htm">XML Data Islands</A> | <A HREF="xsl_domprocess_71x0.htm">Performing Error Handling with XSLT</A> | <A HREF="xsl_domprocess_26lw.htm">Getting Transformation Results as a DOM Document</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
