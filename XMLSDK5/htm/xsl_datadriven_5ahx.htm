<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Defining Match Patterns in &lt;xsl:template&gt;</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcondefiningmatchpatternsinxsltemplate"></A>Defining Match Patterns in &lt;xsl:template&gt;</H1>

<P>The <code class="ce">match </code>attribute on the <code class="ce">&lt;xsl:template&gt;</code> element contains a <A HREF="xsl_xsltsyntax_6twz.htm">pattern</A> expression. The syntax is the same as that used to select nodes with <code class="ce">&lt;xsl:for-each&gt;</code>, <code class="ce">&lt;xsl:value-of&gt;</code>, and <code class="ce">&lt;xsl:apply-templates&gt;</code> elements. However, the pattern is used in quite a different way.</P>

<P>In a <code class="ce">select</code> pattern, the pattern describes a query down from a particular node to locate a new set of nodes. A <code class="ce">match</code> pattern is quite different. The <code class="ce">match</code> pattern does not locate anything new, but rather compares a specific node against a pattern to see if the node matches that pattern, and thus whether or not to use a particular template.</P>

<P>Here are some of the differences between the use of <code class="ce">match</code> patterns and <code class="ce">select</code> patterns.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Select pattern</TH>
<TH width=50%>Match pattern</TH>
</TR>

<TR VALIGN="top">
<TD width=50%>Starts with a node (the context), and identifies more nodes.</TD>
<TD width=50%>Starts with a node (the target), and yields a true/false (match/didn't match) result.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Starts at the context and drills down into the data.</TD>
<TD width=50%>Starts by testing the node against the node target, and then checks the context, including ancestry and descendants.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Represents a query into an XML document.</TD>
<TD width=50%>Represents a pattern of contextual information against which a particular node can be tested. Match patterns are quite similar to selectors in cascading style sheets (CSS).</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>The simplest match pattern is just a single element name, such as <code class="ce">"section"</code>, or node type, such as <code class="ce">"text()"</code>. If a text node matches the <code class="ce">"text()"</code> pattern, the associated template will be used. If a <code class="ce">&lt;section&gt;</code> element matches the <code class="ce">"section"</code> pattern, the associated template will be used.</P>

<P>Matches become more complex when they are used to test not only a node, but also the context in which the node appears in the source document. The pattern <code class="ce">"section/title"</code> will match <code class="ce">&lt;title&gt;</code> elements that are children of <code class="ce">&lt;section&gt;</code> elements. Any <code class="ce">&lt;title&gt;</code> elements that are not within a <code class="ce">&lt;section&gt;</code> (for example, the document title) do not match this pattern, and a separate template must be defined (such as <code class="ce">"document/title"</code>). The target of the pattern (the term farthest to the right) represents the node to be tested. This is similar to a <code class="ce">select</code> pattern in which the target represents the nodes to select.</P>

<P>The following table lists some <code class="ce">match</code> patterns and their meanings.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Pattern</TH>
<TH width=50%>Meaning when used as a match pattern</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">match="title"</code></TD>
<TD width=50%>Matches <code class="ce">&lt;title&gt;</code> elements.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">match="section/title"</code></TD>
<TD width=50%>Matches <code class="ce">&lt;title&gt;</code> elements that are children of <code class="ce">&lt;section&gt;</code> elements.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">match="section//title"</code></TD>
<TD width=50%>Matches <code class="ce">&lt;title&gt;</code> elements contained within <code class="ce">&lt;section&gt;</code> elements.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">match="section/title[@short-name]"</code></TD>
<TD width=50%>Matches <code class="ce">&lt;title&gt;</code> elements that are children of <code class="ce">&lt;section&gt;</code> elements, and that have a <code class="ce">short-name</code> attribute.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">match="appendix//section[@type='reference']/title"</code></TD>
<TD width=50%>Matches <code class="ce">&lt;title&gt;</code> elements that are children of <code class="ce">&lt;section&gt;</code> elements. The section must also have a <code class="ce">type</code> attribute with the value <code class="ce">"reference"</code>, and have an <code class="ce">&lt;appendix&gt;</code> ancestor.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">match="appendix[.//section[@type='reference']/title]"</code></TD>
<TD width=50%>Matches <code class="ce">&lt;appendix&gt;</code> elements that contain <code class="ce">&lt;section&gt;</code> descendants. These <code class="ce">&lt;section&gt;</code> elements, in turn, must have both a <code class="ce">type</code> attribute with the value <code class="ce">"reference"</code> and a <code class="ce">&lt;title&gt;</code> child.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>For more information, see <A HREF="xpath_starter_008o.htm">Introduction to XPath Syntax</A> and <A HREF="xpath_syntax1_0fjs.htm">XPath Syntax</A>.</P>

<P>You can add another template to the <A HREF="xsl_datadriven_2oc3.htm">pole.xml</A> sample to provide different formatting (<B>H3</B> instead of <B>H2</B>) for sections that appear in the context of another section. For example:</P>

<PRE class="code">&lt;xsl:template match="section"&gt;
  &lt;DIV&gt;
    &lt;H2&gt;&lt;xsl:value-of select="title"/&gt;&lt;/H2&gt;
    &lt;xsl:apply-templates /&gt;
  &lt;/DIV&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="section/section"&gt;
  &lt;DIV&gt;
    &lt;H3&gt;&lt;xsl:value-of select="title"/&gt;&lt;/H3&gt;
    &lt;xsl:apply-templates /&gt;
  &lt;/DIV&gt;
&lt;/xsl:template&gt;</PRE>

<P>Notice that a <code class="ce">&lt;section&gt;</code> within a section will match the <code class="ce">"section"</code> pattern as well as the <code class="ce">"section/section"</code> pattern. Which template will be selected? The rule is as follows: Templates later in the style sheet override earlier templates. To ensure that the XSLT processor checks the <code class="ce">"section/section"</code> pattern first, place it farther down in the style sheet. Most of the templates in this sample are mutually exclusive, so their order is unimportant.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
