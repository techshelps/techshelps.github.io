<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IXMLDOMSelection</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmobjxmldomselection"></A>IXMLDOMSelection</H1>

<P>Represents the list of nodes that match a given XML Path Language (XPath) expression.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Example</H4>

<P>In the following Microsoft&reg; JScript&reg; example, you can simply call the <code class="ce">IXMLDOMSelection</code> methods on the object returned from <code class="ce">selectNodes</code>.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument5.0");
xmlDoc.setProperty("SelectionLanguage", "XPath");
var selection = xmlDoc.selectNodes("//book");
var expr = selection.expr; //This returns "//book"
alert(expr);</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Example</H4>

<P>In the following Microsoft Visual Basic&reg; example, the <code class="ce">selectNodes</code> method returns <code class="ce">IXMLDOMNodeList</code>, so you have to cast the result of <code class="ce">selectNodes</code> into an <code class="ce">IXMLDOMSelection</code>.</P>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim Selection As IXMLDOMSelection
Dim sExpr As String
xmlDoc.async = False
xmlDoc.setProperty "SelectionLanguage", "XPath"
xmlDoc.Load ("books.xml")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set Selection = xmlDoc.selectNodes("//book")
&nbsp;&nbsp;&nbsp;sExpr = Selection.expr       ' This returns "//book".
&nbsp;&nbsp;&nbsp;MsgBox (sExpr)
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Example</H4>

<P>In the following C/C++ example, <code class="ce">IXMLDOMSelection</code> inherits the threading model of the document that created it. <code class="ce">IXMLDOMSelection</code> is created through the <code class="ce">selectNodes</code> method on <code class="ce">IXMLDOMDocument2</code>. </P>

<PRE class="code">#import "msxml5.dll"
using namespace MSXML2;

#define CHECK_AND_RELEASE(pInterface)  \
if(pInterface) \
   {\
pInterface-&gt;Release();\
pInterface = NULL;\
   }\

#define RELEASE(pInterface)  \
   {\
pInterface-&gt;Release();\
pInterface = NULL;\
   }\

BOOL DOMSelectionDemo()
{
   BOOL bResult = FALSE;
   short sResult = FALSE;
   IXMLDOMSelection *pIXMLDOMSelection=NULL;
   IXMLDOMNodeList *pIXMLDOMNodeList=NULL;
   IXMLDOMNode *pIXMLDOMNode=NULL;
   IXMLDOMDocument2 *pIXMLDOMDocument2=NULL;
   BSTR bstrValue;
   HRESULT hr;

   try
   {
      hr=CoCreateInstance(CLSID_DOMDocument, NULL, CLSCTX_SERVER,
               IID_IXMLDOMDocument2, (LPVOID*)(&amp;pIXMLDOMDocument2));
      SUCCEEDED(hr) ? 0 : throw hr;

      if(pIXMLDOMDocument2)
      {
         hr=pIXMLDOMDocument2-&gt;put_async(VARIANT_FALSE);
         if(SUCCEEDED(hr))
         {
            hr=pIXMLDOMDocument2-&gt;load(_variant_t( 
      _T("d:\\inetpub\\wwwroot\\samplexmldtd.xml")), &amp;sResult);
            if(SUCCEEDED(hr) &amp;&amp; (sResult==VARIANT_TRUE))
            {
               hr=pIXMLDOMDocument2-&gt;selectNodes( 
               _T("*/BOOK[TITLE='Lover Birds']"), &amp;pIXMLDOMNodeList);
               if(SUCCEEDED(hr))
               {
                  hr=pIXMLDOMNodeList-&gt;QueryInterface(IID_IXMLDOMSelection
                     ,(void**)&amp;pIXMLDOMSelection );
                  if(SUCCEEDED(hr) &amp;&amp; pIXMLDOMSelection)
                  {
                     LONG uLength;

                     bResult=TRUE;
                     hr=pIXMLDOMSelection-&gt;get_length(&amp;uLength);
                     if(SUCCEEDED(hr))
                     {
                        for(int iIndex=0; iIndex &lt; uLength; iIndex++)
                        {
                           // remove all the nodes from the list-display 
                           // them as they are removed.
                           hr=pIXMLDOMSelection-&gt;removeNext(
                              &amp;pIXMLDOMNode);
                           if(SUCCEEDED(hr) &amp;&amp; pIXMLDOMNode)
                           {   
                              hr=pIXMLDOMNode-&gt;get_text(&amp;bstrValue);
                              if(SUCCEEDED(hr))
                                 ::MessageBox(NULL, bstrValue, _T("Node
                                  Text"), MB_OK);
                              RELEASE(pIXMLDOMNode);
                           }
                        }
                     }
                     RELEASE(pIXMLDOMSelection);
                  }
                  RELEASE(pIXMLDOMNodeList);
               }
            }
         }
         RELEASE(pIXMLDOMDocument2);
      }
   }
   catch(...)
   {
      CHECK_AND_RELEASE(pIXMLDOMNode);
      CHECK_AND_RELEASE(pIXMLDOMDocument2);
      CHECK_AND_RELEASE(pIXMLDOMNodeList);
      CHECK_AND_RELEASE(pIXMLDOMSelection);
      DisplayErrorToUser();
   }
   return bResult;
}</PRE>

<P class="label"><B>d:\\inetpub\\wwwroot\\samplexmldtd.xml</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;COLLECTION xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;DATE dt:dt="datetime"&gt;1998-10-13T15:56:00&lt;/DATE&gt;
  &lt;BOOK&gt;
    &lt;TITLE&gt;Lover Birds&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Cynthia Randall&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
 &lt;/BOOK&gt;
 &lt;BOOK&gt;
    &lt;TITLE&gt;The Sundered Grail&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Eva Corets&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
 &lt;/BOOK&gt;
 &lt;BOOK&gt;
    &lt;TITLE&gt;Splish Splash&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Paula Thurman&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Scootney&lt;/PUBLISHER&gt;
 &lt;/BOOK&gt;
&lt;/COLLECTION&gt;</PRE>

<P class="label"><B>Output (in a message box)</B></P>

<PRE class="code">Lover Birds Cynthia Randall Lucerne Publishing</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P><code class="ce">IXMLDOMSelection</code> is an extension of the World Wide Web Consortium (W3C) DOM.</P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 2.6 and later</P>

<H4 class="dtH4">Requirements</H4>

<P><B>Implementation:</B> msxml5.dll, msxml2.lib</P>
<div class=filtered><span class="lang">[C/C++]</span>

<P><B>Header and IDL files:</B> msxml2.h, msxml2.idl</P>
</div><!-- [C/C++] -->

<P><B>Version-Dependent ProgID:</B> Msxml2.DOMDocument.5.0, Msxml2.FreeThreadedDOMDocument.5.0</P>

<P><B>Version-Dependent CLSID:</B> 88d969c0-f192-11d4-a65f-0040963251e5</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_obj_ixmldomselection_2y0e.htm">IXMLDOMSelection Members</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
