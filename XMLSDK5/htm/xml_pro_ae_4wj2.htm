<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>definition Property</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmprodefinition"></A>definition Property</H1>

<P>Returns the definition of the node in the document type definition (DTD) or schema.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">var objXMLDOMNode = oXMLDOMNode.definition;</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">Set objXMLDOMNode = oXMLDOMNode.definition</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT get_definition(
    IXMLDOMNode **definitionNode);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>definitionNode</I> [out, retval]</DT>

<DD>The node that contains the definition for the entity referenced.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>S_FALSE</DT>

<DD>The value returned when no definition is found.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the <code class="ce">definitionNode</code> parameter is Null.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<P>The following C/C++ example shows the retrieval of the <code class="ce">definition</code> property from an <code class="ce">IXMLDOMElement</code>.</P>

<PRE class="code">#import "msxml3.dll"
using namespace MSXML2;

#define CHECK_AND_RELEASE(pInterface)  \
if(pInterface) \
   {\
pInterface-&gt;Release();\
pInterface = NULL;\
   }\

#define RELEASE(pInterface)  \
   {\
pInterface-&gt;Release();\
pInterface = NULL;\
   }\

BOOL DOMNodeGetDefinition()
{
   BOOL bResult = FALSE;
   BSTR bstrValue;
   IXMLDOMElement *pIXMLDOMElement = NULL;
   IXMLDOMNode *pIXMLDOMNode = NULL;
   IXMLDOMDocument2 *pIXMLDOMDocument = NULL;
   HRESULT hr;

   try
   {
      // Create the document and initialize pIXMLDOMDocument.
      // Load the document (sample.xml).
      // Get the documents root.
      hr = pIXMLDOMDocument-&gt;get_documentElement(&amp;pIXMLDOMElement);
      SUCCEEDED(hr) ? 0 : throw hr;

      if(pIXMLDOMElement)
      {
         hr = pIXMLDOMElement-&gt;get_definition(&amp;pIXMLDOMNode);
         if(SUCCEEDED(hr) &amp;&amp; pIXMLDOMNode)
         {
            hr = pIXMLDOMNode-&gt;get_xml(&amp;bstrValue);
            if(SUCCEEDED(hr) &amp;&amp; bstrValue)
            {
               ::MessageBox(NULL, bstrValue, _T("Definition"), MB_OK);
               ::SysFreeString(bstrValue);
               bResult = TRUE;
            }
            RELEASE(pIXMLDOMNode);
         }
         RELEASE(pIXMLDOMElement);
      }
   }
   catch(...)
   {
      if(bstrValue)
         ::SysFreeString(bstrValue);
      CHECK_AND_RELEASE(pIXMLDOMNode);
      CHECK_AND_RELEASE(pIXMLDOMElement);
      // Release the DOMDocument.
      DisplayErrorToUser();
   }
   // Release the document when finished with it.
   return bResult;
}</PRE>

<P class="label"><B>Sample.xml</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt; 
&lt;SomeDoc xmlns="x-schema:collschema.xml"&gt; 
   &lt;SomeElement Id="first1"&gt; 
   &lt;/SomeElement&gt; 
&lt;/SomeDoc&gt; </PRE>

<P class="label"><B>collschema.xml</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;Schema xmlns="urn:schemas-microsoft-com:xml-data" 
       xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt; 
   &lt;AttributeType name='Id' dt:type="id"/&gt; 
   &lt;ElementType name='SomeElement' content="mixed" model="open"&gt; 
      &lt;attribute type='Id'/&gt; 
   &lt;/ElementType&gt; 

   &lt;ElementType name='SomeDoc' content="mixed" model="open"&gt; 
      &lt;attribute type='Id'/&gt; 
      &lt;element type='SomeElement' minOccurs='1' maxOccurs='*'/&gt; 
   &lt;/ElementType&gt; 
&lt;/Schema&gt; </PRE>

<P class="label"><B>Output (in a message box)</B></P>

<PRE class="code">&lt;ElementType name='SomeDoc' content="mixed" model="open"&gt; 
   &lt;attribute type='Id'/&gt; 
   &lt;element type='SomeElement' minOccurs='1' maxOccurs='*'/&gt; 
&lt;/ElementType&gt; </PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The property is read-only. Returns the node that contains the definition for the entity referenced.</P>

<P>The <code class="ce">definition</code> property is not supported when using inline schemas. This behavior is by design because the node being referenced can be deleted or modified after the document is loaded, yielding unpredictable results.</P>

<P>This value depends on the value of the <code class="ce">nodeType</code> property.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=50%>NODE_ENTITY_REFERENCE</TD>
<TD width=50%>Returns the node for the entity referenced; that is, the <code class="ce">ENTITY</code> element that was defined for a given <code class="ce">ENTITYREF</code>. Given the <code class="ce">ENTITYREF</code> <code class="ce">&amp;x;</code>, for example, the <code class="ce">definition</code> property returns the node in the <code class="ce">DOCTYPE</code> node's entity collection that defines the corresponding <code class="ce">ENTITY</code>: <code class="ce">&lt;!ENTITY x "y"&gt;</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>NODE_ENTITY</TD>
<TD width=50%>For unparsed entities, returns the <code class="ce">NOTATION</code> definition from the <code class="ce">DOCTYPE</code> node's notation collection. For example, given the <code class="ce">ENTITY</code> <code class="ce">&lt;!ENTITY networth SYSTEM "networth.xls" NDATA XLS&gt;</code>, the <code class="ce">definition</code> property returns the node corresponding to the notation <code class="ce">&lt;!NOTATION XLS PUBLIC "http://www.microsoft.com/office/excel/"&gt;</code>. For parsed entities, returns Null.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>NODE_ATTRIBUTE</TD>
<TD width=50%>Returns the XML-Data Schema <code class="ce">AttributeType</code> for a given <code class="ce">ATTRIBUTE</code> node. For example, the <code class="ce">definition</code> property for the attribute <code class="ce">myAttribute="123"</code> returns the node corresponding to the element <code class="ce">&lt;AttributeType name= "myAttribute"&gt;</code> in the schema. Returns Null when a DTD is used or when no schema is present.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>NODE_ELEMENT</TD>
<TD width=50%>Returns the XML-Data Schema <code class="ce">ElementType</code> for a given <code class="ce">ELEMENT</code> node. For example, given the element <code class="ce">&lt;myelement&gt;</code>, the <code class="ce">definition</code> property returns the node <code class="ce">&lt;ElementType name="myelement"&gt;</code> in the specified external schema. Returns Null when a DTD is used or when no schema is present.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>NODE_CDATA_SECTION
<P>NODE_COMMENT, NODE_DOCUMENT</P>

<P>NODE_DOCUMENT_FRAGMENT</P>

<P>NODE_DOCUMENT_TYPE</P>

<P>NODE_NOTATION</P>

<P>NODE_PROCESSING_INSTRUCTION</P>

<P>NODE_TEXT</P>
</TD>
<TD width=50%>Returns Null.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>This member is an extension of the World Wide Web Consortium (W3C) Document Object Model (DOM).</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_pro_no_5zvp.htm">nodeType Property</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomattribute_34kl.htm">IXMLDOMAttribute</A> | <A HREF="xml_obj_ixmldomcdatasection_4u9a.htm">IXMLDOMCDATASection</A> | <A HREF="xml_obj_ixmldomcharacterdata_4ov5.htm">IXMLDOMCharacterData</A> | <A HREF="xml_obj_ixmldomcomment_40ac.htm">IXMLDOMComment</A> | <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A> | <A HREF="xml_obj_ixmldomdocumentfragment_0zxw.htm">IXMLDOMDocumentFragment</A> | <A HREF="xml_obj_ixmldomdocumenttype_619h.htm">IXMLDOMDocumentType</A> | <A HREF="xml_obj_ixmldomelement_8yyc.htm">IXMLDOMElement</A> | <A HREF="xml_obj_ixmldomentity_2c8p.htm">IXMLDOMEntity</A> | <A HREF="xml_obj_ixmldomentityreference_25k5.htm">IXMLDOMEntityReference</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A> | <A HREF="xml_obj_ixmldomnotation_5d7y.htm">IXMLDOMNotation</A> | <A HREF="xml_obj_ixmldomprocessinginstruction_6ilw.htm">IXMLDOMProcessingInstruction</A> | <A HREF="xml_obj_ixmldomtext_8sxg.htm">IXMLDOMText</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
