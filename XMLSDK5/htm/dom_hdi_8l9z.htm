<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Source: loadDOMRaw.cpp</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="dom_hdi_cpp_loaddomraw"></A>Source: loadDOMRaw.cpp</H1>

<P>This C/C++ source code performs the following steps:

<OL>
	<LI>Creates an XML DOM object (<code class="ce">pXMLDom</code>) and sets it to synchronous mode.</li>

	<LI>Calls the <code class="ce">load</code> method on <code class="ce">pXMLDom</code>, specifying the path to <B>stocks.xml</B>.</li>
</OL>

<P class="label"><B>C/C++ Source File (loadDomRaw.cpp)</B></P>

<PRE class="code">#include &lt;stdio.h&gt;
#include &lt;msxml2.h&gt;

// You might need to add the msxml5/sdk/(inc, lib) directories 
// to the Tools-&gt;Options...-&gt;Directories in Visual Studio.
//
// You might also need to append "msxml2.lib" to the
// Project-&gt;Settings...-&gt;Link-&gt;Object/Libray Modules field.

int main(int argc, char* argv[])
{
   HRESULT hr;
   IXMLDOMDocument3 *pXMLDoc = NULL;
   IXMLDOMParseError * pObjError = NULL;
   BSTR bstr = NULL;
   VARIANT_BOOL status;
   VARIANT vSrc;

   CoInitialize(NULL);

   hr = CoCreateInstance(CLSID_DOMDocument50, 
                     NULL, 
                     CLSCTX_INPROC_SERVER, 
                     IID_IXMLDOMDocument3,
                     (void**)&amp;pXMLDoc);

   if (FAILED(hr)) 
   {
      printf("Failed to CoCreate an instance of an XML DOM\n");
      printf("Error code: %x\n", hr);
      goto clean;
   }

   hr = pXMLDoc-&gt;put_async(VARIANT_FALSE);
   if (FAILED(hr))
   {
      printf("Failed to set async property\n");
      goto clean;
   }

   hr = pXMLDoc-&gt;put_validateOnParse(VARIANT_FALSE);
   if (FAILED(hr))
   {
      printf("Failed to set validateOnParse\n");
      goto clean;
   }

   hr = pXMLDoc-&gt;put_resolveExternals(VARIANT_FALSE);
   if (FAILED(hr))
   {
      printf("Failed to disable resolving externals.\n");
      goto clean;
   }

   VariantInit(&amp;vSrc);
   V_BSTR(&amp;vSrc) = SysAllocString(L"stocks.xml");
   V_VT(&amp;vSrc) = VT_BSTR;

   hr = pXMLDoc-&gt;load(vSrc, &amp;status);

   if(status!=VARIANT_TRUE)
   {
      hr = pXMLDoc-&gt;get_parseError(&amp;pObjError);
      hr = pObjError-&gt;get_reason(&amp;bstr);
      printf("Failed to load DOM from books.xml. %S\n",bstr);
      goto clean;
   }

   hr = pXMLDoc-&gt;get_xml(&amp;bstr);
   printf("stocks.xml:\n%S\n", bstr);

clean:   
   if (bstr)
      SysFreeString(bstr);
   if (&amp;vSrc) 
      VariantClear(&amp;vSrc);
   if (pObjError)
      pObjError-&gt;Release();
   if (pXMLDoc)
      pXMLDoc-&gt;Release();
   CoUninitialize();
   return 0;

}</PRE>

<P class="labelproc"><B>To add loadDOMRaw.cpp to the project</B>

<OL type="1">
	<LI>Create a new C++ source file. For detailed instructions on how to do this, see <A HREF="dom_hdi_9ypf.htm">Set Up My Visual C++ Project</A>. Name the new file <B>loadDOMRaw.cpp</B>. </li>

	<LI>Copy the C/C++ source code above and paste it into the source file you just created.</li>
</OL>

<P>Next, we'll add the <A HREF="dom_hdi_8tgl.htm">resource file</A>, <B>stocks.xml</B>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
