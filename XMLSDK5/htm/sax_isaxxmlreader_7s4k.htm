<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>putFeature Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="putfeature_method"></A>putFeature Method</H1>

<P>Sets the value of a feature.</P>

<P>Allows an application to control the behavior of a reader by setting the state of the supported features. The feature name is any qualified Uniform Resource Identifier (URI). The <code class="ce">ISAXXMLReader</code> interface recognizes the following features:

<UL type="disc">
	<LI><code class="ce">"exhaustive-errors"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/external-general-entitities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/external-parameter-entities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/lexical-handler/parameter-entities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/namespaces"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/namespace-prefixes"</code></li>

	<LI><code class="ce">"preserve-system-identifiers"</code></li>

	<LI><code class="ce">"schema-validation"</code></li>

	<LI><code class="ce">"server-http-request"</code></li>
</UL>

<P>The values for the <code class="ce">namespaces</code> and <code class="ce">namespace-prefixes</code> features may be available only in a specific context, such as before, during, or after a parse.</P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Usage Syntax</H4>

<PRE class="syntax">oSAXXMLReader.putFeature(strName, vfValue)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>strName</I></DT>

<DD>The name of the current feature.</dd>

<DT><I>vfValue</I></DT>

<DD>A Boolean expression (True/False) specifying whether the feature is on or off.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<P>The following table shows the return values for the <code class="ce">putFeature</code> method.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Feature</TH>
<TH width=50%>Returns</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">exhaustive-errors</code><BR>
<code class="ce">external-general-entities</code><BR>
<code class="ce">external-parameter-entities</code><BR>
<code class="ce">namespaces</code><BR>
<code class="ce">namespace-prefixes</code><BR>
<code class="ce">parameter-entities</code><BR>
<code class="ce">preserve-system-identifiers</code><BR>
<code class="ce">schema-validation</code><BR>
<code class="ce">server-http-request</code></TD>
<TD width=50%>If failed, trappable error.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Other features</TD>
<TD width=50%>Trappable error</TD>
</TR>
</table></div>

<P class="fineprint"></P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Syntax</H4>

<PRE class="syntax">HRESULT putFeature(
&nbsp;&nbsp;&nbsp;[in] const wchar_t * pwchName,
&nbsp;&nbsp;&nbsp;[in] VARIANT_BOOL vfValue);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>pwchName</I> [in]</DT>

<DD>The name of the feature (zero-terminated Unicode string).</dd>

<DT><I>vfValue</I> [in]</DT>

<DD>The current state of the feature (True or False).</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<P>The following table lists the return values for the <code class="ce">putFeature</code> method.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Feature</TH>
<TH width=50%>Returns</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">namespaces</code></TD>
<TD width=50%>S_OK (not parsing and legal)
<P>E_FAIL if <code class="ce">namespace-prefixes</code> is False. (parsing or illegal)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">namespace-prefixes</code></TD>
<TD width=50%>S_OK (not parsing and legal)
<P>E_FAIL if <code class="ce">namespaces</code> is False. (parsing or illegal)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">external-general-entities</code><BR>
<code class="ce">external-parameter-entities</code><BR>
<code class="ce">parameter-entities</code><BR>
<code class="ce">preserve-system-identifiers</code></TD>
<TD width=50%>S_OK (not parsing)
<P>E_FAIL (parsing or illegal)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">server-http-request</code></TD>
<TD width=50%>S_OK (not parsing)
<P>E_FAIL (parsing)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">exhaustive-errrors</code><BR>
<code class="ce">schema-validation</code></TD>
<TD width=50%>E_FAIL</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Other features</TD>
<TD width=50%>E_INVALIDARG</TD>
</TR>
</table></div>

<P class="fineprint"></P>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The following describes the possible settings and access for features:</P>

<PRE class="code">"<code class="ce">exhaustive-errors</code>"</PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;Report all validation errors.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;(default) Report only basic validation errors.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/write.</BLOCKQUOTE>

<PRE class="code">"http://xml.org/sax/features/external-general-entities"</PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;Include all external general (text) entities.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;(default) Do not include external general entities.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/write.</BLOCKQUOTE>

<PRE class="code">"http://xml.org/sax/features/external-parameter-entities"</PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;Include all external parameter entities, including the external document type definition (DTD) subset.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;(default) Do not include any external parameter entities, including the<BR>
&nbsp;&nbsp;&nbsp;external DTD subset.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/write.</BLOCKQUOTE>

<PRE class="code"><code class="ce">"http://xml.org/sax/features/lexical-handler/parameter-entities"</code></PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;(default) For all parameter entities, all <code class="ce">ISAXLexicalHandler</code> event methods events are fired. </BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;For all parameter entities, the following <code class="ce">ISAXLexicalHandler</code> event methods are not fired: <code class="ce">startEntity</code>, <code class="ce">endEntity</code>, <code class="ce">skippedEntity</code>. This includes parameter entities defined in external document type definition (DTD) subsets.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/write.</BLOCKQUOTE>

<PRE class="code">"http://xml.org/sax/features/namespaces"</PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;(default) Makes namespace URIs and local names available during various method callbacks. For example, callbacks made using the <code class="ce">startElement</code> and <code class="ce">endElement</code> methods of the <code class="ce">ISAXContentHandler</code> interface, or the methods of the <code class="ce">ISAXAttributes</code> interface. In addition, <A HREF="xml_concepts_071v.htm">namespace declarations</A> are returned by the <code class="ce">startPrefixMapping</code> and <code class="ce">endPrefixMapping</code> methods of the <code class="ce">ISAXContentHandler</code> interface.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;Does not make namespace URIs and local names available during various method callbacks.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/write.</BLOCKQUOTE>

<PRE class="code">"http://xml.org/sax/features/namespace-prefixes"</PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;(default) Namespace declarations are ignored and namespace-prefixed attributes are treated the same as other attributes.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;Namespace declarations are omitted from the attribute collection, provided that the <code class="ce">namespace</code> feature is True.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&nbsp;&nbsp;(parsing) Read-only. (not parsing) Read/write.</BLOCKQUOTE>

<PRE class="code">"preserve-system-identifiers"</PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;System identifiers reported by the reader are not resolved. This applies to all system identifiers used with any lexical, declaration, or DTD handlers, as well as any entity resolvers that might be implemented. Internally, however, system identifiers are still resolved.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;(default) System identifiers reported by the reader are resolved.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/write.</BLOCKQUOTE>

<PRE class="code">"schema-validation"</PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;Include all external general (text) entities.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;(default) Do not validate when parsing.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/write.</BLOCKQUOTE>

<PRE class="code">"server-http-request"</PRE>

<BLOCKQUOTE class="dtBlock">
True&nbsp;&#0151;&nbsp;Use the server-safe <code class="ce">ServerXMLHTTP</code> object for the <code class="ce">parseURL</code> method.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
False&nbsp;&#0151;&nbsp;(default) Use the WinInet component to get data through HTTP for<BR>
&nbsp;&nbsp;&nbsp;<code class="ce">parseURL</code>.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/write.</BLOCKQUOTE>

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_isaxxmlreader_5m04.htm">getFeature Method</A></P>

<P>Applies to: <A HREF="sax_isaxxmlreader_6nmt.htm">ISAXXMLReader Interface</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
