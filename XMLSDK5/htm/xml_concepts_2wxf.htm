<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Attributes</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconattributes"></A>Attributes</H1>

<P>Attributes allow you to add information about an element using name-value pairs. Attributes are often used to define properties of elements that are not considered the content of the element, though in some cases (for example, the HTML <code class="ce">img</code> element) the content of the element is determined by attribute values.</P>

<P>Attributes can appear in start or empty tags, but not in end tags. The syntax looks like:</P>

<PRE class="code">&lt;elementName <I>att1Name</I>="<I>att1Value</I>" <I>att2Name</I>="<I>att2Value</I>"<I>...</I>&gt;</PRE>

<P>or:</P>

<PRE class="code">&lt;elementName <I>att1Name</I>="<I>att1Value</I>" <I>att2Name</I>="<I>att2Value</I>"<I>...</I>/&gt;</PRE>

<P>Attributes must have both a name and a value. No names without values are permitted. An element cannot have two attributes with the same name. Because the order in which attributes appeared inside of an element is not considered important by XML, it might not be preserved by the XML parser.</P>

<P>Like element names, attribute names are case-sensitive and must start with a letter or underscore. The rest of the name can contain letters, digits, hyphens, underscores, and periods.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;Colons are reserved for use with namespaces. For more information about which Unicode characters are acceptable letters and digits, see Appendix B of the XML specification.</BLOCKQUOTE>

<P>Attribute values must follow the same rules as normal textual content, with a few additional restrictions. Attribute values can contain only text, not element markup. Entity references and character references are allowed within attribute values, but CDATA sections are not.</P>

<P>Finally, quotes might have to be escaped. The XML specification allows you to use either single or double quotes to indicate attributes, though the type of quote used must be the same on both sides of the attribute value. You must use quotes around attribute values, however. XML parsers will simply reject documents that do not use quotes around attribute values and report an error.</P>

<P>If you use single quotes to indicate an attribute value, you must represent single quotes inside the attribute value using the <code class="ce">&amp;apos;</code> entity reference.</P>

<PRE class="code">&lt;myElement contraction='isn&amp;apos;t' /&gt;</PRE>

<P>If you use double quotes to indicate an attribute value, you must represent double quotes inside the attribute value using the <code class="ce">&amp;quot;</code> entity reference.</P>

<PRE class="code">&lt;myElement question="They asked &amp;quot;Why?&amp;quot;" /&gt;</PRE>

<P>You can, however, use double quotes inside of single-quoted attribute values and vice-versa, as the following examples demonstrate.</P>

<PRE class="code">&lt;myElement contraction="isn't" /&gt;
&lt;myElement question='They asked "Why?"' /&gt;</PRE>

<P>You can also use different types of quotes on different attribute values within the same element.</P>

<PRE class="code">&lt;myElement contraction="isn't" question='They asked "Why?"' /&gt;</PRE>

<P>XML parsers do not preserve white space within attribute values the same way that they preserve white space within element textual content. In a validating parser with access to a DTD, all white space within an attribute value of any type other than CDATA is replaced with a single space; starting and ending white space will be stripped.</P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=4853">Appendix B, Character Classes</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
