<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>readyState Property (DOMDocument)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmproreadystatedocument"></A>readyState Property (DOMDocument)</H1>

<P>Indicates the current state of the XML document.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">lValue = oXMLDOMDocument.readyState;</PRE>

<H4 class="dtH4">Example</H4>

<P>The following script example demonstrates the sequence of ready states when asynchronously loading a document.</P>

<PRE class="code">&lt;script&gt;
var xmldoc;
function Load()
{
&nbsp;&nbsp;&nbsp;xmldoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
&nbsp;&nbsp;&nbsp;xmldoc.onreadystatechange = CheckState;
&nbsp;&nbsp;&nbsp;xmldoc.load(URL.value);
&nbsp;&nbsp;&nbsp;if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
&nbsp;&nbsp;&nbsp;}
}
function CheckState()
{
  var state = xmldoc.readyState;
  RESULTS.innerHTML += "readyState = " + state + "&lt;BR&gt;"
  if (state == 4)
  {
    var err = xmldoc.parseError;
    if (err.errorCode != 0)
      RESULTS.innerHTML += err.reason + "&lt;BR&gt;"
    else RESULTS.innerHTML +="success" + "&lt;BR&gt;"
  }
}
&lt;script&gt;
URL: &lt;input type=text size=60 id=URL&gt;
&lt;input type=button value=LOAD onclick="jscript:Load()"&gt;
&lt;div id=RESULTS style= "color:red;font-weight:bold;"&gt;&lt;/div&gt;</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">lValue = oXMLDOMDocument.readyState</PRE>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft&reg; Visual Basic&reg; example demonstrates the sequence of ready states when asynchronously loading a document.</P>

<PRE class="code">Dim WithEvents xmldoc As Msxml2.DOMDocument50
Private Sub Command1_Click()
&nbsp;&nbsp;&nbsp;Set xmldoc = New Msxml2.DOMDocument50
&nbsp;&nbsp;&nbsp;xmldoc.Load "books.xml"
&nbsp;&nbsp;&nbsp;If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
&nbsp;&nbsp;&nbsp;End If
End Sub
Private Sub xmldoc_onreadystatechange()
   Dim state As Integer
   state = xmldoc.readyState
   Text1.Text = Text1.Text &amp; "readyState = " &amp; state &amp; vbCrLf
   If state = 4 Then
      If xmldoc.parseError.errorCode &lt;&gt; 0 Then
         Text1.Text = Text1.Text &amp; xmldoc.parseError.reason &amp; vbCrLf
      Else
         Text1.Text = Text1.Text &amp; "success" &amp; vbCrLf
      End If
   End If
End Sub</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT get_readyState(
    long * value);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>value</I> [out, retval]</DT>

<DD>The value that indicates the instantiation and download state of the XML document object. It can be one of the following:

<P class="fineprint">

<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=24%>LOADING (1) </TD>
<TD width=76%>The load is in progress. Reading persisted properties, but not yet parsing data. For <code class="ce">readyState</code> definitions, data should be considered equivalent to binary large object (BLOB) properties. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LOADED (2) </TD>
<TD width=76%>Reading of the persisted properties completed. Reading and parsing data, but the object model is not yet available. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%>INTERACTIVE (3) </TD>
<TD width=76%>Some data has been read and parsed, and the object model is now available on the partially retrieved data set. Although the object model is available during this state, it is read-only. </TD>
</TR>

<TR VALIGN="top">
<TD width=24%>COMPLETED (4) </TD>
<TD width=76%>The document has been completely loaded, successfully or unsuccessfully.</TD>
</TR>
</table></div>


<P class="fineprint">
</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the <code class="ce">value</code> parameter is Null.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Example</H4>

<P>See the example in <A HREF="xml_evt_0a9g.htm">onreadystatechange Event</A>.</P>

<H4 class="dtH4">Remarks</H4>

<P>Long integer. The property is read-only. It returns a value that indicates the instantiation and download state of the XML document object. The value can be one of the following:</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=26%>State</TH>
<TH width=74%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=26%>LOADING (1)</TD>
<TD width=74%>The load is in progress. Reading persisted properties, but not yet parsing data. For <code class="ce">readyState</code> definitions, data should be considered equivalent to binary large object (BLOB) properties.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%>LOADED (2)</TD>
<TD width=74%>Reading of the persisted properties completed. Reading and parsing data, but the object model is not yet available.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%>INTERACTIVE (3)</TD>
<TD width=74%>Some data has been read and parsed, and the object model is now available on the partially retrieved data set. Although the object model is available during this state, it is read-only.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%>COMPLETED (4)</TD>
<TD width=74%>The document has been completely loaded, successfully or unsuccessfully.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>This member is an extension of the World Wide Web Consortium (W3C) Document Object Model (DOM).</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_evt_0a9g.htm">onreadystatechange Event</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
