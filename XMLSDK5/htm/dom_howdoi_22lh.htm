<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Navigating the Tree</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconnavigatingthetree"></A>Navigating the Tree</H1>

<P>The Document Object Model (DOM) treats the contents of documents as a collection of nodes of various types. Some nodes contain other nodes, or groups of nodes, building a structure commonly referred to as the document tree. Programs that access or manipulate the information stored in XML documents through the DOM must navigate this tree structure.</P>

<P>From an <code class="ce">IXMLDOMNode</code> object, you can navigate directly to its parent node (<code class="ce">parentNode</code>), children (<code class="ce">childNodes</code>, <code class="ce">firstChild</code>, <code class="ce">lastChild</code>), siblings (<code class="ce">previousSibling</code>, <code class="ce">nextSibling</code>), or the document object to which the node belongs (<code class="ce">ownerDocument</code>). If the node is of type <code class="ce">element</code>, <code class="ce">attribute</code>, or <code class="ce">entityReference</code>, you can call the <code class="ce">definition</code> property to navigate to the schema definition of the node. In addition, if the node is of type <code class="ce">element</code>, <code class="ce">processingInstruction</code>, <code class="ce">documentType</code>, <code class="ce">entity</code>, or <code class="ce">notation</code>, you can navigate to the attributes on the node using the <code class="ce">attributes</code> property.</P>

<P>The following code tests to see if the <code class="ce">elem1</code> element has any element children. If so, it navigates from <code class="ce">elem1</code> to that element's first child. The text of that first child is then changed to <code class="ce">"I'm the first child of elem1"</code>.</P>

<PRE class="code">if (elem1.hasChildNodes == true &amp;&amp; elem1.firstChild.nodeTypeString == "element")
  elem1.firstChild.text = "I'm the first child of elem1"</PRE>

<P>To navigate to nodes other than the first or last sibling, you can start from the first or last child and use the <code class="ce">previousSibling</code> or <code class="ce">nextSibling</code> methods to move forward or backward through the list.</P>

<PRE class="code">wantedNodeCount=2
currentNode=1
set wantedNode=elem1.firstChild
Do While currentNode&lt;wantedNodeCount
  set wantedNode=wantedNode.nextSibling
  currentNode=currentNode+1
Loop</PRE>

<P>The following is an example in Microsoft&reg; JScript&reg;.</P>

<PRE class="code">wantedNodeCount=2;
currentNode=1;
wantedNode=elem1.firstChild;
while (currentNode&lt;wantedNodeCount) {
  wantedNode=wantedNode.nextSibling;
  currentNode++;
}</PRE>

<P>In either case, the variable <code class="ce">wantedNode</code> contains the desired node, and can be used for other processing or navigation. With a few additional comparisons, you can use techniques like these to find nodes that meet specific type and content criteria. If you prefer to walk through the list of child nodes using numeric references, use the <code class="ce">IXMLDOMNodeList</code> object returned by the <code class="ce">childNodes</code> property.</P>

<P>It is also possible to navigate to other nodes in the tree using the <code class="ce">selectNodes</code> and <code class="ce">selectSingleNode</code> methods. These methods take an XML Path Language (XPath) expression as an argument and return the node or nodes that match that query. For more information about XPath, see <A HREF="xpath_syntax1_0fjs.htm">XPath Syntax</A>.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_pro_ae_5fzn.htm">attributes Property</A> | <A HREF="xml_pro_ae_72cz.htm">childNodes Property</A> | <A HREF="xml_pro_ae_4wj2.htm">definition Property</A> | <A HREF="xml_pro_fm_11lw.htm">firstChild Property</A> | <A HREF="xml_pro_fm_1gbo.htm">lastChild Property</A> | <A HREF="xml_pro_no_6m7b.htm">nextSibling Property</A> | <A HREF="xml_pro_no_38c4.htm">ownerDocument Property</A> | <A HREF="xml_pro_pr_3un9.htm">parentNode Property</A> | <A HREF="xml_pro_pr_1207.htm">previousSibling Property</A> | <A HREF="xml_mth_sz_3oz7.htm">selectNodes Method</A> | <A HREF="xml_mth_sz_3jol.htm">selectSingleNode Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
