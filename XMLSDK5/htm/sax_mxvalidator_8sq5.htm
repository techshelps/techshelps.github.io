<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Visual Basic Code (Mxvld.frm)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mxvalidator_examples_mxvldfrm"></A>Visual Basic Source: Mxvld.frm</H1>

<PRE class="code">Option Explicit

Private Function HandleErrors()
    MsgBox Err.Description
End Function

Private Sub Form_Resize()
    
    ' Resize text box to size of form.
    Text1.Width = Form1.Width - 350
    Text1.Height = Form1.Height - 750

End Sub

Private Sub Form_Load()

    ' Resize text box to size of form.
    Text1 = ""
    Text1.Top = 100
    Text1.Left = 100
    Text1.Width = Form1.Width - 350
    Text1.Height = Form1.Height - 750
   
    'C reate standalone SAX validator.
    Dim vld As New MXValidator50
    Dim cnth As MSXML2.IVBSAXContentHandler
    Dim attrs As New SAXAttributes50

    ' Create the writer.
    Dim wrt As New MXXMLWriter50
    Set vld.errorHandler = wrt

    ' Create a schema collection to use in validation.
    Dim Sch As New XMLSchemaCache50

    ' Load schemas into the schema collection, Sch.
    Sch.Add "", App.Path &amp; "\books.xsd"
    vld.putProperty "schemas", Sch
    Set cnth = vld

    On Error GoTo errorHandler

    ' Configure the writer to indent elements.
    wrt.indent = True

    ' Start the document.
    cnth.startDocument

    ' Add the XML declaration.
    cnth.processingInstruction "xml", "version='1.0'"

    'Add the &lt;catalog&gt; element to the page.
    cnth.startElement "", "catalog", "catalog", attrs

    ' Add the id attribute to the collection witht he "bk0101" value.
    attrs.addAttribute "", "", "id", "CDATA", "bk101"
    ' Create the &lt;book id="bk101"&gt; tag.
    cnth.startElement "", "book", "book", attrs
    ' Clear the attribute collection.
    attrs.Clear

    ' Create the &lt;author&gt;Gambardella, Matthew&lt;/author&gt; string.
    cnth.startElement "", "author", "author", attrs
    cnth.characters "Gambardella, Matthew"
    cnth.endElement "", "author", "author"

    ' Create the &lt;title&gt;XML Developer's Guide&lt;/title&gt; string.
    cnth.startElement "", "title", "title", attrs
    cnth.characters "XML Developer's Guide"
    cnth.endElement "", "title", "title"

    ' Create the &lt;genre&gt;Computer&lt;/genre&gt; string.
    cnth.startElement "", "genre", "genre", attrs
    cnth.characters "Computer"
    cnth.endElement "", "genre", "genre"
    
    ' Create the &lt;cost&gt;44.95&lt;/cost&gt; string.
    ' This element will be invalid according to books.xsd.
    cnth.startElement "", "cost", "cost", attrs
    cnth.characters "44.95"
    cnth.endElement "", "cost", "cost"

    ' Create the &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt; string.
    cnth.startElement "", "publish_date", "publish_date", attrs
    cnth.characters "2000-10-01"
    cnth.endElement "", "publish_date", "publish_date"

    ' Create the &lt;description&gt;An in-depth look at...&lt;/description&gt; string.
    cnth.startElement "", "description", "description", attrs
    cnth.characters "An in-depth look at creating applications with XML"
    cnth.endElement "", "description", "description"

    ' Add closing tags for the &lt;book&gt; and &lt;catalog&gt; elements.
    cnth.endElement "", "book", "book"
    cnth.endElement "", "catalog", "catalog"

    ' End the document.
    cnth.endDocument

    Text1.Text = "Success!" &amp; vbCrLf &amp; vbCrLf &amp; wrt.output
    Exit Sub
    

errorHandler:

    Text1.Text = "Failure:" &amp; vbCr &amp; vbLf &amp; wrt.output

End Sub</PRE>

<P class="label"><B>Try It!</B>

<OL type="1">
	<LI>Copy the XML schema definition file from <A HREF="sax_mxvalidator_1g9x.htm">Resource: books.xsd</A>, and paste it into a text file. Save the file as <B>books.xsd</B>.</li>

	<LI>Create a Standard EXE project in Visual Basic. Save the empty project as <B>Mxvld.vbp</B> to the same directory where you saved <B>books.xsd</B>. Name the form file <B>Mxvld.frm</B>.</li>

	<LI>Create a reference to MSXML 5.0. To do this, select <B>References...</B> from the <B>Project</B> menu, and then check the box for <B>Microsoft XML, v5.0</B>.</li>

	<LI>Double click on the <B>TextBox</B> icon from the tools menu. A <B>TextBox</B> control will appear on the project's form named Text1. In the properties for Text1, set the <B>ScrollBars</B> property to use "2 - Vertical" as the value and set the <B>MultiLine</B> property to True.</li>

	<LI>Copy the Visual Basic code listing above, and paste it into the Visual Basic code editor to replace whatever code is already there. </li>

	<LI>Execute the code by selecting <B>Start</B> from the <B>Run</B> menu.</li>

	<LI>Verify that your output is similar to that listed in the <A HREF="sax_mxvalidator_09mc.htm">Output</A> topic. To view the contents of the output more easily, resize the application form as needed.</li>
</OL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
