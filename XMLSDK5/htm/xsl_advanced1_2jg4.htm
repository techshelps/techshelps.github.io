<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Introduction to Namespaces in XSLT</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconintroductiontonamespacesinxslt"></A>Introduction to Namespaces in XSLT</H1>

<P>A namespace defines a class (or set) of names of elements and attributes designed for use in the context of a specific technology. For example, the elements and attributes for XHTML, such as <code class="ce">&lt;HTML&gt;</code>, <code class="ce">&lt;BODY&gt;</code>, <code class="ce">&lt;HREF&gt;</code>, and so on, share the <code class="ce">XHTML</code> namespace. The elements defined in the XSLT Version 1.0 specification, such as <code class="ce">&lt;xsl:stylesheet&gt;</code>, <code class="ce">&lt;xsl:template&gt;</code>, <code class="ce">&lt;xsl:if&gt;</code>, and so on, share the XSLT 1.0 namespace, <code class="ce">xsl</code>.</P>

<P>A namespace is identified by a URI (for example, <code class="ce">http://www.w3.org/1999/XSL/Transform</code>), and by one or more namespace prefixes (for example, <code class="ce">xsl</code>) that serve as the short-hand of the URI. In general, an element belonging to a particular namespace is written in the format of <code class="ce">namespace-prefix:element-name</code>. For example, <code class="ce">&lt;xsl:sort&gt;</code>.</P>

<P>Namespaces help to avoid collisions of names of different classes. For example, <code class="ce">&lt;my:if&gt;</code> and <code class="ce">&lt;xsl:if&gt;</code> differentiate the <code class="ce">&lt;if&gt;</code> element of the <code class="ce">xsl</code> namespace from that of the <code class="ce">my</code> namespace.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;Technically, attribute names without a prefix are assumed to be in no namespace in particular. To ensure that an attribute comes from a specified namespace, use the namespace prefix when specifying the attribute.</BLOCKQUOTE>

<P>For more information about how to associate a particular prefix with a particular namespace, see the next section, <A HREF="xsl_advanced1_07lg.htm">Declaring Namespaces for XSLT</A>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
