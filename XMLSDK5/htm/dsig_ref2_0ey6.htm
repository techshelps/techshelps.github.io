<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>sign Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - Digital Signatures</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmth_sign"></A>sign Method</H1>
<font face="verdana" color=red>[This feature was first implemented for MSXML 5.0.]</font>
<P>Signs the document referenced in the <code class="ce">&lt;ds:Signature&gt;</code> element that has been assigned to the <A HREF="dsig_ref_2hd1.htm">signature</A> property of this <code class="ce">IXMDigitalSignature</code> object. The key object supplied must contain a private key and can be generated from one of the following methods: 

<UL type="disc">
	<LI><code class="ce">createKeyFromCSP</code></li>

	<LI><code class="ce">createKeyFromCertContext</code></li>

	<LI><code class="ce">createKeyFromHMACSecret</code></li>

	<LI><code class="ce">createKeyFromHMACSecretBinary</code></li>

	<LI><code class="ce">createKeyFromNode</code></li>
</UL>
<div class=filtered><span class="lang">[JScript]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">var oSignedKey = objXMLDigitalSignature.sign(oKey, fwWriteKeyInfo);</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">Set oSignedKey = objXMLDigitalSignature.sign(oKey, fwWriteKeyInfo)</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax Using Smart Pointers</H4>

<PRE class="syntax">IXMLDSigKeyPtr oSignedKey =
 objXMLDigitalSignature-&gt;sign(oKey, fwWriteKeyInfo);</PRE>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT sign(
    IXMLDSigKey* oKey,
    XMLDSIG_WRITEKEYINFO<B> </B>fwWriteKeyInfo,
    IXMLDSigKey** oSignedKey);</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>oKey</I></DT>

<DD>A key object implementing the <code class="ce">IXMLDSigKey</code> interface. This object cannot be NULL.</dd>

<DT><I>fwWriteKeyInfo</I></DT>

<DD>A flag to specify how the key information should be handled in the resultant signature object. Possible values are discussed in <A HREF="dsig_ref2_85rh.htm">XMLDSIG_WRITEKEYINFO enum</A>.</dd>

<DT><I>oSignedKey</I> [out, retval]</DT>

<DD>The <code class="ce">IXMLDSigKey</code> object used in signing. The return parameter is NULL if the method failed. Otherwise it is the same object passed in the <code class="ce">oKey</code> parameter. </dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if the method call was successful.</dd>

<DT>E_FAIL</DT>

<DD>The value returned if the implementation failed to get the data for CryptoAPI.</dd>

<DT>E_ACCESSDENIED</DT>

<DD>The value returned if the method is called in a non-trusted context or the caller lacks a sufficient permission to access the supplied key. </dd>
</DL>

<P>In addition, the method passes the failure codes from CryptoAPI that are not covered by S_FALSE or NULL.</P>

<H4 class="dtH4">Remarks</H4>

<P>Signing using this method amounts to performing the following tasks:

<OL type="1">
	<LI>Calculate digest values for the document referenced in every <code class="ce">&lt;ds:Reference&gt;</code> element under <code class="ce">&lt;ds:SignedInfo&gt;</code>:
<OL type="a">
	<LI>Resolve the <code class="ce">URI</code> attribute of the <code class="ce">&lt;ds:Reference&gt;</code> element. If the <code class="ce">URI</code> attribute is absent, data set by <code class="ce">IXMLDigitalSignature::setReferenceData</code> is used.</li>

	<LI>Perform the transformations specified in the optional <code class="ce">&lt;ds:transforms&gt;</code> child element.</li>

	<LI>Calculate the digest of the referenced data using the algorithm named in the <code class="ce">&lt;ds:DigestMethod&gt;</code> child element in the signature template and output the hash value as the text value of the <code class="ce">&lt;ds:DigestValue&gt;</code> child element. </li>
</OL>
</li>

	<LI>Fill in the <code class="ce">&lt;ds:SignatureMethod&gt;</code> element with the name of the algorithm determined by the signing key. For HMAC, <code class="ce">&lt;ds:HMACOutputLength&gt;</code> is created, if absent, and its content is set according to the value of the <code class="ce">length</code> parameter of the <code class="ce">createKeyFromHMACSecret</code> or <code class="ce">createKeyFromHMACSecretBinary</code> method.</li>

	<LI>Canonicalize the content of the <code class="ce">&lt;ds:SignedInfo&gt;</code> element using the algorithm named in the <code class="ce">&lt;ds:CanonicalizationMethod&gt;</code> element. </li>

	<LI>Calculate the digest of the canonicalized <code class="ce">&lt;ds:SignedInfo&gt;</code> to produce the signature hash.</li>

	<LI>Sign the signature hash using the private key provided and saves this signed signature as the text value of the <code class="ce">&lt;ds:SignatureValue&gt;</code> element.</li>

	<LI>Save the information of the key and certificates to the <code class="ce">&lt;ds:KeyInfo&gt;</code> element according the value of <code class="ce">fWriteKeyInfo</code> parameter passed to the <code class="ce">sign</code> method.</li>

	<LI>Return the key in the <code class="ce">oSignedKey</code> parameter if signing succeeded. Otherwise return NULL.</li>
</OL>

<P>From this we see how a signature template might be set up. For more information on how to set up the signature template, see the discussions given in the <code class="ce">signature Property</code> topic. </P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">sign</code> method is the only method that can change the <code class="ce">&lt;ds:Signature&gt;</code> element specified by the <code class="ce">signature</code> property.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;You cannot sign any data in a non-trusted context, such as a script embedded in an HTML page. Doing so will result in an error.</BLOCKQUOTE>

<H4 class="dtH4">Example</H4>

<P>The following example illustrates how the <code class="ce">sign</code> method is used to sign data with XML digital signature. It uses a simple signature template (<B>signature_template.sign.rsa.xml</B>) as the input. The template has three empty sub elements: <code class="ce">&lt;ds:DigestValue&gt;</code>, <code class="ce">&lt;ds:SignatureValue&gt;</code>, and <code class="ce">&lt;ds:KeyInfo&gt;</code>. The first two will be filled in after <code class="ce">sign</code> returns. The last one will be filled in when <code class="ce">sign</code> is called with <code class="ce">fwWriteKeyInfo=KEYVALUE</code>. It is left intact if <code class="ce">fwWriteKeyInfo=NOKEYINFO</code> and all the existing content is cleared if <code class="ce">fwWriteKeyInfo=PURGE</code>. When <code class="ce">fwWriteKeyInfo=CERTIFICATES</code>, a <code class="ce">&lt;X509Data&gt;</code> element is inserted when the certificate of the key used is available.</P>

<P>We've provided source files for the sample in three languages: JScript, Visual Basic, and C++. The output is the same in each language.

<UL type="disc">
	<LI><A HREF="dsig_ref2_64kl.htm">Resource File (signature_template.sign.rsa.xml)</A></li>

	<LI><A HREF="dsig_ref2_9g8j.htm">JScript Code (sign.js)</A></li>

	<LI><A HREF="dsig_ref2_4ijx.htm">Visual Basic Code (sign.frm)</A></li>

	<LI><A HREF="dsig_ref2_48z4.htm">C/C++ Code (sign.cpp)</A></li>

	<LI><A HREF="dsig_ref2_973o.htm">Output for the sign Example</A></li>
</UL>

<H4 class="dtH4">Applies To</H4>

<P><A HREF="dsig_ref_499h.htm">IXMLDigitalSignature</A> | <A HREF="dsig_ref_82t4.htm">IXMLDigitalSignatureEx</A></P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 5.0 and later</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
