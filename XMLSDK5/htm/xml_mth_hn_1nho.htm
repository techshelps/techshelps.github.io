<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>loadXML Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthloadxml"></A>loadXML Method</H1>

<P>Loads an XML document using the supplied string.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">boolValue = oXMLDOMDocument.loadXML(bstrXML);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>bstrXML</I></DT>

<DD>A string containing the XML string to load into this XML document object. This string can contain an entire XML document or a well-formed fragment.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>Boolean. Returns True if the XML load succeeded. Returns False and sets the <code class="ce">documentElement</code> property of the <code class="ce">DOMDocument</code> to Null if the XML load failed.</P>

<H4 class="dtH4">Example</H4>

<P>The following script example creates a <code class="ce">DOMDocument</code> object, and then uses its <code class="ce">loadXML</code> method to load the specified XML before displaying it.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
xmlDoc.async = false;
xmlDoc.loadXML("&lt;customer&gt;&lt;first_name&gt;Joe&lt;/first_name&gt;&lt;last_name&gt;Smith&lt;/last_name&gt;&lt;/customer&gt;");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;alert(xmlDoc.xml);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">boolValue = oXMLDOMDocument.loadXML(bstrXML)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>bstrXML</I></DT>

<DD>A string containing the XML string to load into this XML document object. This string can contain an entire XML document or a well-formed fragment.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>Boolean. Returns True if the XML load succeeded. Returns False and sets the <code class="ce">documentElement</code> property of the <code class="ce">DOMDocument</code> to Null if the XML load failed.</P>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft&reg; Visual Basic&reg; example creates a <code class="ce">DOMDocument</code> object, and then uses its <code class="ce">loadXML</code> method to load the specified XML before displaying it.</P>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
xmlDoc.async = False
xmlDoc.loadXML ("&lt;customer&gt;" &amp; _
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;first_name&gt;Joe&lt;/first_name&gt;" &amp; _
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"&lt;last_name&gt;Smith&lt;/last_name&gt;&lt;/customer&gt;")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;MsgBox xmlDoc.xml
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT loadXML(
    BSTR bstrXML,
    VARIANT_BOOL * isSuccessful);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>bstrXML</I> [in]</DT>

<DD>An XML string to load into this XML document object. This string can contain an entire XML document or a well-formed fragment.</dd>

<DT><I>isSuccessful</I> [out, retval]</DT>

<DD>True if the XML load succeeded. If the XML load failed, this method returns False and sets the <code class="ce">documentElement</code> property of the <code class="ce">DOMDocument</code> object to Null.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>S_FALSE</DT>

<DD>The value returned if the load fails.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the <code class="ce">isSuccessful</code> parameter is Null.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>Calling <code class="ce">load</code> or <code class="ce">loadXML</code> on an existing document immediately discards the content of the document. The <code class="ce">loadXML()</code> method will work only with UTF-16 or UCS-2 encodings.</P>

<P>You can use this method to check if the loaded XML document is well-formed. You cannot use it to validate the XML document against a schema.</P>

<P>This member is an extension of the World Wide Web Consortium (W3C) Document Object Model (DOM).</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_pro_ae_6xro.htm">documentElement property</A> | <A HREF="xml_mth_hn_2uck.htm">load Method</A> | <A HREF="dom_concepts_4x4d.htm">Persistence and the DOM</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
