<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Managing MSXML Version Dependencies</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmscmanagingmsxmlversiondependencies"></A>Managing MSXML Version Dependencies</H1>

<P>Creating an application manifest will work when you first deploy your application with MSXML 5.0. But what happens if you want to control which version of MSXML your application uses as new versions of it are released?</P>

<P>For example, you might want to:

<UL type="disc">
	<LI>Have your application use the version of MSXML that you originally tested and deployed with your application when it was released.</li>

	<LI>Have your application updated to use a more recent version of MSXML as new versions are released in the future.</li>
</UL>

<P>Windows XP enables assembly publishers, application publishers, and administrators to change side-by-side assembly dependencies after deployment with publisher configuration<I> </I>and per-application configuration.</P>

<H2 class="dtH2">Publisher configuration</H2>

<P>Publisher configuration redirects applications and assemblies that have a default dependence on one version of a side-by-side assembly, so that they use another specified version instead. Assembly publishers can implement a publisher configuration by authoring and installing publisher configuration files. Publisher configuration files override the default configuration specified by the application manifest. Note that a per-application configuration can override the publisher configuration with application configuration files.</P>

<P>Typically, a publisher configuration would be installed when you install a service pack that contains an assembly update. This enables the applications to use the updated assembly without having to rebuild all the affected applications. For example, an administrator might deploy an assembly update by redirecting all applications and assemblies on the system that use assembly version 1.0.0.0 by default to use version 1.1.0.0 instead. In this case, the new assembly version must be backward compatible.</P>

<H2 class="dtH2">Per-application configuration</H2>

<P>Per-application configuration overrides the default configuration and publisher configuration on a per-application basis. This redirects the dependence of a specific application from one version of a side-by-side assembly to another specified version of the assembly.</P>

<P>A per-application configuration might be necessary if a particular application requires an assembly version that is different from the version that is normally specified as a default or publisher configuration.</P>

<H4 class="dtH4">Example: Updating publisher and per-application configurations</H4>

<P>The following table shows an example of a hypothetical configuration in chronological order. Consider two applications, A and B, which both use component (assembly) X.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=32%>Action</TH>
<TH width=35%>Application A uses component X version</TH>
<TH width=33%>Application B uses component X version</TH>
</TR>

<TR VALIGN="top">
<TD width=32%>Initial state. Component X 1.0 is installed. The application manifest of Application A (Manifest A) points to it. Application B does not have a manifest.</TD>
<TD width=35%>1.0</TD>
<TD width=33%>None. Cannot use X.</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Install X version 1.1.</TD>
<TD width=35%>1.0</TD>
<TD width=33%>Cannot use X.</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Change Manifest A to point to X 1.1.</TD>
<TD width=35%>1.1</TD>
<TD width=33%>Cannot use X.</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Create an application manifest for Application B (Manifest B) to point to X 1.1.</TD>
<TD width=35%>1.1</TD>
<TD width=33%>1.1</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Install X 1.2.</TD>
<TD width=35%>1.1</TD>
<TD width=33%>1.1</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Publisher configuration file installed, redirecting everything from X 1.0 to 1.1.</TD>
<TD width=35%>1.1</TD>
<TD width=33%>1.1</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Publisher configuration file installed, redirecting everything from X 1.1 to 1.2.</TD>
<TD width=35%>1.2 
<P>(Manifest A still points to 1.1.)</P>
</TD>
<TD width=33%>1.2 
<P>(Manifest B still points to 1.1.)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Manifest A is updated to point to 1.2.</TD>
<TD width=35%>1.2</TD>
<TD width=33%>1.2 
<P>(Manifest B still points to 1.1.)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>X 1.3 installed.</TD>
<TD width=35%>1.2</TD>
<TD width=33%>1.2 (Manifest B still points out to 1.1)</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Publisher configuration installed, redirecting everything from X 1.1 to 1.3.</TD>
<TD width=35%>1.2</TD>
<TD width=33%>1.3 
<P>(Manifest B still points to 1.1.)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Manifest B is updated to point to 1.3.</TD>
<TD width=35%>1.2</TD>
<TD width=33%>1.3</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>X 1.4 installed.</TD>
<TD width=35%>1.2</TD>
<TD width=33%>1.3</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>Publisher configuration installed, redirecting everything from 1.2 to 1.4.</TD>
<TD width=35%>1.4 
<P>(Manifest A still points to 1.2.)</P>
</TD>
<TD width=33%>1.3</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>This example demonstrates some of the possible situations you should pay attention to when using publisher and application configuration.</P>

<P>For more information about publisher and application configuration, see the Windows Platform SDK.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
