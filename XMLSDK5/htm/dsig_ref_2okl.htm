<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>store Property</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - Digital Signatures</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmpro_store"></A>store Property</H1>
<font face="verdana" color=red>[This feature was first implemented for MSXML 5.0.]</font>
<P>This read/write property makes a certificate store available for use in an XML application. The certificate store is a CAPICOM 2.0 object of the <code class="ce">Store</code> class.</P>

<H4 class="dtH4">JScript Syntax</H4>

<PRE class="syntax">var objCertStore = objXMLDigitalSignature.store;
objXMLDigitalSignature.store = objCertStore;</PRE>
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">Set objCertStore = objXMLDigitalSignature.store
Set objXMLDigitalSignature.store = objCertStore</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax Using Smart Pointers</H4>

<PRE class="syntax">IUnknownPtr objCertStore = objXMLDigitalSignature.store;
objXMLDigitalSignature.store = objCertStore;</PRE>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT get_store (IUnknown** objCertStore);
HRESULT putref_store (IUnknown* objCertStore);</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>objCertStore</I></DT>

<DD>A certificate store object created as a CAPICOM 2.0 object of the <code class="ce">Store</code> class.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<DL>
<DT>S_OK </DT>

<DD>Getting or setting the store object succeeded.</dd>

<DT>E_FAIL</DT>

<DD>Getting or setting the store object failed. The <code class="ce">objCertStore</code> parameter returns NULL.</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<P>You can only set the store property if the <code class="ce">CERTIFICATES</code> flag has been passed via the <code class="ce">fWriteKeyInfo</code> parameter during the <code class="ce">sign </code>method call. If this flag has been passed, and the <code class="ce">signature</code> property has been set, an application can then set the <code class="ce">store</code> property to specify the certificate store to use. From this store, certificates are retrieved and written to the <code class="ce">&lt;ds:KeyInfo&gt;</code> element in the signed signature. </P>

<P>You might want your application to verify the authenticity of the certificate used to sign or verify. To do this, you can use the <code class="ce">store</code> property to obtain the certificate store, enumerate the certificates there, and build a certificate chain to see if the certificate used can be trusted.</P>

<P>To create the CAPICOM 2.0 <code class="ce">Store</code> object, use the following ProgID:</P>

<PRE class="code">"CAPICOM 2.0 Store"</PRE>

<P>For more information, see the following example.</P>

<H4 class="dtH4">Example</H4>

<P>This example illustrates the effect of setting the <code class="ce">store</code> property on an <code class="ce">IXMLDigitalSignature</code> object. When a signature is signed without setting this property and the CERTIFICATES flag is set in the call to the <code class="ce">sign</code> method, the resultant signature document contains the certificate of the key used in <code class="ce">sign</code>. However, when the signature is signed after this property is set to the certificate store, the resultant signature document contains all the certificates in the store, in addition to the certificate of the key used in <code class="ce">sign</code>. </P>

<P>In this example, the certificate store has three certificates. So the signed signature document contains four <code class="ce">&lt;ds:Certificate&gt;</code> entries, two of which are identical. </P>

<P>The example uses a resource file, <B>signature_template.store.rsa.xml</B>. We've provided source files for the sample in three languages: JScript, Visual Basic, and C++. The output is the same from each language. 

<UL type="disc">
	<LI><A HREF="dsig_ref_8o4l.htm">Resource Files</A></li>

	<LI><A HREF="dsig_ref_7skz.htm">JScript Code (storeProp.js)</A></li>

	<LI><A HREF="dsig_ref_8god.htm">Visual Basic Code (storeProp.frm)</A></li>

	<LI><A HREF="dsig_ref_873k.htm">C/C++ Code (storeProp.cpp)</A></li>

	<LI><A HREF="dsig_ref_0oc4.htm">Output for the store Property Example</A></li>
</UL>

<H4 class="dtH4">Applies To</H4>

<P><A HREF="dsig_ref_499h.htm">IXMLDigitalSignature</A></P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 5.0 and later</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="dsig_ref_82t4.htm">IXMLDigitalSignatureEx</A> | <A HREF="dsig_ref2_0ey6.htm">sign Method</A> | <A HREF="dsig_ref2_61o9.htm">verify Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
