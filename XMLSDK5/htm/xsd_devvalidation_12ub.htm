<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Validate an XML Document Against an XML Schema Using C++</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconvalidatingagainstxmlschemausingc"></A>Validate an XML Document Against an XML Schema Using C++</H1>

<P>To validate an XML document file with an XML Schema definition language (XSD) schema file using C++, you load XML and XSD documents and create a schema cache. The following example illustrates this procedure.</P>

<PRE class="code">#include "stdio.h"

#import &lt;5.0.dll&gt;
using namespace MSXML2;

int checkParseError(IXMLDOMParseErrorPtr pError);
void dump_com_error(_com_error &amp;e);


int main(int argc, char* argv[])
{
   
   CoInitialize(NULL);
   try{
      
      IXMLDOMParseErrorPtr  pError;
      
      // load the XML file
      // ****** you need to use IXMLDOMDocument2 interface *********
      IXMLDOMDocument2Ptr pXMLDoc;
      HRESULT hr = pXMLDoc.CreateInstance(__uuidof(DOMDocument50));
      pXMLDoc-&gt;async =  VARIANT_FALSE; 
      
      hr = pXMLDoc-&gt;load("books.xml");      
      
      //check on the parser error      
      if(hr!=VARIANT_TRUE)
      {
         return checkParseError(pXMLDoc-&gt;parseError);
      }
      
      //load the XSD file
      IXMLDOMDocumentPtr pXSDDoc;
      hr = pXSDDoc.CreateInstance(__uuidof(DOMDocument50));
      pXSDDoc-&gt;async =  VARIANT_FALSE; 
      
      hr = pXSDDoc-&gt;load("books.xsd");
      
      //check on the parser error      
      if(hr!=VARIANT_TRUE)
      {         
         return checkParseError(pXSDDoc-&gt;parseError);
      }
      
      //create schemacache
      IXMLDOMSchemaCollectionPtr pSchemaCache;
      hr = pSchemaCache.CreateInstance(__uuidof(XMLSchemaCache50));
      pXMLDoc-&gt;schemas = pSchemaCache.GetInterfacePtr();
      
      //hook it up with XML Document
      hr = pSchemaCache-&gt;add("urn:books", pXSDDoc.GetInterfacePtr());   
      
      //call validate 
      pError = pXMLDoc-&gt;validate();
      
      if(pError-&gt;errorCode != S_OK)
      {
         _bstr_t parseError = _bstr_t("Error code: ")+ _bstr_t(pError-&gt;errorCode) +_bstr_t("\n") + _bstr_t("Reason: ")+ pError-&gt;Getreason();
         MessageBox(NULL, (char*)parseError, "Parse Error",MB_OK);
         return -1;
      }
      else
         MessageBox(NULL,"Valiation succeeded", "Results",MB_OK);
      
   }
   catch(_com_error &amp;e)
   {
      dump_com_error(e);
   }
   return 0;
}


int checkParseError(IXMLDOMParseErrorPtr pError)
{
   _bstr_t parseError =_bstr_t("At line ")+ _bstr_t(pError-&gt;Getline()) + _bstr_t("\n")+ _bstr_t(pError-&gt;Getreason());
   MessageBox(NULL,parseError, "Parse Error",MB_OK);
   return -1;
   
}

void dump_com_error(_com_error &amp;e)
{
   printf("Error\n");
   printf("\a\tCode = %08lx\n", e.Error());
   printf("\a\tCode meaning = %s", e.ErrorMessage());
   _bstr_t bstrSource(e.Source());
   _bstr_t bstrDescription(e.Description());
   printf("\a\tSource = %s\n", (LPCSTR) bstrSource);
   printf("\a\tDescription = %s\n", (LPCSTR) bstrDescription);
}</PRE>

<P class="label"><B>Input file: books.xml</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;x:catalog xmlns:x="urn:books"&gt;
&lt;book id="bk101"&gt;
&lt;author&gt;Gambardella, Matthew&lt;/author&gt;
&lt;title&gt;XML Developer's Guide&lt;/title&gt;
&lt;genre&gt;Computer&lt;/genre&gt;
&lt;price&gt;44.95&lt;/price&gt;
&lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
&lt;description&gt;An in-depth look at creating applications with XML.&lt;/description&gt;
&lt;/book&gt;
&lt;/x:catalog&gt;</PRE>

<P class="label"><B>Input file: books.xsd</B></P>

<PRE class="code">&lt;xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:books" xmlns:b="urn:books"&gt;

&lt;xsd:element name="catalog" type="b:CatalogData"/&gt;
&lt;xsd:complexType name="CatalogData"&gt;
&lt;xsd:sequence&gt;
&lt;xsd:element name="book" type="b:bookdata" minOccurs="0" maxOccurs="unbounded"/&gt;
&lt;/xsd:sequence&gt;
&lt;/xsd:complexType&gt;

&lt;xsd:complexType name="bookdata"&gt;
&lt;xsd:sequence&gt;
&lt;xsd:element name="author" type="xsd:string"/&gt;
&lt;xsd:element name="title" type="xsd:string"/&gt;
&lt;xsd:element name="genre" type="xsd:string"/&gt;
&lt;xsd:element name="price" type="xsd:float"/&gt;
&lt;xsd:element name="publish_date" type="xsd:date"/&gt;
&lt;xsd:element name="description" type="xsd:string"/&gt;
&lt;/xsd:sequence&gt;
&lt;xsd:attribute name="id" type="xsd:string"/&gt;
&lt;/xsd:complexType&gt;
&lt;/xsd:schema&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="dom_hdi_48v9.htm">Validate an XML Document or Fragment</A> | <A HREF="xsd_ref_01mb.htm">XML Schema Examples</A> | <A HREF="xsd_ref_0o4w.htm">XML Schema Element Map</A> | <A HREF="xsd_ref_1yer.htm">XML Schema Elements</A> | <A HREF="xsd_ref_5bc5.htm">XML Data Types Reference</A> | <A HREF="xsd_ref_6ldf.htm">Primitive XML Data Types</A> | <A HREF="xsd_ref_6z03.htm">Derived XML Data Types</A> | <A HREF="xsd_ref_9rar.htm">Data Type Facets</A> | <A HREF="xml_obj_ixmldomschemacollection_11ke.htm">IXMLDOMSchemaCollection/XMLSchemaCache</A></P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=4871">World Wide Web Consortium (W3C) XML Schema Part 2: Datatypes</A> | <A HREF="http://go.microsoft.com/fwlink/?LinkId=4872">World Wide Web Consortium (W3C) XML Schema Part 1: Structures</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
