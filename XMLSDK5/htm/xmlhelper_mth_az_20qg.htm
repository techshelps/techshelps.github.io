<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>getPrefix Method (C++)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmhmthgetprefix"></A>getPrefix Method (C++)</H1>

<P>Finds the indexed prefix associated with the provided URI. Returns the indexed prefix in the current context. Used for enumeration, this method requests all available prefixes in the current context. The set of prefixes begins at 0. Note that the index value for a prefix can change as the current context changes.</P>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT _getPrefix
    [in] const wchar_t* pwszNamespaceURI,
    [in] long nIndex,
    [in, out] wchar_t* pwchPrefix,
    [in, out] int* pcchPrefix);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>pwszNamespaceURI</I>[in]</DT>

<DD>The namespace URI associated with the prefix.</dd>

<DT><I>nIndex</I>[in]</DT>

<DD>A long index value starting from 0.</dd>

<DT><I>pwchPrefix</I>[in,out]</DT>

<DD>The returned prefix value. The buffer length on input contains the maximum length of the buffer. On output (for successful calls), the returned buffer contains the length of the prefix string. If the buffer is NULL, only the length is returned.</dd>

<DT><I>pcchPrefix</I>[in,out]</DT>

<DD>The length of the prefix.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the <code class="ce">pwszNamespaceURI</code> parameter is an empty string or NULL. No prefix can be bound to an empty string.</dd>

<DT>E_FAIL</DT>

<DD>The value returned if the index is out of bounds.</dd>

<DT>E_XML_BUFFERTOOSMALL</DT>

<DD>The MSXML error code for insufficient return buffer length.</dd>

<DT>E_POINTER</DT>

<DD>The value returned if <code class="ce">ppchPrefix</code> is NULL.</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<DL>
<DT>Return values stored in a character buffer are null-terminated wide strings that are accompanied by the <code class="ce">pcchPrefix</code> parameter. The <code class="ce">pcchPrefix</code><I>,</I> parameter specifies the length of the buffer on input, and returns the length of the result on output. The length of the result is returned as a null-terminated string in characters. If the pointer to the buffer is NULL, the <code class="ce">getPrefix</code> method returns only the length.</DT>
</DL>

<H4 class="dtH4">Example</H4>

<PRE class="code">   MSXML2::IMXNamespaceManagerPtr PtrIMXNamespaceManager;
   HRESULT hres;
   TCHAR Buffer[100];
   unsigned short WideCharBuffer[100];
   int BufferLength = 100;

   try
   {
      PtrIMXNamespaceManager.CreateInstance( _
                              __uuidof(MSXML2::MXNamespaceManager));
      PtrIMXNamespaceManager-&gt;declarePrefix(_T("sample"),_T("urn"));
      PtrIMXNamespaceManager-&gt;declarePrefix(_T("a"),_T("abc"));
      
      _itot(PtrIMXNamespaceManager-&gt;getDeclaredPrefixes()-&gt;length, _
                                              Buffer, BufferLength);
      DisplayMessageToUser(Buffer);

      BufferLength = 100;
      PtrIMXNamespaceManager-&gt;_getDeclaredPrefix(2, WideCharBuffer, _
                              &amp;BufferLength);
      DisplayMessageToUser(_bstr_t(WideCharBuffer));

      BufferLength = 100;
      PtrIMXNamespaceManager-&gt;_getPrefix(L"urn", 0, WideCharBuffer, _
                                         &amp;BufferLength);
      DisplayMessageToUser(_bstr_t(WideCharBuffer));

      BufferLength = 100;
      hres = PtrIMXNamespaceManager-&gt;_getURI(L"sample", NULL, _
                                             WideCharBuffer, _
                                             &amp;BufferLength);
      DisplayMessageToUser(_bstr_t(WideCharBuffer));
   }
   catch(...)
   {
      DisplayMessageToUser("Error");
   }
}

void DisplayMessageToUser(char *Msg)
{
    ::MessageBox(NULL, Msg, _T("Message"), MB_OK);</PRE>

<H4 class="dtH4">Remarks</H4>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P>Applies to: <A HREF="xml_obj_imxnamespacemanager_10du.htm">IMXNamespaceManager</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
