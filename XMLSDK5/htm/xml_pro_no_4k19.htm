<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Visual Basic Code (enumErrors.frm)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="domexamples_enumerrorsfrm"></A>Visual Basic Code (enumErrors.frm)</H1>

<PRE class="code">   Dim er, e As IXMLDOMParseError2
   Dim errs As IXMLDOMParseErrorCollection
   Dim xd As New DOMDocument50
   Dim xs As New XMLSchemaCache50

   ' Add xs to xd.
   xs.Add "urn:books", App.Path &amp; "\books.xsd"
   Set xd.schemas = xs
   xd.async = False
   xd.validateOnParse = False
   xd.setProperty "MultipleErrorMessages", True
   
   ' Load the XML file to xd.
   xd.Load App.Path &amp; "\books.xml"
   
   ' Validate the XML.
   Set er = xd.Validate
   If er.errorCode &lt;&gt; 0 Then
      Set errs = er.allErrors
      errsCount = errs.length
      msg = "Error as returned from validate():" &amp; vbCrLf _
          &amp; vbCrLf &amp; " Error Code:" &amp; vbCrLf &amp; er.errorCode _
          &amp; vbCrLf &amp; " Error reason:" &amp; vbCrLf &amp; er.reason _
          &amp; vbCrLf &amp; " Error location:" &amp; vbCrLf &amp; er.errorXPath _
          &amp; vbCrLf &amp; " Error Count:" &amp; vbCrLf &amp; errsCount &amp; vbCrLf _
          &amp; vbCrLf &amp; "Error items from the allErrors collection:"
             
      ' Enumerate the error collection, invoking _newEnum implicitly.
      i = 0
<B>      For Each e In errs</B>
        msg = msg &amp; vbCrLf &amp; vbCrLf &amp; "ErrorItem[" &amp; i &amp; "]" _
                  &amp; vbCrLf &amp; "    reason:" &amp; vbCrLf &amp; e.reason _
                  &amp; vbCrLf &amp; "    location:" &amp; vbCrLf &amp; e.errorXPath
        i = i + 1
      <B>Next</B>
   Else
      msg = msg &amp; "DOM is valid:" &amp; vbCrLf &amp; xd.xml &amp; vbCrLf
   End If

   MsgBox msg</PRE>

<P class="labelproc"><B>Try It!</B>

<OL type="1">
	<LI>Copy the XML data (<A HREF="xml_pro_ae_8fc5.htm">books.xml</A>), and paste it into a text file. Save the file as <B>books.xml</B>.</li>

	<LI>Copy the XSD listing (<A HREF="xml_pro_ae_8fc5.htm#domexamples_allerrors_resource_xsd">books.xsd</A>), and paste it into a text file. Save the file as <B>books.xsd</B>, in the same directory where you saved <B>books.xml</B>.</li>

	<LI>Create a Standard EXE project in Visual Basic. Save the empty project as <B>enumErrors.vbp</B> to the same directory where you saved <B>books.xml</B> and <B>books.xsd</B>. Name the form file <B>enumErrors.frm</B>. </li>

	<LI>Create a reference to MSXML 5.0. To do this, select <B>References...</B> from the <B>Project</B> menu, then check the box for <B>Microsoft XML, v50</B>.</li>

	<LI>Copy the Visual Basic code above, and paste it into the <B>form_load</B> subroutine. </li>

	<LI>Execute the code by selecting <B>Start</B> from the <B>Run</B> menu.</li>

	<LI>Verify that your output is the same as that listed in <A HREF="xml_pro_no_9lx0.htm">Output for the enumErrors Example</A>.</li>
</OL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
