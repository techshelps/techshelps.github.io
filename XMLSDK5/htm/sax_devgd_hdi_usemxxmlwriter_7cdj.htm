<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Connecting an MXXMLWriter to a SAXXMLReader</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="sax2_using_mxxmlwriterconnecting"></A>Connecting an MXXMLWriter to a SAXXMLReader</H1>

<P>In many of the applications that you create with the latest version of the Simple API for XML (SAX2), you use both <code class="ce">SAXXMLReader</code>, which reads an XML document and passes events, and <code class="ce">MXXMLWriter</code>, which catches the events and produces output based on the data passed by the events. Before <code class="ce">MXXMLWriter</code> can catch events, however, you must connect it to <code class="ce">SAXXMLReader</code>. <code class="ce">MXXMLWriter</code>, on its own, does not provide the handlers required to catch events thrown by <code class="ce">SAXXMLReader</code>.</P>

<P>To enable <code class="ce">MXXMLWriter</code> to handle events, you must assign the SAX2 handler interfaces to it. These handler interfaces include <code class="ce">IVBSAXContentHandler</code>, <code class="ce">IVBSAXDTDHandler</code>, <code class="ce">IVBSAXDeclHandler</code>, <code class="ce">IVBSAXErrorHandler</code>, and <code class="ce">IVBSAXLexicalHandler</code>. By assigning the SAX2 handler interfaces to your <code class="ce">MXXMLWriter</code> object, you make all the properties and methods of the interfaces available to it. In this way, your <code class="ce">MXXMLWriter</code> object can catch any of the events passed by <code class="ce">SAXXMLReader</code>. The following sections describe how to create <code class="ce">SAXXMLReader</code> and <code class="ce">MXXMLReader</code> objects and how to connect them.</P>

<H2 class="dtH2">Creating the SAXXMLReader and MXXMLWriter Objects</H2>

<P>To create instances of <code class="ce">SAXXMLReader</code> and <code class="ce">MXXMLWriter</code>, use the following syntax. For the sample <code class="ce">MXXMLWriter</code> application, the creation of the <code class="ce">SAXXMLReader</code> and <code class="ce">MXXMLWriter</code> objects is in the Declarations section of the form.</P>

<PRE class="code">Dim rdr As New SAXXMLReader50
Dim wrt As New MXXMLWriter50</PRE>

<H2 class="dtH2">Type Casting MXXMLWriter to Handler Interfaces</H2>

<P>SAX2 provides several handler interfaces that are designed to catch events passed by <code class="ce">SAXXMLReader</code>. You set these handler interfaces as properties of <code class="ce">SAXXMLReader</code>. To make these handler interfaces available to <code class="ce">MXXMLWriter</code>, you type cast <code class="ce">MXXMLWriter</code> to them.</P>

<P>For example, the sample MXXMLWriter application sets the <code class="ce">contentHandler</code> property of the <code class="ce">rdr</code> (<code class="ce">SAXXMLReader</code>) object to the <code class="ce">wrt</code> (<code class="ce">MXXMLWriter</code>) object, as shown in the following code. This registers the <code class="ce">wrt</code> object as the <code class="ce">ContentHandler</code> of the <code class="ce">rdr</code> object. This also sets the <code class="ce">dtdHandler</code> and <code class="ce">errorHandler</code> properties. You must set the <code class="ce">declaration-handler</code> and <code class="ce">lexical-handler</code> properties through the <code class="ce">putProperty</code> method.</P>

<PRE class="code">Private Sub Form_Load()
    Set rdr.contentHandler = wrt
    Set rdr.dtdHandler = wrt
    Set rdr.errorHandler = wrt
    rdr.putProperty "http://xml.org/sax/properties/declaration-handler", _ 
      wrt
    rdr.putProperty "http://xml.org/sax/properties/lexical-handler", wrt
End Sub</PRE>

<H2 class="dtH2">Setting the Output Destination</H2>

<P>In the sample <code class="ce">MXXMLWriter</code> application, clicking the <B>Try File</B> button clears both the text box and the output buffer (<code class="ce">wrt.output</code>). Then, the application calls the <code class="ce">parse.URL</code> method of <code class="ce">SAXXMLReader</code> and passes the name of the file in the <code class="ce">TextFileName</code> text box (as shown in bold in the following code sample). At this point, <code class="ce">SAXXMLReader</code> fires a series of events to pass the data in the XML document to the <code class="ce">wrt</code> object, which stores this data in the output buffer. By default, the output is a string value that, in this case, is set to the <code class="ce">textResult.text</code> box (as shown in bold in the following code sample). The output destination can also be set as an <code class="ce">IStream</code>.</P>

<PRE class="code">Private Sub CommandTryFile_Click()
    ' Set parameters, clean the scene.
    TextSource.Text = ""
    wrt.output = ""
    wrt.omitXMLDeclaration = True
    On Error GoTo uhoh
    rdr.parseURL <B>TextFileName.Text</B>
    <B>TextResult.Text</B> = wrt.output
    Exit Sub
uhoh:
    TextResult.Text = "Error: " &amp; Err.LastDllError &amp; " -- " &amp; _
      Err.Description &amp; vbCrLf &amp; "Check if file exists in the _
      correct place"
End Sub</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_devgd_hdi_usemxxmlwriter_1t5z.htm">Configuring MXXMLWriter Output</A> | <A HREF="sax_isaxxmlreader_6nmt.htm">ISAXXMLReader Interface</A> | <A HREF="sax_imxwriter_9f39.htm">IMXWriter Interface</A> | <A HREF="sax_contenthandler_7nad.htm">ISAXContentHandler Interface</A> | <A HREF="sax_declhandler_24v9.htm">ISAXDeclHandler Interface</A> | <A HREF="sax_dtdhandler_3qjp.htm">ISAXDTDHandler Interface</A> | <A HREF="sax_isaxerrorhandler_2syt.htm">ISAXErrorHandler Interface</A> | <A HREF="sax_isaxlexicalhandler_86xx.htm">ISAXLexicalHandler Interface</A> | <A HREF="sax_imxwriter_8ant.htm">output Property</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
