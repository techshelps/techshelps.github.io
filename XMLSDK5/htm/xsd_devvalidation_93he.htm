<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Validate an XML Document Against an XML Schema Using Visual Basic</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconvalidatingagainstxsdusingvb"></A>Validate an XML Document Against an XML Schema Using Visual Basic</H1>

<P>You can use Visual Basic to validate an XML document against an XML Schema definition language (XSD) schema. To validate a document, add the schema to the <B>XMLSchemaCache</B> object, set the <B>schemas</B> property of a <B>DOMDocument</B> object to reference the schema in the <B>XMLSchemaCache</B> object, and then load the XML file you want to validate into the <B>DOMDocument</B> object. Validation is performed when the document is loaded into the <B>DOMDocument</B> object. Validation errors are handled using the <B>parseError</B> property of the <B>DOMDocument</B> object. This topic provides a quick example of how to validate a document against a schema and consists of the following.

<DL>
<DT><B>books.xsd</B></DT>

<DD>The XML Schema that is used to validate the books.xml file.</dd>

<DT><B>books.xml</B></DT>

<DD>The file that is loaded and validated against the books.xsd schema.</dd>

<DT><B>Microsoft Visual Basic validation code</B></DT>

<DD>Creates an <B>XMLSchemaCache</B> object, adds the schema to it, and sets the <B>schemas</B> property of the <B>DOMDocument</B> object to reference the schema in the <B>XMLSchemaCache</B> object. In addition, the code loads the document into the <B>DOMDocument</B> object and returns any validation errors that occur.</dd>
</DL>

<P class="labelproc"><B>To get started</B>

<OL type="1">
	<LI>Open Visual Basic 6.0, and in the <B>New Project</B> dialog box, double-click <B>Standard EXE</B>.</li>

	<LI>On the <B>Project</B> menu, click <B>References</B>.</li>

	<LI>In the <B>Available References</B> list, select <B>Microsoft XML,v5.0</B>, and then click <B>OK</B>.</li>

	<LI>Add a Command button to Form1. </li>

	<LI>Save the project to a folder on your hard drive.</li>
</OL>

<H2 class="dtH2">The XML Document (books.xml)</H2>

<P>The books.xml file used in this example, shown below, is a modified version of the books.xml file used throughout the MSXML SDK. Notice that "urn:books" is declared as the default namespace for this document.</P>

<P>If you want to run the example in this topic, copy the following code to a text editor, such as Notepad, and then save the file as books.xml.</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;x:catalog xmlns:x="urn:books"&gt;
   &lt;book id="bk101"&gt;
      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
      &lt;title&gt;XML Developer's Guide&lt;/title&gt;
      &lt;genre&gt;Computer&lt;/genre&gt;
      &lt;price&gt;44.95&lt;/price&gt;
      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
      &lt;description&gt;An in-depth look at creating applications with
      XML.&lt;/description&gt;
   &lt;/book&gt;
&lt;/x:catalog&gt;</PRE>

<H2 class="dtH2">The XML Schema (books.xsd)</H2>

<P>The following document shows the books.xsd schema used in this example.</P>

<P>If you want to run the example in this topic, copy the following code to a text editor, such as Notepad, and then save the file as books.xsd.</P>

<PRE class="code">&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
            targetNamespace="urn:books"
            xmlns:b="urn:books"&gt;
  &lt;xs:element name="catalog" type="b:CatalogData"/&gt;

  &lt;xs:complexType name="CatalogData"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="book" type="b:bookdata" minOccurs="0" 
      maxOccurs="unbounded"/&gt;
      &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="bookdata"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="author" type="xs:string"/&gt;
      &lt;xs:element name="title" type="xs:string"/&gt;
      &lt;xs:element name="genre" type="xs:string"/&gt;
      &lt;xs:element name="price" type="xs:float"/&gt;
      &lt;xs:element name="publish_date" type="xs:date"/&gt;
      &lt;xs:element name="description" type="xs:string"/&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name="id" type="xs:string"/&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;</PRE>

<H2 class="dtH2">Visual Basic Validation Code</H2>

<P>The following code snippet shows how you can perform validation on the books.xml document. This code creates an <B>XMLSchemaCache50</B> object, adds the namespace URI declaration ("urn:books") and the schema (books.xsd) to the object, and then references the schema using the <B>schemas</B> property of the <B>DOMDocument</B> object. Validation is performed when the books.xml file is loaded into the <B>DOMDocument</B> object. Validation errors are returned using the <B>parseError</B> property of the <B>DOMDocument</B> object.</P>

<P class="labelproc"><B>To run the example</B>

<OL type="1">
	<LI>Copy the code shown below to the Command1_Click procedure.
<PRE class="code">Private Sub Command1_Click()

  'Create a schema cache and add books.xsd to it.
  Dim xmlschema As MSXML2.XMLSchemaCache50
  Set xmlschema = New MSXML2.XMLSchemaCache50
  xmlschema.Add "urn:books", App.Path &amp; "\books.xsd"

  'Create an XML DOMDocument object.
  Dim xmldom As MSXML2.DOMDocument50
  Set xmldom = New MSXML2.DOMDocument50

  'Assign the schema cache to the DOM document.
  'schemas collection.
  Set xmldom.schemas = xmlschema

  'Load books.xml as the DOM document.
  xmldom.async = False
  xmldom.Load App.Path &amp; "\books.xml"

  'Return validation results in message to the user.
  If xmldom.parseError.errorCode &lt;&gt; 0 Then
     MsgBox xmldom.parseError.errorCode &amp; " " &amp; _
     xmldom.parseError.reason
  Else
     MsgBox "No Error"
  End If

End Sub</PRE>
</li>

	<LI>On the Visual Basic toolbar, click <B>Start</B>, and then click the <B>Command1</B> button on form1.
<P>When you run the example, it returns a "No Errors" message box.
</li>
</OL>

<H2 class="dtH2">Testing the Validation Code</H2>

<P>To generate an error message for the validation code, change the books.xml document so the <B>title</B> element appears directly after the <B>catalog</B> element, as shown in bold in the following example. This makes the document invalid according to the books.xsd schema. Save the books.xml file and then run the Visual Basic code. The code returns the following error message:</P>

<P>"1072898028 Element content is invalid according to DTD/Schema. Expecting: book."</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;x:catalog xmlns:x="urn:books"&gt;
 <code><b class="cfe">&lt;title&gt;2000-10-01&lt;/title&gt;</b></code>
   &lt;book id="bk101"&gt;
      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
      &lt;title&gt;XML Developer's Guide&lt;/title&gt;
      &lt;genre&gt;Computer&lt;/genre&gt;
      &lt;price&gt;44.95&lt;/price&gt;
      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
      &lt;description&gt;An in-depth look at creating applications with 
      XML.&lt;/description&gt;
   &lt;/book&gt;
&lt;/x:catalog&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_ref_01mb.htm">XML Schema Examples</A> | <A HREF="xsd_ref_0o4w.htm">XML Schema Element Map</A> | <A HREF="xsd_ref_1yer.htm">XML Schema Elements</A> | <A HREF="xsd_ref_5bc5.htm">XML Data Types Reference</A> | <A HREF="xsd_ref_6ldf.htm">Primitive XML Data Types</A> | <A HREF="xsd_ref_6z03.htm">Derived XML Data Types</A> | <A HREF="xsd_ref_9rar.htm">Data Type Facets</A> | <A HREF="xml_obj_ixmldomschemacollection_11ke.htm">IXMLDOMSchemaCollection/XMLSchemaCache</A></P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=4871">World Wide Web Consortium (W3C) XML Schema Part 2: Datatypes</A> | <A HREF="http://go.microsoft.com/fwlink/?LinkId=4872">World Wide Web Consortium (W3C) XML Schema Part 1: Structures</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
