<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Output</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="dom_hdi_cpp_refcount_output"></A>Output</H1>

<P>When you build and run the <B>refCount</B> project, you should get the following output in a console window: </P>

<PRE class="code">dm1:  refCount(pDom ++) = 1
dm2:  refCount(pRoot ++) = 1
dm3:  refCount(pElem ++) = 1
dm4:  refCount(pElemOut ++) = 2
dm5:  refCount(pElemA ++) = 3
dm6:  refCount(pElem --) = 2
dm7:  refCount(pElemOut --) = 1
dm8:  refCount(pElemA   ) = 1
dm9:  refCount(pElem ++) = 1
dm10:  refCount(pElemOut ++) = 2
dm11:  refCount(pElemA --) = 0
dm12:  refCount(pElem --) = 1
dm13:  refCount(pElemOut --) = 0
dm14:  refCount(pElem ++) = 1
dm15:  refCount(pElemOut ++) = 2
dm16:  refCount(pElem --) = 1
dm17:  refCount(pElemOut --) = 0
dm18:  refCount(pElemOut ++) = 2
dm19:  refCount(pElemOut --) = 1

pDom-&gt;xml:

&lt;root&gt;&lt;A&gt;&lt;a&gt;11&lt;/a&gt;&lt;/A&gt;&lt;B&gt;2&lt;/B&gt;&lt;/root&gt;

dm20:  refCount(pDom  --) = 0
dm21:  refCount(pRoot --) = 0</PRE>

<H4 class="dtH4">Remarks</H4>

<P>The following remarks explain  the various reference counts  shown above. However, because reference counting is implementation-dependent, these discussions might or might not apply to other objects.

<DL>
<DT><B>Messages dm1: - dm3:</B></DT>

<DD>Show three newly created objects: <code class="ce">pDom</code>, which corresponds to the document element; <code class="ce">pRoot</code>, which corresponds to the <code class="ce">&lt;root&gt;</code> element; and <code class="ce">pElem</code>, which corresponds to the <code class="ce">&lt;A&gt;</code> element. Because these objects are new and distinct, the reference count equals 1 on each interface pointer. </dd>

<DT><B>Message dm4:</B></DT>

<DD>Shows the reference count of <code class="ce">pElemOut</code> as returned from the call to <code class="ce">pRoot-&gt;appendChild</code> method. Because <code class="ce">pElemOut</code> is another reference to the <code class="ce">pElem</code> object, when the call succeeds its reference count is 1 plus the count on <code class="ce">pElem</code>&#0151;that is, 2.</dd>

<DT><B>Message dm5:</B></DT>

<DD>Shows the reference count of <code class="ce">pElemA</code>, which is a copy of <code class="ce">pElemOut</code>; <code class="ce">pElemA</code> is used to hold the <code class="ce">&lt;A&gt;</code> element, so that <code class="ce">pElem</code> and <code class="ce">pElemOut</code> can be recycled to represent other elements. So far, <code class="ce">pElem</code>, <code class="ce">pElemOut</code>, and <code class="ce">pElemA</code> all point to the same object. Therefore, the reference count on <code class="ce">pElemA</code> is 3. </dd>

<DT><B>Messages dm6: - dm8:</B></DT>

<DD>Show the reference counts on <code class="ce">pElem</code>, <code class="ce">pElemOut</code>, and <code class="ce">pElemA</code> after  the <code class="ce">Release</code> method has been called on <code class="ce">pElem</code> and <code class="ce">pElemOut</code>. These two interface pointers need to be released, because they will be used to add another element, <code class="ce">&lt;a&gt;</code>, to the XML document. Remember that at this point in the code all three interface pointers still reference the same object. This means that the reference counts on them are correlated with each other. Failure to release <code class="ce">pElem</code> or <code class="ce">pElemOut</code> here will result in a memory leak. </dd>

<DT><B>Messages dm9:</B></DT>

<DD>Shows the reference count on the <code class="ce">pElem</code> interface pointer, which points to a newly created <code class="ce">IXMLDOMNode</code> object. This object, which represents the <code class="ce">&lt;a&gt;</code> element, is to be added as a child of <code class="ce">&lt;A&gt;</code>. Because this is a newly created object, the reference count on this interface pointer is 1.</dd>

<DT><B>Message dm10:</B> </DT>

<DD>Shows the reference count of <code class="ce">pElemOut</code> as returned from the call to <code class="ce">pElemA-&gt;appendChild</code> method. This element is another reference to the <code class="ce">pElem</code> object, <code class="ce">&lt;a&gt;</code>. Therefore, when the call succeeds, its reference count is 1 plus the reference count on <code class="ce">pElem</code>&#0151;that is, 2.</dd>

<DT><B>Messages dm11: - dm13: </B></DT>

<DD>Show the reference counts on <code class="ce">pElemA</code>, <code class="ce">pElem</code>, and <code class="ce">pElemOut</code> after the <code class="ce">Release</code> method was called on each of the interface pointers. The system has released <code class="ce">pElemA</code> because we are done with <code class="ce">&lt;A&gt;</code>; when the reference count on <code class="ce">pElemA</code> reaches zero, the system frees the memory object pointed to by the <code class="ce">pElemA</code> interface pointer. Any attempt to access this object will result in access violation. The other two interface pointers are released because we are ready to move on to the next element, <code class="ce">&lt;B&gt;</code>. Failing to release <code class="ce">pElem</code> and <code class="ce">pElemOut</code> here would result in a memory leak.</dd>

<DT><B>Messages dm14:</B> </DT>

<DD>Shows the reference count on the <code class="ce">pElem</code> interface pointer, which points to a newly created <code class="ce">IXMLDOMNode</code> object, <code class="ce">&lt;B&gt;</code>. This object is to be added as a child of <code class="ce">&lt;root&gt;</code>. Because <code class="ce">pElem</code> is not a copy of another interface pointer, the reference count is 1.</dd>

<DT><B>Message dm15:</B> </DT>

<DD>Shows the reference count of <code class="ce">pElemOut</code> as returned from the call to <code class="ce">pRoot-&gt;appendChild</code> method. This element is another reference to the <code class="ce">pElem</code> object, <code class="ce">&lt;B&gt;</code>. Therefore, when the call succeeds, its reference count is 1 plus the reference count on <code class="ce">pElem</code>&#0151;that is, 2.</dd>

<DT><B>Messages dm16: - dm17:</B> </DT>

<DD>Show the reference counts on <code class="ce">pElem</code> and <code class="ce">pElemOut</code> after the <code class="ce">Release</code> method was called on each of the interface pointers. These two interface pointers are released because we are done with <code class="ce">&lt;B&gt;</code>. Failing to release <code class="ce">pElemOut</code> here would result in memory leak.</dd>

<DT><B>Message dm18:</B> </DT>

<DD>Shows the reference count of <code class="ce">pElemOut</code> as returned from the call to <code class="ce">pDom-&gt;appendChild</code> method. This element is another reference to the <code class="ce">pRoot</code> object, <code class="ce">&lt;root&gt;</code>. Therefore, when the call succeeds, its reference count is 1 plus the reference count on <code class="ce">pRoot</code>&#0151;that is, 2.</dd>

<DT><B>Messages dm19: - dm21:</B> </DT>

<DD>Show the reference counts on <code class="ce">pElemOut</code>, <code class="ce">pDom</code>, and <code class="ce">pRoot</code> after the <code class="ce">Release</code> method has been called on each of the interface pointers. These interface pointers are released because they are no longer needed. All the memory objects allocated in this application are freed when the application ends.</dd>
</DL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
