<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IXMLDOMNamedNodeMap</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmobjxmldomnamednodemap"></A>IXMLDOMNamedNodeMap</H1>

<P>Adds support for namespaces and iteration through the collection of attribute nodes.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Example</H4>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var nodeBook, namedNodeMap;
xmlDoc.async = false;
xmlDoc.setProperty("SelectionLanguage", "XPath");
xmlDoc.load("books.xml");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;nodeBook = xmlDoc.selectSingleNode("//book");
&nbsp;&nbsp;&nbsp;namedNodeMap = nodeBook.attributes;
&nbsp;&nbsp;&nbsp;alert(namedNodeMap.length);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Example</H4>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim nodeBook As IXMLDOMNode
Dim namedNodeMap As IXMLDOMNamedNodeMap
xmlDoc.async = False
xmlDoc.setProperty "SelectionLanguage", "XPath"
xmlDoc.Load "books.xml"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set nodeBook = xmlDoc.selectSingleNode("//book")
&nbsp;&nbsp;&nbsp;Set namedNodeMap = nodeBook.Attributes
&nbsp;&nbsp;&nbsp;MsgBox namedNodeMap.length
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Example</H4>

<P>The following C/C++ example creates and appends a new attribute to the root document element.</P>

<PRE class="code">#import "msxml5.dll"
using namespace MSXML2;

inline void TESTHR( HRESULT _hr ) 
   { if FAILED(_hr) throw(_hr); }

void XMLDOMNamedNodeMap()
{
   try {
      IXMLDOMDocumentPtr docPtr;
      IXMLDOMNodePtr DOMNodePtr;
      IXMLDOMNamedNodeMapPtr DOMNamedNodeMapPtr;

      //init
      TESTHR(CoInitialize(NULL)); 
      TESTHR(docPtr.CreateInstance("Msxml2.DOMDocument.5.0"));
      
      VARIANT vtTemp;

      vtTemp.vt=VT_I2;
      vtTemp.iVal = MSXML2::NODE_ATTRIBUTE;

      // load a document
      _variant_t varXml("C:\\book.xml");
      _variant_t varOut((bool)TRUE);
      varOut = docPtr-&gt;load(varXml);
      if ((bool)varOut == FALSE)
         throw(0);
      
      DOMNodePtr = docPtr-&gt;createNode(vtTemp, "Sci-Fi", "");
      DOMNamedNodeMapPtr = docPtr-&gt;documentElement-&gt;attributes;
      DOMNamedNodeMapPtr-&gt;setNamedItem(DOMNodePtr);

      MessageBox(NULL, _bstr_t(docPtr-&gt;xml), _T("New Document"), MB_OK);

   } catch(...)
   {
      MessageBox(NULL, _T("Exception occurred"), _T("Error"), MB_OK);
   }
   CoUninitialize();
}</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P><code class="ce">IXMLDOMNamedNodeMap</code> is a node collection that allows access by name as well as by index. This collection is typically used for attributes.</P>

<P>The World Wide Web Consortium (W3C) Document Object Model (DOM) definition does not require <code class="ce">NamedNodeMap</code> objects to be maintained in any particular order. Objects contained in a <code class="ce">NamedNodeMap</code> can also be accessed by an ordinal index, but this is simply to allow convenient enumeration and does not imply that the DOM specifies an order for these nodes. DOM implementations are not required to preserve the node order.</P>

<P>The Microsoft&reg; implementation preserves the attributes in the order in which they appear in the source. Additional attributes are added to the end of the list. A namespace<code class="ce"> </code>attribute, <code class="ce">xmlns</code>, is inserted as the first in the list if the tag name requires the namespace, or immediately before the attribute that uses an undeclared namespace.</P>

<P>Like the node list, however, a named node map collection is live; that is, the addition and removal of nodes, and changes within nodes, are immediately reflected in the collection. This means that two successive requests for items using the same index can return two different items, depending on changes to the collection. This also means that changes to the node objects are immediately available in the nodes obtained from the list.</P>

<P>When a default value is specified in the schema for an attribute and that attribute is removed, it is automatically regenerated with the default value, as specified in the W3C standard. The attribute reappears immediately because the collection is live, with a corresponding change to the count of items in the collection. When removing an attribute with such a default setting, you must again retrieve the number of items in the collection to obtain an accurate count. You should also reset any index into the collection.</P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 2.0 and later</P>

<H4 class="dtH4">Requirements</H4>

<P><B>Implementation:</B> msxml5.dll, msxml2.lib</P>
<div class=filtered><span class="lang">[C/C++]</span>

<P><B>Header and IDL files:</B> msxml2.h, msxml2.idl</P>
</div><!-- [C/C++] -->

<P><B>Version-Dependent ProgID:</B> Msxml2.DOMDocument.5.0, Msxml2.FreeThreadedDOMDocument.5.0</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_obj_ixmldomnamednodemap_9ei8.htm">IXMLDOMNamedNodeMap Members</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
