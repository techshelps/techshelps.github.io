<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Smart Pointer Classes and DOM Methods with an [out, retval] Parameter</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="dom_hdi_cpp_outretval"></A>Smart Pointer Classes and DOM Methods with an [out, retval] Parameter</H1>

<P>When a method has an [out, retval] parameter, the syntax is different depending on whether you use smart pointer class wrappers or the raw interface method. We use the <code class="ce">load</code> method as an example.</P>

<P class="label"><B>Raw Interface Syntax</B></P>

<PRE class="syntax">HRESULT load(
   [in] VARIANT xmlSource,
   [out, retval] VARIANT_BOOL *isSuccessful
);</PRE>

<P>For example,</P>

<PRE class="code">hr = pXMLDom-&gt;load("myData.xml", &amp;vbStatus);</PRE>

<P>where <code class="ce">hr</code>, <code class="ce">pXMLDom</code>, and <code class="ce">vbStatus</code> are of the <code class="ce">HRESULT</code>, <code class="ce">IXMLDOMDocument</code>*, and <code class="ce">VARIANT_BOOL</code> types, respectively.</P>

<P class="label"><B>Smart Pointer Class Wrapper Syntax</B></P>

<PRE class="syntax">VARIANT_BOOL load(
   [in] VARIANT xmlSource
);</PRE>

<P>For example,</P>

<PRE class="code">vbStatus = pXMLDom-&gt;load("myData.xml");</PRE>

<P>Notice that the DOM method call using smart pointer classes is similar to that in script or Visual Basic. </P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
