<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Grouping Data by Examining the Keyed Node-set</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcongroupingdatabyexaminingthekeyednodeset"></A>Grouping Data by Examining the Keyed Node-set</H1>

<P>By definition, a node-set cannot contain a given node more than once. Look at the following portion of the <code class="ce">&lt;catalog&gt;</code> element's template rule, the <code class="ce">grp_categ</code> mode, for grouping the books by genre. See if you can tell what the references to the <code class="ce">categ_key </code>key are doing.</P>

<PRE class="code">&lt;xsl:template match="catalog" mode="grp_categ"&gt;
    &lt;h2&gt;Titles Grouped by Genre&lt;/h2&gt;
    &lt;xsl:for-each select="book[count(. | <B>key('categ_key', genre)</B>[1])=1]"&gt;
        &lt;h3&gt;&lt;xsl:value-of select="genre" /&gt;&lt;/h3&gt;
        &lt;xsl:for-each select="<B>key('categ_key', genre)</B>"&gt;
            &lt;xsl:sort select="title"/&gt;
...
        &lt;/xsl:for-each&gt;
    &lt;/xsl:for-each&gt;
&lt;/xsl:template&gt;</PRE>

<P>The predicate portion of the outer <code class="ce">&lt;xsl:for-each&gt;</code> element's <code class="ce">select</code> attribute looks rather complex, but it essentially consists of two separate conditions joined by the XPath union operator, a pipe or vertical-bar symbol (<code class="ce">|</code>). So <code class="ce">select="book[count(. | key('categ_key', genre)[1])=1]"</code> translates as selecting the current <code class="ce">&lt;book&gt;</code> element if it is also the first item in the "genre" category as returned by the <code class="ce">key('categ_key', genre)[1]</code> function </P>

<P>The union operator <code class="ce">|</code> returns a node-set joined by the selected <code class="ce">&lt;book&gt; </code>element and the first item of the "genre" category. If the size of this node-set is one (1), the selected &lt;book&gt; is the first item in the "genre" category and the template rule instantiates a level-3 heading in the result tree, displaying the name of the book's category. Otherwise, the selection is bypassed.</P>

<P>The second reference to the <code class="ce">key()</code> function is where the actual grouping occurs, within the category established by the outer <code class="ce">&lt;xsl:for-each&gt;</code>. It says, within each of the node-sets established by the <code class="ce">categ_key</code> key, to list the titles and so on of all books in the group.</P>

<H4 class="dtH4">Example</H4>

<P class="label"><B>XML File (books.xml)</B></P>

<P>Use the <A HREF="sdk_booksxml_30rw.htm">Sample XML File (books.xml)</A>. Below the line <code class="ce">&lt;?xml version='1.0'?&gt;</code>, add the following line:</P>

<PRE class="code">&lt;?xml-stylesheet type="text/xsl" href="lib_cat2.xsl"?&gt;</PRE>

<P class="label"><B>XSLT File (lib_cat2.xsl)</B></P>

<P>This file uses the <code class="ce">&lt;genre&gt;</code> element as the category for sorting.</P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:key name="categ_key" match="book" use="genre"/&gt;
&lt;xsl:key name="author_key" match="book" use="author"/&gt;

&lt;xsl:template match="/"&gt;
    &lt;HTML&gt;
        &lt;HEAD&gt;
            &lt;TITLE&gt;Scootney Publishing: Special Exhibit&lt;/TITLE&gt;
            &lt;STYLE&gt;
                h1 {font-family: Arial,Helvetica,Univers,sans-serif;
                    font-size: 18pt; font-weight: bold;
                    background-color: teal;
                    width: 75%}
                h2 {font-family: Arial,Helvetica,Univers,sans-serif;
                    font-size: 14pt; font-weight: bold;
                    background-color: white;
                    width: 75%}
                h3 {font-family: Arial,Helvetica,Univers,sans-serif;
                    font-size: 12pt; font-weight: bold;
                    background-color: gold;
                    width: 75%;
                    border-width: 1;
                    border-style: solid}
            &lt;/STYLE&gt;
        &lt;/HEAD&gt;
        &lt;BODY&gt;
            &lt;h1&gt;Scootney Publishing: Special Exhibit Catalog&lt;/h1&gt;
            &lt;xsl:apply-templates select="catalog" mode="grp_categ"/&gt;
            &lt;xsl:apply-templates select="catalog" mode="grp_author"/&gt;
        &lt;/BODY&gt;
    &lt;/HTML&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="catalog" mode="grp_categ"&gt;
    &lt;h2&gt;Titles Grouped by Genre&lt;/h2&gt;
    &lt;xsl:for-each select="book[count(. | key('categ_key', genre)[1])=1]"&gt;
        &lt;h3&gt;&lt;xsl:value-of select="genre" /&gt;&lt;/h3&gt;
        &lt;xsl:for-each select="key('categ_key', genre)"&gt;
            &lt;xsl:sort select="title"/&gt;
            &lt;TABLE border="0" width="75%"&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right"&gt;Title&lt;/th&gt;
                    &lt;td width="90%" align="left"&gt;&lt;xsl:value-of select="title" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right"&gt;Author&lt;/th&gt;
                    &lt;td width="90%" align="left"&gt;&lt;xsl:value-of select="author" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right"&gt;Copyright&lt;/th&gt;
                    &lt;td width="90%" align="left"&gt;&lt;xsl:value-of select="publish_date" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right"&gt;Price&lt;/th&gt;
                    &lt;td width="90%" align="left"&gt;&lt;xsl:value-of select="price" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right" valign="top"&gt;Summary&lt;/th&gt;
                    &lt;td width="90%" align="left" valign="top"&gt;&lt;xsl:value-of select="description" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
            &lt;/TABLE&gt;
            &lt;hr width="75%" align="left"/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:for-each&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="catalog" mode="grp_author"&gt;
    &lt;h2&gt;Titles Grouped by Author&lt;/h2&gt;
    &lt;xsl:for-each select="book[generate-id() = generate-id(key('author_key', author)[1])]"&gt;
        &lt;xsl:sort select="author"/&gt;
        &lt;h3&gt;&lt;xsl:value-of select="author" /&gt;&lt;/h3&gt;
        &lt;xsl:for-each select="key('author_key', author)"&gt;
            &lt;xsl:sort select="title"/&gt;
            &lt;TABLE border="0" width="75%"&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right"&gt;Title&lt;/th&gt;
                    &lt;td width="90%" align="left"&gt;&lt;xsl:value-of select="title" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right"&gt;Genre&lt;/th&gt;
                    &lt;td width="90%" align="left"&gt;&lt;xsl:value-of select="genre" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right"&gt;Copyright&lt;/th&gt;
                    &lt;td width="90%" align="left"&gt;&lt;xsl:value-of select="publish_date" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right"&gt;Price&lt;/th&gt;
                    &lt;td width="90%" align="left"&gt;&lt;xsl:value-of select="price" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;th width="10%" align="right" valign="top"&gt;Summary&lt;/th&gt;
                    &lt;td width="90%" align="left" valign="top"&gt;&lt;xsl:value-of select="description" /&gt;&lt;/td&gt;
                &lt;/tr&gt;
            &lt;/TABLE&gt;
            &lt;hr width="75%" align="left"/&gt;
        &lt;/xsl:for-each&gt;
    &lt;/xsl:for-each&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P>A portion of the output is shown here.</P>

<P class="fig"><IMG SRC="xsltlibcat1.gif" ALT="" BORDER=0></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
