<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>createKeyFromNode Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - Digital Signatures</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmth_createkeyfromnode"></A>createKeyFromNode Method</H1>
<font face="verdana" color=red>[This feature was first implemented for MSXML 5.0.]</font>
<P>Generates a key object from the DOM node corresponding to the <code class="ce">&lt;ds:KeyInfo&gt;</code> and one of its descendant elements. The <code class="ce">createKeyFromNode</code> method is used to acquire the public key for signature verification.</P>
<div class=filtered><span class="lang">[JScript]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">var objKey = objXMLDigitalSignature.createKeyFromNode(node);</PRE>
</div><!-- [JScript] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">Set objKey = objXMLDigitalSignature.createKeyFromNode(node)</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax Using Smart Pointers</H4>

<PRE class="syntax">IXMLDSigKeyPtr objKey=IXMLDigitalSignature-&gt;createKeyFromNode(node);</PRE>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT createKeyFromNode (
    IXMLDOMNode* node,
    IXMLDSigKey** objKey);</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>node</I> [in]</DT>

<DD>An XML DOM node corresponding to a child element of the <code class="ce">&lt;ds:KeyInfo&gt;</code> element. For more information, see the <B>Remarks</B> section below. </dd>

<DT><I>objKey</I> [out]</DT>

<DD>In C/C++, this is a reference to the resultant key object implementing the <code class="ce">IXMLDSigKey</code> interface. In Visual Basic, scripting languages, and C/C++ with smart pointers, this is the key object itself. </dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<P>This methods returns the standard CryptoAPI return values, including the following:

<DL>
<DT>S_OK</DT>

<DD>The key object was created successfully.</dd>

<DT>E_FAIL</DT>

<DD>The key object could not be created. Possible reasons include that the <code class="ce">&lt;ds:KeyInfo&gt;</code> node contained insufficient information, or the caller was not authorized.</dd>

<DT>E_ACCESSDENIED</DT>

<DD>The key object could not be created because the user does not have access to the security item.</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<P>The actions performed by <code class="ce">createKeyFromNode</code> during key generation depend on the input node. This method can use any of the following types of nodes to create the key.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=30%>Input node</TH>
<TH width=70%>Actions performed </TH>
</TR>

<TR VALIGN="top">
<TD width=30%><code class="ce">&lt;ds:KeyValue&gt;</code></TD>
<TD width=70%>Searches for the <code class="ce">&lt;ds:DSAKeyValue&gt;</code> or <code class="ce">&lt;ds:RSAKeyValue&gt;</code> node.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><code class="ce">&lt;ds:DSAKeyValue&gt;</code></TD>
<TD width=70%>Loads the DSA key.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><code class="ce">&lt;ds:RSAKeyValue&gt;</code></TD>
<TD width=70%>Loads the RSA key.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><code class="ce">&lt;ds:X509Data&gt;</code></TD>
<TD width=70%>Searches for the <code class="ce">&lt;ds:X509Certificate&gt;</code> node.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><code class="ce">&lt;ds:X509Certificate&gt;</code></TD>
<TD width=70%>Loads the X509 certificate, extracts the embedded key, and loads it into the calling application.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><code class="ce">&lt;ds:RetrievalMethod&gt;</code></TD>
<TD width=70%>Obtains additional key information based, on the URI and the transformation specified.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>The resultant key object does not contain any certificate information. Calling <code class="ce">IXMLDSigKey::getStore</code> or <code class="ce">IXMLDSigKeyEx::getStoreHandle</code> on this key object will result in NULL. </P>

<P>An error occurs when the input node is a <code class="ce">&lt;ds:KeyInfo&gt;</code> element containing any X509 certificates, either explicitly (by way of <code class="ce">&lt;ds:X509Certificate&gt;)</code>, or implicitly (by way of <code class="ce">&lt;ds:RetrievalMethod&gt;</code>). In this case, calling <code class="ce">IXMLDSigKey::getStore</code> or <code class="ce">IXMLDSigKeyEx::getStoreHandle</code> on the resultant key object will return an <code class="ce">IStore</code> object or a memory store object containing the certificates.</P>

<H4 class="dtH4">Example</H4>

<P>This example illustrates how to verify a signature on signed data. The example uses the <code class="ce">createKeyFromNode</code> method to obtain the signature. We've provided source files for the sample in three languages: JScript, Visual Basic, and C++. The output is the same in each language. 

<UL type="disc">
	<LI><A HREF="dsig_ref_3t7p.htm">Resource File (signature.dsa.xml)</A></li>

	<LI><A HREF="dsig_ref_9skz.htm">JScript Code (KeyFromNode.js)</A></li>

	<LI><A HREF="dsig_ref_6god.htm">Visual Basic Code (KeyFromNode.frm)</A></li>

	<LI><A HREF="dsig_ref_673k.htm">C/C++ Code (KeyFromNode.cpp)</A></li>

	<LI><A HREF="dsig_ref_8oc4.htm">Output for the KeyFromNode Example</A></li>
</UL>

<H4 class="dtH4">Applies To</H4>

<P><A HREF="dsig_ref_499h.htm">IXMLDigitalSignature</A> | <A HREF="dsig_ref_82t4.htm">IXMLDigitalSignatureEx</A></P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 5.0 and later</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="dsig_ref2_61o9.htm">verify Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
