<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>attribute</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xsdrefattributeelement"></A>attribute</H1>

<P>Declares an attribute.</P>

<PRE class="syntax">&lt;attribute
  default = string
  fixed = string
  form = (qualified | unqualified) 
  id = ID
  name = NCName
  ref = QName
  type = QName
  use = (optional | prohibited | required): optional
  {any attributes with non-schema Namespace…}&gt;
Content: (annotation?, (simpleType?))
&lt;/attribute&gt;</PRE>

<H4 class="dtH4">Attributes</H4>

<DL>
<DT><B>default</B></DT>

<DD>Attribute has a default value. If the attribute is not specified in an instance within an XML document, the attribute has the value given. If the attribute is not present in the instance document, then the attribute should appear in the post-schema-validation infoset. Processors of the schema should act as if the attribute was specified with the default value if it was not actually in the instance document. <B>Default</B> and <B>fixed</B> attributes cannot both be present. 

<P>Optional.
</dd>

<DT><B>fixed</B></DT>

<DD>Attribute has a fixed value. If the attribute is present in an instance document, its value must be equal to the fixed value given. If it is not present, then the attribute receives the supplied value. <B>Default</B> and <B>fixed</B> attributes cannot both be present.

<P>Optional.
</dd>

<DT><B>form</B></DT>

<DD>The form for the attribute. The default value is the value of the <B>attributeFormDefault</B> attribute of the <B>schema</B> element containing the attribute. The value must be one of the following strings: "qualified" or "unqualified".

<P>If the value is unqualified, this attribute is not required to be qualified with the namespace prefix and is matched against the no-colon-name (NCName) of the attribute (local name).


<P>If the value is qualified, this attribute must be qualified by combining the <B>targetNamespace</B> of the schema and the NCName of the attribute. 


<P>Optional.
</dd>

<DT><B>id</B></DT>

<DD>The ID of this element. The <B>id</B> value must be of type ID and be unique within the document containing this element.

<P>Optional.
</dd>

<DT><B>name</B></DT>

<DD>The name of the attribute. The name must be an NCName as defined in the XML Namespaces specification. Required if the containing element is the <B>schema</B> element. <B>Name</B> and <B>ref</B> attributes cannot both be present.

<P>When an XML document is validated against a schema, each attribute in the document is validated against an <B>attribute</B> element in the schema.


<P>Optional.
</dd>

<DT><B>ref</B></DT>

<DD>The name of an attribute declared in this schema (or another schema indicated by the specified namespace). The <B>ref</B> value must be a qualified name (QName). The type can include a namespace prefix. <B>Name</B> and <B>ref</B> attributes cannot both be present. If <B>ref</B> is present, <B>simpleType</B> element, <B>form</B>, and <B>type</B> cannot be present.

<P>To declare an attribute using an existing attribute definition within a complex type, use the <B>ref</B> attribute to specify the existing attribute definition.


<PRE class="code">&lt;xs:attribute name="mybaseattribute"&gt;
  &lt;xs:simpleType&gt;
   &lt;xs:restriction base="xs:integer"&gt;
      &lt;xs:maxInclusive value="1000"/&gt;
   &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
&lt;/xs:attribute&gt;
&lt;xs:complexType name="myComplexType"&gt;
  &lt;xs:attribute ref="mybaseattribute"/&gt;
&lt;/xs:complexType&gt;</PRE>


<P>Optional.
</dd>

<DT><B>type</B></DT>

<DD>The name of a built-in data type or a simple type defined in this schema (or another schema indicated by the specified namespace). The type must be a QName. The type can include a namespace prefix. The <B>type</B> attribute can only be present when the content does not contain a <B>simpleType</B> element.

<P>Optional.
</dd>

<DT><B>use</B></DT>

<DD>An indicator of how the attribute is used.

<P>If specified, this attribute must have one of the following values.


<P class="fineprint">

<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=17%><B>optional</B></TD>
<TD width=83%>Attribute is optional and may have any value. This is the default. The following are equivalent.
<PRE class="code">&lt;xs:attribute name="myattr" type="xs:string"/&gt;
&lt;xs:attribute name="myattr" type="xs:string" use="optional"/&gt;</PRE>
</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>prohibited</B></TD>
<TD width=83%>Attribute cannot be used. This attribute is used in a restriction of another complex type to prohibit the use of existing attributes.
<PRE class="code">&lt;xs:attributeGroup name="A"&gt;
  &lt;xs:attribute name="x" type="xs:NCName"/&gt;
  &lt;xs:attribute name="y" type="xs:QName"/&gt;
 &lt;/xs:attributeGroup&gt;

&lt;xs:complexType name="B"&gt;
  &lt;xs:complexContent&gt;
   &lt;xs:restriction base="xs:A"&gt;
    &lt;xs:attribute name="x" use="required" /&gt;
    &lt;xs:attribute name="y" use="prohibited"/&gt;
   &lt;/xs:restriction&gt;
  &lt;/xs:complexContent&gt;
 &lt;/xs:complexType&gt;</PRE>
</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>required</B></TD>
<TD width=83%>Attribute must appear once.
<P>The attribute is required and can contain any value allowed by this type definition of the attribute.</P>

<PRE class="code">&lt;xs:attribute name="myattr" type="xs:string" use="required"/&gt;</PRE>

<P>This attribute is used in a restriction or extension of another complex type, to require that a specified attribute or attributes are present.</P>

<PRE class="code">&lt;xs:attributeGroup name="A"&gt;
  &lt;xs:attribute name="x" type="xs:NCName"/&gt;
  &lt;xs:attribute name="y" type="xs:QName"/&gt;
 &lt;/xs:attributeGroup&gt;

&lt;xs:complexType name="B"&gt;
  &lt;xs:complexContent&gt;
   &lt;xs:restriction base="xs:A"&gt;
    &lt;xs:attribute name="x" use="required" /&gt;
    &lt;xs:attribute name="y" use="prohibited"/&gt;
   &lt;/xs:restriction&gt;
  &lt;/xs:complexContent&gt;
 &lt;/xs:complexType&gt;</PRE>

<P>If the attribute is declared as global (its parent element is <B>schema</B>), this attribute is required on all elements in the schema.</P>
</TD>
</TR>
</table></div>


<P class="fineprint">


<P>Optional.
</dd>
</DL>

<H4 class="dtH4">Element Information</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=34%><B>Number of occurrences</B></TD>
<TD width=66%>Defined one time in the <B>schema</B> element. Referred to multiple times in complex types or attribute groups.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Parent elements</B></TD>
<TD width=66%><A HREF="xsd_ref_2pys.htm">attributeGroup</A>, <A HREF="xsd_ref_1m9g.htm">schema</A>, <A HREF="xsd_ref_9qpg.htm">complexType</A>, <A HREF="xsd_ref_8iyc.htm">restriction (simpleContent)</A>, <A HREF="xsd_ref_8ewk.htm">extension (simpleContent)</A>, <A HREF="xsd_ref_72lw.htm">restriction (complexContent)</A>, <A HREF="xsd_ref_9vg4.htm">extension (complexContent)</A></TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Contents</B></TD>
<TD width=66%><A HREF="xsd_ref_3j3o.htm">annotation</A>, <A HREF="xsd_ref_7xpw.htm">simpleType</A></TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Remarks</H4>

<P>An attribute declaration associates a name with a type definition, which can be a built-in data type or a simple type.</P>

<P>Attribute declarations can be present as child elements of the <B>schema</B>, <B>complexType</B>, and <B>attributeGroup</B> elements (having global scope) or within complex type definitions. For complex types, attribute declarations can be present as local declarations or references to attributes with global scope.</P>

<P>In addition, attributes can appear by reference within <B>attributeGroup</B> and <B>complexType</B> elements.</P>

<H4 class="dtH4">Examples</H4>

<P>In the following example, an attribute is declared by reference to a built-in type with a default value of <B>test</B> and used in a <B>complexType</B> element.</P>

<PRE class="code"><code class="ce">&lt;xs:attribute name="mybaseattribute" type="xs:string" default="test" /&gt;
&lt;xs:complexType name="myComplexType"&gt;
  &lt;xs:attribute ref="mybaseattribute"/&gt;
&lt;/xs:complexType&gt;</code></PRE>

<P>In the following example, a <B>required</B> attribute is declared directly within a <B>complexType</B> element.</P>

<PRE class="code"><code class="ce">&lt;xs:complexType name="myComplexType"&gt;
  &lt;xs:attribute name="mybaseattribute" type="xs:string" use="required"/&gt;
&lt;/xs:complexType&gt;</code></PRE>

<P>In the following example, an attribute is declared by deriving from the built-in integer type (by restriction) and restricting the range of values to between <code class="ce">"60"</code> and <code class="ce">"95"</code>, inclusive.</P>

<PRE class="code">&lt;xs:attribute name="myHolidayLocationTemperature"&gt;
  &lt;xs:simpleType&gt;
   &lt;xs:restriction base="xs:integer"&gt;
    &lt;xs:minInclusive value="60"/&gt;
    &lt;xs:maxInclusive value="95"/&gt;
   &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
&lt;/xs:attribute&gt;</PRE>

<P>In the following example, an attribute is declared as a list containing decimal values. (This allows an attribute such as <B>shoeSizes</B>="10.5 9 8 11" to contain a list of the values 10.5, 9, 8, and 11).</P>

<PRE class="code">   &lt;xs:simpleType name="Sizes"&gt;
      &lt;xs:restriction base="xs:decimal"&gt;
         &lt;xs:enumeration value="10.5"/&gt;
         &lt;xs:enumeration value="9"/&gt;
         &lt;xs:enumeration value="8"/&gt;
         &lt;xs:enumeration value="11"/&gt;
      &lt;/xs:restriction&gt;
   &lt;/xs:simpleType&gt;   

   &lt;xs:attribute name="shoeSizes"&gt;
      &lt;xs:simpleType&gt;
         &lt;xs:list itemType="Sizes"/&gt;
      &lt;/xs:simpleType&gt;
   &lt;/xs:attribute&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_ref_7gh1.htm">XML Schema Reference (XSD)</A> | <A HREF="xsd_ref_1yer.htm">XML Schema Elements</A> </P>

<P>For more information, see the W3C XML Schema Part 1: Structures Recommendation at http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-attribute.</P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://www.w3.org/TR/REC-xml-names">W3C Namespaces in XML Recommendation</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
