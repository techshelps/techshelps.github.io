<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Reference Data Values</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xslt_hdi_reference_data_values"></A>Reference Data Values</H1>

<P>Suppose that you want to display your company information and sales data in a format that is more readable than the default tree view in Internet Explorer. You can do this by creating the following XSLT file, <B>Transform.xsl</B>. This file transforms the heading data values in the <B>Sales.xml</B> file into a well structured HTML format. The basic operations involve retrieving the data values of the specified elements or attributes. In XSLT, you use XPath pattern matching to do this. This is illustrated in <B>Transform.xsl</B> by use of the <code class="ce">match</code> and <code class="ce">select</code> attributes of the <code class="ce">xsl:template</code> and <code class="ce">xsl:value-</code>of elements, respectively. Notice how XPath expressions are constructed, in bold below, to reference element content and an attribute value.</P>

<P class="labelproc"><B>To create the Transform.xsl file</B>

<OL type="1">
	<LI>Use your HTML or text editor to create a new file. Copy the following code into that file.
<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
   &lt;xsl:output method="html"/&gt;
   &lt;<B>xsl:template</B> <B>match="/"</B>&gt;
      &lt;html&gt;
         &lt;head&gt;
            &lt;!-- Referencing a data value as element content: --&gt;
            &lt;title&gt;&lt;<B>xsl:value-of select="//summary/heading"/</B>&gt;&lt;/title&gt;
         &lt;/head&gt;
         &lt;body&gt;
            &lt;h1&gt;&lt;<B>xsl:value-of select="//summary/heading"/</B>&gt;&lt;/h1&gt;
            &lt;h2&gt;&lt;<B>xsl:value-of select="//summary/subhead"/</B>&gt;&lt;/h2&gt;
            &lt;p&gt;&lt;<B>xsl:value-of select="//summary/description"/</B>&gt;&lt;/p&gt;    

            &lt;DIV&gt;
                 Region: <B>&lt;xsl:value-of </B>
<B>                         select="//data/region[1]/name"/&gt;</B>
<B>            </B>&lt;/DIV&gt;

            &lt;!-- Referencing a data value as an attribute value: --&gt;
            &lt;DIV&gt;
                 First quarter sales: <B>&lt;xsl:value-of </B>
<B>              select="//data/region[1]/quarter/@books_sold[1]"/&gt;</B>
<B>            </B>&lt;/DIV&gt;
         &lt;/body&gt;
      &lt;/html&gt;
   &lt;/<B>xsl:template</B>&gt;
&lt;/xsl:stylesheet&gt;</PRE>
</li>

	<LI>In the same folder in which you saved the <B>Sales.xml</B> file, save the current file as <B>Transform.xsl</B>.</li>
</OL>

<P class="labelproc"><B>To specify the XSLT file to use with the XML file</B>

<OL type="1">
	<LI>In your HTML or text editor, open the <B>Sales.xml</B> file (if not already opened).</li>

	<LI>Locate the following code:
<PRE class="code">&lt;?xml version="1.0"?&gt;</PRE>
</li>

	<LI>After this line, add the following code:
<PRE class="code">&lt;?xml-stylesheet type="text/xsl" href="transform.xsl"?&gt;</PRE>

<P>This processing instruction identifies <B>Transform.xsl</B> as the XSLT file to be used for transforming <B>Sales.xml</B>.
</li>

	<LI>Save and close <B>Sales.xml</B>.</li>
</OL>

<P class="labelproc"><B>To view the transformation results</B>

<OL type="1">
	<LI>In Internet Explorer, press F5 to refresh <B>Sales.xml.</B> This shows how <B>Transform.xsl</B> formats the data in the <code class="ce">&lt;summary&gt;</code> element, as well as the first quarter results of the West Region.</li>

	<LI>If you installed the Internet Explorer Tools for Validating XML and Viewing XSLT Output, you can also right-click in the Internet Explorer window and select <B>View XSL Output </B>from the pop-up menu.</li>
</OL>

<H2 class="dtH2">How the Transform Works</H2>

<P>At the beginning of <B>Transform.xsl</B>, the <code class="ce">xsl:stylesheet</code> line declares that this is an XSLT file. The <code class="ce">xsl:output</code> line tells the XSLT processor to produce HTML output instead of the default output method of "xml".</P>

<P>The <code class="ce">xsl:template</code> and <code class="ce">xsl:value-of</code> lines use the XPath expressions to pick out the content of an element and an attribute value. For example, <code class="ce">&lt;xsl:template match="/"&gt;</code> defines a template rule for the root element of the source XML document and all of its children. <code class="ce">&lt;xsl:value-of select="//summary/heading"/&gt;</code> returns the content of the <code class="ce">&lt;heading&gt;</code> element contained in the <code class="ce">&lt;summary&gt;</code> element. The <code class="ce">&lt;xsl:value-of select="//data/region[1]/quarter/@books_sold[1]"/&gt;</code> returns the value of the <code class="ce">books_sold</code> attribute for the first quarter in the first region, as ordered in the source document. The HTML tags format the retrieved data values.</P>

<P>Now you know how to select a given element, its content, or its attribute value. The next exercise shows how to <A HREF="xslt_howdoi_83zn.htm">Use CSS in XSLT</A>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
