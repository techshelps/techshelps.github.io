<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Uncommented Code for the Walk the SOM Application</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="som_devguide_hdi_walkthesom_uncommentedcode"></A>Uncommented Code for the Walk the SOM Application</H1>

<PRE class="code">SOMITEM_SCHEMA                    = 4*1024
SOMITEM_ATTRIBUTE                 = SOMITEM_SCHEMA + 1
SOMITEM_ATTRIBUTEGROUP            = SOMITEM_SCHEMA + 2
SOMITEM_NOTATION                  = SOMITEM_SCHEMA + 3

SOMITEM_ANYTYPE                   = 8*1024
SOMITEM_DATATYPE                  = SOMITEM_ANYTYPE+256
SOMITEM_SIMPLETYPE                = SOMITEM_DATATYPE+256
SOMITEM_COMPLEXTYPE               = 9*1024

SOMITEM_PARTICLE                  = 16*1024
SOMITEM_ANY                       = SOMITEM_PARTICLE+1
SOMITEM_ANYATTRIBUTE              = SOMITEM_PARTICLE+2
SOMITEM_ELEMENT                   = SOMITEM_PARTICLE+3
SOMITEM_GROUP                     = SOMITEM_PARTICLE+256

SOMITEM_ALL                       = SOMITEM_GROUP+1
SOMITEM_CHOICE                    = SOMITEM_GROUP+2
SOMITEM_SEQUENCE                  = SOMITEM_GROUP+3
SOMITEM_EMPTYPARTICLE             = SOMITEM_GROUP+4

' Attribute uses
SCHEMAUSE_OPTIONAL   = 0
SCHEMAUSE_PROHIBITED = 1
SCHEMAUSE_REQUIRED   = 2

SCHEMACONTENTTYPE_EMPTY        = 0
SCHEMACONTENTTYPE_TEXTONLY     = 1
SCHEMACONTENTTYPE_ELEMENTONLY  = 2
SCHEMACONTENTTYPE_MIXED        = 3

remarks = 0

Set oSchemaCache = CreateObject("Msxml2.XMLSchemaCache.5.0")
Set oAnnotationDoc = CreateObject("Msxml2.DOMDocument.5.0")

' Load the schema.
nsTarget="http://www.example.microsoft.com/po"

oSchemaCache.add nsTarget, "po.xsd"
Set oSchema = oSchemaCache.getSchema(nsTarget)

result = "&lt;xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema'&gt;"+ vbNewLine
For Each oE in oSchema.elements
    result = result + printElement(oE, 0)
Next

For Each oA in oSchema.attributes
    result = result + printAttr(oA, t)
Next

result = result + vbNewLine

For Each oT in oSchema.types
    result = result + processType(oT, 0)
Next

result = result + "&lt;/xsd:schema&gt;"

WScript.Echo result

' -------------------------------------------------------------------------------------------
Function processType(oType, t)
'    res = printTab(t) + printRemark(oType.name)+ vbNewLine
    If oType.itemType = SOMITEM_ANYTYPE Then
        res = res + printTab(t+1) + "&lt;!-- " + oType.name +" --&gt;" 
    End If
    If oType.itemType = SOMITEM_COMPLEXTYPE Then
        res = res + processComplexType(oType, t+1)
    End If
    If oType.itemType = SOMITEM_SIMPLETYPE Then
        res = res + processSimpleType(oType, t+1)
    End If
    processType = res + vbNewLine
End Function

Function processComplexType(oComplex, t)
    res = printTab(t) + "&lt;xsd:complexType"
    If oComplex.name &lt;&gt; "" Then
        res = res + " name='" + oComplex.name +"'"
    End If
    res = res + "&gt;"

    If oComplex.contentType = SCHEMACONTENTTYPE_EMPTY Then
        res = res + printRemark("emtpy")
    End If
    If oComplex.contentType = SCHEMACONTENTTYPE_TEXTONLY Then
        res = res + printRemark("textonly")
    End If
    If oComplex.contentType =SCHEMACONTENTTYPE_ELEMENTONLY Then
        res = res + printRemark("elementonly")
        res = res + processGroup(oComplex.contentModel, t+1)
    End If
    If oComplex.contentType = SCHEMACONTENTTYPE_MIXED Then
        res = res + printRemark("mixed")
        res = res + processGroup(oComplex.contentModel, t+1)
    End If
    res = res + vbNewline
    res = res + printRestrictions(oComplex, t+1)

    On Error Resume Next
    Set any = oComplex.anyAttribute.name
    If Err.number = 0 Then
        res = res + oComplex.anyAttribute.name
    End If

    For Each oAttr in oComplex.attributes
        res = res + printAttr(oAttr, t+1)
    Next

    processComplexType = res + printTab(t) + "&lt;/xsd:complexType&gt;"+vbNewline
End Function

Function processSimpleType(oSimple, t)
    res = printTab(t) + "&lt;xsd:simpleType"
    If oSimple.name &lt;&gt; "" Then
        res = res + " name='" + oSimple.name +"'"
    End If
    res = res + "&gt;"+vbNewline

    If oSimple.baseTypes.length = 1 Then
        res = res + printRestrictions(oSimple, t+1)
    Else
        For Each oType in oSimple.baseTypes
            res = res + "&lt;baseType name='" + printName(oType) +"'&gt;"+vbNewline
        Next
    End If

    processSimpleType = res + printTab(t) + "&lt;/xsd:simpleType&gt;"+vbNewline
End Function

Function processGroup(poGroup, t)
    res = ""
    ' List elements in the sequence.

    If poGroup.itemType = SOMITEM_ALL Then
        res = res + printTab(t+1) + "&lt;xsd:all&gt;"+vbNewline
        res = res + processChoiceOrSequence(poGroup, t+1)
        res = res + printTab(t+1) + "&lt;/xsd:all&gt;"
    End If

    If poGroup.itemType = SOMITEM_CHOICE Then
        res = res + printTab(t+1) + "&lt;xsd:choice&gt;"+vbNewline
        res = res + processChoiceOrSequence(poGroup, t+1)
        res = res + printTab(t+1) + "&lt;/xsd:choice&gt;"
    End If

    If poGroup.itemType = SOMITEM_SEQUENCE Then
        res = res + printTab(t+1) + "&lt;xsd:sequence&gt;"+vbNewline
        res = res + processChoiceOrSequence(poGroup, t+1)
        res = res + printTab(t+1) + "&lt;/xsd:sequence&gt;"
    End If
    processGroup = res
End Function

Function processChoiceOrSequence(poGroup, t)
    res = ""
    For Each item in poGroup.particles
        If item.itemType = SOMITEM_ELEMENT Then
            res = res + printElement(item, t+1)
        End If
        If (item.itemType and SOMITEM_GROUP) = SOMITEM_GROUP Then
            res = res + processGroup(item, t+1)+vbNewline
        End If
        If item.itemType = SOMITEM_ANY Then
            res = res + "any: " + item.name+vbNewline
        End If
    Next
    processChoiceOrSequence = res
End Function

Function printElement(oElement, t)
    res = printTab(t) + "&lt;xsd:element "
    If oElement.isReference Then
        res = res + "ref='" + oElement.name + "'" + printParticles(oElement) + "&gt;"
        res = res + "&lt;!-- "
        res = res + " abstract='" &amp; oElement.isAbstract &amp; "'"
        res = res + " --&gt;"
    Else
        Set oType=oElement.type
        res = res + "name='" + oElement.name + "'" + printParticles(oElement)
        res = res + " abstract='" &amp; oElement.isAbstract &amp; "'"
        res = res + " id='" &amp; oElement.id &amp; "'"
        If oType.name = "" Then
            res = res + "&gt;" + vbNewLine 
            If oType.itemType = SOMITEM_COMPLEXTYPE Then
                res = res + printElement + processComplexType(oType, t+1)
            Else
                res = res + processSimpleType(oType, t)
            End If
            res = res + printTab(t) + "&lt;/xsd:element&gt;"
        Else
            If printName(oType) &lt;&gt; "xsd:anyType" Then
                res = res + " type='" + printName(oType) + "'"
            End If

            If oType.itemType &lt;&gt; SOMITEM_COMPLEXTYPE Then
                If printRestrictions(oType, 0) = "" Then
                    res = res + "/&gt;"
                Else
                    res = res + "&gt;" + vbNewLine + processSimpleType(oType, t)
                    res = res + printTab(t) + "&lt;/xsd:element&gt;"
                End If
            Else
                res = res + "/&gt;"
            End If
        End If
    End If
    rem = "scope:" &amp; printName(oElement.scope)
    res = res + printRemark( "rem" )
    printElement = res
End Function

Function printParticles(oParticle)
        If oParticle.minOccurs &lt;&gt; 1 Then 
            res = res + " minOccurs='" &amp; oParticle.minOccurs &amp; "'"
        End If
        If oParticle.maxOccurs &lt;&gt; 1 Then 
            If oParticle.maxOccurs = -1 Then 
                res = res + " maxOccurs='unbounded'"
            Else
                res = res + " maxOccurs='" &amp; oParticle.maxOccurs &amp; "'"
            End If
        End If
        printParticles = res
End Function

Function printAttr(oAttr, t)
        If oAttr.isReference Then
            printAttr = printAttr + printTab(t) + "&lt;xsd:attribute ref='" + oAttr.name + "'"
        Else
            printAttr = printAttr + printTab(t) + "&lt;xsd:attribute name='" + oAttr.name + "'"
        End If
        If oAttr.type.name &lt;&gt; "" Then
            printAttr = printAttr + " type='" + printName(oAttr.type) + "'"
        End If
        If oAttr.defaultValue &lt;&gt; "" Then
            printAttr = printAttr + " default='" + oAttr.defaultValue + "'"
        End If
        If oAttr.fixedValue &lt;&gt; "" Then
            printAttr = printAttr + " fixed='" + oAttr.fixedValue + "'"
        End If
        If oAttr.use = SCHEMAUSE_OPTIONAL   Then printAttr = printAttr + " use='optional'"   End If
        If oAttr.use = SCHEMAUSE_PROHIBITED Then printAttr = printAttr + " use='prohibited'" End If
        If oAttr.use = SCHEMAUSE_REQUIRED   Then printAttr = printAttr + " use='required'"   End If
        printAttr = printAttr + "/&gt;"
        rem = "scope:" &amp; printName(oElement.scope)
        printAttr = printAttr + printRemark("rem")
End Function

Function printTab(t)
    tab=""
    for x=0 to t
        tab=tab+"  "
    next
    printTab=tab
End Function

Function printName(item)
    printName =""
    If (item.itemType and SOMITEM_DATATYPE) = SOMITEM_DATATYPE Then
        printName= "xsd:"
    End If 
    If item.itemType = SOMITEM_ANYTYPE Then
        printName= "xsd:"
    End If 
    printName= printName + item.name
End Function

Function printRestrictions(oType, t)
    res = ""
    If oType.minExclusive &lt;&gt; "" Then
        res = res + printTab(t+1) + "&lt;xsd:minExclusive value='"+ oType.minExclusive + "'/&gt;" + vbNewLine
    End If
    If oType.minInclusive &lt;&gt; "" Then
        res = res + printTab(t+1) + "&lt;xsd:minInclusive value='"+ oType.minInclusive + "'/&gt;" + vbNewLine
    End If
    If oType.maxExclusive &lt;&gt; "" Then
        res = res + printTab(t+1) + "&lt;xsd:maxExclusive value='"+ oType.maxExclusive + "'/&gt;" + vbNewLine
    End If
    If oType.maxInclusive &lt;&gt; "" Then
        res = res + printTab(t+1) + "&lt;xsd:maxInclusive value='"+ oType.maxInclusive + "'/&gt;" + vbNewLine
    End If
    If oType.totalDigits &gt; -1 Then
        res = res + printTab(t+1) + "&lt;xsd:totalDigits value='" &amp; oType.totalDigits &amp; "'/&gt;" + vbNewLine
    End If
    If oType.fractionDigits &gt; -1 Then
        res = res + printTab(t+1) + "&lt;xsd:fractionDigits value='" &amp; oType.fractionDigits &amp; "'/&gt;" + vbNewLine
    End If
    If oType.length &gt; -1 Then
        res = res + printTab(t+1) + "&lt;xsd:length value='" &amp; oType.length &amp; "'/&gt;" + vbNewLine
    End If
    If oType.minLength &gt; -1 Then
        res = res + printTab(t+1) + "&lt;xsd:minLength value='" &amp; oType.minLength &amp; "'/&gt;" + vbNewLine
    End If
    If oType.maxLength &gt; -1 Then
        res = res + printTab(t+1) + "&lt;xsd:maxLength value='" &amp; oType.maxLength &amp; "'/&gt;" + vbNewLine
    End If
    If oType.enumeration.length &gt; 0 Then
        For Each item in oType.enumeration
            res = res + printTab(t+1) + "&lt;xsd:enumeration value='" + item + "'/&gt;" + vbNewLine
        Next
    End If
    If oType.whitespace &gt; 0 Then
        res = res + printTab(t+1) + "&lt;xsd:whitespace value='" &amp; oType.whitespace &amp; "'/&gt;" + vbNewLine
    End If
    If oType.patterns.length &lt;&gt; 0 Then
        For Each oPattern in oType.patterns
            res = res + printTab(t+1) + "&lt;xsd:pattern value='" + opattern + "'/&gt;" + vbNewLine
        Next
    End If

    printRestrictions = ""
    If res &lt;&gt; "" and oType.baseTypes.length &gt; 0 Then
        printRestrictions = printRestrictions + printTab(t) + "&lt;xsd:restriction base='" + printName(oType.baseTypes(0)) + "'&gt;" + vbNewLine
        printRestrictions = printRestrictions + res
        printRestrictions = printRestrictions + printTab(t) + "&lt;/xsd:restriction&gt;" + vbNewLine
    End If

End Function

Function printRemark(r)
    If remarks = 1 Then
        printRemark = "&lt;!-- " + r + " --&gt;"
    End If
    printRemark = printRemark + vbNewLine</PRE>

<P>End Function</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
