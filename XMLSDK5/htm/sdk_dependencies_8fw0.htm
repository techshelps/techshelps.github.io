<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MSXML 5.0 and Windows XP</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmscmsxml5andwindowsxp"></A>MSXML 5.0 and Windows XP</H1>

<P>To enable developers to better deal with DLL conflicts, Microsoft Windows XP and Windows .NET Server provide new features for installing shared components (also known as assemblies). </P>

<P>For example, a new service pack updated version of MSXML 5.0 when installed in side-by-side mode, will not replace any earlier version of MSXML 5.0 used by another application. Also this type of side-by-side installation allows both versions to be loaded in memory and used simultaneously by separate applications that depend upon the different versions. This represents an improvement over the way globally shared installation of component DLLs worked in earlier versions of Microsoft Windows in which the component was replaced and all applications were required to use the most recent version of the component. </P>

<H2 class="dtH2">Background on MSXML 5.0 and Side-by-Side Assembly </H2>

<P>When MSXML 5.0 is installed on Microsoft&reg; Windows&reg; XP, it is installed as a shared side-by-side assembly. Side-by-side assemblies are:

<UL>
	<LI>One or more .dll files packaged together to install and function as a single shared component.</li>

	<LI>Installed by the Windows Installer into the managed assembly store located off of the Windows system root folder.</li>

	<LI>Authored so that multiple versions of the component can run at the same time without impacting each other. </li>

	<LI>Not registered globally on the system, but are globally available to applications that depend on them. </li>
</UL>

<P>For Windows XP, you specify all dependencies for your compiled applications or components with manifests. Assembly manifests are used with shared dynamic linked libraries. Application manifests are used with executables.</P>

<P>The table below summarizes some of the key differences between globally shared and side-by-side installations of the MSXML component. The same differences will apply for other Windows shared assemblies as well.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=49%>Globally shared installation</TH>
<TH width=51%>Side-by-side installation</TH>
</TR>

<TR VALIGN="top">
<TD width=49%>The only way to install globally shared components under Windows 2000 and earlier versions of Microsoft Windows.</TD>
<TD width=51%>The recommended way to author and install shared components under Windows XP and other future versions of Microsoft Windows.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>Requires higher support costs for maintaining an application over its life span. </TD>
<TD width=51%>Can substantially reduce support costs over the life span of your application.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>Shared components are more impacted by updates.</TD>
<TD width=51%>Shared components are less impacted by updates.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>Uses Windows Registry to store COM activation data.</TD>
<TD width=51%>Uses manifest files to store COM activation data.</TD>
</TR>

<TR VALIGN="top">
<TD width=49%>Only a single version of a shared component or application can exist in the Windows system folder (i.e., the <I>%systemroot%</I><B>\system32</B> folder).</TD>
<TD width=51%>Multiple versions of a component or application can be shared and in use at the same time. Each version installs in its own distinctly named subfolder under the Windows side-by-side store (i.e., the <I>%systemroot%</I><B>\WinSxs</B> folder).</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>The following topics provide more information about working with manifests and MSXML 5.0 in Windows XP and Windows .NET Server.

<UL type="disc">
	<LI><A HREF="sdk_dependencies_5wvi.htm">Creating a Manifest for Your Application</A></li>

	<LI><A HREF="sdk_dependencies_6ulo.htm">Creating a Manifest for Your Component DLL</A></li>

	<LI><A HREF="sdk_dependencies_2y5v.htm">Troubleshooting Side-by-Side Installations</A></li>

	<LI><A HREF="sdk_dependencies_9oz7.htm">Managing MSXML Version Dependencies</A></li>
</UL>

<H4 class="dtH4"><b class="le">Notes</b></H4>

<UL type="disc">
	<LI>Side-by-Side technology described in this section applies only when you deploy applications that use MSXML 5.0 or later to computers running Microsoft&reg; Windows&reg; XP and Windows&reg; .NET Server. If your deployment involves earlier versions of Microsoft&reg; Windows, such as Windows 2000, Windows NT, Windows Me, or Windows 98, disregard the information in this section.</li>

	<LI>Windows XP Side-by-Side installation should not be confused with the side-by-side installation provided in previous versions of MSXML. The previous side-by-side installation was implemented by modifying GUIDs and ProgIDs. This topic covers Windows XP Side-by-Side installation exclusively.</li>
</UL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
