<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>string Function</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefstringfunction"></A>string Function</H1>

<P>Converts an object to a string.</P>

<PRE class="syntax"><I>string</I> string(object?)</PRE>

<H4 class="dtH4">Remarks</H4>

<P>An object is converted to a string as follows.</P>

<P>A node-set is converted to a string by returning the string value of the node in the node-set that is first in document order. If the node-set is empty, an empty string is returned.</P>

<P>A number is converted to a string as follows.

<UL type="disc">
	<LI>NaN is converted to the string NaN.</li>

	<LI>positive zero is converted to the string "0".</li>

	<LI>negative zero is converted to the string "0".</li>

	<LI>positive infinity is converted to the string "Infinity".</li>

	<LI>negative infinity is converted to the string "-Infinity".</li>

	<LI>If the number is an integer, the number is represented in decimal form as a number with no decimal point and no leading zeros, preceded by a minus sign (-) if the number is negative.</li>

	<LI>Otherwise, the number is represented in decimal form as a number with a decimal point and at least one digit before the decimal point and at least one digit after the decimal point, preceded by a minus sign (-) if the number is negative; there must be no leading zeros before the decimal point, apart possibly from the one required digit immediately before the decimal point; beyond the one required digit after the decimal point there must be as many, but only as many, more digits as are needed to uniquely distinguish the number from all other IEEE 754 numeric values.</li>
</UL>

<P>The Boolean false value is converted to the string "false". The Boolean true value is converted to the string "true".</P>

<P>An object of a type other than the four basic types is converted to a string in a way that is dependent on that type.</P>

<P>If the argument is omitted, it defaults to a node-set with the context node as its only member.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">string()</code> function is not intended for converting numbers into strings for presentation to users. The <code class="ce">format-number()</code> function and <code class="ce">&lt;xsl:number&gt;</code> element in XSL Transformations (XSLT) provide this functionality.</BLOCKQUOTE>

<H4 class="dtH4">Example</H4>

<P>The following example illustrates how to use the <code class="ce">string()</code> function in an XPath expression. In two cases (see the instructions in bold in the XSLT file below), the function is used to ensure that its argument is treated as a string expression.</P>

<P class="label"><B>XML File (string.xml)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;?xml-stylesheet type="text/xsl"    
href="string.xsl"?&gt;      
&lt;arithmetics&gt;
  &lt;operation&gt;
     &lt;operator&gt;+&lt;/operator&gt;
     &lt;operand&gt;1&lt;/operand&gt;
     &lt;operand&gt;2.00&lt;/operand&gt;
  &lt;/operation&gt;
  &lt;operation&gt;
     &lt;operator&gt;+&lt;/operator&gt;
     &lt;operand&gt;One&lt;/operand&gt;
     &lt;operand&gt;2.00&lt;/operand&gt;
  &lt;/operation&gt;
  &lt;operation&gt;
     &lt;operator&gt;-&lt;/operator&gt;
     &lt;operand&gt;1&lt;/operand&gt;
     &lt;operand&gt;2.00&lt;/operand&gt;
  &lt;/operation&gt;
  &lt;operation&gt;
     &lt;operator&gt;*&lt;/operator&gt;
     &lt;operand&gt;1&lt;/operand&gt;
     &lt;operand&gt;2.00&lt;/operand&gt;
  &lt;/operation&gt;
  &lt;operation&gt;
     &lt;operator&gt;div&lt;/operator&gt;
     &lt;operand&gt;-1&lt;/operand&gt;
     &lt;operand&gt;0.0&lt;/operand&gt;
  &lt;/operation&gt;
  &lt;operation&gt;
     &lt;operator&gt;mod&lt;/operator&gt;
     &lt;operand&gt;5&lt;/operand&gt;
     &lt;operand&gt;2&lt;/operand&gt;
  &lt;/operation&gt;
  &lt;operation&gt;
     &lt;operator&gt;mod&lt;/operator&gt;
     &lt;operand&gt;5&lt;/operand&gt;
     &lt;operand&gt;2.5&lt;/operand&gt;
  &lt;/operation&gt;
  &lt;operation&gt;
     &lt;operator&gt;mod&lt;/operator&gt;
     &lt;operand&gt;5&lt;/operand&gt;
     &lt;operand&gt;2.25&lt;/operand&gt;
  &lt;/operation&gt;
  &lt;operation&gt;
     &lt;operator&gt;&amp;amp;&lt;/operator&gt;
     &lt;operand&gt;0&lt;/operand&gt;
     &lt;operand&gt;1&lt;/operand&gt;
  &lt;/operation&gt;
&lt;/arithmetics&gt;</PRE>

<P class="label"><B>XSLT File (string.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;?xml-stylesheet type="text/xsl" href="string.xsl"?&gt;
&lt;xsl:stylesheet version="1.0"           
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

  &lt;xsl:output method="html"   
     omit-xml-declaration="yes"/&gt;

  &lt;xsl:template match="/arithmetics"&gt;
    &lt;html&gt;
       &lt;head&gt;&lt;title&gt;example&lt;/title&gt;&lt;/head&gt;
    &lt;body&gt;
       &lt;xsl:apply-templates/&gt;
    &lt;/body&gt;
    &lt;/html&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="operation"&gt;
    &lt;DIV&gt;
     &lt;xsl:choose&gt;
        &lt;xsl:when test="string(operator)='+'"&gt;
           &lt;xsl:apply-templates select="." mode="add"/&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:when test="string(operator)='-'"&gt;
           &lt;xsl:apply-templates select="." mode="sub"/&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:when test="string(operator)='*'"&gt;
           &lt;xsl:apply-templates select="." mode="mul"/&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:when test="string(operator)='div'"&gt;
           &lt;xsl:apply-templates select="." mode="div"/&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:when test="string(operator)='mod'"&gt;
           &lt;xsl:apply-templates select="." mode="mod"/&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:otherwise&gt;
           &lt;xsl:apply-templates select="." mode="err"/&gt;
        &lt;/xsl:otherwise&gt;
      &lt;/xsl:choose&gt;
    &lt;/DIV&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="operation" mode="show"&gt;
     &lt;xsl:value-of select="operand[1]"/&gt; &amp;#160;
     &lt;xsl:value-of disable-output-escaping="yes" 
                   select="<B>string(operator)</B>"/&gt; &amp;#160;
     &lt;xsl:value-of select="operand[2]"/&gt; &amp;#160;
     = &amp;#160;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="operation" mode="err"&gt;
      &lt;xsl:apply-templates select="." mode="show"/&gt;
      &lt;xsl:value-of select="<B>string('Invalid arithmetic operation')</B>"/&gt;       
  &lt;/xsl:template&gt;

  &lt;xsl:template match="operation" mode="add"&gt;
      &lt;xsl:apply-templates select="." mode="show"/&gt;
      &lt;xsl:value-of select="operand[1] + operand[2]"/&gt;       
  &lt;/xsl:template&gt;

  &lt;xsl:template match="operation" mode="sub"&gt;
      &lt;xsl:apply-templates select="." mode="show"/&gt;
      &lt;xsl:value-of select="operand[1] - operand[2]"/&gt;       
  &lt;/xsl:template&gt;
  &lt;xsl:template match="operation" mode="mul"&gt;
      &lt;xsl:apply-templates select="." mode="show"/&gt;
      &lt;xsl:value-of select="operand[1] * operand[2]"/&gt;       
  &lt;/xsl:template&gt;
  &lt;xsl:template match="operation" mode="div"&gt;
      &lt;xsl:apply-templates select="." mode="show"/&gt;
      &lt;xsl:value-of select="operand[1] div operand[2]"/&gt;       
  &lt;/xsl:template&gt;
  &lt;xsl:template match="operation" mode="mod"&gt;
      &lt;xsl:apply-templates select="." mode="show"/&gt;
      &lt;xsl:value-of select="operand[1] mod operand[2]"/&gt;       
  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Output</B></P>

<PRE class="code">1     +   2.00   =   3
One   +   2.00   =   NaN
1     -   2.00   =   -1
1     *   2.00   =   2
-1   div   0.0   =   -Infinity
5    mod   2     =   1
5    mod   2.5   =   0
5    mod   2.25  =   0.5
0     &amp;    1     =   Invalid arithmetic operation</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_devdatatypes_065v.htm">Data Types in Schemas</A> | <A HREF="xsd_xdrref_3w6d.htm">XDR Schema Data Types Reference</A> | <A HREF="xsd_ref_5bc5.htm">XML Data Types Reference</A> | <A HREF="xsl_xsltsyntax_8koj.htm">NaN Values</A> | <A HREF="xsl_xsltfun_65ke.htm">format-number Function</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
