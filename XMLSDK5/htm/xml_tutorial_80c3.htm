<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Use XML Namespaces</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmtuttut5usingnamespaces"></A>Use XML Namespaces</H1>
<script SRC="utilityfuncs.js"></script>
<H2 class="dtH2">What is an XML namespace?</H2>

<P>An XML namespace is a collection of names that can be used as element or attribute names in an XML document. The namespace qualifies element names uniquely on the Web in order to avoid conflicts between elements with the same name. The namespace is identified by some Uniform Resource Identifier (URI), either a Uniform Resource Locator (URL), or a Uniform Resource Name (URN), but it doesn't matter what, if anything, it points to. URIs are used simply because they are globally unique across the Internet.</P>

<P>Namespaces can be declared either explicitly or by default. With an explicit declaration, you define a shorthand, or prefix, to substitute for the full name of the namespace. You use this prefix to qualify elements belonging to that namespace. Explicit declarations are useful when a node contains elements from different namespaces. A default declaration declares a namespace to be used for all elements within its scope, and a prefix is not used.</P>

<H2 class="dtH2">How do I declare an explicit namespace?</H2>

<P>The following explicit declaration declares <code class="ce">bk</code> and <code class="ce">money</code> to be shorthand for the full names of their respective namespaces. The <code class="ce">xmlns</code> attribute is an XML keyword for a namespace declaration.</P>
<DIV style="CURSOR: hand"><PRE class="clsCode">&lt;<SPAN TITLE="root node">BOOKS</SPAN>&gt;<br>  &lt;<SPAN TITLE="bk namespace prefix qualifying BOOK tag">bk:BOOK</SPAN> <SPAN TITLE="namespace declaration of bk prefix">xmlns:bk</SPAN>=<SPAN TITLE="namespace value">"urn:example.microsoft.com:BookInfo"</SPAN><SPAN TITLE="namespace declaration of money prefix"><br>           xmlns:money</SPAN>=<SPAN TITLE="namespace value">"urn:Finance:Money"</SPAN>&gt;<br>    &lt;<SPAN TITLE="bk namespace prefix qualifying TITLE tag">bk:TITLE</SPAN>&gt;<SPAN TITLE="TITLE element contents">Creepy Crawlies</SPAN>&lt;/bk:TITLE&gt;<br>    &lt;<SPAN TITLE="bk namespace prefix qualifying PRICE tag">bk:PRICE</SPAN> <SPAN TITLE="money namespace prefix qualifying currency attribute">money:currency</SPAN>=<SPAN TITLE=" attribute value">"US Dollar"</SPAN>&gt;<SPAN TITLE="PRICE element value">22.95</SPAN>&lt;<SPAN TITLE="bk namespace prefix qualifying PRICE tag">/bk:PRICE&gt;</SPAN><br>  &lt;<SPAN TITLE="bk namespace prefix qualifying BOOK tag">/bk:BOOK</SPAN>&gt;<br>&lt;<SPAN TITLE="root node">/BOOKS&gt;</SPAN></PRE></DIV>
<P>All elements beginning with <code class="ce">bk:</code> or <code class="ce">money:</code> are considered to be from the namespace <code class="ce">urn:example.microsoft.com:BookInfo</code> or <code class="ce">urn:Finance:Money</code>, respectively. Run the mouse over the XML to reveal information about the different elements.</P>

<H2 class="dtH2">How do I declare a default namespace?</H2>

<P>A namespace declared without a prefix becomes the default namespace for the document. All elements and attributes in the document that do not have a prefix will then belong to the default namespace. The following example declares that the <code class="ce">&lt;BOOK&gt;</code> element and all elements and attributes within it (<code class="ce">&lt;TITLE&gt;</code>, <code class="ce">&lt;PRICE&gt;</code>, <code class="ce">currency</code>) are from the namespace <code class="ce">urn:example.microsoft.com:BookInfo</code>. </P>

<PRE class="code">&lt;BOOK xmlns="urn:example.microsoft.com:BookInfo"&gt;
  &lt;TITLE&gt;Creepy Crawlies&lt;/TITLE&gt;
  &lt;PRICE currency="US Dollar"&gt;22.95&lt;/PRICE&gt;</PRE>

<H2 class="dtH2">Try it!</H2>

<P>In the following text box, add an explicit namespace declaration to the <code class="ce">&lt;BOOK&gt;</code> element of the following XML document for the namespace <code class="ce">urn:example.microsoft.com:AuthorInfo</code> with a prefix of <code class="ce">author</code>. Click the <B>Well-formed?</B> button to see whether your XML document conforms to the XML specification.</P>
<pre class="clsCode">&lt;BOOKS&gt;<br>  &lt;bk:BOOK xmlns:bk=&quot;urn:example.microsoft.com:BookInfo&quot;<br>           xmlns:money=&quot;urn:Finance:Money&quot;&gt;<br>    &lt;bk:TITLE&gt;Creepy Crawlies&lt;/bk:TITLE&gt;<br>    &lt;bk:PRICE money:currency=&quot;US Dollar&quot;&gt;22.95&lt;/bk:PRICE&gt;<br>  &lt;/bk:BOOK&gt;<br>&lt;/BOOKS&gt;</pre><br><textarea STYLE="color:#8B0000; margin-left: 10pt" COLS="60" ROWS="10" name="XMLsource"></textarea><input style="background-color:#66CCFF" TYPE="button" value="Well-formed?" name="SUBMIT" onclick="checkWellFormed()"><script LANGUAGE="JScript">function checkWellFormed(){		if(msieversion() >= 5)		{		if (XMLsource.value != "")		{			xmlid.loadXML(XMLsource.value);			if (xmlid.parseError.reason == "")				alert("Your XML is well-formed.");			else			alert(xmlid.parseError.reason);		}		else alert("Please enter an XML document.");	}else		versionerror();}</script><xml ID="xmlid"></xml>
<P>Now, add an element to the XML above called <code class="ce">&lt;AUTHOR&gt;</code>, qualified with the namespace prefix <code class="ce">author</code>, containing the book's author, <code class="ce">Stefan Knorr</code>. Click the <B>Well-formed?</B> button to see whether your XML document conforms to the XML specification.</P>
<script>function showXML(){  if (XMLHolder.style.display == "none"){    showTab.value = "Hide XML";    XMLHolder.style.display = "block";        }  else {    XMLHolder.style.display = "none";    showTab.value = "Show XML";    }  }</script><input STYLE="BACKGROUND-COLOR: #66ccff" name="showTab" onclick="showXML()" type="button" value="Show XML"> <div id="XMLHolder" style="DISPLAY: none"><pre class="clsCode">&lt;BOOKS&gt;<br>  &lt;bk:BOOK xmlns:bk=&quot;urn:example.microsoft.com:BookInfo&quot;<br>           xmlns:money=&quot;urn:Finance:Money&quot;<br>           xmlns:author=&quot;urn:example.microsoft.com:AuthorInfo&quot;&gt;<br>    &lt;bk:TITLE&gt;Creepy Crawlies&lt;/bk:TITLE&gt;<br>    &lt;bk:PRICE money:currency=&quot;US Dollar&quot;&gt;22.95&lt;/bk:PRICE&gt;<br>    &lt;author:AUTHOR&gt;Stefan Knorr &lt;/author:AUTHOR&gt;<br>  &lt;/bk:BOOK&gt;<br>&lt;/BOOKS&gt;</pre></div><p></script><H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
