<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>save Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthsave"></A>save Method</H1>

<P>Saves an XML document to the specified location.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">oXMLDOMDocument.save(destination);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>destination</I></DT>

<DD>An object. The object can represent a file name, an ASP <code class="ce">Response</code> object, a <code class="ce">DOMDocument</code> object, or a custom object that supports persistence. See <B>Remarks</B> for more information.</dd>
</DL>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">oXMLDOMDocument.save(destination)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>destination</I></DT>

<DD>An object. The object can represent a file name, an ASP <code class="ce">Response</code> object, a <code class="ce">DOMDocument</code> object, or a custom object that supports persistence. See <B>Remarks</B> for more information.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft® Visual Basic® example creates a <code class="ce">DomDocument</code> object from a string, then saves the document to a file in the application folder. If you look at the resulting file you will see that, instead of one continuous line of text, after each tag or data string. That is because of the <code class="ce">vbNewLine</code> constant inserted in the string at the appropriate locations.</P>

<PRE class="code">Private Sub Form_Load()
   Dim doc As New DOMDocument50
   doc.async = False
   doc.validateOnParse = False
   doc.resolveExternals = False

   doc.loadXML _
      "&lt;?xml version='1.0'?&gt;" + vbNewLine + _
      "&lt;doc title='test'&gt;" + vbNewLine + _
      "   &lt;page num='1'&gt;" + vbNewLine + _
      "      &lt;para title='Saved at last'&gt;" + vbNewLine + _
      "          This XML data is finally saved." + vbNewLine + _
      "      &lt;/para&gt;" + vbNewLine + _
      "   &lt;/page&gt;" + vbNewLine + _
      "   &lt;page num='2'&gt;" + vbNewLine + _
      "      &lt;para&gt;" + vbNewLine + _
      "          This page is intentionally left blank." + vbNewLine + _
      "      &lt;/para&gt;" + vbNewLine + _
      "   &lt;/page&gt;" + vbNewLine + _
      "&lt;/doc&gt;" + vbNewLine

   Path = App.Path + "\saved.xml"
   doc.save Path
End Sub</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT save(
    VARIANT destination);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>destination</I> [in]</DT>

<DD>The type of object to save. This object can represent a file name, an ASP <code class="ce">Response</code> object, an XML document object, or a custom object that supports persistence. See <B>Remarks</B> for more information.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>XML_BAD_ENCODING</DT>

<DD>The value returned if the document contains a character that does not belong in the specified encoding. The character must use a numeric entity reference. For example, the Japanese Unicode character 20013 does not fit into the encoding Windows-1250 (the Central European alphabet) and therefore must be represented in markup as the numeric entity reference &amp;#20013; or &amp;#x4E2D; This version of <code class="ce">save</code> does not automatically convert characters to the numeric entity references.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if a string was provided, but it is not a valid file name.</dd>

<DT>E_ACCESSDENIED</DT>

<DD>The value returned if a save operation is not permitted.</dd>

<DT>E_OUTOFMEMORY</DT>

<DD>The value returned if the save operation must allocate buffers.</dd>

<DT>(Other values)</DT>

<DD>Any other file system error can be returned in the <code class="ce">save(string)</code> case.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<PRE class="code">BOOL DOMDocSaveLocation()
{
   BOOL bResult = FALSE;
   IXMLDOMDocument *pIXMLDOMDocument = NULL;
   HRESULT hr;

   try
   {
      _variant_t varString = _T("D:\\sample.xml");
      // Initialize pIXMLDOMDocument (create a DOMDocument).
      // Load document.
      hr = pIXMLDOMDocument-&gt;save(varString);
      if(SUCCEEDED(hr))
         bResult = TRUE;
   }
   catch(...)
   {
      DisplayErrorToUser();
   // Release the IXMLDOMDocument interface.
   }
   // Release the IXMLDOMDocument interface when finished with it.
   return bResult;
}</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The behavior differs based on the object specified by the <code class="ce">objTarget</code> parameter.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=25%>Object</TH>
<TH width=75%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=25%>string</TD>
<TD width=75%>Specifies the file name. This must be a file name rather than a URL. The file is created, if necessary, and the contents are replaced entirely with the contents of the saved document. This mode is not intended for use from a secure client, such as Microsoft® Internet Explorer.
<PRE class="code">    dim xmldoc
    set xmldoc = Server.CreateObject("Msxml2.DOMDocument.5.0")
    xmldoc.load("c:\myfile.xml")
    xmldoc.save(Server.MapPath("sample.xml"))</PRE>

<P>The ASP <code class="ce">Response</code> object sends the document back to the client that invoked the ASP script.</P>

<PRE class="code">    dim xmldoc
    set xmldoc = Server.CreateObject("Msxml2.DOMDocument.5.0")
    xmldoc.load(Server.MapPath("sample.xml"))
    xmldoc.save(Response)</PRE>
</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><code class="ce">IXMLDocument</code> Object</TD>
<TD width=75%>Duplicates the original document. It is the equivalent of saving the document and reparsing it. The document goes through full persistence through XML markup, thereby testing the persistability of your XML document.
<PRE class="code">    &lt;script language="jscript"&gt;
        var xmldoc1 = new ActiveXObject("Msxml2.DOMDocument.5.0");
        var xmldoc2 = new ActiveXObject("Msxml2.DOMDocument.5.0");
        xmldoc1.load("sample.xml");
        xmldoc1.save(xmldoc2.XMLDocument);
    &lt;/script&gt;</PRE>
</TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Custom object supporting persistence</TD>
<TD width=75%>Any other custom COM object that supports <code class="ce">QueryInterface</code> for <code class="ce">IStream</code>, <code class="ce">IPersistStream</code>, or <code class="ce">IPersistStreamInit</code> can also be provided here, and the document will be saved accordingly. In the <code class="ce">IStream</code> case, the <code class="ce">IStream Write</code> method will be called as it saves the document; in the <code class="ce">IPersistStream</code> case, <code class="ce">IPersistStream</code><B> </B><code class="ce">Load</code> will be called with an <code class="ce">IStream</code> that supports the <code class="ce">Read</code>, <code class="ce">Seek</code>, and <code class="ce">Stat</code> methods.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>External entity references in <code class="ce">&lt;DOCTYPE&gt;</code>, <code class="ce">&lt;ENTITY&gt;</code>, <code class="ce">&lt;NOTATION&gt;</code>, and XML namespace declarations are not changed; they point to the original document. A saved XML document might not load if the URLs are not accessible from the location in which you saved the document.</P>

<P>Character encoding is based on the encoding attribute in the XML declaration, such as <code class="ce">&lt;?xml version="1.0" encoding="windows-1252"?&gt;</code>. When no encoding attribute is specified, the default setting is UTF-8.</P>

<P>Validation is not performed during <code class="ce">save</code>, which can result in an invalid document that does not load again because of a specified document type definition (DTD).</P>

<P>This member is an extension of the Worldwide Web Consortium (W3C) Document Object Model (DOM).</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="dom_concepts_4x4d.htm">Persistence and the DOM</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
