<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using ServerXMLHTTP Directly</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmobjxmldomserverxmlhttp_using_directly"></A><SUP></SUP>Using ServerXMLHTTP Directly</H1>

<P>Using the <code class="ce">ServerXMLHTTP</code> object directly offers much greater procedural control than that of the <code class="ce">setProperty</code> method of <code class="ce">DOMDocument</code>. Instead of merely retrieving XML responses from a remote sever, the <code class="ce">ServerXMLHTTP</code> object allows developers to use the HTTP methods, <code class="ce">GET</code> and <code class="ce">POST</code>, as well as the ability to handle basic security logons.</P>

<H2 class="dtH2">Using ServerXMLHTTP to GET XML results from an ASP page</H2>

<P>In the following example, <code class="ce">ServerXMLHTTP</code> retrieves an XML response from an ASP page over HTTP. By using <code class="ce">GET</code>, the example is able to send a request without actually transferring any data to the Web server.</P>

<P>The <code class="ce">responseXML</code> property of the <code class="ce">objSrvHTTP</code> object contains the XML response from the Web server. The example program writes this response to the browser's output by first informing the browser that the response to be received is XML (<code class="ce">"text/xml"</code>). Next, the program passes the response directly to the <code class="ce">Response</code> object for displaying onscreen.</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">&lt;%@language=JScript%&gt;
&lt;%
   var objSrvHTTP;
   objSrvHTTP = Server.CreateObject ("Msxml2.ServerXMLHTTP.5.0");
   objSrvHTTP.open ("GET","http://someotherserver/respond.asp", false);
   objSrvHTTP.send ();
   Response.ContentType = "text/xml";
   Response.Write (objSrvHTTP.responseXML.xml);
%&gt;</PRE>

<H2 class="dtH2">Using ServerXMLHTTP to POST XML to an ASP page</H2>

<P>In the following example, <code class="ce">ServerXMLHTTP</code> uses HTTP to send XML data to an Active Server Page (ASP) page. Unlike the preceding example that used <code class="ce">GET</code>, this example uses <code class="ce">POST</code>. The <code class="ce">POST</code> method sends data, along with the request, to the Web server.</P>

<P>As in the previous example, the program writes the response to the browser's output by setting the <code class="ce">ContentType</code> to "text/xml" and passing the response to the <code class="ce">Response</code> object.</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">&lt;%@language=JScript%&gt;
&lt;%
   var objSrvHTTP;
   var objXMLDocument;
   objSrvHTTP = Server.CreateObject ("Msxml2.ServerXMLHTTP.5.0");
   objXMLDocument = Server.CreateObject ("Msxml2.DOMDocument.5.0");
   
   objXMLDocument.async= false;
   objXMLDocument.loadXML ("&lt;msg&gt;&lt;id&gt;1&lt;/id&gt;&lt;/msg&gt;");
   
   objSrvHTTP.open ("POST","http://someotherserver/respond.asp",false);
   objSrvHTTP.send (objXMLDocument);
   Response.ContentType = "text/xml";
   Response.Write (objSrvHTTP.responseXML.xml);
%&gt;</PRE>

<H2 class="dtH2">Using ServerXMLHTTP to POST and Process XML</H2>

<P>In the following example, <code class="ce">ServerXMLHTTP</code> sends an XML document to an ASP page on a Web server and passes its XML response to a waiting <code class="ce">DOMDocument</code> for processing.</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">&lt;%@language=Jscript%&gt;
&lt;%
   var objSrvHTTP;
   var objXMLSend;
   var objXMLReceive;
   objSrvHTTP = Server.CreateObject("Msxml2.ServerXMLHTTP.5.0");
   objXMLSend = Server.CreateObject("Msxml2.DOMDocument.5.0");
   objXMLReceive = Server.CreateObject("Msxml2.DOMDocument.5.0");

   objXMLSend.async = false;
   objXMLSend.loadXML ("&lt;msg&gt;&lt;id&gt;2&lt;/id&gt;&lt;/msg&gt;");
   
   objSrvHTTP.open ("POST","http://someotherserver/respond.asp",false);
   objSrvHTTP.send (objXMLSend);
   objXMLReceive = objSrvHTTP.responseXML;
   Response.ContentType = "text/xml";
   Response.Write (objXMLReceive.xml);
%&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
