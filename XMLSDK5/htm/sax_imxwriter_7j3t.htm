<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>disableOutputEscaping Property</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="disableoutputescaping_property"></A>disableOutputEscaping Property</H1>

<P>Matches the <code class="ce">disable-output-escaping</code> attribute of the <code class="ce">&lt;xsl:text&gt;</code> and <code class="ce">&lt;xsl:value-of&gt;</code> elements. For example, normally escaped built-in entities such as "&amp;amp;" for "&amp;" are passed through literally.</P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Implementation Syntax</H4>

<PRE class="syntax">Property Let IMXWriter_disableOutputEscaping(ByVal RHS As Boolean)
Property Get IMXWriter_disableOutputEscaping() As Boolean</PRE>

<H4 class="dtH4">Usage Syntax</H4>

<PRE class="syntax">oMXXMLWriter.disableOutputEscaping = boolValue
boolValue = oMXXMLWriter.disableOutputEscaping</PRE>

<H4 class="dtH4">Remarks</H4>

<P>Boolean. Read/write. The <code class="ce">disableOutputEscaping</code> property has no effect for DOM output.</P>

<H4 class="dtH4">Example</H4>

<P>In some cases, you may want to merge an XML document fragment with an XML document. If the document fragment has not been parsed, the "&amp;" character will be escaped as "&amp;amp;" in the document fragment. However, if you merge the document fragment into an XML document, the "&amp;amp;" will be escaped again when it is parsed. To avoid the situation where an already escaped character is escaped again, you can set the <code class="ce">disableOutputEscaping</code> property to True. The following code sample manually generates an XML document to demonstrate how this works. For the first element created, <code class="ce">disableOutputEscaping</code> is left as False, resulting in a double-escaped character. However, in the second element generated, <code class="ce">disableOutputEscaping</code> is set to True, enabling the "GG&amp;amp;G" value to be passed through as intended.</P>

<P class="label"><B>Visual Basic File (Form1.frm)</B></P>

<PRE class="code">Private Sub Command1_Click()

   Dim wrt As New MXXMLWriter50
   Dim cnth As IVBSAXContentHandler
   Dim atrs As New SAXAttributes50
   Set cnth = wrt

   'Starts the document by addding the XML declaration.
   cnth.startDocument

   'This section escapes the character.
   cnth.startElement "", "", "company", atrs
   cnth.characters "GG&amp;amp;G"
   cnth.endElement "", "", "company"

   'This section passes the escaped character through as a literal.
   wrt.disableOutputEscaping = True
   cnth.startElement "", "", "company", atrs
   cnth.characters "GG&amp;amp;G"
   cnth.endElement "", "", "company"

   'Ends the document.
   cnth.endDocument

   MsgBox wrt.output

End Sub</PRE>

<P class="labelproc"><B>Try It!</B>

<OL type="1">
	<LI>Open Visual Basic and create a new <B>Standard EXE</B> project.</li>

	<LI>Create a reference in the project to <B>Microsoft XML, v5.0</B>.</li>

	<LI>Add a command button (<B>Command1</B>) to the application form (<B>Form1</B>).</li>

	<LI>From the <B>View</B> menu, click <B>Code</B>.</li>

	<LI>Use copy and paste to replace any code in the form with the code provided above.</li>

	<LI>From the <B>Run</B> menu, click <B>Start</B>.</li>

	<LI>In the test application, click <B>Command1</B> (the command button).</li>
</OL>

<P class="label"><B>Output</B></P>

<P>The output in the message box is as follows:</P>

<PRE class="code">&lt;?xml version="1.0" encoding="UTF-16" standalone="no"?&gt;
&lt;company&gt;GG&amp;amp;amp;G&lt;/company&gt;
&lt;company&gt;<code><b class="cfe">GG&amp;amp;G</b></code>&lt;/company&gt;</PRE>

<P>Note that the "&amp;" character has been escaped twice in the first <code class="ce">&lt;company&gt;</code> element ("GG&amp;amp;amp;G") and passed through as intended (shown in bold) in the second <code class="ce">&lt;company&gt;</code> element.</P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Syntax</H4>

<PRE class="syntax">[propput]
HRESULT disableOutputEscaping (
   [in] VARIANT_BOOL fValue);</PRE>

<PRE class="syntax">[propget]
HRESULT disableOutputEscaping (
   [out, retval] VARIANT_BOOL * fValue);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>fValue</I></DT>

<DD>Boolean.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if no errors are reported.</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<P>If this property is set to True, the XML output may not be well-formed or valid. The <code class="ce">disableOutputEscaping</code> property has no effect for DOM output.</P>

<P>The <code class="ce">XSLProcessor</code> object does not implement the <code class="ce">disableOutputEscaping</code> property.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=21%>Value</TH>
<TH width=79%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=21%>True</TD>
<TD width=79%>Writer cannot escape input when writing output.</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>False (default)</TD>
<TD width=79%>Writer should escape input when writing output.</TD>
</TR>
</table></div>

<P class="fineprint"></P>
</div><!-- [C/C++] -->

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_mxhtmlwriter_11rn.htm">MXHTMLWriter CoClass</A> | <A HREF="sax_mxxmlwriter_0m5v.htm">MXXMLWriter CoClass</A></P>

<P>Applies to: <A HREF="sax_imxwriter_9f39.htm">IMXWriter Interface</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
