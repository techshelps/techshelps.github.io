<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>parse Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="parse_method"></A>parse Method</H1>

<P>Parses an XML document or a <code class="ce">DOMDocument</code> object.</P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<P>An application can use this method to instruct the reader to begin parsing a document from any valid input source, including a <code class="ce">DOMDocument</code> object, character stream, byte stream, or Uniform Resource Identifier (URI). An application cannot invoke this method while a parsing is in progress. Instead, it should create a new instance of the reader for each nested XML document. After parsing is complete, an application can reuse the same reader object, possibly with a different input source.</P>

<H4 class="dtH4">Usage Syntax</H4>

<PRE class="syntax">oSAXXMLReader.parse(varInput)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>varInput</I></DT>

<DD>A variant (or a reference to one) containing the input source to parse from. The following VARIANT types are supported:

<UL type="disc">
	<LI>VT_BSTR, which can contain a value of BSTR type.</li>

	<LI>Either VT_ARRAY or VT_UI1, which can contain a value in the form of a safe array of bytes.</li>

	<LI>VT_UNKNOWN or VT_DISPATCH, which can contain a value in the form of either an <code class="ce">IStream</code>, <code class="ce">ISequentialStream</code>, or <code class="ce">IXMLDOMDocument</code>.</li>
</UL>


<P>When using references (VT_BYREF), more than one level of indirection is permitted.


<P>An application cannot invoke this method while parsing is in progress. Instead, it should create a new instance of the reader for each nested XML document. After parsing is complete, an application can reuse the same reader object, possibly with a different input source.
</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<P>During parsing, the reader provides information about the XML document through the registered event handlers. If an error occurs during parsing, the reader calls the appropriate method of the <code class="ce">ErrorHandler</code>. The <code class="ce">ErrorHandler</code> always returns the internal error code to the <code class="ce">parse</code> method, even if the <code class="ce">ErrorHandler</code> raises a user-defined error.</P>

<H4 class="dtH4">Example</H4>

<P>The following example loads <B>books.xml</B> into a <code class="ce">DOMDocument</code> object, specifies the object as a parameter of the <code class="ce">parse</code> method, and then displays the result in a message box.</P>

<PRE class="code">Sub Main()
'create the reader
Dim rdr As New SAXXMLReader50
'create the writer
Dim wrt As New MXXMLWriter50

On Error GoTo errorHandler

wrt.byteOrderMark = True
wrt.omitXMLDeclaration = False
wrt.indent = True

'set the writer to the content handler
Set rdr.contentHandler = wrt
Set rdr.dtdHandler = wrt
Set rdr.errorHandler = wrt
rdr.putProperty "http://xml.org/sax/properties/lexical-handler", wrt
rdr.putProperty "http://xml.org/sax/properties/declaration-handler", wrt

'parse the XML
rdr.parse "&lt;catalog&gt;&lt;book id='bk101'&gt;&lt;/book&gt;&lt;/catalog&gt;"

'show the results in a message box
MsgBox wrt.output

Exit Sub

errorHandler:
    HandleErrors
End Sub

Private Function HandleErrors()
    MsgBox Err.Description
End Function</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<P>The application can use this method to instruct the reader to begin parsing a document from a variety of sources. Supported VARIANT types are: VT_BSTR, which can contain a value of BSTR type; either VT_ARRAY or VT_UI1, which can contain a value in the form of a safe array of bytes; or VT_UNKNOWN, which can contain a value in the form of either an IStream, ISequentialStream or IXMLDOMDocument.</P>

<PRE class="code">   VT_BYREF | VT_VARIANT -&gt; VT_BSTR -&gt; BSTR
   VT_BYREF | VT_VARIANT -&gt; VT_UNKNOWN -&gt;  VT_DISPATCH -&gt;IStream | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ISequentialStream
   VT_BYREF | VT_VARIANT -&gt; VT_UNKNOWN -&gt; VT_DISPATCH -&gt; IXMLDOMDocument
   VT_BYREF | VT_VARIANT -&gt; VT_ARRAY | VT_UI1 -&gt; SAFEARRAY</PRE>

<P>When using references (VT_BYREF). more than one level of indirection is permitted.</P>

<P>An application cannot invoke this method while parsing is in progress. Instead, it should create a new instance of the reader for each nested XML document. After parsing is complete, an application can reuse the same reader object, possibly with a different input source.</P>

<H4 class="dtH4">Syntax</H4>

<PRE class="syntax">HRESULT parse (
&nbsp;&nbsp;&nbsp;[in] VARIANT varInput);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>varInput</I> [in]</DT>

<DD>Either a variant (VT_VARIANT) or a reference to one containing the input source to parse from. Supported VARIANT types and their data types for actual values are:

<P>VT_BSTR (BSTR)


<P>VT_ARRAY or VT_UI1 (SafeArray of bytes)


<P>VT_UNKNOWN or VT_DISPATCH (IStream, ISequentialStream, or IXMLDOMDocument).
</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if parsing is successful.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if <I>varInput </I>is not a recognized input source.</dd>

<DT>Other</DT>

<DD>The parser error code or the code returned by the custom <code class="ce">ErrorHandler</code>.</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<P>During parsing, the reader provides information about the XML document through the registered event handlers. If an error occurs during parsing, the reader calls the appropriate method of the <code class="ce">ISAXErrorHandler</code> interface. If the <code class="ce">ErrorHandler</code> returns anything but S_OK, parsing is aborted and the <code class="ce">parse</code> method returns the internal error that stopped the parser. The <code class="ce">ErrorHandler</code> always returns the internal error code, even if the <code class="ce">ErrorHandler</code> returns a user-defined HRESULT to the <code class="ce">parse</code> method. The reader can return a number of return codes, including, but not limited to: E_ACCESSDENIED, INET_E_OBJECT_NOT_FOUND, INET_E_DOWNLOAD_FAILURE, MSG_E_BADSTARTNAMECHAR, or MSG_E_MISSINGSEMICOLON.</P>
</div><!-- [C/C++] -->

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_devgd_hdi_domtosax_58vs.htm">Convert DOM to SAX</A> | <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A> | <A HREF="sax_isaxerrorhandler_2syt.htm">ISAXErrorHandler Interface</A> | <A HREF="sax_isaxxmlreader_4yk9.htm">contentHandler Property (Visual Basic)</A> | <A HREF="sax_isaxxmlreader_2epl.htm">dtdHandler Property (Visual Basic)</A> | <A HREF="sax_isaxxmlreader_2zg9.htm">entityResolver Property (Visual Basic)</A> | <A HREF="sax_isaxxmlreader_1lkp.htm">errorHandler Property (Visual Basic)</A> | <A HREF="sax_isaxxmlreader_5c84.htm">putContentHandler Method (C/C++)</A> | <A HREF="sax_isaxxmlreader_9gdg.htm">putDTDHandler Method (C/C++)</A> | <A HREF="sax_isaxxmlreader_2944.htm">putEntityResolver Method (C/C++)</A> | <A HREF="sax_isaxxmlreader_4p0k.htm">putErrorHandler Method (C/C++)</A></P>

<P>Applies to: <A HREF="sax_isaxxmlreader_6nmt.htm">ISAXXMLReader Interface</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
