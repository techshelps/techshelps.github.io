<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Example 1: Comparing an Inline to an External Schema</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconinlineschema_example1"></A>Example 1: Comparing an Inline to an External Schema</H1>

<P>To get started using inline schemas, we will look at an abridged version of the <A HREF="sdk_booksxml_30rw.htm">sample XML file (books.xml)</A> (use-inline.xml). This file has been modified to include an inline schema, which will be used to validate the contents of any <code class="ce">&lt;book&gt; element nodes that appear in the non-schema portion of the XML document</code>. The inline schema is nested within an <A HREF="xsd_ref_1m9g.htm">&lt;xsd:schema&gt;</A> element.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;By design, inline schemas are never applied to the root element when validating document contents. </BLOCKQUOTE>



<P class="label"><B><A NAME="xmconinlineschema_example1_use_inline"></A>File: use-inline.xml</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;catalog xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
&lt;!-- START OF SCHEMA --&gt;
&lt;xsd:schema&gt;
 &lt;xsd:element name="book"&gt;
  &lt;xsd:complexType&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="author" type="xsd:string"/&gt;
      &lt;xsd:element name="title" type="xsd:string"/&gt;
      &lt;xsd:element name="genre" type="xsd:string"/&gt;
      &lt;xsd:element name="price" type="xsd:float"/&gt;
      &lt;xsd:element name="publish_date" type="xsd:date"/&gt;
      &lt;xsd:element name="description" type="xsd:string"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="id" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
 &lt;/xsd:element&gt;
&lt;/xsd:schema&gt;
&lt;!-- END OF SCHEMA --&gt;
   &lt;book id="bk101"&gt;
      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
      &lt;title&gt;XML Developer's Guide&lt;/title&gt;
      &lt;genre&gt;Computer&lt;/genre&gt;
      &lt;price&gt;44.95&lt;/price&gt;
      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
      &lt;description&gt;An in-depth look at creating applications with
      XML.&lt;/description&gt;
   &lt;/book&gt;
&lt;/catalog&gt;</PRE>

<P>The inline schema version of the sample document is treated exactly the same as the external schema version of the same file (use-external.xml) provided below. In the external version, the only differences are the following:

<UL type="disc">
	<LI>At the <code class="ce">&lt;catalog&gt;</code> element, the XML schema instancing ("<code class="ce">xsi:</code>") namespace is declared.</li>

	<LI>At the <code class="ce">&lt;book&gt;</code> element, the <code class="ce">xsi:schemaLocation</code> schema instance attribute is used to declare that the contents of the <code class="ce">&lt;book&gt;</code> element can be validated against a schema contained in an external XSD file (books1.xsd), located in the same directory.</li>
</UL>



<P class="label"><B><A NAME="xmconinlineschema_example1_use_external"></A>File: use-external.xml</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;catalog xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         <code><b class="cfe">xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</b></code>&gt;
   &lt;book <code><b class="cfe">xsi:schemaLocation="book books1.xsd"</b></code> id="bk101"&gt;
      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
      &lt;title&gt;XML Developer's Guide&lt;/title&gt;
      &lt;genre&gt;Computer&lt;/genre&gt;
      &lt;price&gt;44.95&lt;/price&gt;
      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
      &lt;description&gt;An in-depth look at creating applications with
      XML.&lt;/description&gt;
   &lt;/book&gt;
&lt;/catalog&gt;</PRE>



<P class="label"><B><A NAME="xmconinlineschema_example1_books1"></A>File: books1.xsd</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsd:schema&gt;
 &lt;xsd:element name="book"&gt;
  &lt;xsd:complexType&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="author" type="xsd:string"/&gt;
      &lt;xsd:element name="title" type="xsd:string"/&gt;
      &lt;xsd:element name="genre" type="xsd:string"/&gt;
      &lt;xsd:element name="price" type="xsd:float"/&gt;
      &lt;xsd:element name="publish_date" type="xsd:date"/&gt;
      &lt;xsd:element name="description" type="xsd:string"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="id" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
 &lt;/xsd:element&gt;
&lt;/xsd:schema&gt;</PRE>



<P class="label"><B><A NAME="xmconinlineschema_example1_validatevbs"></A>File: validate.vbs</B></P>

<PRE class="code">  'Create an XML DOMDocument object.
  Dim xmldom, sXmlFile
  Set xmldom = CreateObject("MSXML2.DOMDocument.5.0")

  'Get the name of the file to validate as user input.
  sXmlFile = InputBox("Enter the name of the file to validate:", _
             Wscript.ScriptName, "use-inline.xml")

  'Load and validate the specified file into the DOM.
  xmldom.async = False
  xmldom.validateOnParse = True
  xmldom.load sXmlFile

  'Return validation results in message to the user.
  If xmldom.parseError.errorCode &lt;&gt; 0 Then
     MsgBox xmldom.parseError.errorCode &amp; " " &amp; _
     xmldom.parseError.reason
  Else
     Dim node
     xmldom.setProperty "SelectionLanguage", "XPath"
     Set node = xmldom.selectSingleNode("//book")
     MsgBox "Validation successful" &amp; vbCrLf &amp; _
            "=====================" &amp; vbCrLf &amp; node.xml
  End If</PRE>

<P class="labelproc"><B>Try It!</B>

<OL type="1">
	<LI>Copy the <A HREF="#xmconinlineschema_example1_use_inline">inline schema version</A> of the sample XML file above and paste it into a text file. Save the file as <B>use-inline.xml</B>.</li>

	<LI>Copy the <A HREF="#xmconinlineschema_example1_use_external">external schema version</A> of the sample XML file from above. Paste it into a text file, and save the file as <B>use-external.xml</B> in the same directory where you saved <B>use-inline.xml</B>.</li>

	<LI>Copy the <A HREF="#xmconinlineschema_example1_books1">XSD schema</A> for the <code class="ce">&lt;book&gt;</code> element from above. Paste it into a text file, and save the file as <B>books1.xsd</B> in the same directory where you saved the file in the previous steps.</li>

	<LI>Copy the <A HREF="#xmconinlineschema_example1_validatevbs">VBScript code</A> above. Paste it into a text file, and save the file as <B>validate.vbs</B>. Use the same directory as you did in the previous steps.</li>

	<LI>Double-click <B>validate.vbs</B>.
<P>An input box will appear that allows you to specify the name of the file to validate.
</li>

	<LI>Click <B>OK</B> to validate the default file (<B>use-inline.xml</B>).</li>

	<LI>Repeat the previous step but substitute the version with the external XSD schema (<B>use-external.xml</B>) instead.
<P>Both the inline and external versions of the XML sample file should validate successfully and display the same output.
</li>
</OL>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_devvalidation_5837.htm">Using Inline Schemas (XSD)</A> | <A HREF="xsd_devvalidation_9tv6.htm">Example 2: Adding a Namespace to the Schema</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
