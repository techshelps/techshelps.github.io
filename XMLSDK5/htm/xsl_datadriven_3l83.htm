<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using the Built-in Template Rules</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconusingthebuiltintemplaterules"></A>Using the Built-in Template Rules</H1>

<P>MSXML versions 4.0 and later support the following two built-in template rules, as recommended by the November 1999 XSLT Recommendation. These templates make it easier to create style sheets for irregular data by passing text from the source document to the output automatically.</P>

<P>The first such built-in template rule is for element nodes and the root node. It works like this:</P>

<PRE class="code">&lt;xsl:template match="/|*"&gt;
   &lt;xsl:apply-templates/&gt;
&lt;/xsl:template&gt;</PRE>

<P>The second built-in template rule is for text and attribute nodes. It works as follows:</P>

<PRE class="code">&lt;xsl:template match="text()"&gt;
   &lt;xsl:value-of select="."/&gt;
&lt;/xsl:template&gt;</PRE>

<P>The built-in template for processing instructions and comments does nothing, as shown in the following:</P>

<PRE class="code">&lt;xsl:template match="processing-instruction()|comment()"/&gt;</PRE>

<P>On their own, these templates provide for a complete, though simple, transformation of the source document. Elements and the document root are traversed, although they do not generate any output themselves. The values of text nodes and CDATA sections are passed through. Comments and processing instructions are not processed and thus do not appear in the output. The end result is that these templates by themselves strip all markup from the source document but preserve the text.</P>

<P>To override these built-in templates, specify your own templates in the style sheet so that every node is handled.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
