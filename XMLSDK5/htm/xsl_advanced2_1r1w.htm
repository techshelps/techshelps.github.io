<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Processing a Tree Fragment as a Tree by Using msxsl:node-set()</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconprocessingatreefragmentasatreebyusingmsxslnodeset"></A>Processing a Tree Fragment as a Tree by Using msxsl:node-set()</H1>

<P>According to the XSLT specification, you can do only two things with a result tree fragment that is returned as the value of an <code class="ce">&lt;xsl:variable&gt;</code> or <code class="ce">&lt;xsl:param&gt;</code> element: copy the fragment to the result tree, or treat it as a string.</P>

<P>Often, however, you will want to treat the fragment as a tree or sub-tree, to enable processing by a further step (such as sorting or accumulating a sum).</P>

<P class="labelproc"><B>To treat a result tree fragment as a tree or sub-tree</B>

<OL type="1">
	<LI>Declare the <code class="ce">msxsl:</code> namespace. For more information, see <A HREF="xsl_advanced2_7xa0.htm">Declaring the msxsl: Namespace Prefix</A>.</li>

	<LI>Establish the result tree fragment, using a variable or parameter.</li>

	<LI>Convert the result tree fragment to a node-set, using the <code class="ce">msxsl:node-set()</code> function.</li>

	<LI>Use the converted node-set as you would use any other node-set, in XPath expressions, function calls, and so on.</li>
</OL>

<P>The following is a simple example of Step 4.</P>

<PRE class="code">&lt;xsl:value-of select="<code><b class="cfe">msxsl:node-set($emprecs)/employee</b></code>"/&gt;</PRE>

<P>This example treats the variable or parameter called <code class="ce">$emprecs</code> as if it were a tree of nodes. An instance of an <code class="ce">&lt;employee&gt;</code> child of that tree of nodes is created in the result tree.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
