<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Introduction to Filtering with XPath Predicates</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconintroductiontofilteringwithxpathpredicates"></A>Introduction to Filtering with XPath Predicates</H1>

<P>An XPath location path consists of one or more location <I>steps</I>, delimited by slashes. For example:</P>

<PRE class="code">/child::book/child::chapter/attribute::date_written</PRE>

<P>is an XPath location path which returns a node-set consisting of all <code class="ce">date_written</code> attributes of those <code class="ce">&lt;chapter&gt;</code> elements which themselves are children of the root <code class="ce">&lt;book&gt;</code> element.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;This example could also be expressed using XPath's abbreviated syntax as:</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">/book/chapter/@date_written</code></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Remaining examples in this topic will use the abbreviated syntax. For more information, see <A HREF="xpath_hdi_2_0sc3.htm">Using Abbreviations in XPath Expressions</A>.</BLOCKQUOTE>

<P>In general, the purpose of a location path is to return a set of one or more nodes&#0151;a node-set&#0151;meeting specified criteria. Each location step in the location path consists of an axis (explicit or defaulted to <code class="ce">child::</code>) relative to the context node, a node test, and an optional predicate. (The above example does not include a predicate in any of the three location steps.) All nodes which meet all criteria specified by the full location path are returned by the expression.</P>

<P>The general format of a predicate in a location step is:</P>

<PRE class="code">[<I>condition</I>]</PRE>

<P>where the square brackets, [ and ], are required, and <I>condition</I> represents some test typically resulting in a Boolean true or false value. The condition usually takes the form:</P>

<P><I>value operator value</I></P>

<P>If a particular condition itself may be represented as a Boolean true or false value, the predicate can take a simpler form:</P>

<PRE class="code">[value]</PRE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;This simplified form of the predicate is very important in limiting a location path only to nodes which have other nodes along a particular axis. If there are any nodes of the given name or type along the indicated axis, the result is true; if there are no such nodes, the result is false. Thus:</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">chapter[descendant::figure]</code></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
selects <code class="ce">&lt;chapter&gt;</code> elements which are children of the context node <I>only if</I> they have any descendant <code class="ce">&lt;figure&gt;</code> elements.</BLOCKQUOTE>

<P>As an example, the set of nodes returned by the location path at the beginning of this topic could be further limited as follows:</P>

<PRE class="code">/book/chapter<code><b class="cfe">[position()&amp;gt;1]</b></code>/@date_written<code><b class="cfe">[.="2001-05-12"]</b></code></PRE>

<P>This location path can be read, from left to right:

<OL type="1">
	<LI>Locate the root <code class="ce">&lt;book&gt;</code> element (<code class="ce">/book</code>).</li>

	<LI>Locate all <code class="ce">&lt;chapter&gt;</code> elements but the first, in document order, which are children of the root <code class="ce">&lt;book&gt;</code> element located by Step 1 (<code class="ce">chapter[position()&amp;gt;1]</code>).
<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;A predicate, like everything else in an XML document, must adhere to the XML rules for well-formed documents. Therefore, operators such as &gt; (in this example), &lt;, and &amp;, which have special meaning to XML parsers, must be escaped using entity references such as <code class="ce">&amp;gt;</code>, <code class="ce">&amp;lt;</code>, and <code class="ce">&amp;amp;</code> respectively.</BLOCKQUOTE>
</li>

	<LI>For the <code class="ce">&lt;chapter&gt;</code> elements selected by Step 2, locate all of their <code class="ce">date_written</code> attributes whose values equal the string <code class="ce">"2001-05-12"</code> (<code class="ce">@date_written[.="2001-05-12"]</code>).</li>
</OL>

<P>The result of evaluating this location path is a node-set consisting of the <code class="ce">date_written</code> attributes (if any) meeting all these criteria. If no <code class="ce">date_written</code> attributes meet the criteria, the result is an empty node-set.</P>

<P>White space between the value and operator terms in a predicate is not significant. Thus, the following two predicates produce the same result:</P>

<PRE class="code">[position()   =   1]
[position()=1]</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xpath_hdi_2_4s4h.htm">Use XPath Axes to Navigate through XML Data</A> | <A HREF="xpath_concepts5_07hh.htm">Determining the Context Node</A> | <A HREF="xpath_concepts2_8a40.htm">Constructing the Node-Test Portion of a Location Step</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
