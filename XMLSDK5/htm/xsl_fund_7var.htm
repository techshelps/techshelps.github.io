<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Selecting and Outputting Attributes</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconselectingandoutputtingattributes"></A>Selecting and Outputting Attributes</H1>

<P>The XPath syntax for selecting an attribute from a source document is to prefix the @ symbol to the name of the attribute. For example, <code class="ce">&lt;xsl:value-of select="@exchange"/&gt;</code> selects the value of an <code class="ce">exchange</code> attribute defined for the current element. The example in this topic extracts the value of the <code class="ce">exchange</code> attribute of <code class="ce">&lt;stock&gt;</code> elements, and inserts it into the output. For more information about selecting attributes, see <A HREF="xsl_xpath1_0mnn.htm">Using XPath Expressions to Select Nodes</A>.</P>

<P>There are two ways to generate an attribute in the result tree. The first way is to add the attribute to an output element. For example, in <B>portfolio-attributes.xsl</B>, below, a <code class="ce">BORDER</code> attribute is inserted directly into to the output <code class="ce">&lt;TABLE&gt;</code> element. This way is useful if you know the attribute value when you write the style sheet.</P>

<P>Alternatively, you can use the <code class="ce">&lt;xsl:attribute&gt;</code> instruction to create an attribute for any output element. This is useful when you must assign a data value from the source to the attribute at run time. For example, the following code fragment inserts a <code class="ce">TITLE</code> attribute to the outgoing <code class="ce">&lt;TR&gt;</code> element.</P>

<PRE class="code">&lt;TR&gt;
   <B>&lt;xsl:attribute name="TITLE"&gt;</B>&lt;xsl:value-of select="symbol"/&gt;
     is listed on the <B>&lt;xsl:value-of select="@exchange"/&gt; </B>
     stock exchange.
   <B>&lt;/xsl:attribute&gt;</B>
<B>   .....</B>
&lt;/TR&gt;</PRE>

<P>In this fragment, the attribute value is the content of the <code class="ce">&lt;xsl:attribute&gt;</code> element &#0151; that is, whatever is enclosed between the <code class="ce">&lt;xsl:attribute&gt; ... &lt;/xsl:attribute&gt;</code> tags. For the stock with the ZCXM symbol in this example, the <code class="ce">TITLE</code> attribute created above has a value of <code class="ce">"ZCXM is listed on the nyse stock exchange"</code>. This produces the output <code class="ce">&lt;TR&gt;</code> element, as follows:</P>

<PRE class="code">&lt;TR TITLE="ZCXM is listed on the nyse stock exchange"&gt;
   ...
&lt;/TR&gt;</PRE>

<P>You can use both of the above methods to add attributes to a single element, even in a single rule or operation. Be aware, however, of the following limitations.

<UL type="disc">
	<LI>You cannot add an attribute to an element that already has an attribute of that name.</li>

	<LI>Attributes added with <code class="ce">&lt;xsl:attribute&gt;</code> must appear before any child elements are added to the element.</li>
</UL>

<H4 class="dtH4">Example</H4>

<P>This example uses an XML source file and an XSLT style sheet.</P>

<P class="label"><B>XML File (portfolio-attributes.xml)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
<B>&lt;?xml-stylesheet type="text/xsl" href="portfolio-attributes.xsl"?&gt;</B>
&lt;portfolio xmlns:dt="urn:schemas-microsoft-com:datatypes" xml:space="preserve"&gt;
  &lt;stock exchange="nyse"&gt;
    &lt;name&gt;zacx corp&lt;/name&gt;
    &lt;symbol&gt;ZCXM&lt;/symbol&gt;
    &lt;price dt:dt="number"&gt;28.875&lt;/price&gt;
  &lt;/stock&gt;
  &lt;stock exchange="nasdaq"&gt;
    &lt;name&gt;zaffymat inc&lt;/name&gt;
    &lt;symbol&gt;ZFFX&lt;/symbol&gt;
    &lt;price dt:dt="number"&gt;92.250&lt;/price&gt;
  &lt;/stock&gt;
  &lt;stock exchange="nasdaq"&gt;
    &lt;name&gt;zysmergy inc&lt;/name&gt;
    &lt;symbol&gt;ZYSZ&lt;/symbol&gt;
    &lt;price dt:dt="number"&gt;20.313&lt;/price&gt;
  &lt;/stock&gt;
&lt;/portfolio&gt;</PRE>

<P class="label"><B>XSLT File (portfolio-attributes.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;
  &lt;xsl:template match="/"&gt;
    &lt;HTML&gt;
      &lt;BODY&gt;
        &lt;TABLE <code><b class="cfe">BORDER="2"</b></code>&gt;
          &lt;TR&gt;
            &lt;TD&gt;Symbol&lt;/TD&gt;
            &lt;TD&gt;Name&lt;/TD&gt;
            &lt;TD&gt;Price&lt;/TD&gt;
          &lt;/TR&gt;
          &lt;xsl:for-each select="portfolio/stock"&gt;
            &lt;TR&gt;
              <B>&lt;xsl:attribute name="TITLE"&gt;</B>&lt;xsl:value-of select="symbol"/&gt;
                is listed on the <B>&lt;xsl:value-of select="@exchange"/&gt; </B>
                stock exchange.<B>&lt;/xsl:attribute&gt;</B>
              &lt;TD&gt;&lt;xsl:value-of select="symbol"/&gt;&lt;/TD&gt;
              &lt;TD&gt;&lt;xsl:value-of select="name"/&gt;&lt;/TD&gt;
              &lt;TD&gt;&lt;xsl:value-of select="price"/&gt;&lt;/TD&gt;
            &lt;/TR&gt;
          &lt;/xsl:for-each&gt;
        &lt;/TABLE&gt;
      &lt;/BODY&gt;
    &lt;/HTML&gt;
  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="xsltportfolio-attributes.gif" ALT="" BORDER=0></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
