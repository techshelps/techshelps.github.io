<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ISAXXMLReader Interface</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="isaxxmlreader_interface"></A>ISAXXMLReader Interface</H1>

<P>The <code class="ce">ISAXXMLReader</code>/<code class="ce">IVBSAXXMLReader</code> interface allows an application to set and query features and properties in Microsoft&reg; XML Core Services (MSXML) 5.0 for Microsoft Office, register event handling for document processing, and initiate a document parse. MSXML provides the following CoClass that implements this interface.

<DL>
<DT><B>SAXXMLReader50</B></DT>

<DD>The version-dependent CoClass ties the application to msxml5.dll.

<P>(CLSID_SAXXMLReader50: 88d969c7-f192-11d4-a65f-0040963251e5)
</dd>
</DL>

<P>With MSXML 4.0 and later, you can throw SAX events from a <code class="ce">DOMDocument</code> object by specifying the <code class="ce">DOMDocument</code> object as the input parameter for the <code class="ce">parse</code> method. For more information, see <A HREF="sax_devgd_hdi_domtosax_58vs.htm">Convert DOM to SAX</A>.</P>

<H4 class="dtH4">Controlling Reader Behavior</H4>

<P>You can use the following methods to observe and control the behavior of the reader:

<DL>
<DT><A HREF="sax_isaxxmlreader_5m04.htm">getFeature</A></DT>

<DD>Allows an application to ask the reader if it supports a feature.</dd>

<DT><A HREF="sax_isaxxmlreader_7s4k.htm">putFeature</A></DT>

<DD>Allows an application to request that the reader turn a feature on or off.</dd>
</DL>

<H4 class="dtH4">Supported Features and Properties</H4>

<P>The Microsoft COM/Visual Basic&reg; implementation of SAX2 supports the following features (for example, a property whose value is Boolean).

<UL type="disc">
	<LI><code class="ce">"exhaustive-errors"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/external-general-entities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/external-parameter-entities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/lexical-handler/parameter-entities"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/namespaces"</code></li>

	<LI><code class="ce">"http://xml.org/sax/features/namespace-prefixes"</code></li>

	<LI><code class="ce">"preserve-system-identifiers"</code></li>

	<LI><code class="ce">"schema-validation"</code></li>

	<LI><code class="ce">"server-http-request"</code></li>
</UL>
<div class=filtered><span class="lang">[Visual Basic]</span>

<P>The reader recognizes the <code class="ce">"http://xml.org/sax/features/string-interning"</code> and <code class="ce">"schema-validation"</code> features. However, you cannot set these features in the current SAX2 implementation.</P>
</div><!-- [Visual Basic] -->

<P>The reader also provides methods (<code class="ce">getProperty</code>, <code class="ce">putProperty</code>) for getting and setting these properties.

<UL type="disc">
	<LI><code class="ce">"http://xml.org/sax/properties/lexical-handler"</code></li>

	<LI><code class="ce">"http://xml.org/sax/properties/declaration-handler"</code></li>

	<LI><code class="ce">"http://xml.org/sax/properties/dom-node"</code></li>

	<LI><code class="ce">"http://xml.org/sax/properties/xml-string"</code></li>

	<LI><code class="ce">"charset"</code></li>

	<LI><code class="ce">"schemas"</code></li>

	<LI><code class="ce">"schema-declaration-handler"</code></li>

	<LI><code class="ce">"xmldecl-encoding"</code></li>

	<LI><code class="ce">"xmldecl-version"</code></li>

	<LI><code class="ce">"xmldecl-standalone"</code></li>
</UL>

<H4 class="dtH4">Methods</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_5m04.htm">getFeature</A></TD>
<TD width=74%>Returns the Boolean value of a feature.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_7s4k.htm">putFeature</A></TD>
<TD width=74%>Sets the value of a feature.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_5604.htm">getProperty</A></TD>
<TD width=74%>Returns the value of a property (as a string), for any qualified Uniform Resource Identifier (URI).</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_41wk.htm">putProperty</A></TD>
<TD width=74%>Sets the value of a property.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_4zvo.htm">parse</A></TD>
<TD width=74%>Parses an XML document or a <code class="ce">DOMDocument</code> object.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_4dyc.htm">parseURL</A></TD>
<TD width=74%>Parses an XML document from a system identifier.</TD>
</TR>
</table></div>

<P class="fineprint"></P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<P>The <code class="ce">IVBSAXXMLReader</code> interface is implemented in the Simple API for XML (SAX2) applications to manage and execute the parsing of an XML document.</P>

<H4 class="dtH4">Creating an Instance of the Reader</H4>

<P>Typically, you create an instance of the reader in the Main form of a Visual Basic application. For example, first you declare a variable for holding a reference to the <code class="ce">IVBSAXXMLReader50</code> interface. You then create an instance of the reader and assign the interface to the object variable as follows:</P>

<PRE class="code">    Dim reader As SAXXMLReader50
    Set reader = New SAXXMLReader50</PRE>

<H4 class="dtH4">Creating an Instance of a Handler</H4>

<P>After you create an instance of the reader, you can create an instance of a <code class="ce">ContentHandler</code> or <code class="ce">ErrorHandler</code>, and then set them as properties of the reader object using the <code class="ce">contentHandler</code> and <code class="ce">errorHandler</code> properties.</P>

<P>The following code sample declares variables for the <code class="ce">ContentHandler</code> and <code class="ce">ErrorHandler</code> implementations, creates instances of these two handlers, and registers these handlers with the reader object by defining them as properties of the reader.</P>

<PRE class="code">    Dim reader As SAXXMLReader50
    Dim contentHandler As ContentHandlerImpl
    Dim errorHandler As ErrorHandlerImpl
    
    Set reader = New SAXXMLReader50
    Set contentHandler = New ContentHandlerImpl
    Set errorHandler = New ErrorHandlerImpl
    Set reader.contentHandler = contentHandler
    Set reader.errorHandler = errorHandler</PRE>

<H4 class="dtH4">Properties</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_5oc9.htm">baseURL</A></TD>
<TD width=74%>Sets the base URL for the current document.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_4yk9.htm">contentHandler</A></TD>
<TD width=74%>Sets the current <code class="ce">ContentHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_2epl.htm">dtdHandler</A></TD>
<TD width=74%>Sets the current <code class="ce">DTDHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_2zg9.htm">entityResolver</A></TD>
<TD width=74%>Sets the current <code class="ce">EntityResolver</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_1lkp.htm">errorHandler</A></TD>
<TD width=74%>Registers or returns the current <code class="ce">ErrorHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_022h.htm">secureBaseURL</A></TD>
<TD width=74%>Sets the secure base URL for the document.</TD>
</TR>
</table></div>

<P class="fineprint"></P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Registering Handlers</H4>

<P>An application can set and query features in the reader, register event handlers for document processing, and initiate a document parse. With this COM/C++ implementation of SAX2, the reader can use the following methods to register the corresponding handlers:

<DL>
<DT><A HREF="sax_isaxxmlreader_5c84.htm">putContentHandler</A></DT>

<DD>Registers a <code class="ce">ContentHandler</code>.</dd>

<DT><A HREF="sax_isaxxmlreader_9gdg.htm">putDTDHandler</A></DT>

<DD>Registers a <code class="ce">DTDHandler</code>.</dd>

<DT><A HREF="sax_isaxxmlreader_4p0k.htm">putErrorHandler</A></DT>

<DD>Registers an <code class="ce">ErrorHandler</code>.</dd>
</DL>

<H4 class="dtH4">Methods</H4>

<P>In addition to the preceding methods, the following also apply to the <code class="ce">ISAXXMLReader</code> interface.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_7qjo.htm">getBaseURL</A></TD>
<TD width=74%>Returns the base URL for the document.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_9wo4.htm">putBaseURL</A></TD>
<TD width=74%>Sets the base URL for the document.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_6tno.htm">getContentHandler</A></TD>
<TD width=74%>Returns the current <code class="ce">ContentHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_5c84.htm">putContentHandler</A></TD>
<TD width=74%>Allows an application to register a <code class="ce">ContentHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_1sx0.htm">getDTDHandler</A></TD>
<TD width=74%>Returns the current <code class="ce">DTDHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_9gdg.htm">putDTDHandler</A></TD>
<TD width=74%>Allows an application to register a <code class="ce">DTDHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_3qjo.htm">getEntityResolver</A></TD>
<TD width=74%>Returns the current <code class="ce">EntityResolver</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_2944.htm">putEntityResolver</A></TD>
<TD width=74%>Allows an application to register an <code class="ce">EntityResolver</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_3u04.htm">getErrorHandler</A></TD>
<TD width=74%>Returns the current <code class="ce">ErrorHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_4p0k.htm">putErrorHandler</A></TD>
<TD width=74%>Allows an application to register an <code class="ce">ErrorHandler</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_6338.htm">getSecureBaseURL</A></TD>
<TD width=74%>Returns the secure base URL for the document.</TD>
</TR>

<TR VALIGN="top">
<TD width=26%><A HREF="sax_isaxxmlreader_74mc.htm">putSecureBaseURL</A></TD>
<TD width=74%>Sets the secure base URL for the document.</TD>
</TR>
</table></div>

<P class="fineprint"></P>
</div><!-- [C/C++] -->

<H4 class="dtH4">Versioning</H4>

<P>MSXML 3.0 and later</P>

<H4 class="dtH4">Requirements</H4>

<P><B>Implementation:</B> msxml5.dll, msxml2.lib</P>
<div class=filtered><span class="lang">[C/C++]</span>

<P><B>Header and LIB files:</B> msxml2.h, msxml2.lib</P>
</div><!-- [C/C++] -->

<P><B>Version 5.0 Dependent ProgID:</B> SAXXMLReader50</P>

<P><B>Version 5.0 Dependent CLSID:</B> 88d969c7-f192-11d4-a65f-0040963251e5</P>

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
