<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>output Property</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="output_property"></A>output Property</H1>

<P>Sets the destination and the type of output for <code class="ce">IMXWriter</code>. By default, the <code class="ce">output</code> property is a BSTR (string) value. Output can be:

<UL type="disc">
	<LI>any implementation of the <code class="ce">IStream</code> interface. (The resulting document will be written into the provided <code class="ce">IStream</code>).</li>

	<LI>String.</li>

	<LI><code class="ce">DOMDocument</code> object.
<P>For more information about setting the <code class="ce">output</code> property to a <code class="ce">DOMDocument</code> object, see <A HREF="sax_devgd_hdi_saxtodom_6q2c.htm">Create a DOMDocument Object from SAX Events</A>.
</li>
</UL>

<P>Setting this property to the empty value (VT_EMPTY or " ") will return output to the internal string and reset it.</P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Implementation Syntax</H4>

<PRE class="syntax">Private Property Let IMXWriter_output(ByVal RHS As Variant)
Private Property Get IMXWriter_output() As Variant</PRE>

<H4 class="dtH4">Usage Syntax</H4>

<PRE class="syntax">oMXXMLWriter.output = varDestination
varDestination = oMXXMLWriter.output</PRE>

<H4 class="dtH4">Remarks</H4>

<P>Read/write. Variant destination.</P>

<H4 class="dtH4">Example</H4>

<P>The following example creates an instance of <code class="ce">MXXMLWriter</code> and sets it to the <code class="ce">ContentHandler</code>. Method calls on the <code class="ce">ContentHandler</code> are used to manually generate a document. In the sample, a <code class="ce">DOMDocument</code> object is created, and the writer output is set to the <code class="ce">DOMDocument</code> object. After the contents of the <code class="ce">output</code> property are loaded into a <code class="ce">DOMDocument</code> object, they are then displayed in message box.</P>

<P class="label"><B>XML File</B></P>

<P>Use <A HREF="sdk_booksxml_30rw.htm">books.xml</A>.</P>

<P class="label"><B>Visual Basic File (Form1.frm)</B></P>

<PRE class="code">Private Sub Command1_Click()
   Dim wrt As New MXXMLWriter50
   Dim cnth As IVBSAXContentHandler
   Dim atrs As New SAXAttributes50
   Dim xmlDoc As New DOMDocument50
   Dim currNode As IXMLDOMNode

   Set cnth = wrt
   wrt.output = xmlDoc
   cnth.startDocument

   cnth.startElement "", "", "catalog", atrs
   atrs.addAttribute "", "", "id", "CDATA", "bk101"
   cnth.startElement "", "", "book", atrs
   atrs.Clear

   cnth.startElement "", "", "author", atrs
   cnth.characters "Gambardella, Matthew"
   cnth.endElement "", "", "author"

   cnth.startElement "", "", "title", atrs
   cnth.characters "XML Developer's Guide"
   cnth.endElement "", "", "title"

   cnth.startElement "", "", "description", atrs
   cnth.characters "An in-depth look at creating applications with XML"
   cnth.endElement "", "", "description"

   cnth.endElement "", "", "book"
   cnth.endElement "", "", "catalog"

'Ends the document.
   cnth.endDocument

   Set currNode = xmlDoc.documentElement
   MsgBox currNode.xml

End Sub</PRE>

<P class="labelproc"><B>Try It!</B>

<OL type="1">
	<LI>Open Visual Basic and create a new <B>Standard EXE</B> project.</li>

	<LI>Create a reference in the project to <B>Microsoft XML, v5.0</B>.</li>

	<LI>Add a command button (<B>Command1</B>) to the application form (<B>Form1</B>).</li>

	<LI>From the <B>View</B> menu, click <B>Code</B>.</li>

	<LI>Use copy and paste to replace any code in the form with the code provided above.</li>

	<LI>From the <B>Run</B> menu, click <B>Start</B>.</li>

	<LI>In the test application, click <B>Command1</B> (the command button).</li>
</OL>

<P class="label"><B>Output</B></P>

<P>When run, the sample Visual Basic application should display in a message box the contents of the XML document element (the <code class="ce">&lt;catalog&gt;</code> element and all its node children) that was created using SAX <code class="ce">ContentHandler</code> method calls. </P>

<P>The output text should be this:</P>

<PRE class="code">&lt;catalog&gt;&lt;book id="bk101"&gt;&lt;author&gt;Gambardella, Matthew&lt;/author&gt;&lt;title&gt;XML Developer's Guide&lt;/title&gt;&lt;description&gt;An in-depth look at creating applications with XML&lt;/description&gt;&lt;/book&gt;&lt;/catalog&gt;</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Syntax</H4>

<PRE class="syntax">[propput]
HRESULT output (
   [in] VARIANT varDestination);</PRE>

<PRE class="syntax">[propget]
HRESULT output (
   [out, retval] VARIANT * varDestination);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>varDestination</I></DT>

<DD>The variant destination.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if no errors are reported.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The default is VT_EMPTY to output to string.</P>

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_mxhtmlwriter_11rn.htm">MXHTMLWriter CoClass</A> | <A HREF="sax_mxxmlwriter_0m5v.htm">MXXMLWriter CoClass</A></P>

<P>Applies to: <A HREF="sax_imxwriter_9f39.htm">IMXWriter Interface</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
