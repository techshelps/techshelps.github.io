<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Implementing Error Handling with XSLT and the DOM</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconimplementingerrorhandlingwithxsltanddom"></A>Implementing Error Handling with XSLT and the DOM</H1>

<P>This topic adds error handling functionality to the script in the previous topic, <A HREF="xsl_domprocess_2egd.htm">Using XSLT with the DOM from an HTML Page</A>.</P>

<P>XSLT does not provide a native error-detecting and error-reporting mechanism for determining whether a transformation works as intended, or for handling exceptions when they occur. To implement error-handling while processing XSLT or XML, use the following DOM facilities:

<UL type="disc">
	<LI>Set the <code class="ce">validateOnParse</code> property of a <code class="ce">DOMDocument</code> object. When this property is set to <code class="ce">"false"</code> before the object is loaded, the parser checks to see if the document is well-formed. When set to <code class="ce">"true"</code>, the parser validates the XML document against a DTD or its XML Schema definitions.</li>

	<LI>After an XSLT style sheet (or any other XML file) is loaded, check the <code class="ce">errorCode</code> property of the<code class="ce"> parseError</code> object (that is, <code class="ce">xmldom.parseError.errorCode</code>, where<code class="ce"> xmldom </code>is a DOM instance of the XML document). If the value of this property is <code class="ce">"0"</code>, the document was parsed without error. Any other value indicates that an error has occurred. To examine the nature of the error, check other properties of the <code class="ce">parseError</code> object. For example, the <code class="ce">xmldom.parseError.reason</code> property describes the cause of the error, and <code class="ce">xmldom.parseError.line</code> indicates where the error occurred. For more information, see <A HREF="xml_obj_ixmldomparseerror_0nn6.htm">IXMLDOMParseError Members</A>, in XML DOM Reference.</li>
</UL>

<H2 class="dtH2">Error Handling with the Region.xsl Example</H2>

<P>To validate the <B>region.xsl</B> style sheet, add the following JScript fragments to the <code class="ce">transformIt()</code> function within the HTML file, <B>qsalesregion.html</B>. For more information about the files for this example, see <A HREF="xsl_domprocess_2egd.htm">Using XSLT with the DOM from an HTML Page</A>.</P>

<P class="labelproc"><B>To add the following code to the transformIt() function</B>

<OL type="1">
	<LI>Insert the following line immediately after the declaration of the <code class="ce">objXSLT</code> object variable.
<PRE class="code">objXSLT.validateOnParse = true;</PRE>
</li>

	<LI>Insert the following lines immediately after the <code class="ce">objXSLT.load('region.xsl')</code> statement.
<PRE class="code">if (objXSLT.parseError.errorCode != 0) 
{
  var strErrMsg = "Problem Parsing Style Sheet:&lt;br /&gt;"
    + "  Error #: "             + objXSLT.parseError.errorCode + "&lt;br /&gt;"
    + "  Description: "         + objXSLT.parseError.reason + "&lt;br /&gt;"
    + "  In file: "             + objXSLT.parseError.url + "&lt;br /&gt;"
    + "  Line #: "              + objXSLT.parseError.line + "&lt;br /&gt;"
    + "  Character # in line: " + objXSLT.parseError.linepos + "&lt;br /&gt;"
    + "  Character # in file: " + objXSLT.parseError.filepos + "&lt;br /&gt;"
    + "  Source line: "         + objXSLT.parseError.srcText;
  objResTree.innerHTML = strErrMsg;
  return false;
}</PRE>
</li>
</OL>

<P>The resulting file is shown in <A HREF="xsl_domprocess_2xrb.htm">XSLT HTML DOM File with Error Handling</A>.</P>

<P>Similar logic for validating the XML document, <B>region.xml</B>, could be provided at analogous locations in the script.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_domprocess_71x0.htm">Performing Error Handling with XSLT</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
