<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Declaring the msxsl: Namespace Prefix</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcondeclaringthemsxslnamespaceprefix"></A>Declaring the msxsl: Namespace Prefix</H1>

<P>Before using the <code class="ce">msxsl:node-set()</code> function in an XSLT style sheet, you must declare the <code class="ce">msxml:</code> namespace prefix. Most often this is done in the root <code class="ce">&lt;xml:stylesheet&gt;</code> element of the style sheet, as shown below:</P>

<P class="label"><B>XSLT File (msxsldecl.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
<B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:msxsl="urn:schemas-microsoft-com:xslt"&gt;</B>

&lt;xsl:template match="text()"/&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P>As with other namespace declarations, the prefix (such as <code class="ce">msxsl:</code>) is not important. Only the namespace URI (that is, the value of the <code class="ce">xmlns</code> attribute) is important. To use the Microsoft implementation of the <code class="ce">node-set()</code> extension function, that value must be <code class="ce">"urn:schemas-microsoft-com:xslt"</code>. For example, you could use either of the following two namespace declarations, as long as all references to the <code class="ce">node-set()</code> function appear as <code class="ce">ms:node-set()</code> or <code class="ce">xyz:node-set()</code>, respectively.

<UL type="disc">
	<LI><code class="ce">xmlns:ms="urn:schemas-microsoft-com:xslt"</code></li>

	<LI><code class="ce">xmlns:xyz="urn:schemas-microsoft-com:xslt"</code></li>
</UL>

<P>Throughout this topic, we have used the <code class="ce">msxsl:</code> prefix.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The Uniform Resource Identifier (URI) for using Microsoft extensions to core W3C technologies takes the form of a Uniform Resource Name (URN), such as urn:schemas-microsoft-com:xslt. This is an accepted alternative to a Uniform Resource Locator (URL), such as http://www.w3.org/1999/XSL/Transform.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Also note that declaring the <code class="ce">msxsl:</code> namespace gives your style sheet access not only to the <code class="ce">msxsl:node-set()</code> function, but also to other Microsoft extensions, such as the <code class="ce">&lt;msxsl:script&gt; </code>element.</BLOCKQUOTE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
