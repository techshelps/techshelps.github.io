<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>XML Data Islands</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconxmldataislands"></A>XML Data Islands</H1>

<P>There is an increasing need to be able to embed "islands" of data inside HTML pages. In Microsoft&reg; Internet Explorer 5.0 and later, these data islands can be written in XML.</P>

<P>The following topics describe the syntax used for embedding these data islands within a page, and detail the object model exposed by the browser to enable them to be used. This method of embedding XML in HTML follows the note published by the World Wide Web Consortium (W3C) as the "XML in HTML Meeting Report." The W3C expects to evolve the HTML specification to include the capability of embedding XML in HTML documents.</P>

<H2 class="dtH2">Embedding an XML Data Island into an HTML Page</H2>

<P>An XML data island can be embedded using one of the following methods.

<UL type="disc">
	<LI>Using the Dynamic HTML (DHTML) <code class="ce">&lt;XML&gt;</code> element within the HTML document</li>

	<LI>Overloading the HTML <code class="ce">&lt;SCRIPT&gt;</code> element</li>
</UL>

<H3 class="dtH3">Using the XML Element Within the HTML Document</H3>

<P>This syntax is valid for Internet Explorer 5.0.</P>

<P>There are two syntactically correct ways of using the <code class="ce">&lt;XML&gt;</code> element within the HTML document.

<UL type="disc">
	<LI>The XML data can exist inline, surrounded by <code class="ce">&lt;XML&gt;&lt;/XML&gt;</code> start and end tags.
<PRE class="code">&lt;XML ID="XMLID"&gt;
  &lt;XMLDATA&gt;
    &lt;DATA&gt;TEXT&lt;/DATA&gt;
  &lt;/XMLDATA&gt;
&lt;/XML&gt;</PRE>
</li>

	<LI>The <code class="ce">&lt;XML&gt;</code> element can have a <code class="ce">SRC</code> attribute, the value of which is the URL for an XML data source.
<PRE class="code">&lt;XML SRC="http://localhost/xmlFile.xml"&gt;&lt;/XML&gt;</PRE>
</li>
</UL>

<P>The <code class="ce">&lt;XML&gt;</code> element is present in the HTML Document Object Model. It is in the DHTML <code class="ce">all</code> collection and is seen by the browser as just a regular node. The XML data within the <code class="ce">&lt;XML&gt;</code> element can then be accessed by calling the DHTML <code class="ce">XMLDocument</code> property on the <code class="ce">&lt;XML&gt;</code> element.</P>

<P>The <code class="ce">XMLDocument</code> property returns the root node of the XML within the <code class="ce">&lt;XML&gt;</code> element or the root node of the XML referenced by the value of the <code class="ce">SRC</code> attribute. From this root, the XML data island can be navigated using the XML Document Object Model (DOM). The following function returns the data from the data island with the ID of <code class="ce">"XMLID"</code>.</P>

<PRE class="code">function returnXMLData(){
  return document.all("XMLID").XMLDocument.nodeValue;
  }</PRE>

<P>The <code class="ce">&lt;XML&gt;</code> element can also be referenced by ID alone. For example, the following function has the identical functionality as the preceding example.</P>

<PRE class="code">function returnXMLData(){
  return XMLID.documentElement.text;
  }</PRE>

<P>Because the <code class="ce">XMLDocument</code> property was not used, the <A HREF="xml_pro_ae_6xro.htm">documentElement property</A> must be called to retrieve the root element of the XML.</P>

<H3 class="dtH3">Overloading the HTML &lt;SCRIPT&gt; Element</H3>

<P>This syntax has been deprecated and is intended only for down-level cases.</P>

<P>There are three syntactically correct ways of overloading the HTML <code class="ce">&lt;SCRIPT&gt;</code> element.

<UL type="disc">
	<LI>The <code class="ce">LANGUAGE</code> attribute can be given the value <code class="ce">"XML"</code>.
<PRE class="code">&lt;SCRIPT LANGUAGE="XML"&gt;</PRE>
</li>

	<LI>The <code class="ce">TYPE</code> attribute can be given the value <code class="ce">"text/xml"</code>.
<PRE class="code">&lt;SCRIPT TYPE="text/xml"&gt;</PRE>
</li>

	<LI>As with the <code class="ce">&lt;XML&gt;</code> element, a <code class="ce">SRC</code> attribute can be added, the value of which is the URL for an XML data source.
<PRE class="code">&lt;SCRIPT LANGUAGE="XML" SRC="http://localhost/xmlFile.xml"&gt;&lt;/SCRIPT&gt;</PRE>
</li>
</UL>

<P>The following HTML fragment illustrates how to embed data by overloading the <code class="ce">&lt;SCRIPT&gt;</code> element.</P>

<PRE class="code">&lt;SCRIPT ID="XMLID" LANGUAGE="XML"&gt;
  &lt;XMLDATA&gt;
    &lt;DATA&gt;TEXT&lt;/DATA&gt;
  &lt;/XMLDATA&gt;
&lt;/SCRIPT&gt;</PRE>

<P>The <code class="ce">&lt;SCRIPT&gt;</code> element is present in the HTML page's object model. (It is in the DHTML <code class="ce">all</code> collection and is seen by the browser as a regular script node.) The XML data within the <code class="ce">&lt;SCRIPT&gt;</code> elements can be accessed by calling the <code class="ce">XMLDocument</code> property on the <code class="ce">&lt;SCRIPT&gt;</code> object.</P>

<P>The following script accesses the XML data island in the preceding HTML fragment, and returns the name of the root node of the XML data island.</P>

<PRE class="code">function returnIslandRootName(){
  var islandRoot = document.all.("SCRIPT").XMLDocument;
  return islandRoot.nodeName;
  }</PRE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note&nbsp;&nbsp;&nbsp;</b>A tag that uses the name "XML" cannot be nested within an XML data island.</BLOCKQUOTE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
