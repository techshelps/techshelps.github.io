<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Source: loadDOM.cpp</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="dom_hdi_cpp_loaddom"></A>Source: loadDOM.cpp</H1>

<P>This C/C++ source code performs the following steps:

<OL>
	<LI>Creates an XML DOM object (<code class="ce">pXMLDom</code>) and sets it to synchronous mode.</li>

	<LI>Calls the <code class="ce">load</code> method on <code class="ce">pXMLDom</code>, specifying the path to <B>stocks.xml</B>.</li>
</OL>

<P class="label"><B>C/C++ Source File (loadDom.cpp)</B></P>

<PRE class="code">#include &lt;stdio.h&gt;
#include &lt;windows.h&gt;
#import &lt;msxml5.dll&gt; raw_interfaces_only
using namespace MSXML2;

// Macro that calls a COM method returning HRESULT value:
#define HRCALL(a, errmsg) \
do { \
    hr = (a); \
    if (FAILED(hr)) { \
        dprintf( "%s:%d  HRCALL Failed: %s\n  0x%.8x = %s\n", \
                __FILE__, __LINE__, errmsg, hr, #a ); \
        goto clean; \
    } \
} while (0)

// Helper function that put output in stdout and debug window
// in Visual Studio:
void dprintf( char * format, ...)
{
    static char buf[1024];
    va_list args;
    va_start( args, format );
    vsprintf( buf, format, args );
    va_end( args);
    OutputDebugStringA( buf);
    printf("%s", buf);
}

// Helper function to create a DOM instance:
IXMLDOMDocument * DomFromCOM()
{
   HRESULT hr;
   IXMLDOMDocument *pxmldoc = NULL;

    HRCALL( CoCreateInstance(__uuidof(DOMDocument50),
                      NULL,
                      CLSCTX_INPROC_SERVER,
                      __uuidof(IXMLDOMDocument),
                      (void**)&amp;pxmldoc),
            "Create a new DOMDocument");

    HRCALL( pxmldoc-&gt;put_async(VARIANT_FALSE),
            "should never fail");
    HRCALL( pxmldoc-&gt;put_validateOnParse(VARIANT_FALSE),
            "should never fail");
    HRCALL( pxmldoc-&gt;put_resolveExternals(VARIANT_FALSE),
            "should never fail");

   return pxmldoc;
clean:
   if (pxmldoc)
    {
      pxmldoc-&gt;Release();
    }
   return NULL;
}


int main(int argc, char* argv[])
{
   IXMLDOMDocument *pXMLDom=NULL;
   IXMLDOMParseError *pXMLErr=NULL;
   BSTR bstr = NULL;
   VARIANT_BOOL status;
   VARIANT var;
   HRESULT hr;

   CoInitialize(NULL);

   pXMLDom = DomFromCOM();
   if (!pXMLDom) goto clean;

   VariantInit(&amp;var);
   V_BSTR(&amp;var) = SysAllocString(L"stocks.xml");
   V_VT(&amp;var) = VT_BSTR;
   HRCALL(pXMLDom-&gt;load(var, &amp;status), "");

   if (status!=VARIANT_TRUE) {
      HRCALL(pXMLDom-&gt;get_parseError(&amp;pXMLErr),"");
      HRCALL(pXMLErr-&gt;get_reason(&amp;bstr),"");
      dprintf("Failed to load DOM from stocks.xml. %S\n",
               bstr);
      goto clean;
   }
   HRCALL(pXMLDom-&gt;get_xml(&amp;bstr), "");
   dprintf("XML DOM loaded from stocks.xml:\n%S\n",bstr);

clean:
   if (bstr) SysFreeString(bstr);
   if (&amp;var) VariantClear(&amp;var);
   if (pXMLErr) pXMLErr-&gt;Release();
   if (pXMLDom) pXMLDom-&gt;Release();

   CoUninitialize();
   return 0;
}</PRE>

<P class="labelproc"><B>To add loadDOM.cpp to the project</B>

<OL type="1">
	<LI>Create a new C++ source file. For detailed instructions on how to do this, see <A HREF="dom_hdi_9ypf.htm">Set Up My Visual C++ Project</A>. Name the new file <B>loadDOM.cpp</B>. </li>

	<LI>Copy the C/C++ source code above, and paste it into the source file you just created.</li>
</OL>

<P>Next, we'll add the <A HREF="dom_hdi_1ycz.htm">resource file</A>, <B>stocks.xml</B>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
