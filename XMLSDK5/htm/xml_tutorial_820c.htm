<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Use the XML Object Model</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmtuttut4usingtheobjmodel"></A>Use the XML Object Model</H1>

<H2 class="dtH2">What is the XML object model?</H2>

<P>The XML object model is a collection of objects that you use to access and manipulate the data stored in an XML document. The XML document is modeled after a tree, in which each element in the tree is considered a node. Objects with various properties and methods represent the tree and its nodes. Each node contains the actual data in the document.</P>

<H2 class="dtH2">How do I access the nodes in the tree?</H2>

<P>You access nodes in the tree by scripting against their objects. These objects are created by the XML parser when it loads and parses the XML document. You reference the tree, or document object, by its <code class="ce">ID</code> value. In the following example, <code class="ce">"MyXMLDocument"</code> is the document object's <code class="ce">ID</code> value. The document object's properties and methods give you access to the root and child node objects of the tree. The root, or document element, is the top-level node from which its child nodes branch out to form the XML tree. The root node can appear in the document only once.</P>

<P>Run the mouse over the following data island to reveal the code required to access each node. The root node is <code class="ce">&lt;class&gt;</code>, and its child node is <code class="ce">&lt;student&gt;</code>, which has child nodes of <code class="ce">&lt;name&gt;</code> and <code class="ce">&lt;GPA&gt;</code>.</P>
<DIV style="CURSOR: hand"><PRE CLASS=clsCode>&lt;<SPAN TITLE="document object: MyXMLDocument">XML ID="MyXMLDocument"</SPAN>&gt;<br>  &lt;<SPAN TITLE="root node: MyXMLDocument.documentElement&#13;&#10;tag name: MyXMLDocument.documentElement.nodeName">class</SPAN>&gt;<br>    &lt;<SPAN TITLE="first child of root node: MyXMLDocument.documentElement.childNodes.item(0)">student</SPAN> <SPAN TITLE="attribute name: MyXMLDocument.documentElement.childNodes.item(0).attributes.item(0).nodeName">studentID</SPAN>="<SPAN TITLE="attribute value: MyXMLDocument.documentElement.childNodes.item(0).getAttribute('studentID')">13429</SPAN>"&gt;<br>      &lt;<SPAN TITLE="first child node of student element: MyXMLDocument.documentElement.childNodes.item(0).childNodes.item(0)">name</SPAN>&gt;<SPAN TITLE="element's contents: MyXMLDocument.documentElement.childNodes.item(0).childNodes.item(0).text">James Smith</SPAN>&lt;/name&gt;<br>      &lt;<SPAN TITLE="second child node of student element: MyXMLDocument.documentElement.childNodes.item(0).childNodes.item(1)">GPA</SPAN>&gt;<SPAN TITLE="element's contents: MyXMLDocument.documentElement.childNodes.item(0).childNodes.item(1).text">3.8</SPAN>&lt;/GPA&gt;<br>    &lt;/student&gt;<br>  &lt;/class&gt;<br>&lt;/XML&gt;</PRE></DIV>
<P>The following list is a sample of the properties and methods that you use to access nodes in an XML document.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=39%>Property/Method</TH>
<TH width=61%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=39%><code class="ce">XMLDocument</code></TD>
<TD width=61%>Returns a reference to the XML Document Object Model (DOM) exposed by the object.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%><code class="ce">documentElement</code> </TD>
<TD width=61%>Returns the document root of the XML document.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%><code class="ce">childNodes</code> </TD>
<TD width=61%>Returns a node list containing the children of a node (if any).</TD>
</TR>

<TR VALIGN="top">
<TD width=39%><code class="ce">item</code> </TD>
<TD width=61%>Accesses individual nodes within the list through an index. Index values are zero-based, so <code class="ce">item(0)</code> returns the first child node.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%><code class="ce">text</code></TD>
<TD width=61%>Returns the text content of the node.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>The following code shows an HTML page containing an XML data island. The data island is contained within the <code class="ce">&lt;XML&gt;</code> element.</P>

<PRE class="code">&lt;HTML&gt;
  &lt;HEAD&gt;
    &lt;TITLE&gt;HTML with XML Data Island&lt;/TITLE&gt;
  &lt;/HEAD&gt;
  &lt;BODY&gt;
    &lt;P&gt;Within this document is an XML data island.&lt;/P&gt;
    &lt;XML ID="resortXML"&gt;
      &lt;resorts&gt;
        &lt;resort&gt;Adventure Works&lt;/resort&gt;
        &lt;resort&gt;Alpine Ski House&lt;/resort&gt;
      &lt;/resorts&gt;
    &lt;/XML&gt;
  &lt;/BODY&gt;
&lt;/HTML&gt;</PRE>
<XML ID="resortXML">  <resorts>    <resort>Adventure Works</resort>    <resort>Alpine Ski House</resort>  </resorts></XML>
<P>You access the data island through the <code class="ce">ID</code> value, <code class="ce">"resortXML"</code>, which becomes the name of the document object. In the preceding example, the root node is <code class="ce">&lt;resorts&gt;</code>, and the child nodes are <code class="ce">&lt;resort&gt;</code>.</P>

<P>The following code accesses the second child node of <code class="ce">&lt;resorts&gt;</code> and returns its text, <code class="ce">Alpine Ski House</code>.</P>

<PRE class="code">resortXML.XMLDocument.documentElement.childNodes.item(1).text</PRE>

<H2 class="dtH2">How do I persist XML DOM tree information?</H2>

<P>Several methods and interfaces are available for persisting DOM information.</P>

<P>If you are using a script language, the <code class="ce">DOMDocument</code> object exposes the <code class="ce">load</code>, <code class="ce">loadXML</code>, and <code class="ce">save</code> methods, and the <code class="ce">xml</code> property.</P>

<P>For Microsoft&reg; Visual Basic&reg; and C or C++ programmers, the <code class="ce">IXMLDOMDocument</code> interface exposes the same members as the <code class="ce">DOMDocument</code> object. The <code class="ce">IXMLDOMDocument</code> interface also implements standard COM interfaces such as <code class="ce">IPersistStreamInit</code>, <code class="ce">IPersistMoniker</code>, and <code class="ce">IStream</code>.</P>

<H2 class="dtH2">Try it!</H2>

<P>In the following text box, enter code to access a part of either of the preceding documents. Assume that the first document object is "MyXMLDocument" and the second is "resortXML". Then click the <B>Access XML</B> button to reveal the node you have referenced.</P>

<P>For an example, you can cut and paste this sample line of code: </P>

<PRE class="code">resortXML.XMLDocument.documentElement.childNodes.item(1).text</PRE>
<input STYLE="COLOR: #8b0000" NAME="accessCode" SIZE="70" onkeypress="checkPress(accessCode.value)"><input style="BACKGROUND-COLOR: #66ccff" TYPE="button" VALUE="Access XML" onclick="postCode(accessCode.value)"><xml ID="MyXMLDocument">  <class>    <student studentID="13429">        <name>James Smith</name>        <gpa>3.8</gpa>    </student>  </class></xml><script SRC="utilityfuncs.js"></script><script LANGUAGE="JScript">function postCode(x){	if(msieversion() >= 5)	{  if (x != ""){  try {	  var userCode = eval(x);      if (userCode.nodeName == null && userCode.length != 0){	    try {              if (userCode.item(0).nodeType == 1)	        alert("You have accessed the child elements of the '" + userCode.item(0).parentNode.nodeName + "' element.");	      else if (userCode.item(0).nodeType == 2)		    alert("You have accessed the attributes on the 'student' element.");		  else if (userCode.item(0).nodeType == 3)		    alert("You have accessed the text nodes of the '" + userCode.item(0).parentNode.nodeName + "' element.");		  }catch(e){alert(userCode);}	    }	  else if (userCode.nodeType == 1)	    alert("You have accessed the '" + userCode.nodeName + "' element.");	  else if (userCode.nodeType == 2)	    alert("You have accessed the '" + userCode.nodeName + "' attribute on the '" + userCode.parentNode.nodeName + "' element.");	  else if (userCode.nodeType == 3)	    alert("You have accessed the text node with the value of '" + userCode.nodeValue + "'.");	  else if (userCode.nodeType == 4)	    alert("You have created a CDATA object.");	  else if (userCode.nodeType == 5)	    alert("This document has no entity references.");	  else if (userCode.nodeType == 6)	    alert("This document has no entities.");	  else if (userCode.nodeType == 7)	    alert("You have created a processing instruction object.");	  else if (userCode.nodeType == 8)	    alert("You have created a comment object.");	  else if (userCode.nodeType == 9)	    alert("You have accessed the document object.");	  else if (userCode.nodeType == 10)	    alert("This document does not have a doctype declaration.");	  else if (userCode.nodeType == 11)	    alert("You have created a documentFragment.");	  else if (userCode.nodeType == 12)	    alert("This document has no notations.");	  else alert("You have accessed a nodelist with the length of 0.");	  }catch(e){alert("There is either a bug in your code or you\n" +	                   "are not accessing part of the tree.");}        }  else alert("You must first enter some code into the text box.");	}else		versionerror();  }function checkPress(codeData){  if (event.keyCode == 13 && event.srcElement.name == "accessCode") {    postCode(codeData);	event.keyCode = 0;	}  }</script>
<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
