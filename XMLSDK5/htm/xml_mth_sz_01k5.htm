<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>validate Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthvalidate"></A>validate Method</H1>

<P>Performs run-time validation on the currently loaded document using the currently loaded document type definition (DTD), schema, or schema collection.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">objXMLDOMDocument2.validate();</PRE>

<H4 class="dtH4">Return Value</H4>

<P>A <code class="ce">ParseError</code> object indicating exactly what error occurred, if any.</P>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft® JScript® example shows how to validate at runtime.</P>

<PRE class="code">var xmldoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
xmldoc.async = false
// This will validate on load because validateOnParse is set to true 
// by default.
xmldoc.load("http://server/myData.xml");
// You make a change to an attribute:
xmldoc.documentElement.setAttribute("a", "123");
// Now you want to verify your document is still valid:
var err = xmldoc.validate();
if (err.errorCode == 0)
{
   alert("Document is valid");
}
else
{
   alert("Validation error:" + err.reason);
} </PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">objXMLDOMDocument2.validate</PRE>

<H4 class="dtH4">Return Value</H4>

<P>A <code class="ce">ParseError</code> object indicating exactly what error occurred, if any.</P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT validate(IXMLDOMParseError ** errorObj);</PRE>

<H4 class="dtH4">C/C++ Return Values</H4>

<P>An <code class="ce">IErrorInfo</code> containing a formatted error message indicating what went wrong, and one of the following HRESULTs (also returned in the <code class="ce">ErrorInfo.Number</code> property).</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=21%>Return value</TH>
<TH width=28%>Hexadecimal value</TH>
<TH width=51%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=21%>E_PENDING</TD>
<TD width=28%>0x8000000A</TD>
<TD width=51%>Document <code class="ce">readyState</code> is not 4, indicating the document is not completely loaded.</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>S_OK</TD>
<TD width=28%>0</TD>
<TD width=51%>The document is valid according to DTD or schemas.</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>S_FALSE</TD>
<TD width=28%>1</TD>
<TD width=51%>The document is invalid according to DTD or schemas. For error information, see the returned <code class="ce">IXMLDOMParseError</code> object.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>The following possible validation errors returned with S_FALSE are listed, together with the <code class="ce">errorCode</code> value.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=33%>Message ID</TH>
<TH width=33%>Error Code (Hex Value)</TH>
<TH width=34%>Message</TH>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_E_NODTD</TD>
<TD width=33%>0xC00CE224</TD>
<TD width=34%>The <code class="ce">validate</code> method failed because a DTD or schema was not specified in the document.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_E_NOTWF</TD>
<TD width=33%>0xC00CE223</TD>
<TD width=34%>The <code class="ce">validate</code> method failed because the document does not contain exactly one root node.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ENTITY_UNDEFINED</TD>
<TD width=33%>0xC00CE002</TD>
<TD width=34%>Reference to undefined entity '%1'.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_INFINITE_ENTITY_LOOP</TD>
<TD width=33%>0xC00CE003</TD>
<TD width=34%>Entity '%1' contains an infinite entity reference loop.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_NDATA_INVALID_PE</TD>
<TD width=33%>0xC00CE004</TD>
<TD width=34%>Cannot use the NDATA keyword in a parameter entity declaration.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_REQUIRED_NDATA</TD>
<TD width=33%>0xC00CE005</TD>
<TD width=34%>Cannot use a general parsed entity '%1' as the value for attribute '%2'.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_NDATA_INVALID_REF</TD>
<TD width=33%>0xC00CE006</TD>
<TD width=34%>Cannot use unparsed entity '%1' in an entity reference.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_EXTENT_IN_ATTR</TD>
<TD width=33%>0xC00CE007</TD>
<TD width=34%>Cannot reference an external general parsed entity '%1' in an attribute value.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ELEMENT_UNDECLARED</TD>
<TD width=33%>0xC00CE00D</TD>
<TD width=34%>The element '%1' is used but not declared in the DTD or schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ELEMENT_ID_NOT_FOUND</TD>
<TD width=33%>0xC00CE00E</TD>
<TD width=34%>The attribute '%1' references the ID '%2', which is not defined in the document.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_EMPTY_NOT_ALLOWED</TD>
<TD width=33%>0xC00CE011</TD>
<TD width=34%>Element cannot be empty according to the DTD or schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ELEMENT_NOT_COMPLETE</TD>
<TD width=33%>0xC00CE012</TD>
<TD width=34%>Element content is incomplete according to the DTD or schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ROOT_NAME_MISMATCH</TD>
<TD width=33%>0xC00CE013</TD>
<TD width=34%>The name of the top-most element must match the name of the DOCTYPE declaration.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_INVALID_CONTENT</TD>
<TD width=33%>0xC00CE014</TD>
<TD width=34%>Element content is invalid according to the DTD or schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ATTRIBUTE_NOT_DEFINED</TD>
<TD width=33%>0xC00CE015</TD>
<TD width=34%>The attribute '%1' on this element is not defined in the DTD or schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ATTRIBUTE_FIXED</TD>
<TD width=33%>0xC00CE016</TD>
<TD width=34%>Attribute '%1' has a value that does not match the fixed value defined in the DTD or schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ATTRIBUTE_VALUE</TD>
<TD width=33%>0xC00CE017</TD>
<TD width=34%>Attribute '%1' has an invalid value according to the DTD or schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ILLEGAL_TEXT</TD>
<TD width=33%>0xC00CE018</TD>
<TD width=34%>Text is not allowed in this element according to the DTD or schema.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_MULTI_FIXED_VALUES</TD>
<TD width=33%>0xC00CE019</TD>
<TD width=34%>An attribute declaration cannot contain multiple fixed values: '%1'.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_ELEMENT_UNDEFINED</TD>
<TD width=33%>0xC00CE01C</TD>
<TD width=34%>Reference to undeclared element: '%1'.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_XMLNS_FIXED</TD>
<TD width=33%>0xC00CE01E</TD>
<TD width=34%>Attribute '%1' must be a #FIXED attribute.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_REQUIRED_ATTRIBUTE_MISSING</TD>
<TD width=33%>0xC00CE020</TD>
<TD width=34%>Required attribute '%1' is missing.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>XML_DTD_EXPECTING</TD>
<TD width=33%>0xC00CE026</TD>
<TD width=34%>Expecting: %1.</TD>
</TR>
</table></div>

<P class="fineprint"></P>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>This method only validates fully loaded documents (<code class="ce">readyState</code> == 4).</P>

<P>The <code class="ce">validate</code> method returns an <code class="ce">IXMLDOMParseError</code> that is independent of the value returned by the <code class="ce">parseError</code> property on a document. Only the <code class="ce">errorCode</code> and <code class="ce">reason</code> properties of the returned value are set.</P>

<P>Unlike the <code class="ce">load</code> method, <code class="ce">validate</code> will fail if there is no DTD or schema applied to the document element. Therefore, <code class="ce">validate</code> will not be able tell you whether the document is just well-formed.</P>

<P>The <code class="ce">validate</code> method does not parse new schemas, but can import a schema from a <code class="ce">SchemaCache</code> associated with the document through the <code class="ce">schemas</code> property. If there is no schema for a given namespace, the elements in that namespace will not be validated.</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_pro_pr_2r1w.htm">readyState Property</A> | <A HREF="xml_obj_ixmldomparseerror_7jqq.htm">IXMLDOMParseError</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomdocument2_7quq.htm">IXMLDOMDocument2</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
