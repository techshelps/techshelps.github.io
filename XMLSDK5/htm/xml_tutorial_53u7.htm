<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Use the Master/Detail Feature with the C++ XML Data Source Object</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmtuttut10usingmastdetfeaturewithcxmldso"></A>Use the Master/Detail Feature with the C++ XML Data Source Object</H1>
<script SRC="utilityfuncs.js"></script>
<H2 class="dtH2">What is the master/detail feature?</H2>

<P>The new master/detail feature allows you to bind to the current record of a hierarchical record set. This means that you can now bind the child elements of the current record to a distinct table. For example, consider the following XML.</P>

<PRE class="code">&lt;orders&gt;
  &lt;order order_number="2233"&gt;
    &lt;customer&gt;
      &lt;name&gt;James Smith&lt;/name&gt;
      &lt;custID&gt;192883&lt;/custID&gt;
    &lt;/customer&gt;
    &lt;item&gt;      
      &lt;name&gt;Fly Swatter&lt;/name&gt;    
      &lt;price&gt;9.99&lt;/price&gt;    
    &lt;/item&gt;  
  &lt;/order&gt; 
  &lt;order order_number="2234"&gt;  
    &lt;customer&gt;   
      &lt;name&gt;Marea Angela Castaneda&lt;/name&gt;      
      &lt;custID&gt;827145&lt;/custID&gt;  
    &lt;/customer&gt;    
    &lt;item&gt;    
      &lt;name&gt;Fly Paper&lt;/name&gt;    
      &lt;price&gt;15.99&lt;/price&gt;    
    &lt;/item&gt;  
  &lt;/order&gt;  
  &lt;order order_number="2235"&gt; 
    &lt;customer&gt;   
      &lt;name&gt;Amy Jones&lt;/name&gt;      
      &lt;custID&gt;998022&lt;/custID&gt;   
    &lt;/customer&gt;   
    &lt;item&gt;      
      &lt;name&gt;Mosquito Netting&lt;/name&gt;
      &lt;price&gt;38.99&lt;/price&gt;    
    &lt;/item&gt;
  &lt;/order&gt;
&lt;/orders&gt;</PRE>

<P>You can allow your user to navigate through the orders by ID, displaying only the customer and item information for the current order. Your user would not have to view the information for all orders&#0151;only for the one in which he or she is interested.</P>

<H2 class="dtH2">How do I bind to the details?</H2>

<P>The key to binding to lower levels in the hierarchy (the details) is to understand the structure of your data. The preceding XML has three elements within the root element, <code class="ce">&lt;orders&gt;</code>. Based on the heuristic employed by the XML Data Source Object (DSO), each order will be mapped to a rowset containing an "order_number", "customer", and "item" field. The "order_number" column will contain the value of the <code class="ce">order_number</code> attribute. The "customer" and "item" columns will contain pointers to respective "customer" and "item" recordsets. The "customer" recordset will then contain a "name" and "custID" field with the values of those elements within. The "item" recordset will contain a "name" and "price" field with the values of those elements within.</P>

<P>So, with this in mind, note that within the top-level (the "orders") recordset, you can get to the value of the "order_number." You will then allow your user to navigate through the orders by "order_number."</P>

<PRE class="code">&lt;P&gt;ORDER NUMBER: &lt;SPAN DATASRC="#xmlDoc" DATAFLD="order_number"&gt;&lt;/SPAN&gt;&lt;/P&gt;</PRE>

<P>Now add some buttons to help users move throughout the "orders" recordset.</P>

<PRE class="code">&lt;INPUT TYPE=BUTTON VALUE="Previous Order" onclick="xmlDoc.recordset.movePrevious()"&gt;
&lt;INPUT TYPE=BUTTON VALUE="Next Order" onclick="xmlDoc.recordset.moveNext()"&gt;</PRE>

<P>To retrieve the values within the child elements of the current record, create a table and set that table's <code class="ce">DATASRC</code> attribute to <code class="ce">"#xmlDoc"</code>, exactly as was done in the preceding example. However, this time also set its <code class="ce">DATAFLD</code> attribute to <code class="ce">"customer"</code>. This tells the table to bind to data within the "customer" recordset pointed at within the "customer" field of the "orders" recordset.</P>

<PRE class="code">&lt;TABLE DATASRC="#xmlDoc" DATAFLD="customer" BORDER&gt;
  &lt;THEAD&gt;&lt;TH&gt;NAME&lt;/TH&gt;&lt;TH&gt;ID&lt;/TH&gt;&lt;/THEAD&gt;
  &lt;TR&gt;
    &lt;TD&gt;&lt;SPAN DATAFLD="name"&gt;&lt;/SPAN&gt;&lt;/TD&gt;
    &lt;TD&gt;&lt;SPAN DATAFLD="custID"&gt;&lt;/SPAN&gt;&lt;/TD&gt;
  &lt;/TR&gt;
&lt;/TABLE&gt;</PRE>

<P>Then do the same for the data within the <code class="ce">&lt;item&gt;</code> element.</P>

<PRE class="code">&lt;TABLE DATASRC="#xmlDoc" DATAFLD="item" BORDER=1&gt;
  &lt;THEAD&gt;&lt;TR&gt;&lt;TH&gt;ITEM&lt;/TH&gt;&lt;TH&gt;PRICE&lt;/TH&gt;&lt;/TR&gt;&lt;/THEAD&gt;
  &lt;TR&gt;
    &lt;TD&gt;&lt;SPAN DATAFLD="name"&gt;&lt;/SPAN&gt;&lt;/TD&gt;
    &lt;TD&gt;&lt;SPAN DATAFLD="price"&gt;&lt;/SPAN&gt;&lt;/TD&gt;
  &lt;/TR&gt;
&lt;/TABLE&gt;</PRE>

<P>Now, as the user clicks the buttons and moves to the next and previous records in the recordset, the data in the tables will change to correspond to the current record.</P>

<P>Click the <B>Show Example</B> button to view the page created above.</P>
<script>function showExample(){	if(msieversion() >= 5)	{  if (insertTable.style.display == "none"){    showExamp.value = "Hide Example";    insertTable.style.display = "block";    }  else {    showExamp.value = "Show Example";    insertTable.style.display = "none";    }	} else		versionerror();}</script><input STYLE="BACKGROUND-COLOR: #66ccff" TYPE="BUTTON" NAME="showExamp" VALUE="Show Example" onclick="showExample()"><div ID="insertTable" style="display:none"><xml ID="xmlDoc"><orders>  <order order_number="2233">    <customer>      <name>James Smith</name>      <custid>192883</custid>    </customer>    <item>      <name>Fly Swatter</name>      <price>9.99</price>    </item>  </order>  <order order_number="2234">    <customer>      <name>Candice Calloway</name>      <custid>827145</custid>    </customer>    <item>      <name>Fly Paper</name>      <price>15.99</price>    </item>  </order>  <order order_number="2235">    <customer>      <name>Mandy Jones</name>      <custid>998022</custid>    </customer>    <item>      <name>Mosquito Netting</name>      <price>38.99</price>    </item>  </order></orders></xml><p>ORDER NUMBER: <span DATASRC="#xmlDoc" DATAFLD="order_number"></span></p><input STYLE="BACKGROUND-COLOR: #66ccff" TYPE="BUTTON" VALUE="Previous Order" onclick="Previous()"><input STYLE="BACKGROUND-COLOR: #66ccff" TYPE="BUTTON" VALUE="Next Order" onclick="Next()"><br><script LANGUAGE="JScript">function Previous(){if (xmlDoc.recordset.AbsolutePosition > 1)  xmlDoc.recordset.movePrevious();else  alert("Already at first record.");  }</script><script LANGUAGE="JScript">function Next(){if (xmlDoc.recordset.AbsolutePosition < xmlDoc.recordset.RecordCount)  xmlDoc.recordset.moveNext();else  alert("Already at last record.");  }</script><br><br><table><tr><td><table DATASRC="#xmlDoc" DATAFLD="customer" style="table-layout:fixed" BORDER>  <col width="150">  <col width="150">  <thead><th>NAME</th><th>ID</th></thead>  <tr>    <td><span DATAFLD="name"></span></td>    <td><span DATAFLD="custID"></span></td>  </tr></table></td><td><table DATASRC="#xmlDoc" DATAFLD="item" style="table-layout:fixed" BORDER>  <col width="150">  <col width="150">  <thead><th>ITEM</th><th>PRICE</th></thead>  <tr>    <td><span DATAFLD="name"></span></td>    <td><span DATAFLD="price"></span></td>  </tr></table></td></tr></table></div>
<H2 class="dtH2">Try it!</H2>

<P>See if you can use the preceding XML to create a Web page that will allow a user to navigate through the orders by customer name.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
