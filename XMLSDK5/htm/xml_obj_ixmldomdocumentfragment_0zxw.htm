<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IXMLDOMDocumentFragment</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmobjxmldomdocfragment"></A>IXMLDOMDocumentFragment</H1>

<P>A lightweight object that is useful for tree insert operations.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Example</H4>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var docFragment;
xmlDoc.async = false;
xmlDoc.loadXML("&lt;root/&gt;");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;docFragment = xmlDoc.createDocumentFragment();
&nbsp;&nbsp;&nbsp;docFragment.appendChild(xmlDoc.createElement("node1"));
&nbsp;&nbsp;&nbsp;docFragment.appendChild(xmlDoc.createElement("node2"));
&nbsp;&nbsp;&nbsp;docFragment.appendChild(xmlDoc.createElement("node3"));
&nbsp;&nbsp;&nbsp;alert(docFragment.xml);
&nbsp;&nbsp;&nbsp;xmlDoc.documentElement.appendChild(docFragment);
&nbsp;&nbsp;&nbsp;alert(xmlDoc.xml);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Example</H4>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim docFragment As IXMLDOMDocumentFragment
xmlDoc.async = False
xmlDoc.loadXML "&lt;root/&gt;"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set docFragment = xmlDoc.createDocumentFragment()
&nbsp;&nbsp;&nbsp;docFragment.appendChild xmlDoc.createElement("node1")
&nbsp;&nbsp;&nbsp;docFragment.appendChild xmlDoc.createElement("node2")
&nbsp;&nbsp;&nbsp;docFragment.appendChild xmlDoc.createElement("node3")
&nbsp;&nbsp;&nbsp;MsgBox docFragment.xml
&nbsp;&nbsp;&nbsp;xmlDoc.documentElement.appendChild docFragment
&nbsp;&nbsp;&nbsp;MsgBox xmlDoc.xml
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Example</H4>

<P>The following sample creates and appends a new <code class="ce">IXMLDOMDocumentFragment</code> to the root document element. It uses the following XML document.</P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;COLLECTION
   xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;DATE dt:dt="datetime"&gt;1998-10-13T15:56:00&lt;/DATE&gt;
  &lt;BOOK&gt;
    &lt;TITLE&gt;Lover Birds&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Cynthia Randall&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
  &lt;/BOOK&gt;
  &lt;BOOK&gt;
    &lt;TITLE&gt;The Sundered Grail&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Eva Corets&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Lucerne Publishing&lt;/PUBLISHER&gt;
  &lt;/BOOK&gt;
  &lt;BOOK&gt;
    &lt;TITLE&gt;Splish Splash&lt;/TITLE&gt;
    &lt;AUTHOR&gt;Paula Thurman&lt;/AUTHOR&gt;
    &lt;PUBLISHER&gt;Scootney&lt;/PUBLISHER&gt;
  &lt;/BOOK&gt;
&lt;/COLLECTION&gt;

#import "msxml5.dll"
using namespace MSXML2;

inline void TESTHR( HRESULT _hr ) 
   { if FAILED(_hr) throw(_hr); }

void XMLDOMDocumentFragmentSample()
{
      //HRESULT hr;
      try
      {
            IXMLDOMDocumentPtr docPtr;

            //init
            TESTHR(CoInitialize(NULL)); 
            TESTHR(docPtr.CreateInstance("Msxml2.DOMDocument.5.0"));

            // load a document
            _variant_t varXml(_T("c:\\book.xml"));
            _variant_t varOut((bool)TRUE);
            varOut = docPtr-&gt;load(varXml);
            if ((bool)varOut == FALSE)
            {// show error description - IXMLDOMParseError sample
                  IXMLDOMParseErrorPtr errPtr = docPtr-&gt;GetparseError();
                  _bstr_t bstrErr(errPtr-&gt;reason);

                  _tprintf(_T("Error:\n"));
                  _tprintf(_T("Code = 0x%x\n"), errPtr-&gt;errorCode);
                  _tprintf(_T("Source = Line : %ld; Char : %ld\n"), errPtr-&gt;line, errPtr-&gt;linepos);
                  _tprintf(_T("Error Description = %s\n"), (char*)bstrErr);
            }
            else
            {// dom fragment sample

                  // create a new node and add to the doc
                     _variant_t varTyp((short)NODE_ELEMENT);
                     _bstr_t varName(_T("BOOK"));
                     IXMLDOMNodePtr nodePtr= docPtr-&gt;createNode(varTyp, varName, "");
                     // create a doc fragment and associate the new node with it
                     IXMLDOMDocumentFragmentPtr fragPtr = docPtr-&gt;createDocumentFragment();
                     fragPtr-&gt;appendChild(nodePtr);
                     // add some elements to the new node
                     varName = _T("TITLE");
                     IXMLDOMNodePtr nodePtr1= docPtr-&gt;createNode(varTyp, varName, "");
                     nodePtr1-&gt;text = _T("Creepy Crawlies");
                     varName = "AUTHOR";
                     IXMLDOMNodePtr nodePtr2= docPtr-&gt;createNode(varTyp, varName, "");
                     nodePtr2-&gt;text = _T("Stefan Knorr");
                     nodePtr-&gt;appendChild(nodePtr1);
                     nodePtr-&gt;appendChild(nodePtr2);
                     // display the fragment contents
                     MessageBox(NULL, fragPtr-&gt;xml, "", MB_OK);
                     // add the fragment to the original doc
                     docPtr-&gt;documentElement-&gt;appendChild(fragPtr);
                     // display the modified doc contents
                     MessageBox(NULL, docPtr-&gt;xml, "", MB_OK);
              }

       }
       catch (_com_error &amp;e)
       {
              _tprintf(_T("Error:\n"));
              _tprintf(_T("Code = %08lx\n"), e.Error());
              _tprintf(_T("Code meaning = %s\n"), (char*) e.ErrorMessage());
              _tprintf(_T("Source = %s\n"), (char*) e.Source());
              _tprintf(_T("Error Description = %s\n"), (char*) e.Description());
       }
          catch(...)
       {
              _tprintf(_T("Unknown error!"));
       }
       CoUninitialize();
}</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The <code class="ce">DocumentFragment</code> object can represent a fragment of a document or portion of a document's tree. This makes it useful when implementing end user commands that allow users to rearrange a document, such as cutting and pasting.</P>

<P>The <code class="ce">DocumentFragment</code> node has special, defined behavior for <code class="ce">IXMLDOMNode</code> insert operations that makes it especially convenient for developers. When an <code class="ce">IXMLDOMDocumentFragment</code> is inserted into a <code class="ce">DOMDocument</code> node (or other node that can take children), the children of the <code class="ce">DocumentFragment</code> are inserted into the node rather than the <code class="ce">DocumentFragment</code> itself. This makes the <code class="ce">DocumentFragment</code> useful when the user wants to create nodes that are siblings; the <code class="ce">DocumentFragment</code> acts as the parent of these nodes so that the user can employ the standard methods from the <code class="ce">IXMLDOMNode</code> interface, such as <code class="ce">insertBefore</code> and <code class="ce">appendChild</code>.</P>

<P>The children of a <code class="ce">DocumentFragment</code> node make up zero or more nodes representing the tops of any subtrees defining the structure of the document. <code class="ce">DocumentFragment</code> nodes do not need to be well-formed XML documents (although they do need to follow the rules imposed upon well-formed XML parsed entities, which can have multiple top nodes). For example, a <code class="ce">DocumentFragment</code> might have only one child, and that child node could be a <code class="ce">Text</code> node. Such a structure model represents neither an HTML document nor a well-formed XML document.</P>

<P><code class="ce">IXMLDOMDocumentFragment</code> has no unique members of its own, but exposes the same members as <code class="ce">IXMLDOMNode</code>.</P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 2.0 and later</P>

<H4 class="dtH4">Requirements</H4>

<P><B>Implementation:</B> msxml5.dll, msxml2.lib</P>
<div class=filtered><span class="lang">[C/C++]</span>

<P><B>Header and IDL files:</B> msxml2.h, msxml2.idl</P>
</div><!-- [C/C++] -->

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_mth_ac_7yhw.htm">appendChild Method</A> | <A HREF="xml_mth_hn_0j51.htm">insertBefore Method</A> | <A HREF="xml_obj_ixmldomdocumentfragment_9xmc.htm">IXMLDOMDocumentFragment Members</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A> | <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
