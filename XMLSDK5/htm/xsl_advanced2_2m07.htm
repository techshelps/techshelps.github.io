<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using level="single" for Numbering</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconusinglevelsinglefornumbering"></A>Using level="single" for Numbering</H1>

<P>The <code class="ce">&lt;xsl:number&gt;</code> examples in the previous topic use the <code class="ce">level</code> attribute with a value of <code class="ce">"multiple"</code> to assign a series of hierarchical number strings such as 1.1.01, 1.1.02, and so on.</P>

<P>The <code class="ce">level</code> attribute can also take the values <code class="ce">"single"</code> and <code class="ce">"any"</code>. These are used to sequentially number elements, either at the same level in the document tree, or across all levels, respectively.</P>

<P>This topic demonstrates the effects of these two values by creating a non-empty template rule for the <code class="ce">&lt;tell&gt;</code> elements in the sample XML document, <B>cardgame.xml</B>. This file is in <A HREF="xsl_advanced2_1pda.htm">Inserting Automatic Numbering Using position()</A>.</P>

<P>The following is the template rule with <code class="ce">level="single"</code>.</P>

<PRE class="code">&lt;xsl:template match="tell"&gt;
    &lt;tr&gt;
        &lt;td colspan="3" align="center" class="tell"&gt;
            (Reaction #&lt;xsl:number <code><b class="cfe">level="single"</b></code> count="tell"/&gt;:
            &lt;xsl:value-of select="../@name"/&gt;
            &lt;xsl:text&gt; &lt;/xsl:text&gt;
            &lt;xsl:value-of select="."/&gt;)
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/xsl:template&gt;</PRE>

<P>The value <code class="ce">"single"</code> tells the XSLT processor to generate a sequential number that cycles through the elements whose names match the value of the <code class="ce">count</code> attribute. </P>

<P>The formatted output below shows the results. Note the numbering assigned to the reactions of Jack and Jill as the cards are dealt.</P>

<P class="fig"><IMG SRC="xsltcardnum4.gif" ALT="" BORDER=0></P>

<P>The numbering generated from the <code class="ce">&lt;tell&gt;</code> elements begins again with each player, so Jack's reactions are numbered 1 and 2, and Jill's reactions are numbered starting at 1 again.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
