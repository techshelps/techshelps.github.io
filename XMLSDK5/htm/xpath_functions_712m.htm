<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>number Function</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefnumberfunction"></A>number Function</H1>

<P>Converts the argument to a number.</P>

<PRE class="syntax"><I>number</I> number(<I>object</I>?)</PRE>

<H4 class="dtH4">Remarks</H4>

<P>Converts its argument to a number as follows.

<UL type="disc">
	<LI>A string that consists of optional white space followed by an optional minus sign followed by a number followed by white space is converted to the IEEE 754 number that is nearest (according to the IEEE 754 round-to-nearest rule) to the mathematical value represented by the string; any other string is converted to NaN.</li>

	<LI>Boolean true is converted to 1; Boolean false is converted to 0.</li>

	<LI>A node-set is first converted to a string and then converted in the same way as a string argument.</li>

	<LI>An object of a type other than the four basic types (node-set, Boolean, number, or string) is converted to a number in a way that is dependent on that type.</li>
</UL>

<P>If the argument is omitted, it defaults to a node-set with the context node as its only member.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note&nbsp;&nbsp;&nbsp;</b>The <code class="ce">number()</code> function should not be used for conversion of numeric data occurring in an element in an XML document unless the element is of a type that represents numeric data in a language-neutral format (that would typically be transformed into a language-specific format for presentation to a user). In addition, the <code class="ce">number()</code> function cannot be used unless the language-neutral format used by the element is consistent with the XML Path Language (XPath) syntax for a number.</BLOCKQUOTE>

<H4 class="dtH4">Example</H4>

<P class="label"><B>XML File</B></P>

<P>None; the XSLT file calls itself.</P>

<P class="label"><B>XSLT File (number.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;?xml-stylesheet type="text/xsl" href="number.xsl"?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
&lt;xsl:output method="html"/&gt;

&lt;xsl:template match="/"&gt; 
&lt;html&gt; 
&lt;body&gt; 
&lt;h3&gt;number() Function&lt;/h3&gt;
&lt;ul&gt; 
&lt;li&gt; 
&lt;b&gt;number('2048')&lt;/b&gt;
= 
&lt;xsl:<B>value-of</B> select="<B>number('2048')</B>"/&gt;
&lt;/li&gt;
&lt;li&gt; 
&lt;b&gt;number('-2048')&lt;/b&gt;
= 
&lt;xsl:<B>value-of</B> select="<B>number('-2048')</B>"/&gt;
&lt;/li&gt;
&lt;li&gt; 
&lt;b&gt;number('text')&lt;/b&gt;
= 
&lt;xsl:<B>value-of</B> select="<B>number('text')</B>"/&gt;
&lt;/li&gt;
&lt;li&gt; 
&lt;b&gt;number('109.54' div '1')&lt;/b&gt;
= 
&lt;xsl:<B>value-of</B> select="<B>number('109.54' div '1')</B>"/&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P><B>number() Function</B>

<UL type="disc">
	<LI><B>number('2048')</B> = 2048</li>

	<LI><B>number('-2048')</B> = -2048</li>

	<LI><B>number('text')</B> = NaN</li>

	<LI><B>number('109.54')</B> = 109.54</li>
</UL>

<P class="label"><B>Processor Output</B></P>

<PRE class="code">&lt;html&gt;&lt;body&gt;&lt;h3&gt;number() Function&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;number('2048')&lt;/b&gt; =       2048&lt;/li&gt;&lt;li&gt;&lt;b&gt;number('-2048')&lt;/b&gt; =       2048&lt;/li&gt;&lt;li&gt;&lt;b&gt;number('text')&lt;/b&gt; =       NaN&lt;/li&gt;&lt;li&gt;&lt;b&gt;number('109.54')&lt;/b&gt; =       109.54&lt;/li&gt;&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_devdatatypes_065v.htm">Data Types in Schemas</A> | <A HREF="xsd_xdrref_3w6d.htm">XDR Schema Data Types Reference</A> | <A HREF="xsd_ref_5bc5.htm">XML Data Types Reference</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
