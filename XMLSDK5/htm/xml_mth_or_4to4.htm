<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>open Method (IXMLHTTPRequest)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthopenixmlhttprequest"></A>open Method (IXMLHTTPRequest)</H1>

<P>Initializes an MSXML2.XMLHTTP request and specifies the method, URL, and authentication information for the request.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">oXMLHttpRequest.open(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>bstrMethod</I></DT>

<DD>The HTTP method used to open the connection, such as GET, POST, PUT, or PROPFIND.</dd>

<DT><I>bstrUrl</I></DT>

<DD>The requested URL. This can be either an absolute URL, such as "http://Myserver/Mypath/Myfile.asp", or a relative URL, such as "../MyPath/MyFile.asp".</dd>

<DT><I>varAsync</I> [optional]</DT>

<DD>A Boolean indicator of whether the call is asynchronous. The default is True (the call returns immediately). If set to True, attach an <code class="ce">onreadystatechange</code> property callback so that you can tell when the <code class="ce">send</code> call has completed.</dd>

<DT><I>bstrUser</I> [optional]</DT>

<DD>The name of the user for authentication. If this parameter is Null ("") or missing and the site requires authentication, the component displays a logon window.</dd>

<DT><I>bstrPassword</I> [optional]</DT>

<DD>The password for authentication. This parameter is ignored if the user parameter is Null ("") or missing.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<P>The following script example creates an <code class="ce">XMLHTTP</code> object, and then uses the <code class="ce">open</code> method to synchronously open an Active Server Pages (ASP) page. The script then posts an XML document to an ASP page, which uses the <code class="ce">load</code> method to load the document.</P>

<PRE class="code">var xmlhttp = new ActiveXObject("Msxml2.XMLHTTP.5.0");
xmlHTTP.open("GET","http://myserver/save.asp", false);
xmlHTTP.send(xmlDoc)</PRE>

<P>The following code belongs on the server.</P>

<PRE class="code">&lt;% xmlDoc.load(Request); %&gt;</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">oXMLHttpRequest.open(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>bstrMethod</I></DT>

<DD>The HTTP method used to open the connection, such as GET, POST, PUT, or PROPFIND.</dd>

<DT><I>bstrUrl</I></DT>

<DD>The requested URL. This can be either an absolute URL, such as "http://Myserver/Mypath/Myfile.asp", or a relative URL, such as "../MyPath/MyFile.asp".</dd>

<DT><I>varAsync</I> [optional]</DT>

<DD>A Boolean indicator of whether the call is asynchronous. The default is True (the call returns immediately). If set to True, attach an <code class="ce">onreadystatechange</code> property callback so that you can tell when the <code class="ce">send</code> call has completed.</dd>

<DT><I>bstrUser</I> [optional]</DT>

<DD>The name of the user for authentication. If this parameter is Null ("") or missing and the site requires authentication, the component displays a logon window.</dd>

<DT><I>bstrPassword</I> [optional]</DT>

<DD>The password for authentication. This parameter is ignored if the user parameter is Null ("") or missing.</dd>
</DL>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT open(BSTR bstrMethod, BSTR bstrUrl, VARIANT varAsync,
 VARIANT bstrUser, VARIANT bstrPassword);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>bstrMethod</I> [in]</DT>

<DD>The HTTP method used to open the connection, such as PUT or PROPFIND.</dd>

<DT><I>bstrUrl</I> [in]</DT>

<DD>The requested URL. This can be either an absolute URL, such as "http://Myserver/Mypath/Myfile.asp", or a relative URL, such as "../MyPath/MyFile.asp".</dd>

<DT><I>varAsync</I> [in, optional]</DT>

<DD>A Boolean indicator as to whether the call is asynchronous. The default is True (the call returns immediately). If set to True, attach an <code class="ce">onreadystatechange</code> property callback so that you can tell when the <code class="ce">send</code> call has completed.</dd>

<DT><I>bstrUser</I> [in, optional]</DT>

<DD>The name of the user for authentication. If this parameter is Null ("") or missing and the site requires authentication, the component displays a logon window.</dd>

<DT><I>bstrPassword</I> [in, optional]</DT>

<DD>The password for authentication. This parameter is ignored if the user parameter is Null or missing.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>
</DL>

<H4 class="dtH4">C/C++ Example</H4>

<PRE class="code">HRESULT hr;
IXMLHttpRequest *pIXMLHttpRequest = NULL;

try
{
   // Create XMLHttpRequest object and initialize pIXMLHttpRequest.
   hr = pIXMLHttpRequest-&gt;open(_bstr_t(_T("PUT")), 
      _bstr_t(_T("GET","http://MyServer/Sample.xml", false)), 
      _variant_t(VARIANT_FALSE), _variant_t(""), _variant_t(""));
   if(SUCCEEDED(hr))
      ::MessageBox(NULL, _T("Success !"), _T(""), MB_OK);
}
catch(...)
{
   DisplayErrorToUser();
}
// Release pIXMLHttpRequest when finished with it.</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>After calling this method, you must call <code class="ce">send</code> to send the request and data, if any, to the server.</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_mth_ac_3xys.htm">abort Method</A> | <A HREF="xml_pro_no_7tpw.htm">onreadystatechange Property</A></P>

<P>Applies to: <A HREF="xml_obj_ixmlhttprequest_8bp0.htm">IXMLHTTPRequest</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
