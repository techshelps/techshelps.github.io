<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Deterministic and Non-Deterministic Schemas</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconvalidationdeterministicschemas"></A>Deterministic and Non-Deterministic Schemas</H1>

<P>Validation depends on whether the schema is deterministic or non-deterministic.</P>

<P>A deterministic schema is a schema that is not ambiguous. This means that the parser used by the Schema Object Model (SOM) can determine the sequence in which elements should occur for an XML document to be valid. </P>

<P>It is possible for an XML Schema to be ambiguous, or non-deterministic. A schema is non-deterministic if the parser is unable to clearly determine the structure to validate with the schema. When validation is attempted on a non-deterministic schema, the parser generates an error.</P>

<H2 class="dtH2">Deterministic Schema</H2>

<P>The following deterministic XML Schema specifies that a valid document must contain an element named <code class="ce">root</code> that has the following content: 

<UL type="disc">
	<LI>An element, <code class="ce">apple</code>, followed by an element, <code class="ce">berry</code>
<P>or
</li>

	<LI>An element, <code class="ce">coffee</code>, followed by an element, <code class="ce">dairy</code></li>
</UL>

<PRE class="code">&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
&lt;xs:element name="root" type="rootTypes" /&gt;
&lt;xs:complexType name="myKitchen"&gt;
        &lt;xs:choice&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element name="<code><b class="cfe">apple</b></code>"/&gt;
                &lt;xs:element name="<code><b class="cfe">berry</b></code>"/&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element name="<code><b class="cfe">coffee</b></code>"/&gt;
                &lt;xs:element name="<code><b class="cfe">dairy</b></code>"/&gt;
            &lt;/xs:sequence&gt;
        &lt;/xs:choice&gt;
    &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;</PRE>

<P>Using the preceding schema, the parser is able to follow the schema logic when it processes an instance document. If the element <code class="ce">root</code> is followed in the document by the element <code class="ce">apple</code>, the parser determines that it has encountered the first part of the sequence of <code class="ce">apple</code> and <code class="ce">berry</code>. Likewise, if the parser encounters the element <code class="ce">coffee</code> after encountering the <code class="ce">root</code> element, the parser determines that it has encountered the first part of the sequence of <code class="ce">coffee</code> and <code class="ce">dairy</code>. Any other ordering of elements in the instance document is invalid according to this schema.</P>

<H2 class="dtH2">Non-Deterministic Schema</H2>

<P>With a non-deterministic schema, the parser cannot determine a sequence for the elements in the document being processed. The following is an example of a non-deterministic schema:</P>

<PRE class="code">&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
&lt;xs:element name="root" type="rootTypes" /&gt;
&lt;xs:complexType name="myKitchen"&gt;
        &lt;xs:choice&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element name="<code><b class="cfe">apple</b></code>"/&gt;
                &lt;xs:element name="<code><b class="cfe">berry</b></code>"/&gt;
            &lt;/xs:sequence&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element name="<code><b class="cfe">apple</b></code>"/&gt;
                &lt;xs:element name="<code><b class="cfe">coffee</b></code>"/&gt;
            &lt;/xs:sequence&gt;
        &lt;/xs:choice&gt;
    &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;</PRE>

<P>Using the preceding schema, when the parser encounters the element <code class="ce">root</code> followed by an element <code class="ce">apple</code>, it is unable to determine, without looking ahead to the next element, whether the <code class="ce">apple</code> element is the first part of the sequence <code class="ce">apple</code> and <code class="ce">berry</code> or the first part of the sequence of <code class="ce">apple</code> and <code class="ce">coffee</code>. Because the parser used by the SOM does not perform forward checking, the parser generates the following error message when validation is attempted using a non-deterministic schema:</P>

<PRE class="code"><code class="ce">Content model must be deterministic</code></PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_ref_7gh1.htm">XML Schema Reference (XSD)</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
