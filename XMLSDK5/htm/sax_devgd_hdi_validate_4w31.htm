<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Application Form (SAX Validator)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="sax_hdi_validate_applicationform"></A>Application Form (SAX Validator)</H1>

<P>To get started, create a new project and then reference Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office.</P>

<P class="labelproc"><B>To create a new project</B>

<UL type="disc">
	<LI>Open Microsoft&reg; Visual Basic&reg; 6.0. In the <B>New Project</B> dialog box, double-click <B>Standard EXE</B>.</li>
</UL>

<P class="labelproc"><B>To create a reference to MSXML 5.0</B>

<OL type="1">
	<LI>On the <B>Project</B> menu, click <B>References</B>.</li>

	<LI>In the <B>Available References</B> list, select <B>Microsoft XML,v5.0</B>, and then click <B>OK</B>.</li>
</OL>

<H2 class="dtH2">Add Controls to the Form</H2>

<P>Now build the user interface for the SAX validator application. Add the following controls to the form.

<UL type="disc">
	<LI>Three text boxes: one for entering the XML file input to be validated; one for entering the XSD file to use to validate the input file; and one for displaying search results.</li>

	<LI>Labels for each of the three text boxes</li>

	<LI>Two command buttons.</li>
</UL>

<P>For your application form to work with the sample code provided in the next section, you must set the properties in the following table.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=19%>Control</TH>
<TH width=18%>Property</TH>
<TH width=63%>Setting</TH>
</TR>

<TR VALIGN="top">
<TD width=19%>Form</TD>
<TD width=18%>Name
<P>Caption</P>
</TD>
<TD width=63%>frmMain
<P>"SAX Validator"</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=19%>Text1</TD>
<TD width=18%>Name
<P>Text</P>
</TD>
<TD width=63%>txtInputFile
<P>"\books.xml"</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=19%>Text2</TD>
<TD width=18%>Name
<P>Text</P>
</TD>
<TD width=63%>txtSchemaFile
<P>"\books.xsd"</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=19%>Text3</TD>
<TD width=18%>Name
<P>MultiLine</P>

<P>Text</P>
</TD>
<TD width=63%>txtResults
<P>True</P>

<P>""</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=19%>Command1</TD>
<TD width=18%>Name
<P>Caption</P>
</TD>
<TD width=63%>cmdValidate
<P>"Validate"</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=19%>Command2</TD>
<TD width=18%>Name
<P>Caption</P>
</TD>
<TD width=63%>cmdExit
<P>"Exit"</P>
</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>After you modify the property settings, resize the controls and arrange them on the form until your user interface looks like the following:</P>

<P class="fig"><IMG SRC="sax_validate1.gif" ALT="" BORDER=0></P>

<H2 class="dtH2">Add Code to the Form</H2>

<P>The following shows the complete code for the form. To run the code as you read, select all the text, then copy it and paste it into the form of your own Microsoft&reg; Visual Basic&reg; project.</P>

<PRE class="code">Option Explicit

Private Sub cmdExit_Click()
  Unload Me
End Sub

Private Sub cmdValidate_Click()
  'Clear the results window.
  txtResults = ""
  'Create a SAX reader.
  Dim oReader As New Msxml2.SAXXMLReader50
  'Create an XML schema cache.
  Dim oSC As New Msxml2.XMLSchemaCache50
  'Create a class module for implementing content handler,
  'the error handler, and the locator interfaces.
  Dim oValidator As New MyValidator
  'Add the schema file to the schema cache.
  oSC.Add "", txtSchemaFile
  'Configure the SAX reader.
  oReader.putFeature "schema-validation", True
  oReader.putProperty "schemas", oSC
  oReader.putProperty "schema-declaration-handler", oValidator
  Set oReader.contentHandler = oValidator
  Set oReader.errorHandler = oValidator
  'Parse and validate the file.
  On Error Resume Next
  oReader.parseURL txtInputFile
  On Error GoTo 0
End Sub

Private Sub Form_Load()
  txtInputFile.Text = App.Path + txtInputFile.Text
  txtSchemaFile.Text = App.Path + txtSchemaFile.Text
End Sub</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_devgd_hdi_validate_74hb.htm">Validate Documents Using SAX</A> | <A HREF="sax_devgd_hdi_validate_05rr.htm">Overview of the SAX Validator Application</A> | <A HREF="sax_devgd_hdi_validate_861w.htm">Sample XSD Schema File (SAX Validator)</A> | <A HREF="sax_devgd_hdi_validate_4ptf.htm">MyValidator Class (SAX Validator)</A> | <A HREF="sax_devgd_hdi_validate_52ge.htm">Run the Application (SAX Validator)</A> | <A HREF="sax_devgd_hdi_validate_7p2r.htm">How the SAX Validator Application Works</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
