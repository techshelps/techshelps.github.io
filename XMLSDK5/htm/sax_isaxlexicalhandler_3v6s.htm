<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>startEntity Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="startentity_method"></A>startEntity Method</H1>

<P>Indicates that the reader has opened and started to process an internally or externally defined entity in the content of the document.</P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<P>The reporting of parameter entities, including any external document type definition (DTD) subset, is optional. SAX2 (Simple API for XML) drivers that support a <code class="ce">LexicalHandler</code> may not support reporting of entities. Use the <code class="ce">"http://xml.org/sax/features/lexical-handler/parameter-entities"</code> feature to query or control the reporting of parameter entities.</P>

<P>The reader reports general entities with their regular names, parameter entities with '%' prepended to their names, and any external DTD subset with the pseudo-entity name "[dtd]".</P>

<P>When a reader driver provides these events, all other events must be properly nested within <code class="ce">startEntity</code>/<code class="ce">endEntity</code> events. There is no additional requirement that events from <code class="ce">DeclHandler</code> or <code class="ce">DTDHandler</code> be properly ordered.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">skippedEntity</code> event, which is part of the <code class="ce">ContentHandler</code> interface, reports skipped entities.</BLOCKQUOTE>

<P>Because of the streaming event model that SAX uses, some entity boundaries cannot be reported under any circumstances:

<UL type="disc">
	<LI>General entities within attribute values.</li>

	<LI>Parameter entities within declarations.</li>
</UL>

<P>These are silently expanded, with no indication of where the original entity boundaries were.</P>

<P>Furthermore, the boundaries of character references (which are not really entities anyway) are not reported.</P>

<H4 class="dtH4">Implementation Syntax</H4>

<PRE class="syntax">Sub startEntity(strName As String)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>strName</I></DT>

<DD>The name of the entity. If it is a parameter entity, the name begins with '%'. If the parameter is an external DTD subset, it uses "[dtd]".</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<P>If failed, the <code class="ce">LexicalHandler</code> raises a trappable error.</P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<P>The reader never reports entity references in attribute values, as well as the start and end of the document entity. In addition, the reader reports the start and end of the external document type definition (DTD) subset using the pseudo-name "[dtd]". All other events must be properly nested within the <code class="ce">startEntity</code>/<code class="ce">endEntity</code> events. Note that skipped entities will be reported through the <code class="ce">skippedEntity</code> event.</P>

<P>Entities are references to other content, which can be a piece of text or a large external file. Declaring an entity is done within a DTD. Entities always have two parts, the declaration and the reference. For example, consider the following entity reference:</P>

<PRE class="code">&lt;!ENTITY CompName "Microsoft&reg; Corporation"&gt;</PRE>

<P>This entity can be referenced as follows:</P>

<PRE class="code">&amp;CompName; is an industry leader.</PRE>

<P>Which is interpreted as:</P>

<PRE class="code">Microsoft&reg; Corporation is an industry leader.</PRE>

<P>XML offers two kinds of entities &#0151; general entities and parameter entities. General entities, defined in DTDs, substitute the entity value within a document, as shown in the preceding example. Parameter entities link the content of additional DTD files to a DTD, or act as an abbreviation for frequently repeated declarations. To distinguish between these two types of entities, general entities use an ampersand (&amp;) while parameter entities use the percent sign (%).</P>

<P>The reporting of parameter entities (including the DTD subset) is strictly optional. To allow the reader to recognize external entities, you use the <code class="ce">putFeature</code> method of the <code class="ce">ISAXXMLReader</code> interface to set the <code class="ce">"http://xml.org/sax/features/lexical-handler/external-general-entities"</code> and <code class="ce">"http://xml.org/sax/features/lexical-handler/external-parameter-entities"</code> features. The reader reports the general entities with their regular names, parameter entities have "%" prepended to their names, and the external DTD subset has the pseudo-entity name "[dtd]". When the reader reports these events, all other events must be properly nested within <code class="ce">startEntity</code> and <code class="ce">endEntity</code> events.</P>

<H4 class="dtH4">Syntax</H4>

<PRE class="syntax">HRESULT startEntity(
&nbsp;&nbsp;&nbsp;[in] const wchar_t * pwchName, 
&nbsp;&nbsp;&nbsp;[in] int cchName); </PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>pwchName</I> [in]</DT>

<DD>The name of the entity. For parameter entities, the name begins with "%".</dd>

<DT><I>cchName</I> [in]</DT>

<DD>The length of the entity name.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if no errors occur.</dd>

<DT>E_FAIL</DT>

<DD>The value returned if the parse operation should be aborted.</dd>
</DL>
</div><!-- [C/C++] -->

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_isaxlexicalhandler_00bo.htm">endEntity Method</A>| <A HREF="sax_isaxxmlreader_6nmt.htm">ISAXXMLReader/IVBSAXXMLReader Interface</A> | <A HREF="sax_isaxxmlreader_7s4k.htm">putFeature Method</A></P>

<P>Applies to: <A HREF="sax_isaxlexicalhandler_86xx.htm">ISAXLexicalHandler/IVBSAXLexicalHandler Interface</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
