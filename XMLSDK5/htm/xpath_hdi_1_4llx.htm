<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Placing a List of Items into a Table</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconplacingalistofitemsintoatable"></A>Placing a List of Items into a Table</H1>

<P>A common transformation is to place a list of items into a grid or table. Given a list of product names, you might want to present them two-across in a table, as follows.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=50%>product 1</TD>
<TD width=50%>product 2</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>product 3</TD>
<TD width=50%>product 4</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>Items must be grouped in pairs into table rows. XSLT currently does not have a built-in mechanism to handle arbitrary grouping. A combination of the <code class="ce">&lt;xsl:if&gt;</code> element with the <code class="ce">test</code> attribute and the <code class="ce">following-sibling</code> axis can be used to approximate this behavior. The following template turns a list of "product" elements into a two-column table.</P>

<PRE class="code">&lt;TABLE BORDER="1"&gt;
  &lt;xsl:for-each select="products/product"&gt;
    &lt;xsl:if test="<B>(position() mod 2) = 1</B>"&gt;
      &lt;TR&gt;
        &lt;TD&gt;&lt;xsl:value-of select="."/&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;xsl:value-of select="<B>following-sibling::product[position()=1]</B>"/&gt;&lt;/TD&gt;
      &lt;/TR&gt;
    &lt;/xsl:if&gt;
  &lt;/xsl:for-each&gt;
&lt;/TABLE&gt;</PRE>

<P>Repeat through each product element, but use the <code class="ce">&lt;xsl:if&gt;</code> element with the expression "position() mod 2 = 1" to isolate only those products that should start a new row, every other product. The name of this product also is placed in the first cell in the row. Then make another cell and place within it the next child &#0151; the one filtered out using the <code class="ce">&lt;xsl:if&gt;</code>. The query to select the next element navigates to the parent and obtains a set of following siblings.</P>

<P>Three-column tables can be created by adding another cell to the row to obtain another sibling element, and adjusting the expression to allow only every third element to create a new row. You can extrapolate this mechanism to create tables with even more columns.</P>

<PRE class="code">&lt;TABLE BORDER="1"&gt;
  &lt;xsl:for-each select="products/product"&gt;
    &lt;xsl:if test="<B>(position() mod 3) = 1</B>"&gt;
      &lt;TR&gt;
        &lt;TD&gt;&lt;xsl:value-of select="."/&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;xsl:value-of select="<B>following-sibling::product[position()=1]</B>"/&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;xsl:value-of select="<B>following-sibling::product[position()=2]</B>"/&gt;&lt;/TD&gt;
      &lt;/TR&gt;
    &lt;/xsl:if&gt;
  &lt;/xsl:for-each&gt;
&lt;/TABLE&gt;</PRE>

<H4 class="dtH4">Example</H4>

<P>This example demonstrates the table code snippets that are shown above.</P>

<P class="label"><B>XML File (product-list.xml)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;?xml-stylesheet type="text/xsl" <B>href="product-list.xsl"</B>?&gt;
&lt;products&gt;
   &lt;product&gt;ActiMates Arthur&lt;/product&gt;
   &lt;product&gt;ActiMates Barney&lt;/product&gt;
   &lt;product&gt;ActiMates DW&lt;/product&gt;
   &lt;product&gt;ActiMates PC Pack&lt;/product&gt;
   &lt;product&gt;ActiMates TV Pack&lt;/product&gt;
   &lt;product&gt;Arthur's Brainteasers&lt;/product&gt;
   &lt;product&gt;Arthur's Math Carnival&lt;/product&gt;
   &lt;product&gt;Arthur's Reading Roundup&lt;/product&gt;
   &lt;product&gt;Barney fun on the Farm&lt;/product&gt;
   &lt;product&gt;Barney goes to the Circus&lt;/product&gt;
   &lt;product&gt;Barney under the Sea&lt;/product&gt;
&lt;/products&gt;</PRE>

<P class="label"><B>XSLT File (product-list.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/"&gt;
  &lt;HTML&gt;
    &lt;BODY STYLE="font:bold 10pt Arial"&gt;
      &lt;DIV&gt;Two column table:&lt;/DIV&gt;

      &lt;TABLE BORDER="1"&gt;
        &lt;xsl:for-each select="products/product"&gt;
          &lt;xsl:if test="<B>(position() mod 2) = 1</B>"&gt;
            &lt;TR&gt;
              &lt;TD&gt;&lt;xsl:value-of select="."/&gt;&lt;/TD&gt;
              &lt;TD&gt;&lt;xsl:value-of select="<B>following-sibling::product[position()=1]</B>"/&gt;&lt;/TD&gt;
            &lt;/TR&gt;
          &lt;/xsl:if&gt;
        &lt;/xsl:for-each&gt;
      &lt;/TABLE&gt;
      &lt;BR/&gt;

      &lt;DIV&gt;Three column table:&lt;/DIV&gt;
      &lt;TABLE BORDER="1"&gt;
        &lt;xsl:for-each select="products/product"&gt;
          &lt;xsl:if test="<B>(position() mod 3) = 1</B>"&gt;
            &lt;TR&gt;
              &lt;TD&gt;&lt;xsl:value-of select="."/&gt;&lt;/TD&gt;
              &lt;TD&gt;&lt;xsl:value-of select="<B>following-sibling::product[position()=1]</B>"/&gt;&lt;/TD&gt;
              &lt;TD&gt;&lt;xsl:value-of select="<B>following-sibling::product[position()=2]</B>"/&gt;&lt;/TD&gt;
            &lt;/TR&gt;
          &lt;/xsl:if&gt;
        &lt;/xsl:for-each&gt;
      &lt;/TABLE&gt;

    &lt;/BODY&gt;
  &lt;/HTML&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="xsltlisttotable.gif" ALT="" BORDER=0></P>

<P class="label"><B>Processor Output</B></P>

<P>A portion of the output stream is shown here.</P>

<PRE class="code">&lt;HTML&gt;
&lt;BODY STYLE="font:bold 10pt Arial"&gt;
&lt;DIV&gt;Two column table:&lt;/DIV&gt;
&lt;TABLE BORDER="1"&gt;
&lt;TR&gt;
&lt;TD&gt;ActiMates Arthur&lt;/TD&gt;
&lt;TD&gt;ActiMates Barney&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;ActiMates DW&lt;/TD&gt;
&lt;TD&gt;ActiMates PC Pack&lt;/TD&gt;
&lt;/TR&gt;
...
&lt;/TABLE&gt;&lt;BR&gt;&lt;DIV&gt;Three column table:&lt;/DIV&gt;
&lt;TABLE BORDER="1"&gt;
&lt;TR&gt;
&lt;TD&gt;ActiMates Arthur&lt;/TD&gt;
&lt;TD&gt;ActiMates Barney&lt;/TD&gt;
&lt;TD&gt;ActiMates DW&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;ActiMates PC Pack&lt;/TD&gt;
...
&lt;/TR&gt;
&lt;/TABLE&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
