<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Comparing XSLT to Cascading Style Sheets</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconcomparingxslttocascadingstylesheets"></A>Comparing XSLT to Cascading Style Sheets</H1>

<P>Although XPath, CSS, and XSLT can work together to transform an XML data set, they each have a different role. The following is a brief review of these technologies and their roles.

<UL type="disc">
	<LI>XPath formulates an expression to select a specified piece of data or data set. An XPath expression typically serves as a pattern to match this specific data in the source document.</li>

	<LI>Cascading style sheets provide a centralized and modular way to format HTML output. Although CSS can be linked directly to an XML source document, it is more effective to use CSS as a compliment within XSLT.</li>

	<LI>XSLT is the method by which you manipulate and transform (i.e., add, delete, query, sort, etc.) the XML data in a source document. XSLT uses XPath expressions to work with data elements. The output of XSLT transformations is typically another XML document, an HTML page, a text file, or a database entry.</li>
</UL>

<P>This means that the real purpose of XSLT is not to format data, but to transform and manipulate data. The formatting aspect is best left for CSS, especially for large and complex documents.</P>

<P>If the content of an XML document can be displayed in the order as specified in the source document, you can use CSS without any help from XSLT. To display the output in any other order, you must use XSLT, possibly with the help of CSS.</P>

<P>The following sections summarize the advantages and disadvantages of XSLT and CSS.</P>

<H2 class="dtH2">Advantages of XSLT</H2>

<UL type="disc">
	<LI>Can reorder, add, or delete elements. This is because XSLT is aware of the structure of the XML document.</li>

	<LI>Can incorporate content from more than one document, or split a single document into many documents.</li>

	<LI>Able to access and manipulate the comments, processing instructions, and attribute names and values in an XML document.</li>

	<LI>Written in XML, so there is no third language to be learned.</li>

	<LI>Offers programming-like logic, which includes an almost infinite variety of conditional statements. Can perform operations, such as arithmetic as well logical operations.</li>

	<LI>Can include text and graphics.</li>

	<LI>Can generate a variety of output: static or dynamic HTML, XML, RTF, PDF, comma-separated-values (CSV) flat files, or a stream of XSL Formatting Objects (XSL-FO).</li>
</UL>

<H2 class="dtH2">Disadvantages of XSLT</H2>

<UL type="disc">
	<LI>XSLT is not a style language in itself. Therefore, the application that handles the output from XSLT must be able to style it accordingly.</li>

	<LI>Requires character escaping to output special markup characters, such as &lt; and &amp;.</li>

	<LI>Uses more memory and processor power, because reordering, adding, deleting, and manipulating elements requires a tree representation of the document in memory.</li>

	<LI>Is more difficult to learn to use.</li>
</UL>

<H2 class="dtH2">Advantages of CSS</H2>

<UL type="disc">
	<LI>Is easier to use than XSLT.</li>

	<LI>Is suitable for simple documents.</li>

	<LI>Uses less memory. Because it cannot reorder a document, CSS does not build a tree representation of the document.</li>

	<LI>Begins displaying the document as soon as it begins processing the document.</li>

	<LI>Has widespread support in the developer community.</li>
</UL>

<H2 class="dtH2">Disadvantages of CSS</H2>

<UL type="disc">
	<LI>Cannot reorder, add, delete, or perform operations on elements.</li>

	<LI>Offers no access to non-elements, such as attributes and their values, processing instructions, and so on.</li>

	<LI>Cannot style non-textual content (such as images) referred to in an XML document.</li>

	<LI>Supports limited features of CSS2 for some applications.</li>

	<LI>Uses a different syntax than XML, and therefore requires completely separate parsers and APIs.</li>

	<LI>Outputs only data suitable for viewing in a Web browser.</li>
</UL>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=4880">Cascading Style Sheets</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
