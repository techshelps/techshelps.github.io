<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Template Rules</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcontemplaterules"></A>Template Rules</H1>

<P>Each <code class="ce">&lt;xsl:template&gt;</code> element or template rule consists of two components: a match pattern, and the template itself.</P>

<PRE class="code">&lt;xsl:template match="region"&gt;
<I>[template]</I>
&lt;/xsl:template&gt;</PRE>

<H2 class="dtH2">Match Patterns</H2>

<P>The match pattern consists of a <code class="ce">match</code> attribute and an XML Path Language (XPath) expression, which specifies which portions of the source tree are processed by the template rule. For example, the following match pattern processes all <code class="ce">&lt;region&gt;</code> elements in the source tree.</P>

<PRE class="code">&lt;xsl:template match="region"&gt;</PRE>

<P>Similarly, the following match pattern selects all the <code class="ce">books_sold</code> attributes for processing.</P>

<PRE class="code">&lt;xsl:template match="@books_sold"&gt;</PRE>

<P>Because match patterns are XPath-based, they are not limited to selecting only an element from the source tree. They can also select text, processing instructions, comments, CDATA declarations, and so on. For more information, see <A HREF="xsl_xpath1_0mnn.htm">Using XPath Expressions to Select Nodes</A>.</P>

<H2 class="dtH2">Templates</H2>

<P>Each time the template locates something in the source tree that matches the match pattern, it places content in the result tree. That is, the template rule instantiates the template for each match.</P>

<P>Exactly what goes into a given template depends on how the template is to transform the source document. If transforming to HTML, for example, the template might consist of HTML markup, plain text content, comments, scripts, and so on.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xpath_concepts3_7nqs.htm">How XSLT Template Rules Depend on Context</A> | <A HREF="xsl_advanced2_2dbo.htm">Using Named Template Rules in XSLT</A> | <A HREF="xsl_elm_qz_120k.htm">xsl:template Element</A> | <A HREF="xsl_elm_af_7vqs.htm">xsl:apply-templates Element</A> | <A HREF="xsl_elm_af_11x0.htm">xsl:call-template Element</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
