<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>id Function</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefidfunction"></A>id Function</H1>

<P>Selects elements by their unique ID.</P>

<PRE class="syntax"><I>node-set</I> id(<I>object</I>)</PRE>

<H4 class="dtH4">Remarks</H4>

<P>When the argument is of type node-set, the result is the union of the result of applying <code class="ce">id()</code> to the string value of each of the nodes in the node-set argument.</P>

<P>When the argument is of any other type, it is converted to a string and then split into a white space&#0150;separated list of tokens (white space is any sequence of characters matching the production); the result is a node-set containing the elements in the same document as the context node that have a unique ID equal to any of the tokens in the list.</P>

<H4 class="dtH4">Example</H4>

<P class="label"><B>XML FILE (test.xml)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;!DOCTYPE test [
  &lt;!ELEMENT test (x+)&gt;
  &lt;!ELEMENT x (x+, y+)&gt;
  &lt;!ATTLIST x
     a ID #REQUIRED&gt;
  &lt;!ELEMENT y ANY&gt;
]&gt;
&lt;test&gt;
    &lt;x a="a11"&gt;
      &lt;x a="a21"&gt;
        &lt;x a="a31"&gt;
          &lt;y&gt;y31&lt;/y&gt;
          &lt;y&gt;y32&lt;/y&gt;
        &lt;/x&gt;
      &lt;/x&gt;
    &lt;/x&gt;
    &lt;x a="a12"&gt;
      &lt;x a="a22"&gt;
        &lt;y&gt;y21&lt;/y&gt;
        &lt;y&gt;y22&lt;/y&gt;
      &lt;/x&gt;
    &lt;/x&gt;
    &lt;x a="13"&gt;
      &lt;y&gt;y11&lt;/y&gt;
      &lt;y&gt;y12&lt;/y&gt;
    &lt;/x&gt;
    &lt;x a="a14"&gt;
      &lt;y&gt;y03&lt;/y&gt;
      &lt;y&gt;y04&lt;/y&gt;
    &lt;/x&gt;
&lt;/test&gt;</PRE>

<P class="label"><B>XSLT File (test.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

  &lt;xsl:output method="xml" omit-xml-declaration="yes"/&gt;

  &lt;!-- suppress text nodes not covered in subsequent        template rule --&gt;
  &lt;xsl:template match="text()"/&gt;

  &lt;xsl:template match="*"&gt;
    &lt;xsl:element name="{name()}"&gt;
      &lt;xsl:apply-templates select="*|@*"/&gt;
      &lt;xsl:if test="text()"&gt;
         &lt;xsl:value-of select="."/&gt;
      &lt;/xsl:if&gt;
    &lt;/xsl:element&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="@*"&gt;
    &lt;xsl:attribute name="{name()}"&gt;
      &lt;xsl:value-of select="."/&gt;
    &lt;/xsl:attribute&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="/test"&gt;
    <B>&lt;xsl:apply-templates select="id('a21') "/&gt;</B>
and 
    <B>&lt;xsl:apply-templates select="id('a11')//y[1]"/&gt;</B>
  &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Output</B></P>

<P>The XSLT stylesheet, when applied to the XML file above results in the following node-set:</P>

<PRE class="code">   &lt;x a="a21"&gt;
      &lt;x a="a31"&gt;
         &lt;y&gt;y31&lt;/y&gt;
         &lt;y&gt;y32&lt;/y&gt;
      &lt;/x&gt;
   &lt;/x&gt;
and
   &lt;y&gt;y31&lt;/y&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_devdatatypes_065v.htm">Data Types in Schemas</A> | <A HREF="xsd_xdrref_3w6d.htm">XDR Schema Data Types Reference</A> | <A HREF="xsd_ref_5bc5.htm">XML Data Types Reference</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
