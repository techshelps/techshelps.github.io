<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MXHTMLWriter CoClass</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mxhtmlwriter_coclass"></A>MXHTMLWriter CoClass</H1>

<P>The <code class="ce">MXHTMLWriter</code> CoClass generates HTML output from Simple API for XML (SAX) events and handles many of the details of outputting content in HTML format. When connected to <code class="ce">SAXXMLReader</code>, and set as a <code class="ce">ContentHandler</code>, <code class="ce">MXHTMLWriter</code> accumulates content passed by events thrown by the reader. This content is stored in the output buffer of <code class="ce">MXHTMLWriter</code>. The <code class="ce">MXXMLWriter</code> CoClass implements the <code class="ce">IMXWriter</code> interface.</P>

<P>For MSXML 5.0, the version-dependent CoClass is <code class="ce">MXHTMLWriter50</code>, which uses the following programming class ID information:</P>

<BLOCKQUOTE class="dtBlock">
(CLSID_MXHTMLWriter: 88d969c9-f192-11d4-a65f-0040963251e5)</BLOCKQUOTE>

<P>Results generated by <code class="ce">MXHTMLWriter</code> are exposed through the <code class="ce">MXHTMLWriter.output</code> property. <code class="ce">MXHTMLWriter</code> provides several properties that enable you to modify the results generated by it. For example, to enable "pretty printing," set the <code class="ce">MXHTMLWriter.indent</code> property to True.</P>

<P>To enable <code class="ce">MXHTMLWriter</code> to catch handler events passed by <code class="ce">SAXXMLReader</code>, you must set <code class="ce">MXHTMLWriter</code> as the <code class="ce">ContentHandler</code>, and optionally as any of the other handlers. The following table shows the handler interfaces implemented by <code class="ce">MXHTMLWriter</code>.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Visual Basic Interfaces</TH>
<TH width=50%>C++ Interfaces</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_contenthandler_7nad.htm">IVBSAXContentHandler</A></TD>
<TD width=50%><A HREF="sax_contenthandler_7nad.htm">ISAXContentHandler</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_declhandler_24v9.htm">IVBSAXDeclHandler</A></TD>
<TD width=50%><A HREF="sax_declhandler_24v9.htm">ISAXDeclHandler</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_dtdhandler_3qjp.htm">IVBSAXDTDHandler</A></TD>
<TD width=50%><A HREF="sax_dtdhandler_3qjp.htm">ISAXDTDHandler</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_isaxerrorhandler_2syt.htm">IVBSAXErrorHandler</A></TD>
<TD width=50%><A HREF="sax_isaxerrorhandler_2syt.htm">ISAXErrorHandler</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_isaxlexicalhandler_86xx.htm">IVBSAXLexicalHandler</A></TD>
<TD width=50%><A HREF="sax_isaxlexicalhandler_86xx.htm">ISAXLexicalHandler</A></TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>With <code class="ce">MXHTMLWriter</code>, HTML is output according to the HTML output method, as defined in the XSL Transformations (XSLT) Version 1.0 recommendation.</P>

<P>In general, <code class="ce">MXHTMLWriter</code> outputs HTML content like XML, with the following exceptions:

<UL type="disc">
	<LI>The following elements are recognized as empty elements. They are recognized in any combination of uppercase and lowercase. These elements are output with a start tag but no end tag.
<P class="fineprint">
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=33%><code class="ce">&lt;area&gt;</code></TD>
<TD width=33%><code class="ce">&lt;frame&gt;</code></TD>
<TD width=34%><code class="ce">&lt;links&gt;</code></TD>
</TR>

<TR VALIGN="top">
<TD width=33%><code class="ce">&lt;base&gt;</code></TD>
<TD width=33%><code class="ce">&lt;hr&gt;</code></TD>
<TD width=34%><code class="ce">&lt;meta&gt;</code></TD>
</TR>

<TR VALIGN="top">
<TD width=33%><code class="ce">&lt;basefont&gt;</code></TD>
<TD width=33%><code class="ce">&lt;img&gt;</code></TD>
<TD width=34%><code class="ce">&lt;param&gt;</code></TD>
</TR>

<TR VALIGN="top">
<TD width=33%><code class="ce">&lt;br&gt;</code></TD>
<TD width=33%><code class="ce">&lt;input&gt;</code></TD>
<TD width=34%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><code class="ce">&lt;col&gt;</code></TD>
<TD width=33%><code class="ce">&lt;isindex&gt;</code></TD>
<TD width=34%>&nbsp;</TD>
</TR>
</table></div>

<P class="fineprint">
</li>

	<LI>The <code class="ce">&lt;script&gt;</code> and <code class="ce">&lt;style&gt;</code> elements do not require escaping of special characters. In the textual content of these elements, a "&lt;" character will be output as "&lt;", not as "&amp;lt;".</li>

	<LI>HTML attributes that have a URI value, such as the <code class="ce">href</code> attribute of the <code class="ce">&lt;a&gt; </code>element or the <code class="ce">src</code> attribute of the <code class="ce">&lt;image&gt;</code> element, are recognized. Special characters within a URI are escaped as specified in the HTML specification. For example, non-ASCII characters in the URI should be represented by converting each byte of the UTF-8 representation "%hh" where <I>hh</I> represents the byte value in hexadecimal. For example, spaces are represented as "%20".</li>

	<LI><code class="ce">MXHTMLWriter</code> may output a character using a character entity reference if one is defined for it in the version of HTML that is specified.</li>

	<LI>Processing instructions are terminated with "&gt;" rather than "?&gt;".</li>

	<LI>Attributes that are written with a keyword only, and no value, will be recognized and output in this form. For example, in HTML, <code class="ce">&lt;OPTION SELECTED&gt;</code> shorthand is acceptable, but in XML it must be written as <code class="ce">&lt;OPTION SELECTED="SELECTED"&gt;</code>. The HTML output method will normally use the abbreviated form, as this is the only form recognized by earlier HTML browsers.</li>

	<LI>The special use of the ampersand character in dynamic HTML attributes is recognized. For example, although the tag <code class="ce">&lt;TD HEIGHT=&amp;{height};&gt;</code> is valid HTML, it would not be valid XML because of the ampersand character.</li>
</UL>

<H4 class="dtH4">Properties</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_6zsj.htm">byteOrderMark</A></TD>
<TD width=70%>Determines whether or not to write the Byte Order Mark (BOM).</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_1w37.htm">disableOutputEscaping</A></TD>
<TD width=70%>Determines whether <code class="ce">disableOutputEscaping</code> is on or off. When set to True, special symbols such as "&amp;" are passed through literally.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_6ylv.htm">encoding</A></TD>
<TD width=70%>Sets encoding for the output.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_033n.htm">indent</A></TD>
<TD width=70%>Sets whether to indent output. Useful for "pretty printing." </TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_8do3.htm">omitXMLDeclaration</A></TD>
<TD width=70%>Not supported by <code class="ce">MXHTMLWriter</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_73n7.htm">output</A></TD>
<TD width=70%>Sets the destination for the output generated by <code class="ce">MXHTMLWriter</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_427n.htm">standalone</A></TD>
<TD width=70%>Not supported by <code class="ce">MXHTMLWriter</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_3eib.htm">version</A></TD>
<TD width=70%>Not supported by <code class="ce">MXHTMLWriter</code>.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Methods</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxhtmlwriter_95ir.htm">flush</A></TD>
<TD width=70%>Flushes the object's internal buffer to its destination IStream/string.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Requirements</H4>
<div class=filtered><span class="lang">[Visual Basic, C/C++]</span>

<P><B>Implementation:</B> msxml5.dll, msxml2.lib</P>

<P><B>Header and LIB files:</B> msxml2.h, msxml2.lib</P>
</div><!-- [Visual Basic, C/C++] -->

<P>To view reference material for Visual Basic or C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=4842">W3C XSL Transformations (XSLT) Version 1.0 Recommendation</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
