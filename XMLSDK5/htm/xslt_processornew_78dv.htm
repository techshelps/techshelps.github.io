<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Processing Template Rules</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="_processing_template_rules"></A>Processing Template Rules</H1>

<P>When the XSLT processor begins to process the XSLT tree, the processor looks for the <A HREF="xslt_docmapnew_12yb.htm">template rule</A> that points to the document root element in the source tree.</P>

<P>At its simplest, the template rule that points to this root element is as follows:</P>

<PRE class="code">&lt;xsl:template match="/<I>firstelement</I>"&gt;</PRE>

<P>Here the value of the match pattern indicates that this rule applies to the first element (represented by <I>firstelement</I>) of the root node (represented by the slash, /). In the <A HREF="sdk_booksxml_30rw.htm">Sample XML File (books.xml)</A>, the simplest template rule that points to the document root element is the following:</P>

<PRE class="code">&lt;xsl:template match="/catalog"&gt;</PRE>

<P>After the XSLT processor locates this initial template rule, the processor evaluates the rule and proceeds as follows:

<UL type="disc">
	<LI>If the rule has no conditional statements, it most likely directs the processor to simply transform this document root element. In this case, the processor transforms the root element and then looks for a template rule that matches the next highest element in the source tree. The processor transforms that element, and then looks for the next highest element. This process continues for all the elements in the source tree.</li>

	<LI>If the rule contains conditional statements, the processor evaluates each statement and executes the appropriate action. Often, each conditional statement directs the XSLT processor through a series of template rules that are specific to the conditional statement. Essentially, this means that the XSLT processor ignores all template rules associated with other conditional statements.</li>
</UL>

<H2 class="dtH2">Controlling Processing</H2>

<P>As you might have noticed, the processing of an XSLT file is not procedural like it is in most programming languages. That is, the XSLT processor does not sequentially process each template rule as it appears in the XSLT tree.</P>

<P>Under certain circumstances, however, the sequence in which the style sheet is processed can be determined, and to a limited extent controlled:

<UL type="disc">
	<LI><B>Using Conditional Processing</B> &#0151; XSLT provides the <code class="ce">&lt;xsl:if&gt;</code> and <code class="ce">&lt;xsl:choose&gt;</code> elements for testing conditions. By using these elements, an XSLT file can direct the processor through a specific series of templates.</li>

	<LI><B>Importing Other Style Sheets</B> &#0151; An XSLT file can import other XSLT files. The order in which the corresponding <code class="ce">&lt;xsl:import&gt;</code> elements appear in the original file determines the import precedence, which determines the order in which the processor applies the other XSLT files.</li>
</UL>

<H2 class="dtH2">Handling Template Rule Conflicts</H2>

<P>While processing an XSLT tree, the XSLT processor might encounter a conflict that must be resolved:

<UL type="disc">
	<LI>If the processor finds multiple template rules that match a given node, the processor needs to decide which of these template rules to use. For more information about how the processor makes this decision, see <A HREF="xslt_processornew_9sfn.htm">Processing Multiple Matching Templates Rules</A>.</li>

	<LI>If there are no matches, the processor uses one of the built-in template rules to decide how to handle the node. For more information about these built-in template rules, see <A HREF="xslt_processornew_6303.htm">Understanding the Built-in Template Rules</A>.</li>
</UL>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xslt_processornew_3rg3.htm">The XSLT Processor</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
