<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ElementType</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefelementtypeelement"></A>ElementType</H1>

<P>Defines an element type for use within the XML-Data Reduced (XDR) schema <B>Schema</B> element.</P>

<PRE class="syntax">&lt;ElementType
  content="{empty | textOnly | eltOnly | mixed}" 
  dt:type="<I>datatype</I>" 
  model="{open | closed}" 
  name="<I>idref</I>" 
  order="{one | seq | many}"&gt;</PRE>

<H4 class="dtH4">Attributes</H4>

<DL>
<DT><B>content</B></DT>

<DD>An indicator of whether the content must be empty or can contain text, elements, or both. The following values can be assigned to this attribute. The default value for the <B>content</B> attribute is <B>mixed</B>. When the <B>content</B> attribute is set to <B>mixed</B>, the <B>order</B> attribute requires a <B>many</B> value.

<P class="fineprint">

<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=18%><B>empty</B></TD>
<TD width=82%>The element cannot contain content.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>textOnly</B></TD>
<TD width=82%>The element can contain only text, not elements. </TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>eltOnly</B></TD>
<TD width=82%>The element can contain only the specified elements. It cannot contain any free text.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>mixed</B></TD>
<TD width=82%>The element can contain a mix of named elements and text. The default value is <B>mixed</B>. If the value of the <B>content</B> attribute is <B>mixed</B>, <B>minOccurs</B> and <B>maxOccurs</B> attributes will not trigger a validation error if the number of child elements is outside the specified boundary.</TD>
</TR>
</table></div>


<P class="fineprint">
</dd>
</DL>

<BLOCKQUOTE class="dtBlock">
<B>Note</B>&nbsp;&nbsp;&nbsp;Elements that have content="empty" or "textOnly" can not have model="open".</BLOCKQUOTE>

<H4 class="dtH4">Example</H4>

<P>The following example shows use of the <B>content</B> attribute with different values.</P>

<PRE class="code">&lt;ElementType name="x" "content="empty"/&gt;
&lt;ElementType name="x" content="textOnly"/&gt;
&lt;ElementType name="x" content="eltOnly"&gt;
  &lt;element type="y"/&gt;
&lt;/ElementType&gt;
&lt;ElementType name="x" content="mixed"&gt;
  &lt;element type="q"/&gt;
  &lt;element type="r"/&gt;
&lt;/ElementType&gt;</PRE>

<H4 class="dtH4">Example</H4>

<P>The following example shows the <B>content</B> attribute for an equivalent document type definition (DTD).</P>

<PRE class="code">empty: &lt;!ELEMENT x EMPTY&gt;
textOnly: &lt;!ELEMENT x (#PCDATA)&gt;
eltOnly: &lt;!ELEMENT x y&gt;
mixed: &lt;!ELEMENT x (#PCDATA | q | r)*&gt;</PRE>

<DL>
<DT><B>dt:type</B></DT>

<DD>The data type of the element. The valid data types are defined in the XDR Schema Data Types Reference.</dd>

<DT><B>model</B></DT>

<DD>An indicator of whether the content can include only what is defined in the content model. The default is <B>open</B>.

<PRE class="code">&lt;ElementType name="x" model="open"/&gt;</PRE>


<P>When the model is defined as <B>open</B>, the element can include additional elements or attributes not declared explicitly in the content model. These additional tags can come from the same or a different namespace. If they are in the same namespace, there must be a corresponding <B>ElementType</B> or <B>AttributeType</B> definition for them in the schema.


<P>When the model is defined as <B>closed</B>, the element cannot include elements and mixed content not specified in the content model. The DTD uses a closed model.
</dd>

<DT><B>name</B></DT>

<DD>The name of the element. This attribute is required. If this element type is declared as a valid child of another element type, this name is specified within an <B>element</B> element.

<PRE class="code">&lt;ElementType name="x"&gt;
&lt;/ElementType&gt; </PRE>


<P>The DTD equivalent is as follows.


<PRE class="code">&lt;!ELEMENT x EMPTY&gt; </PRE>
</dd>

<DT><B>order</B></DT>

<DD>An indicator of how the elements are to appear. This indicator can have the following values.

<P class="fineprint">

<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=18%><B>one</B></TD>
<TD width=82%>Permits only one of a set of elements. For a document to correctly validate when the <B>one</B> attribute is specified, the <B>model</B> attribute for the <B>ElementType</B> must be specified as <B>closed</B>.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>seq</B></TD>
<TD width=82%>Requires the elements to appear in the specified sequence.</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>many</B></TD>
<TD width=82%>Permits the elements to appear (or not appear) in any order. If you specify <B>many</B> for the <B>order</B> attribute, <B>maxOccurs</B> values are no longer relevant during validation.</TD>
</TR>
</table></div>


<P class="fineprint">


<P>The <B>seq</B> value is required to specify valid sequences. For example, it can be used to specify when a particular sequence, such as <code class="ce">x1,y1</code> or <code class="ce">x2,y2</code>, is valid but no other possible combinations are valid. The <B>seq</B> value serves the same role as parentheses in a DTD. The default value is <B>seq</B>.


<P>The following example demonstrates the <B>one</B> setting. The value of the <B>model</B> attribute must be <B>closed</B> when <B>one</B> is specified for the <B>order</B> attribute.


<PRE class="code">&lt;ElementType name="z" content="eltOnly" order="one" model="closed"&gt;
&lt;element type="x" minOccurs="1" maxOccurs="1"/&gt;
&lt;element type="y" minOccurs="1" maxOccurs="1"/&gt;
&lt;/ElementType&gt;</PRE>


<P>The following example demonstrates the <B>seq</B> setting.


<PRE class="code">&lt;ElementType name="x" content="eltOnly" order="one" model="closed"&gt;
  &lt;group order="seq" content="eltOnly" model="closed"&gt;
    &lt;element type="x1"/&gt;
    &lt;element type="y1"/&gt;
  &lt;/group&gt;
  &lt;group order="seq" content="eltOnly" model="closed"&gt;
    &lt;element type="x2"/&gt;
    &lt;element type="y2"/&gt;
  &lt;/group&gt;
&lt;/ElementType&gt;</PRE>


<P>The following example demonstrates the <B>many</B> setting.


<PRE class="code">&lt;ElementType name="x" content="eltOnly" order="many" model="closed"&gt;
  &lt;element type="q"/&gt;
  &lt;element type="r"/&gt;
&lt;/ElementType&gt;</PRE>


<P>The <B>many</B> setting of the <B>order</B> attribute makes the <B>minOccurs</B> and <B>maxOccurs</B> attributes irrelevant during validation. Rather than using the <B>many</B> setting for the <B>order</B> attribute in conjunction with <B>minOccurs</B> and <B>maxOccurs</B>, use the <B>seq</B> setting instead. For example, consider the following schema, which sets <code class="ce">order="seq"</code>.


<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;Schema name="SampleSchema" xmlns="urn:schemas-microsoft-com:xml-data"
    xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
    &lt;ElementType name="PublisherID" model="closed" dt:type="ID"
      content="textOnly"&gt;
    &lt;/ElementType&gt;
    &lt;ElementType name="PublisherName" model="closed" dt:type="string"
      content="textOnly"&gt;
    &lt;/ElementType&gt;

    &lt;ElementType name="Publisher" model="closed" content="eltOnly"
      order="many"&gt;
      &lt;element type="PublisherID"/&gt;
      &lt;element type="PublisherName"/&gt;
    &lt;/ElementType&gt;

    &lt;ElementType name="Book" model="closed" content="eltOnly"
      <B>order="seq"</B>&gt;
    &lt;element type="Publisher" minOccurs="1" maxOccurs="1"/&gt;
    &lt;/ElementType&gt;  

&lt;/Schema&gt;</PRE>
</dd>
</DL>

<P>If the following XML document is validated against the preceding schema, the validation fails because the number of <B>Publisher</B> elements exceeds the specified <B>maxOccurs</B> value of <B>1</B>. However, if the <B>order</B> value is set to <B>many</B>, the validation will incorrectly succeed because the <code class="ce">maxOccurs="1"</code> setting will be ignored.</P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;Book xmlns="x-schema:orderschema.xml" &gt;

&lt;Publisher&gt;
    &lt;PublisherID&gt;P1&lt;/PublisherID&gt;
    &lt;PublisherName&gt;GG&amp;G&lt;/PublisherName&gt;
&lt;/Publisher&gt;
&lt;Publisher&gt;
    &lt;PublisherID&gt;P2&lt;/PublisherID&gt;
    &lt;PublisherName&gt;North&lt;/PublisherName&gt;
&lt;/Publisher&gt;

&lt;/Book&gt;</PRE>

<H4 class="dtH4">Element Information</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=31%><B>Number of occurrences</B></TD>
<TD width=69%>Unlimited.</TD>
</TR>

<TR VALIGN="top">
<TD width=31%><B>Parent elements</B></TD>
<TD width=69%><A HREF="xsd_xdrref_0390.htm">Schema</A></TD>
</TR>

<TR VALIGN="top">
<TD width=31%><B>Child elements</B></TD>
<TD width=69%><A HREF="xsd_xdrref_6ho4.htm">attribute</A>, <A HREF="xsd_xdrref_2m44.htm">AttributeType</A>, <A HREF="xsd_xdrref_5fqs.htm">datatype</A>, <A HREF="xsd_xdrref_2wdw.htm">description</A>, <A HREF="xsd_xdrref_21o4.htm">element</A>, <A HREF="xsd_xdrref_5184.htm">group</A></TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Element Properties</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=29%>TAG</TH>
<TH width=71%>Explanation</TH>
</TR>

<TR VALIGN="top">
<TD width=29%>Name="idref"</TD>
<TD width=71%><B>ElementType</B> and <B>AttributeType</B> elements must have names.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>Model="open"</TD>
<TD width=71%>Elements or mixed content not specified in the content model is permitted in this element. To subclass a particular definition, this setting must be open (when inheritance is implemented in the future). Not valid on an <B>ElementType</B> with content="textOnly".</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>Model="closed"</TD>
<TD width=71%>Elements or mixed content not specified in the content model is not permitted in this element.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>content="empty"</TD>
<TD width=71%>The element may not contain anything.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>content="textOnly"</TD>
<TD width=71%>The element may contain only text, not elements. If model="open", the element may still contain text and other unnamed elements.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><B>*</B><BR>
content="mixed"</TD>
<TD width=71%>The element may contain a mixture of named elements and intermingled text. If model="open", the element may still contain text and other unnamed elements. Implies order='many' and maxOccurs="*"!</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>order='one'</TD>
<TD width=71%>Permits only one of a set of elements.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><B>*</B><BR>
order='seq'</TD>
<TD width=71%>Indicates that the elements must appear in the listed sequence. This is similar to the default for a list of elements, however this is necessary in order to group sequences, as in the example where either <code class="ce">x1,y1</code> or <code class="ce">x2,y2</code> is legal but where no other combinations are. Serves the same role as parentheses in a DTD.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>order='many'</TD>
<TD width=71%>The elements may appear (or not appear) in any order.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>dt:type=<I>datatype</I></TD>
<TD width=71%>Specifies that the element should contain an integer. For a list of primitive data types, see the XDR Schema Data Types Reference.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Remarks</H4>

<P>The term "element type" refers to the element type of which all elements sharing a name are instances. Element types are declared in schemas; elements occur in documents. Element types are declared with the <B>ElementType</B> element type.</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">&lt;ElementType name="x"&gt;
  &lt;!-- element content declarations go here --&gt;
&lt;/ElementType&gt; </PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_xdrref_9isz.htm">XDR Schema Elements</A> | <A HREF="xsd_xdrref_3w6d.htm">XDR Schema Data Types Reference</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
