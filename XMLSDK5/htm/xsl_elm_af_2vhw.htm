<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>&lt;xsl:element&gt; Element</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefxslelementelement"></A>&lt;xsl:element&gt; Element</H1>

<P>Creates an output element with the specified name.</P>

<PRE class="syntax">&lt;xsl:element
  name = "<I>element-name</I>"  
  namespace = "<I>uri-reference</I>"
  use-attribute-sets = <A HREF="xsl_xsltsyntax_0qlv.htm">QNames</A>&gt;
&lt;/xsl:element&gt;</PRE>

<H4 class="dtH4">Attributes</H4>

<DL>
<DT><B>name</B></DT>

<DD>Required. The name of the element to create. If this value is a qualified name (QName), the element node is created in the namespace currently bound to the prefix, unless overridden by a <code class="ce">namespace</code> attribute. The value of the <code class="ce">name</code> attribute is interpreted as an attribute value template&#0151;that is, expressions in curly braces are evaluated and converted to strings, as in <A HREF="xsl_elm_qz_3gc4.htm">&lt;xsl:value-of&gt;</A>. This allows the name of the element to be calculated or obtained from the source XML.</dd>

<DT><B>namespace</B></DT>

<DD>The namespace URI of the created element. If the <code class="ce">name</code> attribute contains a QName, the prefix specified there will be bound to the namespace specified in the <code class="ce">namespace</code> attribute. This might require additional namespace declarations when serializing. The <code class="ce">namespace</code> value is interpreted as an attribute value template.</dd>

<DT><B>use-attribute-sets</B></DT>

<DD>A white space separated list of attribute sets, specified as a qualified name. Specifying this attribute declares each attribute in each listed attribute set.</dd>
</DL>

<H4 class="dtH4">Element Information</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=34%><B>Number of occurrences</B></TD>
<TD width=66%>Unlimited</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Parent elements</B></TD>
<TD width=66%><A HREF="xsl_elm_af_1c38.htm">xsl:copy</A>, xsl:element, <A HREF="xsl_elm_af_7zec.htm">xsl:fallback</A>, <A HREF="xsl_elm_af_2bxw.htm">xsl:for-each</A>, <A HREF="xsl_elm_gp_1z3o.htm">xsl:if</A>, <A HREF="xsl_elm_gp_5xx0.htm">xsl:message</A>, <A HREF="xsl_elm_gp_4agk.htm">xsl:otherwise</A>, <A HREF="xsl_elm_gp_5ek4.htm">xsl:param</A>, <A HREF="xsl_elm_qz_120k.htm">xsl:template</A>, <A HREF="xsl_elm_qz_94hg.htm">xsl:variable</A>, <A HREF="xsl_elm_qz_4kj8.htm">xsl:when</A>, <A HREF="xsl_elm_qz_1f5g.htm">xsl:with-param</A>, output elements</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Child elements</B></TD>
<TD width=66%><A HREF="xsl_elm_af_7vqs.htm">xsl:apply-templates</A>, <A HREF="xsl_elm_af_05pw.htm">xsl:attribute</A>, <A HREF="xsl_elm_af_11x0.htm">xsl:call-template</A>, <A HREF="xsl_elm_af_9cz8.htm">xsl:choose</A>, <A HREF="xsl_elm_af_58tw.htm">xsl:comment</A>, <A HREF="xsl_elm_af_1c38.htm">xsl:copy</A>, <A HREF="xsl_elm_af_8zxw.htm">xsl:copy-of</A>, xsl:element, <A HREF="xsl_elm_af_2bxw.htm">xsl:for-each</A>, <A HREF="xsl_elm_gp_1z3o.htm">xsl:if</A>, <A HREF="xsl_elm_gp_1cdw.htm">xsl:processing-instruction</A>, <A HREF="xsl_elm_qz_5sl0.htm">xsl:text</A>, <A HREF="xsl_elm_qz_3gc4.htm">xsl:value-of</A>, <A HREF="xsl_elm_qz_94hg.htm">xsl:variable</A>, output elements</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Remarks</H4>

<P>The <code class="ce">&lt;xsl:element&gt;</code> element allows an element to be created with a computed name. The name of the element to be created is specified by a required <code class="ce">name</code> attribute and an optional <code class="ce">namespace</code> attribute. The content of the <code class="ce">&lt;xsl:element&gt;</code> element is a template for the attributes and children of the created element.</P>

<P>This element provides an escaping mechanism for creating elements with namespace clashes, such as XSLT itself.</P>

<H4 class="dtH4">Example</H4>

<P>The <code class="ce">&lt;xsl:element&gt;</code> element is necessary because XSLT elements cannot be used as output elements. This example shows how to output an <code class="ce">&lt;xsl:template&gt;</code> element.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>   To test this example, you need to use a script. For more information, see <A HREF="xslt_howdoi_2put.htm">Initiate XSLT in a Script</A>.</BLOCKQUOTE>

<P class="label"><B>XML File (item.xml)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="element.xsl" ?&gt;
&lt;root&gt;
   &lt;item&gt;My Item&lt;/item&gt;
&lt;/root&gt;</PRE>

<P class="label"><B>XSLT File (element.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform" &gt;

&lt;xsl:template match="item"&gt;
   &lt;xsl:element name="xsl:template"&gt;
      &lt;xsl:attribute name="match"&gt;cost&lt;/xsl:attribute&gt;
      &lt;xsl:attribute name="xml:space"&gt;preserve&lt;/xsl:attribute&gt;
      &lt;xsl:apply-templates/&gt;
   &lt;/xsl:element&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</PRE>

<P class="label"><B>Output</B></P>

<P>This is the formatted output:</P>

<P>My Item</P>

<P>The following is the processor output, with line breaks added for clarity.</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:template match="cost" 
      xml:space="preserve" 
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
My Item&lt;/xsl:template&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_datadriven_6acz.htm">Generating Comments, Processing Instructions, and Elements</A> | <A HREF="xsl_xsltsyntax_0qlv.htm">Qualified Names</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
