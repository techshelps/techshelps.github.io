<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>splitText Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthsplittext"></A>splitText Method</H1>

<P>Splits this text node into two text nodes at the specified offset and inserts the new text node into the tree as a sibling that immediately follows this node.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">var objXMLDOMText = oXMLDOMText.splitText(offset);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>offset</I></DT>

<DD>A long integer. The number of characters at which to split this text node into two nodes, starting from zero.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>An object. Returns the new text node.</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var nodeRoot, nodeText, newNodeText;
xmlDoc.async = false;
xmlDoc.loadXML("&lt;root&gt;Hello World!&lt;/root&gt;");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;nodeRoot = xmlDoc.documentElement;
&nbsp;&nbsp;&nbsp;nodeText = nodeRoot.firstChild;
&nbsp;&nbsp;&nbsp;alert(nodeRoot.childNodes.length);
&nbsp;&nbsp;&nbsp;newNodeText = nodeText.splitText(6);
&nbsp;&nbsp;&nbsp;alert(nodeRoot.childNodes.length);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">Set objXMLDOMText = oXMLDOMText.splitText(offset)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>offset</I></DT>

<DD>A long integer. The number of characters at which to split this text node into two nodes, starting from zero.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>An object. Returns the new text node.</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim nodeRoot As IXMLDOMElement
Dim nodeText As IXMLDOMText
Dim newNodeText As IXMLDOMText
xmlDoc.async = False
xmlDoc.loadXML "&lt;root&gt;Hello World!&lt;/root&gt;"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set nodeRoot = xmlDoc.documentElement
&nbsp;&nbsp;&nbsp;Set nodeText = nodeRoot.firstChild
&nbsp;&nbsp;&nbsp;MsgBox nodeRoot.childNodes.length
&nbsp;&nbsp;&nbsp;Set newNodeText = nodeText.splitText(6)
&nbsp;&nbsp;&nbsp;MsgBox nodeRoot.childNodes.length
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT splitText(
    long offset,
    IXMLDOMText **rightHandTextNode);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>offset</I> [in]</DT>

<DD>The number of characters at which to split this text node into two nodes, starting from zero.</dd>

<DT><I>rightHandTextNode</I> [out, retval]</DT>

<DD>The new text node.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>S_FALSE</DT>

<DD>The value when returning Null.</dd>

<DT>E_FAIL</DT>

<DD>The value returned if an error occurs.</dd>
</DL>

<H4 class="dtH4">C/C++ Example</H4>

<PRE class="code">IXMLDOMText *pIXMLDOMTextTemp = NULL;
IXMLDOMText *pIXMLDOMText = NULL;
IXMLDOMNode *pIXMLDOMNodeTemp = NULL;
IXMLDOMElement *pIXMLDOMElement = NULL;
IXMLDOMNode *pIXMLDOMNode = NULL;
DOMNodeType DOMNodeTyp;
VARIANT varValue;
HRESULT hr;

try
{
   // Create an instance of DOMDocument and initialize pIXMLDOMDocument.
   // Load/create an XML fragment.
   hr = pIXMLDOMDocument-&gt;get_documentElement(&amp;pIXMLDOMElement);
   SUCCEEDED(hr) ? 0 : throw hr;

   if(pIXMLDOMElement)
   {
      hr = pIXMLDOMElement-&gt;QueryInterface(IID_IXMLDOMNode, (void 
            **)&amp;pIXMLDOMNode);
      SUCCEEDED(hr) ? 0 : throw hr;

      pIXMLDOMElement-&gt;Release();
      pIXMLDOMElement = NULL;

      while(pIXMLDOMNode)
      {
         hr = pIXMLDOMNode-&gt;get_nodeType(&amp;DOMNodeTyp);
         if(SUCCEEDED ( hr) &amp;&amp; (DOMNodeTyp == NODE_TEXT))
         {
            hr = pIXMLDOMNode-&gt;QueryInterface(IID_IXMLDOMText, 
                     (void**)&amp;pIXMLDOMText);
            SUCCEEDED(hr) ? 0 : throw hr;

            if(pIXMLDOMText)
            {
            hr = pIXMLDOMText-&gt;splitText(2, &amp;pIXMLDOMTextTemp);
            if(SUCCEEDED(hr) &amp;&amp; pIXMLDOMTextTemp)
            {
               hr = pIXMLDOMTextTemp-&gt;get_nodeValue(&amp;varValue);
               if(SUCCEEDED(hr))
                  ::MessageBox(NULL, _bstr_t(varValue), _T("Notation Public ID"), MB_OK);
               pIXMLDOMTextTemp-&gt;Release();
               pIXMLDOMTextTemp = NULL;
            }
            pIXMLDOMText-&gt;Release();
            pIXMLDOMText = NULL;
         }
            pIXMLDOMNode-&gt;Release();
            pIXMLDOMNode = NULL;
            break;
         }
         pIXMLDOMNode-&gt;get_firstChild(&amp;pIXMLDOMNodeTemp);
         pIXMLDOMNode-&gt;Release();
         pIXMLDOMNode = pIXMLDOMNodeTemp;
         pIXMLDOMNodeTemp = NULL;
      }
   }
}
catch(...)
{
   if(pIXMLDOMNodeTemp)
      pIXMLDOMNodeTemp-&gt;Release();
   if(pIXMLDOMNode)
      pIXMLDOMNode-&gt;Release();
   if(pIXMLDOMTextTemp)
      pIXMLDOMTextTemp-&gt;Release();
   if(pIXMLDOMText)
      pIXMLDOMText-&gt;Release();
   if(pIXMLDOMElement)
      pIXMLDOMElement-&gt;Release();
   DisplayErrorToUser();
}
// Release pIXMLDOMDocument when finished with it.</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>If you specify an offset of zero, the first text node is empty and the right-hand text node contains the previous contents of the node. If you specify an offset beyond the end of the string, a new, empty right-hand text node is created.</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P>Applies to: <A HREF="xml_obj_ixmldomcdatasection_4u9a.htm">IXMLDOMCDATASection</A> | <A HREF="xml_obj_ixmldomtext_8sxg.htm">IXMLDOMText</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
