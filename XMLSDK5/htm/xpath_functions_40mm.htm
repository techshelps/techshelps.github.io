<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ms:namespace-uri Function</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="msnamespaceurifunction"></A>ms:namespace-uri Function</H1>

<P>Resolves the prefix part of a qualified name into a namespace URI.</P>

<PRE class="syntax"><I>string</I> ms:namespace-uri(string)</PRE>

<H4 class="dtH4">Remarks</H4>

<P>The <code class="ce">ms:namespace-uri()</code> function assumes that the parameter is a qualified name (for example, <code class="ce">q:mine</code> or <code class="ce">coffee:beans</code>) and attempts to resolve its prefix in the context of the current node. If the argument is not a qualified name or a noncolon name, this function returns an empty string. For nonstring arguments, this function behaves as if a <code class="ce">string()</code> function were applied.</P>

<H4 class="dtH4">Example</H4>

<P>The following example uses an XSLT template rule to select all the elements in <B>books.xml</B>, and to output the elements' data types and the namesapce URI as defined in <B>books.xsd</B>. </P>

<P class="label"><B>XML File (books.xml)</B></P>

<P>Use the XML file in <A HREF="xpath_functions_4pdf.htm">Using XPath Extension Functions for XSD Support</A>.</P>

<P class="label"><B>XSD File (books.xsd)</B></P>

<P>Use the XSD file in <A HREF="xpath_functions_4pdf.htm">Using XPath Extension Functions for XSD Support</A>.</P>

<P class="label"><B>HTML File (books.html)</B></P>

<P>The HTML file is the same as that listed in the <A HREF="xpath_functions_7eem.htm">ms:type-namespace-uri([node-set]) Function</A> topic. </P>

<P class="label"><B>XSLT File (books.xsl)</B></P>

<PRE class="code"><code class="ce">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0" 
     xmlns:ms="urn:schemas-microsoft-com:xslt"   
     xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
  &lt;xsl:template match="text()"/&gt;
  &lt;xsl:output method="html"   
     omit-xml-declaration="yes"/&gt;

  &lt;xsl:template match="/"&gt;
     &lt;xsl:apply-templates/&gt;
  &lt;/xsl:template&gt;

  &lt;xsl:template match="*"&gt;
    &lt;xsl:if test="</code><B>ms:namespace-uri() != ''</B><code class="ce">"&gt;</code>
<code class="ce">      &lt;DIV&gt;</code>
<code class="ce">          (ms:) </code>
<code class="ce">          &lt;xsl:value-of select="</code><B>ms:namespace-uri(name())</B><code class="ce">"/&gt;:</code>
<code class="ce">          &lt;xsl:value-of select="</code><B>ms:local-name(name())</B><code class="ce">"/&gt;</code>
<code class="ce">      &lt;/DIV&gt;</code>
<code class="ce">      &lt;DIV&gt;</code>
<code class="ce">          (std:) </code>
<code class="ce">          &lt;xsl:value-of select="</code><B>namespace-uri()</B><code class="ce">"/&gt;:</code>
<code class="ce">          &lt;xsl:value-of select="</code><B>local-name()</B><code class="ce">"/&gt;</code>
<code class="ce">      &lt;/DIV&gt;</code>
<code class="ce">      &lt;DIV&gt;</code>
<code class="ce">          (name():) </code>
<code class="ce">          &lt;xsl:value-of select="</code><B>name()</B><code class="ce">"/&gt; </code>
<code class="ce">      &lt;/DIV&gt;</code>
<code class="ce">    &lt;/xsl:if&gt;</code>
<code class="ce">    &lt;xsl:apply-templates/&gt;</code>
<code class="ce">  &lt;/xsl:template&gt;</code>

<code class="ce">&lt;/xsl:stylesheet&gt;</code></PRE>

<P class="label"><B>Output</B></P>

<PRE class="code">(ms:) urn:books:catalog
(std:) urn:books:catalog
(name():) x:catalog</PRE>

<P><code class="ce">The first line of the output is the result returned by the ms:namespace-uri(string) plus ms:local-name(string). The second line is the results from the standard XPath function, namespace-uri(nodeset), local-name(nodeset). The third line is the result from the standard XPath function, name(nodeset).</code></P>

<H4 class="dtH4">See Also</H4>

<DL>
<DT><A HREF="xsd_devdatatypes_065v.htm">Data Types in Schemas</A> | <A HREF="xsd_ref_7gh1.htm">XML Schema Reference (XSD)</A> | <A HREF="xsd_ref_5bc5.htm">XML Data Types Reference</A></DT>
</DL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
