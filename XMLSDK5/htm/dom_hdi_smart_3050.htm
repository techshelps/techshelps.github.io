<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Perform XSL Transformations (Smart)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="dom_hdi_cpp_performxslt_smart"></A>Perform XSL Transformations (Smart)</H1>

<P>In general, performing XSL Transformations (XSLT) requires two DOM objects: one for the XML data file, and one for the XSLT style sheet. It also involves calling either the <code class="ce">transformNode</code> method or the <code class="ce">transformNodeToObject</code> method on the DOM object that corresponds to the XML data. The DOM object holding the XSLT style sheet is the input for the method. The first method returns the result as a string, and the second method returns the result as an object. </P>

<P>In the following C/C++ Win32 Console Application project, we demonstrate how to do this. The XSLT project uses the following files.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Component</TH>
<TH width=50%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="dom_hdi_smart_6odw.htm">Source: XSLTsmart.cpp</A></TD>
<TD width=50%>Transforms an XML data file with an XSLT style sheet.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="dom_hdi_smart_6704.htm">Resource: stocks.xml and stocks.xsl</A></TD>
<TD width=50%>An XML data file and an XSLT style sheet.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="dom_hdi_smart_0ees.htm">Output</A></TD>
<TD width=50%>When you build and run the <B>XSLT</B> project, you should get this output in a console window.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P class="labelproc"><B>Create the XSLT project in Visual C++</B>

<UL type="disc">
	<LI>Create a Win32 console application in Visual C++. For detailed instructions on how to do this, see <A HREF="dom_hdi_9ypf.htm">Set Up My Visual C++ Project</A>. Name the project <B>XSLTsmartProj</B>.</li>
</UL>

<P>Next, we'll add the <A HREF="dom_hdi_smart_6odw.htm">source code</A> for the <B>XSLTsmart</B> project.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
