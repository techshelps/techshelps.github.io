<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>&lt;xsl:copy-of&gt; Element</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefxslcopyofelement"></A>&lt;xsl:copy-of&gt; Element</H1>

<P>Inserts subtrees and result tree fragments into the result tree.</P>

<PRE class="syntax">&lt;xsl:copy-of
  select = <A HREF="xsl_xsltsyntax_51pv.htm">Expression</A>/&gt;</PRE>

<H4 class="dtH4">Attributes</H4>

<DL>
<DT><B>select</B></DT>

<DD>Required. XPath expression identifying nodes to be copied. The subtree below each of these nodes is copied to the result tree in its entirety.</dd>
</DL>

<H4 class="dtH4">Element Information</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=34%><B>Number of occurrences</B></TD>
<TD width=66%>Unlimited</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Parent elements</B></TD>
<TD width=66%><A HREF="xsl_elm_af_05pw.htm">xsl:attribute</A>, <A HREF="xsl_elm_af_58tw.htm">xsl:comment</A>, <A HREF="xsl_elm_af_1c38.htm">xsl:copy</A>, <A HREF="xsl_elm_af_2vhw.htm">xsl:element</A>, <A HREF="xsl_elm_af_7zec.htm">xsl:fallback</A>, <A HREF="xsl_elm_af_2bxw.htm">xsl:for-each</A>, <A HREF="xsl_elm_gp_1z3o.htm">xsl:if</A>, <A HREF="xsl_elm_gp_5xx0.htm">xsl:message</A>, <A HREF="xsl_elm_gp_4agk.htm">xsl:otherwise</A>, <A HREF="xsl_elm_gp_5ek4.htm">xsl:param</A>, <A HREF="xsl_elm_gp_1cdw.htm">xsl:processing-instruction</A>, <A HREF="xsl_elm_qz_120k.htm">xsl:template</A>, <A HREF="xsl_elm_qz_94hg.htm">xsl:variable</A>, <A HREF="xsl_elm_qz_4kj8.htm">xsl:when</A>, <A HREF="xsl_elm_qz_1f5g.htm">xsl:with-param</A>, output elements</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Child elements</B></TD>
<TD width=66%>(No child elements)</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Remarks</H4>

<P>When the result of evaluating the expression is a result tree fragment, the complete fragment is copied into the result tree. When the result is a node-set, all the nodes in the set are copied in document order into the result tree. Copying an element node copies the attribute nodes, namespace nodes, and children of the element node, as well as the element node itself. A root node is copied by copying its children. When the result is neither a node-set nor a result tree fragment, the result is converted to a string and then inserted into the result tree, as with <code class="ce">&lt;xsl:value-of&gt;</code>.</P>

<H4 class="dtH4">Example</H4>

<P>This sample XSLT file operates against the sample XML file to find a <code class="ce">&lt;person&gt;</code> element with <code class="ce">&lt;given-name&gt;</code> and <code class="ce">&lt;family-name&gt;</code> child elements. The paragraph will contain the first <code class="ce">&lt;given-name&gt;</code> child element of the current node, including any attributes and child elements, followed by a space and the first <code class="ce">&lt;family-name&gt;</code> child element, including any attributes and child elements, of the current node.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>   To test this example, you need to use a script. For more information, see <A HREF="xslt_howdoi_2put.htm">Initiate XSLT in a Script</A>.</BLOCKQUOTE>

<P class="label"><B>XML File (family.xml)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;?xml-stylesheet type="text/xsl" href="family.xsl"?&gt;
&lt;family&gt;
  &lt;person&gt;
    &lt;given-name age="10"&gt;
      &lt;name&gt;Fred&lt;/name&gt;
      &lt;nick-name&gt;Freddy&lt;/nick-name&gt;
    &lt;/given-name&gt;
    &lt;family-name&gt;Smith&lt;/family-name&gt;
  &lt;/person&gt;
  &lt;person&gt;
    &lt;given-name age="10"&gt;
      &lt;name&gt;Robert&lt;/name&gt;
      &lt;nick-name&gt;Bob&lt;/nick-name&gt;
    &lt;/given-name&gt;
    &lt;family-name&gt;Smith&lt;/family-name&gt;
  &lt;/person&gt;
&lt;/family&gt;</PRE>

<P class="label"><B>XSLT File (family.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform" &gt;

&lt;xsl:template match="person"&gt;
  &lt;p&gt;
    &lt;xsl:copy-of select="given-name"/&gt;
    &lt;xsl:text&gt; &lt;/xsl:text&gt;
    &lt;xsl:copy-of select="family-name"/&gt;
  &lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</PRE>

<P class="label"><B>Output</B></P>

<P>This is the formatted output:</P>

<BLOCKQUOTE class="dtBlock">
Fred Freddy Smith</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Robert Bob Smith</BLOCKQUOTE>

<P>The following is the processor output, with line breaks added for clarity.</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;p&gt;&lt;given-name age="10"&gt;
&lt;name&gt;Fred&lt;/name&gt;
&lt;nick-name&gt;Freddy&lt;/nick-name&gt;
&lt;/given-name&gt; 
&lt;family-name&gt;Smith&lt;/family-name&gt;&lt;/p&gt;
&lt;p&gt;&lt;given-name age="10"&gt;
&lt;name&gt;Robert&lt;/name&gt;
&lt;nick-name&gt;Bob&lt;/nick-name&gt;
&lt;/given-name&gt; 
&lt;family-name&gt;Smith&lt;/family-name&gt;&lt;/p&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_elm_qz_3gc4.htm">&lt;xsl:value-of&gt; Element</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
