<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a Manifest for Your Component DLL</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmsccreatingamanifestforyourcomponentdll"></A>Creating a Manifest for Your Component DLL</H1>

<P>The following procedure shows how to configure an ActiveX/COM DLL that uses MSXML 5.0 and which is in turn referenced by a Visual Basic EXE application. Here is a diagram of how this application design looks:</P>

<PRE class="syntax">Project1.exe (a Visual Basic Standard EXE)
      calls DllTest.dll (ActiveX/COM DLL)
           which depends upon and uses MSXML 5.0 assembly</PRE>

<P>In this scenario, to achieve side-by-side installation under Windows XP you need to:

<UL type="disc">
	<LI>Create Project1.exe, a simple client application for testing Dlltest.dll</li>

	<LI>Author an assembly manifest for DllTest.dll.</li>
</UL>

<P class="labelproc"><B>To create a manifest for your component DLL</B>

<OL type="1">
	<LI>Create Dlltest.dll and Project1.exe to use with procedure.</li>
</OL>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;If you want, you can create these files yourself from scratch, using either Visual Basic or Visual C++. For more information about how to create these files using Visual Basic, see <A HREF="sdk_dependencies_8r77.htm">Using Visual Basic to Create Sample DLL and EXE files</A>.</BLOCKQUOTE>

<OL type="1">
	<LI>Before you begin, you need to know the following information about DllTest.dll:
<OL type="a">
	<LI>Description</li>

	<LI>CLSID</li>

	<LI>ProgID</li>

	<LI>Threading model</li>

	<LI>Type library ID</li>
</OL>

<P>If you are using Visual C++, a good place to look is the .rgs file, which looks like this:

<PRE class="code">HKCR
{
   DllTest.FusionTest.1 = s <code><b class="cfe">'FusionTest Class</b></code><B>'</B>
   {
      <code><b class="cfe">CLSID = s '{CDC6C7A2-C16B-4D84-8E46-EBEDBCCC50BF}'</b></code>
   }
   <code><b class="cfe">DllTest.FusionTest</b></code> = s '<code><b class="cfe">FusionTest Class</b></code>'
   {
      CLSID = s '{CDC6C7A2-C16B-4D84-8E46-EBEDBCCC50BF}'
      CurVer = s 'DllTest.FusionTest.1'
   }
   NoRemove CLSID
   {
      ForceRemove {CDC6C7A2-C16B-4D84-8E46-EBEDBCCC50BF} = s 'FusionTest Class'
      {
         <code><b class="cfe">ProgID = s 'DllTest.FusionTest.1'</b></code>
         VersionIndependentProgID = s 'DllTest.FusionTest'
         ForceRemove 'Programmable'
         InprocServer32 = s '%MODULE%'
         {
            <code><b class="cfe">val ThreadingModel = s 'Apartment'</b></code>
         }
         <code><b class="cfe">'TypeLib' = s '{4D2F7845-6A75-40EF-AD97-179C5088E507}'</b></code>
      }
   }
}</PRE>

<P>If you are using Visual Basic, you might want to use the OLE Viewer tool to browse these properties for the object and its type library.
</li>

	<LI>Open Notepad, and copy and paste following code. Save it as <B>DllTest.dll.manifest</B> in the same folder as the Project1.exe and DllTest.dll files.
<PRE class="code">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0"&gt;
&lt;assemblyIdentity
     version="1.0.0.1" 
     processorArchitecture="x86" 
     name="<code><b class="cfe">DllTest.dll</b></code>" 
     type="win32" /&gt;
&lt;file name="<code><b class="cfe">DllTest.dll</b></code>"&gt;
     &lt;typelib 
          tlbid="<code><b class="cfe">{4D2F7845-6A75-40EF-AD97-179C5088E507}</b></code>"
          version="1.0" 
          helpdir=""/&gt;
    &lt;dependentAssembly&gt;
        &lt;assemblyIdentity
            type="win32"
            name="Microsoft.MSXML2"
            version="<code><b class="cfe">5.0.0.0</b></code>"
            processorArchitecture="X86"
            publicKeyToken="<code><b class="cfe">6bd6b9abf345378f</b></code>"
            language="*"
        /&gt;
    &lt;/dependentAssembly&gt;
&lt;/file&gt;
&lt;/assembly&gt;</PRE>
</li>

	<LI>After you have pasted the sample code above, you must update it as appropriate for the type library and object used by your application. To do this, change the featured values (those in bold in the sample code) as follows for the DLL file used by your application:
<OL type="a">
	<LI>For the <code class="ce">name</code> attribute of the first <code class="ce">&lt;assemblyIdentity&gt;</code> element, set the value to "DllTest.dll".</li>

	<LI>For the <code class="ce">name</code> attribute of the <code class="ce">&lt;file&gt;</code> element, set the value to "DllTest.dll".</li>

	<LI>For the <code class="ce">tlbid</code> attribute of the <code class="ce">&lt;typelib&gt;</code> element, set the value to the type library ID for the DLL.</li>

	<LI>For the <code class="ce">description</code> attribute of the <code class="ce">&lt;comClass&gt;</code> element, set the value to the description for the DLL.</li>

	<LI>For the <code class="ce">clsid</code> attribute of the <code class="ce">&lt;comClass&gt;</code> element, set the value to the CLSID for the DLL.</li>

	<LI>For the <code class="ce">threadingModel</code> attribute of the <code class="ce">&lt;comClass&gt;</code> element, set the value to the threading model implemented for the DLL.</li>

	<LI>For the <code class="ce">tlbid</code> attribute of the <code class="ce">&lt;comClass&gt;</code> element, set the value to the type library ID for the DLL.</li>
</OL>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;If you have additional DLLs packaged in this assembly, you can add additional instances of the <CODE>&lt;file&gt;</CODE> element, for example:</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">&lt;file name="</code><B>Another.dll</B><code class="ce">"&gt;</code></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">. . .</code></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">&lt;/file&gt;</code></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
You will then need to repeat this step (and each of its substeps) for each <CODE>&lt;file&gt;</CODE> element you add.</BLOCKQUOTE>
</li>

	<LI>Run and test the application.
<OL type="a">
	<LI>Double-click Project1.exe.
<P>You should see a form with a <B>Test DLL</B> button centered on it.
</li>

	<LI>Click <B>Test DLL</B>.
<P>You should see a message box that displays "&lt;test/&gt;". If you do, the application has been successfully tested.

<P>If the application does not run correctly in this way, you will need to do further troubleshooting to determine the problem. For example, you might see this error:

<PRE class="code">"This application has failed to start because the application configuration is incorrect. Reinstalling the application may fix this problem."</PRE>

<P>If this occurs, check the manifest file for errors and validate it. You do not need to reinstall your application to perform this checking. For more information about tools for checking manifests, see the following section.
</li>
</OL>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;Modifying your component so that it becomes public (i.e., shared globally to other applications on the system) requires a number of additional steps and considerations. For more information, download and review the whitepaper referenced at the end of this article, <A HREF="http://msdn.microsoft.com/library/en-us/dnwxp/html/sidexsidewinxp.asp">How to Build and Service Isolated Applications and Side-by-Side Assemblies for Windows XP</A>.</BLOCKQUOTE>
</li>
</OL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
