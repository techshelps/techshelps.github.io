<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Template-Driven Transformations</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcontemplatedriventransformations"></A>Template-Driven Transformations</H1>

<P>In general, XSLT transformations fall into two categories: template-driven and data-driven. This section provides information about template-driven transformations. The <A HREF="xsl_datadriven_1vqr.htm">Data-Driven Transformations</A> section follows.</P>

<P>In a template-driven transformation, the sequence of the output is determined by template-rules used in the transformation. The following is an example of a simple template-driven transformation.</P>

<PRE class="code"><code class="ce">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0" 
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
     &lt;xsl:template match="/"&gt;
    &lt;HTML&gt;
      &lt;HEAD&gt;
      &lt;/HEAD&gt;
      &lt;BODY&gt;
         &lt;H1&gt;&lt;xsl:value-of select="/books/book/title"/&gt;&lt;/H1&gt;
         &lt;H3&gt;&lt;xsl:value-of select="/books/book/author"/&gt;&lt;/H3&gt;
         &lt;P&gt;
           &lt;SPAN&gt;Abstract:&lt;/SPAN&gt;
           &lt;SPAN&gt;&lt;xsl:value-of select="/books/book/abstract"/&gt;&lt;/SPAN&gt;
         &lt;/P&gt;
      &lt;/BODY&gt; 
    &lt;/HTML&gt;
  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</code></PRE>

<P>Here, the style sheet expects certain data elements from a source document, which might look like this:</P>

<PRE class="code"><code class="ce">&lt;?xml version="1.0"?&gt;
&lt;books&gt;
   &lt;book&gt;
      &lt;title&gt;Synchronized Jamming&lt;/title&gt;
      &lt;author&gt;Kari Hensien&lt;/author&gt;
      &lt;abstract&gt;
         A post modern flight of fancy.
      &lt;/abstract&gt;
   &lt;/book&gt;
&lt;/books&gt;</code></PRE>

<P>The style sheet then decides how the output should appear. This means that a template-driven transformation produces its result by pulling the specified data elements from the source document, and putting them through the appropriate templates.</P>

<P>To process multiple <code class="ce">book</code> entries, a template-driven XSLT style sheet can use <code class="ce">&lt;xsl:for-each&gt;</code> to set up a loop to process each entry. It can also use <code class="ce">&lt;xsl:sort&gt;</code> to process the entries in specified order, or it can use <code class="ce">&lt;xsl:if&gt;</code> or <code class="ce">&lt;xsl:choose&gt;</code> to selectively process some entries based on a certain condition. A template-driven transformation is suitable for processing an information-rich source document, as long as the data is well structured and the result pattern is predictable.</P>

<P>On the other hand, <A HREF="xsl_datadriven_1vqr.htm">data-driven transformations</A> are ideal for processing a data source when the data is poorly structured, or when the output depends on recursive processing. In practice, template-driven and data-driven transformations are often combined in a single style sheet for a wide variety of XML applications.</P>

<P>The following topics walk you through some common tasks for writing a template-driven XSLT style sheet.

<UL type="disc">
	<LI><A HREF="xsl_fund_0icl.htm">Creating and Populating an HTML Template</A></li>

	<LI><A HREF="xsl_fund_127o.htm">Generating Well-Formed HTML Using XSLT</A></li>

	<LI><A HREF="xsl_fund_7var.htm">Selecting and Outputting Attributes</A></li>

	<LI><A HREF="xsl_fund_962c.htm">Sorting XML Using &lt;xsl:sort&gt;</A></li>

	<LI><A HREF="xsl_fund_3up1.htm">Defining Conditional Templates Using &lt;xsl:if&gt; and &lt;xsl:choose&gt;</A></li>
</UL>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_xpath1_0mnn.htm">Using XPath Expressions to Select Nodes</A> | <A HREF="xslt_starter_78s4.htm">Starter Kit</A> | <A HREF="xsl_datadriven_1vqr.htm">Data-Driven Transformations</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
