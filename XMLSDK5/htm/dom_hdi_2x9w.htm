<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Manage Object Lifetime Using Reference Counting on Interface Pointers (C/C++)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="dom_hdi_cpp_handle_refcount"></A>Manage Object Lifetime Using Reference Counting on Interface Pointers (C/C++)</H1>

<P>Like other COM technologies, MSXML uses reference counting to manage the lifetime of a DOM object. A reference count is a number indicating the state of an object. Whenever an object is created or its reference is duplicated, the reference count of the object is incremented. When an object is no longer needed, its reference count is decremented. A positive reference count means the object is usable. When the reference count becomes zero, the object is unusable, and most likely removed from the process memory. </P>

<P>When you use raw COM interface pointers in MSXML, you need to handle reference counting on the interface pointers explicitly. If you do not do this properly, your applications are likely to have memory leaks or to encounter access violations because objects or interface pointers were incorrectly made unusable. Even when you use smart pointer class wrappers that automate memory management, a good understanding of reference counting helps ensure that you use these wrapper classes and templates correctly.</P>

<P>The following are general guidelines for handling reference counting when using MSXML:

<UL type="disc">
	<LI>Call the <code class="ce">AddRef</code> method on the interface pointer to increment the reference count when its reference is duplicated.</li>

	<LI>Call the <code class="ce">Release</code> method on the interface pointer to decrement the reference count when the interface pointer is no longer needed, or is to be reused in a different context.</li>
</UL>

<P>When you create or obtain an object by calling, for example, <code class="ce">IXMLDOMDocument::createNode</code>, <code class="ce">IXMLDOMNode::appendChild</code>, or <code class="ce">CoCreateInstance</code>, the object's reference count is already incremented before the function or method returns. It is your responsibility to release the object when you are done using it. If you duplicate the reference of an existing object, you need to call <code class="ce">AddRef</code> explicitly on the new interface pointer. This tutorial presents a hands-on illustration of these issues. </P>

<P>This project uses or creates the following files.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Component</TH>
<TH width=50%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="dom_hdi_2x2s.htm">Source: refCount.cpp</A></TD>
<TD width=50%>Creates an XML document using several DOM objects. </TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="dom_hdi_8i0k.htm">Output</A></TD>
<TD width=50%>This is the output you should get when you build and run the <B>refCount</B> project.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P class="labelproc"><B>To create the refCount Visual C++ Project</B>

<UL type="disc">
	<LI>Create a Win32 console application in Visual C++. For detailed instructions on how to do this, see <A HREF="dom_hdi_9ypf.htm">Set Up My Visual C++ Project</A>. Name the project <B>LoadDOMRawProj</B>.</li>
</UL>

<P>Next, we'll add the <A HREF="dom_hdi_2x2s.htm">source code</A> for this project.</P>

<H4 class="dtH4">Other Resources</H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=8320">The Rules of the Component Object Model</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
