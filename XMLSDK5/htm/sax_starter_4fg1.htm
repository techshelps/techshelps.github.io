<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Frequently Asked Questions about SAX2</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="sax_faq"></A>Frequently Asked Questions about SAX2</H1>

<P>The following are some frequently asked questions about the Simple API for XML (SAX).</P>

<P><A HREF="#saxsystemrequirements_faq">What are the system requirements for SAX2?</A></P>

<P><A HREF="#saxpayloadparser">Can I pass a BSTR instead of a URL to the SAXXMLReader?</A></P>

<P><A HREF="#saxvalidation_faq">Does SAX support validation?</A></P>

<P><A HREF="#saxvalidation_integratedversusstandalone_faq">When would I want to use standalone SAX validation (i.e. the MXValidator CoClass) instead of the integrated validation feature provided on the SAX reader?</A></P>

<P><A HREF="#saxvalidation_nonimplemented_faq">Why does the MXValidator CoClass contain methods and properties that are not implemented?</A></P>

<P><A HREF="#saxspaceascharacters">Why is white space reported as characters()? Why isn't ignorableWhitespace called?</A></P>

<P><A HREF="#saxheaderinfo">How do I get XML header information?</A></P>

<P><A HREF="#saxwriterfromscripts">How can I use SAXXMLWriter from scripts?</A></P>

<P><A HREF="#saxerrorsandvb">Can I continue parsing if my Visual Basic program breaks because the XML file has errors?</A></P>

<P><A HREF="#saxmultithreading">Can I use the same instance of SAXXMLReader to parse XML files sequentially?</A></P>

<P><A HREF="#saxwritertobuffer">How can I write from SAXXMLWriter in a memory buffer in nonUnicode encoding?</A></P>

<P><A HREF="#saxresetxmlwriter">How can I reset SAXXMLWriter to create a new string?</A></P>

<P><A HREF="#saxappendxmldocuments">How do I avoid appending a new XML document to the previous one?</A></P>

<P><A HREF="#saxattributevalues">How can I tell if attribute values have an entity reference?</A></P>

<P><A HREF="#saxorderofelemattr">Can I find the order of element attributes?</A></P>

<P><A HREF="#saxerrors">How do I handle errors with SAX?</A></P>



<H4 class="dtH4"><A NAME="saxsystemrequirements_faq"></A>What are the system requirements for SAX2?</H4>

<P>The system requirements for SAX2 are the same as those for <A HREF="sdk_installregister_4r76.htm">Installing and Registering the MSXML 5.0 SDK</A>.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxvalidation_faq"></A>Does SAX support validation?</H4>

<P>Yes. With MSXML 5.0, SAX supports validation to XSD schemas but does not support validation using Document Type Definition (DTD) files.</P>

<P>To validate documents when using SAX, you set the validation flag on the <code class="ce">SAXXMLReader</code> through the <code class="ce">putFeature</code> method.</P>

<P>When setting this feature, the feature name is <code class="ce">"schema-validation"</code> and its value is set to <code class="ce">True</code> like this:</P>

<PRE class="code">   oReader.putFeature("schema-validation", True)</PRE>

<P>This feature is read-only during parsing and read/write otherwise.</P>

<P>For more information, see <A HREF="sax_devgd_hdi_validate_74hb.htm">Validate Documents Using SAX</A>.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxvalidation_integratedversusstandalone_faq"></A>When would I want to use standalone SAX validation (i.e. the MXValidator CoClass) instead of the integrated validation feature provided on the SAX reader?</H4>

<P><code class="ce">SAXXMLReader</code> and <code class="ce">MXValidator</code> behave in very similar ways when used for validating SAX document streams. The only difference is that the SAX reader might provide some additional controls that the <code class="ce">MXValidator</code> does not. Also, unlike the SAX reader, which allows you to toggle the error-reporting mode, <code class="ce">MXValidator</code> always operates in "exhaustive-errors" mode and reports all errors.</P>

<P><code class="ce">MXValidator</code> is most useful when the data to be parsed is not in XML form, such as comma-delimited text, a Microsoft Word document, or a C-style data structure. The SAX reader cannot read any of these formats. If you need to parse non-XML data, you can implement your own data transformer using SAX interfaces, and connect to <code class="ce">MXValidator</code> to verify the data stream. For an example, see the <A HREF="sax_mxvalidator_2zle.htm">putProperty Method (MXValidator)</A> sample.</P>



<H4 class="dtH4"><A NAME="saxvalidation_nonimplemented_faq"></A>Why does the MXValidator CoClass contain methods and properties that are not implemented?</H4>

<P><code class="ce">MXValidator</code> inherits from the <code class="ce">IMXFilter</code> interface, which is intended to provide a generic front end for SAX event filtering. For <code class="ce">MXValidator</code>, only the ability to get and put features and properties is needed. Currently, only the <A HREF="sax_mxvalidator_719u.htm">contentHandler</A> and <A HREF="sax_mxvalidator_69ma.htm">errorHandler</A> properties are implemented, but other SAX filters might be developed in the future.</P>



<H4 class="dtH4"><A NAME="saxpayloadparser"></A>Can I pass a BSTR, instead of a URL, to the SAXXMLReader?</H4>

<P>You can pass a VARIANT containing a BSTR to <code class="ce">ISAXXMLReader::parse(VARIANT)</code>. In this case, the encoding is UTF-16.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxspaceascharacters"></A>Why is white space reported as characters()? Why isn't ignorableWhitespace called?</H4>

<P>White space can occur in several places, for example, in an element without character data, which contains only child nodes and white space. To ignore white space, the parser must be able to distinguish those cases. The SAX parser is a nonvalidating parser and cannot distinguish those cases, <code class="ce">so ignorableWhitespace()</code> never gets called. Nonvalidating parsers treat all white space between elements as characters.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxheaderinfo"></A>How do I get XML header information?</H4>

<P>The XML header contains version and encoding information, for example, <code class="ce">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</code>. To get XML header information, call <code class="ce">ISAXXMLReader::getProperty([in] const wchar_t * pwchName, [out, retval] VARIANT * pvarValue);</code> and pass one of following three property values:</P>

<PRE class="code"><code class="ce">"xmldecl-encoding"
"xmldecl-version"
"xmldecl-standalone"</code></PRE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">"xmldecl-encoding"</code>, <code class="ce">"xmldecl-version"</code>, and <code class="ce">"xmldecl-standalone"</code> properties provide information about the presence and content of the XML header. The information is available only when <code class="ce">SAXXMLReader</code> reads and parses the XML document. After processing, the control returns to the application, and this information is no longer available.</BLOCKQUOTE>

<P>XML header information was designed for low-level reader and parser use, not for applications.</P>

<P>To get the processing instruction, implement a <code class="ce">ContentHandler</code> that supports <code class="ce">ISAXContentHandler</code> and handles the <code class="ce">processingInstruction</code> event.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxwriterfromscripts"></A>How can I use SAXXMLWriter from scripts?</H4>

<P><code class="ce">SAXXMLReader</code> implements <code class="ce">IVBSAXXMLReader</code>, which is accessible from scripts. You can call handler events directly from <code class="ce">SAXXMLWriter</code> and generate XML without the reader.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxerrorsandvb"></A>Can I continue parsing if my Visual Basic program breaks because the XML file has errors?</H4>

<P>All parser errors are fatal (E_FAIL). However, the classification of parsing errors in SAX is independent from the classification of errors in Microsoft&reg; Visual Basic&reg;. In SAX, a fatal parsing error means only that parsing cannot continue; in Visual Basic, a fatal error means that the application cannot continue. Use the ON ERROR statement in Visual Basic.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxmultithreading"></A>Can I use the same instance of SAXXMLReader to parse XML files sequentially?</H4>

<P>You can use the same instance of <code class="ce">SAXXMLReader</code> to parse two XML files sequentially, but not in different threads. The MSXML implementation does not support multithreaded use. AddRef/Release are not multithread-safe and there is no locking on any of the API entry points.</P>

<P>However, you can use two instances of <code class="ce">SAXXMLReader</code> in two threads, and parse two different XML files, as long as nothing gets shared.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxwritertobuffer"></A>How can I write from SAXXMLWriter in a memory buffer in nonUnicode encoding?</H4>

<P>If "memory buffer" is a Visual Basic string, you cannot write to it because it is always in Unicode format. However, you can provide an <code class="ce">IStream</code>/<code class="ce">ISequentialStream</code> object, which writes to a memory buffer. XML will be generated the same way as for output into a file.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxresetxmlwriter"></A>How can I reset SAXXMLWriter to create a new string?</H4>

<P class="labelproc"><B>To reset SAXXMLWriter to create a new string:</B>

<OL type="1">
	<LI>Generate an XML document.</li>

	<LI>Use a string object from the writer.</li>

	<LI>Generate another XML document.</li>
</OL>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxappendxmldocuments"></A>How do I avoid appending a new XML document to the previous one?</H4>

<P>To reset XML writer to create a new string, reset the <code class="ce">output</code> property. Internally, the <code class="ce">flush</code> method of <code class="ce">IMXXMLWriter</code> will be called.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxattributevalues"></A>How can I tell if attribute values have an entity reference?</H4>

<P>There is no indication of whether attribute values have an entity reference.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxorderofelemattr"></A>Can I find the order of element attributes?</H4>

<P>The order of attributes is not important in XML, and is therefore not exposed. Enumeration with attributes may follow the original order of the attributes.</P>

<P><A HREF="#sax_faq">Return to top</A></P>



<H4 class="dtH4"><A NAME="saxerrors"></A>How do I handle errors with SAX?</H4>

<P><code class="ce">ISAXErrorHandler</code>/<code class="ce">IVBSAXErrorHandler</code> provides the basic interface for handling parsing errors. Currently, all errors are fatal.</P>

<P>In C++, a fatal error will result in returning a value other than S_OK HRESULT from the <code class="ce">parse</code> or <code class="ce">parseURL</code> method.</P>

<P>In Visual Basic, the On Error statement handles exceptions.</P>

<P><A HREF="#sax_faq">Return to top</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
