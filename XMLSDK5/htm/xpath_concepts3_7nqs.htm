<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>How XSLT Template Rules Depend on Context</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconhowxslttemplaterulesdependoncontext"></A>How XSLT Template Rules Depend on Context</H1>

<P>XSLT template rules cannot be relied on to fire in any particular order, each one is evaluated strictly in terms of the context established at that point. This context is strongly influenced both by the built-in XSLT template rules and by <code class="ce">&lt;xsl:apply-templates&gt;</code> elements in template rules for higher-level nodes.</P>

<H4 class="dtH4">Initial Example</H4>

<P>The initial example produces some stray data before the desired "Forecast for (Today...)" headings.</P>

<P class="label"><B>XML File (weather.xml)</B></P>

<P>Use the <A HREF="xpath_concepts5_4pbi.htm">Sample XML Data File for XPath Context and Navigation</A> and change the <code class="ce">href</code> attribute to reference <B>weather1.xsl</B>.</P>

<P class="label"><B>XSLT File (weather1.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"    
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns="http://www.w3.org/TR/REC-html40" &gt;

&lt;xsl:template match="forecast"&gt;
    &lt;h2&gt;Forecast for (Today &lt;xsl:value-of select="@day"/&gt;):&lt;/h2&gt;
    &lt;xsl:apply-templates/&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="temperature"&gt;
    &lt;p&gt;&lt;b&gt;Temperature: 
        &lt;xsl:value-of select="."/&gt;&amp;#x0a;&lt;xsl:value-of select="@scale"/&gt;
    &lt;/b&gt;&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="humidity"&gt;
    &lt;p&gt;&lt;b&gt;Relative humidity: 
        &lt;xsl:value-of select="."/&gt;%
    &lt;/b&gt;&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="template_context.gif" ALT="" BORDER=0></P>

<P>The preceding style sheet appears to process three types of elements: <code class="ce">&lt;forecast&gt;</code>, <code class="ce">&lt;temperature&gt;</code>, and <code class="ce">&lt;humidity&gt;</code>. </P>

<P>The built-in template rules for XSLT are also in effect&#0151;in particular, the built-in rule for the root and all element nodes, which looks like this if coded explicitly:</P>

<PRE class="code">&lt;xsl:template match="/|*" &gt;
    &lt;xsl:apply-templates /&gt;
&lt;/xsl:template&gt;</PRE>

<P>By default, all element content is output to the result tree&#0151;not just the content of the three explicitly transformed elements.</P>

<P>Data items are shown before the heading when the <code class="ce">&lt;forecast&gt;</code> template rule is evaluated, the context in which its match expression is evaluated is the context supplied by the default template rule. This works fine for processing the <code class="ce">&lt;forecast&gt;</code> elements in the source document, and the corresponding template rules for the <code class="ce">&lt;temperature&gt;</code> and <code class="ce">&lt;humidity&gt;</code> children of the <code class="ce">&lt;forecast&gt;</code> elements are then invoked by the <code class="ce">&lt;xsl:apply-templates/&gt;</code> element.</P>

<P>But the context in the <code class="ce">&lt;temperature&gt;</code> and <code class="ce">&lt;humidity&gt;</code> templates' <code class="ce">match</code> expressions are evaluated is not just the context supplied by the <code class="ce">&lt;forecast&gt;</code> elements. There are other <code class="ce">&lt;temperature&gt;</code> and <code class="ce">&lt;humidity&gt;</code> elements in this document&#0151;the children of the <code class="ce">&lt;today&gt;</code> element. The <code class="ce">&lt;today&gt;</code> element's children are processed by any matching template rules.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">&lt;wind&gt;</code> and <code class="ce">&lt;precip&gt;</code> elements' contents are passed to the result tree even though our style sheet does not include template rules for them. Again, this is a result of the built-in template rule for the root and element nodes.</BLOCKQUOTE>

<P>You can control the XPath context which matched expressions are evaluated, by manipulating the context in two higher level template rules.</P>

<P>To change this document to display only the desired content from the <code class="ce">&lt;forecast&gt;</code> elements' <code class="ce">&lt;temperature&gt;</code> and <code class="ce">&lt;humidity&gt;</code>, use the following step:

<OL type="1">
	<LI>Supply a specific template rule for the <code class="ce">&lt;today&gt;</code> element, suppressing its contents entirely; and</li>

	<LI>Supply specific child elements to be processed by the <code class="ce">&lt;forecast&gt;</code> element's <code class="ce">&lt;xsl:apply-templates&gt;</code> element.</li>
</OL>

<P>In Step 1, add the following template rule to the style sheet:</P>

<PRE class="code">&lt;xsl:template match="/weather/today" /&gt;</PRE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The empty template portion of this template rule. Nothing at all will be instantiated for the <code class="ce">&lt;today&gt;</code> element in the source tree.</BLOCKQUOTE>

<P>In Step 2, change the <code class="ce">&lt;forecast&gt;</code> element's template rule, as follows:</P>

<PRE class="code">&lt;xsl:template match="forecast"&gt;
    &lt;h2&gt;Forecast for (Today &lt;xsl:value-of select="@day"/&gt;):&lt;/h2&gt;
    &lt;xsl:apply-templates <code><b class="cfe">select="temperature|humidity"</b></code>/&gt;
&lt;/xsl:template&gt;</PRE>

<H4 class="dtH4">Corrected Example</H4>

<P class="label"><B>XML File (weather.xml)</B></P>

<P>Use the <A HREF="xpath_concepts5_4pbi.htm">Sample XML Data File for XPath Context and Navigation</A> and change the <code class="ce">href</code> attribute to reference <B>weathershort.xsl</B>.</P>

<P class="label"><B>XSLT File (weathershort.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"    
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns="http://www.w3.org/TR/REC-html40" &gt;

<B>&lt;xsl:template match="/weather/today" /&gt;</B>

&lt;xsl:template match="forecast"&gt;
    &lt;h2&gt;Forecast for (Today &lt;xsl:value-of select="@day"/&gt;):&lt;/h2&gt;
    &lt;xsl:apply-templates <code><b class="cfe">select="temperature|humidity"</b></code>/&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="temperature"&gt;
    &lt;p&gt;&lt;b&gt;Temperature: 
        &lt;xsl:value-of select="."/&gt;&amp;#x0a;&lt;xsl:value-of select="@scale"/&gt;
    &lt;/b&gt;&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="humidity"&gt;
    &lt;p&gt;&lt;b&gt;Relative humidity: 
        &lt;xsl:value-of select="."/&gt;%
    &lt;/b&gt;&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="template_context_ok.gif" ALT="" BORDER=0></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
