<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ServerHTTPRequest Property</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmpro2nd_serverhttprequest"></A>ServerHTTPRequest Property</H1>

<P>Specifies whether to enable (<code class="ce">true</code>) or disable (<code class="ce">false</code>) the use of the <code class="ce">ServerHTTPRequest</code> object in a server application. Setting the property to <code class="ce">false</code> causes the DOM object not to use the <code class="ce">HTTPRequest</code> object. Setting this property to <code class="ce">true</code> causes DOM documents to use <code class="ce">ServerHTTPRequest</code>. The default value is <code class="ce">false</code>.</P>
<div class=filtered><span class="lang">[JScript]</span>

<H4 class="dtH4">JScript Syntax</H4>

<PRE class="syntax">domObj.setProperty(strProp, vBool);
vBool = domObj.getProperty(strProp);</PRE>
</div><!-- [JScript] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">domObj.setProperty(strProp, vBool)
vBool = domObj.getProperty(strProp)</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT setProperty(BSTR strProp, VARIANT vBool);
HRESULT getProperty(BSTR strProp, VARIANT* vBool);</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Value</H4>

<DL>
<DT><I>strProp</I></DT>

<DD>A BSTR string whose value is "ServerHTTPRequest".</dd>

<DT><I>vBool</I></DT>

<DD>A VARIANT_BOOL value of <code class="ce">true</code> or <code class="ce">false</code>. The default value is <code class="ce">false</code>.</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<P>Setting this property to <code class="ce">true</code> means that WinHTTP.dll is used. Setting this property to <code class="ce">false</code> means that the WinInet component is used instead. WinHTTP is server-safe, but it lacks support for asynchronous mode and is unavailable in earlier versions of Microsoft® Windows®, such as Windows 98 and Windows Me. WinInet is widely available but unsafe in multi-thread and server environments.</P>

<P>In general, you must use WinHTTP with MSXML in any context where the URLMON system class (part of WinInet) is not supported or is not well supported. For example,  URLMON is not supported for file download in an ASP page. Therefore, you need to set the <code class="ce">ServerHTTPRequest</code> property to <code class="ce">true</code> if you must handle XML file downloads from within an ASP page. See the <A HREF="xsl_xsltfun_7yr2.htm">document function</A> of XSLT for more information. Also, WinHTTP is recommended in highly multi-threaded scenarios because WinHTTP handles the situation better than URLMON. </P>

<P>Because WinHTTP only supports synchronous loading, the <code class="ce">async</code> property must be set to <code class="ce">false</code> when the <code class="ce">ServerHTTPRequest</code> property is set to <code class="ce">true</code>.</P>

<P>For example:</P>

<PRE class="code">&lt;%@language=JScript%&gt;
&lt;% 
var xmldoc;
xmldoc = Server.CreateObject("Msxml2.DOMDocument.5.0");
xmldoc.async = false;
xmldoc.setProperty("ServerHTTPRequest", true);
xmldoc.load("http://myserver.com");
%&gt;</PRE>

<BLOCKQUOTE class="dtBlock">
<B>Important&nbsp;&nbsp;&nbsp;</B>For servers running on an Intranet, the <code class="ce">ServerHTTPRequest</code> property requires that you run a proxycfg.exe utility to configure WinHTTP's proxy settings. They cannot be configured through the Microsoft Windows Control Panel. To download the proxy configuration utility, go to the XML Development Center's <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0><A HREF="http://go.microsoft.com/fwlink/?LinkId=4012">WinHTTP Proxy Configuration Utility</A> page. For instructions for running the proxycfg.exe utility, see <A HREF="xml_obj_iserverxmlhttprequest_93i1.htm">Using the WinHTTP Proxy Configuration Utility</A>. After you have run the proxycfg.exe tool and updated the registry, the previous registry settings cannot be restored.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">ServerHTTPRequest</code> functionality is provided by the WinHTTP APIs in the winhttp5.dll file. To function properly, the winhttp5.dll file must be in the system path, typically located in %windir%\system32.</BLOCKQUOTE>

<H4 class="dtH4">Applies To</H4>

<P><B>Component</B>: MSXML 3.0 and later</P>

<P><B>Interface</B>: <A HREF="xml_obj_ixmldomdocument2_7quq.htm">IXMLDOMDocument2</A></P>

<P><B>Method</B>: <A HREF="xml_mth_sz_8m49.htm">setProperty</A> | <A HREF="xml_mth_dg_19ix.htm">getProperty</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
