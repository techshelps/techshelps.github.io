<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using Inline XDR Schemas</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconusinginlinexdrschemas"></A>Using Inline XDR Schemas</H1>

<P>Instead of using an external schema file, MSXML version 3.0 or later allows you to use inline schemas. These schemas are useful when it is inconvenient to physically separate the schema and the instance (XML document). For example, if you generate XML-Data Reduced (XDR) schema from data retrieved from a database, it may be more convenient to put the schema and the data in the same file.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;Inline schemas are not supported in MSXML 2.5 and earlier versions. To avoid an error on the root element, use the <A HREF="http://go.microsoft.com/fwlink/?LinkId=4876">Xmlinst.exe Replace Mode Tool</A>.</BLOCKQUOTE>

<H4 class="dtH4">Example</H4>

<P>The following XML document contains an inline schema against which the <B>Student</B> element is validated. The name of the schema, <B>mySchema</B>, is indicated through the <B>name</B> attribute on the <B>Schema</B> element.</P>

<PRE class="code">&lt;Root&gt;
&lt;Schema name="<B>mySchema</B>" xmlns="urn:schemas-microsoft-com:xml-data"
             xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
   &lt;ElementType name="age" dt:type="int"/&gt;
   &lt;ElementType name="Student" model="closed" content="eltOnly"&gt;
     &lt;element type="age"/&gt;
   &lt;/ElementType&gt;
&lt;/Schema&gt;</PRE>

<H4 class="dtH4">Data file</H4>

<PRE class="code">&lt;a:Student xmlns:a="x-schema:<B>#mySchema</B>"&gt;
   &lt;a:age&gt;10&lt;/a:age&gt;
&lt;/a:Student&gt;
&lt;/Root&gt;</PRE>

<P>An element is associated with an inline schema just as it is with an external schema, through the <code class="ce">"x-schema:"</code> syntax when defining that element's namespace identifier. For an external schema, the URI or URL that follows <code class="ce">"x-schema:"</code> indicates the location of the external schema file. With an inline schema, that which follows <code class="ce">"x-schema:"</code> indicates the name of the schema within the XML instance document (indicated by the # sign followed by the name).</P>

<P>The "#" syntax following <code class="ce">"x-schema:"</code> refers to a schema within the local document only. This syntax cannot be used to reference a schema within an external document. For example, <code class="ce">"x-schema:URI#name"</code> is not allowed.</P>

<P>The inline schema associated with an element must precede that element within the document. When validating against a schema, if the name indicated through an element's namespace declaration does not correspond to an already parsed schema, an error will occur. An error will also occur when an element is associated with a schema that does not exist.</P>

<H2 class="dtH2">Inline Schemas Persisted from ADO</H2>

<P>You can use MSXML 3.0 to parse inline schemas produced by Microsoft ActiveX&reg; Data Objects (ADO), but they will not be validated.</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">&lt;xml xmlns:s='uuid:BDC6E3F0-6DA3-11d1-A2A3-00AA00C14882'
   xmlns:dt='uuid:C2F41010-65B3-11d1-A29F-00AA00C14882'
   xmlns:rs='urn:schemas-microsoft-com:rowset'
   xmlns:z='#RowsetSchema'&gt;
&lt;s:Schema id='RowsetSchema'&gt;
   &lt;s:ElementType name='row'&gt;
      &lt;s:attribute type='CustomerID'/&gt;
      &lt;s:extends type='rs:rowbase'/&gt;
   &lt;/s:ElementType&gt;
&lt;s:AttributeType name='CustomerID' rs:number='1'
   rs:nullable='true' rs:write='true'&gt;
   &lt;s:datatype dt:type='string' dt:maxLength='5'/&gt;
&lt;/s:AttributeType&gt;
&lt;/s:Schema&gt;
&lt;rs:data&gt;
   &lt;z:row CustomerID='…'/&gt;
&lt;/rs:data&gt;
&lt;/xml&gt;</PRE>

<P>MSXML 3.0 essentially ignores the following elements and attributes, and the remainder of the schema is parsed as if it were a valid schema.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Elements</TH>
<TH width=50%>Attributes</TH>
</TR>

<TR VALIGN="top">
<TD width=50%>extends</TD>
<TD width=50%><B>dt:max</B></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&nbsp;</TD>
<TD width=50%><B>dt:maxExclusive</B></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&nbsp;</TD>
<TD width=50%><B>dt:maxLength</B></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&nbsp;</TD>
<TD width=50%><B>dt:min</B></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>&nbsp;</TD>
<TD width=50%><B>dt:minExclusive</B></TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>Validation against the remainder of the schema cannot occur because the schema does not contain a <B>name</B> attribute and because the reference to the schema is not prefaced by <code class="ce">"x-schema:"</code>. MSXML 3.0 views that reference as a Uniform Resource Name (URN) with no special significance.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_pro_ae_4wj2.htm">definition Property</A> | <A HREF="xml_pro_sz_3i5h.htm">validateOnParse Property</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
