<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>&lt;xsl:attribute-set&gt; Element</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefxslattributesetelement"></A>&lt;xsl:attribute-set&gt; Element</H1>

<P>Defines a named set of attributes.</P>

<PRE class="syntax">&lt;xsl:attribute-set
  name = <A HREF="xsl_xsltsyntax_0qlv.htm">QName</A>
  use-attribute-sets = <A HREF="xsl_xsltsyntax_0qlv.htm">QNames</A> &gt;
&lt;/xsl:attribute-set&gt;</PRE>

<H4 class="dtH4">Attributes</H4>

<DL>
<DT><B>name</B></DT>

<DD>Required. The name of the attribute set. The value of the <code class="ce">name</code> attribute is a qualified name.</dd>

<DT><B>use-attribute-sets</B></DT>

<DD>A white space-separated list of attribute sets, specified as a qualified name. Specifying this attribute declares each attribute in each listed attribute set.</dd>
</DL>

<H4 class="dtH4">Element Information</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=34%><B>Number of occurrences</B></TD>
<TD width=66%>Unlimited</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Parent elements</B></TD>
<TD width=66%><A HREF="xsl_elm_qz_0cfo.htm">xsl:stylesheet</A>, <A HREF="xsl_elm_qz_9y44.htm">xsl:transform</A></TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Child elements</B></TD>
<TD width=66%><A HREF="xsl_elm_af_05pw.htm">xsl:attribute</A></TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Remarks</H4>

<P>The content of the <code class="ce">&lt;xsl:attribute-set&gt;</code> element consists of zero or more <code class="ce">&lt;xsl:attribute</code>&gt; elements that specify the attributes in the set. To use attribute sets, specify a <code class="ce">use-attribute-sets</code> attribute on <code class="ce">&lt;xsl:element&gt;</code>, <code class="ce">&lt;xsl:copy&gt;</code>, or <code class="ce">&lt;xsl:attribute-set&gt;</code> elements. </P>

<P>An error occurs if using <code class="ce">use-attribute-sets</code><B> </B>attributes on <code class="ce">&lt;xsl:attribute-set&gt;</code> elements causes an attribute set to directly or indirectly use itself.</P>

<P>Specifying a <code class="ce">use-attribute-sets</code> attribute can be an efficient way to declare multiple attributes on an element. To accomplish the same results using <code class="ce">&lt;xsl:attribute&gt;</code>, you would have to use an <code class="ce">&lt;xsl:attribute&gt; </code>element for each attribute in each named attribute set. You would add these <code class="ce">&lt;xsl:attribute&gt;</code> elements as content of the <code class="ce">&lt;xsl:element&gt;</code>, <code class="ce">&lt;xsl:copy&gt;</code>, or <code class="ce">&lt;xsl:attribute-set&gt;</code> element.</P>

<P>Attribute sets can also be used by specifying an <code class="ce">xsl:use-attribute-sets</code> attribute on a literal result element. For a literal result element, attributes will be added in the following order:

<OL type="1">
	<LI>Attributes from attribute sets named in an <code class="ce">xsl:use-attribute-sets</code> attribute, in the order listed in that attribute.</li>

	<LI>Attributes specified on the literal result element. </li>

	<LI>Any attributes specified by <code class="ce">&lt;xsl:attribute&gt;</code> elements will be added. </li>
</OL>

<P>Because adding an attribute to an element replaces any existing attribute of that element with the same name, attributes specified in attribute sets can be overridden by attributes specified on the literal result element itself.</P>

<P>The template within each <code class="ce">&lt;xsl:attribute&gt;</code> element in an <code class="ce">&lt;xsl:attribute-set&gt;</code> element is instantiated each time the attribute set is used. It is instantiated using the same current node and current node list that is used for instantiating the element that bears the <code class="ce">use-attribute-sets</code> or <code class="ce">xsl:use-attribute-sets</code> attribute. However, it is the position of the <code class="ce">&lt;xsl:attribute&gt;</code> element in the style sheet&#0151;rather than the position of the element bearing the <code class="ce">use-attribute-sets </code>or <code class="ce">xsl:use-attribute-sets</code> attribute&#0151;that determines which variable bindings are visible. Therefore, only variables and parameters declared by top-level <code class="ce">&lt;xsl:variable&gt;</code> and <code class="ce">&lt;xsl:param&gt;</code> elements are visible.</P>

<P>Multiple definitions of an attribute set with the same expanded-name are merged. An attribute from a definition that has higher import precedence takes precedence over an attribute from a definition that has lower import precedence.</P>

<P>An error occurs if there are two attribute sets that have the same expanded-name and equal import precedence, and that both contain the same attribute, unless there is a definition of the attribute set with higher import precedence that also contains the attribute.</P>

<P>The following topic provides an example of the <code class="ce">&lt;xsl:attribute-set&gt;</code> element.

<UL type="disc">
	<LI><A HREF="xsl_elm_af_1811.htm">Example of &lt;xsl:attribute-set&gt;</A></li>
</UL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
