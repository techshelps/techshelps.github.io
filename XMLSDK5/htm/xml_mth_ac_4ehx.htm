<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>createAttribute Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthcreateattribute"></A>createAttribute Method</H1>

<P>Creates a new attribute with the specified name.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">var objXMLDOMAttribute = oXMLDOMDocument.createAttribute(name);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>name</I></DT>

<DD>A string specifying the name of the new attribute object. This name is subsequently available as the new node's <code class="ce">nodeName</code> property.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>An object. Returns the new <code class="ce">IXMLDOMAttribute</code> object.</P>

<H4 class="dtH4">Example</H4>

<P>The following script example creates a new attribute called <code class="ce">ID</code> and adds it to the attributes of the <code class="ce">DOMDocument</code> object.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var root;
var newAtt;
var namedNodeMap;
xmlDoc.async = false;
xmlDoc.load("books.xml");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;root = xmlDoc.documentElement;
&nbsp;&nbsp;&nbsp;newAtt = xmlDoc.createAttribute("ID");
&nbsp;&nbsp;&nbsp;namedNodeMap = root.attributes;
&nbsp;&nbsp;&nbsp;namedNodeMap.setNamedItem(newAtt);
&nbsp;&nbsp;&nbsp;for (var i=0; i&lt;namedNodeMap.length; i++) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(namedNodeMap.item(i).xml);
&nbsp;&nbsp;&nbsp;}
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">Set objXMLDOMAttribute = oXMLDOMDocument.createAttribute(name)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>name</I></DT>

<DD>A string specifying the name of the new attribute object. This name is subsequently available as the new node's <code class="ce">nodeName</code> property.</dd>
</DL>

<H4 class="dtH4">Return Value</H4>

<P>An object. Returns the new <code class="ce">IXMLDOMAttribute</code> object.</P>

<H4 class="dtH4">Example</H4>

<P>The following Visual Basic example creates a new attribute called <code class="ce">ID</code> and adds it to the attributes of the <code class="ce">DOMDocument</code> object.</P>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim root As IXMLDOMElement
Dim newAtt As IXMLDOMAttribute
Dim namedNodeMap As IXMLDOMNamedNodeMap
xmlDoc.async = False
xmlDoc.Load ("books.xml")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set root = xmlDoc.documentElement
&nbsp;&nbsp;&nbsp;Set newAtt = xmlDoc.createAttribute("ID")
&nbsp;&nbsp;&nbsp;Set namedNodeMap = root.Attributes
&nbsp;&nbsp;&nbsp;namedNodeMap.setNamedItem newAtt
&nbsp;&nbsp;&nbsp;For i = 0 To (namedNodeMap.length - 1)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MsgBox (namedNodeMap.Item(i).xml)
&nbsp;&nbsp;&nbsp;Next
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT createAttribute(
    BSTR name,
    IXMLDOMAttribute **attribute);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>name</I> [in]</DT>

<DD>The name of the new attribute object. This name is subsequently available as the new node's <code class="ce">nodeName</code> property.</dd>

<DT><I>attribute</I> [out, retval]</DT>

<DD>The address of the new <code class="ce">IXMLDOMAttribute</code> object.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the <code class="ce">attribute</code> parameter is Null.</dd>

<DT>E_FAIL</DT>

<DD>The value returned if an error occurs.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>Creating an attribute with this method is the same as using <code class="ce">createNode</code> where the <code class="ce">type</code> parameter value is <code class="ce">NODE_ATTRIBUTE</code> and no namespace is specified.</P>

<P>You cannot create a namespace-qualified attribute using the <code class="ce">createAttribute</code> method. Regardless of whether a namespace prefix is included in the <code class="ce">name</code> parameter<I>,</I> the <code class="ce">namespaceURI</code> property for the new attribute is set to an empty string, "". An attribute constructed as part of an XML document load operation will never have both a prefix and an empty namespace Uniform Resource Identifier (URI). You can only create a namespace-qualified attribute using the <code class="ce">createNode</code> method of the <code class="ce">DOMDocument</code>.</P>

<P>No data value is set for the attribute during the create operation. You can set the value by calling the <code class="ce">setAttribute</code> method of the element object.</P>

<P>Although this method creates the new object in the context of this document, it does not automatically add the new object to the document tree. In other words, although the <code class="ce">ownerDocument</code> property of the new node points to this document object, the <code class="ce">parentNode</code> property remains null. To associate the attribute with an element, call the <code class="ce">setAttributeNode</code> method of the <code class="ce">IXMLDOMElement</code> object.</P>

<P>Because the <code class="ce">parentNode</code> property of an attribute always returns a Null value, this property will not change after associating the new attribute with an element using the <code class="ce">setAttribute</code> method.</P>

<P>The <code class="ce">nodeType</code> property has the value <code class="ce">NODE_ATTRIBUTE</code>.</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_mth_ac_5d5x.htm">createNode Method</A> | <A HREF="xml_pro_no_5p0p.htm">namespaceURI Property (IXMLDOMNode)</A> | <A HREF="xml_mth_sz_3krp.htm">setAttribute Method</A> | <A HREF="xml_pro_no_38c4.htm">ownerDocument Property</A> | <A HREF="xml_pro_pr_3un9.htm">parentNode Property</A> | <A HREF="xml_pro_no_5zvp.htm">nodeType Property</A> | <A HREF="xml_pro_no_0691.htm">nodeName Property</A> | <A HREF="xml_obj_ixmldomelement_8yyc.htm">IXMLDOMElement</A> | <A HREF="xml_obj_ixmldomattribute_34kl.htm">IXMLDOMAttribute</A></P>

<P>Applies to: <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
