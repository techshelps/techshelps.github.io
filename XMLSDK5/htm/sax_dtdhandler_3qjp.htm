<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ISAXDTDHandler Interface</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="isaxdtdhandler_interface"></A>ISAXDTDHandler Interface</H1>

<P>The <code class="ce">ISAXDTDHandler</code>/<code class="ce">IVBSAXDTDHandler</code> interface receives notification of basic document type definition (DTD)-related events.</P>

<H4 class="dtH4">Methods</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=30%><A HREF="sax_dtdhandler_7oo4.htm">notationDecl</A></TD>
<TD width=70%>Receives notification of a notation declaration event.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_dtdhandler_9hno.htm">unparsedEntityDecl</A></TD>
<TD width=70%>Receives notification of an unparsed entity declaration event.</TD>
</TR>
</table></div>

<P class="fineprint"></P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<P>If a Simple API for XML (SAX) application requires information about notations and unparsed entities, the application implements this interface and registers an instance with the SAX2 reader using the <code class="ce">dtdHandler</code> property. This <code class="ce">DTDHandler</code> instance reports notation and unparsed entity declarations to the application.</P>

<P>The <code class="ce">IVBSAXDTDHandler</code> interface includes methods that are invoked by the reader during the parsing operation. The reader passes the appropriate information to the method's parameters. To perform some type of processing for a method, you simply add code to the method in the <code class="ce">DTDHandler</code> implementation. In general, it's rare that you would call these methods yourself from within the <code class="ce">DTDHandler</code>. As such, the syntax shown for the <code class="ce">IVBSAXDTDHandler</code> interface focuses on the implementation syntax, rather than usage syntax.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Important</b>&nbsp;&nbsp;&nbsp;The SAX2 reader passes string values to <code class="ce">IVBSAXDTDHandler</code> methods by reference, rather than by value.</BLOCKQUOTE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C++]</span>

<P>If a Simple API for XML (SAX) application requires information about notations and unparsed entities, the application implements this interface and registers an instance with the SAX2 reader using the <code class="ce">putDTDHandler</code> method. The instance of the <code class="ce">DTDHandler</code> reports notation and unparsed entity declarations to the application.</P>

<H4 class="dtH4">Remarks</H4>

<P>This interface includes only those DTD events that the XML recommendation requires processors to report: notation and unparsed entity declarations.</P>

<P>The reader can report these events in any order, regardless of the order in which the notations and unparsed entities were declared. However, all DTD events must be reported after the <code class="ce">ContentHandler</code>'s <code class="ce">startDocument</code> event, and before the first <code class="ce">startElement</code> event.</P>

<P>It is up to the application to store the information for future use (perhaps in a hash table or object tree). If the application encounters attributes of type <code class="ce">NOTATION</code>, <code class="ce">ENTITY</code>, or <code class="ce">ENTITIES</code>, it can use the information that it obtained through this interface to find the entity or notation corresponding to the attribute value.</P>
</div><!-- [C++] -->

<H4 class="dtH4">Versioning</H4>

<P>MSXML 3.0 and later</P>

<H4 class="dtH4">Requirements</H4>

<P><B>Implementation:</B> msxml5.dll</P>
<div class=filtered><span class="lang">[C++]</span>

<P><B>Header and LIB files:</B> msxml2.h, msxml2.lib</P>
</div><!-- [C++] -->

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_isaxxmlreader_2epl.htm">dtdHandler Property (Visual Basic)</A> | <A HREF="sax_isaxxmlreader_9gdg.htm">putDTDHandler Method (C/C++)</A> | <A HREF="sax_contenthandler_1ezo.htm">startDocument Method</A> | <A HREF="sax_contenthandler_71no.htm">startElement Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
