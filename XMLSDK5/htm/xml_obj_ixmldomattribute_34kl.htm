<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IXMLDOMAttribute</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmobjxmldomattribute"></A>IXMLDOMAttribute</H1>

<P>Represents an attribute of the <code class="ce">IXMLDOMElement</code>. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Example</H4>

<P>The following script example creates an <code class="ce">IXMLDOMAttribute</code> object from the first attribute of the root and displays the object's <code class="ce">value</code> and <code class="ce">xml</code> properties.</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
var root;
var objDOMatt;
xmlDoc.async = false;
xmlDoc.load("books.xml");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;root = xmlDoc.documentElement;
&nbsp;&nbsp;&nbsp;objDOMatt = root.firstChild.attributes.item(0);
&nbsp;&nbsp;&nbsp;alert(objDOMatt.value);
&nbsp;&nbsp;&nbsp;alert(objDOMatt.xml);
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Example</H4>

<P>The following Microsoft&reg; Visual Basic&reg; example creates an <code class="ce">IXMLDOMAttribute</code> object from the first attribute of the root and displays the object's <code class="ce">value</code> and <code class="ce">xml</code> properties.</P>

<PRE class="code">Dim xmlDoc As New Msxml2.DOMDocument50
Dim root As IXMLDOMElement
Dim objDOMatt As IXMLDOMAttribute
xmlDoc.async = False
xmlDoc.Load ("books.xml")
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;Set root = xmlDoc.documentElement
&nbsp;&nbsp;&nbsp;Set objDOMatt = root.firstChild.Attributes.Item(0)
&nbsp;&nbsp;&nbsp;MsgBox (objDOMatt.Value)
&nbsp;&nbsp;&nbsp;MsgBox (objDOMatt.xml)
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Example</H4>

<PRE class="code">#import "msxml5.dll"
using namespace MSXML2;

#define CHECK_AND_RELEASE(pInterface)  \
if(pInterface) \
{\
pInterface-&gt;Release();\
pInterface = NULL;\
}\

#define RELEASE(pInterface)  \
{\
pInterface-&gt;Release();\
pInterface = NULL;\
}\

int main(int argc, char* argv[])
{
_variant_t varValue;
BSTR bstrAttributeName = ::SysAllocString(_T("dateCreated"));
IXMLDOMAttribute *pIXMLDOMAttribute = NULL;
IXMLDOMElement *pIXMLDOMElement = NULL;
IXMLDOMDocument *pIXMLDOMDocument = NULL;
HRESULT hr;

try
{
   // Initialize pIXMLDOMDocument and load an
   // XML file into it.
   // Get the document root.
   hr = pIXMLDOMDocument-&gt;get_documentElement( &amp;pIXMLDOMElement);
   SUCCEEDED(hr) ? 0 : throw hr;
   if(pIXMLDOMElement)
   {
      varValue = _T("Year 2000");

      // Set the "dateCreated" attribute to "year 2000"
      hr = pIXMLDOMElement-&gt;setAttribute(bstrAttributeName, varValue);
      SUCCEEDED(hr) ? 0 : throw hr;

      // Retrieve the changed attribute.
      hr = pIXMLDOMElement-&gt;getAttributeNode(bstrAttributeName,
                                             &amp;pIXMLDOMAttribute);
      SUCCEEDED(hr) ? 0 : throw hr;

      pIXMLDOMAttribute-&gt;get_nodeValue(&amp;varValue);
     if(varValue.vt != VT_NULL)
      {
         // Display the retrieved attribute in a message box.
         ::MessageBox(NULL, _bstr_t(varValue), bstrAttributeName, MB_OK);
      }
      RELEASE(pIXMLDOMElement);
     RELEASE(pIXMLDOMAttribute);
   }
   ::SysFreeString(bstrAttributeName);
   bstrAttributeName=NULL;
}
catch(...)
{
   if(bstrAttributeName)
   {
      ::SysFreeString(bstrAttributeName);
      bstrAttributeName = NULL;
   }
   CHECK_AND_RELEASE(pIXMLDOMElement);
//   DisplayErrorToUser();
}
// Release pIXMLDOMDocument when finished with it.
   return 0;
}</PRE>

<P class="label"><B>Output (in a message box)</B></P>

<PRE class="code">Year 2000</PRE>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>Attribute nodes cannot be the immediate children of <code class="ce">IXMLDOMDocumentFragment</code>. However, they can be associated with element nodes that are children of <code class="ce">IXMLDOMDocumentFragment</code> node.</P>

<P>The relationship between the value and specified members can be summarized as follows: If the attribute has an assigned value in the document and the <code class="ce">specified</code> property is True, the value is the assigned value. If the attribute has no assigned value in the document and has a default value in the DTD, the <code class="ce">specified</code> property is False and the value is the default value in the DTD. If the attribute has no assigned value in the document and has a value of <code class="ce">#IMPLIED</code> in the DTD, the attribute does not appear in the structure model of the document.</P>

<P>In XML, the child nodes of the attribute node represent the value of an attribute because the value can contain entity references. Thus attributes that contain entity references will have a child list containing both text nodes and entity reference nodes. In addition, because the attribute type might be unknown, there are no tokenized attribute values.</P>
<div class=filtered><span class="lang">[C/C++]</span>

<P><code class="ce">IXMLDOMAttribute</code> inherits <code class="ce">IXMLDOMNode</code> but are not actually child nodes of the element and are not considered part of the document tree. Attributes are considered members of their associated elements rather than independent and separate. Thus <code class="ce">IXMLDOMAttribute</code> <code class="ce">parentNode</code>, <code class="ce">previousSibling</code>, and <code class="ce">nextSibling</code> members have the value Null.</P>
</div><!-- [C/C++] -->

<H4 class="dtH4">Requirements</H4>

<P><B>Implementation:</B> msxml5.dll, msxml2.lib</P>
<div class=filtered><span class="lang">[C/C++]</span>

<P><B>Header and IDL files:</B> msxml2.h, msxml2.idl</P>

<P><B>Inherits From: </B><code class="ce">IXMLDOMNode</code></P>
</div><!-- [C/C++] -->

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 2.0 and later</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_obj_ixmldomattribute_5ip1.htm">IXMLDOMAttribute Members</A> | <A HREF="xml_obj_ixmldomelement_8yyc.htm">IXMLDOMElement</A> | <A HREF="xml_obj_ixmldomdocumentfragment_0zxw.htm">IXMLDOMDocumentFragment</A> | <A HREF="xml_pro_sz_54f9.htm">value Property</A> | <A HREF="xml_pro_sz_9mec.htm">specified Property</A> | <A HREF="xml_obj_ixmldomnode_5xwl.htm">IXMLDOMNode</A> | <A HREF="xml_pro_pr_3un9.htm">parentNode Property</A> | <A HREF="xml_pro_pr_1207.htm">previousSibling Property</A> | <A HREF="xml_pro_no_6m7b.htm">nextSibling Property</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
