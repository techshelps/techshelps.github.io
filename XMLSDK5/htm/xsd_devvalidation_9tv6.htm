<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Example 2: Adding a Namespace to the Schema</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Schemas</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconinlineschema_example2"></A>Example 2: Adding a Namespace to the Schema</H1>

<P>In the last example, we allowed the schemas to be applied using the default namespace. This was done in order to keep it simple and to contrast clearly what differentiates using inline schemas from using external schemas.</P>

<P>But what if you need to incorporate a schema that validates to another namespace? In this example, we will look at the changes needed to modify the files you created in Example 1 so that they are namespace aware. For the purposes of this example, we will determine that the <code class="ce">&lt;book&gt;</code> element needs to exist in a separate "x" namespace instead.</P>



<P class="label"><B><A NAME="xmconinlineschema_example2_inline_namespaced"></A>File: inline-namespaced.xml</B></P>

<P>The following is an altered version of the <B>use-inline.xml</B> file you created in Example 1. The changes are highlighted in bold.</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;catalog xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
         <code><b class="cfe">xmlns:x="urn:book"</b></code>&gt; 
&lt;!-- START OF SCHEMA --&gt;
&lt;xsd:schema <code><b class="cfe">targetNamespace="urn:book"</b></code>&gt;
 &lt;xsd:element name="book"&gt;
  &lt;xsd:complexType&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="author" type="xsd:string"/&gt;
      &lt;xsd:element name="title" type="xsd:string"/&gt;
      &lt;xsd:element name="genre" type="xsd:string"/&gt;
      &lt;xsd:element name="price" type="xsd:float"/&gt;
      &lt;xsd:element name="publish_date" type="xsd:date"/&gt;
      &lt;xsd:element name="description" type="xsd:string"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="id" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
 &lt;/xsd:element&gt;
&lt;/xsd:schema&gt;
&lt;!-- END OF SCHEMA --&gt;
   &lt;<code><b class="cfe">x:book</b></code> id="bk101"&gt;
      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
      &lt;title&gt;XML Developer's Guide&lt;/title&gt;
      &lt;genre&gt;Computer&lt;/genre&gt;
      &lt;price&gt;44.95&lt;/price&gt;
      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
      &lt;description&gt;An in-depth look at creating applications with
      XML.&lt;/description&gt;
   &lt;/<code><b class="cfe">x:book</b></code>&gt;
&lt;/catalog&gt;</PRE>



<P class="label"><B><A NAME="xmconinlineschema_example2_external_namespaced"></A>File: external-namespaced.xml</B></P>

<P>The following is an altered version of the <B>use-external.xml</B> file you created in Example 1. The changes are highlighted in bold.</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;catalog xmlns:xsd="http://www.w3.org/2001/XMLSchema"
<code class="ce">         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"</code>
         <code><b class="cfe">xmlns:x="urn:book"</b></code>&gt;
   &lt;<code><b class="cfe">x:book</b></code> <code class="ce">xsi:schemaLocation="book </code><code><b class="cfe">books2.xsd</b></code><code class="ce">"</code> id="bk101"&gt;
      &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
      &lt;title&gt;XML Developer's Guide&lt;/title&gt;
      &lt;genre&gt;Computer&lt;/genre&gt;
      &lt;price&gt;44.95&lt;/price&gt;
      &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;
      &lt;description&gt;An in-depth look at creating applications with
      XML.&lt;/description&gt;
   &lt;/<code><b class="cfe">x:book</b></code>&gt;
&lt;/catalog&gt;</PRE>



<P class="label"><B><A NAME="xmconinlineschema_example2_books2"></A>File: books2.xsd</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsd:schema <code><b class="cfe">targetNamespace="urn:book"</b></code>&gt;
 &lt;xsd:element name="book"&gt;
  &lt;xsd:complexType&gt;
    &lt;xsd:sequence&gt;
      &lt;xsd:element name="author" type="xsd:string"/&gt;
      &lt;xsd:element name="title" type="xsd:string"/&gt;
      &lt;xsd:element name="genre" type="xsd:string"/&gt;
      &lt;xsd:element name="price" type="xsd:float"/&gt;
      &lt;xsd:element name="publish_date" type="xsd:date"/&gt;
      &lt;xsd:element name="description" type="xsd:string"/&gt;
    &lt;/xsd:sequence&gt;
    &lt;xsd:attribute name="id" type="xsd:string"/&gt;
  &lt;/xsd:complexType&gt;
 &lt;/xsd:element&gt;
&lt;/xsd:schema&gt;</PRE>



<P class="label"><B><A NAME="xmconinlineschema_example2_validate2vbs"></A>File: validate2.vbs</B></P>

<P>The following is an altered version of the <B>validate.vbs</B> file you created in Example 1. The changes are highlighted in bold.</P>

<PRE class="code">  'Create an XML DOMDocument object.
  Dim xmldom, sXmlFile
  Set xmldom = CreateObject("MSXML2.DOMDocument.5.0")

  'Get the name of the file to validate as user input.
  sXmlFile = InputBox("Enter the name of the file to validate:", _
             Wscript.ScriptName, "<code><b class="cfe">inline-namespaced.xml</b></code>")

  'Load and validate the specified file into the DOM.
  xmldom.async = False
  xmldom.validateOnParse = True
  xmldom.load sXmlFile

  'Return validation results in message to the user.
  If xmldom.parseError.errorCode &lt;&gt; 0 Then
     MsgBox xmldom.parseError.errorCode &amp; " " &amp; _
     xmldom.parseError.reason
  Else
     Dim node
     <code><b class="cfe">xmldom.setProperty "SelectionNamespaces", "xmlns:x='urn:book'"</b></code>
     xmldom.setProperty "SelectionLanguage", "XPath"
     Set node = xmldom.selectSingleNode("//<code><b class="cfe">x:</b></code>book")
     MsgBox "Validation successful" &amp; vbCrLf &amp; _
            "=====================" &amp; vbCrLf &amp; node.xml
  End If</PRE>

<P class="labelproc"><B>Try It!</B>

<OL type="1">
	<LI>Copy the <A HREF="#xmconinlineschema_example2_inline_namespaced">namespaced inline version</A> of the sample XML file above and paste it into a text file. Save the file as <B>inline-namespaced.xml</B>.</li>

	<LI>Copy the <A HREF="#xmconinlineschema_example2_external_namespaced">namespaced external version</A> of the sample XML file from above. Paste it into a text file, and save the file as <B>external-namespaced.xml</B> in the same directory where you saved <B>inline-namespace.xml</B>.</li>

	<LI>Copy the <A HREF="#xmconinlineschema_example2_books2">XSD schema</A> for the <code class="ce">&lt;book&gt;</code> element from above. Paste it into a text file, and save the file as <B>books2.xsd</B> in the same directory where you saved the file in the previous steps.</li>

	<LI>Copy the <A HREF="#xmconinlineschema_example2_validate2vbs">VBScript code</A> above. Paste it into a text file, and save the file as <B>validate2.vbs</B>. Use the same directory as you did in the previous steps.</li>

	<LI>Double-click <B>validate2.vbs</B>.
<P>An input box will appear that allows you to specify the name of the file to validate.
</li>

	<LI>Click <B>OK</B> to validate the default file (<B>inline-namespaced.xml</B>).</li>

	<LI>Repeat the previous step, but substitute the version with the external XSD schema (<B>external-namespaced.xml</B>) instead.
<P>Both the inline and external versions of the XML sample file should validate successfully and display the same output.
</li>
</OL>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_devvalidation_5837.htm">Using Inline Schemas (XSD)</A> | <A HREF="xsd_devvalidation_9tv5.htm">Example 1: Comparing an Inline Schema to an External Schema</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
