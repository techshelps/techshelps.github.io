<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>&lt;xsl:apply-templates&gt; Element</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefxslapplytemplateselement"></A>&lt;xsl:apply-templates&gt; Element</H1>

<P>Directs the XSLT processor to find the appropriate template to apply, based on the type and context of each selected node.</P>

<PRE class="syntax">&lt;xsl:apply-templates
  select = <A HREF="xsl_xsltsyntax_51pv.htm">Expression</A>
  mode = <A HREF="xsl_xsltsyntax_0qlv.htm">QName</A>&gt;
&lt;/xsl:apply-templates&gt;</PRE>

<H4 class="dtH4">Attributes</H4>

<DL>
<DT><B>select</B></DT>

<DD>Can be used to process nodes selected by an expression, instead of processing all children. The value of the <code class="ce">select</code> attribute is an expression, which must evaluate to a node-set. The selected node-set is processed in document order, unless a different sort order has been specified.</dd>

<DT><B>mode</B></DT>

<DD>The <code class="ce">mode</code> attribute allows an element to be processed multiple times, each time producing a different result. If <code class="ce">&lt;xsl:template&gt;</code> does not have a <code class="ce">match</code> attribute, it cannot have a <code class="ce">mode</code> attribute. If an <code class="ce">&lt;xsl:apply-templates&gt;</code> element has a <code class="ce">mode</code> attribute, it applies only to template rules from <code class="ce">&lt;xsl:template&gt;</code> elements that have a <code class="ce">mode</code> attribute with the same value. If an <code class="ce">&lt;xsl:apply-templates&gt;</code> element does not have a <code class="ce">mode</code> attribute, it applies only to template rules from <code class="ce">&lt;xsl:template&gt;</code> elements that do not have a <code class="ce">mode</code> attribute.</dd>
</DL>

<H4 class="dtH4">Element Information</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=33%><B>Number of occurrences</B></TD>
<TD width=67%>Unlimited</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>Parent elements</B></TD>
<TD width=67%><A HREF="xsl_elm_af_05pw.htm">xsl:attribute</A>, <A HREF="xsl_elm_af_58tw.htm">xsl:comment</A>, <A HREF="xsl_elm_af_1c38.htm">xsl:copy</A>, <A HREF="xsl_elm_af_2vhw.htm">xsl:element</A>, <A HREF="xsl_elm_af_7zec.htm">xsl:fallback</A>, <A HREF="xsl_elm_af_2bxw.htm">xsl:for-each</A>, <A HREF="xsl_elm_gp_1z3o.htm">xsl:if</A>, <A HREF="xsl_elm_gp_5xx0.htm">xsl:message</A>, <A HREF="xsl_elm_gp_4agk.htm">xsl:otherwise</A>, <A HREF="xsl_elm_gp_5ek4.htm">xsl:param</A>, <A HREF="xsl_elm_gp_1cdw.htm">xsl:processing-instruction</A>, <A HREF="xsl_elm_qz_120k.htm">xsl:template</A>, <A HREF="xsl_elm_qz_94hg.htm">xsl:variable</A>, <A HREF="xsl_elm_qz_4kj8.htm">xsl:when</A>, <A HREF="xsl_elm_qz_1f5g.htm">xsl:with-param</A>, output<I> </I>elements</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><B>Child elements</B></TD>
<TD width=67%><A HREF="xsl_elm_qz_0qyc.htm">xsl:sort</A>, <A HREF="xsl_elm_qz_1f5g.htm">xsl:with-param</A></TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Remarks</H4>

<P>The <code class="ce">&lt;xsl:apply-templates&gt;</code> element first selects a set of nodes using the expression specified in the <code class="ce">select</code> attribute. If this attribute is left unspecified, all children of the current node are selected. For each of the selected nodes, <code class="ce">&lt;xsl:apply-templates&gt;</code> directs the XSLT processor to find an appropriate <code class="ce">&lt;xsl:template&gt;</code> to apply. Templates are tested for applicability by comparing the node to the XPath expression specified in the template's <code class="ce">match</code> attribute. If more than one template satisfies the match pattern, the one appearing with the highest priority is chosen. If several templates have the same priority, the last in the style sheet is chosen.</P>

<P>For more information, see <A HREF="xsl_datadriven_9stv.htm">Handling Irregular Data Hierarchies</A>.</P>

<P>The following topic provides an example of the <code class="ce">&lt;xsl:apply-templates&gt;</code> element.

<UL type="disc">
	<LI><A HREF="xsl_elm_af_5zvp.htm">Example of &lt;xsl:apply-templates&gt;</A></li>
</UL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
