<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Frequently Asked Questions about XSLT</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconfrequentlyaskedquestionsaboutxslt"></A>Frequently Asked Questions about XSLT</H1>

<P>The following are frequently asked questions about XSLT.</P>

<P><A HREF="#xmconwhydomytransformsfailusinginternetexplorer">Why do my transformations fail using Internet Explorer?</A></P>

<P><A HREF="#xmconhowdoirunxslttransformsautomaticallyfromcode">How do I run XSLT transformations programmatically?</A></P>

<P><A HREF="#xmcondoineedtouseadifferentxsltnamespacewithinternetexplorer">Do I need to use a different XSLT namespace with Internet Explorer?</A></P>

<P><A HREF="#xmconihaveinstalledmsxml30whyisntmyapplicationusingit">I have installed Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office. Why isn't my application using it?</A></P>

<P><A HREF="#xmcondoesmsxml30providea100compliantxsltprocessor">Does MSXML 5.0 provide a 100% compliant XSLT processor?</A></P>

<P><A HREF="#xmcondoesinternetexplorer55includeafullycompliantxsltprocessor">Does Internet Explorer 5.5 include a fully compliant XSLT processor?</A></P>

<P><A HREF="#xmconwhywasthemsdnonlinedocumentation">Why was the MSDN online documentation for XSL so different from the XSLT specification?</A></P>

<P><A HREF="#xmconwherecanifinddocumentationaboutcompliance">Where can I find documentation about the compliance of MSXML?</A></P>

<P><A HREF="#xmconhowcanicallmsxmlfromthecommandprompt">How can I call MSXML from the command prompt to do batch processing of XSLT?</A></P>

<P><A HREF="#xmconwhatcanidoifiwrotelotsofxslusingtheold">What can I do if I wrote lots of XSL using the old Internet Explorer version of XSL?</A></P>

<P><A HREF="#xmconhowtoresolveerrorwhentransformingadopersistedxml">I updated a style sheet I wrote previously to transform ADO-persisted XML recordsets. I now get an "undeclared reference to namespace prefix" error. What do I need to do to fix this?</A></P>

<P><A HREF="#xmconwillmsxmlsupportxslt2">Will MSXML support XSLT 2.0?</A></P>



<H4 class="dtH4"><A NAME="xmconwhydomytransformsfailusinginternetexplorer"></A>Why do my transformations fail using Internet Explorer?</H4>

<P>You might have an earlier version of MSXML running with Internet Explorer on your machine. MSXML versions 2.6 and earlier only support the XSL standard. MSXML versions 3.0 and later support XSLT 1.0. To use XSLT transformations, update the system by installing MSXML 3.0 or later.</P>

<P>You can install MSXML 3.0 in replace mode so that it becomes the default XML/XSLT processor for Internet Explorer 5.0 or 5.5. </P>

<P>You cannot, however, install MSXML 4.0 or later in such a way that it becomes the default XML/XSLT processor, because MSXML 4.0 and later can only be installed in side-by-side mode. Until Internet Explorer ships with MSXML 4.0 or later as its default XML parser, you can use MSXML 4.0 and later with Internet Explorer in the following ways only:

<UL type="disc">
	<LI><B>In Windows XP</B> - Although you cannot install MSXML 4.0 or later as the default parser, in Windows XP you can set MSXML as the default XML/XSLT processor by using a manifest. For more information, see <A HREF="sdk_dependencies_8fw0.htm">MSXML 5.0 and Windows XP</A>.</li>

	<LI><B>For earlier versions of Windows</B> - The MSXML 4.0 and later features are available in Internet Explorer only via scripting. Embedded linking will not work for MSXML 4.0 or later with any current versions of Internet Explorer. For an example, see <A HREF="xslt_howdoi_2put.htm">Initiate XSLT in a Script</A>.</li>
</UL>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmconhowdoirunxslttransformsautomaticallyfromcode"></A>How do I run XSLT transformations programmatically?</H4>

<P>XSLT transformations can be initiated programmatically using any language that supports COM interfaces. Such programming languages include Microsoft JScript, VBScript, Visual Basic, C++, and even Perl. To run XSLT transformations programmatically, you must create two XML DOM objects, one for the XML source document and the other for the XSLT style sheet. Then, you call the <code class="ce">transformNode()</code> function on the XML source document with the XSLT style sheet XML DOM object as the argument. The following example in JScript illustrates these points.</P>

<P class="label"><B>JScript File (test.js)</B></P>

<PRE class="code">var xmlstr = "&lt;object&gt;&lt;name&gt;apple&lt;/name&gt;&lt;color&gt;Red&lt;/color&gt;&lt;/object&gt;";
var xsltstr = '&lt;?xml version="1.0"?&gt;' + 
      '&lt;xsl:stylesheet ' +
      '      version="1.0" ' +
      '      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt; '+
      '   &lt;xsl:output method="text"/&gt; '+
      '   &lt;xsl:template match="/object"&gt; '+
      '      &lt;xsl:value-of select="color"/&gt; '+
      '      &lt;xsl:text&gt; &lt;/xsl:text&gt; '+
      '      &lt;xsl:value-of select="name"/&gt; '+
      '   &lt;/xsl:template&gt; '+
      '&lt;/xsl:stylesheet&gt;';

var xmldom, xsltdom;
try {
   xmldom  = new ActiveXObject("Msxml2.DOMDocument.5.0");
   xmldom.validateOnParse = true;
   xmldom.async = false;
   xmldom.loadXML(xmlstr);

   xsltdom = new ActiveXObject("Msxml2.DOMDocument.5.0");
   xsltdom.validateOnParse = true;
   xsltdom.async = false;
   xsltdom.loadXML(xsltstr); 

   output = xmldom.transformNode(xsltdom);
   WScript.echo(output);
}
catch(err) {
   WScript.echo(err.description);
}</PRE>

<P class="labelproc"><B>Try It!</B>

<OL type="1">
	<LI>Copy and paste the code into a file, and save it as <B>test.js</B>.</li>

	<LI>Type the "test.js" command from a command window.</li>
</OL>

<P class="label"><B>Output</B></P>

<P>The output is "Red apple".</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmcondoineedtouseadifferentxsltnamespacewithinternetexplorer"></A>Do I need to use a different XSLT namespace with Internet Explorer?</H4>

<P>No. Use the standard <code class="ce">xmlns:xsl="http://www.w3.org/1999/XSL/Transform"</code> syntax. If Internet Explorer returns an error when you use this namespace, it is likely that you are using an earlier version of MSXML that does not support XSLT. If you have older XSL files and do not want to convert them to XSLT files, you can still use the namespace declaration <code class="ce">xmlns:xsl="http://www.w3.org/TR/WD-xsl"</code>. To convert XSL files to XSLT files, use the <A HREF="http://go.microsoft.com/fwlink/?LinkId=4884">XSL to XSLT Converter1.1</A> <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0> available from MSDN Online Downloads.</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmconihaveinstalledmsxml30whyisntmyapplicationusingit"></A>I have installed Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office. Why isn't my application using it?</H4>

<P>If you embed your XSLT style sheet in your source XML document, MSXML 5.0 will not be used. For more information, see <A HREF="#xmconwhydomytransformsfailusinginternetexplorer">Why do my transformations fail in Internet Explorer?</A>, above.</P>

<P>If you call your transformation from a programming language, it is likely that you are not using the correct ProgID. You must use the version-dependent ProgID. The following Visual Basic code shows the correct syntax to create a <code class="ce">DOMDocument</code> object into which you load an XSLT file. The code uses the version-dependent ProgID.</P>

<PRE class="code">Dim xsltDoc
Set xsltDoc = CreateObject("Msxml2.DOMDocument.5.0")</PRE>

<P>For more information about ProgIDs and syntax, see <A HREF="sdk_guidprogid_367i.htm">GUID and ProgID Information</A>. For more information about creating the <code class="ce">DOMDocument</code> object, see <A HREF="dom_howdoi_6apg.htm">Using DOMDocument</A>.</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmcondoesmsxml30providea100compliantxsltprocessor"></A>Does MSXML 5.0 provide a 100% compliant XSLT processor?</H4>

<P>Yes. MSXML 5.0 is fully compliant with the XSLT specification. For more information, see <A HREF="xslt_starter_3l83.htm">Supported XSLT Features</A>.</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmcondoesinternetexplorer55includeafullycompliantxsltprocessor"></A>Does Internet Explorer 5.5 include a fully compliant XSLT processor?</H4>

<P>Internet Explorer 5.5 is shipped with a version of MSXML that supports only XSL&#0151;not XSLT. However, you can use MSXML 5.0 with the help of client-side or server-side scripting. For more information, see <A HREF="sdk_guidprogid_9vhh.htm">Workarounds to Version Independence</A>.</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmconwhywasthemsdnonlinedocumentation"></A>Why was the MSDN online documentation for XSL so different from the XSLT recommendation?</H4>

<P>Because XSLT is a different technology from XSL. </P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmconwherecanifinddocumentationaboutcompliance"></A>Where can I find documentation about MSXML compliance?</H4>

<P>Each new release of MSXML has a Bug List Page that describes known problems, such as coding mistakes or features that are not fully implemented. To find this page, search MSDN. For full conformance disclosure, see <A HREF="xslt_starter_3l83.htm">Supported XSLT Features</A>. </P>

<P>If you find a bug or implementation point that is not clearly documented, please send feedback to the XML documentation team by using the XML Documentation Feedback form. To use this form, click the Feedback icon (the envelope) at the top-right corner of any page of this documentation.</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmconhowcanicallmsxmlfromthecommandprompt"></A>How can I call MSXML from the command prompt to do batch processing of XSLT?</H4>

<P>Because MSXML is a COM object, you can write VBScript, JScript, or other Windows Script Host (WSH) files to launch MSXML from the command prompt. Microsoft provides an XSLT command line utility, <B>msxsl.exe</B>, that performs command-line XSL transformations using the Microsoft XSL processor. Msxsl.exe is a small (~11K) command line utility that invokes Msxml5.dll to perform the actual work of the transformation. Msxsl.exe is available for download at the XML Developer Center at MSDN.</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmconwhatcanidoifiwrotelotsofxslusingtheold"></A>What can I do if I wrote lots of XSL using the old Internet Explorer version of XSL?</H4>

<P>If you would like to upgrade XSL files so that they are compliant with the XSLT recommendation, you can use the <A HREF="http://go.microsoft.com/fwlink/?LinkId=4884">XSL to XSLT 1.1 Converter</A> available from MSDN Downloads.</P>



<H4 class="dtH4"><A NAME="xmconhowtoresolveerrorwhentransformingadopersistedxml"></A>I updated a style sheet I wrote previously to transform ADO-persisted XML recordsets. I now get an "undeclared reference to namespace prefix" error. What do I need to do to fix this?</H4>

<P>The reason for this error involves namespaces that ActiveX Data Objects (ADO) 2.6 uses when you use the <code class="ce">adPersistXML</code> formatting option with the <code class="ce">Save</code> method to persist an ADO recordset as XML.</P>

<P>For example, the following line shows the syntax used to persist the current ADO recordset as XML in a Visual Basic application.</P>

<PRE class="code">   rs.Save "c:\temp\nwind.xml ", adPersistXML</PRE>

<P>The persisted XML output includes several namespace prefixes: "s", "dt", "rs", and "z". When you use XSLT style sheets to transform ADO-persisted XML, these namespaces must be declared for the transformation to succeed.</P>

<P>When using ADO to persist data as XML, you might encounter the following error text when you attempt to apply XSLT to your persisted XML.</P>

<PRE class="code">  'undeclared reference to namespace prefix'</PRE>

<P>For example, a style sheet might reference the XSLT namespace URI as follows:</P>

<PRE class="code">&lt;xsl:stylesheet 
       <code><b class="cfe">xmlns:xsl="http://www.w3.org/1999/XSL/Transform"</b></code>
<code><b class="cfe">       version="1.0'</b></code>&gt;
   &lt;xsl:template match="/"&gt;
      &lt;xsl:element name="catalog"&gt;
         &lt;xsl:value-of select="//z:row/@isbnnumber"/&gt;
      &lt;/xsl:element&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P>This example, though valid as XSLT, produces the undeclared namespace error described above. To fix the problem, style sheets that specify the XSLT namespace URI must also declare any of the ADO namespaces that are used as input.</P>

<P>The following example shows how to update the previous style sheet code to declare these namespaces.</P>

<PRE class="code">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      <code><b class="cfe">xmlns:s='uuid:BDC6E3F0-6DA3-11d1-A2A3-00AA00C14882'</b></code>
<code><b class="cfe">      xmlns:dt='uuid:C2F41010-65B3-11d1-A29F-00AA00C14882'</b></code>
<code><b class="cfe">      xmlns:rs='urn:schemas-microsoft-com:rowset'</b></code>
<code><b class="cfe">      xmlns:z='#RowsetSchema' version='1.0'</b></code>&gt;
   &lt;xsl:template match="/"&gt;
      &lt;xsl:element name="catalog"&gt;
         &lt;xsl:value-of select="//z:row/@isbnnumber"/&gt;
      &lt;/xsl:element&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P>By adding the ADO namespace declarations above to your style sheet, you can correct the error and permit it to successfully transform ADO-persisted XML.</P>

<P>Style sheets that reference the older XSL namespace (like the following sample) do not produce this error.</P>

<PRE class="code">&lt;xsl:stylesheet <code><b class="cfe">xmlns:xsl="http://www.w3.org/TR/WD-xsl"</b></code>&gt;
   &lt;xsl:template match="/"&gt;
      &lt;xsl:element name="catalog"&gt;
         &lt;xsl:value-of select="//z:row/@isbnnumber"/&gt;
      &lt;/xsl:element&gt;
   &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P>Therefore, these style sheets are not affected and do not require any changes for this issue.</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>



<H4 class="dtH4"><A NAME="xmconwillmsxmlsupportxslt2"></A>Will MSXML support XSLT 2.0?</H4>

<P>No. MSXML versions 4.0 and later fully implement and support XSL Transformations (XSLT) Version 1.0 (W3C Recommendation 16 November 1999). If your XML application requires a later version of XSLT, Microsoft strongly recommends moving to the newer System.Xml framework classes, because all future XML development efforts will be focused there.</P>

<P><A HREF="#xmconfrequentlyaskedquestionsaboutxslt">Return to top</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
