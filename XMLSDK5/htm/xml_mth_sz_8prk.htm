<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>send Method (ServerXMLHTTP/IServerXMLHTTPRequest)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthsendserverxmlhttp"></A>send Method (ServerXMLHTTP/IServerXMLHTTPRequest)</H1>

<P>Sends an HTTP request to the server and receives a response.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">oServerXMLHttpRequest.send(varBody);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>varBody</I></DT>

<DD>The body of the message being sent with the request.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<PRE class="code">&lt;%@language=JScript%&gt;
&lt;% 
var srvXmlHttp
srvXmlHttp = Server.CreateObject("Msxml2.ServerXMLHTTP.5.0");
srvXmlHttp.open ("GET", "http://myserver/myresponse.asp", false);
srvXmlHttp.send(); 
newsElement = srvXmlHttp.responseXML.selectSingleNode("/news/story1");
%&gt;

&lt;html&gt;
&lt;body&gt;
&lt;p&gt;Top News Story&lt;p&gt;
&lt;%Response.write(newsElement.text);%&gt;
&lt;/body&gt;
&lt;/html&gt;</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">oServerXMLHttpRequest.send(varBody)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>varBody</I></DT>

<DD>The body of the message being sent with the request.</dd>
</DL>

<H4 class="dtH4">Example</H4>

<PRE class="code">Dim xmlServerHttp As New Msxml2.ServerXMLHTTP50
xmlServerHttp.open "GET", "http://localhost/sample.xml", False
xmlServerHttp.send
MsgBox xmlServerHttp.responseXML.xml</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT send(VARIANT varBody);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>varBody </I>[in, optional]</DT>

<DD>The body of the message being sent with the request.</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if successful.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>This method is synchronous or asynchronous, depending on the value of the <code class="ce">bAsync</code> parameter in the <code class="ce">open</code> method call. If <code class="ce">open</code> is called with <code class="ce">bAsync</code> == False, this call does not return until the entire response is received or the protocol stack times out. If <code class="ce">open</code> is called with <code class="ce">bAsync</code> == True, this call returns immediately.</P>

<P>This method takes one optional parameter, which is the <code class="ce">requestBody</code> to use. The acceptable VARIANT input types are BSTR, SAFEARRAY of UI1 (unsigned bytes), <code class="ce">IDispatch</code> to an XML Document Object Model (DOM) object, and <code class="ce">IStream</code> *. You can only use chunked encoding (for sending) when sending <code class="ce">IStream</code> *input types. The component automatically sets the Content-Length header for all but <code class="ce">IStream</code> *input types.</P>

<P>If the input type is a BSTR, the response is always encoded as UTF-8. The caller must set a Content-Type header with the appropriate content type and include a <code class="ce">charset</code> parameter.</P>

<P>If the input type is a SAFEARRAY of UI1, the response is sent as is without additional encoding. The caller must set a Content-Type header with the appropriate content type.</P>

<P>If the input type is an XMLDOM object, the response is encoded according to the encoding attribute on the &lt;? XML declaration in the document. If there is no XML declaration or encoding attribute, UTF-8 is assumed.</P>

<P>If the input type is an <code class="ce">IStream</code> *, the response is sent as is without additional encoding. The caller must set a Content-Type header with the appropriate content type.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Important</b>&nbsp;&nbsp;&nbsp;You cannot call multiple <code class="ce">send</code> methods for a single <code class="ce">open</code> method. Instead, for each <code class="ce">send</code> method, you must call a corresponding <code class="ce">open</code> method. For example:</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">osrvXmlHttp.open()</code></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">osrvXmlHttp.send()</code></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">osrvXmlHttp.open()</code></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<code class="ce">osrvXmlHttp.send()</code></BLOCKQUOTE>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xml_mth_or_7nxs.htm">open Method</A></P>

<P>Applies to: <A HREF="xml_obj_iserverxmlhttprequest_7zlc.htm">IServerXMLHTTPRequest/ServerXMLHTTP</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
