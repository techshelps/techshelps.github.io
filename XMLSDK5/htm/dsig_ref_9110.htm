<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>createKeyFromCertContext Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - Digital Signatures</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmth_createkeyfromcertcontext"></A>createKeyFromCertContext Method</H1>
<font face="verdana" color=red>[This feature was first implemented for MSXML 5.0.]</font>
<P>Extracts a key from a specified certificate context obtainable from any of the CryptoAPI methods returning the CERT_CONTEXT structure. </P>

<H4 class="dtH4">C/C++ Syntax Using Smart Pointers</H4>

<PRE class="syntax">IXMLDSigKeyPtr keyRef = 
   objIXMLDigitalSignatureEx-&gt;createKeyFromCertContext(pCertContext);</PRE>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT createKeyFromCertContext(
    void* pCertContext,
    IXMLDSigKey** keyRef);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>pCertContext</I> [in]</DT>

<DD>Pointer to a data structure that contains a certificate context that can be obtained from a CryptoAPI function returning a CERT_CONTEXT structure.</dd>

<DT><I>keyRef</I> [out, retval]</DT>

<DD>In C/C++ this is a reference to the resultant key object. In C/C++ using smart pointer classes this is the key object.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The method succeeded and the resultant <code class="ce">keyRef</code> parameter points to a valid <code class="ce">XMLDSigKey</code> object.</dd>

<DT>E_FAIL</DT>

<DD>The method failed and the resultant <code class="ce">keyRef</code> parameter is NULL.</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<P>This method can be used to access a private key for signing and is available for C/C++ applications only.</P>

<H4 class="dtH4">Example</H4>

<P>This C/C++ example illustrates how to sign an XML document with a key generated from a certificate context stored on your local machine. Generation of the key is encapsulated in the function <code class="ce">GetCertContext</code>, which uses three CryptoAPI functions: <code class="ce">CertOpenSystemStore</code>, <code class="ce">CertFindCertificateInstore</code>, and <code class="ce">CertClosestore</code>. </P>

<P>This example uses one resource file. You should get output similar to that provided at the end of the sample.

<UL type="disc">
	<LI><A HREF="dsig_ref_81wl.htm">Resource File (signature_template.rsa.xml)</A></li>

	<LI><A HREF="dsig_ref_7ugg.htm">C/C++ Code (KeyFromCertContext.cpp)</A></li>

	<LI><A HREF="dsig_ref_9fsk.htm">Output for the KeyFromCertContext Example</A></li>
</UL>

<H4 class="dtH4">Applies To</H4>

<P><A HREF="dsig_ref_82t4.htm">IXMLDigitalSignatureEx</A></P>

<H4 class="dtH4">Versioning</H4>

<P>MSXML 5.0 and later</P>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="dsig_ref_0tgw.htm">createKeyFromCSP Method</A> | <A HREF="dsig_ref_93xw.htm">createKeyFromHMACSecret Method</A> | <A HREF="dsig_ref_3trt.htm">createKeyFromHMACSecretBinary Method</A> | <A HREF="dsig_ref_3tut.htm">createKeyFromNode Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
