<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Deciding whether to Use IDs or Keys</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcondecidingwhethertouseidsorkeys"></A>Deciding whether to Use IDs or Keys</H1>

<P>The XML specification itself provides a simple means to uniquely identify an element, using an ID-type attribute. A conforming XML processor, such as the MSXML processor, is expected to build an index of any elements with IDs, enabling them to be cross-referenced. They might be cross-referenced, for example, by other elements with a corresponding IDREF-type attribute.</P>

<P>Why, then, does the XSLT standard provide keys for essentially the same purpose? There are several drawbacks to using IDs alone:

<UL type="disc">
	<LI>You must use an attribute value as the element's ID. That is, you can't use the element's content as an ID, or the content of some other element related to the element you want to identify. For example, if an author's name is a desired index value, but is held in an <code class="ce">&lt;author_name&gt;</code> element rather than as an attribute value, there is no way to index the name using XML alone.</li>

	<LI>A given element can have no more than one ID-type attribute. This means, for example, that you cannot hold both a book's ISBN and its publication date in ID-type attributes.</li>

	<LI>Each ID value must be unique in a given document. If <code class="ce">pub_date</code> is an ID-type attribute, this effectively prevents two books from sharing the same publication date.</li>

	<LI>In order to use ID attributes at all, they must be declared as such in a Document Type Definition (DTD). If the document is merely well-formed and therefore does not use a DTD, none of its attributes can be IDs.</li>

	<LI>All IDs in a document constitute a single set of IDs. You can't establish multiple sets of IDs that are different but related. For example, if you've designed a document type that uses ISBNs to uniquely identify books, and author numbers to uniquely identify authors, there's no way to treat these two kinds of IDs distinctly.</li>

	<LI>The name of an XML ID must be a legitimate XML name. For example, it cannot contain spaces, and it must start with a letter. This forces you to use somewhat artificial values, such as "isbn0123456789" and "AFarewellToArms" as the unique identifier, rather than "0123456789" and "A Farewell to Arms," respectively.</li>
</UL>

<P>The use of keys enables an XSLT style sheet to circumvent any or all of these restrictions.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
