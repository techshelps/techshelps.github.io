<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>add Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmthaddschemacoll"></A>add Method</H1>

<P>Adds a new schema to the schema collection and associates the given namespace URI with the specified schema.</P>
<div class=filtered><span class="lang">[Script]</span>

<H4 class="dtH4">Script Syntax</H4>

<PRE class="syntax">objXMLDOMSchemaCol.add(namespaceURI, var);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>namespaceURI</I></DT>

<DD>The namespace to associate with the specified schema. The empty string, "", will associate the schema with the empty namespace, <code class="ce">xmlns=""</code>.

<P>This may be any string that can be used in an <code class="ce">xmlns</code> attribute, but it cannot contain entity references. The same white space normalization that occurs on the <code class="ce">xmlns</code> attribute also occurs on <code class="ce">namespaceURI</code> (that is, leading and trailing white space is trimmed, new lines are converted to spaces, and multiple adjacent white space characters are collapsed into one space).
</dd>

<DT><I>var</I></DT>

<DD>This specifies the schema to load. It will load it synchronously and with <code class="ce">resolveExternals=false</code> and <code class="ce">validateOnParse=false</code>. This parameter can also take any <code class="ce">DOMDocument as an argument</code>.

<P>This argument can be Null, which results in the removal of any schema for the specified namespaces. If the schema is an <code class="ce">IXMLDOMNode</code>, the entire document the node belongs to will be preserved.
</dd>
</DL>

<H4 class="dtH4">Example</H4>

<P>The following script example attaches a schema to an XML document.</P>

<PRE class="code">var xmldoc = new ActiveXObject("Msxml2.FreeThreadedDOMDocument.5.0");
var SchemaCache = new ActiveXObject("Msxml2.XMLSchemaCache.5.0");

xmldoc.async = false;
xmldoc.validateOnParse = false;
SchemaCache.add("x-schema:books", "c:\\books.xsd");
xmldoc.schemas = SchemaCache;
// The document will load only if a valid schema is attached to the xml
// file.
xmldoc.load("c:\\books.xml");
if (xmlDoc.parseError.errorCode &lt;&gt; 0) {
&nbsp;&nbsp;&nbsp;var myErr = xmlDoc.parseError;
&nbsp;&nbsp;&nbsp;alert("You have error " + myErr.reason);
} else {
&nbsp;&nbsp;&nbsp;alert(xmldoc.xml) ;
}</PRE>
</div><!-- [Script] -->
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Visual Basic Syntax</H4>

<PRE class="syntax">objXMLDOMSchemaCol.add(namespaceURI, var)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>namespaceURI</I></DT>

<DD>This is the namespace to associate with the specified schema. The empty string, "", will associate the schema with the empty namespace, <code class="ce">xmlns=""</code>.

<P>This may be any string that can be used in an <code class="ce">xmlns</code> attribute, but it cannot contain entity references. The same white space normalization that occurs on the <code class="ce">xmlns</code> attribute also occurs on <code class="ce">namespaceURI</code> (that is, leading and trailing white space is trimmed, new lines are converted to spaces, and multiple adjacent white space characters are collapsed into one space).
</dd>

<DT><I>var</I></DT>

<DD>Specifies the schema to load. It will load it synchronously and with <code class="ce">resolveExternals=false</code> and <code class="ce">validateOnParse=false</code>. The <code class="ce">schema</code> parameter can also be any <code class="ce">DOMDocument</code>.

<P>This argument can be Null, which results in the removal of any schema for the specified namespaces. If the schema is an <code class="ce">IXMLDOMNode</code>, the entire document the node belongs to will be preserved.
</dd>
</DL>

<H4 class="dtH4">Example</H4>

<P>The following Visual Basic example attaches a schema to an XML document.</P>

<PRE class="code">Dim xmldoc As New Msxml2.FreeThreadedDOMDocument50
Dim SchemaCache As New Msxml2.XMLSchemaCache50

xmldoc.async = False
xmldoc.validateOnParse = True
SchemaCache.Add "x-schema:books", "c:\books.xsd"
Set xmldoc.schemas = SchemaCache
' The document will load only if a valid schema is attached to the xml
' file.
xmldoc.Load "c:\books.xml"
If (xmlDoc.parseError.errorCode &lt;&gt; 0) Then
&nbsp;&nbsp;&nbsp;Dim myErr
&nbsp;&nbsp;&nbsp;Set myErr = xmlDoc.parseError
&nbsp;&nbsp;&nbsp;MsgBox("You have error " &amp; myErr.reason)
Else
&nbsp;&nbsp;&nbsp;MsgBox xmldoc.xml
End If</PRE>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">C/C++ Syntax</H4>

<PRE class="syntax">HRESULT add(BSTR namespaceURI, VARIANT var);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>namespaceURI</I> [in]</DT>

<DD>The namespace to associate with the specified schema.

<P>The empty string, "", will associate the schema with the empty namespace, <code class="ce">xmlns=""</code>. This may be any string that can be used in an <code class="ce">xmlns</code> attribute, but it cannot contain entity references. The same white space normalization that occurs on the <code class="ce">xmlns</code> attribute also occurs on this parameter (that is, leading and trailing white space is trimmed, new lines are converted to spaces, and multiple adjacent white space characters are collapsed into one space).
</dd>

<DT><I>var</I> [in]</DT>

<DD>This specifies the schema. It can be a BSTR, in which case it points to the URL to load. It will load it synchronously and with <code class="ce">resolveExternals=false</code> and <code class="ce">validateOnParse=false</code>. The <code class="ce">var</code> parameter can also be any <code class="ce">DOMDocument</code>.

<P>This argument can be Null, which results in the removal of any schema for the specified namespaces. If the schema is an <code class="ce">IXMLDOMNode</code>, the entire document the node belongs to will be preserved.
</dd>
</DL>

<H4 class="dtH4">C/C++ Return Values</H4>

<P>If this call fails, the collection remains unchanged. E_FAIL is returned if:

<UL type="disc">
	<LI>The collection is read-only.</li>

	<LI>The document is not a recognized schema.</li>

	<LI>An error occurs when compiling the schema.</li>

	<LI>The ready state of the document is not 4.</li>
</UL>

<P>If it was loading a schema and encountered a parse error, then the parse error reason is returned in the IErrorInfo. If the VARIANT argument contains an invalid value,<B> </B>E_INVALIDARG is returned.</P>

<H4 class="dtH4">Example</H4>

<PRE class="code">#include "stdafx.h"
#include "tchar.h"
#import "c:\\winnt\\system32\\msxml5.dll"
using namespace MSXML2;

void AddCollectionSample();

int APIENTRY WinMain(HINSTANCE hInstance,
                     HINSTANCE hPrevInstance,
                     LPSTR     lpCmdLine,
                     int       nCmdShow)
{
   ::CoInitialize(NULL);
   AddCollectionSample();
   ::CoUninitialize();
   return 0;
}

void AddCollectionSample()
{
   IXMLDOMDocument2Ptr pIXMLDOMDocument2;
   IXMLDOMSchemaCollection2Ptr pIXMLDOMSchemaCollection2Ptr;
   int nResult;
   
   try
   {
   // Create the DOM
      nResult = pIXMLDOMDocument2.CreateInstance(__uuidof(MSXML2::DOMDocument50));
      (nResult == 0) ? 0: throw nResult;

   // Create the Schema Collections
      nResult = pIXMLDOMSchemaCollection2Ptr.CreateInstance(__uuidof(MSXML2::XMLSchemaCache50));
      (nResult == 0) ? 0: throw nResult;
   
   // Add the schema to the collection
      nResult = pIXMLDOMSchemaCollection2Ptr-&gt;add(_T("x-schema:books"), _T("c:\\books.xsd"));
      (nResult == 0) ? 0: throw nResult;
      
   // Attach schemas
      pIXMLDOMDocument2-&gt;schemas = pIXMLDOMSchemaCollection2Ptr.GetInterfacePtr();

      pIXMLDOMDocument2-&gt;async = false;
      pIXMLDOMDocument2-&gt;validateOnParse = true;

   // Load the document into the DOM
      nResult = pIXMLDOMDocument2-&gt;load(_T("c:\\books.xml"));
      (nResult == -1) ? 0: throw nResult;

      ::MessageBox(NULL, pIXMLDOMDocument2-&gt;xml, _T("Loaded Document"), MB_OK);
   } catch(...)
   {
      ::MessageBox(NULL, _T("Sample Failed"), _T("Error"), MB_OK);
   }
}</PRE>
</div><!-- [C/C++] -->

<P class="label"><B>File Name: c:\books.xml</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;Collection xmlns="x-schema:books"&gt;
   &lt;Book&gt;
      &lt;Title&gt;Lover Birds&lt;/Title&gt;
      &lt;Author&gt;Cynthia Randall&lt;/Author&gt;
      &lt;Publisher&gt;Lucerne Publishing&lt;/Publisher&gt;
   &lt;/Book&gt;
&lt;/Collection&gt;</PRE>

<P class="label"><B>File Name: c:\books.xsd</B></P>

<PRE class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"&gt;
   &lt;xs:element name="Collection"&gt;
      &lt;xs:complexType&gt;
    &lt;xs:sequence&gt;
       &lt;xs:element name="OtherBook"&gt;
          &lt;xs:complexType&gt;
        &lt;xs:sequence&gt;
         &lt;xs:element name="Title" type="xs:string"/&gt;
         &lt;xs:element name="Author" type="xs:string"/&gt;
         &lt;xs:element name="Publisher" type="xs:string"/&gt;
        &lt;/xs:sequence&gt;
          &lt;/xs:complexType&gt;
       &lt;/xs:element&gt;
    &lt;/xs:sequence&gt;
      &lt;/xs:complexType&gt;
   &lt;/xs:element&gt;
&lt;/xs:schema&gt;</PRE>

<P class="label"><B>Output (in a message box)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;Collection xmlns="x-schema:books"&gt;
   &lt;Book&gt;
      &lt;Title&gt;Lover Birds&lt;/Title&gt;
      &lt;Author&gt;Cynthia Randall&lt;/Author&gt;
      &lt;Publisher&gt;Lucerne Publishing&lt;/Publisher&gt;
   &lt;/Book&gt;
&lt;/Collection&gt;</PRE>

<H4 class="dtH4">Remarks</H4>

<P>Schemas referenced by this schema are not added to the collection. The contents of the schema are added to the internal collection. (The schema can be copied.) If a schema is already in the collection with this namespace, the new one will replace it.</P>

<P>The <code class="ce">XmlSchemaCache</code> object does not retrieve imported or included schemas during validation if <B>validateOnLoad</B> is set to False. In this situation, if a.xsd imports or includes another schema file, b.xsd, and you need to use the <B>add</B> method to add b.xsd separately to the schema cache as shown in the following sample JScript code for validation to run successfully as expected:</P>

<PRE class="code">var schemas = new ActiveXObject("MSXML2.XMLSchemaCache.5.0");
<code><b class="cfe">schemas.validateOnLoad = false</b></code>
schemas.add("http://www.example.com/a/", "a.xsd");
/* Add all imported/included schemas by hand */
<code><b class="cfe">schemas.add("http://www.example.com/b/", "b.xsd"); </b></code>
schemas.validate()</PRE>

<P>This only applies if you are not using the default setting of True for <B>validateOnLoad</B>. For example, the following code below will import and inlcude b.xsd if it is referenced in a.xsd.</P>

<PRE class="code">var schemas = new ActiveXObject("MSXML2.XMLSchemaCache.5.0");
schemas.validateOnLoad = true; /* THIS IS THE DEFAULT */ 
schemas.add("http://www.example.com/a/", "a.xsd");
schemas.validate()</PRE>

<P>To view reference information for Visual Basic, C/C++, or Script only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P>Applies to: <A HREF="xml_obj_ixmldomschemacollection_11ke.htm">IXMLDOMSchemaCollection/XMLSchemaCache</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
