<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Author XML Schemas</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmtuttut6authoringschemas"></A>Author XML Schemas</H1>
<script SRC="utilityfuncs.js"></script>
<H2 class="dtH2">What is an XML Schema?</H2>

<P>An XML Schema is an XML-based syntax for defining how an XML document is marked up. XML Schema is a schema specification recommended by Microsoft and it has many advantages over document type definition (DTD), the initial schema specification for defining an XML model. DTDs have many drawbacks, including the use of non-XML syntax, no support for datatyping, and non-extensibility. For example, DTDs do not allow you to define element content as anything other than another element or a string. For more information about DTDs, see the World Wide Web Consortium (W3C) XML Recommendation. XML Schema improves upon DTDs in several ways, including the use of XML syntax, and support for datatyping and namespaces. For example, an XML Schema allows you to specify an element as an integer, a float, a Boolean, a URL, and so on.</P>

<P>Microsoft&reg; XML Core Services (MSXML) 5.0 for Microsoft Office in Microsoft Internet Explorer 5.0 and later can validate an XML document with both a DTD and an XML Schema.</P>

<H2 class="dtH2">How can I create an XML Schema?</H2>

<P>Run the mouse over the following XML document to reveal the schema declarations for each node.</P>
<DIV style="CURSOR: hand"><PRE CLASS=clsCode>  &lt;<SPAN TITLE="<ElementType name='class' content='eltOnly'>  <element type='student'/></ElementType>">class xmlns=&quot;x-schema:classSchema.xml&quot;</SPAN>&gt;<br>    &lt;<SPAN TITLE="<ElementType name='student' content='mixed'>  <attribute type='studentID'/>  <element type='name'/>  <element type='GPA'/></ElementType>">student</SPAN> <SPAN TITLE="<AttributeType name='studentID' dt:type='string' required='yes'/>">studentID=&quot;13429</SPAN>&quot;&gt;<br>      &lt;<SPAN TITLE="<ElementType name='name' content='textOnly'>">name&gt;James Smith&lt;/name&gt;</SPAN><br>      &lt;<SPAN TITLE="<ElementType name='GPA' content='textOnly' dt:type='float'/>">GPA&gt;3.8&lt;/GPA&gt;</SPAN><br>    &lt;/student&gt;<br>  &lt;/class&gt;</PRE></DIV>
<P>You'll notice in the preceding document that the default namespace is <code class="ce">x-schema:classSchema.xml</code>. This tells the parser to validate the entire document against the schema (x-schema) at the following URL (<code class="ce">classSchema.xml</code>).</P>

<P>The following is the entire schema for the preceding document. The schema begins with the <code class="ce">&lt;Schema&gt;</code> element containing the declaration of the schema namespace and, in this case, the declaration of the <code class="ce">datatypes</code> namespace as well. The first, <code class="ce">xmlns="urn:schemas-microsoft-com:xml-data"</code>, indicates that this XML document is an XML Schema. The second, <code class="ce">xmlns:dt="urn:schemas-microsoft-com:datatypes"</code>, allows you to type element and attribute content by using the <code class="ce">dt</code> prefix on the <code class="ce">type</code> attribute within their <code class="ce">ElementType</code> and <code class="ce">AttributeType</code> declarations.</P>

<PRE class="code">&lt;Schema xmlns="urn:schemas-microsoft-com:xml-data" 
  xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;AttributeType name='studentID' dt:type='string' required='yes'/&gt;
  &lt;ElementType name='name' content='textOnly'/&gt;
  &lt;ElementType name='GPA' content='textOnly' dt:type='float'/&gt;
  &lt;ElementType name='student' content='mixed'&gt;
    &lt;attribute type='studentID'/&gt;
    &lt;element type='name'/&gt;
    &lt;element type='GPA'/&gt;
  &lt;/ElementType&gt;
  &lt;ElementType name='class' content='eltOnly'&gt;
    &lt;element type='student'/&gt;
  &lt;/ElementType&gt;
&lt;/Schema&gt;</PRE>

<P>The declaration elements that you use to define elements and attributes are described as follows.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=37%>Element</TH>
<TH width=63%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=37%><code class="ce">&lt;ElementType&gt;</code></TD>
<TD width=63%>Assigns a type and conditions to an element, and what, if any, child elements it can contain.</TD>
</TR>

<TR VALIGN="top">
<TD width=37%><code class="ce">&lt;AttributeType&gt;</code></TD>
<TD width=63%>Assigns a type and conditions to an attribute.</TD>
</TR>

<TR VALIGN="top">
<TD width=37%><code class="ce">&lt;attribute&gt;</code></TD>
<TD width=63%>Declares that a previously defined attribute type can appear within the scope of the named <code class="ce">&lt;ElementType&gt;</code> element.</TD>
</TR>

<TR VALIGN="top">
<TD width=37%><code class="ce">&lt;element&gt;</code></TD>
<TD width=63%>Declares that a previously defined element type can appear within the scope of the named <code class="ce">&lt;ElementType&gt; </code>element.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>The content of the schema begins with the <code class="ce">&lt;AttributeType&gt;</code> and <code class="ce">&lt;ElementType&gt; </code>declarations of the innermost elements.</P>

<PRE class="code">&lt;AttributeType name='studentID' dt:type='string' required='yes'/&gt;
&lt;ElementType name='name' content='textOnly'/&gt;
&lt;ElementType name='GPA' content='textOnly' dt:type='float'/&gt;</PRE>

<P>The next <code class="ce">&lt;ElementType&gt;</code> declaration is followed by its attribute and child elements. When an element has attributes or child elements, they must be included this way in its <code class="ce">&lt;ElementType&gt;</code> declaration. They must also be previously declared in their own <code class="ce">&lt;ElementType&gt;</code> or <code class="ce">&lt;AttributeType&gt;</code> declaration.</P>

<PRE class="code">&lt;ElementType name='student' content='mixed'&gt;
  &lt;attribute type='studentID'/&gt;
  &lt;element type='name'/&gt;
  &lt;element type='GPA'/&gt;
&lt;/ElementType&gt;</PRE>

<P>This process is continued throughout the rest of the schema until every element and attribute has been declared.</P>

<P>Unlike DTDs, XML Schemas allow you to have an open content model, allowing you to do such things as type elements and apply default values without necessarily restricting content.</P>

<P>In the following schema, the <code class="ce">&lt;GPA&gt; </code>element is typed and has an attribute with a default value, but no other nodes are declared within the <code class="ce">&lt;student&gt;</code> element.</P>

<PRE class="code">&lt;Schema xmlns="urn:schemas-microsoft-com:xml-data" 
  xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;AttributeType name="scale" default="4.0"/&gt;
  &lt;ElementType name="GPA" content="textOnly" dt:type="float"&gt;
    &lt;attribute type="scale"/&gt;
  &lt;/ElementType&gt;
  &lt;AttributeType name="studentID"/&gt;
  &lt;ElementType name="student" content="eltOnly" model="open" order="many"&gt;
    &lt;attribute type="studentID"/&gt;
    &lt;element type="GPA"/&gt;
  &lt;/ElementType&gt;
&lt;/Schema&gt;</PRE>

<P>The preceding schema allows you to validate only the area with which you are concerned. This gives you more control over the level of validation for your document and allows you to use some of the features provided by the schema without having to employ strict validation.</P>

<H2 class="dtH2">Try it!</H2>

<P>Try authoring a schema for the following XML document.</P>

<PRE class="code">&lt;order&gt;
  &lt;customer&gt;
    &lt;name&gt;Fidelma McGinn&lt;/name&gt;
    &lt;phone_number&gt;425-655-3393&lt;/phone_number&gt;
  &lt;/customer&gt;
  &lt;item&gt;
    &lt;number&gt;5523918&lt;/number&gt;
    &lt;description&gt;shovel&lt;/description&gt;
    &lt;price&gt;39.99&lt;/price&gt;
  &lt;/item&gt;
  &lt;date_of_purchase&gt;1998-10-23&lt;/date_of_purchase&gt;
  &lt;date_of_delivery&gt;1998-11-03&lt;/date_of_delivery&gt;
&lt;/order&gt;</PRE>

<P>After you have completed the schema, run it through the XML Validator.</P>

<P>MSDN&reg; Online Downloads provides a set of XML sample files, including an XML document with an accompanying schema. Download these samples to work with the XML document and the schema. To test the validity of your XML against a schema, you can load the document through the XML Validator or simply view the XML file in the MIMETYPE Viewer.</P>

<P>The following are some considerations.

<UL type="disc">
	<LI><code class="ce">&lt;ElementType&gt;</code> and <code class="ce">&lt;AttributeType&gt;</code> declarations must precede <code class="ce">&lt;element&gt; </code>and <code class="ce">&lt;attribute&gt; </code>content declarations that refer to these types. For example, in the preceding schema, the <code class="ce">&lt;ElementType&gt; </code>declaration for the <code class="ce">&lt;GPA&gt;</code> element must precede the <code class="ce">&lt;ElementType&gt;</code> declaration for the <code class="ce">&lt;student&gt;</code> element.</li>

	<LI>The default value of the <code class="ce">order</code> attribute depends on the value of the <code class="ce">content</code> attribute. When the content is set to <code class="ce">"eltOnly"</code>, the order defaults to <code class="ce">seq</code><I>.</I> When the content is set to <code class="ce">"mixed"</code>, the order defaults to <code class="ce">many</code>. </li>
</UL>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=4855">XML Validator</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
