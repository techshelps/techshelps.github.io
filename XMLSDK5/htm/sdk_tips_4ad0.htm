<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Tips for Converting Samples to VBScript</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmsctipsforconvertingsamplestovbscript"></A>Tips for Converting Samples to VBScript</H1>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;This topic is intended to provide some guidance for VBScript developers. For more information about JScript or VBScript, see the documentation available from the <U>MSDN Scripting Developer's Center</U> .</BLOCKQUOTE>

<P>Most of the sample code in the MSXML SDK is written in JScript, Visual Basic, or C/C++. However, much of the provided JScript code can be modified to run successfully as VBScript.</P>

<P>The following are some general tips for converting JScript examples to functional VBScript.

<UL type="disc">
	<LI><A HREF="#xmmscusethecreateobject">Use the CreateObject function to replace instances of the ActiveXObject object</A></li>

	<LI><A HREF="#xmmscremovelinetermination">Remove line termination characters used in JScript sample code</A></li>

	<LI><A HREF="#xmmscdeclarevariablesusingcorrectsyntax">Declare variables using the correct syntax</A></li>

	<LI><A HREF="#xmmscremoveparenthesesasneeded">Remove parentheses as needed when you set properties or call methods that require additional parameters</A></li>

	<LI><A HREF="#xmmscsubstitutethemsgboxfunction">Substitute the MsgBox function for alert() method calls</A></li>
</UL>



<H2 class="dtH2"><A NAME="xmmscusethecreateobject"></A>Use the CreateObject function to replace instances of the ActiveXObject object</H2>

<P>When working with MSXML in either JScript or VBScript, you need to create an automation object (for example, a <code class="ce">DOMDocument</code> object), then assign its contents to a variable.</P>

<P>To perform this step in JScript, you create a new instance of the <code class="ce">ActiveXObject</code> object and assign its contents to a variable, like this:</P>

<PRE class="code">var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");</PRE>

<P>To perform this same step in VBScript, you need to use the <code class="ce">CreateObject</code> function, and assign the value it returns to the named variable, like this:</P>

<P><code class="ce">set xmlDoc = CreateObject("Msxml2.DOMDocument.5.0")</code></P>

<P>Note that because the value returned is of the object data type, in VBScript you need to use the <code class="ce">set</code> statement to assign it to the variable (<code class="ce">xmlDoc</code>).</P>



<H2 class="dtH2"><A NAME="xmmscremovelinetermination"></A>Remove line termination characters used in JScript sample code</H2>

<P>In JScript, a line of code can be spread over multiple lines of text in the source file. Therefore, semi-colons are used as line termination characters to indicate the end of each line of code.</P>

<P>These semi-colons are not necessary in VBScript. By default, VBScript treats each line of text as a single line of code, unless you use the Visual Basic line continuation character (an underscore) to indicate that the current line wraps to the next line of text.</P>



<H2 class="dtH2"><A NAME="xmmscdeclarevariablesusingcorrectsyntax"></A>Declare variables using the correct syntax</H2>

<P>In JScript, you declare a variable using the <code class="ce">var</code> statement, like this:</P>

<PRE class="code">var node;</PRE>

<P>If you are declaring variables in VBScript, use the <code class="ce">Dim</code> statement, like this:</P>

<PRE class="code">Dim node</PRE>



<H2 class="dtH2"><A NAME="xmmscremoveparenthesesasneeded"></A>Remove parentheses as needed when you set properties or call methods that require additional parameters</H2>

<P>In JScript, you need to enclose parameters in parentheses when you set properties or call a method on an object. For example:</P>

<PRE class="code">xmlDoc.load("books.xml");
xmlDoc.setProperty("SelectionLanguage", "XPath");
currNode = xmlDoc.selectSingleNode("//book/author");</PRE>

<P>In VBScript, you need to remove the parentheses from the first two lines, like this:</P>

<PRE class="code">xmlDoc.load "books.xml"
xmlDoc.setProperty "SelectionLanguage", "XPath"</PRE>

<P>However, you do use parentheses in VBScript when the method is used as part of the right side of an equal assignment statement. So the third line is the same in both JScript and VBScript:</P>

<PRE class="code">currNode = xmlDoc.selectSingleNode("//book/author")</PRE>



<H2 class="dtH2"><A NAME="xmmscsubstitutethemsgboxfunction"></A>Substitute the MsgBox function for alert() method calls</H2>

<P>When you write JScript to display XML or other text string results in message boxes within Internet Explorer, you use the <code class="ce">alert()</code> method of the <code class="ce">window</code> object. To do this in VBScript, use the <code class="ce">MsgBox</code> function.</P>

<P class="label"><B>Example</B></P>

<P>The following are two different HTML files that display the contents of a simple XML DOM document within an HTML page. The first file uses JScript; the second uses VBScript. The differences are highlighted in bold text.</P>



<P class="label"><B><A NAME="xmmscpopupusingjscript"></A>PopupUsingJScript.htm</B></P>

<PRE class="code">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Displaying a Simple DOM Document in a Browser Popup&lt;/TITLE&gt;
&lt;SCRIPT LANGUAGE="<code><b class="cfe">JScript</b></code>"&gt;
function displayXml() {
    var xmldoc = new ActiveXObject("MSXML2.DOMDocument.5.0");
    xmldoc.loadXML("&lt;root&gt;&lt;child&gt;&lt;/child&gt;&lt;/root&gt;");
    <code><b class="cfe">alert(xmldoc.xml);</b></code>
}
&lt;/SCRIPT&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;BUTTON onClick="displayXml();"&gt;Display XML&lt;/BUTTON&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>



<P class="label"><B><A NAME="xmmscpopupusingvbscript"></A>PopupUsingVBScript.htm</B></P>

<PRE class="code">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Displaying a Simple DOM Document in a Browser Popup&lt;/TITLE&gt;
&lt;SCRIPT LANGUAGE="<code><b class="cfe">VBScript</b></code>"&gt;
Sub DisplayXml
    set xmldoc = CreateObject("MSXML2.DOMDocument.5.0")
    xmldoc.loadXML "&lt;root&gt;&lt;child&gt;&lt;/child&gt;&lt;/root&gt;"
<code><b class="cfe">    MsgBox xmldoc.xml</b></code>
End Sub
&lt;/SCRIPT&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;BUTTON onClick="DisplayXml"&gt;Display XML&lt;/BUTTON&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>

<P class="labelproc"><B>Try It!</B>

<OL type="1">
	<LI>Open Notepad.</li>

	<LI>Copy <B>PopupUsingJScript.htm</B>. Paste it into the Notepad window.</li>

	<LI>From the <B>File</B> menu, click <B>Save As</B>. Save the file as <B>PopupUsingJScript.htm</B> to a folder on your computer.</li>

	<LI>Copy <B>PopupUsingVBScript.htm</B>. Paste it into the Notepad window.</li>

	<LI>From the <B>File</B> menu, click <B>Save As</B>. Save the file as <B>PopupUsingVBScript.htm</B> to the same folder in which you saved <B>PopupUsingJScript.htm</B>.</li>

	<LI>Open each file in Internet Explorer, in separate browser windows. When each file appears in its own browser window, click <B>Display XML </B>to see output for each.</li>
</OL>

<P class="label"><B>Output</B></P>

<P>The following contents of the XML DOM document will appear as a browser popup:</P>

<PRE class="code">&lt;root&gt;&lt;child&gt;&lt;/child&gt;&lt;/root&gt;</PRE>

<P>The results of Step 6 are the same, regardless of whether you are executing the JScript or VBScript version of the scripted HTML page.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
