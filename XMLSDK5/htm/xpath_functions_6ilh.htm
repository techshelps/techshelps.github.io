<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ms:format-time Function</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="msformat-time"></A>ms:format-time Function</H1>

<P>Converts standard XSD time formats to characters suitable for output.</P>

<PRE class="syntax"><I>string</I> ms:format-time(string datetime, string format [,locale])</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>string datetime</I></DT>

<DD>Contains a time-related value in XSD format. For nonstring arguments, this function behaves as if a <code class="ce">string()</code> function were applied. If the argument is not a time, the output is an empty string. If it is a valid XSD time and some fields are empty, this function attempts to fill unspecified fields.</dd>

<DT><I>string format</I></DT>

<DD>Contains a format string, according to Win32 API <code class="ce">GetTimeFormat</code> functions.</dd>

<DT><I>locale [optional]</I></DT>

<DD>Defines the locale to format the data for (for example, "EN_us").</dd>
</DL>

<H4 class="dtH4">Remarks</H4>

<P>The following lists the format characters for <code class="ce">ms:format-time()</code>.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Character(s)</TH>
<TH width=50%>Description</TH>
</TR>

<TR VALIGN="top">
<TD width=50%>h</TD>
<TD width=50%>Hours as 0-12</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>hh</TD>
<TD width=50%>Hours as 00-12</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>H</TD>
<TD width=50%>Hours as 0-23</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>HH</TD>
<TD width=50%>Hours as 00-23</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>m</TD>
<TD width=50%>Minutes as 0-59</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>mm</TD>
<TD width=50%>Minutes as 00-59</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>s</TD>
<TD width=50%>Seconds as 0-59</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>ss</TD>
<TD width=50%>Seconds as 00-59</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>tt</TD>
<TD width=50%>Insert AM or PM, display hours as 12-hour clock</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>t</TD>
<TD width=50%>Insert A or P, display hours as 12-hour clock</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Example</H4>

<P class="label"><B>XML Document: (Sample.xml)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;XMLSamples xml:space="preserve"
         xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;FileDetails&gt;
   &lt;Author&gt;Robert Brown&lt;/Author&gt;
   &lt;Date dt:dt="datetime"&gt;2000-02-16T15:56:00&lt;/Date&gt;
  &lt;/FileDetails&gt;
&lt;/XMLSamples&gt;</PRE>

<P class="label"><B>XSLT Style sheet (Sample.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:ms="urn:schemas-microsoft-com:xslt"
      xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;xsl:template match="/"&gt;
  &lt;HTML&gt;
  &lt;HEAD&gt;
  &lt;/HEAD&gt;
  &lt;BODY&gt; 
   &lt;xsl:for-each select="XMLSamples/FileDetails/Date"&gt;
      &lt;DIV&gt;
          Time Unedited:
          &lt;xsl:value-of select="."/&gt;
      &lt;/DIV&gt;
      &lt;DIV&gt;
          Time Edited:
          &lt;xsl:value-of select="<B>ms:format-time(., 'hh:mm:sstt')</B>"/&gt;
      &lt;/DIV&gt;
   &lt;/xsl:for-each&gt;
  &lt;/BODY&gt; 
  &lt;/HTML&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<P class="labelproc"><B>Try It</B>

<OL type="1">
	<LI>Follow the instructions given in <A HREF="xslt_howdoi_2put.htm">Initiate XSLT in a Script</A></li>

	<LI>Supply <B>Sample.xml</B> and <B>Sample.xsl</B> above as the input for the required .xml and .xsl files.</li>

	<LI>Run the script. You should get the following output.</li>
</OL>

<P class="label"><B>Output</B></P>

<P>The output HTML page shows the following entries:</P>

<PRE class="code">Time Unedited: 2000-02-16T15:56:00
Time Edited: 03:56:00PM</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsd_devdatatypes_065v.htm">Data Types in Schemas</A> | <A HREF="xsd_ref_7gh1.htm">XML Schema Reference (XSD)</A> | <A HREF="xsd_ref_5bc5.htm">XML Data Types Reference</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
