<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a Comma-Separated List of Items</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconcreatingacommaseparatedlistofitems"></A>Creating a Comma-Separated List of Items</H1>

<P>The <code class="ce">last()</code> function can be used to determine if the element is the last one in the query.</P>

<PRE class="code">&lt;DIV&gt;
  &lt;xsl:for-each select="products/product"&gt;
    &lt;xsl:value-of select="."/&gt; &lt;xsl:if test="position()!=last()"&gt;, &lt;/xsl:if&gt; 
    &lt;/xsl:for-each&gt;
&lt;/DIV&gt;</PRE>

<P>Because the comma is being inserted based on the position in the query and not the source document, the list can be sorted without creating errors in the results. The following template shows how to add commas to a sorted product list.</P>

<PRE class="code">&lt;DIV&gt;
  &lt;xsl:for-each select="products/product"&gt;
    &lt;xsl:sort select="product" order="descending"/&gt;
      &lt;xsl:value-of select="."/&gt;&lt;xsl:if test="position()!=last()"&gt;, &lt;/xsl:if&gt; 
  &lt;/xsl:for-each&gt;
&lt;/DIV&gt;</PRE>

<P>The <code class="ce">&lt;xsl:sort&gt;</code> <code class="ce">order</code> attribute is given the value "descending" to indicate a descending sort by product name. The preceding two code snippets are shown in the following example.</P>

<P>You can separate the comma logic from outputting the element value. In the following template rule, the names in a group of names are formatted as a comma-separated list.</P>

<PRE class="code">&lt;xsl:template match="namelist/name"&gt;
  &lt;xsl:apply-templates/&gt;
  &lt;xsl:if test="position()!=last()"&gt;, &lt;/xsl:if&gt;
&lt;/xsl:template&gt;</PRE>

<P>Another way to separate the comma and node printing is by reversing the logic to verify whether this name is the first. In some cases, this performs better than the preceding example because <code class="ce">last()</code> requires that the entire set of names be found and counted, while this one does not.</P>

<PRE class="code">&lt;xsl:template match="namelist/name"&gt;
  &lt;xsl:if test="position()!=1"&gt;, &lt;/xsl:if&gt;
  &lt;xsl:apply-templates/&gt;
&lt;/xsl:template&gt;</PRE>

<P>The preceding two snippets are used with another template rule to display the name value itself:</P>

<PRE class="code">&lt;xsl:template match="name"&gt;
   &lt;xsl:value-of select="."&gt;
&lt;/xsl:template&gt;</PRE>

<H4 class="dtH4">Example</H4>

<P class="label"><B>XML File (product-list2.xml)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;?xml-stylesheet type="text/xsl" <B>href="product-list2.xsl"</B>?&gt;
&lt;products&gt;
   &lt;product&gt;ActiMates Arthur&lt;/product&gt;
   &lt;product&gt;ActiMates Barney&lt;/product&gt;
   &lt;product&gt;ActiMates DW&lt;/product&gt;
   &lt;product&gt;ActiMates PC Pack&lt;/product&gt;
   &lt;product&gt;ActiMates TV Pack&lt;/product&gt;
   &lt;product&gt;Arthur's Brainteasers&lt;/product&gt;
   &lt;product&gt;Arthur's Math Carnival&lt;/product&gt;
   &lt;product&gt;Arthur's Reading Roundup&lt;/product&gt;
   &lt;product&gt;Barney fun on the Farm&lt;/product&gt;
   &lt;product&gt;Barney goes to the Circus&lt;/product&gt;
   &lt;product&gt;Barney under the Sea&lt;/product&gt;
&lt;/products&gt;</PRE>

<P class="label"><B>XSLT File (product-list2.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

&lt;xsl:template match="/"&gt;
  &lt;HTML&gt;
    &lt;BODY STYLE="font:10pt Arial"&gt;
      &lt;DIV&gt;&lt;B&gt;Comma separated list:&lt;/B&gt;&lt;/DIV&gt;
      &lt;DIV&gt;
        &lt;xsl:for-each select="products/product"&gt;
          &lt;xsl:value-of select="."/&gt; <B>&lt;xsl:if test="position()!=last()"&gt;,</B> &lt;/xsl:if&gt; 
          &lt;/xsl:for-each&gt;
      &lt;/DIV&gt;
      &lt;BR/&gt;
      
      &lt;DIV&gt;&lt;B&gt;Comma separated and reverse-sorted list:&lt;/B&gt;&lt;/DIV&gt;
      &lt;DIV&gt;
        &lt;xsl:for-each select="products/product"&gt;
      <B>    &lt;xsl:sort select="product" order="descending"/&gt;</B>
            &lt;xsl:value-of select="."/&gt;<B>&lt;xsl:if test="position()!=last()"&gt;, </B>&lt;/xsl:if&gt; 
        &lt;/xsl:for-each&gt;
      &lt;/DIV&gt;
    &lt;/BODY&gt;
  &lt;/HTML&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<BLOCKQUOTE class="dtBlock">
<B>Comma separated list:</B></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
ActiMates Arthur, ActiMates Barney, ActiMates DW, ActiMates PC Pack, ActiMates TV Pack, Arthur's Brainteasers, Arthur's Math Carnival, Arthur's Reading Roundup, Barney fun on the Farm, Barney goes to the Circus, Barney under the Sea</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<B>Comma separated and reverse-sorted list:</B></BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Barney under the Sea, Barney goes to the Circus, Barney fun on the Farm, Arthur's Reading Roundup, Arthur's Math Carnival, Arthur's Brainteasers, ActiMates TV Pack, ActiMates PC Pack, ActiMates DW, ActiMates Barney, ActiMates Arthur</BLOCKQUOTE>

<P class="label"><B>Processor Output</B></P>

<PRE class="code">&lt;HTML&gt;
&lt;BODY STYLE="font:10pt Arial"&gt;
&lt;DIV&gt;&lt;B&gt;Comma separated list:&lt;/B&gt;&lt;/DIV&gt;
&lt;DIV&gt;ActiMates Arthur, ActiMates Barney, ..., Barney under the Sea&lt;/DIV&gt;&lt;BR&gt;&lt;DIV&gt;&lt;B&gt;Comma separated and reverse-sorted list:&lt;/B&gt;&lt;/DIV&gt;
&lt;DIV&gt;Barney under the Sea, Barney goes to the Circus, ..., ActiMates Arthur&lt;/DIV&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
