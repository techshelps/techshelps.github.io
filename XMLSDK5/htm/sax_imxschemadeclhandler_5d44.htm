<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>schemaElementDecl Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="schemaelementdecl_method"></A>schemaElementDecl Method</H1>

<P>Receives the <code class="ce">ISchemaElement</code> object for each new element type that is declared and used in the document.</P>

<P>For example, suppose that an XSD schema document declares various element types, including the element type <code class="ce">&lt;book&gt;</code>. You configure the SAX reader to register and use this schema when it validates additional documents. As the reader parses the other documents, this method will fire the first time the <code class="ce">&lt;book&gt;</code> element appears in each document that is passed as input to the reader.</P>

<P>The same is true of other element types that are declared in the schema and used in a document parsed by the SAX reader.</P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Implementation Syntax</H4>

<PRE class="syntax">Sub schemaElementDecl(By Val oSchemaElement As MSXML2.ISchemaElement)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>oSchemaElement</I></DT>

<DD>The <code class="ce">ISchemaElement</code> object for the element being parsed.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<P>If failed, the <code class="ce">schemaElementDecl</code> method raises a trappable error.</P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<H4 class="dtH4">Syntax</H4>

<PRE class="syntax">HRESULT schemaElementDecl(
   [in] ISchemaElement* pSchemaElement);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>ISchemaElement</I> [in]</DT>

<DD>The <code class="ce">ISchemaElement</code> object for the element being parsed.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<DL>
<DT>S_OK</DT>

<DD>The value returned if the <code class="ce">ISchemaElement</code> object for the element being parsed is returned successfully.</dd>

<DT>E_INVALIDARG</DT>

<DD>The value returned if the argument provided is invalid.</dd>
</DL>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The SAX validator feature throws this event immediately prior to the <code class="ce">startElement</code> event for the current element being parsed. When this method succeeds, it returns an <code class="ce">ISchemaElement</code> object. This object remains valid until the end of the corresponding <code class="ce">startElement</code> event. Accessing this information at any other time produces undefined results.</P>

<P>You can obtain attribute type information by getting the <code class="ce">Type</code> object from the returned <code class="ce">ISchemaElement</code> object and iterating through it for attribute declarations. For an example, see the <A HREF="som_devguide_hdi_walkthesom_9kfh.htm">Walk the SOM</A> sample application.</P>

<P>Exceptional validation errors might sometimes occur during parsing. For example, suppose that you enable the <code class="ce">exhaustive-errors</code> feature on the SAX reader. In this situation, an exceptional error is reported if the schema used to validate the document does not contain a type that corresponds to the current element. If this is the case, the <code class="ce">schemaElementDecl</code> event handler still fires, but it points to an empty element type. When you write your handler procedure, you need to include code to handle this error. For an idea of how to handle element content types, see the <A HREF="som_devguide_hdi_locatedeclarations_6g37.htm">Locate Declarations</A> example in the SOM documentation.</P>

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P>Applies to: <A HREF="sax_imxschemadeclhandler_9rj9.htm">IMXSchemaDeclHandler Interface</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
