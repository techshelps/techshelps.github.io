<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Use Data Types Within XML Documents</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XML Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<P><A NAME="xmtuttut7usingdatatypeswithindocs"></A>Use Data Types Within XML Documents</P>

<H2 class="dtH2">What is a data type within an XML document?</H2>

<P>A data type within an XML document is a type that has been assigned to an element on the instance using the <code class="ce">dt:dt</code> attribute, or through an XML Schema, a formal definition of an XML document. In addition, data types can be declared as elements. The XML parser uses the data type information to validate the document.</P>

<P>Previously, XML element values were limited to a single type, string, so developers who wanted to process XML documents had to spend time converting all values to a type within their own applications. Typing your XML data will let the parser take care of data type conversions. In addition, because values are assigned a particular data type, changes made to that value must conform to that data type. This provides you with a method for validating user input.</P>

<P>In addition to having a string value, each XML element can also have a typed value. For example, the following XML element can have both a value of "1970-09-30" and a typed value of "Wed Sep 30 00:00:00 PDT 1970."</P>

<PRE class="code">&lt;date&gt;1970-09-30&lt;/date&gt;</PRE>

<H2 class="dtH2">How do I type XML element values?</H2>

<P>Consider the following XML document</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;weather xmlns="x-schema:weatherSchema.xml"&gt;
  &lt;date&gt;1970-09-30&lt;/date&gt;
  &lt;degrees&gt;67.5&lt;/degrees&gt;
&lt;/weather&gt;</PRE>

<P>where <B>weatherSchema.xml</B> is the following file:</P>

<PRE class="code">&lt;Schema xmlns="urn:schemas-microsoft-com:xml-data" xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;ElementType name="date" content="textOnly" dt:type="date"/&gt;
  &lt;ElementType name="degrees" content="textOnly" dt:type="float"/&gt;
  &lt;ElementType name="weather" content="eltOnly"&gt;
    &lt;element type="date"/&gt;
    &lt;element type="degrees"/&gt;
  &lt;/ElementType&gt;
&lt;/Schema&gt;</PRE>

<P>The preceding schema is a formal definition assigning data types to the elements of the preceding XML document. The attribute <code class="ce">xmlns</code> is the XML keyword for a namespace declaration. The declaration <code class="ce">xmlns:dt="urn:schemas-microsoft-com:datatypes"</code> assigns <code class="ce">dt</code> to the namespace <code class="ce">urn:schemas-microsoft-com:datatypes</code>. Any type qualified with <code class="ce">dt</code> will be from the namespace <code class="ce">urn:schemas-microsoft-com:datatypes</code>.</P>

<P>The schema and data type namespaces are declared at the beginning of the XML Schema so that the <code class="ce">dt</code> prefix can then be used to denote which <code class="ce">type</code> attributes hold data type designations.</P>

<PRE class="code">&lt;Schema xmlns="urn:schemas-microsoft-com:xml-data" xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;ElementType name="NUMBER" content="textOnly" dt:type="number"/&gt;</PRE>

<H2 class="dtH2">Typing an element within the XML document</H2>

<P>An element can also be typed through the <code class="ce">dt</code> attribute on the instance of the element. To do this, declare the data type namespace at the beginning of the XML document.</P>

<PRE class="code">&lt;NUMBERS xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;NUMBER dt:dt="number"&gt;44533&lt;/NUMBER&gt;
&lt;/NUMBERS&gt;</PRE>

<P>The <code class="ce">dt</code> prefix can now be used on the <code class="ce">dt</code> attribute to assign a data type to an instance of an element.</P>

<H2 class="dtH2">Data types as elements within the XML document</H2>

<P>In addition to declaring data types on the instance of an element and in a schema, they can also be used as elements. Compare the following examples. The first declares data types on the instance of an element.</P>

<PRE class="code">&lt;shoes xmlns:dt="urn:schemas-microsoft-com:datatypes" id="f1121" sizes="mens"/&gt;
&lt;sizes id="mens"&gt;
  &lt;size dt:dt="int"&gt;8&lt;/size&gt;
  &lt;size dt:dt="int"&gt;10&lt;/size&gt;
  &lt;size dt:dt="int"&gt;12&lt;/size&gt;
&lt;/sizes&gt;</PRE>

<P>The second example declares the types as elements.</P>

<PRE class="code">&lt;shoes xmlns:dt="urn:schemas-microsoft-com:datatypes" id="f1121" sizes="array1"/&gt;
&lt;array id="array1"&gt;
  &lt;dt:int&gt;8&lt;/dt:int&gt;
  &lt;dt:int&gt;10&lt;/dt:int&gt;
  &lt;dt:int&gt;12&lt;/dt:int&gt;
&lt;/array&gt;</PRE>

<P>It is not possible to type such elements through schema.</P>

<P>For a list of data types that you can use in your XML documents, see <A HREF="xsd_xdrref_3w6d.htm">XDR Schema Data Types Reference</A>.</P>

<H2 class="dtH2">Try it!</H2>

<P>In the following text box, write an <code class="ce">&lt;ElementType&gt;</code> declaration for a <code class="ce">&lt;PRICE&gt;</code> element that has a data type of "fixed.14.4". Note that XML is case sensitive.</P>
<p><input TYPE="TEXT" name="ElTypeDecl" SIZE="70" style="COLOR: #8b0000; MARGIN-LEFT: 10pt" onkeypress="checkPress()"><input style="BACKGROUND-COLOR: #66ccff" TYPE="button" NAME="decl" VALUE="Check Declaration" ONCLICK="checkDecl()"><xml id="island"></xml><script SRC="utilityfuncs.js"></script><script LANGUAGE="JScript">function checkDecl(){if(msieversion() >= 5){  var xmlStr = "<Schema xmlns='urn:schemas-microsoft-com:xml-data' xmlns:dt='urn:schemas-microsoft-com:datatypes'>" + ElTypeDecl.value + "</Schema>";  if (ElTypeDecl.value != ""){    island.loadXML(xmlStr);    if (island.parseError.reason != "")      alert("Your declaration is not well-formed:\n" + island.parseError.reason);    else{      try{      if (island.documentElement.childNodes.item(0).nodeName == "ElementType" &&        island.documentElement.childNodes.item(0).attributes.getNamedItem("dt:type").nodeValue == "fixed.14.4" &&        island.documentElement.childNodes.item(0).attributes.getNamedItem("name").nodeValue == "PRICE" &&        island.documentElement.childNodes.item(0).attributes.getNamedItem("content").nodeValue == "textOnly")        alert("Your declaration is correct.");      else alert("Your declaration is missing necessary information.");      }catch(e){alert("Your declaration is missing necessary information.");}     }    }  else alert("You must first enter a declaration.");} else	versionerror();}function checkPress(){  if (event.keyCode == 13 && event.srcElement.name == "ElTypeDecl"){    checkDecl();    event.keyCode = 0;    }  }</script><H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
