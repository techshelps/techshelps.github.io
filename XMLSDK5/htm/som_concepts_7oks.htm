<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Finding Child Elements of Top-Level XML Schema Elements</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="som_concepts_childelementsoftoplevel"></A>Finding Child Elements of Top-Level XML Schema Elements</H1>

<P>SOM elements that are returned from interface properties originate at the top level of the XML Schema. Top-level elements of an XML Schema are declarations that are not nested inside other declarations. </P>

<H4 class="dtH4">Example</H4>

<P>The following example shows a top-level <code class="ce">&lt;ComplexType&gt;</code> declaration that contains a second-level <code class="ce">&lt;element&gt;</code> declaration.</P>

<P class="label"><B>XML Schema: childsample.xsd</B></P>

<PRE class="code">&lt;schema xmlns = "http://www.w3.org/2001/XMLSchema"&gt;
    &lt;complexType name = "TopLevelType"&gt;
   &lt;all&gt;
        &lt;element name = "SecondLevelElement"/&gt;
   &lt;/all&gt;
    &lt;/complexType&gt;
&lt;/schema&gt;</PRE>

<P>To navigate through the schema to the secondary and lower child items, you must use the <A HREF="xml_obj_ischemacomplextype_5mb0.htm">contentModel</A> property of the <A HREF="xml_obj_ischemacomplextype_1rz9.htm">ISchemaComplexType</A> interface. This property returns a <A HREF="xml_obj_ischemamodelgroup_4vjk.htm">SchemaModelGroup</A> object. The <A HREF="xml_obj_ischemamodelgroup_4tkj.htm">particles</A> property of the <A HREF="xml_obj_ischemamodelgroup_4vjk.htm">ISchemaModelGroup</A> interface returns a collection of elements, <code class="ce">modelGroup</code> objects, and <code class="ce">any</code> declarations that are in the <code class="ce">&lt;complexType&gt;</code> declaration of the parent element.</P>

<H4 class="dtH4">Example</H4>

<P>In the following example, the schema above, <B>childsample.xsd</B>, is queried from a Visual Basic program.</P>

<PRE class="code">Dim oSchemaCache as New XMLSchemaCache50
Dim oSchema as ISchema
Dim nsTarget as String
nsTarget = "http://www.samples.microsoft.com/sampletarget"
oSchemaCache.add nsTarget, "childsample.xsd"
Set oSchema = oSchemaCache.getSchema(nsTarget)
Set oComplexTypes = oSchema.types
Set oContentModelGroup = oComplexTypes(0).contentModel
Set oChildItems = oContentModelGroup.particles
strElementName = oChildItems(0).Name</PRE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note&nbsp;&nbsp;&nbsp;</b>When you use the DOM to find child items, you can go directly to the node you want. With the SOM, however, you must start with a top-level item and drill down through the child elements until you reach the node you want.</BLOCKQUOTE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="som_concepts_0y9f.htm">Concepts</A> | <A HREF="xsd_devschemastructures_5unn.htm">Complex Type Definitions</A> | <A HREF="xsd_devschemastructures_614j.htm">Defining Complex Types</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
