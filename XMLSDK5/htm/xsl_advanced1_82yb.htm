<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Passing Values into XSLT Using Global Parameters</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconpassingvaluesintoxsltusingglobalparameters"></A>Passing Values into XSLT Using Global Parameters</H1>

<P>To pass a value into an XSLT style sheet at run time, you must perform the following steps.

<OL type="1">
	<LI>Declare a global XSLT parameter in the style sheet.</li>

	<LI>Call the <code class="ce">addParameter</code> method on the <code class="ce">XSLProcessor</code> object, from a script, to assign a value to the parameter.</li>
</OL>

<P>Step 1 is straightforward: Declare <code class="ce">&lt;xsl:param&gt;</code> as an immediate child element of the <code class="ce">&lt;xsl:stylesheet&gt;</code> element. For example:</P>

<P><code class="ce">&lt;?xml version="1.0"?&gt;</code></P>

<P><code class="ce">&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;</code></P>

<P><code class="ce">&lt;xsl:param name="bgColor"&gt;black&lt;/xsl:param&gt;   </code></P>

<P><code class="ce">&lt;xsl:template match="/"&gt;</code></P>

<P><code class="ce">bgColor = &lt;xsl:value-of select="$bgColor"/&gt;</code></P>

<P><code class="ce">&lt;/xsl:template&gt;</code></P>

<P><code class="ce">&lt;/xsl:stylesheet&gt;</code></P>

<P>The example above defines a global parameter, <code class="ce">bgColor</code>. The value of this parameter will be displayed as a string.</P>

<P>Step 2 is more complicated. We need to create an <code class="ce">XSLTemplate</code> instance to cache the compiled style sheet, and an <code class="ce">XSLProcessor</code> object that will be used to pass a value (<code class="ce">red</code>) to the global parameter (<code class="ce">bgColor</code>) declared in the style sheet. The following is an example of Step 2.</P>

<PRE class="code">&lt;HTML&gt;
&lt;HEAD&gt;
   &lt;TITLE&gt;bgColor in HTML&lt;/TITLE&gt;
&lt;/HEAD&gt;

&lt;SCRIPT&gt;
  var xslt, xml, xslTemp, xslProc;
  function load()
  {
     xml  = new ActiveXObject("Msxml2.DOMDocument.5.0");
     xml.async=false;
     xml.load("bgColor.xsl");

     xslt = new ActiveXObject("Msxml2.FreeThreadedDOMDocument.5.0");
     xslt.async=false;
     xslt.load("bgColor.xsl");

     xslTemp = new ActiveXObject("Msxml2.XSLTemplate.5.0");
     xslTemp.stylesheet = xslt;
     
     xslProc = xslTemp.createProcessor();
     xslProc.input = xml;
     xslProc.addParameter("bgColor", "red");

     try { 
       xslProc.transform;
       result.innerHTML = xslProc.output;
     }
     catch(e)
     {
       result.innerHTML = e.description;
     }
  }
&lt;/SCRIPT&gt;

&lt;BODY ONLOAD="load()"&gt;
  &lt;DIV ID="result"&gt;&lt;/DIV&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_domprocess_9ctw.htm">Increasing Performance by Using the XSLTemplate Object</A>| <A HREF="xml_mth_ac_5pgy.htm">addParameter Method</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
