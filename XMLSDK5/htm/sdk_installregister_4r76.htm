<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Installing and Registering the MSXML 5.0 SDK</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmmscxmlinstallregister"></A>Installing and Registering the MSXML 5.0 SDK</H1>

<H2 class="dtH2">Development Environment</H2>

<P>The following system components are required for developing with Microsoft® XML Core Services (MSXML) 5.0 for Microsoft Office.

<UL type="disc">
	<LI>Windows-compatible computer</li>

	<LI>A supported 32-bit version of a Microsoft Windows&reg; operating system product, such as Microsoft Windows&reg; XP, Microsoft Windows&reg; 2000, Microsoft Windows NT&reg; 4.0, Microsoft Windows&reg; Millennium Edition, or Microsoft Windows 98</li>

	<LI>Microsoft Internet Explorer 5.0 or later, if your solutions create output for display on the web browser</li>

	<LI>Microsoft Windows Script Host, if you want to view output without the web browser</li>

	<LI>Microsoft&reg; Visual Studio&reg;, if you create solutions with Visual Basic&reg; or C++</li>
</UL>

<H2 class="dtH2">Installing and Registering MSXML 5.0</H2>

<P>The Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office Software Development Kit is installed on your computer in side-by-side mode. This mode protects the quality of applications that currently use the <B>msxml.dll</B>, <B>msxml2.dll</B>, <B>msxml3.dll</B>, or <B>msxml4.dll</B> files. This feature is important because different versions of the Microsoft Windows&reg; operating system and Microsoft Internet Explorer are released with different versions of MSXML.</P>

<P>Side-by-side mode also allows you to decide which version of the parser to use in your code. When you install the MSXML 5.0 SDK from the Microsoft XML Download Center, the setup program installs two files onto your computer: <B>msxml5.dll</B> and either <B>msxml5a.dll</B> (if the computers runs under Windows 9x/ME) or <B>msxml5r.dll</B> (if the computers runs under Windows NT/2000/XP). The setup program registers the <B>msxml5.dll</B> file in the computer's registry.</P>

<P>After you install the MSXML 5.0 SDK, calling applications must use version-dependent CLSIDs and ProgIDs to reference and use <B>msxml5.dll</B>. This ensures stability in your applications. For example, you might have legacy coding that uses version-independent CLSIDs and ProgIDs such as the following JScript code:</P>

<PRE class="code">var xml = new ActiveXObject("Msxml2.DOMDocument");
var xsl = new ActiveXObject("Msxml2.DOMDocument");</PRE>

<P>Even if MSXML 5.0 is deployed to client computers, the previous code would continue to run, and to call an earlier version of MSXML, such as version 2.0, 2.6, or 3.0. The exact version depends on other details, such as whether applications have been installed that are dependent on a specific version of MSXML, and that reconfigure the system to use that version by default. For more information and a list of CLSIDs and ProgIDs, see <A HREF="sdk_guidprogid_367i.htm">GUID and ProgID Information</A>.</P>

<H2 class="dtH2">Earlier Versions of MSXML and the Xmlinst.exe Utility</H2>

<BLOCKQUOTE class="dtBlock">
<B><b class="le">Note</b>&nbsp;&nbsp;&nbsp;</B>The MSXML 5.0 SDK does not provide an <B>xmlinst.exe</B> utility.</BLOCKQUOTE>

<P>Earlier versions of MSXML, notably MSXML 2.5 and 3.0, can be installed in replace mode with the help of the <B>xmlinst.exe</B> utility. In this mode, the newly installed version of MSXML replaces an older version and becomes the default XML parser. When you call an application using version-independent CLSIDs or ProgIDs, the default XML parser is invoked. This causes compatibility problems in older applications.</P>

<P>For this reason, MSXML 5.0 can only be installed side-by-side. The <B>xmlinst.exe</B> utility does not work for it. To access MSXML 5.0 from an application, you must use the version-dependent CLSID or ProgID to instantiate the parser explicitly.</P>

<H2 class="dtH2">Using Version-Dependent ProgIDs</H2>

<P>The following Microsoft JScript&reg; code shows how to create an instance of the <code class="ce">DOMDocument</code> object using the version-dependent ProgID, <code class="ce">Msxml2.DOMDocument.5.0</code>.</P>

<PRE class="code">var xml = new ActiveXObject("Msxml2.DOMDocument.5.0");
var xsl = new ActiveXObject("Msxml2.DOMDocument.5.0");</PRE>

<P>This ProgID is for MSXML 5.0. For a full example of how to call and use MSXML 5.0 to load and transform XML documents from script contained in a Web page, see <A HREF="sdk_guidprogid_9vhh.htm#xmmscimplementingmsxml5inwebscripting">Implementing MSXML 5.0 in Web Scripting</A>.</P>

<P>In a similar way, to code to MSXML 2.6, use the following JScript syntax:</P>

<PRE class="code">var xml = new ActiveXObject("Msxml2.DOMDocument.2.6");
var xsl = new ActiveXObject("Msxml2.DOMDocument.2.6");</PRE>

<P>For more information about ProgIDs, see <A HREF="sdk_guidprogid_367i.htm">GUID and ProgID Information</A>. For more information about creating the <code class="ce">DOMDocument</code> object, see <A HREF="dom_howdoi_6apg.htm">Using DOMDocument</A>.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Important&nbsp;&nbsp;&nbsp;</b>Ensure the stability of your applications by updating older version-independent CLSIDs and ProgIDs to MSXML 5.0 version-dependent CLSIDs and ProgIDs. Otherwise, mixing the version-dependent and version-independent CLSIDs or ProgIDs in your code can cause problems with your application.</BLOCKQUOTE>

<H2 class="dtH2">Limitation of Side-by-Side Mode</H2>

<P>Currently, with MSXML 5.0 installed in side-by-side mode, Microsoft&reg; Internet Explorer does not provide full MSXML 5.0 support for data islands. When you create a data island on a Web page and reference it as an object, the browser creates that object based on the version of MSXML used by the browser. For Internet Explorer 5.0 or later, this can be MSXML 2.0 or MSXML 2.5, both of which support Extensible Stylesheet Language (XSL), but not XSLT.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sdk_dependencies_4sol.htm">Dependencies in MSXML 5.0</A></P>

<H4 class="dtH4">Other Resources <IMG SRC="leave-ms.gif" ALT="Other Resources" BORDER=0></H4>

<P><A HREF="http://go.microsoft.com/fwlink/?LinkId=4848">XML Development Center</A> </P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
