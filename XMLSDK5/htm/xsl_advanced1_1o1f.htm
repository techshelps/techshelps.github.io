<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using XSLT Variables and Parameters</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconusingxsltvariablesandparameters"></A>Using XSLT Variables and Parameters</H1>

<H2 class="dtH2">XSLT Variables</H2>

<P>In XSLT, you can use <code class="ce">&lt;xsl:variable&gt;</code> to define an XSLT variable. A variable in XSLT functions like a named constant in traditional programming languages, such as C/C++. You can use a variable to store values that might be needed repeatedly. A variable is also useful for caching context-sensitive values or a temporary tree during the transformation.</P>

<P>Once defined, an XSLT variable cannot be changed until it falls out of its scope. To reference a defined variable, prefix the <code class="ce">$</code> sign to the value of the <code class="ce">name</code> attribute of the <code class="ce">&lt;xsl:variable&gt;</code> element.</P>

<P>An XSLT variable is global if it is declared as an immediate child element of the <code class="ce">&lt;xsl:stylesheet&gt;</code> element. A global variable can be used anywhere in the style sheet. A variable is local if it is declared within a template rule. The scope of a local variable is only within the context in which it is defined.</P>

<H2 class="dtH2">XSLT Parameters</H2>

<P>You can use <code class="ce">&lt;xsl:param&gt;</code> to define an XSLT parameter. A parameter in XSLT functions like a variable in traditional programming languages, such as C/C++.</P>

<P>To reference a defined parameter, prefix the <code class="ce">$</code> sign to the value of the <code class="ce">name</code> attribute of the <code class="ce">&lt;xsl:param&gt;</code> element.</P>

<P>An XSLT parameter is global if it is declared as an immediate child element of the <code class="ce">&lt;xsl:stylesheet&gt;</code> element. A global parameter can be used anywhere in the style sheet. A parameter is local if it is declared within a template rule. The scope of a local parameter is only within the context in which it is defined.</P>

<P>An XSLT parameter is a parameterized XSLT variable. Once defined, it cannot be changed until it falls out of its scope. However, a parameter can take a value passed in from outside its scope. For example, a global parameter can take a value passed in from a script in an HTML or ASP page. A local parameter can take a value passed in from the calling template rule.</P>

<P>The topics in this section refer to the <B>weatherlog</B> example, which will be added to throughout the section to illustrate the use of variables and parameters. The initial sample files appear at the beginning of the section. The finished sample files are provided at the end.</P>

<P>This section contains the following topics.

<UL type="disc">
	<LI><A HREF="xsl_advanced1_2vqr.htm">Initial XSLT Example Using Variables</A></li>

	<LI><A HREF="xsl_advanced1_6yat.htm">Using Variables to Store Values that Do Not Change</A></li>

	<LI><A HREF="xsl_advanced1_6zz9.htm">Using Parameters to Store Values that Change</A></li>

	<LI><A HREF="xsl_advanced1_6qpf.htm">Finished XSLT Example Using Variables</A></li>
</UL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
