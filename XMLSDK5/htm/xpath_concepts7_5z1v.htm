<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Sample XSLT File for Boolean Operators in Predicates</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconsamplexsltfileforbooleanoperatorsinpredicates"></A>Sample XSLT File for Boolean Operators in Predicates</H1>

<P class="label"><B>XSLT File (predicate.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"    
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns="http://www.w3.org/TR/REC-html40" &gt;

&lt;xsl:output method="html" /&gt;

&lt;!-- Override built-in template rules for elements
and text nodes (note empty &lt;xsl:template element). --&gt; 
&lt;xsl:template match="*" /&gt;

&lt;!-- Process the document root. --&gt;
&lt;xsl:template match="/"&gt;
    &lt;html&gt;
    &lt;head&gt;&lt;title&gt;&lt;xsl:value-of select="book/title"/&gt;&lt;/title&gt;&lt;/head&gt;
    &lt;h1&gt;&lt;xsl:value-of select="book/title"/&gt;&lt;/h1&gt;
    &lt;body&gt;
        &lt;xsl:apply-templates/&gt;
    &lt;/body&gt;
    &lt;/html&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="book"&gt;
    &lt;xsl:apply-templates select="@*|*"/&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="@copyright[.&amp;gt;=2001]"&gt;
    &lt;cite&gt;
        [Copyright &lt;xsl:value-of select="."/&gt;
        (21st century)]
    &lt;/cite&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="@copyright[.&amp;lt;=2000]"&gt;
    &lt;cite&gt;
        [Copyright &lt;xsl:value-of select="."/&gt;
        (Previous century)]
    &lt;/cite&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="book[not(@copyright)]"&gt;
    &lt;cite&gt;
        [No copyright date supplied]
    &lt;/cite&gt;
    &lt;xsl:apply-templates/&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="chapter[position()&amp;lt;2]"&gt;
    &lt;hr /&gt;
    &lt;hr /&gt;
    &lt;div style="background-color: teal"&gt;
        &lt;h2 align="right"&gt;Chapter &lt;xsl:value-of select="position()-2"/&gt;:&lt;/h2&gt;
        &lt;xsl:apply-templates select="title"/&gt;
    &lt;/div&gt;
    &lt;xsl:apply-templates select="section|notes"/&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="chapter[position()&amp;gt;1]"&gt;
    &lt;hr /&gt;
    &lt;div style="background-color: teal"&gt;
        &lt;h2 align="right"&gt;Chapter &lt;xsl:value-of select="position()-2"/&gt;:&lt;/h2&gt;
        &lt;xsl:apply-templates select="title"/&gt;
    &lt;/div&gt;
    &lt;xsl:apply-templates select="section|notes"/&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="title[name(..)!='book']"&gt;
    &lt;xsl:choose&gt;
        &lt;xsl:when test="parent::*[name()='chapter']"&gt;
            &lt;h2 align="right"&gt;&lt;xsl:value-of select="."/&gt;&lt;/h2&gt;
        &lt;/xsl:when&gt;
        &lt;xsl:otherwise&gt;
            &lt;div style="background-color: silver"&gt;
                &lt;h3 align="left"&gt;&lt;xsl:value-of select="."/&gt;&lt;/h3&gt;
            &lt;/div&gt;
        &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="section"&gt;
    &lt;xsl:apply-templates /&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="notes"&gt;
    &lt;hr width="75%" align="left" /&gt;
    &lt;h4&gt;Notes for this chapter:&lt;/h4&gt;
    &lt;xsl:apply-templates select="note"/&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="note"&gt;
    &lt;p&gt;&lt;a name="#{@id}" /&gt;[&lt;xsl:value-of select="count(preceding::note[ancestor::chapter//.])+1"/&gt;] &lt;xsl:value-of select="text()"/&gt;&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="noteref"&gt;
  &lt;xsl:variable name="note_num" select="count(preceding::noteref[ancestor::chapter//.])+1"/&gt;
          [&lt;a href="#{@idref}"&gt;Note &lt;xsl:value-of select="$note_num"/&gt;&lt;/a&gt;]
&lt;/xsl:template&gt;

&lt;xsl:template match="figure"&gt;
    &lt;br clear="left" /&gt;
    &lt;img border="1" height="200" width="200" alt="{@caption}" src="{@location}" /&gt;
    &lt;br clear="left" /&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="text[substring(.,1,1)='T' or substring(.,1,1)='B' or substring(.,1,1)='A' or substring(.,1,1)='P']"&gt;
    &lt;p&gt;&lt;span style="font-weight: bold; font-size: 18pt; font-family=Verdana,Arial"&gt;
        &lt;xsl:value-of select="substring(.,1,1)"/&gt;
        &lt;/span&gt;
        &lt;xsl:value-of select="substring(., 2, string-length(.)-1)"/&gt;
        &lt;xsl:apply-templates select="noteref|figure"/&gt;
    &lt;/p&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="text[substring(.,1,1)!='T' and substring(.,1,1)!='B' and substring(.,1,1)!='A' and substring(.,1,1)!='P']"&gt;
    &lt;p&gt;
        &lt;xsl:apply-templates select="noteref|figure|text()"/&gt;
    &lt;/p&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
