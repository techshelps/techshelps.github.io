<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Calculating a Sum of Sums (Second Attempt)</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconcalculatingasumofsumssecondattempt"></A>Calculating a Sum of Sums (Second Attempt)</H1>

<P>As a next attempt, we'll declare a variable to accumulate and hold the extended price. Then we'll try to use that variable for the sum operation. The style sheet now looks like this:</P>

<PRE class="code"><B>&lt;xsl:variable name="ext_price"&gt;
    &lt;xsl:for-each select="invoice/item"&gt;
        &lt;accum&gt;&lt;xsl:value-of select="quantity * unit_price"/&gt;&lt;/accum&gt;
</B>    &lt;/xsl:for-each&gt;
&lt;/xsl:variable&gt;

&lt;xsl:template match="/"&gt;
...
        &lt;tr&gt;
            &lt;th colspan="3"&gt;<B>Total, All Items</B>&lt;/th&gt;
            &lt;td align="right"&gt;
                &lt;xsl:value-of select="<B>format-number(sum($ext_price/accum), '#,##0.00')</B>"/&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
...</PRE>

<P>The result of this attempt is shown in the following example.</P>

<H4 class="dtH4">Example</H4>

<P class="label"><B>XML File (invoice.xml)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;?xml-stylesheet type="text/xsl" href="inv3.xsl" ?&gt;
&lt;invoice&gt;
    &lt;item item_num="AX43598"&gt;
        &lt;quantity&gt;29&lt;/quantity&gt;
        &lt;unit_price&gt;2.00&lt;/unit_price&gt;
    &lt;/item&gt;
    &lt;item item_num="FH29782"&gt;
        &lt;quantity&gt;140&lt;/quantity&gt;
        &lt;unit_price&gt;6.50&lt;/unit_price&gt;
    &lt;/item&gt;
&lt;/invoice&gt;</PRE>

<P class="label"><B>XSLT File (inv3.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

<code><b class="cfe">&lt;xsl:variable name="ext_price"&gt;</b></code>
<code><b class="cfe">    &lt;xsl:for-each select="invoice/item"&gt;</b></code>
<code><b class="cfe">        &lt;accum&gt;&lt;xsl:value-of select="quantity * unit_price"/&gt;&lt;/accum&gt;</b></code>
<code><b class="cfe">    &lt;/xsl:for-each&gt;</b></code>
<code><b class="cfe">&lt;/xsl:variable&gt;</b></code>

&lt;xsl:template match="/"&gt;
    &lt;table border="1" cellpadding="2" cellspacing="0"&gt;
        &lt;tr&gt;
            &lt;th&gt;Item&lt;/th&gt;
            &lt;th&gt;Quantity&lt;/th&gt;
            &lt;th&gt;Unit Price&lt;/th&gt;
            &lt;th&gt;Extended Price&lt;/th&gt;
        &lt;/tr&gt;
        &lt;xsl:for-each select="invoice/item"&gt;
            &lt;tr&gt;
                &lt;td&gt;
                    &lt;xsl:value-of select="@item_num"/&gt;
                &lt;/td&gt;
                &lt;td align="right"&gt;
                    &lt;xsl:value-of select="quantity"/&gt;&lt;/td&gt;
                &lt;td align="right"&gt;
                    &lt;xsl:value-of select="format-number(unit_price, '#,##0.00')"/&gt;
                &lt;/td&gt;
                &lt;td align="right"&gt;
                    &lt;xsl:value-of select="format-number(quantity * unit_price, '#,##0.00')"/&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
        &lt;/xsl:for-each&gt;
<code><b class="cfe">        &lt;tr&gt;</b></code>
<code><b class="cfe">            &lt;th colspan="3"&gt;Total, All Items&lt;/th&gt;</b></code>
<code><b class="cfe">            &lt;td align="right"&gt;</b></code>
<code><b class="cfe">                &lt;xsl:value-of select="format-number(sum($ext_price/accum), '#,##0.00')"/&gt;</b></code>
<code><b class="cfe">            &lt;/td&gt;</b></code>
<code><b class="cfe">        &lt;/tr&gt;</b></code>
    &lt;/table&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Result</B></P>

<P>Now when we try to view our sample document in Internet Explorer, we get another error message:</P>

<BLOCKQUOTE class="dtBlock">
<B>Reference to variable or parameter 'ext_price' must evaluate to a node list.</B></BLOCKQUOTE>

<P>Even though the <code class="ce">&lt;accum&gt;</code> element contains numeric data, the XPath <code class="ce">sum()</code> function must take a <code class="ce">node-set</code> as an argument. To correct the problem, see the next topic, <A HREF="xsl_advanced2_4rvy.htm">Calculating a Sum of Sums (Final Version)</A>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
