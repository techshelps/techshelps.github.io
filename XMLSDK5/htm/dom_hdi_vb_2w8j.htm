<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Source: queryNodes.frm</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - DOM Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="dom_hdi_vb_querynodes"></A>Source: queryNodes.frm</H1>

<P>This example application calls both the <code class="ce">selectSingleNode</code> method and the <code class="ce">selectNodes</code> method on an XML DOM object loaded from the <B>stocks.xml</B> file. The same XPath expression is input to both methods: </P>

<PRE class="code">//stock[1]/*</PRE>

<P>This expression specifies all the child elements of the first <code class="ce">&lt;stock&gt;</code> element in the XML document. In MSXML, the <code class="ce">selectSingleNode</code> method returns the first element of the resultant node-set, and the <code class="ce">selectNodes</code> method returns all the elements in the node-set.</P>

<P>Programmatically, this source code performs the following steps:

<OL type="1">
	<LI>Creates an instance of an XML DOM object (<code class="ce">oXMLDom</code>).</li>

	<LI>Calls the <code class="ce">load</code> method on <code class="ce">oXMLDom</code> to load XML data from a file (<B>stocks.xml</B>).</li>

	<LI>Calls the <code class="ce">selectSingleNode</code> method on <code class="ce">oXMLDom</code> to select a DOM node according to the input XPath expression (<code class="ce">//stock[1]/*</code>). Then displays the resulting node in the console if the query is successful.</li>

	<LI>Calls the <code class="ce">selectNodes</code> method on <code class="ce">oXMLDom</code> to select a DOM node-set according to the input XPath expression ("<code class="ce">//stock[1]/*</code>"). Then displays the resulting nodes in the console if the query is successful.</li>
</OL>

<P class="label"><B>Visual Basic Source File (queryNodes.frm)</B></P>

<PRE class="code">Private Sub Form_Load()
    ' Output string:
    Dim strout As String
    strout = ""
    
    ' Load an xml document into a DOM instance.
    Dim oXMLDom As New DOMDocument50
    oXMLDom.async = False
    oXMLDom.validateOnParse = False
    oXMLDom.resolveExternals = False
    oXMLDom.preserveWhiteSpace = True
    If oXMLDom.Load(App.Path + "\stocks.xml") = False Then
        MsgBox "Failed to load xml data from file."
        Exit Sub
    End If
    
    ' Query a single node.
    Dim oNode As IXMLDOMNode
    Set oNode = oXMLDom.selectSingleNode("//stock[1]/*")
    If oNode Is Nothing Then GoTo MoreNodes
        
    strout = strout _
           + "Result from selectSingleNode" + vbNewLine _
           + "Node, &lt;" + oNode.nodeName + "&gt;: " + vbNewLine _
           + vbTab + oNode.xml + vbNewLine + vbNewLine
    
MoreNodes:
    ' Query a node-set.
    Dim oNodes As IXMLDOMNodeList
    Set oNodes = oXMLDom.selectNodes("//stock[1]/*")
    
    strout = strout _
           + "Results from selectNodes:" + vbNewLine
    For i = 0 To oNodes.length - 1
        Set oNode = oNodes.nextNode
        If Not (oNode Is Nothing) Then
            sName = oNode.nodeName
            sData = oNode.xml
            strout = strout _
               + "Node (" + CStr(i) + "), &lt;" + sName + "&gt;:" _
               + vbNewLine + vbTab + sData + vbNewLine
        End If
    Next
    MsgBox strout
    
End Sub</PRE>

<P class="labelproc"><B>To add queryNodes.frm to the project</B>

<UL type="disc">
	<LI>Copy the code listing above. Paste it into the Visual Basic code editor as the <B>form_load</B> subroutine, replacing any code fragments that are already there.</li>
</UL>

<P>Next, we'll add the <A HREF="dom_hdi_vb_1x9h.htm">resource files</A> to the <B>queryNodes</B> project.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
