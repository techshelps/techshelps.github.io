<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Differences between XPath Expressions and XSLT Patterns</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcondifferencesbetweenxpathexpressionsandxsltpatterns"></A>Differences between XPath Expressions and XSLT Patterns</H1>

<P>An Extensible Stylesheet Language Transformations (XSLT) pattern may appear in a number of places in a style sheet:

<UL type="disc">
	<LI>As the value of the <code class="ce">match</code> attribute of an <code class="ce">&lt;xsl:template&gt;</code> element. (This is the most common use of XSLT patterns.)</li>

	<LI>As the value of the <code class="ce">match</code> attribute of an <code class="ce">&lt;xsl:key&gt;</code> element.</li>

	<LI>As the values of the <code class="ce">count</code> and <code class="ce">from</code> attributes of an <code class="ce">&lt;xsl:number&gt;</code> element.</li>
</UL>

<P>The purpose of a pattern is to restrict the set of candidate nodes in a node-set to just those nodes that meet a particular condition, or set of conditions. For instance:</P>

<PRE class="code">&lt;xsl:template match="<code><b class="cfe">//attribute::invoice_num[.='X00456']</b></code>"&gt;</PRE>

<P>restricts the candidate nodes for the template rule just to the element(s) with an <code class="ce">invoice_num</code> attribute whose value is "X00456". This works even though from any given context node, in theory all other nodes in the documents are reachable candidates.</P>

<P>All XSLT patterns are also XML Path Language (XPath) expressions. However, the reverse is not always true: not all XPath expressions are XSLT patterns. For instance:</P>

<PRE class="code">round(sales)</PRE>

<P>is a legitimate XPath expression, which returns the value of the <code class="ce">&lt;sales&gt;</code> element rounded to the nearest integer. But:</P>

<PRE class="code">&lt;xsl:template match="<code><b class="cfe">round(sales)</b></code>"&gt;</PRE>

<P>is <I>not</I> a legitimate way to open an XSLT <code class="ce">&lt;xsl:template&gt;</code> element. Even though it refers to a node-set (<code class="ce">sales</code>) relative to the context node, taken as a whole the expression does nothing to constrain the universe of all possible candidate nodes at that point to a <I>subset</I> of them. Thus, such XPath expressions must always appear in a pattern in some other form, such as within a predicate.</P>

<P>For example, we could use the <code class="ce">round(sales)</code> expression in this way in an XSLT pattern:</P>

<PRE class="code">&lt;xsl:template match=".//*[<code><b class="cfe">round(sales)</b></code> &amp;lt; 5000]"&gt;</PRE>

<P>This says to restrict the universe of possible candidate nodes to those which are descended from the context node (<code class="ce">.//</code>), with any name (<code class="ce">*</code>), whose <code class="ce">&lt;sales&gt;</code> children have a value less than 5000 (<code class="ce">[round(sales) &amp;lt; 5000]</code>).</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
