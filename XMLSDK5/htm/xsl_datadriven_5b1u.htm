<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Translating from One XML Schema to Another</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmcontranslatingfromonexmlschematoanother"></A>Translating from One XML Schema to Another</H1>

<P>An XSLT style sheet can be applied to translate data from one XML grammar to another. Suppose that you receive stock quotes marked up in the following format:</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;investments&gt;
  &lt;item type="stock" exch="nyse"   symbol="ZCXM" company="zacx corp"
        price="28.875"/&gt;
  &lt;item type="stock" exch="nasdaq" symbol="ZFFX" company="zaffymat inc"
        price="92.250"/&gt;
  &lt;item type="stock" exch="nasdaq" symbol="ZYSZ" company="zysmergy inc"
        price="20.313"/&gt;
&lt;/investments&gt;</PRE>

<P>You want to add this information to your portfolio of the following format.</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;portfolio xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
  &lt;stock exchange="nyse"&gt;
    &lt;name&gt;zacx corp&lt;/name&gt;
    &lt;symbol&gt;ZCXM&lt;/symbol&gt;
    &lt;price dt:dt="number"&gt;28.875&lt;/price&gt;
  &lt;/stock&gt;
  &lt;stock exchange="nasdaq"&gt;
    &lt;name&gt;zaffymat inc&lt;/name&gt;
    &lt;symbol&gt;ZFFX&lt;/symbol&gt;
    &lt;price dt:dt="number"&gt;92.250&lt;/price&gt;
  &lt;/stock&gt;
  &lt;stock exchange="nasdaq"&gt;
    &lt;name&gt;zysmergy inc&lt;/name&gt;
    &lt;symbol&gt;ZYSZ&lt;/symbol&gt;
    &lt;price dt:dt="number"&gt;20.313&lt;/price&gt;
  &lt;/stock&gt;
&lt;/portfolio&gt;</PRE>

<P>This amounts to translating from one XML schema to another. You can use XSLT to transform the <code class="ce">&lt;investments&gt;</code> data into the <code class="ce">&lt;portfolio&gt;</code> grammar. When you do this, your templates will contain output elements such as <code class="ce">&lt;stock&gt;</code>, instead of HTML elements. The following XSLT style sheet is an example.</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;
&lt;xsl:output method="xml" indent="yes"/&gt;
&lt;xsl:template match="/"&gt;
  &lt;portfolio xmlns:dt="urn:schemas-microsoft-com:datatypes"&gt;
    &lt;xsl:for-each select="investments/item[@type='stock']"&gt;
      &lt;stock&gt;
        &lt;xsl:attribute name="exchange"&gt;
            &lt;xsl:value-of select="@exch"/&gt;
        &lt;/xsl:attribute&gt;
        &lt;name&gt;&lt;xsl:value-of select="@company"/&gt;&lt;/name&gt;
        &lt;symbol&gt;&lt;xsl:value-of select="@symbol"/&gt;&lt;/symbol&gt;
        &lt;price dt:dt="number"&gt;&lt;xsl:value-of select="@price"/&gt;&lt;/price&gt;
      &lt;/stock&gt;
    &lt;/xsl:for-each&gt;
  &lt;/portfolio&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P>Notice that in the resulting document, the <code class="ce">&lt;portfolio&gt;</code> element generated by this XSLT also declares a namespace for data types used to scope the <code class="ce">dt</code> attribute in the enclosing <code class="ce">&lt;price&gt;</code> element. The <code class="ce">dt</code> namespace prefix that precedes the <code class="ce">dt</code> attribute (<code class="ce">dt:dt="number"</code>) indicates that the number type is defined in <B>urn:schemas-microsoft-com:datatypes</B>.</P>

<P>The translation can be performed in reverse with a similar style sheet, converting <code class="ce">&lt;portfolio&gt;</code> data to the <code class="ce">&lt;investments&gt;</code> grammar.</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
&lt;xsl:output method="xml" indent="yes"/&gt;
&lt;xsl:template match="/"&gt;
  &lt;investments&gt;
    &lt;xsl:for-each select="portfolio/stock"&gt;
      &lt;item type="stock"&gt;
        &lt;xsl:attribute name="exch"&gt;&lt;xsl:value-of select="@exchange"/&gt;&lt;/xsl:attribute&gt;
        &lt;xsl:attribute name="symbol"&gt;&lt;xsl:value-of select="symbol"/&gt;&lt;/xsl:attribute&gt;
        &lt;xsl:attribute name="company"&gt;&lt;xsl:value-of select="name"/&gt;&lt;/xsl:attribute&gt;
        &lt;xsl:attribute name="price"&gt;&lt;xsl:value-of select="price"/&gt;&lt;/xsl:attribute&gt;
      &lt;/item&gt;
    &lt;/xsl:for-each&gt;
  &lt;/investments&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P>Note that <code class="ce">&lt;xsl:attribute&gt;</code> is used not only to copy an attribute value to a new attribute, but also to convert element content to attribute values.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
