<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>How XSLT Defines the Context for XPath Expressions</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconhowxsltdefinesthecontextforxpathexpressions"></A>How XSLT Defines the Context for XPath Expressions</H1>

<P>At run-time, the XSLT processor associates the templates in an XSLT file with specific source nodes, starting with the template that matches the document root node (<code class="ce">match="/"</code>). When the processor begins to process a template, the source node associated with that template becomes the current node. This current node defines a context node for evaluating the remaining XML Path Language (XPath) expressions within the template.</P>

<P>As the XSLT processor evaluates the XPath expressions within a template, the context node often changes based upon the results of the evaluation.</P>

<P>Having defined the current node, the XSLT processor begins evaluating the XPath expressions within the template.</P>

<P>The following XSLT elements accept XPath expressions as attribute values: <code class="ce">&lt;xsl:value-of&gt;</code>, <code class="ce">&lt;xsl:for-each&gt;</code>, <code class="ce">&lt;xsl:apply-templates&gt;</code>, <code class="ce">&lt;xsl:if&gt;</code>, <code class="ce">&lt;xsl:when&gt;</code>, <code class="ce">&lt;xsl:copy-of&gt;</code>, <code class="ce">&lt;xsl:param&gt;</code>, <code class="ce">&lt;xsl:sort&gt;</code>, <code class="ce">&lt;xsl:variable&gt;</code>, <code class="ce">&lt;xsl:with-param&gt;</code>, and <code class="ce">&lt;xsl:template&gt;</code>. The attribute names define how the context for the query is determined and whether it results in a new context.</P>

<H2 class="dtH2">Context for Select Expressions</H2>

<P>The <code class="ce">&lt;xsl:value-of&gt;</code>, <code class="ce">&lt;xsl:for-each&gt;</code>, <code class="ce">&lt;xsl:copy-of&gt;</code>, <code class="ce">&lt;xsl:param&gt;</code>, <code class="ce">&lt;xsl:sort&gt;</code>, <code class="ce">&lt;xsl:variable&gt;</code>, <code class="ce">&lt;xsl:with-param&gt;</code>, and <code class="ce">&lt;xsl:apply-templates&gt;</code> elements have a <code class="ce">select</code> attribute. This expression is evaluated relative to the template's current node. In <code class="ce">&lt;xsl:for-each&gt;</code> or <code class="ce">&lt;xsl:apply-templates&gt;</code>, the select returns a node-set, and each node in this set becomes the current node for further queries within it.</P>

<P>The following example shows <code class="ce">&lt;xsl:for-each&gt;</code> and <code class="ce">&lt;xsl:value-of&gt;</code> elements are used in a simplified snippet from <B>invoice.xsl</B> (in <A HREF="xpath_concepts4_4juc.htm">Sample XSLT File for DOM Context</A>).</P>

<PRE class="code">&lt;TABLE BORDER="1"&gt;
  &lt;<B>xsl:for-each</B> select="invoices/invoice"&gt;
    &lt;TR&gt;
      &lt;TD&gt;Invoice #&lt;<B>xsl:value-of</B> select="@id"/&gt;&lt;/TD&gt;
    &lt;/TR&gt;
    &lt;<B>xsl:for-each</B> select="items/item"&gt;
      &lt;TR&gt;
        &lt;TD&gt;&lt;<B>xsl:value-of</B> select="qty"/&gt;&lt;/TD&gt;
        &lt;TD&gt;&lt;<B>xsl:value-of</B> select="description"/&gt;&lt;/TD&gt;
        &lt;TD&gt;$&lt;<B>xsl:value-of</B> select="price"/&gt;&lt;/TD&gt;
      &lt;/TR&gt;
    &lt;/xsl:for-each&gt;
  &lt;/xsl:for-each&gt;
&lt;/TABLE&gt;</PRE>

<P>The first <code class="ce">&lt;xsl:for-each&gt;</code> selects a set of <code class="ce">&lt;invoice&gt; </code>elements, each of which becomes the context for the <code class="ce">"items/item"</code> query. Each <code class="ce">&lt;item&gt;</code>, in turn, becomes the context for the various queries in the <code class="ce">&lt;xsl:value-of&gt;</code> elements.</P>

<P>Each node selected by <code class="ce">&lt;xsl:apply-templates&gt;</code> is associated with a template and therefore, becomes the current node for the template.</P>

<P>Because each expression defines a new context, a set of nested queries, such as those in the preceding example, produces a set or "path" of context nodes active at one time.</P>

<H2 class="dtH2">Context for Test Boolean Expressions</H2>

<P>The conditional elements <code class="ce">&lt;xsl:if&gt;</code> and <code class="ce">&lt;xsl:when&gt;</code> do not define a new context for queries within themselves because they do not actually select new nodes. They just test to make sure the nodes are there. In the following example, the <code class="ce">&lt;xsl:for-each select="price"&gt;</code> query is relative to <code class="ce">&lt;item&gt;</code> elements, despite the intervening conditional that tests the <code class="ce">"qty"</code> value:</P>

<PRE class="code">&lt;TABLE&gt;
  &lt;xsl:for-each select="<B>items/item</B>"&gt;
    &lt;TR&gt;
      &lt;TD&gt;
        &lt;xsl:value-of select="qty"/&gt;
      &lt;/TD&gt;
      &lt;TD&gt;
        &lt;xsl:value-of select="description"/&gt;
      &lt;/TD&gt;
      &lt;TD&gt;
        $&lt;xsl:value-of select="price"/&gt;
      &lt;/TD&gt;
      &lt;TD&gt; &lt;!-- 10% volume discount --&gt;
        &lt;<B>xsl:if</B> test="<B>qty</B>[.&gt;=10]"&gt;
          <B>&lt;xsl:for-each select="price"&gt;</B>
            &lt;xsl:value-of select="formatNumber(.*.10, '$#,##0.00')"/&gt;
          &lt;/xsl:for-each&gt;
        <B>&lt;/xsl:if&gt;</B>
      &lt;/TD&gt;
      &lt;TD STYLE="text-align:right"&gt; &lt;!-- line total --&gt;
        &lt;xsl:value-of select="formatNumber(user:lineTotal(.), '$#,##0.00')"/&gt; 
      &lt;/TD&gt;
    &lt;/TR&gt;
  &lt;/xsl:for-each&gt;
&lt;/TABLE&gt;</PRE>

<H2 class="dtH2">Context for Match Patterns</H2>

<P>The <code class="ce">&lt;xsl:template&gt;</code> element has a <code class="ce">match</code> attribute that accepts a pattern for the purposes of matching templates to specific elements; there is no fixed context for a query in this case. For more information, see <A HREF="xsl_datadriven_5ahx.htm">Defining Match Patterns in &lt;xsl:template&gt;</A>.</P>

<P>The preceding code listings are from the Invoice sample. For more information, see <A HREF="xpath_concepts4_85tg.htm">Sample XML File for DOM Context</A>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
