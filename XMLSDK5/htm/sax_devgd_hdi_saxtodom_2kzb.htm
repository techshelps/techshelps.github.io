<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Overview of the SAX to DOM Example</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="sax_saxtodom_overview"></A>Overview of the SAX to DOM Example</H1>

<P>This simple SAX to DOM example uses Microsoft&reg; Visual Basic&reg; code that creates <code class="ce">DOMDocument</code> and <code class="ce">MXXMLWriter</code> objects, sets the <code class="ce">MXXMLWriter</code> object as the <code class="ce">ContentHandler</code>, and then sets the <code class="ce">output</code> property of the <code class="ce">MXXMLWriter</code> object as the <code class="ce">DOMDocument</code> object. The <code class="ce">ContentHandler</code> method calls cause nodes to be built as the root document instance of the provided document. At the end of the procedure, DOM methods are used to return the name of the author, and to display the name in a message box.</P>

<P class="labelproc"><B>To run the code sample</B>

<OL type="1">
	<LI>Open Visual Basic 6.0, and in the <B>New Project</B> dialog box, double-click <B>Standard EXE</B>.</li>

	<LI>In the Visual Basic 6.0 Window, from the <B>Project</B> menu, select <B>References</B>.</li>

	<LI>Under <B>Available References</B>, select <B>Microsoft XML, 5.0</B>, and then click <B>OK</B>.</li>

	<LI>In the Toolbox, click the Button control, and then add a button to the Form1 window. </li>

	<LI>Add the following code to the Command1_Click procedure and then click <B>Start</B> on the toolbar.</li>
</OL>

<H2 class="dtH2">Complete Code for the SAX to DOM Example</H2>

<PRE class="code">Private Sub Command1_Click()
    Dim xmlDoc As New Msxml2.DOMDocument50
    'If using SAX lexical handler, the following line is required.
    xmlDoc.validateOnParse = False

    Dim nodeList As IXMLDOMNodeList
    Dim wrt As New MXXMLWriter50
    Dim cnth As IVBSAXContentHandler
    'If using SAX lexical handler, the following line is required.
    Dim lexh As IVBSAXLexicalHandler
    Dim atrs As New SAXAttributes50
    Dim objNodeList

    Set cnth = wrt
    'If using SAX lexical handler, the following line is required.
    Set lexh = wrt
    wrt.output = xmlDoc

    'Configures the writer to indent elements.
    wrt.indent = True

    'Starts the document.
    cnth.startDocument

    'Adds the XML declaration.
    cnth.processingInstruction "xml", "version='1.0'"

    'Inserts DOCTYPE delcaration for DTD in DOM output.
    lexh.startDTD "catalog", "", "books.dtd"
    lexh.endDTD
    'You can remove or comment out previous two lines if 
    'you are not linking to a DTD.

    'Adds the &lt;catalog&gt; element to the page.
    cnth.startElement "", "", "catalog", atrs

    'Adds the id attribute to the collection witht he "bk0101" value.
    atrs.addAttribute "", "", "id", "CDATA", "bk101"
    'Creates the &lt;book id="bk101"&gt; tag.
    cnth.startElement "", "", "book", atrs
    'Clears the attribute collection.
    atrs.Clear

    'Creates the &lt;author&gt;Gambardella, Matthew&lt;/author&gt; string.
    cnth.startElement "", "", "author", atrs
    cnth.characters "Gambardella, Matthew"
    cnth.endElement "", "", "author"

    'Creates the &lt;title&gt;XML Developer's Guide&lt;/title&gt; string.
    cnth.startElement "", "", "title", atrs
    cnth.characters "XML Developer's Guide"
    cnth.endElement "", "", "title"

    'Creates the &lt;description&gt;An in-depth look at...&lt;/description&gt; string.
    cnth.startElement "", "", "description", atrs
    cnth.characters "An in-depth look at creating applications with XML"
    cnth.endElement "", "", "description"

    'Adds closing tags for &lt;book&gt; and &lt;catalog&gt; elements.
    cnth.endElement "", "", "book"
    cnth.endElement "", "", "catalog"

    'Ends the document.
    cnth.endDocument

    'Displays the author's name in a message box.
    Set objNodeList = xmlDoc.getElementsByTagName("author")
    MsgBox objNodeList.Item(0).Text
End Sub</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_devgd_hdi_saxtodom_2vsk.htm">Setting a DOMDocument Object as MXXMLWriter Output</A> | <A HREF="sax_mxxmlwriter_0m5v.htm">MXXMLWriter CoClass</A> | <A HREF="sax_mxxmlwriter_9hdf.htm">output Property</A> | <A HREF="xml_obj_ixmldomdocument_7gqc.htm">DOMDocument</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
