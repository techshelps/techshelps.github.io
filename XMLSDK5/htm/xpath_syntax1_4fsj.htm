<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Collections</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefcollections"></A>Collections</H1>

<P>Collections returned by XPath queries preserve document order, hierarchy, and identity, to the extent that these are defined. That is, a collection of elements is returned in document order without repeated elements. Because by definition attributes are unordered, there is no implicit order to attributes returned for a specific element.</P>

<P>The collection of all elements with a certain tag name is expressed using the tag name itself. This can be qualified by showing that the elements are selected from the current context by using a period and forward slash (<code class="ce">./</code>), but the current context is used by default and does not have to be noted explicitly.</P>

<H4 class="dtH4">Examples</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Expression</TH>
<TH width=50%>Refers to</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">./first-name</code></TD>
<TD width=50%>All <code class="ce">&lt;first-name&gt;</code> elements. Note that this expression is equivalent to the expression that follows.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">first-name</code></TD>
<TD width=50%>All <code class="ce">&lt;first-name&gt;</code> elements.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H2 class="dtH2">Indexing into a Collection</H2>

<P>XPath expressions make it easy to query a specific node within a set of nodes. Simply enclose the index ordinal within square brackets. The ordinal is 1-based (the first element is number 1).</P>

<P>The square bracket characters (<code class="ce">[]</code>) have higher precedence than the slash characters (<code class="ce">/</code> and <code class="ce">//</code>). For more information see <A HREF="xpath_syntax1_07hv.htm">Operators and Special Characters</A></P>

<H4 class="dtH4">Examples</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Expression</TH>
<TH width=50%>Refers to</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">author[1]</code></TD>
<TD width=50%>The first <code class="ce">&lt;author&gt;</code> element.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">author[first-name][3]</code></TD>
<TD width=50%>The third <code class="ce">&lt;author&gt;</code> element that has a <code class="ce">&lt;first-name&gt;</code> child element.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>Note that indexes are relative to the set being filtered. Consider, for example, the following data.</P>

<PRE class="code">&lt;x&gt;
  &lt;y/&gt;
  &lt;y/&gt;
&lt;/x&gt;
&lt;x&gt;
  &lt;y/&gt;
  &lt;y/&gt;
&lt;/x&gt;</PRE>

<P>The following table shows how to select specific <code class="ce">&lt;x&gt;</code> and <code class="ce">&lt;y&gt;</code> elements.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Expression</TH>
<TH width=50%>Refers to</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">x/y[1]</code></TD>
<TD width=50%>The first <code class="ce">&lt;y&gt;</code> inside each <code class="ce">&lt;x&gt;</code>.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">(x/y)[1]</code></TD>
<TD width=50%>The first <code class="ce">&lt;y&gt;</code> from the entire set of <code class="ce">&lt;y&gt;</code> elements within <code class="ce">&lt;x&gt;</code> elements.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">x[1]/y[1]</code></TD>
<TD width=50%>The first <code class="ce">&lt;y&gt;</code> inside the first <code class="ce">&lt;x&gt;</code>.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<P>The examples above are simple references to XPath collections that use implied defaults, such as the <code class="ce">child::</code> axis. For this axis, the collection of child nodes is indexed in forward document order.</P>

<P>For other axes, such as <code class="ce">ancestor::</code>, use the axis name explicitly in your XPath expression. For this axis, the collection of ancestors is indexed in reverse document order. Consider this example from the previous table:</P>

<PRE class="code">x/y[1]</PRE>

<P>This expression is equivalent to this one:</P>

<PRE class="code">x/child::y[1]</PRE>

<P>Both expressions mean "for each <code class="ce">&lt;x&gt;</code> element, select the first child element named <code class="ce">&lt;y&gt;</code><I>.</I>"</P>

<P>The following example uses the same syntax.</P>

<PRE class="code">x/ancestor::y[1]</PRE>

<P>This example translates to "for each <code class="ce">&lt;x&gt;</code> element, select the first ancestor element (in reverse-document order) named <code class="ce">&lt;y&gt;</code>". The syntax is the same, but the order is reversed.</P>

<H2 class="dtH2">Finding the Last Element in a Collection</H2>

<P>The <A HREF="xpath_functions_4ffy.htm">last()</A> function returns True for the last element in a collection. Note that <code class="ce">last</code> is relative to the parent node.</P>

<H4 class="dtH4">Examples</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Expression</TH>
<TH width=50%>Refers to</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">book[last()]</code></TD>
<TD width=50%>The last <code class="ce">&lt;book&gt;</code> element.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">book/author[last()]</code></TD>
<TD width=50%>The last <code class="ce">&lt;author&gt;</code> element inside each <code class="ce">&lt;book&gt;</code> element.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">(book/author)[last()]</code></TD>
<TD width=50%>The last <code class="ce">&lt;author&gt;</code> element from the entire set of <code class="ce">&lt;author&gt;</code> elements inside <code class="ce">&lt;book&gt;</code> elements.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H2 class="dtH2">Grouping</H2>

<P>Parentheses can be used to group collection operators for clarity or where the normal precedence is inadequate to express an operation. Grouping operators can be used in any filter expressions (predicates), such as <code class="ce">author[(degree or award)</code> <code class="ce">and publication]</code>. They can also be used in the top-level step expression, such as <code class="ce">(book|magazine)</code> or <code class="ce">(author/degree | book/award)</code>. They cannot be applied to lower-level step expressions. For example, <code class="ce">author/(degree | award)</code>is not valid.</P>

<H4 class="dtH4">Examples</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Expression</TH>
<TH width=50%>Refers to</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">(book/author)</code></TD>
<TD width=50%>All <code class="ce">&lt;author&gt;</code> elements that are child elements of any <code class="ce">&lt;book&gt;</code> element from the current context node.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">author[(degree or award) and publication]</code></TD>
<TD width=50%>All <code class="ce">&lt;author&gt;</code> elements that contain at least one <code class="ce">&lt;degree&gt;</code> or <code class="ce">&lt;award&gt;</code> element and at least one <code class="ce">&lt;publication&gt;</code> element.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xpath_syntax2_9wz0.htm">Sample XML File for XPath Syntax (inventory.xml)</A> | <A HREF="xpath_syntax2_3prn.htm">XPath Examples</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
