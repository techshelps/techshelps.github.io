<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>&lt;xsl:copy&gt; Element</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmrefxslcopyelement"></A>&lt;xsl:copy&gt; Element</H1>

<P>Copies the current node from the source to the output.</P>

<PRE class="syntax">&lt;xsl:copy
  use-attribute-sets = <A HREF="xsl_xsltsyntax_0qlv.htm">QNames</A> &gt;
&lt;/xsl:copy&gt;</PRE>

<H4 class="dtH4">Attributes</H4>

<DL>
<DT><B>use-attribute-sets</B></DT>

<DD>A white space separated list of attribute sets, specified as a qualified name. A white space separated list of attribute sets, specified as a qualified name. Specifying this attribute declares each attribute in each listed attribute set.</dd>
</DL>

<H4 class="dtH4">Element Information</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=34%><B>Number of occurrences</B></TD>
<TD width=66%>Unlimited</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Parent elements</B></TD>
<TD width=66%><A HREF="xsl_elm_af_05pw.htm">xsl:attribute</A>, <A HREF="xsl_elm_af_58tw.htm">xsl:comment</A>, xsl:copy, <A HREF="xsl_elm_af_2vhw.htm">xsl:element</A>, <A HREF="xsl_elm_af_7zec.htm">xsl:fallback</A>, <A HREF="xsl_elm_af_2bxw.htm">xsl:for-each</A>, <A HREF="xsl_elm_gp_1z3o.htm">xsl:if</A>, <A HREF="xsl_elm_gp_5xx0.htm">xsl:message</A>, <A HREF="xsl_elm_gp_4agk.htm">xsl:otherwise</A>, <A HREF="xsl_elm_gp_5ek4.htm">xsl:param</A>, <A HREF="xsl_elm_gp_1cdw.htm">xsl:processing-instruction</A>, <A HREF="xsl_elm_qz_120k.htm">xsl:template</A>, <A HREF="xsl_elm_qz_94hg.htm">xsl:variable</A>, <A HREF="xsl_elm_qz_4kj8.htm">xsl:when</A>, <A HREF="xsl_elm_qz_1f5g.htm">xsl:with-param</A>, output elements</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Child elements</B></TD>
<TD width=66%><A HREF="xsl_elm_af_7vqs.htm">xsl:apply-templates</A>, <A HREF="xsl_elm_af_05pw.htm">xsl:attribute</A>, <A HREF="xsl_elm_af_11x0.htm">xsl:call-template</A>, <A HREF="xsl_elm_af_9cz8.htm">xsl:choose</A>, <A HREF="xsl_elm_af_58tw.htm">xsl:comment</A>, xsl:copy, <A HREF="xsl_elm_af_8zxw.htm">xsl:copy-of</A>, <A HREF="xsl_elm_af_2vhw.htm">xsl:element</A>, <A HREF="xsl_elm_af_2bxw.htm">xsl:for-each</A>, <A HREF="xsl_elm_gp_1z3o.htm">xsl:if</A>, <A HREF="xsl_elm_gp_1cdw.htm">xsl:processing-instruction</A>, <A HREF="xsl_elm_qz_5sl0.htm">xsl:text</A>, <A HREF="xsl_elm_qz_3gc4.htm">xsl:value-of</A>, <A HREF="xsl_elm_qz_94hg.htm">xsl:variable</A>, output elements</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Remarks</H4>

<P>The <code class="ce">&lt;xsl:copy&gt;</code> element creates a node in the output with the same name, namespace, and type as the current node. Attributes and children are not copied automatically. This element makes identity transformation possible.</P>

<H4 class="dtH4">Example</H4>

<P>The following example performs an identity transformation on an entire document. The identity transformation copies each node in the source to the output to provide a logically equivalent tree. It does not yield character-by-character equivalence: Entities will be expanded, and white space not marked as significant might be removed.</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>   To test this example, you need to use a script. For more information, see <A HREF="xslt_howdoi_2put.htm">Initiate XSLT in a Script</A>.</BLOCKQUOTE>

<P class="label"><B>XML File (booksshort.xml)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;?xml-stylesheet type="text/xsl" <B>href=</B>"<B>identityxfm.xsl</B>"?&gt;
&lt;catalog&gt;
    &lt;book id="bk101"&gt;
        &lt;author&gt;Gambardella, Matthew&lt;/author&gt;
        &lt;title&gt;XML Developer's Guide&lt;/title&gt;
        &lt;genre&gt;Computer&lt;/genre&gt;
        &lt;price&gt;44.95&lt;/price&gt;
        &lt;publish_date&gt;2000-10-01&lt;/publish_date&gt;        
        &lt;description&gt;An in-depth look at creating applications with
 XML.&lt;/description&gt;
    &lt;/book&gt;
    &lt;book id="bk102"&gt;
        &lt;author&gt;Ralls, Kim&lt;/author&gt;
        &lt;title&gt;Midnight Rain&lt;/title&gt;
        &lt;genre&gt;Fantasy&lt;/genre&gt;
        &lt;price&gt;5.95&lt;/price&gt;
        &lt;publish_date&gt;2000-12-16&lt;/publish_date&gt;
        &lt;description&gt;A former architect battles corporate zombies,
 an evil sorceress, and her own childhood to become queen of the
 world.&lt;/description&gt;
    &lt;/book&gt;
    &lt;book id="bk103"&gt;
        &lt;author&gt;Corets, Eva&lt;/author&gt;
        &lt;title&gt;Maeve Ascendant&lt;/title&gt;
        &lt;genre&gt;Fantasy&lt;/genre&gt;
        &lt;price&gt;5.95&lt;/price&gt;
        &lt;publish_date&gt;2000-11-17&lt;/publish_date&gt;
        &lt;description&gt;After the collapse of a nanotechnology society
 in England, the young survivors lay the foundation for a new 
society.&lt;/description&gt;
    &lt;/book&gt;
&lt;/catalog&gt;</PRE>

<P class="label"><B>XSLT File (identityxfm.xsl)</B></P>

<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform" &gt;

  &lt;xsl:template match="/ | @* | node()"&gt;
    &lt;xsl:copy&gt;
      &lt;xsl:apply-templates select="@* | node()"/&gt;
    &lt;/xsl:copy&gt;
  &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</PRE>

<P class="label"><B>Output</B></P>

<P>This is a portion of the formatted output, truncated on the right side:</P>

<P>Gambardella, MatthewComputer44.952000-10-01An in-depth look<BR>
and her own childhood to become queen of the world.Corets, EvaFa</P>

<P>This is the processor output:</P>

<PRE class="code">&lt;?xml version="1.0"?&gt;&lt;?xml-stylesheet type="text/xsl" 
href="identityxfm.xsl"?&gt;&lt;catalog&gt;&lt;book id="bk101"&gt;&lt;author&gt;Gambardella, 
Matthew&lt;/author&gt;&lt;title&gt;XML Developer's 
Guide&lt;/title&gt;&lt;genre&gt;Computer&lt;/genre&gt;&lt;price&gt;44.95&lt;/price&gt;&lt;publish_date&gt;2000
-10-01&lt;/publish_date&gt;&lt;description&gt;An in-depth look at creating 
applications with
 XML.&lt;/description&gt;&lt;/book&gt;&lt;book id="bk102"&gt;
...
&lt;/book&gt;&lt;/catalog&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_datadriven_6acz.htm">Generating Comments, Processing Instructions, and Elements</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
