<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using XSLT with SAX</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconusingxsltwithsax"></A>Using XSLT with SAX</H1>

<P>With MSXML versions 4.0 and later, you can also use the <code class="ce">output</code> property of the <code class="ce">IXSLProcessor</code> interface to accept objects that implement SAX interfaces. This enables you to fire SAX events from XSLT transformations, and to catch those events in your SAX-based application.</P>

<H4 class="dtH4">Example: Using XSLT with SAX from Script</H4>

<P>This example shows how to use the SAX writer from within a Web script to accept and write the output of an XSLT processor transformation. The transformation is performed on the <A HREF="sdk_booksxml_30rw.htm">Sample XML File (books.xml)</A>.</P>

<P>To complete this example, you must create and use the following two additional files.

<UL type="disc">
	<LI><B>Books.html</B>, an HTML document file used to host and run the sample code. This code will be used in Internet Explorer, inline as client-side script.</li>

	<LI><B>Transform1.xsl</B>, an XSLT style sheet. This style sheet will be used to transform the contents of the sample file (<B>books.xml</B>), and to present it in the browser as HTML.</li>
</UL>

<P><B>Try It!</B>&nbsp;&nbsp;&nbsp;To run this example, copy the HTML and XSLT samples below, and save them under the specified file names. Save the <B>books.xml</B> file in the same folder. Open <B>books.html</B> to view the output.</P>

<P class="label"><B>HTML File (books.html)</B></P>

<PRE class="code">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Test for XSLT output to SAX XML writer application&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;DIV ID="result"&gt;Document is loading...&lt;/DIV&gt;
&lt;SCRIPT&gt;

   //Create the XSLTemplate object (xslt).
   var xslt = new ActiveXObject("Msxml2.XSLTemplate.5.0");

   //Create and load the stylesheet (transform1.xsl) as a DOMDocument.
   var xslDoc = new ActiveXObject("Msxml2.FreeThreadedDOMDocument.5.0");
   var xslProc;
   xslDoc.async = false;
   xslDoc.load("transform1.xsl");

   //Connect the XSLTemplate object to stylesheet DOMDocument.
   xslt.stylesheet = xslDoc;

   //Create XSLT processor using stylesheet for XSL template.
   xslProc = xslt.createProcessor();

   //Create and load sample XML file (books.xml) as a DOMDocument.
   var xmlDoc = new ActiveXObject("Msxml2.DOMDocument.5.0");
   xmlDoc.async = false;
   xmlDoc.load("books.xml");

   //Create SAX writer.
   var xmlWriter = new ActiveXObject("Msxml2.MXXMLWriter.5.0");

   //Assign XML sample file as input of the transform() method.
   xslProc.input = xmlDoc;

   //Use a SAX writer as the output of the transform() method.
   xslProc.output = xmlWriter;

   //Do transformation on the sample XML file.
   xslProc.transform();

   //Use SAX writer ouptut to generate inner HTML for page.
   result.innerHTML = xmlWriter.output;

&lt;/SCRIPT&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>

<P class="label"><B>XML stylesheet File (transform1.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
&lt;xsl:output method="xml" indent="yes"/&gt;
&lt;xsl:template match="catalog"&gt;
&lt;HTML&gt;
 &lt;HEAD&gt;
   &lt;TITLE&gt;Books catalog - listing for Books.xml&lt;/TITLE&gt;
 &lt;/HEAD&gt;
 &lt;BODY&gt;&lt;FONT FACE="Verdana"&gt;
 &lt;H3&gt;My Books Catalog&lt;/H3&gt;
 &lt;TABLE CELLPADDING="5" CELLSPACING="2"&gt;
   &lt;xsl:for-each select="book"&gt;
   &lt;TR&gt;
      &lt;TD ALIGN="LEFT"&gt;&lt;FONT SIZE="2"&gt;&lt;B&gt;ID:&lt;/B&gt;&amp;#160;&amp;#160;&lt;xsl:value-of select="@id"/&gt;&lt;BR/&gt;
      &lt;B&gt;Author:&lt;/B&gt;&amp;#160;&amp;#160;&lt;xsl:value-of select="author"/&gt;&lt;BR/&gt;
      &lt;B&gt;Title:&lt;/B&gt;&amp;#160;&amp;#160;&lt;xsl:value-of select="title"/&gt;&lt;BR/&gt;
      &lt;B&gt;Genre:&lt;/B&gt;&amp;#160;&amp;#160;&lt;xsl:value-of select="genre"/&gt;&lt;BR/&gt;
      &lt;B&gt;Price:&lt;/B&gt;&amp;#160;&amp;#160;&lt;xsl:value-of select="price"/&gt;&lt;BR/&gt;
      &lt;B&gt;Published on:&lt;/B&gt;&amp;#160;&amp;#160;&lt;xsl:value-of select="publish_date"/&gt;&lt;BR/&gt;
      &lt;B&gt;Description:&lt;/B&gt;&amp;#160;&amp;#160;&lt;xsl:value-of select="description"/&gt;&lt;/FONT&gt;&lt;/TD&gt;
   &lt;/TR&gt;
   &lt;/xsl:for-each&gt;
&lt;/TABLE&gt;
&lt;/FONT&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_domprocess_9ctw.htm">Increasing Performance by Using the XSLTemplate Object</A> | <A HREF="xml_pro_no_66k4.htm">output Property (IXSLProcessor)</A> | <A HREF="sax_starter_6igk.htm">JumpStart for Creating a SAX2 Application</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
