<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using XSLT with the DOM from an HTML Page</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconexampleofxsltanddom"></A>Using XSLT with the DOM from an HTML Page</H1>

<P>The <B>qsalesregion.html</B> file (below) uses XSLT with the DOM, from a script in an HTML page. The most important part of the example code is the Jscript function, <code class="ce">transformIt()</code>. This function loads a source document, <B>region.xml</B>, and a style sheet, <B>region.xsl</B>, into two DOM instances. The XML document is loaded into <code class="ce">objSrcTree</code>, and the XSLT document is loaded into <code class="ce">objXSLT</code>. To ensure that MSXML 5.0 is used in this application, the code specifies the version dependent ProgID, <code class="ce">MSXML2.DOMDocument.5.0</code>. The XSLT transformation occurs when the <code class="ce">objSrcTree.transformNode(objXSLT)</code> method is invoked. The result document is displayed within a <code class="ce">&lt;DIV id="transformedXML"&gt;</code> HTML tag.</P>

<P>The <code class="ce">transformIt()</code> function is called when the HTML page is first loaded as specified by the <code class="ce">&lt;BODY onload="transformIt()"&gt;</code> HTML tag. </P>

<P>The three files used in this example &#0151; <B>qsalesregion.html</B>, <B>region.xml</B>, and <B>region.xsl</B> &#0151; are listed below.</P>

<H4 class="dtH4">Example</H4>

<P class="label"><B>HTML File (qsalesregion.html)</B></P>

<PRE class="code">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Quarterly Sales, by Region&lt;/TITLE&gt;
&lt;SCRIPT language='JScript'&gt;
&lt;!--
function transformIt() {
    // Associate the result tree object with any element(s) whose
    // id attribute is "transformedXML."
<code><b class="cfe">    var objResTree = document.all['transformedXML'];</b></code>
    // Declare two new MSXML DOMDocument objects.
<code><b class="cfe">    var objSrcTree = new ActiveXObject('MSXML2.DOMDocument.5.0');</b></code>
<code><b class="cfe">    var objXSLT = new ActiveXObject('MSXML2.DOMDocument.5.0');</b></code>
    // Load the two DOMDocuments with the XML document and the
    // XSLT style sheet.
<code><b class="cfe">    objSrcTree.load('region.xml');</b></code>
<code><b class="cfe">    objXSLT.load('region.xsl');</b></code>
    // Use the transformNode method to apply the XSLT to the XML.
<code><b class="cfe">    strResult = objSrcTree.transformNode(objXSLT);</b></code>
    // Assign the resulting string to the result tree object's
    // innerHTML property.
<code><b class="cfe">    objResTree.innerHTML = strResult;</b></code>
    return true;
    }
--&gt;
&lt;/SCRIPT&gt;
&lt;BODY <code><b class="cfe">onload='transformIt()'</b></code>&gt;
&lt;DIV <code><b class="cfe">id='transformedXML'</b></code>&gt;&lt;/DIV&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>

<P class="label"><B>XML File (region.xml)</B></P>

<P>Note that this document contains no <code class="ce">&lt;?xml-stylesheet?&gt;</code> processing instruction.</P>

<PRE class="code">&lt;?xml version="1.0" ?&gt;
&lt;region year="1999"&gt;
&lt;name&gt;Western Region&lt;/name&gt;
&lt;quarter number="1" books_sold="24000"/&gt;
&lt;quarter number="2" books_sold="38600"/&gt;
&lt;/region&gt;</PRE>

<P class="label"><B>XSLT File (region.xsl)</B></P>

<PRE class="code">&lt;xsl:stylesheet version="1.0"
     xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

   &lt;!-- Template rule for region element(s): --&gt;
   &lt;xsl:template match="region"&gt;
      &lt;H1&gt;&lt;xsl:value-of select="@year"/&gt; Results:&lt;/H1&gt;
      &lt;xsl:apply-templates/&gt;
   &lt;/xsl:template&gt;

   &lt;!-- Template rule for name element(s): --&gt;
   &lt;xsl:template match="name"&gt;
          &lt;!-- Instantiate a level-2 heading --&gt;
      &lt;H2&gt;&lt;xsl:value-of select="."/&gt;&lt;/H2&gt;
      &lt;!-- Instantiate a table with heading cells. --&gt;
      &lt;TABLE&gt;
         &lt;TR&gt;
            &lt;TH align="left"&gt;Quarter&lt;/TH&gt;
            &lt;TH align="right"&gt;Qty&lt;/TH&gt;
         &lt;/TR&gt;
         &lt;!-- For each &lt;quarter&gt; sibling of the &lt;name&gt; element,
              instantiate a table row and two cells. Data in the cells
              will be the values of the &lt;quarter&gt; element's number and
              books_sold attributes. --&gt;
         &lt;xsl:for-each select="../quarter"&gt;
            &lt;TR&gt;
               &lt;TD align="left"&gt;&lt;xsl:value-of select="@number"/&gt;&lt;/TD&gt;
               &lt;TD align="right"&gt;&lt;xsl:value-of select="@books_sold"/&gt;&lt;/TD&gt;
            &lt;/TR&gt;
         &lt;/xsl:for-each&gt;
      &lt;/TABLE&gt;
   &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<P class="label"><B>Formatted Output</B></P>

<P class="fig"><IMG SRC="xsltqsalesregion.gif" ALT="" BORDER=0></P>

<P class="label"><B>HTML Output File with Result Tree from the DOM</B></P>

<P>After the transformation, Internet Explorer would display the document with the contents of <B>region.xml</B>, as if its HTML code were as follows. Generated HTML is in bold.</P>

<PRE class="code">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Quarterly Sales, by Region&lt;/TITLE&gt;
&lt;BODY&gt;
&lt;DIV&gt;
&lt;H1&gt;1999 Results&lt;/H1&gt;
<code><b class="cfe">&lt;H2&gt;Western Region&lt;/H2&gt;</b></code>
<code><b class="cfe">&lt;TABLE&gt;</b></code>
<code><b class="cfe">&lt;TR&gt;</b></code>
<code><b class="cfe">    &lt;TH align="left"&gt;Quarter&lt;/TH&gt;</b></code>
<code><b class="cfe">    &lt;TH align="right"&gt;Qty&lt;/TH&gt;</b></code>
<code><b class="cfe">&lt;/TR&gt;</b></code>
<code><b class="cfe">&lt;TR&gt;</b></code>
<code><b class="cfe">    &lt;TD align="left"&gt;1&lt;/TD&gt;</b></code>
<code><b class="cfe">    &lt;TD align="right"&gt;24000&lt;/TD&gt;</b></code>
<code><b class="cfe">&lt;/TR&gt;</b></code>
<code><b class="cfe">&lt;TR&gt;</b></code>
<code><b class="cfe">    &lt;TD align="left"&gt;2&lt;/TD&gt;</b></code>
<code><b class="cfe">    &lt;TD align="right"&gt;38600&lt;/TD&gt;</b></code>
<code><b class="cfe">&lt;/TR&gt;</b></code>
<code><b class="cfe">&lt;/TABLE&gt;</b></code>
&lt;/DIV&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xsl_domprocess_1ctp.htm">Implementing Error Handling with XSLT and DOM</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
