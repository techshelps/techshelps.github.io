<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>MXXMLWriter CoClass</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="mxxmlwriter_coclass"></A>MXXMLWriter CoClass</H1>

<P><code class="ce">MXXMLWriter</code> generates XML output that can be:

<UL type="disc">
	<LI>Any implementation of the <code class="ce">IStream</code> interface. (The resulting document will be written into the provided <code class="ce">IStream</code>.)</li>

	<LI>A string.</li>

	<LI>A <code class="ce">DOMDocument</code> object. For more information about setting the <code class="ce">output</code> property to a <code class="ce">DOMDocument</code> object, see <A HREF="sax_devgd_hdi_saxtodom_6q2c.htm">Create a DOMDocument Object from SAX Events</A>
<P>When connected to <code class="ce">SAXXMLReader</code>, and set as a <code class="ce">ContentHandler</code>, <code class="ce">MXXMLWriter</code> accumulates XML content passed by events thrown by the reader. This content is stored in the <code class="ce">MXXMLWriter</code>'s output buffer. The <code class="ce">MXXMLWriter</code> CoClass implements the <code class="ce">IMXWriter</code> interface.
</li>
</UL>

<P>For MSXML 5.0, the version-dependent CoClass is <code class="ce">MXMLWriter50</code>, which uses the following programming class ID information:</P>

<BLOCKQUOTE class="dtBlock">
(CLSID_MXXMLWriter50: 8d969c8-f192-11d4-a65f-0040963251e5)</BLOCKQUOTE>

<P>In addition to generating XML, <code class="ce">MXXMLWriter</code> also handles the details of collecting data produced by SAX events. For example, rather than concatenating strings within each method call of the <code class="ce">ContentHandler</code>, and dealing with issues such as the manual insertion of opening and closing brackets for <code class="ce">startElement</code> and <code class="ce">EndElement</code> events respectively, you can set <code class="ce">MXXMLWriter</code> to the <code class="ce">IVBSAXContentHandler</code>\<code class="ce">ISAXContentHandler</code> interface, and then make method calls on the <code class="ce">ContentHandler</code> to push data to <code class="ce">MXXMLWriter</code>. <code class="ce">MXXMLWriter</code> then writes opening brackets for the <code class="ce">startElement</code> event and closing brackets for the <code class="ce">endElement</code> event.</P>

<P>Results generated by <code class="ce">MXXMLWriter</code> are exposed through the <code class="ce">MXXMLWriter.output</code> property. <code class="ce">MXXMLWriter</code> provides several properties that enable you to modify output collected by <code class="ce">MXXMLWriter</code>. For example, to create an XML document fragment, set the <code class="ce">MXXMLWriter.omitXMLDeclaration</code> to True. In a similar way, you can set the <code class="ce">MXXMLWriter.indent</code> to True to enable "pretty printing." </P>

<P>To enable <code class="ce">MXXMLWriter</code> to catch handler events passed by <code class="ce">SAXXMLReader</code>, you set <code class="ce">MXXMLWriter</code> as the <code class="ce">ContentHandler</code>, and optionally as any of the other handlers. For more information about how to register <code class="ce">MXXMLWriter</code> as a handler, see <A HREF="sax_devgd_hdi_usemxxmlwriter_00of.htm">Use MXXMLWriter</A>.</P>

<P>The following table shows the handler interfaces implemented by <code class="ce">MXXMLWriter</code>.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Visual Basic Interfaces</TH>
<TH width=50%>C++ Interfaces</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_contenthandler_7nad.htm">IVBSAXContentHandler</A></TD>
<TD width=50%><A HREF="sax_contenthandler_7nad.htm">ISAXContentHandler</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_declhandler_24v9.htm">IVBSAXDeclHandler</A></TD>
<TD width=50%><A HREF="sax_declhandler_24v9.htm">ISAXDeclHandler</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_dtdhandler_3qjp.htm">IVBSAXDTDHandler</A></TD>
<TD width=50%><A HREF="sax_dtdhandler_3qjp.htm">ISAXDTDHandler</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_isaxerrorhandler_2syt.htm">IVBSAXErrorHandler</A></TD>
<TD width=50%><A HREF="sax_isaxerrorhandler_2syt.htm">ISAXErrorHandler</A></TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="sax_isaxlexicalhandler_86xx.htm">IVBSAXLexicalHandler</A></TD>
<TD width=50%><A HREF="sax_isaxlexicalhandler_86xx.htm">ISAXLexicalHandler</A></TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Properties</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_7g6r.htm">byteOrderMark</A></TD>
<TD width=70%>Determines whether to write the Byte Order Mark (BOM).</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_0htf.htm">disableOutputEscaping</A></TD>
<TD width=70%>Turns <code class="ce">disableOutputEscaping</code> on or off. When <code class="ce">disableOutputEscaping</code> is set to True, special symbols such as "&amp;" are passed through literally.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_6to3.htm">encoding</A></TD>
<TD width=70%>Sets and gets encoding for the output.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_9j1v.htm">indent</A></TD>
<TD width=70%>Sets whether to indent output. Useful for "pretty printing." </TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_0fub.htm">omitXMLDeclaration</A></TD>
<TD width=70%>Forces the <code class="ce">MXXMLWriter</code> to omit the XML declaration. Useful for creating document fragments.</TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_9hdf.htm">output</A></TD>
<TD width=70%>Determines the destination and the type of output for <code class="ce">MXXMLWriter</code>. Output can be stream, string, or DOM. </TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_525v.htm">standalone</A></TD>
<TD width=70%>Sets the value of the <code class="ce">standalone</code> attribute in the XML declaration to "yes" or "no". </TD>
</TR>

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_2jsj.htm">version</A></TD>
<TD width=70%>Specifies the version to include in XML declaration.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Methods</H4>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TD width=30%><A HREF="sax_mxxmlwriter_550z.htm">flush</A></TD>
<TD width=70%>Flushes the object's internal buffer to its destination IStream/string.</TD>
</TR>
</table></div>

<P class="fineprint"></P>

<H4 class="dtH4">Requirements</H4>
<div class=filtered><span class="lang">[Visual Basic]</span>

<P><B>Implementation:</B> msxml5.dll, msxml2.lib</P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<P><B>Header and LIB files:</B> msxml2.h, msxml2.lib</P>
</div><!-- [C/C++] -->

<P>To view reference material for Visual Basic or C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
