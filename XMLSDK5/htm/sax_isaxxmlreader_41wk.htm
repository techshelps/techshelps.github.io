<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>putProperty Method</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin="0" id="bodyID" class = "dtBODY">
<object id="obj_cook" classid="clsid:59CC0C20-679B-11D2-88BD-0800361A1803" style="display:none;"></object>

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - SAX2 Reference</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="putproperty_method"></A>putProperty Method</H1>

<P>Sets the value of a property. The property name is any qualified Uniform Resource Identifier (URI).</P>
<div class=filtered><span class="lang">[Visual Basic]</span>

<H4 class="dtH4">Usage Syntax</H4>

<PRE class="syntax">oSAXXMLReader.putProperty(strName, varValue)</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>strName</I></DT>

<DD>The property's name.</dd>

<DT><I>varValue</I></DT>

<DD>The corresponding data type of the property.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<P>The following table shows the return values for the <code class="ce">putProperty</code> method.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Property</TH>
<TH width=50%>Returns</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">charset</code><BR>
<code class="ce">schema-declaration-handler</code></TD>
<TD width=50%>Sets property</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">declaration-handler</code><BR>
<code class="ce">lexical-handler</code><BR>
<code class="ce">schemas</code></TD>
<TD width=50%>Trappable error (if unable to set property).</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">dom-node<BR>
xmldecl-encoding</code><BR>
<code class="ce">xmldecl-version</code><BR>
<code class="ce">xmldecl-standalone<BR>
xml-string</code></TD>
<TD width=50%>Trappable error.</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Other properties</TD>
<TD width=50%>Trappable error</TD>
</TR>
</table></div>

<P class="fineprint"></P>
</div><!-- [Visual Basic] -->
<div class=filtered><span class="lang">[C/C++]</span>

<P>Although a core set of properties is defined, a reader is not required to recognize any specific property names. Some property values may be available only in a specific context, such as before, during, or after a parse.</P>

<H4 class="dtH4">Syntax</H4>

<PRE class="syntax">HRESULT putProperty(
   [in] const wchar_t * pwchName,
 [in] VARIANT varValue);</PRE>

<H4 class="dtH4">Parameters</H4>

<DL>
<DT><I>pwchName</I> [in]</DT>

<DD>The property's name (zero-terminated Unicode string).</dd>

<DT><I>varValue</I> [in]</DT>

<DD>The corresponding data type of the property.</dd>
</DL>

<H4 class="dtH4">Return Values</H4>

<P>The following table lists the return values for the <code class="ce">putProperty</code> method.</P>

<P class="fineprint"></P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>Property</TH>
<TH width=50%>Returns</TH>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">charset</code><BR>
<code class="ce">schema-declaration-handler</code></TD>
<TD width=50%>S_OK (regardless of parsing mode)</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">declaration-handler</code><BR>
<code class="ce">lexical-handler</code><BR>
<code class="ce">schemas</code></TD>
<TD width=50%>S_OK (not parsing)
<P>E_FAIL (parsing)</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><code class="ce">dom-node<BR>
xmldecl-encoding</code><BR>
<code class="ce">xmldecl-version</code><BR>
<code class="ce">xmldecl-standalone<BR>
xml-string</code></TD>
<TD width=50%>E_FAIL</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Other properties</TD>
<TD width=50%>E_INVALIDARG</TD>
</TR>
</table></div>

<P class="fineprint"></P>
</div><!-- [C/C++] -->

<H4 class="dtH4">Remarks</H4>

<P>The <code class="ce">ISAXXMLReader</code> interface recognizes the following properties:</P>

<PRE class="code">"http://xml.org/sax/properties/lexical-handler"</PRE>

<BLOCKQUOTE class="dtBlock">
This is an optional extension handler for lexical events, like comments.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;ISAXXMLLexicalHandler.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;Read/write.</BLOCKQUOTE>

<PRE class="code">"http://xml.org/sax/properties/declaration-handler"</PRE>

<BLOCKQUOTE class="dtBlock">
This is an optional extension handler for declaration events.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;ISAXXMLDeclHandler</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;Read/write.</BLOCKQUOTE>

<PRE class="code">"charset"</PRE>

<BLOCKQUOTE class="dtBlock">
Externally defined encoding to use with an XML document. An example is the one used in the MIME-header. This setting takes priority over the default encoding, which is implicitly UTF-16, or over the encoding specified in the byte order mark (BOM) of the XML document header.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
This property only affects documents that are parsed using the <A HREF="sax_isaxxmlreader_4zvo.htm">parse</A> method. For any documents that are parsed using the <A HREF="sax_isaxxmlreader_4dyc.htm">parseURL</A> method, this property is ignored. This property can be set at any time, but it only affects documents that are opened after it is set. For example, if it is set in the <A HREF="sax_entityresolver_6qw4.htm">resolveEntity</A> method (which is available when you implement a SAX entity resolver), it affects the external entity to be opened, but does not affect the main document, which is currently being parsed.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;BSTR* (The string value must be a recognized description of a character set that is valid for use with XML. For example, "US-ASCII", "UTF-8", etc.)</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Default&nbsp;&#0151;&nbsp;Empty (uses either the BOM in XML header or the default encoding)</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;Read/write.</BLOCKQUOTE>

<PRE class="code">"http://xml.org/sax/properties/dom-node"</PRE>

<BLOCKQUOTE class="dtBlock">
Source DOM node for current SAX event. Only available when using <code class="ce">parse</code> method and SAX events are generated from an <code class="ce">IXMLDOMNode</code> object. Not available when using <code class="ce">parseURL</code> method for SAX parsing of a file.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;IXMLDOMNode.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;Read-only.</BLOCKQUOTE>

<PRE class="code">"http://xml.org/sax/properties/xml-string"</PRE>

<BLOCKQUOTE class="dtBlock">
The literal string of characters in the XML source for the current SAX event.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;String (Visual Basic) / w_chart* (C/C++)</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;Read-only.</BLOCKQUOTE>

<PRE class="code"><b class="le"><CODE>"schemas"</CODE></b></PRE>

<BLOCKQUOTE class="dtBlock">
An option for registering a schema with the SAX reader.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;XMLSchemaCache.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read-only; (not parsing) Read/Write.</BLOCKQUOTE>

<PRE class="code"><b class="le"><CODE>"schema-declaration-handler"</CODE></b></PRE>

<BLOCKQUOTE class="dtBlock">
An option for registering a schema-based declaration handler with the SAX reader.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;Event handler that implements the <code class="ce">IMXSchemaDeclHandler</code> interface.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;Read/write.</BLOCKQUOTE>

<PRE class="code"><b class="le"><CODE>"xmldecl-encoding"</CODE></b></PRE>

<BLOCKQUOTE class="dtBlock">
Encoding declared in the XML header of the currently parsed document. This data is unavailable until the reader parses the XML header.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;BSTR.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Default&nbsp;&#0151;&nbsp;Empty (if there is no XML declaration or a property is not found).</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read; (not parsing) None.</BLOCKQUOTE>

<PRE class="code">"xmldecl-version"</PRE>

<BLOCKQUOTE class="dtBlock">
Version declared in the XML header of currently parsed document. This data is unavailable until the reader parses the XML header.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;BSTR.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Default&nbsp;&#0151;&nbsp;Empty (if there is no XML declaration).</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read; (not parsing) None.</BLOCKQUOTE>

<PRE class="code">"xmldecl-standalone"</PRE>

<BLOCKQUOTE class="dtBlock">
Declared in the XML header of currently parsed document. This data is unavailable until the reader parses the XML header.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Datatype&nbsp;&#0151;&nbsp;BSTR ("yes" or "no").</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Default&nbsp;&#0151;&nbsp;Empty (if there is no XML declaration or if a property is not found).</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
Access&nbsp;&#0151;&nbsp;(parsing) Read; (not parsing) None.</BLOCKQUOTE>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;The <code class="ce">"xmldecl-encoding"</code>, <code class="ce">"xmldecl-version"</code>, and <code class="ce">"xmldecl-standalone"</code> properties provide information about the presence and content of the XML header. However, XML header information was designed for low-level reader and parser use, not for applications.</BLOCKQUOTE>

<P>To view reference information for Visual Basic or C/C++ only, click the Language Filter button <IMG SRC="filter.gif" ALT="Language Filter" BORDER=0> in the upper-left corner of the page.</P>

<H4 class="dtH4">See Also</H4>

<P><A HREF="sax_isaxxmlreader_5604.htm">getProperty Method</A></P>

<P>Applies to: <A HREF="sax_isaxxmlreader_6nmt.htm">ISAXXMLReader Interface</A></P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
