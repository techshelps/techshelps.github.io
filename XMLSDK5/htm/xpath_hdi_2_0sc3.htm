<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Using Abbreviations in XPath Expressions</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XPath Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xmconusingabbreviationsinxpathexpressions"></A>Using Abbreviations in XPath Expressions</H1>

<P>Several shortcuts are available to be used in place of certain axes:

<UL type="disc">
	<LI>The default axis if none is provided in a given location step is <code class="ce">child::</code>. Therefore, the following two location steps are equivalent, both locate a <code class="ce">&lt;name&gt;</code> child of the context node:
<PRE class="code">child::name
name</PRE>
</li>

	<LI>The "at" sign, @, is a shortcut for the <code class="ce">attribute::</code> axis. Therefore, the following two location steps are equivalent, both locate the <code class="ce">empdate</code> attribute of a <code class="ce">&lt;director&gt;</code> child of the context node:
<PRE class="code">director/attribute::empdate
ddirector/@empdate</PRE>
</li>

	<LI>Two succeeding slashes, //, is a shortcut for <code class="ce">/descendant-or-self::node()/</code>.Therefore, the following two location steps are equivalent, locating both the node whose name is "name" and whose string-value is "Kim Akers," and all its descendants, except attribute and namespace nodes:
<PRE class="code">name[.="Kim Akers"]/descendant-or-self::node()/name
name[.="Kim Akers"]//name</PRE>
</li>

	<LI>A single period, ., is a shortcut for <code class="ce">self::node()</code>. Therefore, the following two location steps, which locate an attribute of the context node, are equivalent:
<PRE class="code">self::node()/attribute::empdate
./attribute::empdate</PRE>

<P>This XPath location step can be further abbreviated using the shortcut for the <code class="ce">attribute::</code> axis, for example:

<PRE class="code">./@empdate</PRE>
</li>

	<LI>Two succeeding periods, , are a shortcut for <code class="ce">parent::node()</code>. Therefore, the following two location steps are equivalent, both select the parent of the context node, when the parent's value is "Josh Barnett":
<PRE class="code">parent::node()[self::node()="Josh Barnett"]
..[self::node()="Josh Barnett"]</PRE>

<P>This location step could be abbreviated even further, using the shortcut for <code class="ce">self::node()</code>, as follows:

<PRE class="code">..[.="Josh Barnett"]</PRE>
</li>

	<LI>The asterisk (*) is a wild-card character, used in a name node test to indicate that selected nodes may have any names at all. Therefore, given that various elements in <B>orgchart.xml</B> have the same two attributes, <code class="ce">empID</code> and <code class="ce">empdate</code>, the following two location steps are equivalent, assuming the context node to be one of these elements:
<PRE class="code">attribute::empID | attribute::empdate
attribute::*</PRE>

<P>This location step could be abbreviated even further, using the shortcut for the <code class="ce">attribute::</code> axis, as follows:

<PRE class="code">@*</PRE>
</li>

	<LI>While not really a shortcut, a single leading slash, representing the document root in an XPath expression always makes it an absolute path, relative to the document root. Therefore, the following location steps are not equivalent:
<PRE class="code">name
/name</PRE>
</li>
</UL>

<P>The first selects all <code class="ce">&lt;name&gt;</code> elements which are children of the context node; the second, all <code class="ce">&lt;name&gt;</code> elements which are children of the root node, that is, it selects an empty node-set, since the root node's only child is the <code class="ce">&lt;chairman&gt;</code> element.</P>

<H4 class="dtH4">Example</H4>

<P>This example doesn't generate significant output. It demonstrates that no errors are generated by the above XPath expressions.</P>

<P class="label"><B>XML File (booksxpath.xml)</B></P>

<P>Use the <B>orgchart.xml</B> (in <A HREF="xpath_hdi_2_4ldf.htm">Sample XML File for Navigating XPath Axes</A>) and change its <code class="ce">href</code> attribute to point to <B>xpabbr.xsl</B>.</P>

<P class="label"><B>XSLT File (xpabbr.xsl)</B></P>

<PRE class="code">&lt;?xml version='1.0'?&gt;
&lt;xsl:stylesheet version="1.0"
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
&lt;!-- suppress text nodes not covered in subsequent template rule --&gt;
&lt;xsl:template match="text()"/&gt;

&lt;xsl:template match="president"&gt;
   &lt;p/&gt;child::name -- 
      &lt;xsl:value-of select='child::name'/&gt;
   &lt;p/&gt;name -- 
      &lt;xsl:value-of select='name'/&gt;
   &lt;p/&gt;director/attribute::empdate -- 
      &lt;xsl:value-of select='director/attribute::empdate'/&gt;
   &lt;p/&gt;ddirector/@empdate -- 
      &lt;xsl:value-of select='ddirector/@empdate'/&gt;
   &lt;p/&gt;name[.="Kim Akers"]/descendant-or-self::node()/name -- 
      &lt;xsl:value-of select='name[.="Kim Akers"]/descendant-or-self::node()/name'/&gt;
   &lt;p/&gt;name[.="Kim Akers"]//name -- 
      &lt;xsl:value-of select='name[.="Kim Akers"]//name'/&gt;
   &lt;p/&gt;self::node()/attribute::empdate -- 
      &lt;xsl:value-of select='self::node()/attribute::empdate'/&gt;
   &lt;p/&gt;./attribute::empdate -- 
      &lt;xsl:value-of select='./attribute::empdate'/&gt;
   &lt;p/&gt;./@empdate -- 
      &lt;xsl:value-of select='./@empdate'/&gt;
   &lt;p/&gt;parent::node()[self::node()="Josh Barnett"] -- 
      &lt;xsl:value-of select='parent::node()[self::node()="Josh Barnett"]'/&gt;
   &lt;p/&gt;..[self::node()="Josh Barnett"] -- 
      &lt;xsl:value-of select='..[self::node()="Josh Barnett"]'/&gt;
   &lt;p/&gt;..[.="Josh Barnett"] -- 
      &lt;xsl:value-of select='..[.="Josh Barnett"]'/&gt;
   &lt;p/&gt;attribute::empID | attribute::empdate -- 
      &lt;xsl:value-of select='attribute::empID | attribute::empdate'/&gt;
   &lt;p/&gt;attribute::* -- 
      &lt;xsl:value-of select='attribute::*'/&gt;
   &lt;p/&gt;@* -- 
      &lt;xsl:value-of select='@*'/&gt;
   &lt;p/&gt;name -- 
      &lt;xsl:value-of select='name'/&gt;
   &lt;p/&gt;/name -- 
      &lt;xsl:value-of select='/name'/&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</PRE>

<H4 class="dtH4">See Also</H4>

<P><A HREF="xpath_hdi_2_4ldf.htm">Sample XML File for Navigating XPath Axes</A> </P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
