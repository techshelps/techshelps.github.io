<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Control the Flow of Transformation</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xslt_hdi_control_flow"></A>Control the Flow of Transformation</H1>

<P>Flow control allows your program, or transformation, to handle different tasks based on different conditions. To implement flow control in XSLT, you use <code class="ce">xsl:if</code> or <code class="ce">xsl:choose</code>. The analogous statements in Visual Basic are <code class="ce">If ...Then ... End If</code> and <code class="ce">IF ... Then ... Else ... End If</code>. The analogous statements in C/C++ and JScript are <code class="ce">if (?) {...}</code> and <code class="ce">if (?) { ... } else { ... }</code>.</P>

<P>In this exercise, you will define a quarterly sales goal. You will then add an <code class="ce">&lt;xsl:choose&gt;</code> conditional statement to determine whether a region meets this goal for a specified quarter. When a region meets its goal for a quarter, the sales figure will be displayed in green. Otherwise, the sales figure will be displayed in red. To accomplish this, you will add a <code class="ce">style</code> attribute to the <code class="ce">&lt;td&gt;</code> HTML tag. This attribute will be set to <code class="ce">green</code> if the sales goal is met, and set to <code class="ce">red</code> if it is not.</P>

<P class="labelproc"><B>To add conditional statements</B>

<OL type="1">
	<LI>In your HTML or text editor, open <B>Transform.xsl</B> and locate the following line:
<PRE class="code"><code class="ce">&lt;xsl:output method="html"/&gt;</code></PRE>
</li>

	<LI>Immediately below this line, add the following code:
<PRE class="code">&lt;xsl:<B>param</B> name="<B>low_sales</B>" select="<B>21000</B>"/&gt;</PRE>

<P>This creates a parameter variable named <code class="ce">low_sales</code>, which represents the sales goal, and assigns it the value of 21000. To reference this parameter, use <code class="ce">$low_sales</code> in any ensuing XPath expressions. Now, you can insert the parameter variable <code class="ce">low_sales</code> whenever you want to refer to the sales goal. Setting a variable enables you to change the value of the variable in one place and update its value consistently throughout the file.
</li>

	<LI>Find and select the following code:
<PRE class="code">&lt;td style="text-align:right"&gt;
   &lt;xsl:value-of select="format-number(@books_sold,'###,###')"/&gt;
&lt;/td&gt;</PRE>
</li>

	<LI>Replace it with the following code:
<PRE class="code">&lt;td&gt;
   &lt;xsl:attribute name="<B>style</B>"&gt;
      <B>&lt;xsl:choose&gt;</B>
         <B>&lt;xsl:when</B> test="number(@<B>books_sold</B> <B>&amp;lt;=</B> $<B>low_sales</B>)"&gt;
               color:<B>red</B>;&lt;/xsl:when&gt;
         &lt;xsl:<B>otherwise</B>&gt;color:<B>green</B>;&lt;/xsl:otherwise&gt;
      &lt;/xsl:choose&gt;
      text-align:right;
   &lt;/xsl:attribute&gt;
   &lt;xsl:value-of select="format-number(@books_sold,'###,###')"/&gt;
&lt;/td&gt;</PRE>
</li>

	<LI>Save <B>Transform.xsl</B>. You can leave the file open.</li>
</OL>

<P class="labelproc"><B>To view the conditionalized data</B>

<UL type="disc">
	<LI>In Internet Explorer, press F5 to refresh the display of <B>Sales.xml</B>. The page now looks like this:
<P class="fig1"><IMG SRC="xsltut03.gif" ALT="" BORDER=0>

<BLOCKQUOTE class="dtBlock">
<b class="le">Note</b>&nbsp;&nbsp;&nbsp;To change how the page appears, you can change the value assigned to the <code class="ce">low_sales</code> variable. For example, change the value from 21000 to 31000 and then save <B>Transform.xls</B>. Return to Internet Explorer and click <B>Refresh</B> to see how the page changes.</BLOCKQUOTE>
</li>
</UL>

<H2 class="dtH2">How the Conditional Statement Works</H2>

<P>The code that you just added to <B>Transform.xsl</B> uses a combination of the <code class="ce">&lt;xsl:choose&gt;</code>, <code class="ce">&lt;xsl:when&gt;</code>, and <code class="ce">&lt;xsl:otherwise&gt;</code> elements to form a set of conditional statements.</P>

<PRE class="code">      <B>&lt;xsl:choose&gt;</B>
         <B>&lt;xsl:when</B> test="number(@<B>books_sold</B> <B>&amp;lt;=</B> $<B>low_sales</B>)"&gt;
               color:<B>red</B>;&lt;/xsl:when&gt;
         &lt;xsl:<B>otherwise</B>&gt;color:<B>green</B>;&lt;/xsl:otherwise&gt;
      &lt;/xsl:choose&gt;</PRE>

<P>The <code class="ce">&lt;xsl:choose&gt;</code> element declares that the enclosed child elements are conditional statements. The first child element, <code class="ce">&lt;xsl:when test="number(@books_sold &amp;lt;= $low_sales)"&gt;color:red;&lt;/xsl:when&gt;</code>, states that if the value of the <code class="ce">books_sold</code> attribute in the <code class="ce">&lt;quarter&gt;</code> element is smaller than or equal to the value of the <code class="ce">low_sales</code> variable, <code class="ce">color:red</code> will be assigned to the <code class="ce">style</code> attribute of the <code class="ce">&lt;td&gt;</code> HTML element. This causes the number to be output in red. If the <code class="ce">books_sold</code> value is greater than the <code class="ce">low_sales</code> value, the next statement, <code class="ce">&lt;xsl:otherwise&gt;color:green;&lt;/xsl:otherwise&gt;</code>, sets the output color to green instead of red.</P>

<P>The next exercise shows how to <A HREF="xslt_howdoi_0xk5.htm">Process Multiple XML Documents</A>.</P>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
