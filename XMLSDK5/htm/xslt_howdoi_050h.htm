<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Represent Data in XML</TITLE>
<SCRIPT SRC="../stylesheets/vs70link.js"></SCRIPT>
<SCRIPT SRC="../stylesheets/vs70.js"></SCRIPT>
<SCRIPT LANGUAGE="JScript" SRC="../stylesheets/xmlsdk.js"></SCRIPT></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<div id="scrbanner">
<div id="bannertitle">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="bannertitle" nowrap>Microsoft XML Core Services (MSXML) 5.0 for Microsoft Office - XSLT Developer's Guide</TD><TD valign=middle><a href="#Feedback"><IMG name="feedb" onclick=startFeedback(SDKFeedB) style="CURSOR: hand;" hspace=15 alt="" src="../stylesheets/mailto.gif" align=right></a></TD>
</TR>
</TABLE>
</div>
</div>
<DIV id="scrtext" valign="bottom">
<H1 class="dtH1"><A NAME="xslt_hdi_represent_data"></A>Represent Data in XML</H1>

<P>As with any other application, the first thing you must decide when you plan an XML application is how to represent your data. Data design is important because it affects which template rules you will use in the XSLT style sheet, and what kind of performance your XSLT solution can achieve.</P>

<P>In an XSLT solution, data comes in the form of XML documents. You can store data values in an XML element, either as the content of the element or as an attribute value. As an illustration, this example puts company information as the content of some elements, and the sales numbers as attributes of others. All this information is contained in the input XML file, <B>Sales.xml</B>.</P>

<P class="labelproc"><B>To create the Sales.xml file</B>

<OL type="1">
	<LI>Create a folder on your computer, such as C:\Documents and Settings\jsmith\My Documents\xsltTut.</li>

	<LI>Use your HTML or text editor to create a new file. Copy the following code into that file.
<PRE class="code">&lt;?xml version="1.0"?&gt;
&lt;sales&gt;
   &lt;summary&gt;
      &lt;heading&gt;<B>Scootney Publishing</B>&lt;/heading&gt; 
      &lt;subhead&gt;<B>Regional Sales Report</B>&lt;/subhead&gt; 
      &lt;description&gt;<B>Sales report for the West Coast, Central and East Coast regions</B>&lt;/description&gt; 
   &lt;/summary&gt;
   &lt;data&gt;
      &lt;region&gt;
         &lt;name&gt;<B>West Coast</B>&lt;/name&gt; 
         &lt;quarter number="<B>1</B>" books_sold="<B>24000</B>" /&gt; 
         &lt;quarter number="<B>2</B>" books_sold="<B>38600</B>" /&gt; 
         &lt;quarter number="<B>3</B>" books_sold="<B>44030</B>" /&gt; 
         &lt;quarter number="<B>4</B>" books_sold="<B>21000</B>" /&gt; 
      &lt;/region&gt;
      &lt;region&gt;
         &lt;name&gt;<B>Central</B>&lt;/name&gt; 
         &lt;quarter number="<B>1</B>" books_sold="<B>11000</B>" /&gt; 
         &lt;quarter number="<B>2</B>" books_sold="<B>16080</B>" /&gt; 
         &lt;quarter number="<B>3</B>" books_sold="<B>25000</B>" /&gt; 
         &lt;quarter number="<B>4</B>" books_sold="<B>29000</B>" /&gt; 
      &lt;/region&gt;
      &lt;region&gt;
         &lt;name&gt;<B>East Coast</B>&lt;/name&gt; 
         &lt;quarter number="<B>1</B>" books_sold="<B>27000</B>" /&gt; 
         &lt;quarter number="<B>2</B>" books_sold="<B>31400</B>" /&gt; 
         &lt;quarter number="<B>3</B>" books_sold="<B>40100</B>" /&gt; 
         &lt;quarter number="<B>4</B>" books_sold="<B>30000</B>" /&gt; 
      &lt;/region&gt;
   &lt;/data&gt;
&lt;/sales&gt;</PRE>
</li>

	<LI>In the folder that you created in Step 1, save the file as <B>Sales.xml</B>. You can leave the file open.</li>

	<LI>In Windows Explorer, locate and then double-click the <B>Sales.xml</B> file. This allows you to view the file in Internet Explorer.
<P>Internet Explorer shows the file as an unformatted XML listing. This is the default display for Internet Explorer when viewing an XML file.
</li>
</OL>

<P>Basic XSLT processing involves the following:

<OL type="1">
	<LI>Selecting a specified piece or pieces of data.</li>

	<LI>Inspecting the values of this data.</li>

	<LI>Doing something with the data. For example, the application might display the company name and calculate the annual total sales of different regions.</li>

	<LI>The remaining exercises in this section show you how to do all this, one step at time. The next exercise shows how to <A HREF="xslt_howdoi_3w37.htm">Reference Data Values</A>&#0151;that is, how to select specific data values out of the input XML document.</li>
</OL>
<H4><A NAME="feedback"></A></H4>
<SPAN id="SDKFeedB"></SPAN>
</div>
</BODY>
</HTML>
