<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Overlapped Operations</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="ro8.nk"></A><B>Overlapped Operations</B></P>

<P>Overlapped operations enable a thread to execute a time-consuming I/O operation in the background, leaving the thread free to perform other tasks. To enable overlapped I/O operations on a communications resource, the thread must specify the FILE_FLAG_OVERLAPPED flag in the <A HREF="xn35yd.htm"><B>CreateFile</B></A> function when the handle is opened. To execute the <A HREF="cjnd8p.htm"><B>ReadFile</B></A> or <A HREF="g0sox_.htm"><B>WriteFile</B></A> function as an overlapped operation, the calling thread must specify a pointer to an <A HREF="1n286m5.htm"><B>OVERLAPPED</B></A> structure.The <B>OVERLAPPED</B> structure must contain a handle to a manual-reset (not an auto-reset) event object. The system sets the state of the event object to not-signaled when a call to the I/O function returns before the operation has been completed. The system sets the state of the event object to signaled when the operation has been completed. The thread uses a wait function to check the current state of the event object or to wait for its state to be signaled. </P>

<P>The <A HREF="fm7wz7.htm"><B>ReadFileEx</B></A> and <A HREF="12g2wey.htm"><B>WriteFileEx</B></A> functions can be performed only as overlapped operations. The calling thread specifies a pointer to the <A HREF="axvori.htm"><B>FileIOCompletionRoutine</B></A> function, which is executed when the overlapped operation is completed. The completion routine is executed only if the calling thread performs an alertable operation. </P>

<P>For more information about event objects, wait functions, alertable waits, and completion routines, see <A HREF="36dp5f5.htm">Synchronization</A>. </P>

</BODY>
</HTML>
