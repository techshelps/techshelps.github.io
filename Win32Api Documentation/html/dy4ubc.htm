<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Adding Drop Source Capabilities</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="dy4ubc"></A><B>Adding Drop Source Capabilities</B></P>

<P>To enable your application to become the source of a drag and drop operation, follow these steps:</P>

<P>1.Initialize the OLE libraries. Any application that uses the OLE libraries must check the version of the libraries and call the <B>OleInitialize</B> function during its initialization. </P>

<P>You should make sure that the system's OLE libraries are at least as recent as the ones for which the application was written. </P>

<P>Before you call any other OLE functions, you must call <B>OleInitialize</B> to initialize the OLE libraries. Because each call to <B>OleInitialize</B> must have a matching call to the <B>OleUninitialize</B> function, you should maintain an <I>fOleInitialized</I> flag so that you will know whether to call <B>OleUninitialize</B> when your application exits.</P>

<P>2.Implement the <B>IDropSource</B> interface. Not including the member functions that it inherits from <B>IUnknown</B>, <B>IDropSource</B> has only two member functions: <B>QueryContinueDrag</B> and <B>GiveFeedback</B>. OLE calls <B>QueryContinueDrag</B> intermittently during the drag operation. Its parameters include the state of the keyboard, which the drop source uses to control the drag operation. The drop source returns the S_OK value to continue dragging, the DRAGDROP_CANCEL value to cancel dragging, or the DRAGDROP_DROP value to drop the object.</P>

<P>3.OLE calls <B>GiveFeedback</B> to tell the drop source to update the cursor and ask the source window for visual feedback about what would happen if the user dropped at the current point. It sounds like a lot of work to update the cursor, but OLE will use its default cursors if the DRAGDROP_S_USEDEFAULTCURSORS value is returned. </P>

<P>4.Implement the <B>IDataObject</B> interface, which is used by OLE applications to transfer data. In a drag and drop operation, the drop source gives OLE a pointer to its <B>IDataObject</B> implementation. OLE saves the pointer and passes it to the drop target when the cursor first enters the target window and when the drop occurs. Fortunately, you only need to implement the following (non-<B>IUnknown</B>) <B>IDataObject</B> member functions for drag and drop support: <B>GetData</B>, <B>GetDataHere</B>, <B>QueryGetData</B>, and <B>EnumFormatEtc</B>.</P>

<P>5.Call the <B>DoDragDrop</B> function to begin the drag operation. After you have detected that the user wants to drag something, you should call <B>DoDragDrop</B>. OLE uses the <B>IDataObject</B> and <B>IDropSource</B> pointers that are passed in, along with its list of registered drop targets, to control the drag operation. When the drag operation is complete, <B>DoDragDrop</B> returns either the DRAGDROP_S_DROP or DRAGDROP_S_CANCEL value. In addition, OLE returns a <B>DWORD</B> in the address pointed to by <I>pdwEffect</I> that tells how the drop should affect the source data¾that is, whether the operation was a move, copy, link, or scroll. You should look at the <I>pdwEffect</I> value and modify the source data as necessary.</P>

<P>6.Call <B>OleUninitialize</B>. Before an OLE application exits, it must call <B>OleUninitialize</B> to release the OLE libraries. You should check your <I>fOleInitialized</I> flag before calling <B>OleUninitialize</B> and should only call <B>OleUninitialize</B> if <B>OleInitialize</B> returned successfully.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
