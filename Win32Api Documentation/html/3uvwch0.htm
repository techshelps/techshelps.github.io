<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Event Objects</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3uvwch0"></A><B>Event Objects</B></P>

<P>An <I>event object</I> is a synchronization object whose state can be explicitly set to signaled by use of the <A HREF="at02d..htm"><B>SetEvent</B></A> or <A HREF="7d.l0zu.htm"><B>PulseEvent</B></A> function. Following are the two types of event object. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=28%><B>Object</B></TD>
<TD width=72%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Manual-reset event</TD>
<TD width=72%>An event object whose state remains signaled until it is explicitly reset to nonsignaled by the <A HREF="1.ih1gv.htm"><B>ResetEvent</B></A> function. While it is signaled, any number of waiting threads, or threads that subsequently specify the same event object in one of the <A HREF="y2tc_3.htm">wait functions</A>, can be released.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Auto-reset event</TD>
<TD width=72%>An event object whose state remains signaled until a single waiting thread is released, at which time the system automatically sets the state to nonsignaled. If no threads are waiting, the event object's state remains signaled.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The event object is useful in sending a signal to a thread indicating that a particular event has occurred. For example, in overlapped input and output, the system sets a specified event object to the signaled state when the overlapped operation has been completed. A single thread can specify different event objects in several simultaneous overlapped operations, then use one of the multiple-object <A HREF="y2tc_3.htm">wait functions</A> to wait for the state of any one of the event objects to be signaled. </P>

<P>A thread uses the <A HREF="j_zbjv.htm"><B>CreateEvent</B></A> function to create an event object. The creating thread specifies the initial state of the object and whether it is a manual-reset or auto-reset event object. The creating thread can also specify a name for the event object. Threads in other processes can open a handle of an existing event object by specifying its name in a call to the <A HREF="qtg5jz.htm"><B>OpenEvent</B></A> function. For additional information about names for mutex, event, semaphore, and timer objects, see <A HREF="2oqfb1.htm">Interprocess Synchronization</A>.</P>

<P>A thread can use the <A HREF="7d.l0zu.htm"><B>PulseEvent</B></A> function to set the state of an event object to signaled and then reset it to nonsignaled after releasing the appropriate number of waiting threads. For a manual-reset event object, all waiting threads are released. For an auto-reset event object, the function releases only a single waiting thread, even if multiple threads are waiting. If no threads are waiting, <B>PulseEvent</B> simply sets the state of the event object to nonsignaled and returns.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
