<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Default List View Message Processing</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="hwpxrz"></A><B>Default List View Message Processing</B></P>

<P>This section describes the window message processing performed by a list view control. Messages specific to list view controls are discussed elsewhere and are, therefore, not included here.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=44%><B>Message</B></TD>
<TD width=56%><B>Processing performed</B></TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="4gep_o2.htm">WM_CHAR</A></TD>
<TD width=56%>Searches for a list view item that begins with the specified character and, if the item is found, selects and sets the focus to the item.
<P>Multiple characters received within a time-out interval are concatenated, and the list view control searches for an item that begins with the resulting string.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="71v.3j.htm">WM_COMMAND</A></TD>
<TD width=56%>Processes the <A HREF="038n1p.htm">EN_UPDATE</A> and <A HREF="2hqlzz6.htm">EN_KILLFOCUS</A> notification messages and forwards all other edit control notifications to the parent window.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="2re1yt3.htm">WM_CREATE</A></TD>
<TD width=56%>Performs additional initialization. If the LVS_SHAREIMAGELISTS window style is not specified, the list view control creates the icon and small icon image lists at this point.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="0yqmho.htm">WM_DESTROY</A></TD>
<TD width=56%>Frees resources.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="fey63i.htm">WM_ERASEBKGND</A></TD>
<TD width=56%>Erases the window background using the current background color for the list view control. If the background color is the CLR_NONE value, the list view control forwards the message to the parent window.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="1n23mxw.htm">WM_GETDLGCODE</A></TD>
<TD width=56%>Returns a combination of the DLGC_WANTTAB and DLGC_WANTARROWS values.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="1vgvkcu.htm">WM_GETFONT</A></TD>
<TD width=56%>Returns the handle of the current label font.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="e_2m08.htm">WM_HSCROLL</A></TD>
<TD width=56%>Scrolls the list view control horizontally.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="cxjo_p.htm">WM_KEYDOWN</A></TD>
<TD width=56%>Processes the SPACEBAR, ENTER, and arrow keys and sends a <A HREF="elg218.htm">LVN_KEYDOWN</A> notification message to the parent window.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="558y_gq.htm">WM_KILLFOCUS</A></TD>
<TD width=56%>Repaints the focused list item, if any, and sends a <A HREF="m47r0w.htm">NM_KILLFOCUS</A> notification message to the parent window.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="1.8care.htm">WM_LBUTTONDBLCLK</A></TD>
<TD width=56%>Sends the parent window an <A HREF="19oi1uq.htm">NM_DBLCLK</A> notification message.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="065j6u.htm">WM_LBUTTONDOWN</A></TD>
<TD width=56%>Processed in different ways depending on whether a click or drag operation is being initiated. To determine which operation is involved, the list view control enters a modal message loop until either the button is released or the mouse is moved.
<P>In the case of a click, the list view control may change which item has the focus and which items are selected, taking into account the cursor position, the state of the SHIFT and CTRL keys, and so on. Then the list view control sends its parent window an <A HREF="4j1vzh.htm">NM_CLICK</A> notification message.</P>

<P>If dragging begins over an item, the list view control selects and sets the focus to the item. Then it sends an <A HREF="2.mjfsu.htm">LVN_BEGINDRAG</A> notification message to the parent window. The parent window is responsible for actually carrying out the drag operation.</P>

<P>If dragging begins over the window background, the list view control enters another modal message loop, enabling the user to form a rectangle by dragging the mouse. Items within the rectangle are selected.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="11ps3hu.htm">WM_NCCREATE</A></TD>
<TD width=56%>Allocates and initializes an internal data structure and then calls the <A HREF="32d1nbh.htm"><B>DefWindowProc</B></A> function.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="jw500a.htm">WM_NCDESTROY</A></TD>
<TD width=56%>Frees resources allocated by the list view control. Unless the LVS_SHAREIMAGELISTS style is used, this includes deleting the full-sized and small image lists.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="1mzt7br.htm">WM_NOTIFY</A></TD>
<TD width=56%>Processes header control notification messages.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="f55xz2.htm">WM_PAINT</A></TD>
<TD width=56%>Displays any items in the update region. For callback items, the control first sends an <A HREF="mh7ghk.htm">LVN_GETDISPINFO</A> notification message to the owner window to request display information. If the <I>wParam</I> parameter is non-NULL, the control assumes that the value is an HDC and paints using that device context.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="0t6fui.htm">WM_RBUTTONDOWN</A></TD>
<TD width=56%>Processed the same way as the <A HREF="065j6u.htm">WM_LBUTTONDOWN</A> message, except that the control sends an <A HREF="ug_85a.htm">NM_RCLICK</A> notification message (instead of <A HREF="4j1vzh.htm">NM_CLICK</A>) and an <A HREF="7kqpwi.htm">LVN_BEGINRDRAG</A> notification message (instead of <A HREF="2.mjfsu.htm">LVN_BEGINDRAG</A>).</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="1ml4f9e.htm">WM_SETFOCUS</A></TD>
<TD width=56%>Repaints the focused list item, if any, and sends an <A HREF="_7f6h7.htm">NM_SETFOCUS</A> notification message to the parent window.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="_0_tib.htm">WM_SETFONT</A></TD>
<TD width=56%>Saves the specified font handle, forwards the message to the header window, if any, and repaints using the new font.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="2xks04i.htm">WM_SETREDRAW</A></TD>
<TD width=56%>Turns redrawing on or off.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="303bzxe.htm">WM_TIMER</A></TD>
<TD width=56%>Begins editing of an item label. If the user clicks the label of the focused item, the list view control sets a timer instead of entering edit mode immediately. The timer makes it possible for the list view control to <I>not</I> enter edit mode if the user double-clicks the label.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="1i8puw5.htm">WM_VSCROLL</A></TD>
<TD width=56%>Scrolls the list view control vertically.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="4d1zvu.htm">WM_WINDOWPOSCHANGED</A></TD>
<TD width=56%>Updates the window scroll bars. If the current view is icon or small icon view and the LVS_AUTOARRANGE style is specified, the list view control also arranges the list items.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><A HREF="2s_lyu.htm">WM_WININICHANGE</A></TD>
<TD width=56%>Processes changes to system metrics.</TD>
</TR>
</TABLE><BR>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
