<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>AttachThreadInput</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="4ylg_0m"></A><B>AttachThreadInput  <A HREF="7znze2.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="glns2h.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="7wnz9r.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>AttachThreadInput</B> function attaches the input processing mechanism of one thread to that of another thread. </P>

<P><B>BOOL AttachThreadInput(</B></P>

<TABLE cols=2 width=333>

<TR VALIGN="top">
<TD width=52%><B>DWORD</B> <I>idAttach</I><B>,</B></TD>
<TD width=48%>// thread to attach </TD>
</TR>

<TR VALIGN="top">
<TD width=52%><B>    DWORD</B> <I>idAttachTo</I><B>,</B></TD>
<TD width=48%>// thread to attach to  </TD>
</TR>

<TR VALIGN="top">
<TD width=52%><B>    BOOL</B> <I>fAttach</I> </TD>
<TD width=48%>// attach or detach </TD>
</TR>

<TR VALIGN="top">
<TD width=52%><B>   );</B></TD>
<TD width=48%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>idAttach</I></P>

<P>Specifies the identifier of the thread to be attached to another thread. The thread to be attached cannot be a system thread.</P>

<P><I>idAttachTo</I></P>

<P>Specifies the identifier of the thread to be attached to. This thread cannot be a system thread. </P>

<P>A thread cannot attach to itself. Therefore, <I>idAttachTo</I> cannot equal <I>idAttach</I>.</P>

<P><I>fAttach</I></P>

<P>Specifies whether to attach or detach the threads. If this parameter is TRUE, the two threads are attached. If the parameter is FALSE, the threads are detached. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. There is no extended error information available.</P>

<P><B>Remarks</B></P>

<P>Windows created in different threads typically process input independently of each other. That is, they have their own input states (focus, active, capture windows, key state, queue status, and so on), and they are not synchronized with the input processing of other threads. By using the <B>AttachThreadInput</B> function, a thread can attach its input processing to another thread. This also allows threads to share their input states, so they can call the <B>SetFocus</B> function to set the keyboard focus to a window of a different thread. This also allows threads to get key-state information. These capabilities are not generally possible. </P>

<P>The <B>AttachThreadInput</B> function fails if either of the specified threads does not have a message queue. The system creates a thread's message queue when the thread makes its first call to one of the Win32 USER or GDI functions. The <B>AttachThreadInput</B> function also fails if a journal record hook is installed. Journal record hooks attach all input queues together.</P>

<P>Note that key state, which can be ascertained by calls to the <B>GetKeyState</B> or <B>GetKeyboardState</B> function, is reset after a call to <B>AttachThreadInput</B>. </P>

<P><B>Windows NT:</B> You cannot attach a thread to a thread in another desktop.</P>

<P><B>See Also</B></P>

<P><A HREF="1shenb6.htm"><B>GetCurrentThreadId</B></A>, <A HREF="gtoqdj.htm"><B>GetKeyState</B></A>, <A HREF="126loed.htm"><B>GetKeyboardState</B></A>, <A HREF="lgydl3.htm"><B>GetWindowThreadProcessId</B></A>, <A HREF="35o7yrp.htm"><B>SetFocus</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
