<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Displaying the Shutdown Dialog Box</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1d1zjs4"></A><B>Displaying the Shutdown Dialog Box</B></P>

<P><B>Windows NT only</B></P>

<P>The following example uses the <A HREF="uh63q6.htm"><B>InitiateSystemShutdown</B></A> function to begin the system shutdown process on the computer on which is user is logged on. The application must first enable the SE_SHUTDOWN_NAME privilege. </P>

<P>HANDLE hToken;              // handle to process token  </P>

<P>TOKEN_PRIVILEGES tkp;       // pointer to token structure  </P>

<P></P>

<P>BOOL fResult;               // system shutdown flag </P>

<P></P>

<P>// Get the current process token handle so we can get shutdown </P>

<P>// privilege. </P>

<P></P>

<P>if (!OpenProcessToken(GetCurrentProcess(), </P>

<P>TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken)) </P>

<P>ErrorHandler("OpenProcessToken failed."); </P>

<P></P>

<P>// Get the LUID for shutdown privilege. </P>

<P></P>

<P>LookupPrivilegeValue(NULL, SE_SHUTDOWN_NAME, </P>

<P>&amp;tkp.Privileges[0].Luid); </P>

<P></P>

<P>tkp.PrivilegeCount = 1;  // one privilege to set    </P>

<P>tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED; </P>

<P></P>

<P>// Get shutdown privilege for this process. </P>

<P></P>

<P>AdjustTokenPrivileges(hToken, FALSE, &amp;tkp, 0, </P>

<P>(PTOKEN_PRIVILEGES) NULL, 0); </P>

<P></P>

<P>// Cannot test the return value of AdjustTokenPrivileges. </P>

<P></P>

<P>if (GetLastError() != ERROR_SUCCESS) </P>

<P>ErrorHandler("AdjustTokenPrivileges enable failed."); </P>

<P></P>

<P>// Display the shutdown dialog box and start the time-out countdown. </P>

<P></P>

<P>fResult = InitiateSystemShutdown( </P>

<P>NULL,                                  // shut down local computer </P>

<P>"Click on the main window and press \</P>

<P>the Escape key to cancel shutdown.",  // message to user </P>

<P>20,                                    // time-out period </P>

<P>FALSE,                                 // ask user to close apps </P>

<P>TRUE);                                 // reboot after shutdown </P>

<P></P>

<P>if (!fResult) </P>

<P>{ </P>

<P>ErrorHandler("InitiateSystemShutdown failed."); </P>

<P>} </P>

<P></P>

<P>// Disable shutdown privilege. </P>

<P></P>

<P>tkp.Privileges[0].Attributes = 0; </P>

<P>AdjustTokenPrivileges(hToken, FALSE, &amp;tkp, 0, </P>

<P>(PTOKEN_PRIVILEGES) NULL, 0); </P>

<P></P>

<P>if (GetLastError() != ERROR_SUCCESS) </P>

<P>{</P>

<P>ErrorHandler("AdjustTokenPrivileges disable failed."); </P>

<P>} </P>

<P></P>

<P>If the <A HREF="62j7xm.htm"><B>AbortSystemShutdown</B></A> function is executed in the time-out period specified by <A HREF="uh63q6.htm"><B>InitiateSystemShutdown</B></A>, the system does not shut down. In this example, the user can prevent the system from shutting down by clicking on the application's main window and pressing the ESC key. The example processes the keystroke by calling <B>AbortSystemShutdown</B>. </P>

<P>HANDLE hToken;              // handle to process token  </P>

<P>TOKEN_PRIVILEGES tkp;       // pointer to token structure  </P>

<P></P>

<P>BOOL fResult;               // system shutdown flag </P>

<P></P>

<P>case WM_KEYDOWN: </P>

<P></P>

<P>// Process only the Escape key. </P>

<P></P>

<P>if (wParam != VK_ESCAPE) </P>

<P>{ </P>

<P>break; </P>

<P>} </P>

<P></P>

<P>// Get the current process token handle  so we can get shutdown </P>

<P>// privilege. </P>

<P></P>

<P>if (!OpenProcessToken(GetCurrentProcess(), </P>

<P>TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken)) </P>

<P>{</P>

<P>ErrorHandler("OpenProcessToken failed."); </P>

<P>}</P>

<P></P>

<P>// Get the LUID for shutdown privilege. </P>

<P></P>

<P>LookupPrivilegeValue(NULL, SE_SHUTDOWN_NAME, </P>

<P>&amp;tkp.Privileges[0].Luid); </P>

<P></P>

<P>tkp.PrivilegeCount = 1;  // one privilege to set    </P>

<P>tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED; </P>

<P></P>

<P>// Get shutdown privilege for this process. </P>

<P></P>

<P>AdjustTokenPrivileges(hToken, FALSE, &amp;tkp, 0, </P>

<P>(PTOKEN_PRIVILEGES)NULL, 0); </P>

<P></P>

<P>// Cannot test the return value of AdjustTokenPrivileges. </P>

<P></P>

<P>if (GetLastError() != ERROR_SUCCESS) </P>

<P>{</P>

<P>ErrorHandler("AdjustTokenPrivileges enable failed."); </P>

<P>}</P>

<P></P>

<P>// Prevent the system from shutting down. </P>

<P></P>

<P>fResult = AbortSystemShutdown(NULL); </P>

<P></P>

<P>if (!fResult) </P>

<P>{ </P>

<P>ErrorHandler("AbortSystemShutdown failed."); </P>

<P>} </P>

<P></P>

<P>// Disable shutdown privilege. </P>

<P></P>

<P>tkp.Privileges[0].Attributes = 0; </P>

<P>AdjustTokenPrivileges(hToken, FALSE, &amp;tkp, 0, </P>

<P>(PTOKEN_PRIVILEGES) NULL, 0); </P>

<P></P>

<P>if (GetLastError() != ERROR_SUCCESS) </P>

<P>{</P>

<P>ErrorHandler("AdjustTokenPrivileges disable failed."); </P>

<P>}</P>

<P></P>

<P>break; </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
