<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Calling DeviceIoControl on Windows 95</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1.itbok"></A><B>Calling DeviceIoControl on Windows 95</B></P>

<P>A Win32-based application running on Windows 95 can use the <A HREF="64ie_y8.htm"><B>DeviceIoControl</B></A> function to send control codes directly to a virtual device driver (VxD). Any VxD can support any number of control codes, or none at all. </P>

<P>The system VxD, VWIN32.VXD, supports the input and output control (IOCTL) functions originally provided by MS-DOS Interrupt 21h. The following example shows how to call Get Media ID (Interrupt 21h Function 440Dh Minor Code 66h) from a Win32-based application:</P>

<P></P>

<P>"\\\\.\\VxDName" </P>

<P>In Windows 95,  </P>

<P></P>

<P>#define VWIN32_DIOC_DOS_IOCTL 1 </P>

<P></P>

<P>typedef struct _DEVIOCTL_REGISTERS { </P>

<P>DWORD reg_EBX; </P>

<P>DWORD reg_EDX; </P>

<P>DWORD reg_ECX; </P>

<P>DWORD reg_EAX; </P>

<P>DWORD reg_EDI; </P>

<P>DWORD reg_ESI; </P>

<P>DWORD reg_Flags; </P>

<P>} DEVIOCTL_REGISTERS, *PDEVIOCTL_REGISTERS; </P>

<P></P>

<P>typedef struct _MID { </P>

<P>WORD  midInfoLevel; </P>

<P>DWORD midSerialNum; </P>

<P>BYTE  midVolLabel[11]; </P>

<P>BYTE  midFileSysType[8]; </P>

<P>} MID, *PMID; </P>

<P></P>

<P>BOOL GetMediaID(PMID pmid, UINT nDrive) </P>

<P>{ </P>

<P>DEVIOCTL_REGISTERS reg; </P>

<P></P>

<P>reg.reg_EAX = 0x440D;       /* IOCTL for block devices */ </P>

<P>reg.reg_EBX = nDrive;       /* zero-based drive ID     */ </P>

<P>reg.reg_ECX = 0x0866;       /* Get Media ID command    */ </P>

<P>reg.reg_EDX = (DWORD) pmid; /* receives media ID info  */ </P>

<P></P>

<P>if (!DoIOCTL(&amp;reg)) </P>

<P>return FALSE; </P>

<P></P>

<P>if (reg.reg_Flags &amp; 0x8000) /* error if carry flag set */ </P>

<P>return FALSE; </P>

<P></P>

<P>return TRUE; </P>

<P>} </P>

<P></P>

<P>BOOL DoIOCTL(PDEVIOCTL_REGISTERS preg) </P>

<P>{ </P>

<P>HANDLE hDevice; </P>

<P></P>

<P>BOOL fResult; </P>

<P>DWORD cb; </P>

<P></P>

<P>preg-&gt;reg_Flags = 0x8000; /* assume error (carry flag set) */ </P>

<P></P>

<P>hDevice = CreateFile("\\\\.\\vwin32", </P>

<P>GENERIC_READ, FILE_SHARE_READ | FILE_SHARE_WRITE, </P>

<P>(LPSECURITY_ATTRIBUTES) NULL, OPEN_EXISTING, </P>

<P>FILE_ATTRIBUTE_NORMAL, (HANDLE) NULL); </P>

<P></P>

<P>if (hDevice == (HANDLE) INVALID_HANDLE_VALUE) </P>

<P>return FALSE; </P>

<P>else { </P>

<P>fResult = DeviceIoControl(hDevice, VWIN32_DIOC_DOS_IOCTL, </P>

<P>preg, sizeof(*preg), preg, sizeof(*preg), &amp;cb, 0); </P>

<P></P>

<P>if (!fResult) </P>

<P>return FALSE; </P>

<P>} </P>

<P></P>

<P>CloseHandle(hDevice); </P>

<P></P>

<P>return TRUE; </P>

<P>} </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
