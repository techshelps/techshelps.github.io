<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ScrollWindow</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="nz.wwx"></A><B>ScrollWindow  <A HREF="bziw71.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="rps9no.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="42xsezb.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>ScrollWindow</B> function scrolls the content of the specified window's client area. This function exists for backward compatibility. For new applications, use the <B>ScrollWindowEx</B> function.</P>

<P><B>BOOL ScrollWindow(</B></P>

<TABLE cols=2 width=491>

<TR VALIGN="top">
<TD width=42%><B>HWND</B> <I>hWnd</I><B>,</B></TD>
<TD width=58%>// handle of window to scroll</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    int</B> <I>XAmount</I><B>,</B></TD>
<TD width=58%>// amount of horizontal scrolling</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    int</B> <I>YAmount</I><B>,</B></TD>
<TD width=58%>// amount of vertical scrolling</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    CONST RECT *</B><I>lpRect</I><B>,</B></TD>
<TD width=58%>// address of structure with scroll rectangle</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    CONST RECT *</B><I>lpClipRect</I> </TD>
<TD width=58%>// address of structure with clip rectangle</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>   );</B></TD>
<TD width=58%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hWnd</I></P>

<P>Identifies the window where the client area is to be scrolled. </P>

<P><I>XAmount</I></P>

<P>Specifies the amount, in device units, of horizontal scrolling. If the window being scrolled has the CS_OWNDC or CS_CLASSDC style, then this parameter uses logical units rather than device units. This parameter must be a negative value to scroll the content of the window to the left. </P>

<P><I>YAmount</I></P>

<P>Specifies the amount, in device units, of vertical scrolling. If the window being scrolled has the CS_OWNDC or CS_CLASSDC style, then this parameter uses logical units rather than device units. This parameter must be a negative value to scroll the content of the window up. </P>

<P><I>lpRect</I></P>

<P>Points to the <A HREF="ezena2.htm"><B>RECT</B></A> structure specifying the portion of the client area to be scrolled. If this parameter is NULL, the entire client area is scrolled. </P>

<P><I>lpClipRect</I></P>

<P>Points to the <B>RECT</B> structure containing the coordinates of the clipping rectangle. Only device bits within the clipping rectangle are affected. Bits scrolled from the outside of the rectangle to the inside are painted; bits scrolled from the inside of the rectangle to the outside are not painted. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>If the caret is in the window being scrolled, <B>ScrollWindow</B> automatically hides the caret to prevent it from being erased and then restores the caret after the scrolling is finished. The caret position is adjusted accordingly. </P>

<P>The area uncovered by <B>ScrollWindow</B> is not repainted, but it is combined into the window's update region. The application eventually receives a WM_PAINT message notifying it that the region must be repainted. To repaint the uncovered area at the same time the scrolling is in action, call the <B>UpdateWindow</B> function immediately after calling <B>ScrollWindow</B>. </P>

<P>If the <I>lpRect</I> parameter is NULL, the positions of any child windows in the window are offset by the amount specified by the <I>XAmount</I> and <I>YAmount</I> parameters; invalid (unpainted) areas in the window are also offset. <B>ScrollWindow</B> is faster when <I>lpRect</I> is NULL. </P>

<P>If <I>lpRect</I> is not NULL, the positions of child windows are not changed and invalid areas in the window are not offset. To prevent updating problems when <I>lpRect</I> is not NULL, call <B>UpdateWindow</B> to repaint the window before calling <B>ScrollWindow</B>. </P>

<P><B>See Also</B></P>

<P><A HREF="ezena2.htm"><B>RECT</B></A>, <A HREF="1q6a6xp.htm"><B>ScrollDC</B></A>, <A HREF="izbp7k.htm"><B>ScrollWindowEx</B></A>, <A HREF="19g_54e.htm"><B>UpdateWindow</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
