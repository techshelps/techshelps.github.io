<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>RedrawWindow</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="jiztxu"></A><B>RedrawWindow  <A HREF="17v.3gj.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1mptrl8.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="el1da3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>RedrawWindow</B> function updates the specified rectangle or region in a window's client area. </P>

<P><B>BOOL RedrawWindow(</B></P>

<TABLE cols=2 width=503>

<TR VALIGN="top">
<TD width=42%><B>HWND</B> <I>hWnd</I><B>,</B></TD>
<TD width=58%>// handle of window</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    CONST RECT</B> <B>*</B><I>lprcUpdate</I><B>,</B></TD>
<TD width=58%>// address of structure with update rectangle</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    HRGN</B> <I>hrgnUpdate</I><B>,</B></TD>
<TD width=58%>// handle of update region</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    UINT</B> <I>flags</I> </TD>
<TD width=58%>// array of redraw flags</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>   );</B></TD>
<TD width=58%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hWnd</I></P>

<P>Identifies the window to be redrawn. If this parameter is NULL, the desktop window is updated. </P>

<P><I>lprcUpdate</I></P>

<P>Points to a <A HREF="ezena2.htm"><B>RECT</B></A> structure containing the coordinates of the update rectangle. This parameter is ignored if the <I>hrgnUpdate</I> parameter identifies a region. </P>

<P><I>hrgnUpdate</I></P>

<P>Identifies the update region. If both the <I>hrgnUpdate</I> and <I>lprcUpdate</I> parameters are NULL, the entire client area is added to the update region. </P>

<P><I>flags</I></P>

<P>Specifies one or more redraw flags. This parameter can be a combination of flags that invalidate or validate a window, control repainting, and control which windows are affected by <B>RedrawWindow</B>. </P>

<P>The following flags are used to invalidate the window: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=40%><B>Flag (invalidation)</B></TD>
<TD width=60%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=40%>RDW_ERASE</TD>
<TD width=60%>Causes the window to receive a WM_ERASEBKGND message when the window is repainted. The RDW_INVALIDATE flag must also be specified; otherwise, RDW_ERASE has no effect.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>RDW_FRAME</TD>
<TD width=60%>Causes any part of the nonclient area of the window that intersects the update region to receive a WM_NCPAINT message. The RDW_INVALIDATE flag must also be specified; otherwise, RDW_FRAME has no effect. The WM_NCPAINT message is typically not sent during the execution of <B>RedrawWindow</B> unless either RDW_UPDATENOW or RDW_ERASENOW is specified.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>RDW_INTERNALPAINT</TD>
<TD width=60%>Causes a WM_PAINT message to be posted to the window regardless of whether any portion of the window is invalid.</TD>
</TR>

<TR VALIGN="top">
<TD width=40%>RDW_INVALIDATE</TD>
<TD width=60%>Invalidates <I>lprcUpdate</I> or <I>hrgnUpdate</I> (only one may be non-NULL). If both are NULL, the entire window is invalidated.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The following flags are used to validate the window: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=44%><B>Flag (validation)</B></TD>
<TD width=56%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=44%>RDW_NOERASE</TD>
<TD width=56%>Suppresses any pending WM_ERASEBKGND messages.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>RDW_NOFRAME</TD>
<TD width=56%>Suppresses any pending WM_NCPAINT messages. This flag must be used with RDW_VALIDATE and is typically used with RDW_NOCHILDREN. RDW_NOFRAME should be used with care, as it could cause parts of a window to be painted improperly.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>RDW_NOINTERNALPAINT</TD>
<TD width=56%>Suppresses any pending internal WM_PAINT messages. This flag does not affect WM_PAINT messages resulting from a non-NULL update area.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>RDW_VALIDATE</TD>
<TD width=56%>Validates <I>lprcUpdate</I> or <I>hrgnUpdate</I> (only one may be non-NULL). If both are NULL, the entire window is validated. This flag does not affect internal WM_PAINT messages.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The following flags control when repainting occurs. <B>RedrawWindow</B> will not repaint unless one of these flags is specified. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=36%><B>Flag</B></TD>
<TD width=64%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=36%>RDW_ERASENOW</TD>
<TD width=64%>Causes the affected windows (as specified by the RDW_ALLCHILDREN and RDW_NOCHILDREN flags) to receive WM_NCPAINT and WM_ERASEBKGND messages, if necessary, before the function returns. WM_PAINT messages are received at the ordinary time.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>RDW_UPDATENOW</TD>
<TD width=64%>Causes the affected windows (as specified by the RDW_ALLCHILDREN and RDW_NOCHILDREN flags) to receive WM_NCPAINT, WM_ERASEBKGND, and WM_PAINT messages, if necessary, before the function returns.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>By default, the windows affected by <B>RedrawWindow</B> depend on whether the given window has the WS_CLIPCHILDREN style. Child windows that are not the WS_CLIPCHILDREN style are unaffected; non-WS_CLIPCHILDREN windows are recursively validated or invalidated until a WS_CLIPCHILDREN window is encountered. The following flags control which windows are affected by the <B>RedrawWindow</B> function: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=36%><B>Flag</B></TD>
<TD width=64%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=36%>RDW_ALLCHILDREN</TD>
<TD width=64%>Includes child windows, if any, in the repainting operation.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>RDW_NOCHILDREN</TD>
<TD width=64%>Excludes child windows, if any, from the repainting operation.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>When <B>RedrawWindow</B> is used to invalidate part of the desktop window, the desktop window does not receive a WM_PAINT message. To repaint the desktop, an application uses the RDW_ERASE flag to generate a WM_ERASEBKGND message. </P>

<P><B>See Also</B></P>

<P><A HREF="hzc2vq.htm"><B>GetUpdateRect</B></A>, <A HREF="_e3owd.htm"><B>GetUpdateRgn</B></A>, <A HREF="e0keni.htm"><B>InvalidateRect</B></A>, <A HREF="5au1zwt.htm"><B>InvalidateRgn</B></A>, <A HREF="ezena2.htm"><B>RECT</B></A>, <A HREF="19g_54e.htm"><B>UpdateWindow</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
