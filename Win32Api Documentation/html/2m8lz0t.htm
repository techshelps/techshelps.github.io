<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Encrypting and Decrypting Simultaneously</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2m8lz0t"></A><B>Encrypting and Decrypting Simultaneously</B></P>

<P>When encrypting or decrypting two streams of data simultaneously with the same cryptographic key, a certain amount of care must be taken. The same physical session key must not be used for both operations, because every session key contains internal state information and it will get mixed up if used for more than one operation at a time. A fairly simple solution to this problem is to make a copy of the session key. In this way, the original key can be used for one operation and the copy used for the other.</P>

<P>Copying a session key is done by exporting the key with <B>CryptExportKey</B> and then using <B>CryptImportKey</B> to import it back in. When the key is imported, the CSP will give the "new" key its own section of internal memory, as if it were not related at all to the original key.</P>

<P>The following code fragment shows how a copy of a session key can be obtained.</P>

<P>HCRYPTPROV hProv;    // Handle to a CSP.</P>

<P>HCRYPTKEY hKey;      // Handle to a session key.</P>

<P></P>

<P>HCRYPTKEY hCopyKey = 0;</P>

<P>HCRYPTKEY hPubKey = 0;</P>

<P>BYTE pbBlob[256];</P>

<P>DWORD dwBlobLen;</P>

<P>// Get a handle to our own key exchange public key.</P>

<P>CryptGetUserKey(hProv, AT_KEYEXCHANGE, &amp;hPubKey);</P>

<P>// Export the session key into a key blob.</P>

<P>dwBlobLen = 256;</P>

<P>CryptExportKey(hKey, hPubKey, SIMPLEBLOB, 0, pbBlob, &amp;dwBlobLen);</P>

<P>// Import the session key back into the CSP. This is stored separately</P>

<P>// from the original session key.</P>

<P>CryptImportKey(hProv, pbBlob, dwBlobLen, 0, 0, &amp;hCopyKey);</P>

<P>// Use 'hKey' for one set of operations and 'hCopyKey' for the other.</P>

<P>...</P>

<P></P>

<P>Note that this technique should not be used with stream ciphers, as stream cipher keys should never be used more than once. Instead, separate transmit and receive keys should be used.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
