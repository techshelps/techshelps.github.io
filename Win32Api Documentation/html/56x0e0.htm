<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating and Using a Temporary File</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="56x0e0"></A><B>Creating and Using a Temporary File</B></P>

<P>The following example copies one file to another. The second file is an uppercase version of the first file. </P>

<P>The application opens the ORIGINAL.TXT file by using <A HREF="xn35yd.htm"><B>CreateFile</B></A>. The application then obtains a temporary filename with the <A HREF="xpkip.htm"><B>GetTempFileName</B></A> function and uses <B>CreateFile</B> to create the temporary file. The application reads 4K blocks into a buffer, converts the buffer contents to uppercase, and writes the converted buffer to the temporary file. When all of ORIGINAL.TXT has been written to the temporary file, the application closes both files and renames the temporary file to ALLCAPS.TXT by using the <A HREF="1s180ve.htm"><B>MoveFile</B></A> function. </P>

<P>HANDLE hFile;  </P>

<P></P>

<P>HANDLE hTempFile; </P>

<P></P>

<P>DWORD  dwBytesRead, dwBytesWritten, dwPos; </P>

<P></P>

<P>char szTempName[MAX_PATH]; </P>

<P></P>

<P>char buffer[4096]; </P>

<P></P>

<P>// Open the existing file. </P>

<P></P>

<P>hFile = CreateFile("ORIGINAL.TXT",        // filename </P>

<P>GENERIC_READ,                 // open for reading </P>

<P>0,                            // do not share </P>

<P>NULL,                         // no security </P>

<P>OPEN_EXISTING,                // existing file only </P>

<P>FILE_ATTRIBUTE_NORMAL,        // normal file </P>

<P>NULL);                        // no attr. template </P>

<P>if (hFile == INVALID_HANDLE_VALUE) { </P>

<P>ErrorHandler("Could not open file."); // process error </P>

<P>} </P>

<P></P>

<P>// Create a temporary file. </P>

<P></P>

<P>GetTempFileName("\\TEMP", // dir. for temp. files </P>

<P>"NEW",                // temp. filename prefix </P>

<P>0,                    // create unique name </P>

<P>szTempName);          // buffer for name </P>

<P>hTempFile = CreateFile((LPTSTR) szTempName,  // filename </P>

<P>GENERIC_READ | GENERIC_WRITE, // open for read-write </P>

<P>0,                            // do not share </P>

<P>NULL,                         // no security </P>

<P>CREATE_ALWAYS,                // overwrite existing file</P>

<P>FILE_ATTRIBUTE_NORMAL,        // normal file </P>

<P>NULL);                        // no attr. template </P>

<P>if (hTempFile == INVALID_HANDLE_VALUE) { </P>

<P>ErrorHandler("Could not create temporary file."); </P>

<P>} </P>

<P></P>

<P>// Read 4K blocks to the buffer. </P>

<P>// Change all characters in the buffer to uppercase. </P>

<P>// Write the buffer to the temporary file. </P>

<P></P>

<P>do </P>

<P>{</P>

<P>if (ReadFile(hFile, buffer, 4096, </P>

<P>&amp;dwBytesRead, NULL)) { </P>

<P></P>

<P>CharUpperBuff(buffer, dwBytesRead); </P>

<P></P>

<P>WriteFile(hTempFile, buffer, dwBytesRead, </P>

<P>&amp;dwBytesWritten, NULL); </P>

<P>} </P>

<P>} while (dwBytesRead == 4096); </P>

<P></P>

<P>// Close both files. </P>

<P></P>

<P>CloseHandle(hFile); </P>

<P>CloseHandle(hTempFile); </P>

<P></P>

<P>// Move the temporary file to the new text file.</P>

<P></P>

<P>if (!MoveFile(szTempName, "ALLCAPS.TXT")) { </P>

<P>ErrorHandler("Could not move temp. file."); </P>

<P>} </P>

<P></P>

</BODY>
</HTML>
