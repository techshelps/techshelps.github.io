<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>GetKeyState</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="gtoqdj"></A><B>GetKeyState  <A HREF="1rx7qs3.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1xtfdy5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="fkf.jh.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetKeyState</B> function retrieves the status of the specified virtual key. The status specifies whether the key is up, down, or toggled (on, off ¾ alternating each time the key is pressed). </P>

<P><B>SHORT GetKeyState(</B></P>

<TABLE cols=2 width=262>

<TR VALIGN="top">
<TD width=47%><B>int</B> <I>nVirtKey</I> </TD>
<TD width=53%>// virtual-key code</TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>   );</B></TD>
<TD width=53%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>nVirtKey</I></P>

<P>Specifies a virtual key. If the desired virtual key is a letter or digit (A through Z, a through z, or 0 through 9), <I>nVirtKey</I> must be set to the ASCII value of that character. For other keys, it must be a virtual-key code. </P>

<P>If a non-English keyboard layout is used, virtual keys with values in the range ASCII A through Z and 0 through 9 are used to specify most of the character keys. For example, for the German keyboard layout, the virtual key of value ASCII O (0x4F) refers to the "o" key, whereas VK_OEM_1 refers to the "o with umlaut" key. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value specifies the status of the given virtual key. If the high-order bit is 1, the key is down; otherwise, it is up. If the low-order bit is 1, the key is toggled. A key, such as the CAPS LOCK key, is toggled if it is turned on. The key is off and untoggled if the low-order bit is 0. A toggle key's indicator light (if any) on the keyboard will be on when the key is toggled, and off when the key is untoggled. </P>

<P><B>Remarks</B></P>

<P>The key status returned from this function changes as a given thread reads key messages from its message queue. The status does not reflect the interrupt-level state associated with the hardware. Use the <A HREF="581c6d.htm"><B>GetAsyncKeyState</B></A> function to retrieve that information. </P>

<P>An application calls <B>GetKeyState</B> in response to a keyboard-input message. This function retrieves the state of the key when the input message was generated. </P>

<P>To retrieve state information for all the virtual keys, use the <A HREF="126loed.htm"><B>GetKeyboardState</B></A> function. </P>

<P>An application can use the virtual-key code constants VK_SHIFT, VK_CONTROL, and VK_MENU as values for the <I>nVirtKey</I> parameter. This gives the status of the SHIFT, CTRL, or ALT keys without distinguishing between left and right. An application can also use the following virtual-key code constants as values for <I>nVirtKey</I> to distinguish between the left and right instances of those keys: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=25%>VK_LSHIFT</TD>
<TD width=75%>VK_RSHIFT</TD>
</TR>

<TR VALIGN="top">
<TD width=25%>VK_LCONTROL</TD>
<TD width=75%>VK_RCONTROL</TD>
</TR>

<TR VALIGN="top">
<TD width=25%>VK_LMENU</TD>
<TD width=75%>VK_RMENU</TD>
</TR>
</TABLE><BR>

<P></P>

<P>These left- and right-distinguishing constants are available to an application only through the <B>GetKeyboardState</B>, <B>SetKeyboardState</B>, <B>GetAsyncKeyState</B>, <B>GetKeyState</B>, and <B>MapVirtualKey</B> functions. </P>

<P><B>See Also</B></P>

<P><A HREF="581c6d.htm"><B>GetAsyncKeyState</B></A>, <A HREF="126loed.htm"><B>GetKeyboardState</B></A>, <A HREF="1opldc.htm"><B>MapVirtualKey</B></A>, <A HREF="2snaz5.htm"><B>SetKeyboardState</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
