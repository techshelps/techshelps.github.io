<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ShellExecute</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1xmcym5"></A><B>ShellExecute  <A HREF="0ibyf8.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="9ymza7.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="k0wmjb.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>ShellExecute</B> function opens or prints a specified file. The file can be an executable file or a document file. See <A HREF="28ru_hc.htm"><B>ShellExecuteEx</B></A> also. </P>

<P><B>HINSTANCE ShellExecute(</B></P>

<TABLE cols=2 width=575>

<TR VALIGN="top">
<TD width=34%><B>HWND</B> <I>hwnd</I><B>,</B></TD>
<TD width=66%>// handle to parent window</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    LPCTSTR</B> <I>lpOperation</I><B>,</B></TD>
<TD width=66%>// pointer to string that specifies operation to perform</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    LPCTSTR</B> <I>lpFile</I><B>,</B></TD>
<TD width=66%>// pointer to filename or folder name string</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    LPCTSTR</B> <I>lpParameters</I><B>,</B></TD>
<TD width=66%>// pointer to string that specifies executable-file parameters </TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    LPCTSTR</B> <I>lpDirectory</I><B>,</B></TD>
<TD width=66%>// pointer to string that specifies default directory</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    INT</B> <I>nShowCmd</I> </TD>
<TD width=66%>// whether file is shown when opened</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>   );</B></TD>
<TD width=66%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hwnd</I></P>

<P>Specifies a parent window. This window receives any message boxes that an application produces. For example, an application may report an error by producing a message box.</P>

<P><I>lpOperation</I></P>

<P>Pointer to a null-terminated string that specifies the operation to perform. The following operation strings are valid:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=35%><B>String</B></TD>
<TD width=65%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=35%>"open"</TD>
<TD width=65%>The function opens the file specified by <I>lpFile</I>. The file can be an executable file or a document file. The file can be a folder to open.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>"print"</TD>
<TD width=65%>The function prints the file specified by <I>lpFile</I>. The file should be a document file. If the file is an executable file, the function opens the file, as if "open" had been specified.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>"explore"</TD>
<TD width=65%>The function explores the folder specified by <I>lpFile</I>. </TD>
</TR>
</TABLE><BR>

<P></P>

<P>The <I>lpOperation</I> parameter can be NULL. In that case, the function opens the file specified by <I>lpFile</I>. </P>

<P><I>lpFile</I></P>

<P>Pointer to a null-terminated string that specifies the file to open or print or the folder to open or explore. The function can open an executable file or a document file. The function can print a document file. </P>

<P><I>lpParameters</I></P>

<P>If <I>lpFile</I> specifies an executable file, <I>lpParameters</I> is a pointer to a null-terminated string that specifies parameters to be passed to the application.</P>

<P>If <I>lpFile</I> specifies a document file, <I>lpParameters </I>should be NULL. </P>

<P><I>lpDirectory</I></P>

<P>Pointer to a null-terminated string that specifies the default directory. </P>

<P><I>nShowCmd</I></P>

<P>If <I>lpFile</I> specifies an executable file, <I>nShowCmd</I> specifies how the application is to be shown when it is opened.  This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Value</B></TD>
<TD width=57%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_HIDE</TD>
<TD width=57%>Hides the window and activates another window.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_MAXIMIZE</TD>
<TD width=57%>Maximizes the specified window.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_MINIMIZE</TD>
<TD width=57%>Minimizes the specified window and activates the next top-level window in the Z order.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_RESTORE</TD>
<TD width=57%>Activates and displays the window. If the window is minimized or maximized, Windows restores it to its original size and position. An application should specify this flag when restoring a minimized window.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOW</TD>
<TD width=57%>Activates the window and displays it in its current size and position. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWDEFAULT</TD>
<TD width=57%>Sets the show state based on the SW_ flag specified in the <A HREF="d.kh8s.htm"><B>STARTUPINFO</B></A> structure passed to the <A HREF="5fbj_xx.htm"><B>CreateProcess</B></A> function by the program that started the application. An application should call <B>ShowWindow</B> with this flag to set the initial show state of its main window.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWMAXIMIZED</TD>
<TD width=57%>Activates the window and displays it as a maximized window.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWMINIMIZED</TD>
<TD width=57%>Activates the window and displays it as a minimized window.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWMINNOACTIVE</TD>
<TD width=57%>Displays the window as a minimized window. The active window remains active.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWNA</TD>
<TD width=57%>Displays the window in its current state. The active window remains active.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWNOACTIVATE</TD>
<TD width=57%>Displays a window in its most recent size and position. The active window remains active.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWNORMAL</TD>
<TD width=57%>Activates and displays a window. If the window is minimized or maximized, Windows restores it to its original size and position. An application should specify this flag when displaying the window for the first time.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If <I>lpFile</I> specifies a document file, <I>nShowCmd </I>should be zero. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the instance handle of the application that was run, or the handle of a dynamic data exchange (DDE) server application.</P>

<P>If the function fails, the return value is an error value that is less than or equal to 32. The following table lists these error values:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=45%><B>Value</B></TD>
<TD width=55%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=45%>0</TD>
<TD width=55%>The operating system is out of memory or resources.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>ERROR_FILE_NOT_FOUND</TD>
<TD width=55%>The specified file was not found.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>ERROR_PATH_NOT_FOUND</TD>
<TD width=55%>The specified path was not found.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>ERROR_BAD_FORMAT</TD>
<TD width=55%>The .EXE file is invalid (non-Win32 .EXE or error in .EXE image).</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_ACCESSDENIED</TD>
<TD width=55%>The operating system denied access to the specified file. </TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_ASSOCINCOMPLETE</TD>
<TD width=55%>The filename association is incomplete or invalid.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_DDEBUSY</TD>
<TD width=55%>The DDE transaction could not be completed because other DDE transactions were being processed.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_DDEFAIL</TD>
<TD width=55%>The DDE transaction failed.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_DDETIMEOUT</TD>
<TD width=55%>The DDE transaction could not be completed because the request timed out.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_DLLNOTFOUND</TD>
<TD width=55%>The specified dynamic-link library was not found. </TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_FNF</TD>
<TD width=55%>The specified file was not found. </TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_NOASSOC</TD>
<TD width=55%>There is no application associated with the given filename extension.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_OOM</TD>
<TD width=55%>There was not enough memory to complete the operation.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_PNF</TD>
<TD width=55%>The specified path was not found.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%>SE_ERR_SHARE</TD>
<TD width=55%>A sharing violation occurred.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Remarks</B></P>

<P>The file specified by the <I>lpFile</I> parameter can be a document file or an executable file. If the file is a document file, the <B>ShellExecute</B> function opens or prints it, depending on the value of the <I>lpOperation</I> parameter. If the file is an executable file, the <B>ShellExecute</B> function opens it, even if <I>lpOperation</I> specifies printing. </P>

<P>You can use <B>ShellExecute</B> to open or explore a shell folder. To open a folder, use either of the following calls:</P>

<P>ShellExecute(handle, NULL, path_to_folder, NULL, NULL, SW_SHOWNORMAL);</P>

<P>or</P>

<P></P>

<P>ShellExecute(handle, "open", path_to_folder, NULL, NULL, SW_SHOWNORMAL);</P>

<P></P>

<P>To explore a folder, use the following call:</P>

<P>ShellExecute(handle, "explore", path_to_folder, NULL, NULL, SW_SHOWNORMAL);</P>

<P></P>

<P>If <I>lpOperation</I> is NULL, the function opens the file specified by <I>lpFile</I>. If <I>lpOperation</I> is "open" or "explore", the function will force an open window or explorer.</P>

<P><B>See Also</B></P>

<P><A HREF="9qi.et.htm"><B>FindExecutable</B></A>, <A HREF="28ru_hc.htm"><B>ShellExecuteEx</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
