<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TlsAlloc</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="qzkzro"></A><B>TlsAlloc  <A HREF="2ful68.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="glns2h.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="7wnz9r.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>TlsAlloc</B> function allocates a thread local storage (TLS) index. Any thread of the process can subsequently use this index to store and retrieve values that are local to the thread. </P>

<P><B>DWORD TlsAlloc(VOID)<BR>
 </B></P>

<P><B>Parameters</B></P>

<P>This function has no parameters. </P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a TLS index.</P>

<P>If the function fails, the return value is 0xFFFFFFFF. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The threads of the process can use the TLS index in subsequent calls to the <A HREF="3hllfbu.htm"><B>TlsFree</B></A>, <A HREF="d9lju_.htm"><B>TlsSetValue</B></A>, or <A HREF="t9hgy4.htm"><B>TlsGetValue</B></A> functions. </P>

<P>TLS indexes are typically allocated during process or dynamic-link library (DLL) initialization. Once allocated, each thread of the process can use a TLS index to access its own TLS storage slot. To store a value in its slot, a thread specifies the index in a call to <B>TlsSetValue</B>. The thread specifies the same index in a subsequent call to <B>TlsGetValue</B>, to retrieve the stored value. </P>

<P>The constant TLS_MINIMUM_AVAILABLE defines the minimum number of TLS indexes available in each process. This minimum is guaranteed to be at least 64 for all systems. </P>

<P>TLS indexes are not valid across process boundaries. A DLL cannot assume that an index assigned in one process is valid in another process. </P>

<P>A DLL might use <B>TlsAlloc</B>, <A HREF="d9lju_.htm"><B>TlsSetValue</B></A>, <A HREF="t9hgy4.htm"><B>TlsGetValue</B></A>, and <A HREF="3hllfbu.htm"><B>TlsFree</B></A> as follows: </P>

<P>1.When a DLL attaches to a process, the DLL uses <B>TlsAlloc</B> to allocate a TLS index. The DLL then allocates some dynamic storage and uses the TLS index in a call to <B>TlsSetValue</B> to store the address in the TLS slot. This concludes the per-thread initialization for the initial thread of the process. The TLS index is stored in a global or static variable of the DLL. </P>

<P>2.Each time the DLL attaches to a new thread of the process, the DLL allocates some dynamic storage for the new thread and uses the TLS index in a call to <B>TlsSetValue</B> to store the address in the TLS slot. This concludes the per-thread initialization for the new thread. </P>

<P>3.Each time an initialized thread makes a DLL call requiring the data in its dynamic storage, the DLL uses the TLS index in a call to <B>TlsGetValue</B> to retrieve the address of the dynamic storage for that thread. </P>

<P></P>

<P>For additional information on thread local storage, see <A HREF="gr8f0v.htm">Thread Local Storage</A>. </P>

<P><B>See Also</B></P>

<P><A HREF="3hllfbu.htm"><B>TlsFree</B></A>, <A HREF="t9hgy4.htm"><B>TlsGetValue</B></A>, <A HREF="d9lju_.htm"><B>TlsSetValue</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
