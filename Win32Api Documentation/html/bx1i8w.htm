<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Writing a Service Program's main Function</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="bx1i8w"></A><B>Writing a Service Program's main Function</B></P>

<P>The main function of a service program calls the <A HREF="1qmq_hc.htm"><B>StartServiceCtrlDispatcher</B></A> function to connect to the SCM and start the control dispatcher thread. The dispatcher thread loops, waiting for incoming control requests for the services specified in the dispatch table. This thread does not return until there is an error or all of the services in the process have terminated. When all services in a process have terminated, the SCM sends a control request to the dispatcher thread telling it to shut down. The thread can then return from the <B>StartServiceCtrlDispatcher</B> call and the process can terminate.</P>

<P>The following example is a service process that supports only one service. It takes two parameters: a string that can contain one formatted output character and a numeric value to be used as the formatted character. The SvcDebugOut function prints informational messages and errors to the debugger. </P>

<P>SERVICE_STATUS          MyServiceStatus;  </P>

<P>SERVICE_STATUS_HANDLE   MyServiceStatusHandle; </P>

<P></P>

<P>VOID  MyServiceStart (DWORD argc, LPTSTR *argv); </P>

<P>VOID  MyServiceCtrlHandler (DWORD opcode); </P>

<P>DWORD MyServiceInitialization (DWORD argc, LPTSTR *argv, </P>

<P>DWORD *specificError); </P>

<P></P>

<P>VOID _CRTAPI1 main( ) </P>

<P>{ </P>

<P>SERVICE_TABLE_ENTRY   DispatchTable[] = </P>

<P>{ </P>

<P>{ TEXT("MyService"), MyServiceStart      }, </P>

<P>{ NULL,              NULL                } </P>

<P>}; </P>

<P></P>

<P>if (!StartServiceCtrlDispatcher( DispatchTable)) </P>

<P>{ </P>

<P>SvcDebugOut(" [MY_SERVICE] StartServiceCtrlDispatcher error = </P>

<P>%d\n", GetLastError()); </P>

<P>} </P>

<P>} </P>

<P></P>

<P>VOID SvcDebugOut(LPSTR String, DWORD Status) </P>

<P>{ </P>

<P>CHAR  Buffer[1024]; </P>

<P>if (strlen(String) &lt; 1000) </P>

<P>{ </P>

<P>sprintf(Buffer, String, Status); </P>

<P>OutputDebugStringA(Buffer); </P>

<P>} </P>

<P>} </P>

<P></P>

<P>If your service program supports multiple services, the implementation of the main function will differ slightly. The names of the additional services should be added to the dispatch table so they can be monitored by the dispatcher thread. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
