<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>WinMain</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="12si984"></A><B>WinMain  <A HREF="2mwnzb4.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1p1lg2i.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="3fix.ad.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>WinMain</B> function is called by the system as the initial entry point for a Win32-based application. </P>

<P><B>int WINAPI WinMain(</B></P>

<TABLE cols=2 width=426>

<TR VALIGN="top">
<TD width=51%><B>HINSTANCE</B> <I>hInstance</I><B>,</B></TD>
<TD width=49%>// handle to current instance</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    HINSTANCE</B> <I>hPrevInstance</I><B>,</B></TD>
<TD width=49%>// handle to previous instance</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    LPSTR</B> <I>lpCmdLine</I><B>,</B></TD>
<TD width=49%>// pointer to command line</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>    int</B> <I>nCmdShow</I> </TD>
<TD width=49%>// show state of window</TD>
</TR>

<TR VALIGN="top">
<TD width=51%><B>   );</B></TD>
<TD width=49%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hInstance</I></P>

<P>Identifies the current instance of the application. </P>

<P><I>hPrevInstance</I></P>

<P>Identifies the previous instance of the application. For a Win32-based application, this parameter is always NULL. If you need to detect whether another instance already exists, create a named mutex using the <A HREF="jeyqaz.htm"><B>CreateMutex</B></A> function. If the <A HREF="11c2vs7.htm"><B>GetLastError</B></A> function returns ERROR_ALREADY_EXISTS, another instance of your application exists (it created the mutex).</P>

<P><I>lpCmdLine</I></P>

<P>Points to a null-terminated string specifying the command line for the application. </P>

<P><I>nCmdShow</I></P>

<P>Specifies how the window is to be shown. This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Value</B></TD>
<TD width=57%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_HIDE</TD>
<TD width=57%>Hides the window and activates another window.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_MINIMIZE</TD>
<TD width=57%>Minimizes the specified window and activates the top-level window in the system's list.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_RESTORE</TD>
<TD width=57%>Activates and displays a window. If the window is minimized or maximized, Windows restores it to its original size and position (same as SW_SHOWNORMAL).</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOW</TD>
<TD width=57%>Activates a window and displays it in its current size and position.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWMAXIMIZED</TD>
<TD width=57%>Activates a window and displays it as a maximized window.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWMINIMIZED</TD>
<TD width=57%>Activates a window and displays it as an icon.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWMINNOACTIVE</TD>
<TD width=57%>Displays a window as an icon. The active window remains active.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWNA</TD>
<TD width=57%>Displays a window in its current state. The active window remains active.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWNOACTIVATE</TD>
<TD width=57%>Displays a window in its most recent size and position. The active window remains active.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>SW_SHOWNORMAL</TD>
<TD width=57%>Activates and displays a window. If the window is minimized or maximized, Windows restores it to its original size and position (same as SW_RESTORE).</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, terminating when it receives a WM_QUIT message, it should return the exit value contained in that message's <I>wParam</I> parameter. If the function terminates before entering the message loop, it should return 0. </P>

<P><B>Remarks</B></P>

<P><B>WinMain</B> initializes an application, displays its main window, and then enters a message retrieval-and-dispatch loop that is the top-level control structure for the remainder of the application's execution. The message loop terminates when a WM_QUIT message is received. At that point, <B>WinMain</B> exits the application, returning the value passed in the WM_QUIT message's <I>wParam</I> parameter. If WM_QUIT was received as a result of calling <B>PostQuitMessage</B>, the value of <I>wParam</I> is the value of the <B>PostQuitMessage</B> function's <I>nExitCode</I> parameter. For more information, see <A HREF="dn3.zj.htm">Creating a Message Loop</A>.</P>

<P><B>See Also</B></P>

<P><A HREF="jeyqaz.htm"><B>CreateMutex</B></A>, <A HREF="20gx08e.htm"><B>DispatchMessage</B></A>, <A HREF="ixkdtp.htm"><B>GetMessage</B></A>, <A HREF="2a2_ss3.htm"><B>PostQuitMessage</B></A>, <A HREF="fhwolf.htm"><B>TranslateMessage</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
