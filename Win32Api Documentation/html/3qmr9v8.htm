<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Exception-Handler Syntax</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3qmr9v8"></A><B>Exception-Handler Syntax</B></P>

<P>The <B>try</B> and <B>except</B> keywords are used to construct a frame-based exception handler. The following example shows the structure of a <B>try</B>-<B>except</B> exception handler. </P>

<P>try {  </P>

<P></P>

<P>// guarded body of code </P>

<P></P>

<P>} </P>

<P>except (filter-expression) { </P>

<P></P>

<P>// exception-handler block </P>

<P></P>

<P>} </P>

<P></P>

<P>Note that the <B>try</B> block and the exception-handler block require braces ({}). Using a <B>goto</B> statement to jump into the body of a <B>try</B> block or into an exception-handler block is not permitted. This rule applies to both <B>try</B>-<B>except</B> and <B>try</B>-<B>finally</B> statements. </P>

<P>The <B>try</B> block contains the guarded body of code that the exception handler protects. A function can have any number of <B>try</B>-<B>except</B> statements, and these exception-handling statements can be nested within the same function or in different functions. If an exception occurs within the <B>try</B> block, the system takes control and begins the search for an exception handler. For a detailed description of this search, see <A HREF="sfjez2.htm">Exception Handling</A>.</P>

<P>The exception handler receives only exceptions that occur within a single thread. This means that if a <B>try</B> block contains a call to the <A HREF="5fbj_xx.htm"><B>CreateProcess</B></A> or <A HREF="70ts0y.htm"><B>CreateThread</B></A> function, exceptions that occur within the new process or thread are not dispatched to this handler. </P>

<P>The system evaluates the filter expression of each exception handler guarding the code in which the exception occurred until either the exception is handled or there are no more handlers. A filter expression must be evaluated as one of the three following values. </P>

<TABLE cols=6>

<TR VALIGN="top">
<TD colspan=2 width=11%><B>Value</B></TD>
<TD colspan=3 width=76%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>EXCEPTION_EXECUTE_HANDLER</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The system transfers control to the exception handler, and execution continues in the stack frame in which the handler is found.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>EXCEPTION_CONTINUE_SEARCH</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The system continues to search for a handler.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>EXCEPTION_CONTINUE_EXECUTION</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The system stops its search for a handler and returns control to the point at which the exception occurred. If the exception is noncontinuable, this results in a EXCEPTION_NONCONTINUABLE_EXCEPTION exception.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>The filter expression is evaluated in the context of the function in which the <B>try</B>-<B>except</B> statement is located, even though the exception may have occurred in a different function. This means that the filter expression can access the function's local variables. Similarly, the exception-handler block can access the local variables of the function in which it is located. </P>

<P>For more information about filter expressions and filter functions, see <A HREF="xmteit.htm">Frame-based Exception Handling</A>.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
