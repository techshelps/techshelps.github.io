<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Creating Accelerators for Font Attributes</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="9awihc"></A><B>Creating Accelerators for Font Attributes</B></P>

<P>The example in this section shows how to perform the following tasks: </P>

<P>·Create an accelerator-table resource. </P>

<P>·Load the accelerator table at run time. </P>

<P>·Translate accelerators in a message loop. </P>

<P>·Process <A HREF="71v.3j.htm">WM_COMMAND</A> messages generated by the accelerators. </P>

<P></P>

<P>These tasks are demonstrated in the context of an application that includes a Character menu and corresponding accelerators that allow the user to select attributes of the current font. </P>

<P>The following portion of a resource-definition file defines the Character menu and the associated accelerator table. Note that the menu items show the accelerator keystrokes and that each accelerator has the same identifier as its associated menu item. </P>

<P>#include &lt;windows.h&gt;  </P>

<P>#include "acc.h" </P>

<P></P>

<P>MainMenu MENU </P>

<P>BEGIN </P>

<P>POPUP   "&amp;Character" </P>

<P>BEGIN </P>

<P>MENUITEM    "&amp;Regular\tF5",         IDM_REGULAR </P>

<P>MENUITEM    "&amp;Bold\tCtrl+B",        IDM_BOLD </P>

<P>MENUITEM    "&amp;Italic\tCtrl+I",      IDM_ITALIC </P>

<P>MENUITEM    "&amp;Underline\tCtrl+U",   IDM_ULINE </P>

<P>END </P>

<P>END </P>

<P></P>

<P>FontAccel ACCELERATORS </P>

<P>BEGIN </P>

<P>VK_F5,  IDM_REGULAR,    VIRTKEY </P>

<P>"B",    IDM_BOLD,       CONTROL, VIRTKEY </P>

<P>"I",    IDM_ITALIC,     CONTROL, VIRTKEY </P>

<P>"U",    IDM_ULINE,      CONTROL, VIRTKEY </P>

<P>END </P>

<P></P>

<P>The following sections from the application's source file show how to implement the accelerators. </P>

<P>HWND hwndMain;      /* handle of main window          */  </P>

<P>HANDLE hinstAcc;    /* handle of application instance */ </P>

<P></P>

<P>int WINAPI WinMain(hinst, hinstPrev, lpCmdLine, nCmdShow) </P>

<P>HINSTANCE hinst; </P>

<P>HINSTANCE hinstPrev; </P>

<P>LPSTR lpCmdLine; </P>

<P>int nCmdShow; </P>

<P>{ </P>

<P>MSG msg;            /* application messages              */ </P>

<P>HACCEL haccel;      /* handle of accelerator table       */ </P>

<P></P>

<P>. </P>

<P>. /* Perform the initialization procedure. */ </P>

<P>. </P>

<P></P>

<P>/* Create a main window for this application instance.  */ </P>

<P></P>

<P>hwndMain = CreateWindowEx(0L, "MainWindowClass", </P>

<P>"Sample Application", WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, </P>

<P>CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, NULL, NULL, </P>

<P>hinst, NULL ); </P>

<P></P>

<P>/* If a window cannot be created, return "failure." */ </P>

<P></P>

<P>if (!hwndMain) </P>

<P>return FALSE; </P>

<P></P>

<P>/* Make the window visible and update its client area. */ </P>

<P></P>

<P>ShowWindow(hwndMain, nCmdShow); </P>

<P>UpdateWindow(hwndMain); </P>

<P></P>

<P>/* Load the accelerator table. */ </P>

<P></P>

<P>haccel = LoadAccelerators(hinstAcc, "FontAccel"); </P>

<P>if (haccel == NULL) </P>

<P>HandleAccelErr(ERR_LOADING);     /* application defined */ </P>

<P></P>

<P>/* </P>

<P>* Get and dispatch messages until a WM_QUIT message is </P>

<P>* received. </P>

<P>*/ </P>

<P></P>

<P>while (GetMessage(&amp;msg, NULL, NULL, NULL)) { </P>

<P></P>

<P>/* Check for accelerator keystrokes. */ </P>

<P></P>

<P>if (!TranslateAccelerator( </P>

<P>hwndMain,      /* handle of receiving window    */ </P>

<P>haccel,        /* handle of active accel. table */ </P>

<P>&amp;msg)) {       /* address of message data       */ </P>

<P>TranslateMessage(&amp;msg); </P>

<P>DispatchMessage(&amp;msg); </P>

<P>} </P>

<P>} </P>

<P>return msg.wParam; </P>

<P>} </P>

<P></P>

<P>LRESULT APIENTRY MainWndProc(hwndMain, uMsg, wParam, lParam) </P>

<P>HWND hwndMain; </P>

<P>UINT uMsg; </P>

<P>WPARAM wParam; </P>

<P>LPARAM lParam; </P>

<P>{ </P>

<P>BYTE fbFontAttrib;        /* array of font-attribute flags  */ </P>

<P>static HMENU hmenu;       /* handle of main menu            */ </P>

<P></P>

<P>switch (uMsg) { </P>

<P>case WM_CREATE: </P>

<P></P>

<P>/* </P>

<P>* Add a check mark to the Regular menu item to </P>

<P>* indicate that it is the default. </P>

<P>*/ </P>

<P></P>

<P>hmenu = GetMenu(hwndMain); </P>

<P>CheckMenuItem(hmenu, IDM_REGULAR, MF_BYCOMMAND | </P>

<P>MF_CHECKED); </P>

<P>return 0; </P>

<P></P>

<P>case WM_COMMAND: </P>

<P>switch (LOWORD(wParam)) { </P>

<P></P>

<P>/* Process the accelerator and menu commands. */ </P>

<P></P>

<P>case IDM_REGULAR: </P>

<P>case IDM_BOLD: </P>

<P>case IDM_ITALIC: </P>

<P>case IDM_ULINE: </P>

<P></P>

<P>/* </P>

<P>* GetFontAttributes is an application-defined </P>

<P>* function that sets the menu-item check marks </P>

<P>* and returns the user-selected font attributes. </P>

<P>*/ </P>

<P></P>

<P>fbFontAttrib = GetFontAttributes( </P>

<P>(BYTE) LOWORD(wParam), hmenu); </P>

<P></P>

<P>/* </P>

<P>* SetFontAttributes is an application-defined </P>

<P>* function that creates a font with the </P>

<P>* user-specified attributes the font with </P>

<P>* the main window's device context. </P>

<P>*/ </P>

<P></P>

<P>SetFontAttributes(fbFontAttrib); </P>

<P>break; </P>

<P></P>

<P>default: </P>

<P>break; </P>

<P>} </P>

<P>break; </P>

<P></P>

<P>. </P>

<P>. /* Process other messages. */ </P>

<P>. </P>

<P></P>

<P>default: </P>

<P>return DefWindowProc(hwndMain, uMsg, wParam, lParam); </P>

<P>} </P>

<P>return NULL; </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
