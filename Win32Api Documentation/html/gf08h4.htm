<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Blocking and Nonblocking Pipe Operations</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="gf08h4"></A><B>Blocking and Nonblocking Pipe Operations</B></P>

<P>The wait mode (blocking or nonblocking) of a pipe handle determines whether the <A HREF="cjnd8p.htm"><B>ReadFile</B></A>, <A HREF="g0sox_.htm"><B>WriteFile</B></A>, and <A HREF="ksa3sm.htm"><B>ConnectNamedPipe</B></A> functions return immediately in situations that would otherwise require an indefinite wait. By default, all named pipe handles returned by the <A HREF="21dzyt.htm"><B>CreateNamedPipe</B></A> or <A HREF="xn35yd.htm"><B>CreateFile</B></A> function are created with blocking-wait mode enabled. Nonblocking-wait mode can be enabled for a server's pipe handle by specifying PIPE_NOWAIT in <B>CreateNamedPipe</B>. Both server and client processes can change a pipe handle's wait mode by specifying either PIPE_WAIT or PIPE_NOWAIT in a call to the <A HREF="ap5lb1.htm"><B>SetNamedPipeHandleState</B></A> function. </P>

<P>Note that nonblocking-wait mode is supported for compatibility with Microsoft® LAN Manager version 2.0, and it should not be used to achieve overlapped input and output (I/O) with named pipes. Overlapped I/O should be used instead because it enables time-consuming <B>ReadFile</B>, <B>WriteFile</B>, and <B>ConnectNamedPipe</B> operations to execute in the background after the function returns. For more information about overlapped I/O, see <A HREF="1xqxdbb.htm">Synchronous and Overlapped Input and Output</A>. </P>

<P>A <B>ReadFile</B> operation is affected by the wait mode of a pipe handle when the pipe is empty. With a blocking-wait handle, the operation is not completed successfully until data is available from a thread writing to the other end of the pipe. Using a nonblocking-wait handle, the function returns FALSE immediately, and the <A HREF="11c2vs7.htm"><B>GetLastError</B></A> function returns ERROR_NO_DATA. </P>

<P>A <B>WriteFile</B> operation is affected by a pipe handle's wait mode when there is insufficient space in the pipe's buffer to hold all the data. With a blocking-wait handle, the write operation cannot succeed until sufficient space is created in the buffer by a thread reading from the other end of the pipe. With a nonblocking-wait handle, the write operation returns TRUE immediately, without writing any bytes (for a message-type pipe) or after writing as many bytes as the buffer holds (for a byte-type pipe). </P>

<P>A <A HREF="ksa3sm.htm"><B>ConnectNamedPipe</B></A> operation is affected by the wait mode of a pipe handle when there is no client connected or waiting to connect to the pipe instance. With a blocking-wait handle, the connect operation does not succeed until a client process connects to the pipe instance by calling either the <A HREF="xn35yd.htm"><B>CreateFile</B></A> or <A HREF="6xlg_2.htm"><B>CallNamedPipe</B></A><B> </B>function. With a nonblocking-wait handle, the connect operation returns FALSE immediately, and the <B>GetLastError</B> function returns ERROR_PIPE_LISTENING. </P>

<P>The wait mode of a pipe handle does not affect read or write operations when using the <A HREF="1nuxhmk.htm"><B>TransactNamedPipe</B></A> or <B>CallNamedPipe</B> function. </P>

</BODY>
</HTML>
