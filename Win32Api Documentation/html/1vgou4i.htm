<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetFileTitle</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1vgou4i"></A><B>GetFileTitle  <A HREF="kag8ys.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="y3i0nj.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="_grvj7.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetFileTitle</B> function returns the name of the file identified by the <I>lpszFile</I> parameter. </P>

<P><B>short GetFileTitle(</B></P>

<TABLE cols=2 width=433>

<TR VALIGN="top">
<TD width=37%><B>LPCTSTR</B> <I>lpszFile</I><B>,</B></TD>
<TD width=63%>// pointer to full path and filename for file</TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    LPTSTR</B> <I>lpszTitle</I><B>,</B></TD>
<TD width=63%>// pointer to buffer that receives filename</TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    WORD</B> <I>cbBuf</I> </TD>
<TD width=63%>// length of buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>   );</B></TD>
<TD width=63%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpszFile</I></P>

<P>Pointer to the name and location of a file. </P>

<P><I>lpszTitle</I></P>

<P>Pointer to a buffer into which the function is to copy the name of the file. </P>

<P><I>cbBuf</I></P>

<P>Specifies the length, in characters, of the buffer pointed to by the <I>lpszTitle</I> parameter. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is zero. </P>

<P>If the filename is invalid, the return value is a negative number. </P>

<P>If the buffer pointed to by the <I>lpszTitle</I> parameter is too small, the return value is a positive integer that specifies the required buffer size, in bytes (ANSI version) or characters (Unicode version). The required buffer size includes the terminating null character. </P>

<P><B>Remarks</B></P>

<P>The <B>GetFileTitle</B> function returns an error value if the buffer pointed to by the <I>lpszFile</I> parameter contains any of the following elements: </P>

<P>유n empty string </P>

<P>유 string containing a wildcard (*), opening bracket ([), or closing bracket (]) </P>

<P>유 string that ends with a colon (:), slash mark (/), or backslash (\) </P>

<P>유 string whose length exceeded the length of the buffer </P>

<P>유n invalid character (for example, a space or an unprintable character)</P>

<P></P>

<P>To get the buffer size needed for the name of a file, call the function with <I>lpszTitle</I> set to NULL and <I>cbBuf</I> set to zero. The function will return the required size. </P>

<P><B>GetFileTitle</B> returns the string that the system would use to display the filename to the user. The display name includes an extension only if that is the user's preference for displaying filenames. This means that the returned string may not accurately identify the file if it is used in calls to file system functions.</P>

<P>If the <I>lpszTitle</I> buffer is too small, <B>GetFileTitle</B> returns the size required to hold the display name. There is no guaranteed connection between the required size and the characters originally specified in the <I>lpszFile</I> buffer. In porting applications to Windows 95 and Windows NT, developers will need to update any code that relies on such behavior in previous versions of the operating system. The most common case is code that deliberately calls <B>GetFileTitle</B> with <I>lpszTitle</I> set to NULL and <I>cbBuf</I> set to zero, and then uses the return value as an index into the <I>lpszFile</I> string. This technique is no longer supported. You can usually achieve similar results (and superior performance) with run-time library functions such as <B>strrchr</B>, <B>wcsrchr</B>, and <B>_mbsrchr</B>.</P>

<P><B>See Also</B></P>

<P><A HREF="fzgrjg.htm"><B>GetOpenFileName</B></A>, <A HREF="182.5be.htm"><B>GetSaveFileName</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
