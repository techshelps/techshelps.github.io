<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Item Identifiers and Pointers to Item Identifier Lists</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="wv3wjk"></A><B>Item Identifiers and Pointers to Item Identifier Lists</B></P>

<P>Objects in the shell's namespace are assigned item identifiers and item identifier lists. An <I>item identifier</I> uniquely identifies an item within its parent folder. An <I>item identifier list</I> uniquely identifies an item within the shell's namespace by tracing a path to the item from the desktop. A pointer to an item identifier list, which is sometimes called a PIDL (pronounced <I>piddle</I>), is used with many functions.</P>

<P>Item identifiers and PIDLs are much like the filenames and paths used in a file system. However, they share this important difference: item identifiers and PIDLs are binary data structures that never appear to the user. Item names that can be shown to the user (called <I>display names</I>) are described in <A HREF="116.msw.htm">Display Names and Filenames</A>.</P>

<P>An item identifier is defined by the variable-length <A HREF="k1l.aq.htm"><B>SHITEMID</B></A> structure. The first two bytes of this structure specify its size, and the format of the remaining bytes depends on the parent folder, or more precisely on the software that implements the parent folder's <A HREF="113z9we.htm"><B>IShellFolder</B></A> interface. Except for the first two bytes, item identifiers are not strictly defined, and applications should make no assumptions about their format. To determine whether two item identifiers are equal, an application can use the <A HREF="52r9w3.htm"><B>IShellFolder::CompareIDs</B></A> member function.</P>

<P>The <A HREF="16gub2n.htm"><B>ITEMIDLIST</B></A> structure defines an element in an item identifier list (the only member of this structure is an <B>SHITEMID</B> structure). An item identifier list consists of one or more consecutive <B>ITEMIDLIST</B> structures packed on byte boundaries, followed by a 16-bit zero value. An application can walk a list of item identifiers by examining the size specified in each <B>SHITEMID</B> structure and stopping when it finds a size of zero.</P>

<P>Item identifier lists are almost always allocated using the shell's allocator (an <B>IMalloc</B> interface that you can retrieve by using the <A HREF="3yu.3u5.htm"><B>SHGetMalloc</B></A> function). For example, some shell functions create an item identifier list and return a PIDL to it. In such cases, it is usually the application's responsibility to free the PIDL using the shell's allocator. Note that the <B>SHGetMalloc</B> function retrieves the task allocator for OLE applications.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
