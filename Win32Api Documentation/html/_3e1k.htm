<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>LOGBRUSH</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="_3e1k"></A><B>LOGBRUSH  <A HREF="c2qkvz.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="2n4x11e.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1237axb.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>LOGBRUSH</B> structure defines the style, color, and pattern of a physical brush. It is used by the <A HREF="ojupv1.htm"><B>CreateBrushIndirect</B></A> and <A HREF="6kg3d6.htm"><B>ExtCreatePen</B></A> functions. </P>

<P>typedef struct tagLOGBRUSH { // lb  </P>

<P>UINT     lbStyle; </P>

<P>COLORREF lbColor; </P>

<P>LONG     lbHatch; </P>

<P>} LOGBRUSH; </P>

<P></P>

<P><B>Members</B></P>

<P><B>lbStyle</B></P>

<P>Specifies the brush style. The <B>lbStyle</B> member must be one of the following styles: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=35%><B>Value</B></TD>
<TD width=65%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_DIBPATTERN</TD>
<TD width=65%>A pattern brush defined by a device-independent bitmap (DIB) specification. If <B>lbStyle</B> is BS_DIBPATTERN, the <B>lbHatch</B> member contains a handle to a packed DIB.
<P><B>Windows 95:</B> Creating brushes from bitmaps or DIBs larger than 8x8 pixels is not supported. If a larger bitmap is given, only a portion of the bitmap is used.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_DIBPATTERN8X8</TD>
<TD width=65%>Same as BS_DIBPATTERN.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_DIBPATTERNPT</TD>
<TD width=65%>A pattern brush defined by a device-independent bitmap (DIB) specification. If <B>lbStyle</B> is BS_DIBPATTERNPT, the <B>lbHatch</B> member contains a pointer to a packed DIB.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_HATCHED</TD>
<TD width=65%>Hatched brush.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_HOLLOW</TD>
<TD width=65%>Hollow brush.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_NULL</TD>
<TD width=65%>Same as BS_HOLLOW.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_PATTERN</TD>
<TD width=65%>Pattern brush defined by a memory bitmap.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_PATTERN8X8</TD>
<TD width=65%>Same as BS_PATTERN.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%>BS_SOLID</TD>
<TD width=65%>Solid brush.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>lbColor</B></P>

<P>Specifies the color in which the brush is to be drawn. If <B>lbStyle</B> is the BS_HOLLOW or BS_PATTERN style, <B>lbColor</B> is ignored. </P>

<P>If <B>lbStyle</B> is BS_DIBPATTERN or BS_DIBPATTERNBT, the low-order word of <B>lbColor</B> specifies whether the <B>bmiColors</B> members of the <A HREF=".2pxnh.htm"><B>BITMAPINFO</B></A> structure contain explicit red, green, blue (RGB) values or indices into the currently realized logical palette. The <B>lbColor</B> member must be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%><B>Value</B></TD>
<TD width=67%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=33%>DIB_PAL_COLORS</TD>
<TD width=67%>The color table consists of an array of 16-bit indices into the currently realized logical palette.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%>DIB_RGB_COLORS</TD>
<TD width=67%>The color table contains literal RGB values.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>lbHatch</B></P>

<P>Specifies a hatch style. The meaning depends on the brush style defined by <B>lbStyle</B>. </P>

<P>If <B>lbStyle</B> is BS_DIBPATTERN, the <B>lbHatch</B> member contains a handle to a packed DIB. If <B>lbStyle</B> is BS_DIBPATTERNPT, the <B>lbHatch</B> member contains a pointer to a packed DIB. </P>

<P>If <B>lbStyle</B> is BS_HATCHED, the <B>lbHatch</B> member specifies the orientation of the lines used to create the hatch. It can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=32%><B>Value</B></TD>
<TD width=68%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=32%>HS_BDIAGONAL</TD>
<TD width=68%>A 45-degree upward, left-to-right hatch</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>HS_CROSS</TD>
<TD width=68%>Horizontal and vertical cross-hatch</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>HS_DIAGCROSS</TD>
<TD width=68%>45-degree crosshatch</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>HS_FDIAGONAL</TD>
<TD width=68%>A 45-degree downward, left-to-right hatch</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>HS_HORIZONTAL</TD>
<TD width=68%>Horizontal hatch</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>HS_VERTICAL</TD>
<TD width=68%>Vertical hatch</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If <B>lbStyle</B> is BS_PATTERN, <B>lbHatch</B> is a handle to the bitmap that defines the pattern. The bitmap cannot be a DIB section bitmap, which is created by the <B>CreateDIBSection</B> function.</P>

<P>If <B>lbStyle</B> is BS_SOLID or BS_HOLLOW, <B>lbHatch</B> is ignored. </P>

<P></P>

<P><B>Remarks</B></P>

<P>Although <B>lbColor</B> controls the foreground color of a hatch brush, the <B>SetBkMode</B> and <B>SetBkColor</B> functions control the background color. </P>

<P><B>See Also</B></P>

<P><A HREF=".2pxnh.htm"><B>BITMAPINFO</B></A>, <A HREF="ojupv1.htm"><B>CreateBrushIndirect</B></A>, <A HREF="gsao6s.htm"><B>CreateDIBSection</B></A>, <A HREF="6kg3d6.htm"><B>ExtCreatePen</B></A>, <A HREF=".d41rh.htm"><B>SetBkColor</B></A>, <A HREF="1crgouh.htm"><B>SetBkMode</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
