<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Absolute and Self-Relative Security Descriptors</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2n448_q"></A><B>Absolute and Self-Relative Security Descriptors</B></P>

<P>A security descriptor can be in either <I>absolute</I> or <I>self-relative</I> format. In absolute format, a security descriptor contains pointers to its information, not the information itself. In self-relative format, a security descriptor stores a <A HREF="188mr8k.htm"><B>SECURITY_DESCRIPTOR</B></A> structure and associated security information in a contiguous block of memory. You can use the <A HREF="jhoofn.htm"><B>MakeSelfRelativeSD</B></A> and <A HREF="1_idd.h.htm"><B>MakeAbsoluteSD</B></A> functions for converting between these two formats. </P>

<P>The absolute format is useful when default settings for the owner, group, and discretionary ACL are available. In this case, you can simply call the <A HREF="sub91n.htm"><B>InitializeSecurityDescriptor</B></A> function to initialize a <A HREF="188mr8k.htm"><B>SECURITY_DESCRIPTOR</B></A> structure and then assign pointers to preexisting components, such as SIDs and ACLs. </P>

<P>In self-relative format, a security descriptor always begins with a <B>SECURITY_DESCRIPTOR</B> structure, but the other components of the security descriptor can follow the structure in any order. Instead of using memory addresses, the security descriptor's components are identified by offsets from the beginning of the descriptor. This format is useful when a security descriptor must be stored on disk, transmitted by means of a communications protocol, or copied in memory. </P>

<P>All Win32 functions that return a security descriptor do so using the self-relative format. Security descriptors passed back to the operating system can be in either self-relative or absolute form, depending on the situation. </P>

<P>A server that copies secured objects to various media can use the <A HREF="jhoofn.htm"><B>MakeSelfRelativeSD</B></A> function to create a self-relative security descriptor from an absolute security descriptor. The <A HREF="1_idd.h.htm"><B>MakeAbsoluteSD</B></A> function can create an absolute security descriptor from a self-relative security descriptor. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
