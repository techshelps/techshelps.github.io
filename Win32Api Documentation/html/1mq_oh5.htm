<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Testing for the End of the File</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1mq_oh5"></A><B>Testing for the End of the File</B></P>

<P>The <A HREF="cjnd8p.htm"><B>ReadFile</B></A> function checks for the end-of-file condition (eof) differently for synchronous and asynchronous read operations. When a synchronous read operation reaches the end of a file, <B>ReadFile</B> returns TRUE and sets the variable pointed to by <I>lpNumberOfBytesRead</I> to zero. An asynchronous read operation can encounter the end of a file during the initiating call to <B>ReadFile</B> or during subsequent asynchronous operation. </P>

<P>The test for end-of-file during a synchronous read operation is simple, as shown in the following example:</P>

<P>// attempt a synchronous read operation<BR>
bResult = ReadFile(hFile, &amp;inBuffer, nBytesToRead, &amp;nBytesRead, NULL);<BR>
// check for eof<BR>
if (bResult &amp;&amp;  nBytesRead == 0, ) {<BR>
    // we're at the end of the file<BR>
}<BR>
  </P>

<P>The test for end-of-file during an asynchronous read operation is more difficult. There are three end-of-file indicators for asynchronous read operations:</P>

<P>·<A HREF="cjnd8p.htm"><B>ReadFile</B></A> returns FALSE and <A HREF="11c2vs7.htm"><B>GetLastError</B></A> returns ERROR_HANDLE_EOF.</P>

<P>·<B>ReadFile</B> returns FALSE and <B>GetLastError</B> returns ERROR_IO_PENDING.</P>

<P>·<A HREF="kcz7oz.htm"><B>GetOverlappedResult</B></A> returns FALSE and <B>GetLastError</B> returns ERROR_HANDLE_EOF.</P>

<P></P>

<P>The following example shows how to test for an end-of-file during an asynchronous read operation:</P>

<P>// Attempt to initiate an asynchronous read operation.<BR>
bResult = ReadFile(hFile, &amp;inBuffer, nBytesToRead, &amp;nBytesRead, NULL);<BR>
 </P>

<P>// Check if there was a problem.<BR>
if (!bResult) {<BR>
    switch (dwError = GetLastError()) </P>

<P>{<BR>
        case ERROR_HANDLE_EOF: </P>

<P>// At the end of the file.</P>

<P>break;<BR>
        case ERROR_IO_PENDING: </P>

<P>// I/O pending.</P>

<P>break;<BR>
    }<BR>
}<BR>
    .<BR>
    .<BR>
    .<BR>
// Check on an asynchronous read operation.<BR>
bResult = GetOverlappedResult(hFile, &amp;gOverlapped, &amp;nBytesRead, TRUE);<BR>
</P>

<P>// Check if there was a problem.<BR>
if (!bResult) {<BR>
    switch (dwError = GetLastError()) </P>

<P>{<BR>
        case ERROR_HANDLE_EOF:<BR>
        // At the end of the file<BR>
    }<BR>
}<BR>
 </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
