<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>GetKeyNameText</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="15i3y9b"></A><B>GetKeyNameText  <A HREF="ku2d7o.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1xtfdy5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="fkf.jh.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetKeyNameText</B> function retrieves a string that represents the name of a key. </P>

<P><B>int GetKeyNameText(</B></P>

<TABLE cols=2 width=443>

<TR VALIGN="top">
<TD width=34%><B>LONG</B> <I>lParam</I><B>,</B></TD>
<TD width=66%>// second parameter of keyboard message</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    LPTSTR</B> <I>lpString</I><B>,</B></TD>
<TD width=66%>// address of buffer for key name</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>    int</B> <I>nSize</I> </TD>
<TD width=66%>// maximum length of key-name string length</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>   );</B></TD>
<TD width=66%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lParam</I></P>

<P>Specifies the second parameter of the keyboard message (such as WM_KEYDOWN) to be processed. The function interprets the following portions of <I>lParam</I>: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=16%><B>Bits</B></TD>
<TD width=84%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%>16-23</TD>
<TD width=84%>Scan code.</TD>
</TR>

<TR VALIGN="top">
<TD width=16%>24</TD>
<TD width=84%>Extended-key flag. Distinguishes some keys on an enhanced keyboard.</TD>
</TR>

<TR VALIGN="top">
<TD width=16%>25</TD>
<TD width=84%>"Don't care" bit. The application calling this function sets this bit to indicate that the function should not distinguish between left and right CTRL and SHIFT keys, for example.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpString</I></P>

<P>Points to a buffer that will receive the key name. </P>

<P><I>nSize</I></P>

<P>Specifies the maximum length, in characters, of the key name, including the terminating null character. (This parameter should be equal to the size of the buffer pointed to by the <I>lpString</I> parameter.) </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, a null-terminated string is copied into the specified buffer, and the return value is the length of the string, in characters, not counting the terminating null character. </P>

<P><B>Remarks</B></P>

<P>The format of the key-name string depends on the current keyboard layout. The keyboard driver maintains a list of names in the form of character strings for keys with names longer than a single character. The key name is translated according to the layout of the currently installed keyboard. The name of a character key is the character itself. The names of dead keys are spelled out in full. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
