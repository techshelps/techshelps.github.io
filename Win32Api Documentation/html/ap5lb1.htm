<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SetNamedPipeHandleState</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="ap5lb1"></A><B>SetNamedPipeHandleState  <A HREF="1mlfcl4.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qxj_so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1p87g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SetNamedPipeHandleState</B> function sets the read mode and the blocking mode of the specified named pipe. If the specified handle is to the client end of a named pipe and if the named pipe server process is on a remote computer, the function can also be used to control local buffering. </P>

<P><B>BOOL SetNamedPipeHandleState(</B></P>

<TABLE cols=2 width=601>

<TR VALIGN="top">
<TD width=42%><B>HANDLE</B> <I>hNamedPipe</I><B>,</B></TD>
<TD width=58%>// handle of named pipe </TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    LPDWORD</B> <I>lpMode</I><B>,</B></TD>
<TD width=58%>// address of new pipe mode </TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    LPDWORD</B> <I>lpMaxCollectionCount</I><B>,</B></TD>
<TD width=58%>// address of max. bytes before remote transmission  </TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    LPDWORD</B> <I>lpCollectDataTimeout</I> </TD>
<TD width=58%>// address of max. time before remote transmission </TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>   );</B></TD>
<TD width=58%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hNamedPipe</I></P>

<P>Identifies the named pipe instance. This parameter can be a handle to the server end of the pipe, as returned by the <A HREF="21dzyt.htm"><B>CreateNamedPipe</B></A> function, or to the client end of the pipe, as returned by the <A HREF="xn35yd.htm"><B>CreateFile</B></A> function. The handle must have GENERIC_WRITE access to the named pipe. </P>

<P><I>lpMode</I></P>

<P>Points to a 32-bit variable that supplies the new mode. The mode is a combination of a read-mode flag and a wait-mode flag. This parameter can be NULL if the mode is not being set. One of the following read modes can be specified: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=52%><B>Mode</B></TD>
<TD width=48%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=52%>PIPE_READMODE_BYTE</TD>
<TD width=48%>Data is read from the pipe as a stream of bytes. This mode is the default if no read-mode flag is specified.</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>PIPE_READMODE_MESSAGE</TD>
<TD width=48%>Data is read from the pipe as a stream of messages. The function fails if this flag is specified for a byte-type pipe.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>One of the following wait modes can be specified: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=36%><B>Mode</B></TD>
<TD width=64%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=36%>PIPE_WAIT</TD>
<TD width=64%>Blocking mode is enabled. This mode is the default if no wait-mode flag is specified. When a blocking mode pipe handle is specified in the <A HREF="cjnd8p.htm"><B>ReadFile</B></A>, <A HREF="g0sox_.htm"><B>WriteFile</B></A>, or <A HREF="ksa3sm.htm"><B>ConnectNamedPipe</B></A> function, operations are not finished until there is data to read, all data is written, or a client is connected. Use of this mode can mean waiting indefinitely in some situations for a client process to perform an action.</TD>
</TR>

<TR VALIGN="top">
<TD width=36%>PIPE_NOWAIT</TD>
<TD width=64%>Nonblocking mode is enabled. In this mode, <B>ReadFile</B>, <B>WriteFile</B>, and <B>ConnectNamedPipe</B> always return immediately. Note that nonblocking mode is supported for compatibility with Microsoft® LAN Manager version 2.0 and should not be used to achieve asynchronous input and output (I/O) with named pipes.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpMaxCollectionCount</I></P>

<P>Points to a 32-bit variable that specifies the maximum number of bytes collected on the client computer before transmission to the server. This parameter must be NULL if the specified pipe handle is to the server end of a named pipe or if client and server processes are on the same machine. This parameter is ignored if the client process specifies the FILE_FLAG_WRITE_THROUGH flag in the <B>CreateFile</B> function when the handle was created. This parameter can be NULL if the collection count is not being set. </P>

<P><I>lpCollectDataTimeout</I></P>

<P>Points to a 32-bit variable that specifies the maximum time, in milliseconds, that can pass before a remote named pipe transfers information over the network. This parameter must be NULL if the specified pipe handle is to the server end of a named pipe or if client and server processes are on the same computer. This parameter is ignored if the client process specified the FILE_FLAG_WRITE_THROUGH flag in the <A HREF="xn35yd.htm"><B>CreateFile</B></A> function when the handle was created. This parameter can be NULL if the collection count is not being set. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>See Also</B></P>

<P><A HREF="ksa3sm.htm"><B>ConnectNamedPipe</B></A>, <A HREF="xn35yd.htm"><B>CreateFile</B></A>, <A HREF="21dzyt.htm"><B>CreateNamedPipe</B></A>, <A HREF="842lr_.htm"><B>GetNamedPipeHandleState</B></A>, <A HREF="cjnd8p.htm"><B>ReadFile</B></A>, <A HREF="g0sox_.htm"><B>WriteFile</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
