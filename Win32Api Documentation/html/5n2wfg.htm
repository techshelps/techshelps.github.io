<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>MoveFileEx</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="5n2wfg"></A><B>MoveFileEx  <A HREF="59ln_s3.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qnj9so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1f83g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>MoveFileEx</B> function renames an existing file or directory. </P>

<P><B>BOOL MoveFileEx(</B></P>

<TABLE cols=2 width=489>

<TR VALIGN="top">
<TD width=47%><B>LPCTSTR</B> <I>lpExistingFileName</I><B>,</B></TD>
<TD width=53%>// address of name of the existing file  </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    LPCTSTR</B> <I>lpNewFileName</I><B>,</B></TD>
<TD width=53%>// address of new name for the file </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>    DWORD</B> <I>dwFlags</I> </TD>
<TD width=53%>// flag to determine how to move file </TD>
</TR>

<TR VALIGN="top">
<TD width=47%><B>   );</B></TD>
<TD width=53%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpExistingFileName</I></P>

<P>Points to a null-terminated string that names an existing file or directory. </P>

<P><I>lpNewFileName</I></P>

<P>Points to a null-terminated string that specifies the new name of <I>lpExistingFileName</I>. </P>

<P>When moving a file, the destination can be on a different file system or drive. If the destination is on another drive, you must set the MOVEFILE_COPY_ALLOWED flag in <I>dwFlags</I>.</P>

<P>When moving a directory, the destination must be on the same drive. </P>

<P><B>Windows NT:</B> </P>

<P>If <I>dwFlags</I> specifies MOVEFILE_DELAY_UNTIL_REBOOT, <I>lpNewFileName</I> can be NULL. In this case, <B>MoveFileEx</B> registers the <I>lpExistingFileName</I> file to be deleted when the system reboots.</P>

<P><I>dwFlags</I></P>

<P>A set of bit flags that specify how to move the file. You can specify any combination of the following values:</P>

<TABLE cols=6>

<TR VALIGN="top">
<TD colspan=2 width=14%><B>Value</B></TD>
<TD colspan=3 width=73%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>MOVEFILE_COPY_ALLOWED</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>&nbsp;</TD>
<TD colspan=3 width=63%>If the file is to be moved to a different volume, the function simulates the move by using the <A HREF="al5gu..htm"><B>CopyFile</B></A> and <A HREF=".h9hcz.htm"><B>DeleteFile</B></A> functions. Cannot be combined with the MOVEFILE_DELAY_UNTIL_REBOOT flag.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>MOVEFILE_DELAY_UNTIL_REBOOT</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>&nbsp;</TD>
<TD colspan=3 width=63%><B>Windows NT only:</B> The function does not move the file until the operating system is restarted. The system moves the file immediately after AUTOCHK is executed, but before creating any paging files. Consequently, this parameter enables the function to delete paging files from previous startups.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>MOVEFILE_REPLACE_EXISTING</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>&nbsp;</TD>
<TD colspan=3 width=63%>If a file of the name specified by <I>lpNewFileName</I> already exists, the function replaces its contents with those specified by <I>lpExistingFileName</I>.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>MOVEFILE_WRITE_THROUGH</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>&nbsp;</TD>
<TD colspan=3 width=63%><B>Windows NT only:</B> The function does not return until the file has actually been moved on the disk. 
<P>Setting this flag guarantees that a move perfomed as a copy and delete operation is flushed to disk before the function returns. The flush occurs at the end of the copy operation. </P>

<P>This flag has no effect if the MOVEFILE_DELAY_UNTIL_REBOOT flag is set. </P>
</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>An application cannot specify both MOVEFILE_DELAY_UNTIL_REBOOT and MOVEFILE_COPY_ALLOWED for <I>dwFlags</I>. Function calls that do so will fail.</P>

<P><B>Windows NT:</B> </P>

<P>If the <I>dwFlags</I> parameter specifies MOVEFILE_DELAY_UNTIL_REBOOT, <B>MoveFileEx</B> stores the locations of the files to be renamed at reboot under the following registry key: </P>

<P><B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\<BR>
Control\Session Manager\PendingFileRenameOperations</B></P>

<P>The key is of type REG_MULTI_SZ. Each rename operation is a pair of NULL-terminated strings. The system uses these registry entries to complete the operation at reboot in the same order that they were issued. </P>

<P>For example, on Windows NT, the following code fragment creates registry entries that delete <I>szDstFile</I> and rename <I>szSrcFile</I> to be <I>szDstFile</I> at reboot: </P>

<P></P>

<P>MoveFileEx(szDstFile, NULL, MOVEFILE_DELAY_UNTIL_REBOOT);</P>

<P>MoveFileEx(szSrcFile, szDstFile, MOVEFILE_DELAY_UNTIL_REBOOT);</P>

<P></P>

<P>The system creates the associated <B>PendingFileRenameOperations</B> entries as follows: </P>

<P>szDstFile\0\0</P>

<P>szSrcFile\0szDstFile\0\0</P>

<P><B>Windows 95:</B></P>

<P>The MOVEFILE_DELAY_UNTIL_REBOOT flag is not supported. To rename or delete a file at reboot on a Windows 95 system, place an entry in the WININIT.INI file in the Windows directory. </P>

<P>For example, on Windows 95, the following code fragment creates WININIT.INI entries that delete <I>szDstFile</I> and rename <I>szSrcFile</I> to be <I>szDstFile</I> at reboot:</P>

<P>GetWindowsDirectory(szWinInitFile, uSize);</P>

<P>lstrcat(szWinInitFile, "\\WININIT.INI");</P>

<P>WritePrivateProfileString("Rename", "NUL", szDstFile, szWinInitFile);</P>

<P>WritePrivateProfileString("Rename", szDstFile, szSrcFile, szWinInitFile);</P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="al5gu..htm"><B>CopyFile</B></A>, <A HREF=".h9hcz.htm"><B>DeleteFile</B></A>, <A HREF="1b6tycn.htm"><B>GetWindowsDirectory</B></A>, <A HREF="e8v46s.htm"><B>lstrcat</B></A>, <A HREF="1s180ve.htm"><B>MoveFile</B></A>, <A HREF="ghz6rp.htm"><B>WritePrivateProfileString</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
