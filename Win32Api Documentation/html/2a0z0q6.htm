<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>FindFirstFile</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2a0z0q6"></A><B>FindFirstFile  <A HREF="cbu6h..htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qnj9so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1f83g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>FindFirstFile</B> function searches a directory for a file whose name matches the specified filename. <B>FindFirstFile</B> examines subdirectory names as well as filenames. </P>

<P><B>HANDLE FindFirstFile(</B></P>

<TABLE cols=2 width=539>

<TR VALIGN="top">
<TD width=52%><B>LPCTSTR</B> <I>lpFileName</I><B>,</B></TD>
<TD width=48%>// pointer to name of file to search for  </TD>
</TR>

<TR VALIGN="top">
<TD width=52%><B>    LPWIN32_FIND_DATA</B> <I>lpFindFileData</I> </TD>
<TD width=48%>// pointer to returned information </TD>
</TR>

<TR VALIGN="top">
<TD width=52%><B>   );</B></TD>
<TD width=48%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpFileName</I></P>

<P><B>Windows 95:</B> Points to a null-terminated string that specifies a valid directory or path and filename, which can contain wildcard characters (* and ?). This string must not exceed MAX_PATH characters.</P>

<P><B>Windows NT:</B> Points to a null-terminated string that specifies a valid directory or path and filename, which can contain wildcard characters (* and ?). </P>

<P>There is a default string size limit for paths of MAX_PATH characters. This limit is related to how the <B>FindFirstFile </B>function parses paths. An application can transcend this limit and send in paths longer than MAX_PATH characters by calling the wide (W) version of <B>FindFirstFile</B> and prepending "\\?\" to the path. The "\\?\" tells the function to turn off path parsing; it lets paths longer than MAX_PATH be used with <B>FindFirstFileW</B>. This also works with UNC names. The "\\?\" is ignored as part of the path. For example, "\\?\C:\myworld\private" is seen as "C:\myworld\private", and "\\?\UNC\bill_g_1\hotstuff\coolapps" is seen as "\\bill_g_1\hotstuff\coolapps".</P>

<P><I>lpFindFileData</I></P>

<P>Points to the <A HREF="4tj_4n.htm"><B>WIN32_FIND_DATA</B></A> structure that receives information about the found file or subdirectory. The structure can be used in subsequent calls to the <A HREF="jkcucc.htm"><B>FindNextFile</B></A> or <A HREF="dk5rpx.htm"><B>FindClose</B></A> function to refer to the file or subdirectory. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a search handle used in a subsequent call to <A HREF="jkcucc.htm"><B>FindNextFile</B></A> or <A HREF="dk5rpx.htm"><B>FindClose</B></A>.</P>

<P>If the function fails, the return value is INVALID_HANDLE_VALUE. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The <B>FindFirstFile</B> function opens a search handle and returns information about the first file whose name matches the specified pattern. Once the search handle is established, you can use the <B>FindNextFile</B> function to search for other files that match the same pattern. When the search handle is no longer needed, close it by using the <B>FindClose</B> function. </P>

<P>This function searches for files by name only; it cannot be used for attribute-based searches. </P>

<P><B>See Also</B></P>

<P><A HREF="dk5rpx.htm"><B>FindClose</B></A>, <A HREF="jkcucc.htm"><B>FindNextFile</B></A>, <A HREF="3pqdmo.htm"><B>GetFileAttributes</B></A>, <A HREF="ha1.i7.htm"><B>SetFileAttributes</B></A>, <A HREF="4tj_4n.htm"><B>WIN32_FIND_DATA</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
