<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetObject</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3v6uf0"></A><B>GetObject  <A HREF="1_e9okv.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="2fduzal.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="de09ns.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetObject</B> function obtains information about a specified graphics object. Depending on the graphics object, the function places a filled-in <A HREF=".cpc19.htm"><B>BITMAP</B></A>, <A HREF="1mh7ktg.htm"><B>DIBSECTION</B></A>, <A HREF="1lrgk1_.htm"><B>EXTLOGPEN</B></A>, <A HREF="_3e1k.htm"><B>LOGBRUSH</B></A>, <A HREF="5m4itk.htm"><B>LOGFONT</B></A>, or <A HREF="odo5mv.htm"><B>LOGPEN</B></A> structure, or a count of table entries (for a logical palette), into a specified buffer. </P>

<P><B>int GetObject(</B></P>

<TABLE cols=2 width=435>

<TR VALIGN="top">
<TD width=37%><B>HGDIOBJ</B> <I>hgdiobj</I><B>,</B></TD>
<TD width=63%>// handle to graphics object of interest</TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    int</B> <I>cbBuffer</I><B>,</B></TD>
<TD width=63%>// size of buffer for object information </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>    LPVOID</B> <I>lpvObject</I> </TD>
<TD width=63%>// pointer to buffer for object information  </TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>   );</B></TD>
<TD width=63%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hgdiobj</I></P>

<P>A handle to the graphics object of interest. This can be a handle to one of the following: a logical bitmap, a brush, a font, a palette, a pen, or a device independent bitmap created by calling the <A HREF="gsao6s.htm"><B>CreateDIBSection</B></A> function.</P>

<P><I>cbBuffer</I></P>

<P>Specifies the number of bytes of information to be written to the buffer. </P>

<P><I>lpvObject</I></P>

<P>Points to a buffer that is to receive the information about the specified graphics object.</P>

<P>The following table shows the type of information the buffer receives for each type of graphics object you can specify with <I>hgdiobj</I>:</P>

<P></P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=39%><B><I>hgdiobj Type</I></B></TD>
<TD width=61%><B>Data Written to *<I>lpvObject</I></B></TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>HBITMAP</B></TD>
<TD width=61%><A HREF=".cpc19.htm"><B>BITMAP</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>HBITMAP</B> returned from a call to <B>CreateDIBSection</B></TD>
<TD width=61%><A HREF="1mh7ktg.htm"><B>DIBSECTION</B></A>, if <I>cbBuffer</I> is set to <B>sizeof</B>(<B>DIBSECTION</B>), or <B>BITMAP</B>, if <I>cbBuffer</I> is set to <B>sizeof</B>(<B>BITMAP</B>)</TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>HPALETTE</B></TD>
<TD width=61%>a <B>WORD</B> count of the number of entries in the logical palette</TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>HPEN</B> returned from a call to <B>ExtCreatePen</B></TD>
<TD width=61%><A HREF="1lrgk1_.htm"><B>EXTLOGPEN</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>HPEN</B></TD>
<TD width=61%><A HREF="odo5mv.htm"><B>LOGPEN</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>HBRUSH</B></TD>
<TD width=61%><A HREF="_3e1k.htm"><B>LOGBRUSH</B></A></TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>HFONT</B></TD>
<TD width=61%><A HREF="5m4itk.htm"><B>LOGFONT</B></A></TD>
</TR>
</TABLE><BR>

<P></P>

<P>If the <I>lpvObject </I>parameter is NULL, the function return value is the number of bytes required to store the information it writes to the buffer for the specified graphics object.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, and <I>lpvObject</I> is a valid pointer, the return value is the number of bytes stored into the buffer.</P>

<P>If the function succeeds, and <I>lpvObject</I> is NULL, the return value is the number of bytes required to hold the information the function would store into the buffer.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>.</P>

<P><B>Remarks</B></P>

<P>The buffer pointed to by the <I>lpvObject</I> parameter must be sufficiently large to receive the information about the graphics object. </P>

<P>If <I>hgdiobj</I> identifies a bitmap created by calling <A HREF="gsao6s.htm"><B>CreateDIBSection</B></A>, and the specified buffer is large enough, the <B>GetObject</B> function returns a <A HREF="1mh7ktg.htm"><B>DIBSECTION</B></A> structure. In addition, the <B>bmBits </B>member of the <A HREF=".cpc19.htm"><B>BITMAP</B></A> structure contained within the <B>DIBSECTION</B> will contain a pointer to the bitmap's bit values. </P>

<P>If <I>hgdiobj</I> identifies a bitmap created by any other means, <B>GetObject</B> returns only the width, height, and color format information of the bitmap. You can obtain the bitmap's bit values by calling the <B>GetDIBits</B> or <B>GetBitmapBits</B> function.</P>

<P>If <I>hgdiobj</I> identifies a logical palette, <B>GetObject</B> retrieves a two-byte integer that specifies the number of entries in the palette. The function does not retrieve the <B>LOGPALETTE</B> structure defining the palette. To retrieve information about palette entries, an application can call the <B>GetPaletteEntries</B> function. </P>

<P><B>See Also</B></P>

<P><A HREF="gsao6s.htm"><B>CreateDIBSection</B></A>, <A HREF="147ayvz.htm"><B>GetBitmapBits</B></A>, <A HREF="18dfxzy.htm"><B>GetDIBits</B></A>, <A HREF="2a9xsza.htm"><B>GetPaletteEntries</B></A>, <A HREF="0h3opk.htm"><B>GetRegionData</B></A>, <A HREF=".cpc19.htm"><B>BITMAP</B></A>, <A HREF="1mh7ktg.htm"><B>DIBSECTION</B></A>, <A HREF="1lrgk1_.htm"><B>EXTLOGPEN</B></A>, <A HREF="_3e1k.htm"><B>LOGBRUSH</B></A>, <A HREF="5m4itk.htm"><B>LOGFONT</B></A>, <A HREF="de0lfq.htm"><B>LOGPALETTE</B></A>, <A HREF="odo5mv.htm"><B>LOGPEN</B></A> </P>

</BODY>
</HTML>
