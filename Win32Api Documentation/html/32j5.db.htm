<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetSecurityDescriptorDacl</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="32j5.db"></A><B>GetSecurityDescriptorDacl  <A HREF="2.ve0to.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1966ja.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="afqqmm.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetSecurityDescriptorDacl</B> function retrieves a pointer to the discretionary access-control list (ACL) in a specified security descriptor. </P>

<P><B>BOOL GetSecurityDescriptorDacl(</B></P>

<TABLE cols=2 width=635>

<TR VALIGN="top">
<TD width=54%><B>PSECURITY_DESCRIPTOR</B> <I>pSecurityDescriptor</I><B>,</B></TD>
<TD width=46%>// address of security descriptor</TD>
</TR>

<TR VALIGN="top">
<TD width=54%><B>    LPBOOL</B> <I>lpbDaclPresent</I><B>,</B></TD>
<TD width=46%>// address of flag for presence of disc. ACL </TD>
</TR>

<TR VALIGN="top">
<TD width=54%><B>    PACL</B> <I>*pDacl</I><B>,</B></TD>
<TD width=46%>// address of pointer to ACL</TD>
</TR>

<TR VALIGN="top">
<TD width=54%><B>    LPBOOL</B> <I>lpbDaclDefaulted</I> </TD>
<TD width=46%>// address of flag for default disc. ACL</TD>
</TR>

<TR VALIGN="top">
<TD width=54%><B>   );</B></TD>
<TD width=46%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>pSecurityDescriptor</I></P>

<P>Points to the <A HREF="188mr8k.htm"><B>SECURITY_DESCRIPTOR</B></A> structure containing the discretionary ACL. The function retrieves a pointer to it. </P>

<P><I>lpbDaclPresent</I></P>

<P>Points to a flag the function sets to indicate the presence of a discretionary ACL in the specified security descriptor. If this parameter is TRUE, the security descriptor contains a discretionary ACL, and the remaining output parameters in this function receive valid values. If this parameter is FALSE, the security descriptor does not contain a discretionary ACL, and the remaining output parameters do not receive valid values. </P>

<P><I>pDacl</I></P>

<P>Points to a pointer to an <A HREF="lm6.t4.htm"><B>ACL</B></A> structure. If a discretionary ACL exists, the function sets the pointer pointed to by <I>pDacl</I> to the address of the security descriptor's discretionary ACL. If a discretionary ACL does not exist, no value is stored. </P>

<P>If the function stores a NULL value in the pointer pointed to by <I>pDacl</I>, the security descriptor has a NULL discretionary ACL. A NULL discretionary ACL implicitly allows all access to an object. </P>

<P><I>lpbDaclDefaulted</I></P>

<P>Points to a flag set to the value of the SE_DACL_DEFAULTED flag in the <A HREF="3773d5.htm"><B>SECURITY_DESCRIPTOR_CONTROL</B></A> structure if a discretionary ACL exists for the security descriptor. If this flag is TRUE, the discretionary ACL was retrieved by a default mechanism; if FALSE, the discretionary ACL was explicitly specified by a user. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>See Also</B></P>

<P><A HREF="lm6.t4.htm"><B>ACL</B></A>, <A HREF="jgwoa7.htm"><B>GetSecurityDescriptorControl</B></A>, <A HREF="dgurox.htm"><B>GetSecurityDescriptorGroup</B></A>, <A HREF=".4aooa.htm"><B>GetSecurityDescriptorLength</B></A>, <A HREF="1t7gpco.htm"><B>GetSecurityDescriptorOwner</B></A>, <A HREF="32jd.db.htm"><B>GetSecurityDescriptorSacl</B></A>, <A HREF="sub91n.htm"><B>InitializeSecurityDescriptor</B></A>, <A HREF="il2l_v.htm"><B>IsValidSecurityDescriptor</B></A>, <A HREF="188mr8k.htm"><B>SECURITY_DESCRIPTOR</B></A>, <A HREF="3773d5.htm"><B>SECURITY_DESCRIPTOR_CONTROL</B></A>, <A HREF="y4gfoy.htm"><B>SetSecurityDescriptorDacl</B></A> </P>

</BODY>
</HTML>
