<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>SendMessageCallback</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="0nan2r"></A><B>SendMessageCallback  <A HREF="3_u._7..htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="21n71oj.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="hpo6s6.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SendMessageCallback</B> function sends the specified message to a window or windows. The function calls the window procedure for the specified window and returns immediately. After the window procedure processes the message, the system calls the specified callback function, passing the result of the message processing and an application-defined value to the callback function. </P>

<P><B>BOOL SendMessageCallback(</B></P>

<TABLE cols=2 width=522>

<TR VALIGN="top">
<TD width=53%><B>HWND</B> <I>hWnd</I><B>,</B></TD>
<TD width=47%>// handle of destination window</TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>    UINT</B> <I>Msg</I><B>,</B></TD>
<TD width=47%>// message to send</TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>    WPARAM</B> <I>wParam</I><B>,</B></TD>
<TD width=47%>// first message parameter</TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>    LPARAM</B> <I>lParam</I><B>,</B></TD>
<TD width=47%>// second message parameter</TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>    SENDASYNCPROC</B> <I>lpResultCallBack</I><B>,</B></TD>
<TD width=47%>// function to receive message value</TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>    DWORD</B> <I>dwData</I><B> </B></TD>
<TD width=47%>// value to pass to callback function</TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>   );</B></TD>
<TD width=47%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hWnd</I></P>

<P>Identifies the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST, the message is sent to all top-level windows in the system, including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but the message is not sent to child windows. </P>

<P><I>Msg</I></P>

<P>Specifies the message to be sent. </P>

<P><I>wParam</I></P>

<P>Specifies additional message-specific information. </P>

<P><I>lParam</I></P>

<P>Specifies additional message-specific information. </P>

<P><I>lpResultCallBack</I></P>

<P>Points to a callback function that the system calls after the window procedure processes the message. See <A HREF="e6zd7c.htm"><B>SendAsyncProc</B></A> for information on suitable callback functions. </P>

<P>If <I>hWnd</I> is HWND_BROADCAST, the operating system calls the <B>SendAsyncProc</B> callback function once for each top-level window.</P>

<P><I>dwData</I></P>

<P>Specifies an application-defined value to be sent to the callback function pointed to by the <I>lpfnResultCallBack</I> parameter. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>If you send a message in the range below WM_USER to the asynchronous message functions (<B>PostMessage</B>, <A HREF="18dol92.htm"><B>SendNotifyMessage</B></A>, and <A HREF="#0nan2r"><B>SendMessageCallback</B></A>), make sure that the message parameters do not include pointers. Otherwise, the functions will return before the receiving thread has had a chance to process the message and the sender will free the memory before it is used.</P>

<P>Applications that need to communicate using HWND_BROADCAST should use the <B>RegisterWindowMessage</B> function to obtain a unique message for inter-application communication.</P>

<P>The callback function is called only when the thread that called <B>SendMessageCallback</B> also calls <B>GetMessage</B>, <B>PeekMessage</B>, or <B>WaitMessage</B>.</P>

<P><B>See Also</B></P>

<P><A HREF="fixdt_.htm"><B>PostMessage</B></A>, <A HREF="xkgsv4.htm"><B>RegisterWindowMessage</B></A>, <A HREF="e6zd7c.htm"><B>SendAsyncProc</B></A>, <A HREF="#0nan2r"><B>SendMessageCallback</B></A>, <A HREF="18dol92.htm"><B>SendNotifyMessage</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
