<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Creating an Icon</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="y5bebs"></A><B>Creating an Icon</B></P>

<P>To use an icon, your application must get the handle of the icon. The following example shows how to create two different icon handles: one for the standard exclamation icon and one for a custom icon included as a resource in the application's resource-definition file. </P>

<P>HICON hIcon1;   // icon handle  </P>

<P>HICON hIcon2;   // icon handle </P>

<P></P>

<P>// Create a standard question icon. </P>

<P></P>

<P>hIcon1 = LoadIcon(NULL, IDI_QUESTION); </P>

<P></P>

<P>// Create a custom icon based on a resource. </P>

<P></P>

<P>hIcon2 = LoadIcon(hinst, MAKEINTRESOURCE(460)); </P>

<P></P>

<P>// Create a custom icon at run time. </P>

<P></P>

<P>An application should implement custom icons as resources and should use the <A HREF="15isc96.htm"><B>LoadIcon</B></A> or <A HREF="11o6jxc.htm"><B>LoadImage</B></A><B> </B>function, rather than create the icons at run time. This approach avoids device dependence, simplifies localization, and enables applications to share icon bitmaps. However, the following example uses <A HREF="1jwazi2.htm"><B>CreateIcon</B></A> to create a custom icon at run time, based on bitmap bitmasks; it is included to illustrate how the system interprets icon bitmap bitmasks. </P>

<P>HICON hIcon3;      // icon handle  </P>

<P></P>

<P>// Yang icon AND bitmask </P>

<P></P>

<P>BYTE ANDmaskIcon[] = {0xFF, 0xFF, 0xFF, 0xFF,   // line 1 </P>

<P>0xFF, 0xFF, 0xC3, 0xFF,   // line 2 </P>

<P>0xFF, 0xFF, 0x00, 0xFF,   // line 3 </P>

<P>0xFF, 0xFE, 0x00, 0x7F,   // line 4 </P>

<P></P>

<P>0xFF, 0xFC, 0x00, 0x1F,   // line 5 </P>

<P>0xFF, 0xF8, 0x00, 0x0F,   // line 6 </P>

<P>0xFF, 0xF8, 0x00, 0x0F,   // line 7 </P>

<P>0xFF, 0xF0, 0x00, 0x07,   // line 8 </P>

<P></P>

<P>0xFF, 0xF0, 0x00, 0x03,   // line 9 </P>

<P>0xFF, 0xE0, 0x00, 0x03,   // line 10 </P>

<P>0xFF, 0xE0, 0x00, 0x01,   // line 11 </P>

<P>0xFF, 0xE0, 0x00, 0x01,   // line 12 </P>

<P></P>

<P>0xFF, 0xF0, 0x00, 0x01,   // line 13 </P>

<P>0xFF, 0xF0, 0x00, 0x00,   // line 14 </P>

<P>0xFF, 0xF8, 0x00, 0x00,   // line 15 </P>

<P>0xFF, 0xFC, 0x00, 0x00,   // line 16 </P>

<P></P>

<P>0xFF, 0xFF, 0x00, 0x00,   // line 17 </P>

<P>0xFF, 0xFF, 0x80, 0x00,   // line 18 </P>

<P>0xFF, 0xFF, 0xE0, 0x00,   // line 19 </P>

<P>0xFF, 0xFF, 0xE0, 0x01,   // line 20 </P>

<P></P>

<P>0xFF, 0xFF, 0xF0, 0x01,   // line 21 </P>

<P>0xFF, 0xFF, 0xF0, 0x01,   // line 22 </P>

<P>0xFF, 0xFF, 0xF0, 0x03,   // line 23 </P>

<P>0xFF, 0xFF, 0xE0, 0x03,   // line 24 </P>

<P></P>

<P>0xFF, 0xFF, 0xE0, 0x07,   // line 25 </P>

<P>0xFF, 0xFF, 0xC0, 0x0F,   // line 26 </P>

<P>0xFF, 0xFF, 0xC0, 0x0F,   // line 27 </P>

<P>0xFF, 0xFF, 0x80, 0x1F,   // line 28 </P>

<P></P>

<P>0xFF, 0xFF, 0x00, 0x7F,   // line 29 </P>

<P>0xFF, 0xFC, 0x00, 0xFF,   // line 30 </P>

<P>0xFF, 0xF8, 0x03, 0xFF,   // line 31 </P>

<P>0xFF, 0xFC, 0x3F, 0xFF};  // line 32 </P>

<P></P>

<P>// Yang icon XOR bitmask </P>

<P></P>

<P>BYTE XORmaskIcon[] = {0x00, 0x00, 0x00, 0x00,   // line 1 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 2 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 3 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 4 </P>

<P></P>

<P>0x00, 0x00, 0x00, 0x00,   // line 5 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 6 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 7 </P>

<P>0x00, 0x00, 0x38, 0x00,   // line 8 </P>

<P></P>

<P>0x00, 0x00, 0x7C, 0x00,   // line 9 </P>

<P>0x00, 0x00, 0x7C, 0x00,   // line 10 </P>

<P>0x00, 0x00, 0x7C, 0x00,   // line 11 </P>

<P>0x00, 0x00, 0x38, 0x00,   // line 12 </P>

<P></P>

<P>0x00, 0x00, 0x00, 0x00,   // line 13 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 14 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 15 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 16 </P>

<P></P>

<P>0x00, 0x00, 0x00, 0x00,   // line 17 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 18 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 19 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 20 </P>

<P></P>

<P>0x00, 0x00, 0x00, 0x00,   // line 21 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 22 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 23 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 24 </P>

<P></P>

<P>0x00, 0x00, 0x00, 0x00,   // line 25 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 26 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 27 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 28 </P>

<P></P>

<P>0x00, 0x00, 0x00, 0x00,   // line 29 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 30 </P>

<P>0x00, 0x00, 0x00, 0x00,   // line 31 </P>

<P>0x00, 0x00, 0x00, 0x00};  // line 32 </P>

<P></P>

<P>hIcon3 = CreateIcon(hinst,    // application instance  </P>

<P>32,              // icon width </P>

<P>32,              // icon height </P>

<P>1,               // number of XOR planes </P>

<P>1,               // number of bits per pixel </P>

<P>ANDmaskIcon,     // AND bitmask  </P>

<P>XORmaskIcon);    // XOR bitmask  </P>

<P></P>

<P>To create the icon, <A HREF="1jwazi2.htm"><B>CreateIcon</B></A> applies the following truth table to the AND and XOR bitmasks. </P>

<TABLE cols=3>

<TR VALIGN="top">
<TD width=22%><B>AND bitmask</B></TD>
<TD width=22%><B>XOR bitmask</B></TD>
<TD width=56%><B>Display</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%>0</TD>
<TD width=22%>0</TD>
<TD width=56%>Black </TD>
</TR>

<TR VALIGN="top">
<TD width=22%>0</TD>
<TD width=22%>1</TD>
<TD width=56%>White </TD>
</TR>

<TR VALIGN="top">
<TD width=22%>1</TD>
<TD width=22%>0</TD>
<TD width=56%>Screen </TD>
</TR>

<TR VALIGN="top">
<TD width=22%>1</TD>
<TD width=22%>1</TD>
<TD width=56%>Reverse screen </TD>
</TR>
</TABLE><BR>

<P></P>

<P>Before closing, your application must use <A HREF="gw8nuk.htm"><B>DestroyIcon</B></A> to destroy any icon it created by using <A HREF="cid8s7.htm"><B>CreateIconIndirect</B></A>. It is not necessary to destroy icons created by other functions. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
