<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a Shortcut to a File</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1m8n42p"></A><B>Creating a Shortcut to a File</B></P>

<P>The CreateLink function in the following example creates a shortcut. The parameters include a pointer to the name of the file to link to, a pointer to the name of the shortcut that you are creating, and a pointer to the description of the link. The description consists of the string, "Shortcut to <I>filename</I>," where <I>filename</I> is the name of the file to link to. </P>

<P>Because CreateLink calls the <B>CoCreateInstance</B> function, it is assumed that the <B>CoInitialize</B> function has already been called. CreateLink uses the <B>IPersistFile</B> interface to save the shortcut and the <A HREF="222z_k0.htm"><B>IShellLink</B></A> interface to store the filename and description.</P>

<P>// CreateLink - uses the shell's IShellLink and IPersistFile interfaces  </P>

<P>//   to create and store a shortcut to the specified object. </P>

<P>// Returns the result of calling the member functions of the interfaces. </P>

<P>// lpszPathObj - address of a buffer containing the path of the object </P>

<P>// lpszPathLink - address of a buffer containing the path where the </P>

<P>//   shell link is to be stored </P>

<P>// lpszDesc - address of a buffer containing the description of the </P>

<P>//   shell link </P>

<P></P>

<P>HRESULT CreateLink(LPCSTR lpszPathObj, </P>

<P>LPSTR lpszPathLink, LPSTR lpszDesc) </P>

<P>{ </P>

<P>HRESULT hres; </P>

<P>IShellLink* psl; </P>

<P></P>

<P>// Get a pointer to the IShellLink interface. </P>

<P>hres = CoCreateInstance(&amp;CLSID_ShellLink, NULL, </P>

<P>CLSCTX_INPROC_SERVER, &amp;IID_IShellLink, &amp;psl); </P>

<P>if (SUCCEEDED(hres)) { </P>

<P>IPersistFile* ppf; </P>

<P></P>

<P>// Set the path to the shortcut target, and add the </P>

<P>// description. </P>

<P>psl-&gt;lpVtbl-&gt;SetPath(psl, lpszPathObj); </P>

<P>psl-&gt;lpVtbl-&gt;SetDescription(psl, lpszDesc); </P>

<P></P>

<P>// Query IShellLink for the IPersistFile interface for saving the </P>

<P>// shortcut in persistent storage. </P>

<P>hres = psl-&gt;lpVtbl-&gt;QueryInterface(psl, &amp;IID_IPersistFile, </P>

<P>&amp;ppf); </P>

<P></P>

<P>if (SUCCEEDED(hres)) { </P>

<P>WORD wsz[MAX_PATH]; </P>

<P></P>

<P>// Ensure that the string is ANSI. </P>

<P>MultiByteToWideChar(CP_ACP, 0, lpszPathLink, -1, </P>

<P>wsz, MAX_PATH); </P>

<P></P>

<P>// Save the link by calling IPersistFile::Save. </P>

<P>hres = ppf-&gt;lpVtbl-&gt;Save(ppf, wsz, TRUE); </P>

<P>ppf-&gt;lpVtbl-&gt;Release(ppf); </P>

<P>} </P>

<P>psl-&gt;lpVtbl-&gt;Release(psl); </P>

<P>} </P>

<P>return hres; </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
