<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Using Progress Bars</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1iy1os4"></A><B>Using Progress Bars</B></P>

<P>The following example shows how to use a progress bar to indicate the progress of a lengthy file-parsing operation. The example creates a progress bar and positions it along the bottom of the parent window's client area. The height of the progress bar is based on the height of the arrow bitmap used in a scroll bar. The range is based on the size of the file divided by 2048, which is the size of each "chunk" of data read from the file. The example also sets an increment and advances the current position of the progress bar by the increment after parsing each chunk. </P>

<P>// ParseALargeFile - parses a large file and uses a progress bar to  </P>

<P>//   indicate the progress of the parsing operation. </P>

<P>// Returns TRUE if successful or FALSE otherwise. </P>

<P>// hwndParent - parent window of the progress bar </P>

<P>// lpszFileName - name of the file to parse </P>

<P>// </P>

<P>// Global variable </P>

<P>//     g_hinst - instance handle </P>

<P>extern HINSTANCE g_hinst; </P>

<P></P>

<P>BOOL ParseALargeFile(HWND hwndParent, LPSTR lpszFileName) </P>

<P>{ </P>

<P>RECT rcClient;  // client area of parent window </P>

<P>int cyVScroll;  // height of scroll bar arrow </P>

<P>HWND hwndPB;    // handle of progress bar </P>

<P>HANDLE hFile;   // handle of file </P>

<P>DWORD cb;       // size of file and count of bytes read </P>

<P>LPCH pch;       // address of data read from file </P>

<P>LPCH pchTmp;    // temporary pointer </P>

<P></P>

<P>// Ensure that the common control DLL is loaded and create a </P>

<P>// progress bar along the bottom of the client area of the </P>

<P>// parent window. Base the height of the progress bar on </P>

<P>// the height of a scroll bar arrow. </P>

<P>InitCommonControls(); </P>

<P>GetClientRect(hwndParent, &amp;rcClient); </P>

<P>cyVScroll = GetSystemMetrics(SM_CYVSCROLL); </P>

<P>hwndPB = CreateWindowEx(0, PROGRESS_CLASS, (LPSTR) NULL, </P>

<P>WS_CHILD | WS_VISIBLE, rcClient.left, </P>

<P>rcClient.bottom - cyVScroll, </P>

<P>rcClient.right, cyVScroll, </P>

<P>hwndParent, (HMENU) 0, g_hinst, NULL); </P>

<P></P>

<P>// Open the file for reading, and retrieve the size of the file. </P>

<P>hFile = CreateFile(lpszFileName, GENERIC_READ, FILE_SHARE_READ, </P>

<P>(LPSECURITY_ATTRIBUTES) NULL, OPEN_EXISTING, </P>

<P>FILE_ATTRIBUTE_NORMAL, (HANDLE) NULL); </P>

<P></P>

<P>if (hFile == (HANDLE) INVALID_HANDLE_VALUE) </P>

<P>return FALSE; </P>

<P></P>

<P>cb = GetFileSize(hFile, (LPDWORD) NULL); </P>

<P></P>

<P>// Set the range and increment of the progress bar. </P>

<P>SendMessage(hwndPB, PBM_SETRANGE, 0, MAKELPARAM(0, cb / 2048)); </P>

<P>SendMessage(hwndPB, PBM_SETSTEP, (WPARAM) 1, 0); </P>

<P></P>

<P>// Parse the file. </P>

<P>pch = (LPCH) LocalAlloc(LPTR, sizeof(char) * 2048); </P>

<P>pchTmp = pch; </P>

<P>do { </P>

<P>ReadFile(hFile, pchTmp, sizeof(char) * 2048, &amp;cb, </P>

<P>(LPOVERLAPPED) NULL); </P>

<P>. </P>

<P>. // Include here any code that parses the file. </P>

<P>. </P>

<P></P>

<P>// Advance the current position of the progress bar </P>

<P>// by the increment. </P>

<P>SendMessage(hwndPB, PBM_STEPIT, 0, 0); </P>

<P>} while (cb); </P>

<P>CloseHandle((HANDLE) hFile); </P>

<P></P>

<P>DestroyWindow(hwndPB); </P>

<P>return TRUE; </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
