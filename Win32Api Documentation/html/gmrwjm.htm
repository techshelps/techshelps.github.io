<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Denying Access</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="gmrwjm"></A><B>Denying Access</B></P>

<P>You can deny all access to an object by adding an empty discretionary access-control list (DACL) to the object's security descriptor. An empty DACL has no access-control entries (ACEs), which means that the DACL does not grant access to anyone. Note that this is different from a security descriptor that has no DACL; in that case, the system grants everyone full access to the object. You can also prevent a specified trustee from gaining access to an object by using a DACL that has one or more access-denied ACEs. </P>

<P>This topic includes examples that use the high-level access-control functions that are new for Windows NT version 4.0. For an example that uses the older low-level access control functions, see <A HREF="4cjykb.htm">Denying Access Using Low-Level Functions</A>.</P>

<P>The high-level examples use the <A HREF="0lyb0g.htm"><B>SetEntriesInAcl</B></A> function to create an ACL. Then they use the <A HREF="a0hpj_.htm"><B>SetNamedSecurityInfo</B></A> function to attach the ACL as the DACL of an object. Note that these examples can work with a variety of named securable objects, such as files, registry keys, and synchronization objects.</P>

<P>The first example shows how to add an empty DACL to an object's security descriptor. The effect is to deny all access to the object. </P>

<P>DWORD SetEmptyDACL(LPTSTR lpObjectName, SE_OBJECT_TYPE ObjectType)  </P>

<P>{</P>

<P>DWORD dwRes;</P>

<P>PACL pDacl;</P>

<P>if (NULL == lpObjectName) </P>

<P>return ERROR_INVALID_PARAMETER;</P>

<P>// create an ACL with no ACEs</P>

<P>dwRes = SetEntriesInAcl(0, NULL, NULL, &amp;pDacl);</P>

<P>if (ERROR_SUCCESS != dwRes) </P>

<P>return dwRes;</P>

<P>// attach the emtpy ACL as the object's DACL</P>

<P>dwRes = SetNamedSecurityInfo(lpObjectName, ObjectType, </P>

<P>DACL_SECURITY_INFORMATION,  </P>

<P>NULL, NULL, pDacl, NULL);</P>

<P>// free the buffer returned by SetEntriesInAcl</P>

<P>LocalFree(pDacl);</P>

<P>return dwRes;</P>

<P>}</P>

<P></P>

<P>You can modify this example to deny access to a specified trustee. The following variation uses the <A HREF="9gxqlm.htm"><B>BuildExplicitAccessWithName</B></A> function to initialize an <A HREF=".aeuaj.htm"><B>EXPLICIT_ACCESS</B></A> structure with the data for an access-denied ACE. Then it uses the <A HREF="0lyb0g.htm"><B>SetEntriesInAcl</B></A> and <A HREF="a0hpj_.htm"><B>SetNamedSecurityInfo</B></A> functions to create the ACL and attach it to the object. </P>

<P>#include &lt;aclapi.h&gt;</P>

<P></P>

<P>DWORD dwRes;</P>

<P>PACL pDacl;</P>

<P>EXPLICIT_ACCESS ea;</P>

<P>// initialize an EXPLICIT_ACCESS structure to deny access</P>

<P>ZeroMemory(&amp;ea, sizeof(EXPLICIT_ACCESS));</P>

<P>BuildExplicitAccessWithName(&amp;ea, </P>

<P>"ludwig",          // name of trustee</P>

<P>GENERIC_ALL,       // type of access</P>

<P>DENY_ACCESS,       // access mode</P>

<P>NO_INHERITANCE);   // inheritance mode</P>

<P>// create an ACL with one access-denied ACE</P>

<P>dwRes = SetEntriesInAcl(1, &amp;ea, NULL, &amp;pDacl);</P>

<P>if (ERROR_SUCCESS != dwRes) </P>

<P>return dwRes;</P>

<P>// attach the ACL as the object's DACL</P>

<P>dwRes = SetNamedSecurityInfo(TEXT("myfile"), SE_FILE_OBJECT, </P>

<P>DACL_SECURITY_INFORMATION,  </P>

<P>NULL, NULL, pDacl, NULL);</P>

<P>// free the buffer returned by SetEntriesInAcl</P>

<P>LocalFree(pDacl);</P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
