<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Read and Write Operations</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="6io1p3"></A><B>Read and Write Operations</B></P>

<P>The Win32 API supports both synchronous and asynchronous (overlapped) file I/O operations on serial communications resources. Overlapped operations enable the calling thread to perform other tasks while the operation executes in the background. A thread uses the <A HREF="cjnd8p.htm"><B>ReadFile</B></A> or <A HREF="fm7wz7.htm"><B>ReadFileEx</B></A> function to read from a communications resource, and the <A HREF="g0sox_.htm"><B>WriteFile</B></A> or <A HREF="12g2wey.htm"><B>WriteFileEx</B></A> function to write to a communications resource. <B>ReadFile</B> and <B>WriteFile</B> can be performed synchronously or asynchronously. <B>ReadFileEx</B> and <B>WriteFileEx</B> can only be performed asynchronously. </P>

<P>The behavior of these read and write functions is affected by whether the function is executed as an overlapped operation, whether the time-out parameters are associated with the handle, and whether flow control parameters are associated with the handle. </P>

<P>A thread can also write to a communications resource by using the <A HREF="1l9h1_c.htm"><B>TransmitCommChar</B></A> function, which transmits a specified character ahead of any pending data in the output buffer. This function is useful for transmitting a high priority signal character to the receiving system. Transmission of the high priority character is still subject to flow control and write time-outs, and the operation is performed synchronously. </P>

<P>A thread can use the <A HREF="1xj.r43.htm"><B>PurgeComm</B></A> function to discard all characters in a device's output or input buffer. <B>PurgeComm</B> can also terminate pending read or write operations, even if the operations have not been completed. If a thread uses <B>PurgeComm</B> to flush an output buffer, the deleted characters are not transmitted. To empty the output buffer while ensuring that the contents are transmitted, a thread can call the <A HREF="3oca9w0.htm"><B>FlushFileBuffers</B></A> function (a synchronous operation). Note, however, that <B>FlushFileBuffers</B> is subject to flow control but not to write time-outs, and it will not return until all pending write operations have been transmitted. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
