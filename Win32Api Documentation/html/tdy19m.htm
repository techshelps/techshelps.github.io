<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>HeapCompact</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="tdy19m"></A><B>HeapCompact  <A HREF="14krcv_.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7gqv3r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="9cqndc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>HeapCompact</B> function attempts to compact a specified heap. It compacts the heap by coalescing adjacent free blocks of memory and decommitting large free blocks of memory.</P>

<P><B>UINT HeapCompact(</B></P>

<TABLE cols=2 width=546>

<TR VALIGN="top">
<TD width=29%><B>HANDLE</B> <I>hHeap</I><B>,</B></TD>
<TD width=71%>// handle to the heap to compact</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><B>    DWORD</B> <I>dwFlags</I> </TD>
<TD width=71%>// bit-flags that control heap access during function operation</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><B>   );</B></TD>
<TD width=71%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hHeap</I></P>

<P>Handle to the heap that the function will attempt to compact. </P>

<P><I>dwFlags</I></P>

<P>A set of bit flags that control heap access during function operation. The following bit flag has meaning:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=47%><B>Value</B></TD>
<TD width=53%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=47%>HEAP_NO_SERIALIZE</TD>
<TD width=53%>If this flag is set, heap access is not serialized while the <B>HeapCompact </B>function accesses the heap; heap access is not mutually exclusive. It is safe to set this flag only in a limited set of specific situations. For a discussion of those situations and heap serialization in general, see the Remarks section of <A HREF="e.pz6h.htm"><B>HeapCreate</B></A>. 
<P>If this flag is clear, heap access is serialized while <B>HeapCompact</B> accesses the heap; heap access is mutually exclusive. This is the safe and simple default condition.</P>
</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the size, in bytes, of the largest committed free block in the heap. This is an unsigned integer value.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P>In the unlikely case that there is absolutely no space available in the heap, the function return value is zero, and <B>GetLastError</B> returns the value NO_ERROR.</P>

<P><B>Remarks</B></P>

<P>There is no guarantee that an application can successfully allocate a memory block of the size returned by <B>HeapCompact</B>. Other threads or the commit threshold might prevent such an allocation. </P>

<P><B>See Also</B></P>

<P><A HREF="e.pz6h.htm"><B>HeapCreate</B></A>, <A HREF="336u0ic.htm"><B>HeapValidate</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
