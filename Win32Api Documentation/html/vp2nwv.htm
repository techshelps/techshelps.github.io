<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Client Service For NetWare Object</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="vp2nwv"></A><B>Client Service For NetWare Object</B></P>

<P>The Client Service For NetWare performance object consists of counters that measure packet transmission rates, logons, and connections. </P>

<P><B>Bytes Total/sec</B></P>

<P>Bytes Total/sec is the rate the Redirector is processing data bytes. This includes all application and file data in addition to protocol information such as packet headers.</P>

<P>Detail Level: Novice<BR>
Counter Type: PERF_COUNTER_BULK_COUNT</P>

<P><B>File Data Operations/sec</B></P>

<P>File Data Operations/sec is the rate the Redirector is processing data operations. One operation includes (hopefully) many bytes. We say hopefully here because each operation has overhead. You can determine the efficiency of this path by dividing the Bytes/sec by this counter to determine the average number of bytes transferred/operation.</P>

<P>Detail Level: Novice<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Packets/sec</B></P>

<P>Packets/sec is the rate the Redirector is processing data packets. One packet includes (hopefully) many bytes. We say hopefully here because each packet has protocol overhead. You can determine the efficiency of this path by dividing the Bytes/sec by this counter to determine the average number of bytes transferred/packet. You can also divide this counter by Operations/sec to determine the average number of packets per operation, another measure of efficiency.</P>

<P>Detail Level: Novice<BR>
Counter Type: PERF_COUNTER_BULK_COUNT</P>

<P><B>Bytes Received/sec</B></P>

<P>Bytes Received/sec is the rate of bytes coming in to the Redirector from the network. It includes all application data as well as network protocol information (such as packet headers.)</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_BULK_COUNT</P>

<P><B>Packets Received/sec</B></P>

<P>Packets Received/sec is the rate at which the Redirector is receiving packets (also called SMBs or Server Message Blocks). Network transmissions are divided into packets. The average number of bytes received in a packet can be obtained by dividing Bytes Received/sec by this counter. Some packets received might not contain incoming data, for example an acknowledgment to a write made by the Redirector would count as an incoming packet. </P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_BULK_COUNT</P>

<P><B>Bytes Transmitted/sec</B></P>

<P>Bytes Transmitted/sec is the rate at which bytes are leaving the Redirector to the network. It includes all application data as well as network protocol information (such as packet headers and the like.)</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_BULK_COUNT</P>

<P><B>Packets Transmitted/sec</B></P>

<P>Packets Transmitted/sec is the rate at which the Redirector is sending packets (also called SMBs or Server Message Blocks). Network transmissions are divided into packets. The average number of bytes transmitted in a packet can be obtained by dividing Bytes Transmitted/sec by this counter.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_BULK_COUNT</P>

<P><B>File Read Operations/sec</B></P>

<P>File Read Operations/sec is the rate at which applications are asking the Redirector for data. Each call to a file system or similar Application Program Interface (API) call counts as one operation.</P>

<P>Detail Level: Novice<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Read Operations Random/sec</B></P>

<P>Read Operations Random/sec counts the rate at which, on a file-by-file basis, reads are made that are not sequential. If a read is made using a particular file handle, and then is followed by another read that is not immediately the contiguous next byte, this counter is incremented by one.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Read Packets/sec</B></P>

<P>Read Packets/sec is the rate at which read packets are being placed on the network. Each time a single packet is sent with a request to read data remotely, this counter is incremented by one.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>File Write Operations/sec</B></P>

<P>File Write Operations/sec is the rate at which applications are sending data to the Redirector. Each call to a file system or similar Application Program Interface (API) call counts as one operation.</P>

<P>Detail Level: Novice<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Write Operations Random/sec</B></P>

<P>Write Operations Random/sec is the rate at which, on a file-by-file basis, writes are made that are not sequential. If a write is made using a particular file handle, and then is followed by another write that is not immediately the next contiguous byte, this counter is incremented by one.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Write Packets/sec</B></P>

<P>Write Packets/sec is the rate at which writes are being sent to the network. Each time a single packet is sent with a request to write remote data, this counter is incremented by one.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Server Sessions</B></P>

<P>Server Sessions counts the total number of security objects the Redirector has managed. For example, a logon to a server followed by a network access to the same server will establish one connection, but two sessions.</P>

<P>Detail Level: Novice<BR>
Counter Type: PERF_COUNTER_RAWCOUNT</P>

<P><B>Server Reconnects</B></P>

<P>Server Reconnects counts the number of times your Redirector has had to reconnect to a server in order to complete a new active request. You can be disconnected by the Server if you remain inactive for too long. Locally even if all your remote files are closed, the Redirector will keep your connections intact for (nominally) ten minutes. Such inactive connections are called Dormant Connections. Reconnecting is expensive in time.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_RAWCOUNT</P>

<P><B>Connect NetWare 2.x</B></P>

<P>Connect NetWare 2.x counts connections to NetWare 2.x servers.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_RAWCOUNT</P>

<P><B>Connect NetWare 3.x</B></P>

<P>Connect NetWare 3.x counts connections to NetWare 3.x servers.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_RAWCOUNT</P>

<P><B>Connect NetWare 4.x]</B></P>

<P>Connect NetWare 4.x counts connections to NetWare 4.x servers.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_RAWCOUNT</P>

<P><B>Server Disconnects</B></P>

<P>Server Disconnects counts the number of times a Server has disconnected your Redirector. See also Server Reconnects.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_RAWCOUNT</P>

<P><B>Packet Burst Read NCP Count/sec</B></P>

<P>Packet Burst Read NCP Count/sec is the rate of NetWare Core Protocol requests for Packet Burst Read. Packet Burst is a windowing protocol that improves performance.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Packet Burst Read Timeouts/sec</B></P>

<P>Packet Burst Read Timeouts/sec is the rate the NetWare Service needs to retransmit a Burst Read Request because the NetWare server took too long to respond.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Packet Burst Write NCP Count/sec</B></P>

<P>Packet Burst Write NCP Count/sec is the rate of NetWare Core Protocol requests for Packet Burst Write. Packet Burst is a windowing protocol that improves performance.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Packet Burst Write Timeouts/sec</B></P>

<P>Packet Burst Write Timeouts/sec is the rate the NetWare Service needs to retransmit a Burst Write Request because the NetWare server took too long to respond.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

<P><B>Packet Burst IO/sec</B></P>

<P>Packet Burst IO/sec is the sum of Packet Burst Read NCPs/sec and Packet Burst Write NCPs/sec.</P>

<P>Detail Level: Advanced<BR>
Counter Type: PERF_COUNTER_COUNTER</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
