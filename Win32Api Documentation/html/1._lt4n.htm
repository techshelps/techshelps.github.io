<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Class Display Device Contexts</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1._lt4n"></A><B>Class Display Device Contexts</B></P>

<P>By using a <I>class DC</I>, an application can use a single display DC for every window belonging to a given class. Class DCs are often used with control windows that are drawn using the same attribute values. Like private DCs, class DCs minimize the time required to prepare a DC for drawing. </P>

<P>Windows supplies a class DC for a window if it belongs to a window class having the CS_CLASSDC style. Windows creates the DC when creating the first window belonging to the class and then uses the same DC for all subsequently created windows in the class. Initially, the class DC has the same default values for attributes as a common DC, but the application can modify these at any time. Windows preserves all changes, except for the clipping region and device origin, until the last window in the class has been destroyed. A change made for one window applies to all windows in that class. </P>

<P>An application can retrieve the handle for the class DC by using the <A HREF="4f0b0z.htm"><B>GetDC</B></A> function any time after the first window has been created. The application can keep and use the handle without releasing it because the class DC is not part of the display DC cache. If the application creates another window in the same window class, the application must retrieve the class DC again. Retrieving the DC sets the correct device origin and clipping region for the new window. After the application retrieves the class DC for a new window in the class, the DC can no longer be used to draw in the original window without again retrieving it for that window. In general, each time it must draw in a window, an application must explicitly retrieve the class DC for the window. </P>

<P>Applications that use class DCs should always call <A HREF="f7ytuy.htm"><B>BeginPaint</B></A> when processing a <A HREF="f55xz2.htm">WM_PAINT</A> message. The function sets the correct device origin and clipping region for the window, and incorporates the update region. The application should also call <A HREF="8d6uz5.htm"><B>EndPaint</B></A> to restore the caret if <B>BeginPaint</B> hid it. <B>EndPaint </B>has no other effect on a class DC. </P>

<P>Windows passes the class DC when sending the <A HREF="fey63i.htm">WM_ERASEBKGND</A> message to the application, permitting the current attribute values to affect any drawing carried out by the application or Windows when processing this message. Windows supplies a window DC with the <A HREF="223p0.j.htm">WM_ICONERASEBKGND</A> message regardless of whether the corresponding window has a class DC. As it could with a window having a private DC, an application can use <A HREF="4m9cxu5.htm"><B>GetDCEx</B></A> to force Windows to return a common DC for the window that has a class DC. </P>

<P>Using class DCs is not recommended. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
