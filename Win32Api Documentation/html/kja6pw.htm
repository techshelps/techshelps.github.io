<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>QueueUserAPC [New - Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="kja6pw"></A><B>QueueUserAPC  <A HREF="__4wlt.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="36dp5f5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="24h9od3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[New - Windows NT]</P>

<P>The <B>QueueUserAPC</B> function adds a user-mode asynchronous procedure call (APC) object to the APC queue of the specified thread.</P>

<P><B>DWORD QueueUserAPC(</B></P>

<TABLE cols=2 width=399>

<TR VALIGN="top">
<TD width=44%><B>PAPCFUNC</B> <I>pfnAPC</I><B>,</B></TD>
<TD width=56%>// pointer to APC function</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    HANDLE</B> <I>hThread</I><B>,</B></TD>
<TD width=56%>// handle to the thread</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    DWORD</B> <I>dwData</I></TD>
<TD width=56%>// argument for the APC function</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>   );</B></TD>
<TD width=56%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>pfnAPC</I></P>

<P>Points to the application-supplied APC function to be called when the specified thread performs an alertable wait operation.</P>

<P><I>hThread</I></P>

<P>Specifies the handle to the thread. The handle must have THREAD_SET_CONTEXT access. For more information, see <A HREF="xzntt..htm">Thread Objects</A>. </P>

<P><I>dwData</I></P>

<P>Specifies a single DWORD argument that is passed to the APC function pointed to by the <I>pfnAPC</I> parameter.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is TRUE.</P>

<P>If the function fails, the return value is FALSE. There are no error values defined for this function that can be retrieved by calling <A HREF="11c2vs7.htm"><B>GetLastError</B></A>.</P>

<P><B>Remarks</B></P>

<P>The APC support provided in the operating system allows an application to queue an APC object to a thread. Each thread has its own APC queue. The queuing of an APC is a request for the thread to call the APC function. The operating system issues a software interrupt to direct the thread to call the APC function.</P>

<P>When a user-mode APC is queued, the thread is not directed to call the APC function unless it is in an alertable state. A thread enters an alertable state by using <A HREF="fmres8.htm"><B>SleepEx</B></A>, <A HREF="1olhsub.htm"><B>SignalObjectAndWait</B></A>, <A HREF="aqe6qk.htm"><B>WaitForSingleObjectEx</B></A>, <A HREF="1xsv84l.htm"><B>WaitForMultipleObjectsEx</B></A>, or <A HREF="14gl8uz.htm"><B>MsgWaitForMultipleObjectsEx</B></A> to perform an alertable wait operation. After the thread is in an alertable state, the thread handles all pending APCs in first in, first out (FIFO) order, and the wait operation returns WAIT_IO_COMPLETION.</P>

<P>If an application queues an APC before the thread begins running, the thread begins by calling the APC function. Once the thread calls an APC function, it calls the APC functions for all APCs in its APC queue.</P>

<P>When the thread is terminated using the <A HREF="c.xq03.htm"><B>ExitThread</B></A> or <A HREF="0tmwd4.htm"><B>TerminateThread</B></A> function, the APCs in its APC queue are lost. The APC functions are not called.</P>

<P>Note that the <B><U>ReadFileEx</U></B> and <B><U>WriteFileEx</U></B> functions are implemented using an APC as the completion notification callback mechanism.</P>

<P><B>See Also</B></P>

<P><A HREF="14gl8uz.htm"><B>MsgWaitForMultipleObjectsEx</B></A>, <A HREF="fm7wz7.htm"><B>ReadFileEx</B></A>, <A HREF="fmres8.htm"><B>SleepEx</B></A>, <A HREF="1xsv84l.htm"><B>WaitForMultipleObjectsEx</B></A>, <A HREF="aqe6qk.htm"><B>WaitForSingleObjectEx</B></A>, <A HREF="12g2wey.htm"><B>WriteFileEx</B></A></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
