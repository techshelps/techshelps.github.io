<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>DuplicateTokenEx [New - Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2my4.hr"></A><B>DuplicateTokenEx  <A HREF="yuvkud.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1966ja.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="afqqmm.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[New - Windows NT]</P>

<P>The <B>DuplicateTokenEx</B> function creates a new access token that duplicates an existing token. This function can create either a primary token or an impersonation token.</P>

<P><B>BOOL DuplicateTokenEx(</B></P>

<TABLE cols=2 width=646>

<TR VALIGN="top">
<TD width=61%><B>HANDLE</B> <I>hExistingToken</I><B>,</B></TD>
<TD width=39%>// handle to token to duplicate </TD>
</TR>

<TR VALIGN="top">
<TD width=61%><B>    DWORD</B> <I>dwDesiredAccess</I><B>,</B></TD>
<TD width=39%>// access rights of new token</TD>
</TR>

<TR VALIGN="top">
<TD width=61%><B>    LPSECURITY_ATTRIBUTES</B> <I>lpTokenAttributes</I><B>,</B></TD>
<TD width=39%>// security attributes of the new token</TD>
</TR>

<TR VALIGN="top">
<TD width=61%><B>    SECURITY_IMPERSONATION_LEVEL</B> <I>ImpersonationLevel</I><B>,</B></TD>
<TD width=39%>// impersonation level of new token</TD>
</TR>

<TR VALIGN="top">
<TD width=61%><B>    TOKEN_TYPE</B> <I>TokenType</I><B>,</B></TD>
<TD width=39%>// primary or impersonation token</TD>
</TR>

<TR VALIGN="top">
<TD width=61%><B>    PHANDLE</B> <I>phNewToken</I> </TD>
<TD width=39%>// handle to duplicated token</TD>
</TR>

<TR VALIGN="top">
<TD width=61%><B>   );</B></TD>
<TD width=39%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hExistingToken</I></P>

<P>Identifies an access token opened with TOKEN_DUPLICATE access. </P>

<P><I>dwDesiredAccess</I></P>

<P>Specifies the requested access rights for the new token. The <B>DuplicateTokenEx</B> function compares the requested access rights with the existing token's discretionary access-control list (ACL) to determine which rights are granted or denied. To request the same access rights as the existing token, specify zero. To request all access rights that are valid for the caller, specify MAXIMUM_ALLOWED. Otherwise, specify a combination of the following access rights. </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=48%><B>Value</B></TD>
<TD width=52%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_ADJUST_DEFAULT</TD>
<TD width=52%>Required to change the default ACL, primary group, or owner of an access token.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_ADJUST_GROUPS</TD>
<TD width=52%>Required to change the groups specified in an access token.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_ADJUST_PRIVILEGES</TD>
<TD width=52%>Required to change the privileges specified in an access token.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_ALL_ACCESS</TD>
<TD width=52%>Combines the STANDARD_RIGHTS_REQUIRED standard access rights and all individual access rights for tokens.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_ASSIGN_PRIMARY</TD>
<TD width=52%>Required to attach a primary token to a process in addition to the SE_CREATE_TOKEN_NAME privilege.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_DUPLICATE</TD>
<TD width=52%>Required to duplicate an access token.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_EXECUTE</TD>
<TD width=52%>Combines the STANDARD_RIGHTS_EXECUTE standard access rights and the TOKEN_IMPERSONATE access right.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_IMPERSONATE</TD>
<TD width=52%>Required to attach an impersonation access token to a process.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_QUERY</TD>
<TD width=52%>Required to query the contents of an access token.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_QUERY_SOURCE</TD>
<TD width=52%>Required to query the source of an access token.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_READ</TD>
<TD width=52%>Combines the STANDARD_RIGHTS_READ standard access rights and the TOKEN_QUERY access right.</TD>
</TR>

<TR VALIGN="top">
<TD width=48%>TOKEN_WRITE</TD>
<TD width=52%>Combines the STANDARD_RIGHTS_WRITE standard access rights and the TOKEN_ADJUST_PRIVILEGES, TOKEN_ADJUST_GROUPS, and TOKEN_ADJUST_DEFAULT access rights.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpTokenAttributes</I></P>

<P>Pointer to a <A HREF="be53kg.htm"><B>SECURITY_ATTRIBUTES</B></A> structure that specifies a security descriptor for the new token and determines whether child processes can inherit the token. If <I>lpTokenAttributes</I> is NULL, the token gets a default security descriptor and the handle cannot be inherited.</P>

<P><I>ImpersonationLevel</I></P>

<P>Specifies a value from the <A HREF="7c9aq0.htm"><B>SECURITY_IMPERSONATION_LEVEL</B></A> enumeration that indicates the impersonation level of the new token. </P>

<P><I>TokenType</I></P>

<P>Specifies one of the following values from the <B>TOKEN_TYPE</B> enumeration.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=34%><B>Value</B></TD>
<TD width=66%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=34%>TokenPrimary</TD>
<TD width=66%>The new token is a primary token that you can use in the <A HREF="_qx5ll.htm"><B>CreateProcessAsUser</B></A> function.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>TokenImpersonation</TD>
<TD width=66%>The new token is an impersonation token.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>phNewToken</I></P>

<P>Pointer to a <B>HANDLE</B> variable that receives the new token. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a nonzero value.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The <B>DuplicateTokenEx</B> function allows you to create a primary token that you can use in the <A HREF="_qx5ll.htm"><B>CreateProcessAsUser</B></A> function. This allows a server application that is impersonating a client to create a process that has the security context of the client. Note that the <B>DuplicateToken</B> function can create only impersonation tokens, which are not valid for <B>CreateProcessAsUser</B>. </P>

<P>The following is a typical scenario for using <B>DuplicateTokenEx</B> to create a primary token. A server application creates a thread that calls one of the impersonation functions, such as <A HREF="179whkw.htm"><B>ImpersonateNamedPipeClient</B></A>, to impersonate a client. The impersonating thread then calls the <A HREF="bsqiuv.htm"><B>OpenThreadToken</B></A> function to get its own token, which is an <I>impersonation token</I> that has the security context of the client. The thread specifies this impersonation token in a call to <B>DuplicateTokenEx</B>, specifying the TokenPrimary flag. <B>DuplicateTokenEx</B> creates a <I>primary token</I> that has the security context of the client. </P>

<P>When you have finished using the new token, call the <B>CloseHandle</B> function to close the token handle.</P>

<P><B>See Also</B></P>

<P><A HREF="ngwwie.htm"><B>CloseHandle</B></A>, <A HREF="_qx5ll.htm"><B>CreateProcessAsUser</B></A>, <A HREF="1bqkfbm.htm"><B>DdeImpersonateClient</B></A>, <A HREF="2hod_yx.htm"><B>DuplicateToken</B></A>, <A HREF="179whkw.htm"><B>ImpersonateNamedPipeClient</B></A>, <A HREF="bsqiuv.htm"><B>OpenThreadToken</B></A>, <A HREF="fa_a3n.htm"><B>RevertToSelf</B></A>, <B>RpcImpersonateClient</B>, <A HREF="be53kg.htm"><B>SECURITY_ATTRIBUTES</B></A>, <A HREF="7c9aq0.htm"><B>SECURITY_IMPERSONATION_LEVEL</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
