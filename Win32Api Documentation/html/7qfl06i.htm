<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>SYSTEM_INFO</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="7qfl06i"></A><B>SYSTEM_INFO  <A HREF="7_yqwz.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="2asgu6i.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="12jem1l.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SYSTEM_INFO</B> structure contains information about the current computer system. This includes the architecture and type of the processor, the number of processors in the system, the page size, and other such information. </P>

<P>typedef struct _SYSTEM_INFO { // sinf  </P>

<P>union { </P>

<P>DWORD  dwOemId; </P>

<P>struct { </P>

<P>WORD wProcessorArchitecture; </P>

<P>WORD wReserved; </P>

<P>}; </P>

<P>}; </P>

<P>DWORD  dwPageSize; </P>

<P>LPVOID lpMinimumApplicationAddress; </P>

<P>LPVOID lpMaximumApplicationAddress; </P>

<P>DWORD  dwActiveProcessorMask; </P>

<P>DWORD  dwNumberOfProcessors; </P>

<P>DWORD  dwProcessorType; </P>

<P>DWORD  dwAllocationGranularity; </P>

<P>WORD  wProcessorLevel; </P>

<P>WORD  wProcessorRevision; </P>

<P>} SYSTEM_INFO; </P>

<P></P>

<P><B>Members</B></P>

<P><B>dwOemId</B></P>

<P>An obsolete member that is retained for compatibility with previous versions of Windows NT. Beginning with Windows NT 3.51 and the initial release of Windows 95, use the <B>wProcessorArchitecture</B> branch of the union.</P>

<P><B>Windows 95:</B> The system always sets this member to zero, the value defined for PROCESSOR_ARCHITECTURE_INTEL.</P>

<P><B>wProcessorArchitecture</B></P>

<P>Specifies the system's processor architecture. This value can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>Value</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>PROCESSOR_ARCHITECTURE_INTEL</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>Windows NT only:</B> PROCESSOR_ARCHITECTURE_MIPS</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>Windows NT only:</B> PROCESSOR_ARCHITECTURE_ALPHA</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>Windows NT only:</B> PROCESSOR_ARCHITECTURE_PPC</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>Windows NT only:</B> PROCESSOR_ARCHITECTURE_UNKNOWN </TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>wReserved</B></P>

<P>Reserved for future use.</P>

<P><B>dwPageSize</B></P>

<P>Specifies the page size and the granularity of page protection and commitment. This is the page size used by the <A HREF="1m7v8go.htm"><B>VirtualAlloc</B></A> function. </P>

<P><B>lpMinimumApplicationAddress</B></P>

<P>Pointer to the lowest memory address accessible to applications and dynamic-link libraries (DLLs). </P>

<P><B>lpMaximumApplicationAddress</B></P>

<P>Pointer to the highest memory address accessible to applications and DLLs. </P>

<P><B>dwActiveProcessorMask</B></P>

<P>Specifies a mask representing the set of processors configured into the system. Bit 0 is processor 0; bit 31 is processor 31. </P>

<P><B>dwNumberOfProcessors</B></P>

<P>Specifies the number of processors in the system. </P>

<P><B>dwProcessorType</B></P>

<P><B>Windows 95:</B> </P>

<P>Specifies the type of processor in the system. </P>

<P><B>Windows NT:</B> </P>

<P>This member is no longer relevant, but is retained for compatibility with Windows 95 and previous versions of Windows NT. Use the <B>wProcessorArchitecture</B>, <B>wProcessorLevel</B>, and <B>wProcessorRevision</B> members to determine the type of processor.</P>

<P>This member is one of the following values:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>Value</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>PROCESSOR_INTEL_386</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>PROCESSOR_INTEL_486</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%>PROCESSOR_INTEL_PENTIUM</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>Windows NT only:</B> PROCESSOR_MIPS_R4000</TD>
</TR>

<TR VALIGN="top">
<TD colspan=2 width=100%><B>Windows NT only:</B> PROCESSOR_ALPHA_21064</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>dwAllocationGranularity</B></P>

<P>Specifies the granularity with which virtual memory is allocated. For example, a <B>VirtualAlloc</B> request to allocate 1 byte will reserve an address space of <B>dwAllocationGranularity</B> bytes. This value was hard coded as 64K in the past, but other hardware architectures may require different values. </P>

<P><B>wProcessorLevel</B></P>

<P><B>Windows 95:</B> This member is not used.</P>

<P><B>Windows NT:</B> Specifies the system's architecture-dependent processor level. </P>

<P>If <B>wProcessorArchitecture</B> is PROCESSOR_ARCHITECTURE_INTEL, <B>wProcessorLevel</B> can be one of the following values:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=22%><B>Value</B></TD>
<TD width=78%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%>3</TD>
<TD width=78%>Intel 80386</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>4</TD>
<TD width=78%>Intel 80486</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>5</TD>
<TD width=78%>Pentium</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If <B>wProcessorArchitecture</B> is PROCESSOR_ARCHITECTURE_MIPS, <B>wProcessorLevel</B> is of the form 00<I>xx</I>, where <I>xx</I> is an 8-bit implementation number (bits 8-15 of the PRId register). The member can be the following value:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=23%><B>Value</B></TD>
<TD width=77%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=23%>0004</TD>
<TD width=77%>MIPS R4000</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If <B>wProcessorArchitecture</B> is PROCESSOR_ARCHITECTURE_ALPHA, <B>wProcessorLevel</B> is of the form <I>xxxx</I>, where <I>xxxx</I> is a 16-bit processor version number (the low-order 16 bits of a version number from the firmware). The member can be one of the following values:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=24%><B>Decimal Value</B></TD>
<TD width=76%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>21064 </TD>
<TD width=76%>Alpha 21064</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>21066</TD>
<TD width=76%>Alpha 21066</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>21164</TD>
<TD width=76%>Alpha 21164</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If <B>wProcessorArchitecture</B> is PROCESSOR_ARCHITECTURE_PPC, <B>wProcessorLevel</B> is of the form <I>xxxx</I>, where <I>xxxx</I> is a 16-bit processor version number (the high-order 16 bits of the Processor Version Register). The member can be one of the following values:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=24%><B>Decimal Value</B></TD>
<TD width=76%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%>1 </TD>
<TD width=76%>PPC 601</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>3</TD>
<TD width=76%>PPC 603</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>4</TD>
<TD width=76%>PPC 604</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>6</TD>
<TD width=76%>PPC 603+</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>9</TD>
<TD width=76%>PPC 604+</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>20</TD>
<TD width=76%>PPC 620</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>wProcessorRevision</B></P>

<P><B>Windows 95:</B> This member is not used.</P>

<P><B>Windows NT:</B> Specifies an architecture-dependent processor revision. The following table shows how the revision value is assembled for each type of processor architecture.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=39%><B>Processor Architecture</B></TD>
<TD width=61%><B>Value</B></TD>
</TR>

<TR VALIGN="top">
<TD width=39%>Intel 80386 or 80486</TD>
<TD width=61%>A value of the form <I>xxyz</I>. 
<P>If <I>xx</I> is equal to 0xFF, <I>y</I> - 0xA is the model number, and <I>z</I> is the stepping identifier. For example, an Intel 80486-D0 system returns 0xFFD0.</P>

<P>If <I>xx</I> is not equal to 0xFF, <I>xx </I>+ 'A' is the stepping letter and <I>yz</I> is the minor stepping. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>Intel Pentium, <BR>
Cyrix, or <BR>
NextGen 586</TD>
<TD width=61%>A value of the form <I>xxyy</I>, where <I>xx</I> is the model number<I> </I>and <I>yy</I> is the stepping. For example, a value of 0x0201 indicates Model 2, Stepping 1.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>MIPS</TD>
<TD width=61%>A value of the form 00<I>xx</I>, where <I>xx</I> is the 8-bit revision number of the processor (the low-order 8 bits of the PRId register).</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>ALPHA</TD>
<TD width=61%>A value of the form <I>xxyy</I>, where <I>xxyy</I> is the low-order 16 bits of the processor revision number from the firmware. Display this value as follows: 
<P>Model 'A'+<I>xx</I>, Pass <I>yy</I></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>PPC</TD>
<TD width=61%>A value of the form <I>xxyy</I>, where <I>xxyy</I> is the low-order 16 bits of the Processor Version Register. Display this value as a fixed point number:
<P><I>xx</I>.<I>yy</I></P>
</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Remarks</B></P>

<P>Beginning with Windows NT 3.51 and the initial release of Windows 95, the <B>SYSTEM_INFO</B> structure has changed as follows:</P>

<P>·The <B>dwOemId</B> member has been changed to a union. The union supports a new way to describe processor architecture used by Windows NT, while maintaining compatibility with Windows 95 and previous versions of Windows NT. </P>

<P>·The <B>dwProcessorType</B> member is now obsolete on Windows NT. It is still used on Windows 95.</P>

<P>·A previously reserved <B>DWORD</B> member at the end of the structure has been replaced by the <B>wProcessorLevel</B> and <B>wProcessorRevision</B> members. Windows 95 does not use these members.</P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="nh29xo.htm"><B>GetSystemInfo</B></A>, <A HREF="2a9rvat.htm"><B>MapViewOfFile</B></A>, <A HREF="26u8i2.htm"><B>MapViewOfFileEx</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
