<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>OFNHookProc</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="f31p7d"></A><B>OFNHookProc  <A HREF="jax4ec.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="y3i0nj.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="_grvj7.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>An <B>OFNHookProc</B> hook procedure is an application-defined or library-defined callback procedure that is used with the Explorer-style Open and Save As common dialog boxes. The hook procedure receives notification messages sent from the common dialog box. The hook procedure also receives messages for any additional controls that you defined by specifying a child dialog template.</P>

<P>If you do not specify the OFN_EXPLORER flag when you create an Open or Save As common dialog box, and you want a hook procedure, you must use an old-style <A HREF="4_i3_.9.htm"><B>OFNHookProcOldStyle</B></A> hook procedure. In this case, the dialog box will have the old-style user interface.</P>

<P><B>UINT APIENTRY OFNHookProc(</B></P>

<TABLE cols=2 width=381>

<TR VALIGN="top">
<TD width=43%><B>HWND</B> <I>hdlg</I><B>,</B></TD>
<TD width=57%>// handle to child dialog window</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    UINT</B> <I>uiMsg</I><B>,</B></TD>
<TD width=57%>// message identifier</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    WPARAM</B> <I>wParam</I><B>,</B></TD>
<TD width=57%>// message parameter</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    LPARAM</B> <I>lParam</I> </TD>
<TD width=57%>// message parameter</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>   );</B></TD>
<TD width=57%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hdlg</I></P>

<P>Handle to the child dialog box of the Open or Save As dialog box. Use the <A HREF="r3ju_j.htm"><B>GetParent</B></A> function to get the handle to the Open or Save As dialog box window. </P>

<P><I>uiMsg</I></P>

<P>Identifies the message being received.</P>

<P><I>wParam</I></P>

<P>Specifies additional information about the message. The exact meaning depends on the value of the <I>uiMsg</I> parameter.</P>

<P><I>lParam</I></P>

<P>Specifies additional information about the message. The exact meaning depends on the value of the <I>uiMsg</I> parameter.</P>

<P>If the <I>uiMsg</I> parameter indicates the <A HREF="ii1w.b.htm">WM_INITDIALOG</A> message, <I>lParam</I> is a pointer to an <A HREF="2wivnae.htm"><B>OPENFILENAME</B></A> structure containing the values specified when the dialog box was created.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the hook procedure returns zero, the default dialog box procedure processes the message.</P>

<P>If the hook procedure returns a nonzero value, the default dialog box procedure ignores the message.</P>

<P>For the <A HREF="jnza8f.htm">CDN_SHAREVIOLATION</A> and <A HREF="yh4i0e.htm">CDN_FILEOK</A> notification messages, the hook procedure should return a nonzero value to indicate that it has used the <A HREF="d2okir.htm"><B>SetWindowLong</B></A> function to set a nonzero DWL_MSGRESULT value.</P>

<P><B>Remarks</B></P>

<P>When you use the <A HREF="fzgrjg.htm"><B>GetOpenFileName</B></A> or <A HREF="182.5be.htm"><B>GetSaveFileName</B></A> functions to create an Explorer-style Open or Save As common dialog box, you can provide an <B>OFNHookProc</B> hook procedure. To enable the hook procedure, use the <A HREF="2wivnae.htm"><B>OPENFILENAME</B></A> structure that you passed to the dialog creation function. Specify the pointer to the hook procedure in the <B>lpfnHook</B> member and specify the OFN_ENABLEHOOK flag in the <B>Flags</B> member.</P>

<P>If you provide a hook procedure for an Explorer-style common dialog box, the system creates a dialog box that is a child of the default dialog box. The hook procedure acts as the dialog procedure for the child dialog. This child dialog is based on the template you specified in the <B>OPENFILENAME</B> structure, or it is a default child dialog if no template is specified. The child dialog is created when the default dialog procedure is processing its <A HREF="ii1w.b.htm">WM_INITDIALOG</A> message. After the child dialog processes its own WM_INITDIALOG message, the default dialog procedure moves the standard controls, if necessary, to make room for any additional controls of the child dialog. The system then sends the <A HREF="y51ily.htm">CDN_INITDONE</A> notification message to the hook procedure.</P>

<P>The hook procedure does not receive messages intended for the standard controls of the default dialog box. You can subclass the standard controls, but this is discouraged because it may make your application incompatible with future versions of the common dialog box. However, the Explorer-style common dialogs provide a set of messages that the hook procedure can use to monitor and control the dialog. These include a set of <A HREF="1mzt7br.htm">WM_NOTIFY</A> notification messages sent from the dialog, as well as messages that you can send to retrieve information from the dialog. For a complete list of these messages, see "<A HREF="265k7c5.htm">Explorer-Style Hook Procedures</A>."</P>

<P>If the hook procedure processes the <A HREF="jye6cz.htm">WM_CTLCOLORDLG</A> message, it must return a valid brush handle for painting the background of the dialog box. In general, if it processes any WM_CTLCOLOR* message, it must return a valid brush handle for painting the background of the specified control.</P>

<P>Do not call the <A HREF="nyk21c.htm"><B>EndDialog</B></A> function from the hook procedure. Instead, the hook procedure can call the <A HREF="fixdt_.htm"><B>PostMessage</B></A> function to post a WM_COMMAND message with the IDABORT value to the dialog box procedure. Posting IDABORT closes the dialog box and causes the dialog box function to return FALSE. If you need to know why the hook procedure closed the dialog box, you must provide your own communication mechanism between the hook procedure and your application.</P>

<P><B>OFNHookProc</B> is a placeholder for the application-defined or library-defined function name. The <B>LPOFNHOOKPROC</B> type is a pointer to either an <B>OFNHookProc</B> or <B>OFNHookProcOldStyle</B> hook procedure.</P>

<P><B>See Also</B></P>

<P><A HREF="fzgrjg.htm"><B>GetOpenFileName</B></A>, <A HREF="182.5be.htm"><B>GetSaveFileName</B></A>, <A HREF="4_i3_.9.htm"><B>OFNHookProcOldStyle</B></A>, <A HREF="2wivnae.htm"><B>OPENFILENAME</B></A> </P>

</BODY>
</HTML>
