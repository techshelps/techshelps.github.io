<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>SnmpMgrTrapListen</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="3r09_5e"></A><B>SnmpMgrTrapListen  <A HREF="2x9..a5.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="3ol8_pd.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="qj0.0j.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SnmpMgrTrapListen</B> function registers the ability of a manager application to receive SNMP traps.</P>

<P><B>BOOL SnmpMgrTrapListen(</B></P>

<TABLE cols=2 width=515>

<TR VALIGN="top">
<TD width=46%><B>HANDLE </B><I>*phTrapAvailable</I></TD>
<TD width=54%>// event handle indicating trap(s) available</TD>
</TR>

<TR VALIGN="top">
<TD width=46%><B>   );</B></TD>
<TD width=54%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>phTrapAvailable</I></P>

<P>[out] Points to an event handle that will be used to indicate that there are traps available, and that the application should call the <A HREF="5_2__vt.htm"><B>SnmpMgrGetTrap</B></A> function.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is TRUE. </P>

<P>If the function fails, the return value is FALSE. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. <B>GetLastError</B> may return any of the following error codes:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=56%><B>Error Code</B></TD>
<TD width=44%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=56%> SNMP_MEM_ALLOC_ERROR</TD>
<TD width=44%>Indicates a memory allocation error.</TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SNMP_MGMTAPI_TRAP_DUPINIT</TD>
<TD width=44%>Indicates that this function has already been called.</TD>
</TR>

<TR VALIGN="top">
<TD width=56%>SNMP_MGMTAPI_AGAIN</TD>
<TD width=44%>Indicates an error occurred; the application can attempt to call the function again.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>This function may return other system errors as well.</P>

<P><B>Remarks</B></P>

<P>It is important to note that the <B>SnmpMgrTrapListen</B> function succeeds on Windows NT 4.0 only if the SNMP Trap Service has been started. See <A HREF="lx8sam.htm">Turning SNMP On and Off</A> for additional information. </P>

<P>The event that the <I>phTrapAvailable</I> parameter points to allows event-driven acquisition of SNMP traps. If you call the <B>SnmpMgrTrapListen</B> function first, you can ignore the event handle and poll the <A HREF="5_2__vt.htm"><B>SnmpMgrGetTrap</B></A> function for traps at regular intervals instead.</P>

<P>Another method to acquire traps is to create a thread to wait on the event using the <A HREF="j9iq2g.htm"><B>WaitForSingleObject</B></A> function. When the call initiates an event, the thread should clear the event using the <A HREF="1.ih1gv.htm"><B>ResetEvent</B></A> function. Then the thread should repeatedly call the <B>SnmpMgrGetTrap</B> function until it returns a value of FALSE.</P>

<P>Always call the <B>SnmpMgrTrapListen</B> function <I>before</I> calling <B>SnmpMgrGetTrap</B> to receive traps. If an SNMP manager application calls <B>SnmpMgrGetTrap</B> <I>first</I> to receive traps, it returns a value of FALSE, even if there are traps available. If the application calls <A HREF="11c2vs7.htm"><B>GetLastError</B></A> before calling <B>SnmpMgrTrapListen</B>, <B>GetLastError</B> returns the error code SNMP_MGMTAPI_TRAP_ERRORS.</P>

<P><B>See Also </B></P>

<P><A HREF="5_2__vt.htm"><B>SnmpMgrGetTrap</B></A>, <A HREF="j9iq2g.htm"><B>WaitForSingleObject</B></A>, <A HREF="1.ih1gv.htm"><B>ResetEvent</B></A></P>

</BODY>
</HTML>
