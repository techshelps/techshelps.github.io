<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Sending a Message</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1_hx6re"></A><B>Sending a Message</B></P>

<P>The <A HREF="1724msn.htm"><B>SendMessage</B></A> function is used to send a message directly to a window procedure. <B>SendMessage</B> calls a window procedure and waits for that procedure to process the message and return a result. </P>

<P>A message can be sent to any window in the system; all that is required is a window handle. Windows uses the handle to determine which window procedure should receive the message. </P>

<P>Before processing a message that may have been sent from another thread, a window procedure should first call the <A HREF="1mpehwg.htm"><B>InSendMessage</B></A> function. If this function returns TRUE, the window procedure should call <A HREF="g_oup..htm"><B>ReplyMessage</B></A> before any function that causes the thread to yield control, as shown in the following example. </P>

<P>case WM_USER + 5:  </P>

<P>if (InSendMessage()) </P>

<P>ReplyMessage(TRUE); </P>

<P></P>

<P>DialogBox(hInst, "MyDialogBox", hwndMain, (DLGPROC) MyDlgProc); </P>

<P>break; </P>

<P></P>

<P>A number of messages can be sent to controls in a dialog box. These control messages set the appearance, behavior, and content of controls or retrieve information about controls. For example, the <A HREF="4532_t6.htm">CB_ADDSTRING</A> message can add a string to a combo box, and the <A HREF="1k5u_r..htm">BM_SETCHECK</A> message can set the check state of a check box or radio button. </P>

<P>Use the <A HREF="_ix_a8.htm"><B>SendDlgItemMessage</B></A> function to send a message to a control, specifying the identifier of the control and the handle of the dialog box window that contains the control. The following example, taken from a dialog box procedure, copies a string from a combo box's edit control into its list box. The example uses <B>SendDlgItemMessage</B> to send a CB_ADDSTRING message to the combo box. </P>

<P>HWND hwndCombo;  </P>

<P>int cTxtLen; </P>

<P>PSTR pszMem; </P>

<P></P>

<P>switch (uMsg) </P>

<P>{ </P>

<P>case WM_COMMAND: </P>

<P>switch (LOWORD(wParam)) </P>

<P>{ </P>

<P>case IDD_ADDCBITEM: </P>

<P>// Get the handle of the combo box and the </P>

<P>// length of the string in the edit control </P>

<P>// of the combo box. </P>

<P></P>

<P>hwndCombo = GetDlgItem(hwndDlg, IDD_COMBO); </P>

<P>cTxtLen = GetWindowTextLength(hwndCombo); </P>

<P></P>

<P>// Allocate memory for the string and copy </P>

<P>// the string into the memory. </P>

<P></P>

<P>pszMem = (PSTR) VirtualAlloc((LPVOID) NULL, </P>

<P>(DWORD) (cTxtLen + 1), MEM_COMMIT, </P>

<P>PAGE_READWRITE); </P>

<P>GetWindowText(hwndCombo, pszMem, </P>

<P>cTxtLen + 1); </P>

<P></P>

<P>// Add the string to the list box of the </P>

<P>// combo box and remove the string from the </P>

<P>// edit control of the combo box. </P>

<P></P>

<P>if (*pszMem != NULL) </P>

<P>{ </P>

<P>SendDlgItemMessage(hwndDlg, IDD_COMBO, </P>

<P>CB_ADDSTRING, 0, </P>

<P>(DWORD) ((LPSTR) pszMem)); </P>

<P>SetWindowText(hwndCombo, (LPSTR) NULL); </P>

<P>} </P>

<P></P>

<P>// Free the memory and return. </P>

<P></P>

<P>VirtualFree(pszMem, 0, MEM_RELEASE); </P>

<P>return TRUE; </P>

<P>// </P>

<P>// Process other dialog box commands. </P>

<P>// </P>

<P></P>

<P>} </P>

<P>// </P>

<P>// Process other dialog box messages. </P>

<P>// </P>

<P></P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
