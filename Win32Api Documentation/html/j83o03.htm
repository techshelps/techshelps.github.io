<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Decryption Example</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="j83o03"></A><B>Decryption Example</B></P>

<P>This example reads the encrypted data from the file created by the "Encryption Example" (test1.xxx), decrypts it using the RC2 block cipher, and writes out the plaintext data to another file (test1.txt). The session key used to perform the decryption is read from the ciphertext file.</P>

<P>#include &lt;wincrypt.h&gt;</P>

<P></P>

<P>FILE *hSource = NULL;</P>

<P>FILE *hDest = NULL;</P>

<P>int eof = 0;</P>

<P>HCRYPTPROV hProv = 0;</P>

<P>HCRYPTKEY hKey = 0;</P>

<P>#define BLOCK_SIZE 160</P>

<P>BYTE pbBuffer[BLOCK_SIZE];</P>

<P>DWORD dwCount;</P>

<P>BYTE *pbKeyBlob = NULL;</P>

<P>DWORD dwBlobLen;</P>

<P>// Open source file.</P>

<P>if((hSource=fopen("test1.xxx","rb"))==NULL) {</P>

<P>printf("Error opening source file!\n");</P>

<P>goto done;</P>

<P>}</P>

<P>// Open destination file.</P>

<P>if((hDest=fopen("test1.txt","wb"))==NULL) {</P>

<P>printf("Error opening destination file!\n");</P>

<P>goto done;</P>

<P>}</P>

<P>// Get handle to the default provider.</P>

<P>if(!CryptAcquireContext(&amp;hProv, NULL, NULL, PROV_RSA_FULL, 0)) {</P>

<P>printf("Error %x during CryptAcquireContext!\n", GetLastError());</P>

<P>goto done;</P>

<P>}</P>

<P>// Read key blob length from source file and allocate memory.</P>

<P>fread(&amp;dwBlobLen, sizeof(DWORD), 1, hSource);</P>

<P>if(ferror(hSource) || feof(hSource)) {</P>

<P>printf("Error reading file header!\n");</P>

<P>goto done;</P>

<P>}</P>

<P>if((pbKeyBlob = malloc(dwBlobLen)) == NULL) {</P>

<P>printf("Out of memory!\n");</P>

<P>goto done;</P>

<P>}</P>

<P>// Read key blob from source file.</P>

<P>fread(pbKeyBlob, 1, dwBlobLen, hSource);</P>

<P>if(ferror(hSource) || feof(hSource)) {</P>

<P>printf("Error reading file header!\n");</P>

<P>goto done;</P>

<P>}</P>

<P>// Import key blob into CSP.</P>

<P>if(!CryptImportKey(hProv, pbKeyBlob, dwBlobLen, 0, 0, &amp;hKey)) {</P>

<P>printf("Error %x during CryptImportKey!\n", GetLastError());</P>

<P>goto done;</P>

<P>}</P>

<P>// Decrypt source file and write to destination file.</P>

<P>do {</P>

<P>// Read up to BLOCK_SIZE bytes from source file.</P>

<P>dwCount = fread(pbBuffer, 1, BLOCK_SIZE, hSource);</P>

<P>if(ferror(hSource)) {</P>

<P>printf("Error reading data from source file!\n");</P>

<P>goto done;</P>

<P>}</P>

<P>eof=feof(hSource);</P>

<P>// Decrypt data.</P>

<P>if(!CryptDecrypt(hKey, 0, eof, 0, pbBuffer, &amp;dwCount)) {</P>

<P>printf("Error %x during CryptDecrypt!\n", GetLastError());</P>

<P>goto done;</P>

<P>}</P>

<P>// Write data to destination file.</P>

<P>fwrite(pbBuffer, 1, dwCount, hDest);</P>

<P>if(ferror(hDest)) {</P>

<P>printf("Error writing data to destination file!\n");</P>

<P>goto done;</P>

<P>}</P>

<P>} while(!feof(hSource));</P>

<P>done:</P>

<P>// Free memory.</P>

<P>if(pbKeyBlob) free(pbKeyBlob);</P>

<P>// Destroy session key.</P>

<P>if(hKey != 0) CryptDestroyKey(hKey);</P>

<P>// Release provider handle.</P>

<P>if(hProv != 0) CryptReleaseContext(hProv, 0);</P>

<P>// Close source file.</P>

<P>if(hSource != NULL) fclose(hSource);</P>

<P>// Close destination file.</P>

<P>if(hDest != NULL) fclose(hDest);</P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
