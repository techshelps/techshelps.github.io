<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Changing a Service Configuration</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1xazky3"></A><B>Changing a Service Configuration</B></P>

<P>In the following example, a service configuration program uses the <A HREF="5x.__7b.htm"><B>ChangeServiceConfig</B></A> function to change the configuration parameters of an installed service. The program first tries to lock the database, to prevent the SCM from starting a service while it is being reconfigured. If it successfully locks the database, the program opens a handle to the service object, modifies its configuration, unlocks the database, and then closes the service  object handle. If the program does not successfully in lock the database, it uses the <A HREF="dkgkou.htm"><B>QueryServiceLockStatus</B></A> function to retrieve information about the lock. </P>

<P>VOID ReconfigureSampleService(BOOL fDisable)  </P>

<P>{ </P>

<P>SC_LOCK sclLock; </P>

<P>LPQUERY_SERVICE_LOCK_STATUS lpqslsBuf; </P>

<P>DWORD dwBytesNeeded, dwStartType; </P>

<P></P>

<P>// Need to acquire database lock before reconfiguring. </P>

<P></P>

<P>sclLock = LockServiceDatabase(schSCManager); </P>

<P></P>

<P>// If the database cannot be locked, report the details. </P>

<P></P>

<P>if (sclLock == NULL) </P>

<P>{ </P>

<P>// Exit if the database is not locked by another process. </P>

<P></P>

<P>if (GetLastError() != ERROR_SERVICE_DATABASE_LOCKED) </P>

<P>MyErrorExit("LockServiceDatabase"); </P>

<P></P>

<P>// Allocate a buffer to get details about the lock. </P>

<P></P>

<P>lpqslsBuf = (LPQUERY_SERVICE_LOCK_STATUS) LocalAlloc( </P>

<P>LPTR, sizeof(QUERY_SERVICE_LOCK_STATUS)+256); </P>

<P>if (lpqslsBuf == NULL) </P>

<P>MyErrorExit("LocalAlloc"); </P>

<P></P>

<P>// Get and print the lock status information. </P>

<P></P>

<P>if (!QueryServiceLockStatus( </P>

<P>schSCManager, </P>

<P>lpqslsBuf, </P>

<P>sizeof(QUERY_SERVICE_LOCK_STATUS)+256, </P>

<P>&amp;dwBytesNeeded) ) </P>

<P>MyErrorExit("QueryServiceLockStatus"); </P>

<P></P>

<P>if (lpqslsBuf-&gt;fIsLocked) </P>

<P>printf("Locked by: %s, duration: %d seconds\n", </P>

<P>lpqslsBuf-&gt;lpLockOwner, </P>

<P>lpqslsBuf-&gt;dwLockDuration); </P>

<P>else </P>

<P>printf("No longer locked\n"); </P>

<P></P>

<P>LocalFree(lpqslsBuf); </P>

<P>MyErrorExit("Could not lock database"); </P>

<P>} </P>

<P></P>

<P>// The database is locked, so it is safe to make changes. </P>

<P></P>

<P>// Open a handle to the service. </P>

<P></P>

<P>schService = OpenService( </P>

<P>schSCManager,           // SCManager database </P>

<P>TEXT("Sample_Srv"),     // name of service </P>

<P>SERVICE_CHANGE_CONFIG); // need CHANGE access </P>

<P>if (schService == NULL) </P>

<P>MyErrorExit("OpenService"); </P>

<P></P>

<P>dwStartType = (fDisable) ? SERVICE_DISABLED : </P>

<P>SERVICE_DEMAND_START; </P>

<P></P>

<P>if (! ChangeServiceConfig( </P>

<P>schService,        // handle of service </P>

<P>SERVICE_NO_CHANGE, // service type: no change </P>

<P>dwStartType,       // change service start type </P>

<P>SERVICE_NO_CHANGE, // error control: no change </P>

<P>NULL,              // binary path: no change </P>

<P>NULL,              // load order group: no change </P>

<P>NULL,              // tag ID: no change </P>

<P>NULL,              // dependencies: no change </P>

<P>NULL,              // account name: no change </P>

<P>NULL) )            // password: no change </P>

<P>{</P>

<P>MyErrorExit("ChangeServiceConfig"); </P>

<P>}</P>

<P>else </P>

<P>printf("ChangeServiceConfig SUCCESS\n"); </P>

<P></P>

<P>// Release the database lock. </P>

<P></P>

<P>UnlockServiceDatabase(sclLock); </P>

<P></P>

<P>// Close the handle to the service. </P>

<P></P>

<P>CloseServiceHandle(schService); </P>

<P>} </P>

<P></P>

</BODY>
</HTML>
