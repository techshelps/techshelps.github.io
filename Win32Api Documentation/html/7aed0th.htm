<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>CreateFiber</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="7aed0th"></A><B>CreateFiber  <A HREF="6em0yj.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="glns2h.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="7wnz9r.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>CreateFiber</B> function allocates a fiber object, assigns it a stack, and sets up execution to begin at the specified start address, typically the fiber function. This function does not schedule the fiber.</P>

<P><B>LPVOID CreateFiber(</B></P>

<TABLE cols=2 width=554>

<TR VALIGN="top">
<TD width=57%><B>DWORD</B> <I>dwStackSize</I><B>,</B></TD>
<TD width=43%>// initial thread stack size, in bytes </TD>
</TR>

<TR VALIGN="top">
<TD width=57%><B>    LPFIBER_START_ROUTINE</B> <I>lpStartAddress</I><B>,</B></TD>
<TD width=43%>// pointer to fiber function</TD>
</TR>

<TR VALIGN="top">
<TD width=57%><B>    LPVOID</B> <I>lpParameter</I></TD>
<TD width=43%>// argument for new fiber </TD>
</TR>

<TR VALIGN="top">
<TD width=57%><B>   );</B></TD>
<TD width=43%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>dwStackSize</I></P>

<P>Specifies the size, in bytes, of the stack for the new fiber. If zero is specified, the stack size defaults to the same size as that of the main thread. The function fails if it cannot commit <I>dwStackSize</I> bytes. Note that the system increases the stack size dynamically, if necessary. The stack is freed when the thread terminates.</P>

<P><I>lpStartAddress</I></P>

<P>Points to the application-supplied function to be executed by the fiber and represents the starting address of the fiber. The function accepts a single argument and does not return a value. Execution of the newly created fiber does not begin until another fiber calls the <A HREF="f4wpe4.htm"><B>SwitchToFiber</B></A> function with this address.</P>

<P><I>lpParameter</I></P>

<P>Specifies a single argument that is passed to the fiber. This value can be retrieved by the fiber using the <A HREF="23y.ry.htm"><B>GetFiberData</B></A> function.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the address of the fiber.</P>

<P>If the function fails, the return value is NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>.</P>

<P><B>Remarks</B></P>

<P>Before a thread can schedule a fiber using the <A HREF="f4wpe4.htm"><B>SwitchToFiber</B></A><B> </B>function, it must call the <A HREF="75zmvp.htm"><B>ConvertThreadToFiber</B></A><B> </B>function<B> </B>so there is a fiber associated with the thread.</P>

<P>The fiber function is of type FIBER_START_ROUTINE. It accepts a single value of type PVOID (fiber data) and does not return a value. The prototype for this function is as follows:</P>

<P>VOID WINAPI FiberFunc( PVOID lpParameter );</P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="75zmvp.htm"><B>ConvertThreadToFiber</B></A>,<B> <A HREF="23y.ry.htm">GetFiberData</A></B>, <A HREF="f4wpe4.htm"><B>SwitchToFiber</B></A></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
