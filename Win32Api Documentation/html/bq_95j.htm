<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Communicating with the Debugger</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="bq_95j"></A><B>Communicating with the Debugger</B></P>

<P>The <A HREF="w85cwp.htm"><B>OutputDebugString</B></A> function sends a string from the process being debugged to the debugger by generating an OUTPUT_DEBUG_STRING_EVENT debugging event. A process can detect whether it is being debugged by calling the <A HREF="4_m764.htm"><B>IsDebuggerPresent</B></A> function. </P>

<P>The <A HREF="c5hzq4.htm"><B>DebugBreak</B></A> function causes a breakpoint exception in the current process. A breakpoint is a location in a program where execution is stopped to allow the developer to examine the program's code, variables, and register values and, as necessary, to make changes, continue execution, or terminate execution. </P>

<P>The <A HREF="43gom9.htm"><B>FatalExit</B></A> function terminates the current process and gives execution control to the debugger, but unlike <B>DebugBreak</B>, it does not generate an exception. This function should only be used as a last resort, because it does not always free the process's memory or close its files. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
