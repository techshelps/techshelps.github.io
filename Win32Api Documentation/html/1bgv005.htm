<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetFileAttributesEx [New - Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1bgv005"></A><B>GetFileAttributesEx  <A HREF="566a38.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qnj9so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1f83g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>[New - Windows NT]</P>

<P>The <B>GetFileAttributesEx</B> function obtains attribute information about a specified file or directory. </P>

<P>This function is similar to the <A HREF="3pqdmo.htm"><B>GetFileAttributes</B></A> function. <B>GetFileAttributes</B> returns a set of FAT-style attribute information. <B>GetFileAttributesEx</B> is designed to obtain other sets of file or directory attribute information. Currently, <B>GetFileAttributeEx</B> obtains a set of standard attributes that is a superset of the FAT-style attribute information. </P>

<P><B>BOOL GetFileAttributesEx(</B></P>

<TABLE cols=2 width=705>

<TR VALIGN="top">
<TD width=43%><B>LPCTSTR</B> <I>lpFileName</I><B>,</B> </TD>
<TD width=57%>// pointer to string that specifies a file or directory  </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    GET_FILEEX_INFO_LEVELS</B> <I>fInfoLevelId</I><B>,</B> </TD>
<TD width=57%>// value that specifies the type of attribute information to obtain </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    LPVOID</B> <I>lpFileInformation</I> </TD>
<TD width=57%>// pointer to buffer to receive attribute information </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>   );</B></TD>
<TD width=57%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpFileName</I></P>

<P>Pointer to a null-terminated string that specifies a file or directory. </P>

<P>By default, this string is limited to MAX_PATH characters. The limit is related to how the <B>GetFileAttributesEx </B>function parses paths. An application can transcend this limit and send in paths longer than MAX_PATH characters by calling the wide (W) version of <B>GetFileAttributesEx</B> and prepending "\\?\" to the path. The "\\?\" tells the function to turn off path parsing. This technique also works with UNC names. The "\\?\" is ignored as part of the path. For example, "\\?\C:\myworld\private" is seen as "C:\myworld\private", and "\\?\UNC\peanuts\hotstuff\coolapps" is seen as "\\peanuts\hotstuff\coolapps". </P>

<P><I>fInfoLevelId</I></P>

<P>Enumeration type value that specifies the set of attribute information to obtain. </P>

<P>You can use the following value for <I>fInfoLevelId</I>:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%><B>Value</B></TD>
<TD width=67%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=33%>GetFileExInfoStandard</TD>
<TD width=67%>The function obtains a standard set of attribute information. The data is returned in a <A HREF="79__.i.htm"><B>WIN32_FILE_ATTRIBUTE_DATA</B></A> structure. </TD>
</TR>
</TABLE><BR>

<P></P>

<P>Future releases of Win32-based operating systems and extensions may define other values for the <B>GET_FILEEX_INFO_LEVELS</B> enum type.</P>

<P><I>lpFileInformation</I></P>

<P>Pointer to a buffer that receives the attribute information.</P>

<P>The type of attribute information stored into this buffer is determined by the value of <I>fInfoLevelId</I>, as follows:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=33%><B>Value of <I>fInfoLevelId</I></B></TD>
<TD width=67%><B>Structure Stored into *<I>lpFileInformation</I></B></TD>
</TR>

<TR VALIGN="top">
<TD width=33%>GetFileExInfoStandard</TD>
<TD width=67%><A HREF="79__.i.htm"><B>WIN32_FILE_ATTRIBUTE_DATA</B></A>. </TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a nonzero value. </P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>See Also</B></P>

<P><A HREF="3pqdmo.htm"><B>GetFileAttributes</B></A>, <A HREF="ha1.i7.htm"><B>SetFileAttributes</B></A>, <A HREF="79__.i.htm"><B>WIN32_FILE_ATTRIBUTE_DATA</B></A>  </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
