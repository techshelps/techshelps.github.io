<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Rotation</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="22paj95"></A><B>Rotation</B></P>

<P>Many CAD applications provide features that rotate objects drawn in the client area. If your application features rotation capabilities, use the <A HREF="hyrlg_.htm"><B>SetWorldTransform</B></A> function to set the appropriate world-space to page-space transformation. This function receives a pointer to an <A HREF="1mgjuvy.htm"><B>XFORM</B></A> structure containing the appropriate values. The <B>eM11</B>, <B>eM12</B>, <B>eM21</B>, and <B>eM22</B> members of <B>XFORM</B> specify, respectively, the cosine, sine, negative sine, and cosine of the angle of rotation. </P>

<P>When <I>rotation</I> occurs, the points that constitute an object are rotated with respect to the coordinate-space origin. The following illustration shows a 20- by 20-unit rectangle rotated 30 degrees when copied from world coordinate space to page coordinate space. </P>

<P><IMG SRC="../images/bm68.gif" ALT="" BORDER=0></P>

<P>In the preceding illustration, each point in the rectangle was rotated 30 degrees with respect to the coordinate-space origin. </P>

<P>The following algorithm computes the new x-coordinate (<I>x</I>') for a point (<I>x</I>,<I>y</I>) that is rotated by angle <I>A</I> with respect to the coordinate-space origin. </P>

<P>x' = (x * cos A) - (y * sin A)  </P>

<P></P>

<P>The following algorithm computes the y-coordinate (<I>y</I>') for a point (<I>x</I>,<I>y</I>) that is rotated by the angle <I>A</I> with respect to the origin. </P>

<P>y' = (x * sin A) + (y * cos A)  </P>

<P></P>

<P>The two rotation transformations can be combined in a 2-by-2 matrix as follows. </P>

<P>|x' y'| == |x y| * | cos A   sin A|  </P>

<P>|-sin A   cos A|  </P>

<P></P>

<P>The 2-by-2 matrix that produced the rotation contains the following values. </P>

<P>| .8660    .5000|  </P>

<P>|-.5000    .8660|  </P>

<P></P>

<P><B>Rotation Algorithm Derivation</B></P>

<P>Rotation algorithms are based on trigonometry's addition theorem stating that the trigonometric function of a sum of two angles (<I>A1</I> and <I>A2</I>) can be expressed in terms of the trigonometric functions of the two angles. </P>

<P>sin(A1 + A2) = (sin A1 * cos A2) + (cos A1 * sin A2)  </P>

<P>cos(A1 + A2) = (cos A1 * cos A2) - (sin A1 * sin A2)  </P>

<P></P>

<P>The following illustration shows a point <I>p</I> rotated counterclockwise to a new position <I>p'</I>. In addition, it shows two triangles formed by a line drawn from the coordinate-space origin to each point and a line drawn from each point through the x-axis. </P>

<P><IMG SRC="../images/bm69.gif" ALT="" BORDER=0></P>

<P>Using trigonometry, the x-coordinate of point <I>p</I> can be obtained by multiplying the length of the hypotenuse <I>h</I> by the cosine of <I>A1</I>. </P>

<P>x = h * cos A1  </P>

<P></P>

<P>The y-coordinate of point <I>p</I> can be obtained by multiplying the length of the hypotenuse <I>h</I> by the sine of <I>A1</I>. </P>

<P>y = h * sin A1  </P>

<P></P>

<P>Likewise, the x-coordinate of point <I>p'</I> can be obtained by multiplying the length of the hypotenuse <I>h</I> by the cosine of (<I>A1</I> + <I>A2</I>). </P>

<P>x' = h * cos (A1 + A2)  </P>

<P></P>

<P>Finally, the y-coordinate of point <I>p'</I> can be obtained by multiplying the length of the hypotenuse <I>h</I> by the sine of (<I>A1</I> + <I>A2</I>). </P>

<P>y' = h * sin (A1 + A2)  </P>

<P></P>

<P>Using the addition theorem, the preceding algorithms become the following. </P>

<P>x' = (h * cos A1 * cos A2) - (h * sin A1 * sin A2)  </P>

<P>y' = (h * cos A1 * sin A2) + (h * sin A1 * cos A2)  </P>

<P></P>

<P>The rotation algorithms for a given point rotated by angle <I>A2</I> can be obtained by substituting <I>x</I> for each occurrence of (<I>h</I> * cos <I>A1</I>) and substituting <I>y</I> for each occurrence of (<I>h</I> * sin <I>A1</I>). </P>

<P>x' = (x * cos A2) - (y * sin A2)  </P>

<P>y' = (x * sin A2) + (y * cos A2)  </P>

<P></P>

</BODY>
</HTML>
