<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetNumberOfConsoleInputEvents</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="bspmbg"></A><B>GetNumberOfConsoleInputEvents  <A HREF="106he2o.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7re1xz.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF=".hu4wz.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetNumberOfConsoleInputEvents</B> function retrieves the number of unread input records in the console's input buffer. </P>

<P><B>BOOL GetNumberOfConsoleInputEvents(</B></P>

<TABLE cols=2 width=469>

<TR VALIGN="top">
<TD width=52%><B>HANDLE</B> <I>hConsoleInput</I><B>,</B></TD>
<TD width=48%>// handle of console input buffer </TD>
</TR>

<TR VALIGN="top">
<TD width=52%><B>    LPDWORD</B> <I>lpcNumberOfEvents</I> </TD>
<TD width=48%>// address for number of events </TD>
</TR>

<TR VALIGN="top">
<TD width=52%><B>   );</B></TD>
<TD width=48%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hConsoleInput</I></P>

<P>Identifies the console input buffer. The handle must have GENERIC_READ access. </P>

<P><I>lpcNumberOfEvents</I></P>

<P>Points to a 32-bit variable that receives the number of unread input records in the console's input buffer. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>The <B>GetNumberOfConsoleInputEvents</B> function reports the total number of unread input records in the input buffer, including keyboard, mouse, and window-resizing input records. Processes using the <A HREF="cjnd8p.htm"><B>ReadFile</B></A> or <A HREF="4z7f5n.htm"><B>ReadConsole</B></A> function can only read keyboard input. Processes using the <A HREF="1ojp.d.htm"><B>ReadConsoleInput</B></A> function can read all types of input records. </P>

<P>A process can specify a console input buffer handle in one of the <A HREF="y2tc_3.htm">wait functions</A> to determine when there is unread console input. When the input buffer is not empty, the state of a console input buffer handle is signaled. </P>

<P>To read input records from a console input buffer without affecting the number of unread records, use the <A HREF="10v_cgq.htm"><B>PeekConsoleInput</B></A> function. To discard all unread records in a console's input buffer, use the <A HREF="y_g9ag.htm"><B>FlushConsoleInputBuffer</B></A> function. </P>

<P><B>See Also</B></P>

<P><A HREF="y_g9ag.htm"><B>FlushConsoleInputBuffer</B></A>, <A HREF="10v_cgq.htm"><B>PeekConsoleInput</B></A>, <A HREF="4z7f5n.htm"><B>ReadConsole</B></A>, <A HREF="1ojp.d.htm"><B>ReadConsoleInput</B></A>, <A HREF="cjnd8p.htm"><B>ReadFile</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
