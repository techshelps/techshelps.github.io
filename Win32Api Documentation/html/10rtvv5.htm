<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetNamedPipeInfo</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="10rtvv5"></A><B>GetNamedPipeInfo  <A HREF="4ojk0d.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qxj_so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1p87g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetNamedPipeInfo</B> function retrieves information about the specified named pipe. </P>

<P><B>BOOL GetNamedPipeInfo(</B></P>

<TABLE cols=2 width=549>

<TR VALIGN="top">
<TD width=40%><B>HANDLE</B> <I>hNamedPipe</I><B>,</B></TD>
<TD width=60%>// handle of named pipe </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    LPDWORD</B> <I>lpFlags</I><B>,</B></TD>
<TD width=60%>// address of flags indicating type of pipe </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    LPDWORD</B> <I>lpOutBufferSize</I><B>,</B></TD>
<TD width=60%>// address of size, in bytes, of pipe's output buffer </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    LPDWORD</B> <I>lpInBufferSize</I><B>,</B></TD>
<TD width=60%>// address of size, in bytes, of pipe's input buffer </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    LPDWORD</B> <I>lpMaxInstances</I> </TD>
<TD width=60%>// address of max. number of pipe instances </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>   );</B></TD>
<TD width=60%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hNamedPipe</I></P>

<P>Identifies the named pipe instance. The handle must have GENERIC_READ access to the named pipe. </P>

<P><I>lpFlags</I></P>

<P>Points to a 32-bit variable that indicates the type of the named pipe. This parameter can be NULL if this information is not required. Otherwise, use the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=39%><B>Value</B></TD>
<TD width=61%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=39%>PIPE_CLIENT_END</TD>
<TD width=61%>The handle refers to the client end of a named pipe instance. This is the default.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>PIPE_SERVER_END</TD>
<TD width=61%>The handle refers to the server end of a named pipe instance. If this value is not specified, the handle refers to the client end of a named pipe instance.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>PIPE_TYPE_BYTE</TD>
<TD width=61%>The named pipe is a byte pipe. This is the default.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>PIPE_TYPE_MESSAGE</TD>
<TD width=61%>The named pipe is a message pipe. If this value is not specified, the pipe is a byte pipe.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpOutBufferSize</I></P>

<P>Points to a 32-bit variable that receives the size, in bytes, of the buffer for outgoing data. If the buffer size is zero, the buffer is allocated as needed. This parameter can be NULL if this information is not required. </P>

<P><I>lpInBufferSize</I></P>

<P>Points to a 32-bit variable that receives the size, in bytes, of the buffer for incoming data. If the buffer size is zero, the buffer is allocated as needed. This parameter can be NULL if this information is not required. </P>

<P><I>lpMaxInstances</I></P>

<P>Points to a 32-bit variable that receives the maximum number of pipe instances that can be created. If the variable is set to PIPE_UNLIMITED_INSTANCES, the number of pipe instances that can be created is limited only by the availability of system resources. This parameter can be NULL if this information is not required. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>See Also</B></P>

<P><A HREF="21dzyt.htm"><B>CreateNamedPipe</B></A>, <A HREF="842lr_.htm"><B>GetNamedPipeHandleState</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
