<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a Shortcut Font-Attributes Menu</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="54c7_kr"></A><B>Creating a Shortcut Font-Attributes Menu</B></P>

<P>The example in this section contains portions of code from an application that creates and displays a shortcut menu that enables the user to set fonts and font attributes. The application displays the menu in the client area of its main window whenever the user clicks the left mouse button. </P>

<P>Here is the menu template for the shortcut menu that is provided in the application's resource-definition file. </P>

<P>PopupMenu MENU  </P>

<P>BEGIN </P>

<P>POPUP "Dummy Popup" </P>

<P>BEGIN </P>

<P>POPUP "Fonts" </P>

<P>BEGIN </P>

<P>MENUITEM "Courier",     IDM_FONT_COURIER </P>

<P>MENUITEM "Times Roman", IDM_FONT_TMSRMN </P>

<P>MENUITEM "Swiss",       IDM_FONT_SWISS </P>

<P>MENUITEM "Helvetica",   IDM_FONT_HELV </P>

<P>MENUITEM "Old English", IDM_FONT_OLDENG </P>

<P>END </P>

<P>POPUP "Sizes" </P>

<P>BEGIN </P>

<P>MENUITEM "7",  IDM_SIZE_7 </P>

<P>MENUITEM "8",  IDM_SIZE_8 </P>

<P>MENUITEM "9",  IDM_SIZE_9 </P>

<P>MENUITEM "10", IDM_SIZE_10 </P>

<P>MENUITEM "11", IDM_SIZE_11 </P>

<P>MENUITEM "12", IDM_SIZE_12 </P>

<P>MENUITEM "14", IDM_SIZE_14 </P>

<P>END </P>

<P>POPUP "Styles" </P>

<P>BEGIN </P>

<P>MENUITEM "Bold",        IDM_STYLE_BOLD </P>

<P>MENUITEM "Italic",      IDM_STYLE_ITALIC </P>

<P>MENUITEM "Strike Out",  IDM_STYLE_SO </P>

<P>MENUITEM "Superscript", IDM_STYLE_SUPER </P>

<P>MENUITEM "Subscript",   IDM_STYLE_SUB </P>

<P>END </P>

<P>END </P>

<P></P>

<P>END </P>

<P></P>

<P>The following example gives the window procedure and supporting functions used to create and display the shortcut menu. </P>

<P>LRESULT APIENTRY MenuWndProc(hwnd, uMsg, wParam, lParam)  </P>

<P>HWND hwnd; </P>

<P>UINT uMsg; </P>

<P>WPARAM wParam; </P>

<P>LPARAM lParam; </P>

<P>{ </P>

<P>RECT rc;    // client area             </P>

<P>POINT pt;   // location of mouse click  </P>

<P></P>

<P>switch (uMsg) { </P>

<P>case WM_LBUTTONDOWN: </P>

<P></P>

<P>// Get the bounding rectangle of the client area. </P>

<P></P>

<P>GetClientRect(hwnd, (LPRECT) &amp;rc); </P>

<P></P>

<P>// Get the client coordinates for the mouse click.  </P>

<P></P>

<P>pt.x = LOWORD(lParam); </P>

<P>pt.y = HIWORD(lParam); </P>

<P></P>

<P>// If the mouse click took place inside the client </P>

<P>// area, execute the application-defined function </P>

<P>// that displays the shortcut menu. </P>

<P></P>

<P>if (PtInRect((LPRECT) &amp;rc, pt)) </P>

<P>HandlePopupMenu(hwnd, pt); </P>

<P>break; </P>

<P>. </P>

<P>. // Process other window messages.  </P>

<P>. </P>

<P></P>

<P>default: </P>

<P>return DefWindowProc(hwnd, uMsg, wParam, lParam); </P>

<P>} </P>

<P>return NULL; </P>

<P>} </P>

<P></P>

<P></P>

<P>VOID APIENTRY HandlePopupMenu(hwnd, pt) </P>

<P>HWND hwnd; </P>

<P>POINT pt; </P>

<P>{ </P>

<P>HMENU hmenu;            // menu template          </P>

<P>HMENU hmenuTrackPopup;  // shortcut menu   </P>

<P></P>

<P>//  Load the menu template containing the shortcut menu from the </P>

<P>// application's resources. </P>

<P></P>

<P>hmenu = LoadMenu(hinst, "PopupMenu"); </P>

<P>if (hmenu == NULL) </P>

<P>return; </P>

<P></P>

<P>// Get the first shortcut menu in the menu template. This is the </P>

<P>// menu that TrackPopupMenu displays. </P>

<P></P>

<P>hmenuTrackPopup = GetSubMenu(hmenu, 0); </P>

<P></P>

<P>// TrackPopup uses screen coordinates, so convert the </P>

<P>// coordinates of the mouse click to screen coordinates. </P>

<P></P>

<P>ClientToScreen(hwnd, (LPPOINT) &amp;pt); </P>

<P></P>

<P>// Draw and track the shortcut menu.  </P>

<P></P>

<P>TrackPopupMenu(hmenuTrackPopup, TPM_LEFTALIGN | TPM_LEFTBUTTON, </P>

<P>pt.x, pt.y, 0, hwnd, NULL); </P>

<P></P>

<P>// Destroy the menu. </P>

<P></P>

<P>DestroyMenu(hmenu); </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
