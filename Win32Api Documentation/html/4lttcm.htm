<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Writing Characters or Colors to Consecutive Cells</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="4lttcm"></A><B>Writing Characters or Colors to Consecutive Cells</B></P>

<P>Characters or color attributes can be written to specified character cells in a screen buffer. The following example uses the <A HREF=".04pw0.htm"><B>WriteConsoleOutputCharacter</B></A> function to write a string of characters beginning at the upper left corner of a screen buffer. Then the example uses the <A HREF="4say_9k.htm"><B>WriteConsoleOutputAttribute</B></A> function to write a string of color attributes to the first 51 cells of the same row. The <I>coord</I> parameter for both functions specifies the character cell in the screen buffer at which writing begins. The location in the console window where these characters or colors appear depends on the current window rectangle of the screen buffer. For additional information about the relationship between a screen buffer and its windows, see <A HREF="go566n.htm">Window and Screen Buffer Size</A> and <A HREF="3frg79.htm">Scrolling the Screen Buffer</A>. </P>

<P>HANDLE hOutput;  </P>

<P>LPTSTR lpszString = "Character String"; </P>

<P>DWORD cWritten; </P>

<P>BOOL fSuccess; </P>

<P>COORD coord; </P>

<P>WORD wColors[3], wColor; </P>

<P>CHAR chFillChar; </P>

<P></P>

<P>/* Write a string of characters to a screen buffer. */ </P>

<P></P>

<P>coord.X = 0;            /* start at first cell */ </P>

<P>coord.Y = 0;            /*   of first row      */ </P>

<P>fSuccess = WriteConsoleOutputCharacter( </P>

<P>hOutput,              /* screen buffer handle     */ </P>

<P>lpszString,           /* pointer to source string */ </P>

<P>lstrlen(lpszString),  /* length of string         */ </P>

<P>coord,                /* first cell to write to   */ </P>

<P>&amp;cWritten);           /* actual number written to */ </P>

<P>if (! fSuccess) </P>

<P>MyErrorExit("WriteConsoleOutputCharacter"); </P>

<P></P>

<P>/* Write a string of colors to a screen buffer. */ </P>

<P></P>

<P>wColors[0] = BACKGROUND_RED; </P>

<P>wColors[1] = BACKGROUND_RED |     /* white background */ </P>

<P>BACKGROUND_GREEN | </P>

<P>BACKGROUND_BLUE; </P>

<P>wColors[2] = BACKGROUND_BLUE; </P>

<P>for (;fSuccess &amp;&amp; coord.X &lt; 50; coord.X += 3) </P>

<P>fSuccess = WriteConsoleOutputAttribute( </P>

<P>hOutput,          /* screen buffer handle     */ </P>

<P>wColors,          /* pointer to source string */ </P>

<P>3,                /* length of string         */ </P>

<P>coord,            /* first cell to write to   */ </P>

<P>&amp;cWritten);       /* actual number written to */ </P>

<P>if (! fSuccess) </P>

<P>MyErrorExit("WriteConsoleOutputAttribute"); </P>

<P></P>

<P>The same character or color attribute can be written to a specified number of consecutive screen buffer cells beginning at a specified location. The following example uses the <A HREF="nweob.htm"><B>FillConsoleOutputCharacter</B></A> function to clear a 80-by-50-character screen buffer, and then it uses the <A HREF="dj44qi.htm"><B>FillConsoleOutputAttribute</B></A> function to set the color attributes of the same cells. </P>

<P>/* Fill an 80-by-50-character screen buffer with the space character. */  </P>

<P></P>

<P>coord.X = 0;            /* start at first cell */ </P>

<P>coord.Y = 0;            /*   of first row      */ </P>

<P>chFillChar = ' '; </P>

<P></P>

<P>fSuccess = FillConsoleOutputCharacter( </P>

<P>hStdout,          /* screen buffer handle     */ </P>

<P>chFillChar,       /* fill with spaces         */ </P>

<P>80*50,            /* number of cells to fill  */ </P>

<P>coord,            /* first cell to write to   */ </P>

<P>&amp;cWritten);       /* actual number written to */ </P>

<P>if (! fSuccess) </P>

<P>MyErrorExit("FillConsoleOutputCharacter"); </P>

<P></P>

<P>/* Set 80-by-50-character screen buffer colors to white text on red. */ </P>

<P></P>

<P>wColor = BACKGROUND_RED | </P>

<P>FOREGROUND_RED | </P>

<P>FOREGROUND_GREEN | </P>

<P>FOREGROUND_BLUE; </P>

<P>fSuccess = FillConsoleOutputAttribute( </P>

<P>hStdout,          /* screen buffer handle     */ </P>

<P>wColor,           /* color to fill with       */ </P>

<P>80*50,            /* number of cells to fill  */ </P>

<P>coord,            /* first cell to write to   */ </P>

<P>&amp;cWritten);       /* actual number written to */ </P>

<P>if (! fSuccess) </P>

<P>MyErrorExit("FillConsoleOutputAttribute"); </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
