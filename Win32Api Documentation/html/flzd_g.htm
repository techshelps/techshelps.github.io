<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>SystemParametersInfo</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="flzd_g"></A><B>SystemParametersInfo  <A HREF="11hylri.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="3xn1p7.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="2errzeo.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SystemParametersInfo</B> function queries or sets systemwide parameters. This function can also update the user profile while setting a parameter. </P>

<P><B>BOOL SystemParametersInfo(</B></P>

<TABLE cols=2 width=393>

<TR VALIGN="top">
<TD width=38%><B>UINT</B> <I>uiAction</I><B>,</B></TD>
<TD width=62%>// system parameter to query or set</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    UINT</B> <I>uiParam</I><B>,</B></TD>
<TD width=62%>// depends on action to be taken</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    PVOID</B> <I>pvParam</I><B>,</B></TD>
<TD width=62%>// depends on action to be taken</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    UINT</B> <I>fWinIni</I> </TD>
<TD width=62%>// user profile update flag</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>   );</B></TD>
<TD width=62%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>uiAction</I></P>

<P>Specifies the systemwide parameter to query or set. This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=51%><B>Value</B></TD>
<TD width=49%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETACCESSTIMEOUT</TD>
<TD width=49%>Retrieves information about the time-out period associated with the accessibility features. The <I>pvParam</I> parameter must point to an <A HREF="dlshi2.htm"><B>ACCESSTIMEOUT</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>ACCESSTIMEOUT</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETANIMATION</TD>
<TD width=49%>Retrieves the animation effects associated with user actions. The <I>pvParam</I> parameter must point to an <A HREF="vnzorl.htm"><B>ANIMATIONINFO</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>ANIMATIONINFO</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETBEEP</TD>
<TD width=49%>Indicates whether the warning beeper is on.
<P>The <I>pvParam</I> parameter is a pointer to a <B>BOOL</B> that receives TRUE if the beeper is on, or FALSE if it is off.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETBORDER</TD>
<TD width=49%>Retrieves the border multiplier factor that determines the width of a window's sizing border. The <I>pvParam</I> parameter must point to an integer variable.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETDEFAULTINPUTLANG</TD>
<TD width=49%>Returns the keyboard layout handle for the system default input language. The <I>pvParam</I> parameter must point to the 32-bit variable that receives the keyboard layout handle for the default language. The <I>uiParam</I> parameter is not used. </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETDRAGFULLWINDOWS</TD>
<TD width=49%>Determines whether dragging of full windows is enabled. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if enabled, or FALSE otherwise. 
<P><B>Windows 95: </B>This flag is supported only if Windows Plus! is installed. See SPI_GETWINDOWSEXTENSION.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETFASTTASKSWITCH</TD>
<TD width=49%>This flag is obsolete. Previous versions of Windows use this flag to determine whether ALT+TAB fast task switching is enabled. Beginning with Windows 95 and Windows NT version 4.0, fast task switching is always enabled.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETFILTERKEYS</TD>
<TD width=49%>Retrieves information about the FilterKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="1h06y7p.htm"><B>FILTERKEYS</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>FILTERKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETFONTSMOOTHING</TD>
<TD width=49%>Indicates whether the font smoothing feature is enabled. This feature uses font anti-aliasing to make font curves appear smoother by painting pixels at different gray levels. 
<P>The <I>pvParam</I> parameter is a pointer to a <B>BOOL</B> variable that receives TRUE if the feature is enabled, or FALSE if it is not.</P>

<P><B>Windows 95: </B>This flag is supported only if Windows Plus! is installed. See SPI_GETWINDOWSEXTENSION.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETGRIDGRANULARITY</TD>
<TD width=49%>Retrieves the current granularity value of the desktop sizing grid. The <I>pvParam</I> parameter must point to an integer variable that receives the granularity.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETHIGHCONTRAST</TD>
<TD width=49%><B>Windows 95 only:</B> Retrieves information about the HighContrast accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="bkpkd3.htm"><B>HIGHCONTRAST</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>HIGHCONTRAST</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETICONMETRICS</TD>
<TD width=49%>Retrieves the metrics associated with icons. The <I>pvParam</I> parameter must point to an <A HREF="v4b1p.htm"><B>ICONMETRICS</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>ICONMETRICS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETICONTITLELOGFONT</TD>
<TD width=49%>Retrieves the logical font information for the current icon-title font. The <I>uiParam</I> parameter specifies the size of a <A HREF="5m4itk.htm"><B>LOGFONT</B></A> structure, and the <I>pvParam</I> parameter must point to the <B>LOGFONT</B> structure to fill in.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETICONTITLEWRAP</TD>
<TD width=49%>Determines whether icon-title wrapping is enabled. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if enabled, or FALSE otherwise.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETKEYBOARDDELAY</TD>
<TD width=49%>Retrieves the keyboard repeat-delay setting. The <I>pvParam</I> parameter must point to an integer variable that receives the setting.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETKEYBOARDPREF</TD>
<TD width=49%>Determines whether the user relies on the keyboard instead of the mouse, and wants applications to display keyboard interfaces that would otherwise be hidden. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if the user relies on the keyboard; the variable receives FALSE otherwise.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETKEYBOARDSPEED</TD>
<TD width=49%>Retrieves the keyboard repeat-speed setting. The <I>pvParam</I> parameter must point to a <B>DWORD</B> variable that receives the setting.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETLOWPOWERACTIVE</TD>
<TD width=49%>This flag is not supported for 32-bit applications on Windows NT or Windows 95.
<P><B>Windows 95 only:</B> For 16-bit Windows applications, this value determines whether the low-power phase of screen saving is enabled or not. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if enabled, or FALSE if disabled.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETLOWPOWERTIMEOUT</TD>
<TD width=49%>This flag is not supported for 32-bit applications on Windows NT or Windows 95.
<P><B>Windows 95 only:</B> For 16-bit Windows applications, this value retrieves the time-out value for the low-power phase of screen saving. The <I>pvParam</I> parameter must point to an integer value that receives the value. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETMENUDROPALIGNMENT</TD>
<TD width=49%>Determines whether pop-up menus are left-aligned or right-aligned, relative to the corresponding menu-bar item. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if left-aligned, or FALSE otherwise.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETMINIMIZEDMETRICS</TD>
<TD width=49%>Retrieves the metrics associated with minimized windows. The <I>pvParam</I> parameter must point to a <A HREF="bhcv9.htm"><B>MINIMIZEDMETRICS</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>MINIMIZEDMETRICS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETMOUSE</TD>
<TD width=49%>Retrieves the two mouse threshold values and the mouse speed. The <I>pvParam</I> parameter must point to an array of three integers that receives these values. See <A HREF="4i.4ca.htm"><B>mouse_event</B></A> for further information. </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETMOUSEHOVERHEIGHT</TD>
<TD width=49%><B>Windows NT only:</B> Gets the height, in pixels, of the rectangle within which the mouse pointer has to stay for <A HREF="17j5jrr.htm"><B>TrackMouseEvent</B></A> to generate a WM_MOUSEHOVER message. The height is returned in a UINT pointed to by the <I>pvParam</I> parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETMOUSEHOVERTIME</TD>
<TD width=49%><B>Windows NT only:</B> Gets the time, in milliseconds, that the mouse pointer has to stay in the hover rectangle for <B>TrackMouseEvent</B> to generate a WM_MOUSEHOVER message. The time is returned in a UINT pointed to by the <I>pvParam</I> parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETMOUSEHOVERWIDTH</TD>
<TD width=49%><B>Windows NT only:</B> Gets the width, in pixels, of the rectangle within which the mouse pointer has to stay for <A HREF="17j5jrr.htm"><B>TrackMouseEvent</B></A> to generate a WM_MOUSEHOVER message. The width is returned in a UINT pointed to by the <I>pvParam</I> parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETMOUSEKEYS</TD>
<TD width=49%>Retrieves information about the MouseKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="1n3ntoy.htm"><B>MOUSEKEYS</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>MOUSEKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETMOUSETRAILS</TD>
<TD width=49%><B>Windows 95 only:</B> Indicates whether the Mouse Trails feature is enabled. This feature improves the visibility of mouse cursor movements by briefly showing a trail of cursors and quickly erasing them.
<P>The <I>pvParam</I> parameter is a pointer to an <B>INT</B> variable that receives a value. If the value is zero or 1, the feature is disabled. If the value is greater than 1, the feature is enabled and the value indicates the number of cursors drawn in the trail. The <I>uiParam</I> parameter is not used. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETNONCLIENTMETRICS</TD>
<TD width=49%>Retrieves the metrics associated with the nonclient area of nonminimized windows. The <I>pvParam</I> parameter must point to a <A HREF="d8x14a.htm"><B>NONCLIENTMETRICS</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>NONCLIENTMETRICS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETPOWEROFFACTIVE</TD>
<TD width=49%>This flag is not supported for 32-bit applications on Windows NT or Windows 95.
<P><B>Windows 95 only:</B> For 16-bit Windows applications, this value determines whether the power-off phase of screen saving is enabled or not. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if enabled, or FALSE if disabled.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETPOWEROFFTIMEOUT</TD>
<TD width=49%>This flag is not supported for 32-bit applications on Windows NT or Windows 95.
<P><B>Windows 95 only:</B> For 16-bit Windows applications, this value retrieves the time-out value for the power-off phase of screen saving. The <I>pvParam</I> parameter must point to an integer value that receives the value. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETSCREENREADER</TD>
<TD width=49%><B>Windows 95 only:</B> Determines whether a screen reviewer utility is running. A screen reviewer utility directs textual information to an output device, such as a speech synthesizer or Braille display. When this flag is set, an application should provide textual information in situations where it would otherwise present the information graphically. 
<P>The <I>pvParam</I> parameter is a pointer to a <B>BOOL</B> variable that receives TRUE if a screen reviewer utility is running, or FALSE if it is not.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETSCREENSAVEACTIVE</TD>
<TD width=49%>Determines whether screen saving is enabled. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if enabled, or FALSE otherwise.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETSCREENSAVETIMEOUT</TD>
<TD width=49%>Retrieves the screen saver time-out value, in seconds. The <I>pvParam</I> parameter must point to an integer variable that receives the value.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETSERIALKEYS</TD>
<TD width=49%><B>Windows 95 only:</B> Retrieves information about the SerialKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="ecx42g.htm"><B>SERIALKEYS</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>SERIALKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETSHOWSOUNDS</TD>
<TD width=49%>Determines whether the Show Sounds accessibility flag is on or off. If it is on, the user requires an application to present information visually in situations where it would otherwise present the information only in audible form. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if the feature is on, or FALSE if it is off.
<P>Using this value is equivalent to calling <A HREF="jolchi.htm"><B>GetSystemMetrics</B></A><B> </B>(SM_SHOWSOUNDS). That is the recommended call.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETSNAPTODEFBUTTON</TD>
<TD width=49%><B>Windows NT only:</B> Determines whether the snap-to-default-button feature is enabled. If enabled, the mouse cursor automatically moves to the default button, such as "OK" or "Apply", of a dialog box. The <I>pvParam</I> parameter must point to a <B>BOOL</B> variable that receives TRUE if the feature is on, or FALSE if it is off.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETSOUNDSENTRY</TD>
<TD width=49%>Retrieves information about the SoundSentry accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="4n07_he.htm"><B>SOUNDSENTRY</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>SOUNDSENTRY</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETSTICKYKEYS</TD>
<TD width=49%>Retrieves information about the StickyKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="25clks.htm"><B>STICKYKEYS</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>STICKYKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETTOGGLEKEYS</TD>
<TD width=49%>Retrieves information about the ToggleKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="zltlgx.htm"><B>TOGGLEKEYS</B></A> structure that receives the information. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>TOGGLEKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETWHEELSCROLLLINES</TD>
<TD width=49%><B>Windows NT only:</B> Gets the number of lines to scroll when the mouse wheel is rotated. The number of lines is returned in a UINT pointed to by pvParam. The default value is 3.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETWINDOWSEXTENSION</TD>
<TD width=49%><B>Windows 95 only:</B> Indicates whether the Windows extension, Windows Plus!, is installed. Set the <I>uiParam</I> parameter to 1. The <I>pvParam</I> parameter is not used. The function returns TRUE if the extension is installed, or FALSE if it is not.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_GETWORKAREA</TD>
<TD width=49%>Retrieves the size of the working area. The working area is the portion of the screen not obscured by the tray. The <I>pvParam</I> parameter must point to the <A HREF="ezena2.htm"><B>RECT</B></A> structure that receives the coordinates of the working area.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_ICONHORIZONTALSPACING</TD>
<TD width=49%>Sets the width of an icon cell. The <I>uiParam</I> parameter specifies the width, in pixels.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_ICONVERTICALSPACING</TD>
<TD width=49%>Sets the height of an icon cell. The <I>uiParam</I> parameter specifies the height, in pixels.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_LANGDRIVER</TD>
<TD width=49%>Not implemented. </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SCREENSAVERRUNNING</TD>
<TD width=49%><B>Windows 95 only:</B> Used internally; applications should not use this flag.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETACCESSTIMEOUT</TD>
<TD width=49%>Sets the time-out period associated with the accessibility features. The <I>pvParam</I> parameter must point to an <A HREF="dlshi2.htm"><B>ACCESSTIMEOUT</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>ACCESSTIMEOUT</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETANIMATION</TD>
<TD width=49%>Sets the animation effects associated with user actions. The <I>pvParam</I> parameter must point to an <A HREF="vnzorl.htm"><B>ANIMATIONINFO</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>ANIMATIONINFO</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETBEEP</TD>
<TD width=49%>Turns the warning beeper on or off. The <I>uiParam</I> parameter specifies TRUE for on, or FALSE for off.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETBORDER</TD>
<TD width=49%>Sets the border multiplier factor that determines the width of a window's sizing border. The <I>uiParam</I> parameter specifies the new value.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDEFAULTINPUTLANG</TD>
<TD width=49%>Sets the default input language for the system shell and applications. The specified language must be displayable using the current system character set. The <I>uiParam</I> parameter is not used. The <I>pvParam</I> parameter must point to a 32-bit variable that contains the keyboard layout handle for the default language.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDESKPATTERN</TD>
<TD width=49%>Sets the current desktop pattern by causing Windows to read the <B>Pattern=</B> setting from the WIN.INI file.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDESKWALLPAPER</TD>
<TD width=49%>Sets the desktop wallpaper. The <I>pvParam</I> parameter must point to a null-terminated string containing the name of a bitmap file.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDOUBLECLICKTIME</TD>
<TD width=49%>Sets the double-click time for the mouse to the value of the <I>uiParam</I> parameter. The double-click time is the maximum number of milliseconds that can occur between the first and second clicks of a double-click.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDOUBLECLKHEIGHT</TD>
<TD width=49%>Sets the height of the double-click rectangle to the value of the <I>uiParam</I> parameter.
<P>The double-click rectangle is the rectangle within which the second click of a double-click must fall for it to be registered as a double-click.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDOUBLECLKWIDTH</TD>
<TD width=49%>Sets the width of the double-click rectangle to the value of the <I>uiParam</I> parameter.
<P>The double-click rectangle is the rectangle within which the second click of a double-click must fall for it to be registered as a double-click.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDRAGFULLWINDOWS</TD>
<TD width=49%>Sets dragging of full windows either on or off. The <I>uiParam</I> parameter specifies TRUE for on, or FALSE for off.
<P><B>Windows 95: </B>This flag is supported only if Windows Plus! is installed. See SPI_GETWINDOWSEXTENSION.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDRAGHEIGHT</TD>
<TD width=49%>Sets the height, in pixels, of the rectangle used to detect the start of a drag operation. 
<P>See SM_CXDRAG and SM_CYDRAG in the table under the <I>nIndex</I> parameter of <A HREF="jolchi.htm"><B>GetSystemMetrics</B></A>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETDRAGWIDTH</TD>
<TD width=49%>Sets the width, in pixels, of the rectangle used to detect the start of a drag operation.
<P>See SM_CXDRAG and SM_CYDRAG in the table under the <I>nIndex</I> parameter of <B>GetSystemMetrics</B>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETFASTTASKSWITCH</TD>
<TD width=49%>This flag is obsolete. Previous versions of Windows use this flag to enable or disable ALT+TAB fast task switching. Beginning with Windows 95 and Windows NT version 4.0, fast task switching is always enabled.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETFILTERKEYS</TD>
<TD width=49%>Sets the parameters of the FilterKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="1h06y7p.htm"><B>FILTERKEYS</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>FILTERKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETFONTSMOOTHING</TD>
<TD width=49%>Enables or disables the font smoothing feature, which uses font anti-aliasing to make font curves appear smoother by painting pixels at different gray levels. 
<P>To enable the feature, set the <I>uiParam</I> parameter to TRUE. To disable the feature, set <I>uiParam</I> to FALSE. </P>

<P><B>Windows 95: </B>This flag is supported only if Windows Plus! is installed. See SPI_GETWINDOWSEXTENSION.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETGRIDGRANULARITY</TD>
<TD width=49%>Sets the granularity of the desktop sizing grid to the value of the <I>uiParam </I>parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETHANDHELD</TD>
<TD width=49%>Used internally; applications should not use this value.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETHIGHCONTRAST</TD>
<TD width=49%><B>Windows 95 only:</B> Sets the parameters of the HighContrast accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="bkpkd3.htm"><B>HIGHCONTRAST</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>HIGHCONTRAST</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETICONMETRICS</TD>
<TD width=49%>Sets the metrics associated with icons. The <I>pvParam</I> parameter must point to an <A HREF="v4b1p.htm"><B>ICONMETRICS</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>ICONMETRICS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETICONTITLELOGFONT</TD>
<TD width=49%>Sets the font that is used for icon titles. The <I>uiParam</I> parameter specifies the size of a <A HREF="5m4itk.htm"><B>LOGFONT</B></A> structure, and the <I>pvParam</I> parameter must point to a <B>LOGFONT</B> structure.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETICONTITLEWRAP</TD>
<TD width=49%>Turns icon-title wrapping on or off. The <I>uiParam</I> parameter specifies TRUE for on, or FALSE for off.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETKEYBOARDDELAY</TD>
<TD width=49%>Sets the keyboard repeat-delay setting to the value of the <I>uiParam</I> parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETKEYBOARDPREF</TD>
<TD width=49%><B>Windows 95 only:</B> Sets the keyboard preference. The <I>uiParam</I> parameter specifies TRUE if the user relies on the keyboard instead of the mouse, and wants applications to display keyboard interfaces that would otherwise be hidden; <I>uiParam</I> is FALSE otherwise.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETKEYBOARDSPEED</TD>
<TD width=49%>Sets the keyboard repeat-speed setting to the value of the <I>uiParam</I> parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETLANGTOGGLE</TD>
<TD width=49%>Sets the hot key set for switching between input languages. The <I>uiParam</I> and <I>pvParam</I> parameters are not used. The value sets the shortcut keys in the keyboard property sheets by reading the registry again. The registry must be set before this flag is used. the path in the registry is \HKEY_CURRENT_USER\keyboard layout\toggle. Valid values are "1" = ALT+SHIFT, "2" = CTRL+SHIFT, and "3" = none.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETLOWPOWERACTIVE</TD>
<TD width=49%><B>Windows 95 only:</B> Activates or deactivates the low-power phase of screen saving. Set <I>uiParam</I> to 1 to activate, or 0 to deactivate. The <I>pvParam</I> parameter must be NULL.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETLOWPOWERTIMEOUT</TD>
<TD width=49%><B>Windows 95 only:</B> Retrieves the time-out value, in seconds, for the low-power phase of screen saving. The <I>uiParam</I> parameter specifies the new value. The <I>pvParam</I> parameter must be NULL.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMENUDROPALIGNMENT</TD>
<TD width=49%>Sets the alignment value of pop-up menus. The <I>uiParam</I> parameter specifies TRUE for right alignment, or FALSE for left alignment.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMINIMIZEDMETRICS</TD>
<TD width=49%>Sets the metrics associated with minimized windows. The <I>pvParam</I> parameter must point to a <A HREF="bhcv9.htm"><B>MINIMIZEDMETRICS</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>MINIMIZEDMETRICS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMOUSE</TD>
<TD width=49%>Sets the two mouse threshold values and the mouse speed. The <I>pvParam</I> parameter must point to an array of three integers that specifies these values. See <A HREF="4i.4ca.htm"><B>mouse_event</B></A> for further information. </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMOUSEBUTTONSWAP</TD>
<TD width=49%>Swaps or restores the meaning of the left and right mouse buttons. The <I>uiParam</I> parameter specifies TRUE to swap the meanings of the buttons, or FALSE to to restore their original meanings.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMOUSEHOVERHEIGHT</TD>
<TD width=49%><B>Windows NT only:</B> Sets the height, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent to generate a WM_MOUSEHOVER message. The height is set from the uiParam parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMOUSEHOVERTIME</TD>
<TD width=49%><B>Windows NT only:</B> Sets the time, in milliseconds, that the mouse pointer has to stay in the hover rectangle for TrackMouseEvent to generate a WM_MOUSEHOVER message. This is used only if you pass HOVER_DEFAULT in the dwHoverTime parameter in the call to TrackMouseEvent. The time is set from the uiParam parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMOUSEHOVERWIDTH</TD>
<TD width=49%><B>Windows NT only:</B> Sets the width, in pixels, of the rectangle within which the mouse pointer has to stay for TrackMouseEvent to generate a WM_MOUSEHOVER message. The width is set from the uiParam parameter.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMOUSEKEYS</TD>
<TD width=49%>Sets the parameters of the MouseKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="1n3ntoy.htm"><B>MOUSEKEYS</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>MOUSEKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETMOUSETRAILS</TD>
<TD width=49%><B>Windows 95 only:</B> Enables or disables the Mouse Trails feature, which improves the visibility of mouse cursor movements by briefly showing a trail of cursors and quickly erasing them.
<P>To disable the feature, set the <I>uiParam</I> parameter to zero or 1. To enable the feature, set <I>uiParam</I> to a value greater than 1 to indicate the number of cursors drawn in the trail. </P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETNONCLIENTMETRICS</TD>
<TD width=49%>Sets the metrics associated with the nonclient area of nonminimized windows. The <I>pvParam</I> parameter must point to a <A HREF="d8x14a.htm"><B>NONCLIENTMETRICS</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>NONCLIENTMETRICS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETPENWINDOWS</TD>
<TD width=49%><B>Windows 95 only:</B> Specifies that pen windows is being loaded or unloaded. The <I>uiParam</I> parameter is TRUE when loading and FALSE when unloading pen windows. The <I>pvParam</I> parameter is NULL.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETPOWEROFFACTIVE</TD>
<TD width=49%><B>Windows 95 only:</B> Activates or deactivates the power-off phase of screen saving. Set <I>uiParam</I> to 1 to activate, or 0 to deactivate. The <I>pvParam</I> parameter must be NULL.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETPOWEROFFTIMEOUT</TD>
<TD width=49%><B>Windows 95 only:</B> Retrieves the time-out value, in seconds, for the power-off phase of screen saving. The <I>uiParam</I> parameter specifies the new value. The <I>pvParam</I> parameter must be NULL.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETSCREENREADER</TD>
<TD width=49%><B>Windows 95 only:</B> Indicates whether a screen review utility is running. The <I>uiParam</I> parameter specifies TRUE for on, or FALSE for off.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETSCREENSAVEACTIVE</TD>
<TD width=49%>Sets the state of the screen saver. The <I>uiParam</I> parameter specifies TRUE to activate screen saving, or FALSE to deactivate it.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETSCREENSAVETIMEOUT</TD>
<TD width=49%>Sets the screen saver time-out value to the value of the <I>uiParam</I> parameter. This value is the amount of time, in seconds, that the system must be idle before the screen saver activates.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETSERIALKEYS</TD>
<TD width=49%><B>Windows 95 only:</B> Sets the parameters of the SerialKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="ecx42g.htm"><B>SERIALKEYS</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>SERIALKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETSHOWSOUNDS</TD>
<TD width=49%>Sets the ShowSounds accessibility feature as on or off. The <I>uiParam</I> parameter specifies TRUE for on, or FALSE for off. </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETSNAPTODEFBUTTON</TD>
<TD width=49%><B>Windows NT only:</B> Enables or disables the snap-to-default-button feature. If enabled, the mouse cursor automatically moves to the default button, such as "OK" or "Apply", of a dialog box. Set the <I>uiParam</I> parameter to TRUE to enable the feature, or FALSE to disable it.</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETSOUNDSENTRY</TD>
<TD width=49%>Sets the parameters of the SoundSentry accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="4n07_he.htm"><B>SOUNDSENTRY</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>SOUNDSENTRY</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETSTICKYKEYS</TD>
<TD width=49%>Sets the parameters of the StickyKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="25clks.htm"><B>STICKYKEYS</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>STICKYKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETTOGGLEKEYS</TD>
<TD width=49%>Sets the parameters of the ToggleKeys accessibility feature. The <I>pvParam</I> parameter must point to a <A HREF="zltlgx.htm"><B>TOGGLEKEYS</B></A> structure that contains the new parameters. Set the <B>cbSize</B> member of this structure and the <I>uiParam</I> parameter to <B>sizeof</B>(<B>TOGGLEKEYS</B>). </TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETWHEELSCROLLLINES</TD>
<TD width=49%><B>Windows NT only:</B> Sets the number of lines to scroll when the mouse wheel is rotated. The number of lines is set from the uiParam parameter.
<P>The number of lines is the suggested number of lines to scroll when the mouse wheel is rolled without using modifier keys. If the number is 0, then no scrolling should occur. If the number of lines to scroll is greater than the number of lines viewable, and in particular if it is WHEEL_PAGESCROLL (#defined as UINT_MAX), the scroll operation should be interpreted as clicking once in the page down or page up regions of the scroll bar.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=51%>SPI_SETWORKAREA</TD>
<TD width=49%>Sets the size of the work area. The <I>work area</I> is the portion of the screen not obscured by the taskbar. The <I>pvParam</I> parameter must point to the <A HREF="ezena2.htm"><B>RECT</B></A> structure that contains the coordinates of the work area.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>uiParam</I></P>

<P>Depends on the system parameter being queried or set. For more information about systemwide parameters, see the <I>uiAction</I> parameter. If not otherwise indicated, specify zero.</P>

<P><I>pvParam</I></P>

<P>Depends on the system parameter being queried or set. For more information about systemwide parameters, see the <I>uiAction</I> parameter. If not otherwise indicated, specify NULL.</P>

<P><I>fWinIni</I></P>

<P>If a system parameter is being set, specifies whether the user profile is to be updated, and if so, whether the <A HREF="785o0c.htm">WM_SETTINGCHANGE</A> message is to be broadcast to all top-level windows to notify them of the change. This parameter can be zero or can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=44%><B>Value</B></TD>
<TD width=56%><B>Action</B></TD>
</TR>

<TR VALIGN="top">
<TD width=44%>SPIF_UPDATEINIFILE</TD>
<TD width=56%>Writes the new system-wide parameter setting to the user profile.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>SPIF_SENDCHANGE</TD>
<TD width=56%>Broadcasts the WM_SETTINGCHANGE message after updating the user profile.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>SPIF_SENDWININICHANGE</TD>
<TD width=56%>Same as SPIF_SENDCHANGE.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>This function is intended for use with applications, such as the Control Panel, that allow the user to customize the Windows environment.</P>

<P>A keyboard layout name should be derived from the hexadecimal value of the language identifier corresponding to the layout. For example, U.S. English has a language identifier of 0x0409, so the primary U.S. English layout is named "00000409." Variants of U.S. English layout, such as the Dvorak layout, are named "00010409," "00020409" and so on. For a list of the primary language identifiers and sublanguage identifiers that make up a language identifier, see the <B>MAKELANGID</B> macro.</P>

<P><B>See Also</B></P>

<P><A HREF="dlshi2.htm"><B>ACCESSTIMEOUT</B></A>, <A HREF="vnzorl.htm"><B>ANIMATIONINFO</B></A>, <A HREF="1h06y7p.htm"><B>FILTERKEYS</B></A>, <A HREF="11c2vs7.htm"><B>GetLastError</B></A>, <A HREF="jolchi.htm"><B>GetSystemMetrics</B></A>, <A HREF="bkpkd3.htm"><B>HIGHCONTRAST</B></A>, <A HREF="v4b1p.htm"><B>ICONMETRICS</B></A>, <A HREF="5m4itk.htm"><B>LOGFONT</B></A>, <A HREF="y265b.htm"><B>MAKELANGID</B></A>, <A HREF="bhcv9.htm"><B>MINIMIZEDMETRICS</B></A>, <A HREF="4i.4ca.htm"><B>mouse_event</B></A>, <A HREF="1n3ntoy.htm"><B>MOUSEKEYS</B></A>, <A HREF="d8x14a.htm"><B>NONCLIENTMETRICS</B></A>, <A HREF="ezena2.htm"><B>RECT</B></A>, <A HREF="ecx42g.htm"><B>SERIALKEYS</B></A>, <A HREF="4n07_he.htm"><B>SOUNDSENTRY</B></A>, <A HREF="25clks.htm"><B>STICKYKEYS</B></A>, <A HREF="zltlgx.htm"><B>TOGGLEKEYS</B></A>, <A HREF="17j5jrr.htm"><B>TrackMouseEvent</B></A> <A HREF="785o0c.htm">WM_SETTINGCHANGE</A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
