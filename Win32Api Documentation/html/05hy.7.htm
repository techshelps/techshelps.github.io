<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>IShellFolder::SetNameOf [Now Supported on Windows NT]</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="05hy.7"></A><B>IShellFolder::SetNameOf  <A HREF="25i7zio.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A></B></P>

<P>[Now Supported on Windows NT]</P>

<P>Changes the name of a file object or subfolder, changing its item identifier in the process.</P>

<P><B>HRESULT SetNameOf(</B></P>

<TABLE cols=2 width=506>

<TR VALIGN="top">
<TD width=38%><B>HWND </B><I>hwndOwner</I><B>,</B></TD>
<TD width=62%>// Handle of owner window</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPCITEMIDLIST</B> <I>pidl</I><B>,</B></TD>
<TD width=62%>// Pointer to an ITEMIDLIST structure</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPCOLESTR</B> <I>lpszName</I><B>,</B></TD>
<TD width=62%>// Pointer to string specifying new display name</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    DWORD</B> <I>uFlags</I><B>,</B></TD>
<TD width=62%>// Type of name specified in <I>lpszName</I></TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPITEMIDLIST</B> *<I>ppidlOut</I></TD>
<TD width=62%>// Pointer to new ITEMIDLIST</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>   );</B></TD>
<TD width=62%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hwndOwner</I></P>

<P>Handle of the owner window that the client should specify if it displays a dialog box or message box.</P>

<P><I>pidl</I></P>

<P>Pointer to an <A HREF="16gub2n.htm"><B>ITEMIDLIST</B></A> structure that uniquely identifies the file object or subfolder relative to the parent folder.</P>

<P><I>lpszName</I></P>

<P>Pointer to a null-terminated string that specifies the new display name.</P>

<P><I>uFlags</I></P>

<P>Value indicating the type of name specified by the <I>lpszName</I> parameter. For a list of possible values, see the description of the <B>SHCONTF</B> enumerated type.</P>

<P><I>ppidlOut</I></P>

<P>Address in which the method returns a pointer to the new <B>ITEMIDLIST</B> structure. This parameter can be NULL, and in that case, the method does not return the new <B>ITEMIDLIST</B> for the object.</P>

<P>If this parameter is not NULL, this method frees the specified <A HREF="16gub2n.htm"><B>ITEMIDLIST</B></A> structure and allocates a new one using the task allocator. The calling application is responsible for freeing the new <B>ITEMIDLIST</B> structure. If an error occurs, the method returns NULL in this address.</P>

<P></P>

<P><B>Return Values</B></P>

<P>Returns NOERROR if successful or an OLE-defined error value otherwise.</P>

<P><B>Remarks</B></P>

<P><B>SetNameOf</B> sets the display name of the specified object. If it also changes the item identifier, then it returns the new item identifier ( a <I>pidl</I>), which is allocated by the task allocator. Changing the display name of a file system object or folder within renames the file or directory. </P>

<P><B>See Also</B></P>

<P><A HREF="113z9we.htm"><B>IShellFolder</B></A>, <A HREF="16gub2n.htm"><B>ITEMIDLIST</B></A> </P>

</BODY>
</HTML>
