<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Creating a Simple Dynamic-Link Library</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="hl9pgh"></A><B>Creating a Simple Dynamic-Link Library</B></P>

<P>The following example, MYPUTS.C, is the source code needed to create a simple DLL, MYPUTS.DLL. The file MYPUTS.C contains a simple string-printing function called myPuts. The MYPUTS DLL does not define an entry-point function, because it is linked with the C run-time library and has no initialization or cleanup functions of its own to perform. </P>

<P></P>

<P>// File: MYPUTS.C.</P>

<P>// The myPuts function writes a null-terminated string to  </P>

<P>// the standard output device.</P>

<P>. </P>

<P>#include &lt;windows.h&gt; </P>

<P>VOID myPuts(LPTSTR lpszMsg) </P>

<P>{ </P>

<P>DWORD cchWritten; </P>

<P>HANDLE hStdout; </P>

<P></P>

<P>// Get a handle to the standard output device.</P>

<P></P>

<P>hStdout = GetStdHandle(STD<U>_</U>OUTPUT<U>_</U>HANDLE); </P>

<P></P>

<P>// Write a null-terminated string to the standard output device.</P>

<P></P>

<P>while (*lpszMsg) </P>

<P>WriteFile(hStdout, lpszMsg++, 1, &amp;cchWritten, NULL); </P>

<P>} </P>

<P></P>

<P>To build the DLL, follow the directions in the documentation included with your development tools. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
