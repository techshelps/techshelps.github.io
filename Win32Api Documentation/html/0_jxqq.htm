<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Adding and Deleting Taskbar Icons</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="0_jxqq"></A><B>Adding and Deleting Taskbar Icons</B></P>

<P>You add an icon to the taskbar status area by filling a <A HREF="2v61ux5.htm"><B>NOTIFYICONDATA</B></A> structure and then sending the structure through the <A HREF="vit35n.htm">NIM_ADD</A> message. The structure members must specify the handle of the window that is adding the icon, as well as the icon identifier and icon handle. You can also specify ToolTip text for the icon. If you need to receive mouse messages for the icon, specify the identifier of the callback message that the system should use to send the message to the window procedure. </P>

<P>The function in the following example demonstrates how to add an icon to the taskbar.</P>

<P>// MyTaskBarAddIcon - adds an icon to the taskbar status area.  </P>

<P>// Returns TRUE if successful or FALSE otherwise. </P>

<P>// hwnd - handle of the window to receive callback messages </P>

<P>// uID - identifier of the icon </P>

<P>// hicon - handle of the icon to add </P>

<P>// lpszTip - ToolTip text </P>

<P>BOOL MyTaskBarAddIcon(HWND hwnd, UINT uID, HICON hicon, LPSTR lpszTip) </P>

<P>{ </P>

<P>BOOL res; </P>

<P>NOTIFYICONDATA tnid; </P>

<P></P>

<P>tnid.cbSize = sizeof(NOTIFYICONDATA); </P>

<P>tnid.hWnd = hwnd; </P>

<P>tnid.uID = uID; </P>

<P>tnid.uFlags = NIF_MESSAGE | NIF_ICON | NIF_TIP; </P>

<P>tnid.uCallbackMessage = MYWM_NOTIFYICON; </P>

<P>tnid.hIcon = hicon; </P>

<P>if (lpszTip) </P>

<P>lstrcpyn(tnid.szTip, lpszTip, sizeof(tnid.szTip)); </P>

<P>else </P>

<P>tnid.szTip[0] = '\0'; </P>

<P></P>

<P>res = Shell_NotifyIcon(NIM_ADD, &amp;tnid); </P>

<P></P>

<P>if (hicon) </P>

<P>DestroyIcon(hicon); </P>

<P></P>

<P>return res; </P>

<P>} </P>

<P></P>

<P>To delete an icon from the taskbar status area, fill a <A HREF="2v61ux5.htm"><B>NOTIFYICONDATA</B></A> structure and send it to the system when you send a <A HREF="1mtxizz.htm">NIM_DELETE</A> message. When deleting a taskbar icon, specify only the <B>cbSize</B>, <B>hWnd</B>, and <B>uID</B> members, as the following example shows.</P>

<P>// MyTaskBarDeleteIcon - deletes an icon from the taskbar  </P>

<P>//     status area. </P>

<P>// Returns TRUE if successful or FALSE otherwise. </P>

<P>// hwnd - handle of the window that added the icon </P>

<P>// uID - identifier of the icon to delete </P>

<P>BOOL MyTaskBarDeleteIcon(HWND hwnd, UINT uID) </P>

<P>{ </P>

<P>BOOL res; </P>

<P>NOTIFYICONDATA tnid; </P>

<P></P>

<P>tnid.cbSize = sizeof(NOTIFYICONDATA); </P>

<P>tnid.hWnd = hwnd; </P>

<P>tnid.uID = uID; </P>

<P></P>

<P>res = Shell_NotifyIcon(NIM_DELETE, &amp;tnid); </P>

<P>return res; </P>

<P>} </P>

<P></P>

</BODY>
</HTML>
