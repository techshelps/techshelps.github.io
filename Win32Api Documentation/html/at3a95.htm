<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Display Device Contexts</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="at3a95"></A><B>Display Device Contexts</B></P>

<P>Windows provides three types of device contexts for video displays: class, common and private. Class and private device contexts are used in applications that perform numerous drawing operations such as computer-aided design (CAD) applications, desktop-publishing applications, drawing and painting applications, and so on. Common device contexts are used in applications that perform infrequent drawing operations. </P>

<P>An application obtains a display device context by calling either the <A HREF="f7ytuy.htm"><B>BeginPaint</B></A> or <A HREF="4f0b0z.htm"><B>GetDC</B></A> function and identifying the window in which the corresponding output will appear. (The type of device context Windows returns is dependent on how the application registered its window class.) Typically, an application obtains a display device context only when it must draw in the client area. When the application is finished drawing, it must release the device context by calling the <A HREF="8d6uz5.htm"><B>EndPaint</B></A> or <A HREF="p4bes3.htm"><B>ReleaseDC</B></A> function. </P>

<P><B>Class Device Contexts</B></P>

<P>Class device contexts are supported strictly for compatibility with previous versions of Windows. When writing a Win32-based application, avoid using the class device context. Use a private device context instead. </P>

<P><B>Common Device Contexts</B></P>

<P>Common device contexts are display device contexts maintained in a special cache by the window-management component of the Win32 API. An application obtains a handle identifying one of the available common device contexts by calling the <A HREF="4f0b0z.htm"><B>GetDC</B></A>, <A HREF="4m9cxu5.htm"><B>GetDCEx</B></A>, or <A HREF="f7ytuy.htm"><B>BeginPaint</B></A> function. Before returning this device context handle, Windows initializes a common device context with default objects, attributes, and modes. Any drawing operations performed by the application use these defaults unless one of the GDI functions is called to select a new object, change the attributes of an existing object, or select a new mode. </P>

<P>Because only a limited number of common device contexts exist in the window manager's heap, an application should release these device contexts after it has finished drawing. An application releases a common device context by calling the <A HREF="p4bes3.htm"><B>ReleaseDC</B></A> or <A HREF="8d6uz5.htm"><B>EndPaint</B></A> function. When the application releases a common device context, any changes to the default data are lost. </P>

<P><B>Private Device Contexts</B></P>

<P>Private device contexts are display device contexts that, unlike common device contexts, retain any changes to the default data ¾ even after an application calls the <A HREF="p4bes3.htm"><B>ReleaseDC</B></A> or <A HREF="8d6uz5.htm"><B>EndPaint</B></A> function. Private device contexts are not part of the window manager's cache and therefore need not be released after use. The window manager automatically removes a private device context after the last window of that class has been destroyed. </P>

<P>An application creates a private device context by first specifying the CS_OWNDC window-class style when it initializes the <B>style</B> member of the <A HREF="1onjoi2.htm"><B>WNDCLASS</B></A> structure and calls the <A HREF="6v_00hu.htm"><B>RegisterClass</B></A> function. (For more information about window classes, see <A HREF="2lm.0ad.htm">Window Classes</A>.) After creating a window with the CS_OWNDC style, an application can call the <A HREF="4f0b0z.htm"><B>GetDC</B></A>, <A HREF="4m9cxu5.htm"><B>GetDCEx</B></A>, or <A HREF="f7ytuy.htm"><B>BeginPaint</B></A> function once to obtain a handle identifying a private device context. The application can continue using this handle (and the associated device context) until it deletes the window created with this class. Any changes to graphic objects and their attributes, or graphic modes are retained by Windows until the window is deleted. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
