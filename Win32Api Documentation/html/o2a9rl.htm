<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>SetThreadPriority</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="o2a9rl"></A><B>SetThreadPriority  <A HREF="2jz.bf7.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="glns2h.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="7wnz9r.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>SetThreadPriority</B> function sets the priority value for the specified thread. This value, together with the priority class of the thread's process, determines the thread's base priority level. </P>

<P><B>BOOL SetThreadPriority(</B></P>

<TABLE cols=2 width=325>

<TR VALIGN="top">
<TD width=49%><B>HANDLE</B> <I>hThread</I><B>,</B></TD>
<TD width=51%>// handle to the thread </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>    int</B> <I>nPriority</I> </TD>
<TD width=51%>// thread priority level </TD>
</TR>

<TR VALIGN="top">
<TD width=49%><B>   );</B></TD>
<TD width=51%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hThread</I></P>

<P>Identifies the thread whose priority value is to be set. </P>

<P><B>Windows NT:</B> The handle must have the THREAD_SET_INFORMATION access right associated with it. For more information, see <A HREF="xzntt..htm">Thread Objects</A>.</P>

<P><I>nPriority</I></P>

<P>Specifies the priority value for the thread. This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=57%><B>Priority</B></TD>
<TD width=43%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=57%>THREAD_PRIORITY_ABOVE_NORMAL</TD>
<TD width=43%>Indicates 1 point above normal priority for the priority class.</TD>
</TR>

<TR VALIGN="top">
<TD width=57%>THREAD_PRIORITY_BELOW_NORMAL</TD>
<TD width=43%>Indicates 1 point below normal priority for the priority class.</TD>
</TR>

<TR VALIGN="top">
<TD width=57%>THREAD_PRIORITY_HIGHEST</TD>
<TD width=43%>Indicates 2 points above normal priority for the priority class.</TD>
</TR>

<TR VALIGN="top">
<TD width=57%>THREAD_PRIORITY_IDLE</TD>
<TD width=43%>Indicates a base priority level of 1 for IDLE_PRIORITY_CLASS, NORMAL_PRIORITY_CLASS, or HIGH_PRIORITY_CLASS processes, and a base priority level of 16 for REALTIME_PRIORITY_CLASS processes.</TD>
</TR>

<TR VALIGN="top">
<TD width=57%>THREAD_PRIORITY_LOWEST</TD>
<TD width=43%>Indicates 2 points below normal priority for the priority class.</TD>
</TR>

<TR VALIGN="top">
<TD width=57%>THREAD_PRIORITY_NORMAL</TD>
<TD width=43%>Indicates normal priority for the priority class.</TD>
</TR>

<TR VALIGN="top">
<TD width=57%>THREAD_PRIORITY_TIME_CRITICAL</TD>
<TD width=43%>Indicates a base priority level of 15 for IDLE_PRIORITY_CLASS, NORMAL_PRIORITY_CLASS, or HIGH_PRIORITY_CLASS processes, and a base priority level of 31 for REALTIME_PRIORITY_CLASS processes.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>Every thread has a base priority level determined by the thread's priority value and the priority class of its process. The system uses the base priority level of all executable threads to determine which thread gets the next slice of CPU time. Threads are scheduled in a round-robin fashion at each priority level, and only when there are no executable threads at a higher level does scheduling of threads at a lower level take place. </P>

<P>The <B>SetThreadPriority</B> function enables setting the base priority level of a thread relative to the priority class of its process. For example, specifying THREAD_PRIORITY_HIGHEST in a call to <B>SetThreadPriority</B> for a thread of an IDLE_PRIORITY_CLASS process sets the thread's base priority level to 6. For a table that shows the base priority levels for each combination of priority class and thread priority value, see the <A HREF="1hdphk3.htm"><B>SetPriorityClass</B></A> function. </P>

<P>For IDLE_PRIORITY_CLASS, NORMAL_PRIORITY_CLASS, and HIGH_PRIORITY_CLASS processes, the system dynamically boosts a thread's base priority level when events occur that are important to the thread. REALTIME_PRIORITY_CLASS processes do not receive dynamic boosts. </P>

<P>All threads initially start at THREAD_PRIORITY_NORMAL. Use the <A HREF="f6uwf_.htm"><B>GetPriorityClass</B></A> and <A HREF="1hdphk3.htm"><B>SetPriorityClass</B></A> functions to get and set the priority class of a process. Use the <A HREF="0b6aw9.htm"><B>GetThreadPriority</B></A> function to get the priority value of a thread. </P>

<P>Use the priority class of a process to differentiate between applications that are time critical and those that have normal or below normal scheduling requirements. Use thread priority values to differentiate the relative priorities of the tasks of a process. For example, a thread that handles input for a window could have a higher priority level than a thread that performs intensive calculations for the CPU. </P>

<P>When manipulating priorities, be very careful  to ensure that a high-priority thread does not consume all of the available CPU time. A thread with a base priority level above 11 interferes with the normal operation of the operating system. Using REALTIME_PRIORITY_CLASS may cause disk caches to not flush, hang the mouse, and so on. </P>

<P><B>See Also</B></P>

<P><A HREF="f6uwf_.htm"><B>GetPriorityClass</B></A>, <A HREF="0b6aw9.htm"><B>GetThreadPriority</B></A>, <A HREF="1hdphk3.htm"><B>SetPriorityClass</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
