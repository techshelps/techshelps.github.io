<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>GlobalReAlloc</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="clqgzs"></A><B>GlobalReAlloc  <A HREF="_om3.x.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7gqv3r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="9cqndc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GlobalReAlloc</B> function changes the size or attributes of a specified global memory object. The size can increase or decrease. </P>

<P><B>HGLOBAL GlobalReAlloc(</B></P>

<TABLE cols=2 width=413>

<TR VALIGN="top">
<TD width=39%><B>HGLOBAL</B> <I>hMem</I><B>,</B></TD>
<TD width=61%>// handle to the global memory object </TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>    DWORD</B> <I>dwBytes</I><B>,</B></TD>
<TD width=61%>// new size of the block </TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>    UINT</B> <I>uFlags</I> </TD>
<TD width=61%>// how to reallocate object </TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>   );</B></TD>
<TD width=61%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hMem</I></P>

<P>Identifies the global memory object to be reallocated. This handle is returned by either the <A HREF="f12w9..htm"><B>GlobalAlloc</B></A> or <B>GlobalReAlloc</B> function. </P>

<P><I>dwBytes</I></P>

<P>Specifies the new size, in bytes, of the memory block. If this parameter is zero and the <I>uFlags</I> parameter specifies the GMEM_MOVEABLE flag, the function returns the handle of a memory object that is marked as discarded. If <I>uFlags</I> specifies the GMEM_MODIFY flag, this parameter is ignored. </P>

<P><I>uFlags</I></P>

<P>Specifies how to reallocate the global memory object. If the GMEM_MODIFY flag is specified, this parameter modifies the attributes of the memory object, and the <I>dwBytes</I> parameter is ignored. Otherwise, this parameter controls the reallocation of the memory object. </P>

<P>The GMEM_MODIFY flag can be combined with either or both of the following flags: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Flag</B></TD>
<TD width=57%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_DISCARDABLE</TD>
<TD width=57%>Allocates discardable memory if the GMEM_MODIFY flag is also specified. This flag is ignored, unless the object was previously allocated as movable or the GMEM_MOVEABLE flag is also specified.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_MOVEABLE</TD>
<TD width=57%><B>Windows NT only</B>: Changes a fixed memory object to a movable memory object if the GMEM_MODIFY flag is also specified.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>If this parameter does not specify GMEM_MODIFY, it can be any combination of the following flags: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Flag</B></TD>
<TD width=57%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_MOVEABLE</TD>
<TD width=57%>If <I>dwBytes</I> is zero, discards a previously movable and discardable memory block. If the lock count of the object is not zero or if the block is not movable and discardable, the function fails. 
<P>If <I>dwBytes</I> is nonzero, enables the system to move the reallocated block to a new location without changing the movable or fixed attribute of the memory object. If the object is fixed, the handle returned may be different from the handle specified by the <I>hMem</I> parameter. If the object is movable, the block can be moved without invalidating the handle, even if the object is currently locked by a previous call to the <A HREF="1751dwr.htm"><B>GlobalLock</B></A> function. To get the new address of the memory block, use <B>GlobalLock</B>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_NOCOMPACT</TD>
<TD width=57%>Prevents memory from being compacted or discarded to satisfy the allocation request.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_ZEROINIT</TD>
<TD width=57%>Causes the additional memory contents to be initialized to zero if the memory object is growing in size.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the handle of the reallocated memory object.</P>

<P>If the function fails, the return value is NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>If <B>GlobalReAlloc</B> reallocates a movable object, the return value is the handle of the memory object. To convert the handle to a pointer, use the <B>GlobalLock</B> function. </P>

<P>If <B>GlobalReAlloc</B> reallocates a fixed object, the value of the handle returned is the address of the first byte of the memory block. To access the memory, a process can simply cast the return value to a pointer. </P>

<P>If <B>GlobalReAlloc</B> fails, the original memory is not freed, and the original handle and pointer are still valid.</P>

<P><B>See Also</B></P>

<P><A HREF="f12w9..htm"><B>GlobalAlloc</B></A>, <A HREF="dvjhb..htm"><B>GlobalFree</B></A>, <A HREF="1751dwr.htm"><B>GlobalLock</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
