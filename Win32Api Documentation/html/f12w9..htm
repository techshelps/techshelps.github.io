<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GlobalAlloc</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="f12w9."></A><B>GlobalAlloc  <A HREF="gqx4p9.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7gqv3r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="9cqndc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GlobalAlloc</B> function allocates the specified number of bytes from the heap. In the linear Win32 API environment, there is no difference between the local heap and the global heap. </P>

<P><B>HGLOBAL GlobalAlloc(</B></P>

<TABLE cols=2 width=371>

<TR VALIGN="top">
<TD width=43%><B>UINT</B> <I>uFlags</I><B>,</B></TD>
<TD width=57%>// object allocation attributes </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    DWORD</B> <I>dwBytes</I> </TD>
<TD width=57%>// number of bytes to allocate  </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>   );</B></TD>
<TD width=57%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>uFlags</I></P>

<P>Specifies how to allocate memory. If zero is specified, the default is GMEM_FIXED. Except for the incompatible combinations that are specifically noted, any combination of the following flags can be used. To indicate whether the function allocates fixed or movable memory, specify one of the first four flags: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Flag</B></TD>
<TD width=57%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_FIXED</TD>
<TD width=57%>Allocates fixed memory. This flag cannot be combined with the GMEM_MOVEABLE or GMEM_DISCARDABLE flag. The return value is a pointer to the memory block. To access the memory, the calling process simply casts the return value to a pointer.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_MOVEABLE</TD>
<TD width=57%>Allocates movable memory. This flag cannot be combined with the GMEM_FIXED flag. The return value is the handle of the memory object. The handle is a 32-bit quantity that is private to the calling process. To translate the handle into a pointer, use the <A HREF="1751dwr.htm"><B>GlobalLock</B></A> function.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GPTR</TD>
<TD width=57%>Combines the GMEM_FIXED and GMEM_ZEROINIT flags.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GHND</TD>
<TD width=57%>Combines the GMEM_MOVEABLE and GMEM_ZEROINIT flags.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_DDESHARE</TD>
<TD width=57%>Allocates memory to be used by the dynamic data exchange (DDE) functions for a DDE conversation. Unlike Windows version 3. <I>x</I>, this memory is not shared globally. However, this flag is available for compatibility purposes. It may be used by some applications to enhance the performance of DDE operations and should, therefore, be specified if the memory is to be used for DDE. 
<P>Only processes that use DDE or the clipboard for interprocess communications should specify this flag.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_DISCARDABLE</TD>
<TD width=57%>Allocates discardable memory. This flag cannot be combined with the GMEM_FIXED flag. Some Win32-based applications may ignore this flag.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_LOWER</TD>
<TD width=57%>Ignored. This flag is provided only for compatibility with Windows version 3. <I>x</I>.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_NOCOMPACT</TD>
<TD width=57%>Does not compact or discard memory to satisfy the allocation request.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_NODISCARD</TD>
<TD width=57%>Does not discard memory to satisfy the allocation request.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_NOT_BANKED</TD>
<TD width=57%>Ignored. This flag is provided only for compatibility with Windows version 3. <I>x</I>.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_NOTIFY</TD>
<TD width=57%>Ignored. This flag is provided only for compatibility with Windows version 3. <I>x</I>.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_SHARE</TD>
<TD width=57%>Same as the GMEM_DDESHARE flag.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>GMEM_ZEROINIT</TD>
<TD width=57%>Initializes memory contents to zero.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>dwBytes</I></P>

<P>Specifies the number of bytes to allocate. If this parameter is zero and the <I>uFlags</I> parameter specifies the GMEM_MOVEABLE flag, the function returns a handle to a memory object that is marked as discarded. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the handle of the newly allocated memory object.</P>

<P>If the function fails, the return value is NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>If the heap does not contain sufficient free space to satisfy the request, <B>GlobalAlloc</B> returns NULL. </P>

<P>Because NULL is used to indicate an error, virtual address zero is never allocated. It is, therefore, easy to detect the use of a NULL pointer. </P>

<P>All memory is created with execute access; no special function is required to execute dynamically generated code. </P>

<P>Memory allocated with this function is guaranteed to be aligned on an 8-byte boundary. </P>

<P>The<B> GlobalAlloc</B> and <B>LocalAlloc</B> functions are limited to a combined total of 65,536 handles for GMEM_MOVEABLE and LMEM_MOVEABLE memory per process. This limitation does not apply to GMEM_FIXED or LMEM_FIXED memory. </P>

<P>If this function succeeds, it allocates at least the amount of memory requested. If the actual amount allocated is greater than the amount requested, the process can use the entire amount. To determine the actual number of bytes allocated, use the <B>GlobalSize</B> function. </P>

<P><B>See Also</B></P>

<P><A HREF="dvjhb..htm"><B>GlobalFree</B></A>, <A HREF="1751dwr.htm"><B>GlobalLock</B></A>, <A HREF="clqgzs.htm"><B>GlobalReAlloc</B></A>, <A HREF="3uz__k6.htm"><B>GlobalSize</B></A>, <A HREF="2_d2ee.htm"><B>LocalAlloc</B></A> </P>

</BODY>
</HTML>
