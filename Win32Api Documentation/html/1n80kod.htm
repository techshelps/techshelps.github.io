<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>QueryDosDevice</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1n80kod"></A><B>QueryDosDevice  <A HREF="1wynyep.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="qnj9so.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="1f83g2.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>QueryDosDevice</B> function lets an application obtain information about MS-DOS device names. The function can obtain the current mapping for a particular MS-DOS device name. The function can also obtain a list of all existing MS-DOS device names. </P>

<P>MS-DOS device names are stored as symbolic links in the Windows NT object name space. The code that converts an MS-DOS path into a corresponding Windows NT path uses these symbolic links to map MS-DOS devices and drive letters. The <B>QueryDosDevice</B> function provides a mechanism whereby a Win32-based application can query the names of the symbolic links used to implement the MS-DOS device namespace as well as the value of each specific symbolic link. </P>

<P><B>DWORD QueryDosDevice(</B></P>

<TABLE cols=2 width=501>

<TR VALIGN="top">
<TD width=40%><B>LPCTSTR</B> <I>lpDeviceName</I><B>,</B></TD>
<TD width=60%>// address of MS-DOS device name string </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    LPTSTR</B> <I>lpTargetPath</I><B>,</B></TD>
<TD width=60%>// address of buffer for storing query results  </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>    DWORD</B> <I>ucchMax</I> </TD>
<TD width=60%>// maximum storage capacity of buffer  </TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>   );</B></TD>
<TD width=60%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpDeviceName</I></P>

<P>Pointer to an MS-DOS device name string specifying the target of the query. </P>

<P>This parameter can be NULL. In that case, the <B>QueryDosDevice</B> function will store a list of all existing MS-DOS device names into the buffer pointed to by <I>lpTargetPath</I>. </P>

<P><I>lpTargetPath</I></P>

<P>Pointer to a buffer that will receive the result of the query. The function fills this buffer with one or more null-terminated strings. The final null-terminated string is followed by an additional NULL. </P>

<P>If <I>lpDeviceName</I> is non-NULL, the function obtains information about the particular MS-DOS device specified by <I>lpDeviceName</I>. The first null-terminated string stored into the buffer is the current mapping for the device. The other null-terminated strings represent undeleted prior mappings for the device. </P>

<P>If <I>lpDeviceName</I> is NULL, the function obtains a list of all existing MS-DOS device names. Each null-terminated string stored into the buffer is the name of an existing MS-DOS device. </P>

<P><I>ucchMax</I></P>

<P>Specifies the maximum number of characters that can be stored into the buffer pointed to by <I>lpTargetPath</I>. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the number of characters stored into the buffer pointed to by <I>lpTargetPath</I>. </P>

<P>If the function fails, the return value is zero. To get extended error information, call <B>GetLastError</B>. </P>

<P><B>Remarks</B></P>

<P>The <B>DefineDosDevice</B> function provides a means whereby a Win32-based application can create and modify the symbolic links used to implement the MS-DOS device namespace. </P>

<P>MS-DOS device names are global. Once defined, an MS-DOS device name remains visible to all processes until either it is explicity removed or the system reboots. </P>

<P><B>See Also</B></P>

<P><A HREF="10wk7fp.htm"><B>DefineDosDevice</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
