<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>The WM_INITDIALOG Message</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="1w0j8bj"></A><B>The WM_INITDIALOG Message</B></P>

<P>Windows does <I>not</I> send a <A HREF="2re1yt3.htm">WM_CREATE</A> message to the dialog box procedure. Instead, it sends a <A HREF="ii1w.b.htm">WM_INITDIALOG</A> message when it creates the dialog box and all its controls but before it displays the dialog box. The procedure should carry out any initialization required to ensure that the dialog box displays the current settings associated with the command or task. For example, when a dialog box contains a control to show the current drive and directory, the procedure must determine the current drive and directory and set the control to that value. </P>

<P>The procedure can initialize controls by using functions such as <A HREF="a8jxed.htm"><B>SetDlgItemText</B></A> and <A HREF="0ec349.htm"><B>CheckDlgButton</B></A>. Because controls are windows, the procedure can also manipulate them by using window-management functions such as <A HREF="6v0r1k.htm"><B>EnableWindow</B></A> and <A HREF="35o7yrp.htm"><B>SetFocus</B></A>. The procedure can retrieve the window handle for a control by using the <A HREF="id1quq.htm"><B>GetDlgItem</B></A> function. </P>

<P>The dialog box procedure can change the contents, state, and position of any control as needed. For example, in a dialog box that contains a list box of filenames and an Open button, the procedure can disable the Open button until the user selects a file from the list. In this example, the dialog box template specifies the WS_DISABLED style for the Open button and Windows automatically disables the button when creating it. When the dialog box procedure receives a notification message from the list box indicating that the user has selected a file, the procedure calls the <B>EnableWindow</B> function to enable the Open button. </P>

<P>If the application creates the dialog box by using one of the functions <A HREF="crj92e.htm"><B>DialogBoxParam</B></A>, <A HREF="9gqg2m.htm"><B>DialogBoxIndirectParam</B></A>, <A HREF="1nwk5oe.htm"><B>CreateDialogParam</B></A>, or <A HREF="2gx9rco.htm"><B>CreateDialogIndirectParam</B></A>, the <I>lParam</I> parameter for the WM_INITDIALOG message contains the extra parameter passed to the function. Applications typically use this extra parameter to pass the address of additional initialization information to the dialog box procedure, but the dialog box procedure must determine the meaning of the parameter. If the application uses another function to create the dialog box, Windows sets the <I>lParam</I> parameter to NULL. </P>

<P>Before returning from the <A HREF="ii1w.b.htm">WM_INITDIALOG</A> message, the procedure should determine whether it should set the input focus to a given control. If the dialog box procedure returns TRUE, Windows automatically sets the input focus to the control whose window handle is in the <I>wParam</I> parameter. If the control receiving the default focus is not appropriate, it can set the focus to the appropriate control by using the <B>SetFocus</B> function. If the procedure sets the input focus, it must return FALSE to prevent Windows from setting the default focus. The control receiving the default input focus is always the first control given in the template that is visible, not disabled, and has the WS_TABSTOP style. If no such control exists, Windows sets the default input focus to the first control in the template. </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
