<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>EnterCriticalSection</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="15hqm5b"></A><B>EnterCriticalSection  <A HREF="1kgsft1.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="36dp5f5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="24h9od3.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>EnterCriticalSection</B> function waits for ownership of the specified critical section object. The function returns when the calling thread is granted ownership. </P>

<P><B>VOID EnterCriticalSection(</B></P>

<TABLE cols=2 width=531>

<TR VALIGN="top">
<TD width=55%><B>LPCRITICAL_SECTION</B> <I>lpCriticalSection</I> </TD>
<TD width=45%>// pointer to critical section object  </TD>
</TR>

<TR VALIGN="top">
<TD width=55%><B>   );</B></TD>
<TD width=45%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpCriticalSection</I></P>

<P>Points to the critical section object. </P>

<P></P>

<P><B>Return Values</B></P>

<P>This function does not return a value. </P>

<P><B>Remarks</B></P>

<P>The threads of a single process can use a critical section object for mutual-exclusion synchronization. The process is responsible for allocating the memory used by a critical section object, which it can do by declaring a variable of type CRITICAL_SECTION. Before using a critical section, some thread of the process must call the <A HREF="14hxtuw.htm"><B>InitializeCriticalSection</B></A> function to initialize the object. </P>

<P>To enable mutually exclusive access to a shared resource, each thread calls the <B>EnterCriticalSection</B> or <A HREF="lll25e.htm"><B>TryEnterCriticalSection</B></A> function to request ownership of the critical section before executing any section of code that accesses the protected resource. The difference is that <B>TryEnterCriticalSection</B> returns immediately, regardless of whether it obtained ownership of the critical section, while <B>EnterCriticalSection</B> blocks until the thread can take ownership of the critical section. When it has finished executing the protected code, the thread uses the <A HREF="2wz._0v.htm"><B>LeaveCriticalSection</B></A> function to relinquish ownership, enabling another thread to become owner and access the protected resource. The thread must call <B>LeaveCriticalSection</B> once for each time that it entered the critical section. The thread enters the critical section each time <B>EnterCriticalSection</B> and <B>TryEnterCriticalSection</B> succeed.</P>

<P>Once a thread has ownership of a critical section, it can make additional calls to <B>EnterCriticalSection</B> or <B>TryEnterCriticalSection</B> without blocking its execution. This prevents a thread from deadlocking itself while waiting for a critical section that it already owns.</P>

<P>Any thread of the process can use the <B>DeleteCriticalSection</B> function to release the system resources that were allocated when the critical section object was initialized. After this function has been called, the critical section object can no longer be used for synchronization.</P>

<P><B>See Also</B></P>

<P><A HREF="13752ka.htm"><B>DeleteCriticalSection</B></A>, <A HREF="14hxtuw.htm"><B>InitializeCriticalSection</B></A>, <A HREF="2wz._0v.htm"><B>LeaveCriticalSection</B></A> <A HREF="lll25e.htm"><B>TryEnterCriticalSection</B></A></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
