<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Working With ACLs and ACEs</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="hp408t"></A><B>Working With ACLs and ACEs</B></P>

<P>Windows NT version 4.0 provides a new group of high-level access control functions for working with access-control lists (ACLs) and security descriptors. These functions make it easier to create new ACLs or to modify existing ACLs. </P>

<P>The <A HREF="0lyb0g.htm"><B>SetEntriesInAcl</B></A> function creates a new ACL. <B>SetEntriesInAcl</B> can specify a completely new set of ACEs for the ACL, or it can merge new ACEs with the ACEs of an existing ACL. <B>SetEntriesInAcl</B> uses an array of <A HREF=".aeuaj.htm"><B>EXPLICIT_ACCESS</B></A> structures to specify the information for the new ACEs. Each <B>EXPLICIT_ACCESS</B> structure contains information that describes a single ACE. This information includes the access rights, the type of ACE, the flags that control ACE inheritance, and a <A HREF="2gkczjv.htm"><B>TRUSTEE</B></A> structure that identifies the trustee. </P>

<P><B><IMG SRC="../images/bm4.gif" ALT="" BORDER=0>To add a new ACE to an existing ACL</B></P>

<P>1.Use the <A HREF="1nae3gz.htm"><B>GetSecurityInfo</B></A> or <A HREF="322nkdh.htm"><B>GetNamedSecurityInfo</B></A> function to get the existing DACL or SACL from an object's security descriptor.</P>

<P>2.Use the <A HREF="9gxqlm.htm"><B>BuildExplicitAccessWithName</B></A> function to fill <B>EXPLICIT_ACCESS</B> structures with the information needed to describe each new ACE.</P>

<P>3.Call <A HREF="0lyb0g.htm"><B>SetEntriesInAcl</B></A>, specifying the existing ACL and the array of <B>EXPLICIT_ACCESS</B> structures. <B>SetEntriesInAcl</B> allocates and initializes the ACL and its ACEs. </P>

<P>4.Call the <A HREF="d4gl2j.htm"><B>SetSecurityInfo</B></A> or <A HREF="a0hpj_.htm"><B>SetNamedSecurityInfo</B></A> function to attach the new ACL to the object's security descriptor.</P>

<P></P>

<P>For an example that merges a new ACE into an existing ACL, see <A HREF="1qnjrk.htm">Allowing Access</A>.</P>

<P>The <B>SetEntriesInAcl</B> function merges the new ACE information with the existing ACEs in the ACL. Consider the case, for example, in which the existing ACL grants access to a specified trustee and an <A HREF=".aeuaj.htm"><B>EXPLICIT_ACCESS</B></A> structure denies access to the same trustee. In this case, <B>SetEntriesInAcl</B> adds a new access-denied ACE for the trustee and deletes or modifies the existing access-allowed ACE for the trustee. </P>

<P>The <A HREF="0lyb0g.htm"><B>SetEntriesInAcl</B></A> function ensures that ACEs are in the correct order in the new ACL. The function positions all access-denied ACEs at the beginning of the ACL's list of ACEs, ahead of any access-allowed ACEs. </P>

<P>The high-level access-control functions use the <A HREF="2gkczjv.htm"><B>TRUSTEE</B></A> structure to identify a trustee. This structure enables you to use a name string or a SID to identify a trustee. If you use a name, the <B>SetEntriesInAcl</B> function performs the tasks of allocating the SID buffers and looking up the SID that corresponds to the account name. There are two helper functions, <A HREF="1viu07a.htm"><B>BuildTrusteeWithSid</B></A> and <A HREF="p7x0x9.htm"><B>BuildTrusteeWithName</B></A>, that initialize a <B>TRUSTEE</B> structure with a specified SID or name. Three other helper functions, <A HREF="2j89_ir.htm"><B>GetTrusteeForm</B></A>, <A HREF="1wz4zx0.htm"><B>GetTrusteeName</B></A>, and <A HREF="hgnhwe.htm"><B>GetTrusteeType</B></A>, retrieve the values of the various members of a <B>TRUSTEE</B> structure.</P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
