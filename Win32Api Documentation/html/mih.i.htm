<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>CreateDesktop</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="mih.i"></A><B>CreateDesktop  <A HREF="dqpmve.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="3ocly5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="2ggw8w5.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>CreateDesktop</B> function creates a new desktop on the window station associated with the calling process. It returns a handle that can be used to access the new desktop. The calling process must have an associated window station, either assigned by the system at process creation time or set by <A HREF="j98t3h.htm"><B>SetProcessWindowStation</B></A>. A desktop is a secure object contained within a window station object. A desktop has a logical display surface and contains windows, menus, and hooks.</P>

<P><B>HDESK CreateDesktop(</B></P>

<TABLE cols=2 width=578>

<TR VALIGN="top">
<TD width=43%><B>LPCTSTR</B> <I>lpszDesktop</I><B>,</B></TD>
<TD width=57%>// name of the new desktop </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    LPCTSTR</B> <I>lpszDevice</I><B>,</B></TD>
<TD width=57%>// reserved; must be NULL. </TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    LPDEVMODE</B> <I>pDevMode</I><B>,</B></TD>
<TD width=57%>// reserved; must be NULL</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    DWORD</B> <I>dwFlags</I><B>,</B></TD>
<TD width=57%>// flags to control interaction with other applications</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    DWORD</B> <I>dwDesiredAccess</I><B>,</B></TD>
<TD width=57%>// specifies access of returned handle</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>    LPSECURITY_ATTRIBUTES</B> <I>lpsa</I></TD>
<TD width=57%>// specifies security attributes of the desktop</TD>
</TR>

<TR VALIGN="top">
<TD width=43%><B>   );</B></TD>
<TD width=57%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpszDesktop</I></P>

<P>Points to a null-terminated string specifying the name of the desktop to be created. Desktop names are case-insensitive and may not contain backslash characters (\).</P>

<P><I>lpszDevice</I></P>

<P>Reserved; must be NULL. The desktop uses the default display driver loaded at boot time.</P>

<P><I>pDevMode</I></P>

<P>Reserved; must be NULL.</P>

<P><I>dwFlags</I></P>

<P>A bit flag parameter that controls how the calling application will cooperate with other applications on the desktop. This parameter can specify zero or the following value:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Value</B></TD>
<TD width=57%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DF_ALLOWOTHERACCOUNTHOOK</TD>
<TD width=57%>Allows processes running in other accounts on the desktop to set hooks in this process.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>dwDesiredAccess</I></P>

<P>Specifies the type of access to the desktop. This parameter can be one or more of the following values:</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=43%><B>Value</B></TD>
<TD width=57%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_CREATEMENU</TD>
<TD width=57%>Required to create a menu on the desktop.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_CREATEWINDOW</TD>
<TD width=57%>Required to create a window on the desktop.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_ENUMERATE</TD>
<TD width=57%>Required for the desktop to be enumerated.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_HOOKCONTROL</TD>
<TD width=57%>Required to establish any of the window hooks.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_JOURNALPLAYBACK</TD>
<TD width=57%>Required to perform journal playback on the desktop.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_JOURNALRECORD</TD>
<TD width=57%>Required to perform journal recording on the desktop.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_READOBJECTS</TD>
<TD width=57%>Required to read objects on the desktop.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_SWITCHDESKTOP</TD>
<TD width=57%>Required to activate the desktop using the <A HREF="iilwpz.htm"><B>SwitchDesktop</B></A> function.</TD>
</TR>

<TR VALIGN="top">
<TD width=43%>DESKTOP_WRITEOBJECTS</TD>
<TD width=57%>Required to write objects on the desktop.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpsa</I></P>

<P>Pointer to a <A HREF="be53kg.htm"><B>SECURITY_ATTRIBUTES</B></A> structure that determines whether the returned handle can be inherited by child processes. If <I>lpsa</I> is NULL, the handle cannot be inherited. </P>

<P><B>Windows NT:</B> The <B>lpSecurityDescriptor</B> member of the structure specifies a security descriptor for the new desktop. If <I>lpsa</I> is NULL, the desktop inherits its security descriptor from the parent window station. </P>

<P><B>Windows 95:</B> The <B>lpSecurityDescriptor</B> member of the structure is ignored.</P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is a handle to the newly created desktop.</P>

<P>If the function fails, the return value is NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>.</P>

<P><B>Remarks</B></P>

<P>The<B> CreateDesktop</B> function returns a handle that can be used to access the desktop.</P>

<P><B>See Also</B></P>

<P><A HREF="be53kg.htm"><B>SECURITY_ATTRIBUTES</B></A>, <A HREF="j98t3h.htm"><B>SetProcessWindowStation</B></A>, <A HREF="iilwpz.htm"><B>SwitchDesktop</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
