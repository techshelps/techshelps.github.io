<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>ReportEvent</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="49908m"></A><B>ReportEvent  <A HREF="19_fpvn.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="ejmiui.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="gw7e2k.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>ReportEvent</B> function writes an entry at the end of the specified event log. </P>

<P><B>BOOL ReportEvent(</B></P>

<TABLE cols=2 width=473>

<TR VALIGN="top">
<TD width=38%><B>HANDLE</B> <I>hEventLog</I><B>,</B></TD>
<TD width=62%>// handle returned by RegisterEventSource </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    WORD</B> <I>wType</I><B>,</B></TD>
<TD width=62%>// event type to log </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    WORD</B> <I>wCategory</I><B>,</B></TD>
<TD width=62%>// event category </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    DWORD</B> <I>dwEventID</I><B>,</B></TD>
<TD width=62%>// event identifier </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    PSID</B> <I>lpUserSid</I><B>,</B></TD>
<TD width=62%>// user security identifier (optional) </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    WORD</B> <I>wNumStrings</I><B>,</B></TD>
<TD width=62%>// number of strings to merge with message  </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    DWORD</B> <I>dwDataSize</I><B>,</B></TD>
<TD width=62%>// size of binary data, in bytes</TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPCTSTR</B> <B>*</B><I>lpStrings</I><B>,</B></TD>
<TD width=62%>// array of strings to merge with message </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>    LPVOID</B> <I>lpRawData</I> </TD>
<TD width=62%>// address of binary data </TD>
</TR>

<TR VALIGN="top">
<TD width=38%><B>   );</B></TD>
<TD width=62%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hEventLog</I></P>

<P>Identifies the event log. This handle is returned by the <A HREF="1lww4x0.htm"><B>RegisterEventSource</B></A> function. </P>

<P><I>wType</I></P>

<P>Specifies the type of event being logged. This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=52%><B>Value</B></TD>
<TD width=48%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=52%>EVENTLOG_ERROR_TYPE</TD>
<TD width=48%>Error event</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>EVENTLOG_WARNING_TYPE</TD>
<TD width=48%>Warning event</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>EVENTLOG_INFORMATION_TYPE</TD>
<TD width=48%>Information event</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>EVENTLOG_AUDIT_SUCCESS</TD>
<TD width=48%>Success Audit event</TD>
</TR>

<TR VALIGN="top">
<TD width=52%>EVENTLOG_AUDIT_FAILURE</TD>
<TD width=48%>Failure Audit event</TD>
</TR>
</TABLE><BR>

<P></P>

<P>For more information about event types, see <A HREF="ejmiui.htm">Event Logging</A>. </P>

<P><I>wCategory</I></P>

<P>Specifies the event category. This is source-specific information; the category can have any value. </P>

<P><I>dwEventID</I></P>

<P>Specifies the event identifier. The event identifier specifies the message that goes with this event as an entry in the message file associated with the event source. </P>

<P><I>lpUserSid</I></P>

<P>Points to the current user's security identifier. This parameter can be NULL if the security identifier is not required. </P>

<P><I>wNumStrings</I></P>

<P>Specifies the number of strings in the array pointed to by the <I>lpStrings</I> parameter. A value of zero indicates that no strings are present. </P>

<P><I>dwDataSize</I></P>

<P>Specifies the number of bytes of event-specific raw (binary) data to write to the log. If this parameter is zero, no event-specific data is present. </P>

<P><I>lpStrings</I></P>

<P>Points to a buffer containing an array of null-terminated strings that are merged into the message before Event Viewer displays the string to the user. This parameter must be a valid pointer (or NULL), even if <I>wNumStrings</I> is zero. </P>

<P><I>lpRawData</I></P>

<P>Points to the buffer containing the binary data. This parameter must be a valid pointer (or NULL), even if the <I>dwDataSize</I> parameter is zero. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero, indicating that the entry was written to the log.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>This function is used to log an event. The entry is written to the end of the configured logfile for the source identified by the <I>hEventLog</I> parameter. The <B>ReportEvent</B> function adds the time, the user name, the entry's length, and the offsets before storing the entry in the log. </P>

<P><B>See Also</B></P>

<P><A HREF="17vs5zp.htm"><B>ClearEventLog</B></A>, <A HREF="13hbe1s.htm"><B>CloseEventLog</B></A>, <A HREF="1rc9es8.htm"><B>OpenEventLog</B></A>, <A HREF="1.b1kpn.htm"><B>ReadEventLog</B></A>, <A HREF="1lww4x0.htm"><B>RegisterEventSource</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
