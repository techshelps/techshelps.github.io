<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>ControlService</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2nu_3f"></A><B>ControlService  <A HREF="kypupl.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="12c8zrk.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="we4jtq.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>ControlService</B> function sends a control code to a Win32 service. </P>

<P><B>BOOL ControlService(</B></P>

<TABLE cols=2 width=531>

<TR VALIGN="top">
<TD width=53%><B>SC_HANDLE</B> <I>hService</I><B>,</B></TD>
<TD width=47%>// handle to service </TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>    DWORD</B> <I>dwControl</I><B>,</B></TD>
<TD width=47%>// control code </TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>    LPSERVICE_STATUS</B> <I>lpServiceStatus</I> </TD>
<TD width=47%>// pointer to service status structure  </TD>
</TR>

<TR VALIGN="top">
<TD width=53%><B>   );</B></TD>
<TD width=47%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hService</I></P>

<P>Identifies the service. This handle is returned by the <A HREF="20gsky6.htm"><B>OpenService</B></A> or <A HREF="2wng26.htm"><B>CreateService</B></A> function. The access required for this handle depends on the <I>dwControl</I> code requested. </P>

<P><I>dwControl</I></P>

<P>Specifies the requested control code. This value can be one of the standard control codes in the table, or it can be a user-defined control code in the range of 128 to 255, inclusive. For user-defined control codes, the <I>hService</I> handle must have SERVICE_USER_DEFINED_CONTROL access, and the service defines the action associated with the control code. </P>

<TABLE cols=6>

<TR VALIGN="top">
<TD colspan=2 width=14%><B>Value</B></TD>
<TD colspan=3 width=73%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_CONTROL_STOP</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>Requests the service to stop. The <I>hService</I> handle must have SERVICE_STOP access.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_CONTROL_PAUSE</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>Requests the service to pause. The <I>hService</I> handle must have SERVICE_PAUSE_CONTINUE access.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_CONTROL_CONTINUE</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>Requests the paused service to resume. The <I>hService</I> handle must have SERVICE_PAUSE_CONTINUE access.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_CONTROL_INTERROGATE</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>Requests the service to update immediately its current status information to the service control manager. The <I>hService</I> handle must have SERVICE_INTERROGATE access.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=16%>SERVICE_CONTROL_SHUTDOWN</TD>
<TD colspan=3 width=84%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=12%>&nbsp;</TD>
<TD colspan=3 width=63%>The <B>ControlService</B> function fails if this control code is specified.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><I>lpServiceStatus</I></P>

<P>Points to a <A HREF="25uoeu.htm"><B>SERVICE_STATUS</B></A> structure where the latest status information of the service is returned. The information returned reflects the most recent status reported by the service to the service control manager. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Errors</B></P>

<P>The following error codes may be set by the service control manager. Other error codes may be set by the registry functions that are called by the service control manager. </P>

<TABLE cols=6>

<TR VALIGN="top">
<TD colspan=2 width=11%><B>Value</B></TD>
<TD colspan=3 width=76%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_ACCESS_DENIED</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The specified handle was not opened with the necessary access.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_DEPENDENT_SERVICES_RUNNING</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The service cannot be stopped because other running services are dependent on it.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_INVALID_SERVICE_CONTROL</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The requested control code is not valid, or it is unacceptable to the service.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_SERVICE_CANNOT_ACCEPT_CTRL</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The requested control code cannot be sent to the service because the state of the service is SERVICE_STOPPED, SERVICE_START_PENDING, or SERVICE_STOP_PENDING.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_SERVICE_NOT_ACTIVE</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The service has not been started.</TD>
</TR>

<TR VALIGN="top">
<TD colspan=3 width=12%>ERROR_SERVICE_REQUEST_TIMEOUT</TD>
<TD colspan=3 width=88%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=10%>&nbsp;</TD>
<TD colspan=3 width=66%>The service did not respond to the start request in a timely fashion.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Remarks</B></P>

<P>The <B>ControlService</B> function asks the service control manager to send the requested control code to the service. The service control manager sends the code if the service accepts the control and if the service is in a controllable state. The <A HREF="jps..c.htm"><B>QueryServiceStatus</B></A> or <B>ControlService</B> function returns a <A HREF="25uoeu.htm"><B>SERVICE_STATUS</B></A> structure whose <B>dwCurrentState</B> and <B>dwControlsAccepted</B> members indicate the current state and controls accepted by a running Win32 service. </P>

<P>All running services accept the SERVICE_CONTROL_INTERROGATE control code by default. Each service specifies the other control codes that it accepts when it calls the <A HREF="u71xdk.htm"><B>SetServiceStatus</B></A> function to report its status. </P>

<P>The following table shows the action of the service control manager in each of the possible service states: </P>

<TABLE cols=3>

<TR VALIGN="top">
<TD width=33%><B>Service state</B></TD>
<TD width=11%><B>Stop</B></TD>
<TD width=56%><B>Other controls</B></TD>
</TR>

<TR VALIGN="top">
<TD width=33%>STOPPED</TD>
<TD width=11%>(c)</TD>
<TD width=56%>(c) </TD>
</TR>

<TR VALIGN="top">
<TD width=33%>STOP_PENDING</TD>
<TD width=11%>(b)</TD>
<TD width=56%>(b) </TD>
</TR>

<TR VALIGN="top">
<TD width=33%>START_PENDING</TD>
<TD width=11%>(a)</TD>
<TD width=56%>(b) </TD>
</TR>

<TR VALIGN="top">
<TD width=33%>RUNNING</TD>
<TD width=11%>(a)</TD>
<TD width=56%>(a) </TD>
</TR>

<TR VALIGN="top">
<TD width=33%>CONTINUE_PENDING</TD>
<TD width=11%>(a)</TD>
<TD width=56%>(a) </TD>
</TR>

<TR VALIGN="top">
<TD width=33%>PAUSE_PENDING</TD>
<TD width=11%>(a)</TD>
<TD width=56%>(a) </TD>
</TR>

<TR VALIGN="top">
<TD width=33%>PAUSED</TD>
<TD width=11%>(a)</TD>
<TD width=56%>(a) </TD>
</TR>
</TABLE><BR>

<P></P>

<TABLE cols=1>

<TR VALIGN="top">
<TD width=100%>(a) If the service accepts this control code, send the request to the service; otherwise, <B>ControlService</B> returns FALSE and <B>GetLastError</B> returns ERROR_INVALID_SERVICE_CONTROL.</TD>
<TD colspan=21 width=1798499931%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=100%>(b) The service is not in a controllable state, so <B>ControlService</B> returns FALSE and <B>GetLastError</B> returns ERROR_SERVICE_CANNOT_ACCEPT_CTRL.</TD>
<TD colspan=21 width=1798499931%>&nbsp;</TD>
</TR>

<TR VALIGN="top">
<TD width=100%>(c) The service is not in a controllable state, so <B>ControlService</B> returns FALSE and <B>GetLastError</B> returns ERROR_SERVICE_NOT_ACTIVE.</TD>
<TD colspan=21 width=1798499931%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="2wng26.htm"><B>CreateService</B></A>, <A HREF="20gsky6.htm"><B>OpenService</B></A>, <A HREF="jps..c.htm"><B>QueryServiceStatus</B></A>, <A HREF="u71xdk.htm"><B>SetServiceStatus</B></A>, <A HREF="25uoeu.htm"><B>SERVICE_STATUS</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
