<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>LoadKeyboardLayout</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="kivx9c"></A><B>LoadKeyboardLayout  <A HREF="0khlkh.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1xtfdy5.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="fkf.jh.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The implementations of <B>LoadKeyboardLayout</B> in Windows 95 and Windows NT are substantially different. To accommodate these differences, this reference page first presents the Windows 95 implementation in its entirety, followed by the Windows NT version.</P>

<P><B><IMG SRC="../images/bm4.gif" ALT="" BORDER=0>Windows 95:</B></P>

<P>The <B>LoadKeyboardLayout</B> function loads a new keyboard layout into the system. Several keyboard layouts can be loaded at a time, but only one per process is active at a time. Loading multiple keyboard layouts makes it possible to rapidly switch between layouts.</P>

<P><B>HKL LoadKeyboardLayout(</B></P>

<TABLE cols=2 width=351>

<TR VALIGN="top">
<TD width=50%><B>LPCTSTR</B> <I>pwszKLID</I><B>,</B></TD>
<TD width=50%>// name of layout to load</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>    UINT</B> <I>Flags</I> </TD>
<TD width=50%>// keyboard layout flags</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><B>   );</B></TD>
<TD width=50%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>pwszKLID</I></P>

<P>Points to the buffer that specifies the name of the keyboard layout. This name is a string composed from the hexadecimal value of the primary language identifier (low word) and a device identifier (high word). For example, U.S. English has a language identifier of 0x0409, so the primary U.S. English layout is named "00000409". Variants of U.S. English layout, such as the Dvorak layout, are named "00010409", "00020409", and so on. For a list of the primary language identifiers and secondary language identifiers that make up a language identifier, see the <A HREF="y265b.htm"><B>MAKELANGID</B></A> macro. </P>

<P><I>Flags</I></P>

<P>Specifies how the keyboard layout is to be loaded. This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=41%><B>Value</B></TD>
<TD width=59%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_ACTIVATE</TD>
<TD width=59%>If the given layout is not already loaded, the function loads and activates the layout for the current thread, inserting the layout at the head of the keyboard layouts list in front of the previously active layout. If the layout is already loaded and the KLF_REORDER value is not given, the function simply rotates the keyboard layouts list, making the next layout the active layout.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_NOTELLSHELL</TD>
<TD width=59%>Prevents a <B>ShellProc</B> hook procedure from receiving an HSHELL_LANGUAGE hook code when the new layout is loaded. This value is typically used when an application loads multiple layouts, one after another. Applying this value to all but the last layout delays the shell's processing until all layouts have been added.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_REORDER</TD>
<TD width=59%>Moves the given layout to the head of the keyboard layouts list, making that layout the active layout for the current thread. This value reorders the keyboard layouts list even if KLF_ACTIVATE is not given.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_REPLACELANG</TD>
<TD width=59%>If the new layout has the same language identifier as a current layout, the new layout replaces the current one as the layout for that language. If this value is not given and the layouts have the same language identifiers, the current layout is not replaced and the function returns NULL. </TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_SUBSTITUTE_OK</TD>
<TD width=59%>Substitues the given keyboard layout with another layout preferred by the user. The substitution occurs only if the registry key <B>HKEY_CURRENT_USER\Keyboard Layout\Substitutes</B> explicitly defines a substitution layout. For example, if the key includes the value name "00000409" with value "00010409", loading the U.S. English layout ("00000409") causes the Dvorak U.S. English layout ("00010409") to be loaded instead. The system uses KLF_SUBSTITUTE_OK when booting and it is recommended that all applications use this value too.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the keyboard layout handle of the layout matched with the requested name or NULL if no matching keyboard is available.</P>

<P><B>Remarks</B></P>

<P>If a layout is to be loaded with the same language as a previously loaded one and the KLF_REPLACELANG flag is <I>not</I> set, the call fails. Only one loaded layout may be associated with a given language. (It is acceptable for multiple IMEs to be loaded with associations to the same language.)</P>

<P>An application can and will typically want to load the default layout or IME for a language and can do so by specifying only a string version of the language identifier. If an application wants to load a specific layout or IME, it should read the registry to determine the specific layout identifier to pass to <B>LoadKeyboardLayout</B>. In this case, a request to activate the default keyboard layout handle for a locale will activate the first matching one. A specific IME should be activated using an explicit keyboard layout handle returned from one of <B>GetKeyboardLayout</B>, <B>GetKeyboardLayoutList</B> or <B>LoadKeyboardLayout</B>.</P>

<P><B>See Also</B></P>

<P><A HREF="1c2elxp.htm"><B>ActivateKeyboardLayout</B></A>, <A HREF="5zv3z..htm"><B>GetKeyboardLayout</B></A>, <A HREF="1e2f_t0.htm"><B>GetKeyboardLayoutName</B></A>, <A HREF="y265b.htm"><B>MAKELANGID</B></A>,<B> <A HREF="1_e1bp5.htm">UnloadKeyboardLayout</A></B> </P>

<P><B><IMG SRC="../images/bm4.gif" ALT="" BORDER=0>Windows NT:</B></P>

<P>The <B>LoadKeyboardLayout</B> function loads a keyboard layout. </P>

<P><B>HKL LoadKeyboardLayout(</B></P>

<TABLE cols=2 width=418>

<TR VALIGN="top">
<TD width=42%><B>LPCTSTR</B> <I>pwszKLID</I><B>,</B></TD>
<TD width=58%>// address of buffer for layout name</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>    UINT</B> <I>Flags</I> </TD>
<TD width=58%>// keyboard layout flags</TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>   );</B></TD>
<TD width=58%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>pwszKLID</I></P>

<P>Points to the buffer that specifies the name of the keyboard layout. The name should be derived from the hexadecimal value of the language identifier corresponding to the layout. For example, U.S. English has a language identifier of 0x0409, so the primary U.S. English layout is named "00000409". Variants of U.S. English layout, such as the Dvorak layout, are named "00010409",  "00020409", and so on. For a list of the primary language identifiers and sub-language identifiers that make up a language identifier, see the <A HREF="y265b.htm"><B>MAKELANGID</B></A> macro. </P>

<P><I>Flags</I></P>

<P>Specifies how the keyboard layout is to be loaded. This parameter can be one of the following values: </P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=41%><B>Value</B></TD>
<TD width=59%><B>Meaning</B></TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_ACTIVATE</TD>
<TD width=59%>The function loads the layout if it is not already loaded, and activates it. This value activates the layout for the entire system not just the calling thread.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_REORDER</TD>
<TD width=59%>This flag is meaningful only if the KLF_ACTIVATE flag is set and the layout is already loaded. If these conditions are met and the KLF_REORDER bit is set, the function removes the specified layout from its position in the system's circular list of loaded layouts, and places it at the head of the list as the active layout.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>&nbsp;</TD>
<TD width=59%>If the KLF_ACTIVATE bit is set and the layout is loaded but the KLF_REORDER bit is not set, the function simply rotates the system's circular list of loaded layouts.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>&nbsp;</TD>
<TD width=59%>If the KLF_ACTIVATE flag is set and the layout is not already loaded, it is loaded as the active layout and inserted in the system's circular list of keyboard layouts ahead of the previously active layout.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_SUBSTITUTE_OK</TD>
<TD width=59%>The specified layout is looked up in the user's profile (in the registry under the key <B>HKEY_CURRENT_USER\Keyboard Layout\Substitutes</B>) to find a substitution layout preferred by the user. For example, if there was a value in this section of name "00000409" equal to "00010409", loading the U.S. English layout ("00000409") with the KLF_SUBSTITUTE_OK flag set would cause the Dvorak U.S. English layout ("00010409") to be loaded.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%>KLF_UNLOADPREVIOUS</TD>
<TD width=59%>If KLF_ACTIVATE is specified, and the layout is loaded and activated successfully, the function unloads the previously active layout. Otherwise, the function ignores this flag.</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the handle of the keyboard layout.</P>

<P>If the function fails, the return value is NULL. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P><B>Remarks</B></P>

<P>Several keyboard layouts can be loaded at a time, but only one at a time is active. Loading multiple keyboard layouts makes it possible to switch rapidly between layouts. </P>

<P><B>See Also</B></P>

<P><A HREF="1c2elxp.htm"><B>ActivateKeyboardLayout</B></A>, <A HREF="1e2f_t0.htm"><B>GetKeyboardLayoutName</B></A>, <A HREF="1_e1bp5.htm"><B>UnloadKeyboardLayout</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
