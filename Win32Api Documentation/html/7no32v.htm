<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>Processing the WM_RENDERFORMAT and WM_RENDERALLFORMATS Messages</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="7no32v"></A><B>Processing the WM_RENDERFORMAT and WM_RENDERALLFORMATS Messages</B></P>

<P>If a window passes a NULL handle to the <A HREF="1uhxs93.htm"><B>SetClipboardData</B></A> function, it must process the <A HREF="3w7hwo.htm">WM_RENDERFORMAT</A> and <A HREF="a5oxdl.htm">WM_RENDERALLFORMATS</A> messages to render data upon request. </P>

<P>If the WM_RENDERFORMAT message delayed rendering a specific format and an application requested data in that format, the message is sent to the clipboard owner. If the WM_RENDERFORMAT message has delayed rendering one or more formats, the message is sent to the clipboard owner before it is destroyed. </P>

<P>To render a clipboard format, the window procedure must place a data handle on the clipboard by using the <B>SetClipboardData</B> function. It must not open the clipboard before calling <B>SetClipboardData</B>. </P>

<P>The Label application processes the <A HREF="3w7hwo.htm">WM_RENDERFORMAT</A> and <A HREF="a5oxdl.htm">WM_RENDERALLFORMATS</A> messages as follows. </P>

<P>case WM_RENDERFORMAT:  </P>

<P>RenderFormat((UINT) wParam); </P>

<P>break; </P>

<P></P>

<P>case WM_RENDERALLFORMATS: </P>

<P>RenderFormat(uLabelFormat); </P>

<P>RenderFormat(CF_TEXT); </P>

<P>break; </P>

<P></P>

<P>In both cases, the window procedure calls the application-defined RenderFormat function, defined as follows. </P>

<P>void WINAPI RenderFormat(UINT uFormat)  </P>

<P>{ </P>

<P>HGLOBAL hglb; </P>

<P>PLABELBOX pbox; </P>

<P>LPTSTR  lptstr; </P>

<P>int cch; </P>

<P></P>

<P>if (pboxLocalClip == NULL) </P>

<P>return; </P>

<P></P>

<P>if (uFormat == CF_TEXT) </P>

<P>{ </P>

<P>// Allocate a buffer for the text. </P>

<P></P>

<P>cch = pboxLocalClip-&gt;cchLabel; </P>

<P>hglb = GlobalAlloc(GMEM_DDESHARE, </P>

<P>(cch + 1) * sizeof(TCHAR)); </P>

<P>if (hglb == NULL) </P>

<P>return; </P>

<P></P>

<P>// Copy the text from pboxLocalClip. </P>

<P></P>

<P>lptstr = GlobalLock(hglb); </P>

<P>memcpy(lptstr, pboxLocalClip-&gt;atchLabel, </P>

<P>cch * sizeof(TCHAR)); </P>

<P>lptstr[cch] = (TCHAR) 0; </P>

<P>GlobalUnlock(hglb); </P>

<P></P>

<P>// Place the handle on the clipboard. </P>

<P></P>

<P>SetClipboardData(CF_TEXT, hglb); </P>

<P>} </P>

<P>else if (uFormat == uLabelFormat) </P>

<P>{ </P>

<P>hglb = GlobalAlloc(GMEM_DDESHARE, sizeof(LABELBOX)); </P>

<P>if (hglb == NULL) </P>

<P>return; </P>

<P>pbox = GlobalLock(hglb); </P>

<P>memcpy(pbox, pboxLocalClip, sizeof(LABELBOX)); </P>

<P>GlobalUnlock(hglb); </P>

<P></P>

<P>SetClipboardData(uLabelFormat, hglb); </P>

<P>} </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
