<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Waitable Timer Objects</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="jy2wvk"></A><B>Waitable Timer Objects</B></P>

<P>A "waitable" timer object is a synchronization object whose state is set to signaled when the specified due time arrives. There are two types of waitable timers that can be created: manual-reset and synchronization. A timer of either type can also be a periodic timer.</P>

<TABLE cols=2>

<TR VALIGN="top">
<TD width=32%><B>Object</B></TD>
<TD width=68%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=32%>manual-reset timer</TD>
<TD width=68%>A timer whose state remains signaled until <A HREF="c26jbn.htm"><B>SetWaitableTimer</B></A><B> </B>is called to establish a new due time.</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>synchronization timer</TD>
<TD width=68%>A timer whose state remains signaled until a thread completes a wait operation on the timer object.</TD>
</TR>

<TR VALIGN="top">
<TD width=32%>periodic timer</TD>
<TD width=68%>A timer that is reactivated each time the specified period expires, until the timer is reset or canceled. A periodic timer is either a periodic manual-reset timer or a periodic synchronization timer.</TD>
</TR>
</TABLE><BR>

<P></P>

<P>A thread uses the <A HREF="12bp5e6.htm"><B>CreateWaitableTimer</B></A> function to create a timer object. Specify TRUE for the <I>bManualReset</I> parameter to create a manual-reset timer and FALSE to create a synchronization timer. The creating thread can specify a name for the timer object in the <I>lpTimerName</I> parameter. Threads in other processes can open a handle to an existing timer by specifying its name in a call to the <A HREF="2z5sbu.htm"><B>OpenWaitableTimer</B></A> function. Any thread with a handle to a timer object can use one of the <A HREF="y2tc_3.htm">wait functions</A> to wait for the timer state to be set to signaled.</P>

<P>·The thread calls the <A HREF="c26jbn.htm"><B>SetWaitableTimer</B></A> function to activate the timer. Note the use of the following parameters for <B>SetWaitableTimer</B>:</P>

<P>·Use the <I>lpDueTime</I> parameter to specify the time at which the timer is to be set to the signaled state. When a manual-reset timer is set to the signaled state, it remains in this state until <B>SetWaitableTimer </B>establishes a new due time. When a synchronization timer is set to the signaled state, it remains in this state until a thread completes a wait operation on the timer object. </P>

<P>·Use the <I>lPeriod</I> parameter of the <A HREF="c26jbn.htm"><B>SetWaitableTimer</B></A> function to specify the timer period. If the period is not zero, the timer is a periodic timer; it is reactivated each time the period expires, until the timer is reset or canceled. If the period is zero, the timer is not a periodic timer; it is signaled once and then deactivated.</P>

<P></P>

<P>A thread can use the <A HREF="w6gyxd.htm"><B>CancelWaitableTimer</B></A> function to set the timer to the inactive state. To reset the timer, call <A HREF="c26jbn.htm"><B>SetWaitableTimer</B></A>. When you are finished with the timer object, call <A HREF="ngwwie.htm"><B>CloseHandle</B></A> to close the handle to the timer object.</P>

</BODY>
</HTML>
