<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><TITLE>DebugBreak</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="c5hzq4"></A><B>DebugBreak  <A HREF="lduuyl.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="1txdzye.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="19cj0x..htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>DebugBreak</B> function causes a breakpoint exception to occur in the current process so that the calling thread can signal the debugger and force it to take some action. If the process is not being debugged, the search logic of a standard exception handler is used. In most cases, this causes the calling process to terminate because of an unhandled breakpoint exception. </P>

<P><B>VOID DebugBreak(VOID)</B></P>

<P><B>Parameters</B></P>

<P>This function has no parameters. </P>

<P><B>Return Values</B></P>

<P>This function does not return a value. </P>

<P><B>See Also</B></P>

<P><A HREF="hfkv1a.htm"><B>DebugActiveProcess</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
