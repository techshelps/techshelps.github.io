<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>LocalUnlock</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="ou9fuf"></A><B>LocalUnlock  <A HREF="5.gu_hp.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="7gqv3r.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="9cqndc.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>LocalUnlock</B> function decrements the lock count associated with a memory object that was allocated with the LMEM_MOVEABLE flag. This function has no effect on memory objects allocated with the LMEM_FIXED flag. </P>

<P><B>BOOL LocalUnlock(</B></P>

<TABLE cols=2 width=371>

<TR VALIGN="top">
<TD width=39%><B>HLOCAL</B> <I>hMem</I> </TD>
<TD width=61%>// handle of local memory object </TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>   );</B></TD>
<TD width=61%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>hMem</I></P>

<P>Identifies the local memory object. This handle is returned by either the <A HREF="2_d2ee.htm"><B>LocalAlloc</B></A> or <A HREF="4vpfqs.htm"><B>LocalReAlloc</B></A> function. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the memory object is still locked after decrementing the lock count, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. If <B>GetLastError</B> returns NO_ERROR, the memory object is unlocked.</P>

<P><B>Remarks</B></P>

<P>The internal data structures for each memory object include a lock count that is initially zero. For movable memory objects, the <A HREF="x6.z9d.htm"><B>LocalLock</B></A> function increments the count by one, and <B>LocalUnlock</B> decrements the count by one. For each call that a process makes to <B>LocalLock</B> for an object, it must eventually call <B>LocalUnlock</B>. Locked memory will not be moved or discarded unless the memory object is reallocated by using the <B>LocalReAlloc</B> function. The memory block of a locked memory object remains locked until its lock count is decremented to zero, at which time it can be moved or discarded. </P>

<P>If the memory object is already unlocked, <B>LocalUnlock</B> returns FALSE and <B>GetLastError</B> reports ERROR_NOT_LOCKED. Memory objects allocated with the LMEM_FIXED flag always have a lock count of zero and cause the ERROR_NOT_LOCKED error.</P>

<P>A process should not rely on the return value to determine the number of times it must subsequently call <B>LocalUnlock</B> for the memory block. </P>

<P><B>See Also</B></P>

<P><A HREF="2_d2ee.htm"><B>LocalAlloc</B></A>, <A HREF="2bcr_u.htm"><B>LocalFlags</B></A>, <A HREF="x6.z9d.htm"><B>LocalLock</B></A>, <A HREF="4vpfqs.htm"><B>LocalReAlloc</B></A> </P>

</BODY>
</HTML>
