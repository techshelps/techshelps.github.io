<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>GetPrivateProfileStruct</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="2ifkwa"></A><B>GetPrivateProfileStruct  <A HREF="b47ifl.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>GetPrivateProfileStruct</B> function retrieves the data associated with the specified key in the given section of an initialization file. As it retrieves the data, the function calculates a checksum and compares it with the checksum calculated by the <A HREF="ghzbh2.htm"><B>WritePrivateProfileStruct</B></A> function when the data was added to the file. </P>

<P>Win32-based applications should store initialization information in the registry. </P>

<P><B>BOOL GetPrivateProfileStruct(</B></P>

<TABLE cols=2 width=418>

<TR VALIGN="top">
<TD width=44%><B>LPCTSTR </B><I>lpszSection</I><B>,</B></TD>
<TD width=56%>// address of section name</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    LPCTSTR </B><I>lpszKey</I><B>,</B></TD>
<TD width=56%>// address of key name</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    LPVOID </B><I>lpStruct</I><B>,</B></TD>
<TD width=56%>// address of return buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    UINT </B><I>uSizeStruct</I><B>,</B></TD>
<TD width=56%>// size of return buffer</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>    LPCTSTR </B><I>szFile</I></TD>
<TD width=56%>// address of initialization filename</TD>
</TR>

<TR VALIGN="top">
<TD width=44%><B>   );</B></TD>
<TD width=56%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>lpszSection</I></P>

<P>Points to a null-terminated string containing the section name in the initialization file. </P>

<P><I>lpszKey</I></P>

<P>Points to the null-terminated string containing the key name whose data is to be retrieved. </P>

<P><I>lpStruct</I></P>

<P>Points to the buffer that receives the data associated with the file, section, and key names. </P>

<P><I>uSizeStruct</I></P>

<P>Specifies the size, in bytes, of the buffer pointed to by the <I>lpStruct</I> parameter. </P>

<P><I>szFile</I></P>

<P>Points to a null-terminated string that names the initialization file. If this parameter does not contain a full path to the file, Windows searches for the file in the Windows directory. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is nonzero.</P>

<P>If the function fails, the return value is zero. </P>

<P><B>Remarks</B></P>

<P>A section in the initialization file must have the following form: </P>

<P><B>[</B><I>section</I><B>]</B><BR>
<I>key</I><B>=</B><I>data</I><BR>
      .<BR>
      .<BR>
      .</P>

<P>Calls to private profile functions might be mapped to the registry instead of to the specified initialization files. This mapping is likely if an application modifies system-component initialization files, such as CONTROL.INI, SYSTEM.INI, and WINFILE.INI. In these cases, the <B>GetPrivateProfileStruct</B> function retrieves information from the registry, not from the initialization file; the change in the storage location has no effect on the function's behavior. </P>

<P>The Win32 Profile functions (<B>Get/WriteProfile*</B>, <B>Get/WritePrivateProfile*</B>) use the following steps to locate initialization information:</P>

<P>1.Look in the registry for the name of the initialization file, say myfile.ini, under IniFileMapping: </P>

<P><B>HKEY_LOCAL_MACHINE</B>\<B>Software</B>\<B>Microsoft</B>\<BR>
        <B>Windows NT</B>\<B>CurrentVersion</B>\<B>IniFileMapping\myfile.ini</B></P>

<P>2.Look for the section name specified by <I>lpAppName</I>. This will be a named value under myfile.ini, or a subkey of myfile.ini, or will not exist.</P>

<P>3.If the section name specified by <I>lpAppName </I>is a named value under myfile.ini, then that value specifies where in the registry you will find the keys for the section.</P>

<P>4.If the section name specified by <I>lpAppName </I>is a subkey of myfile.ini, then named values under that subkey specify where in the registry you will find the keys for the section. If the key you are looking for does not exist as a named value, then there will be an unnamed value (shown as "&lt;No Name&gt;") that specifies the default location in the registry where you will find the key.</P>

<P>5.If the section name specified by <I>lpAppName </I>does not exist as a named value or as a subkey under myfile.ini, then there will be an unnamed value (shown as "&lt;No Name&gt;") under myfile.ini that specifies the default location in the registry where you will find the keys for the section.</P>

<P>6.If there is no subkey for myfile.ini, or if there is no entry for the section name, then look for the actual myfile.ini on the disk and read its contents.</P>

<P>When looking at values in the registry that specify other registry locations, there are several prefixes that change the behavior of the ini file mapping:</P>

<P>! - this character forces all writes to go both to the registry and to the .INI file on disk.</P>

<P># - this character causes the registry value to be set to the value in the Windows 3.1 .INI file when a new user logs in for the first time after setup.</P>

<P>@ - this character prevents any reads from going to the .INI file on disk if the requested data is not found in the registry.</P>

<P>USR: - this prefix stands for HKEY_CURRENT_USER, and the text after the prefix is relative to that key.</P>

<P>SYS: - this prefix stands for HKEY_LOCAL_MACHINE\SOFTWARE, and the text after the prefix is relative to that key.</P>

<P></P>

<P><B>See Also</B></P>

<P><A HREF="ghzbh2.htm"><B>WritePrivateProfileStruct</B></A> </P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
