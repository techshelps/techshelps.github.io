<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>TlsGetValue</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="t9hgy4"></A><B>TlsGetValue  <A HREF="pdvk1k.htm"><IMG SRC="../images/bm1.gif" ALT="" BORDER=0></A>  <A HREF="glns2h.htm"><IMG SRC="../images/bm3.gif" ALT="" BORDER=0></A>  <A HREF="7wnz9r.htm"><IMG SRC="../images/bm2.gif" ALT="" BORDER=0></A></B></P>

<P>The <B>TlsGetValue</B> function retrieves the value in the calling thread's thread local storage (TLS) slot for a specified TLS index. Each thread of a process has its own slot for each TLS index. </P>

<P><B>LPVOID TlsGetValue(</B></P>

<TABLE cols=2 width=409>

<TR VALIGN="top">
<TD width=42%><B>DWORD</B> <I>dwTlsIndex</I> </TD>
<TD width=58%>// TLS index to retrieve value for  </TD>
</TR>

<TR VALIGN="top">
<TD width=42%><B>   );</B></TD>
<TD width=58%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P></P>

<P><B>Parameters</B></P>

<P><I>dwTlsIndex</I></P>

<P>Specifies a TLS index that was allocated by the <A HREF="qzkzro.htm"><B>TlsAlloc</B></A> function. </P>

<P></P>

<P><B>Return Values</B></P>

<P>If the function succeeds, the return value is the value stored in the calling thread's TLS slot associated with the specified index.</P>

<P>If the function fails, the return value is zero. To get extended error information, call <A HREF="11c2vs7.htm"><B>GetLastError</B></A>. </P>

<P>Note that the data stored in a TLS slot can have a value of zero. In this case, the return value is zero and <B>GetLastError</B> returns NO_ERROR. </P>

<P><B>Remarks</B></P>

<P>TLS indexes are typically allocated by the <B>TlsAlloc</B> function during process or DLL initialization. Once allocated, each thread of the process can use a TLS index to access its own TLS storage slot for that index. The storage slot for each thread is initialized to NULL. A thread specifies a TLS index in a call to <A HREF="d9lju_.htm"><B>TlsSetValue</B></A>, to store a value in its slot. The thread specifies the same index in a subsequent call to <B>TlsGetValue</B>, to retrieve the stored value. </P>

<P><B>TlsSetValue</B> and <B>TlsGetValue</B> were implemented with speed as the primary goal. These functions perform minimal parameter validation and error checking. In particular, this function succeeds if <I>dwTlsIndex</I> is in the range 0 through (TLS_MINIMUM_AVAILABLE - 1). It is up to the programmer to ensure that the index is valid. </P>

<P>Win32 functions that return indications of failure call <B>SetLastError</B> when they fail. They generally do not call <B>SetLastError</B> when they succeed. The <B>TlsGetValue</B> function is an exception to this general rule. The <B>TlsGetValue</B> function calls <B>SetLastError</B> to clear a thread's last error when it succeeds. That allows checking for the error-free retrieval of NULL values. </P>

<P><B>See Also</B></P>

<P><A HREF="11c2vs7.htm"><B>GetLastError</B></A>, <A HREF="34n8_rg.htm"><B>SetLastError</B></A>, <A HREF="qzkzro.htm"><B>TlsAlloc</B></A>, <A HREF="3hllfbu.htm"><B>TlsFree</B></A>, <A HREF="d9lju_.htm"><B>TlsSetValue</B></A></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
