<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Processing Keystroke Messages</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFC8" TEXT="#341717">



<P><A NAME="613lx_"></A><B>Processing Keystroke Messages</B></P>

<P>The window procedure of the window that has the keyboard focus receives keystroke messages when the user types at the keyboard. The keystroke messages are <A HREF="cxjo_p.htm">WM_KEYDOWN</A>, <A HREF="1ubr_9n.htm">WM_KEYUP</A>, <A HREF="7.wa3p.htm">WM_SYSKEYDOWN</A>, and <A HREF="7a010rj.htm">WM_SYSKEYUP</A>. A typical window procedure ignores all keystroke messages except WM_KEYDOWN. Windows posts the WM_KEYDOWN message when the user presses a key. </P>

<P>When the window procedure receives the WM_KEYDOWN message, it should examine the virtual-key code that accompanies the message to determine how to process the keystroke. The virtual-key code is in the message's <I>wParam</I> parameter. Typically, an application processes only keystrokes generated by noncharacter keys, including the function keys, the cursor movement keys, and the special-purpose keys such as INS, DEL, HOME and END. </P>

<P>The following example shows the window procedure framework that a typical application uses to receive and process keystroke messages.</P>

<P>case WM_KEYDOWN:  </P>

<P>switch (wParam) { </P>

<P>case VK_LEFT: </P>

<P>. </P>

<P>. /* Process the LEFT ARROW key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case VK_RIGHT: </P>

<P>. </P>

<P>. /* Process the RIGHT ARROW key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case VK_UP: </P>

<P>. </P>

<P>. /* Process the UP ARROW key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case VK_DOWN: </P>

<P>. </P>

<P>. /* Process the DOWN ARROW key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case VK_HOME: </P>

<P>. </P>

<P>. /* Process the HOME key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case VK_END: </P>

<P>. </P>

<P>. /* Process the END key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case VK_INSERT: </P>

<P>. </P>

<P>. /* Process the INS key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case VK_DELETE: </P>

<P>. </P>

<P>. /* Process the DEL key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>case VK_F2: </P>

<P>. </P>

<P>. /* Process the F2 key. */ </P>

<P>. </P>

<P></P>

<P>break; </P>

<P></P>

<P>. </P>

<P>. /* Process other noncharacter keystrokes. */ </P>

<P>. </P>

<P></P>

<P>default: </P>

<P>break; </P>

<P>} </P>

<P></P>

</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
