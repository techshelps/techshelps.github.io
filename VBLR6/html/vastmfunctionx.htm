<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Function Statement Example</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H2><A NAME="vastmfunctionx"></A>Function Statement Example</H2>

<P class=T>This example uses the <B>Function</B> statement to declare the name, arguments, and code that form the body of a <B>Function</B> procedure. The last example uses hard-typed, initialized <B>Optional</B> arguments.</P>

<PRE class=CT><CODE>' The following user-defined function returns the square root of the
' argument passed to it.
<B>Function</B> CalculateSquareRoot<B>(</B>NumberArg <B>As</B> Double<B>)</B> <B>As</B> Double
    If NumberArg &lt; 0 Then    ' Evaluate argument.
        <B>Exit Function</B>    ' Exit to calling procedure.
    Else
        CalculateSquareRoot = Sqr(NumberArg)    ' Return square root.
    End If
<B>End Function</B>
</CODE></PRE>

<P class=T>Using the <B>ParamArray</B> keyword enables a function to accept a variable number of arguments. In the following definition, <CODE>FirstArg</CODE> is passed by value.</P>

<PRE class=CT><CODE><B>Function</B> CalcSum<B>(ByVal</B> FirstArg <B>As</B> Integer<B>,</B> <B>ParamArray</B> OtherArgs()<B>)</B>
Dim ReturnValue 
' If the function is invoked as follows:
ReturnValue = CalcSum(4, 3 ,2 ,1)
' Local variables are assigned the following values: FirstArg = 4,
' OtherArgs(1) = 3, OtherArgs(2) = 2, and so on, assuming default
' lower bound for arrays = 1.
</CODE></PRE>

<P class=T><B>Optional</B> arguments can have default values and types other than <B>Variant</B>. </P>

<PRE class=CT><CODE>' If a function's arguments are defined as follows:
<B>Function</B> MyFunc<B>(</B>MyStr <B>As</B> String<B>,</B> <B>Optional</B> MyArg1 <B>As</B> _ <B>Integer =</B> 5<B>,</B> <B>Optional</B> MyArg2 <B>=</B> "Dolly"<B>)</B> 
Dim RetVal
' The function can be invoked as follows:
RetVal = MyFunc("Hello", 2, "World")    ' All 3 arguments supplied.
RetVal = MyFunc("Test", , 5)    ' Second argument omitted.
' Arguments one and three using named-arguments.
RetVal = MyFunc(MyStr:="Hello ", MyArg1:=7)
</CODE></PRE>

</BODY>
</HTML>
