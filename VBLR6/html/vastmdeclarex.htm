<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Declare Statement Example</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H2><A NAME="vastmdeclarex"></A>Declare Statement Example</H2>

<P class=T>This example shows how the <B>Declare</B> statement is used at the module level of a standard module to declare a reference to an external procedure in a dynamic-link library (DLL). You can place the <B>Declare</B> statements in class modules if the <B>Declare</B> statements are <B>Private</B>.</P>

<PRE class=CT><CODE>' In Microsoft Windows (16-bit):
<B>Declare Sub</B> MessageBeep <B>Lib</B> "User" <B>(</B>ByVal N <B>As</B> Integer<B>)</B>
' Assume SomeBeep is an alias for the procedure name.
<B>Declare Sub</B> MessageBeep <B>Lib</B> "User" <B>Alias </B>"SomeBeep"<B>(</B>ByVal N <B>As</B> Integer<B>)</B>
' Use an ordinal in the Alias clause to call GetWinFlags.
<B>Declare Function</B> GetWinFlags <B>Lib</B> "Kernel" <B>Alias</B> "#132"<B>()</B> <B>As</B> Long

' In 32-bit Microsoft Windows systems, specify the library USER32.DLL,
' rather than USER.DLL. You can use conditional compilation to write
' code that can run on either Win32 or Win16.
#If Win32 Then
    <B>Declare Sub</B> MessageBeep <B>Lib</B> "User32" <B>(</B>ByVal N <B>As</B> Long<B>)</B>
#Else
    <B>Declare Sub</B> MessageBeep <B>Lib</B> "User" <B>(</B>ByVal N <B>As</B> Integer<B>)</B>
#End If
</CODE></PRE>

</BODY>
</HTML>
