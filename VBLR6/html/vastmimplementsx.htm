<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Implements Statement Example</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H2><A NAME="vastmimplementsx"></A>Implements Statement Example</H2>

<P class=T>The following example shows how to use the <B>Implements</B> statement to make a set of declarations available to multiple classes. By sharing the declarations through the <B>Implements</B> statement, neither class has to make any declarations itself.</P>

<P class=T>Assume there are two forms. The Selector form has two buttons, Customer Data and Supplier Data. To enter name and address information for a customer or a supplier, the user clicks the Customer button or the Supplier button on the Selector form, and then enters the name and address using the Data Entry form. The Data Entry form has two text fields, Name and Address.</P>

<P class=T>The following code for the shared declarations is in a class called PersonalData:</P>

<PRE class=CT><CODE>Public Name As String
Public Address As String
</CODE></PRE>

<P class=T>The code supporting the customer data is in a class module called Customer:</P>

<PRE class=CT><CODE><B>Implements</B> PersonalData
Private Property Get PersonalData_Address() As String
PersonalData_Address = "CustomerAddress"
End Property

Private Property Let PersonalData_Address(ByVal RHS As String)
'
End Property

Private Property Let PersonalData_Name(ByVal RHS As String)
'
End Property

Private Property Get PersonalData_Name() As String
PersonalData_Name = "CustomerName"
End Property
</CODE></PRE>

<P class=T>The code supporting the supplier data is in a class module called Supplier:</P>

<PRE class=CT><CODE><B>Implements</B> PersonalData

Private Property Get PersonalData_Address() As String
PersonalData_Address = "SupplierAddress"
End Property

Private Property Let PersonalData_Address(ByVal RHS As String)
'
End Property

Private Property Let PersonalData_Name(ByVal RHS As String)
'
End Property

Private Property Get PersonalData_Name() As String
PersonalData_Name = "SupplierName"
End Property
</CODE></PRE>

<P class=T>The following code supports the Selector form:</P>

<PRE class=CT><CODE>Private cust As New Customer
Private sup As New Supplier

Private Sub Command1_Click()
Dim frm2 As New Form2
    Set frm2.PD = cust
    frm2.Show 1
End Sub

Private Sub Command2_Click()
Dim frm2 As New Form2
    Set frm2.PD = sup
    frm2.Show 1
End Sub
</CODE></PRE>

<P class=T>The following code supports the Data Entry form:</P>

<PRE class=CT><CODE>Private m_pd As PersonalData
Private Sub Form_Load()
    With m_pd
        Text1 = .Name
        Text2 = .Address
    End With
End Sub
Public Property Set PD(Data As PersonalData)
    Set m_pd = Data
End Property</CODE></PRE>

</BODY>
</HTML>
