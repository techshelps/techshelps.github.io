<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Source Property Example</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H2><A NAME="vaprosourcex"></A>Source Property Example</H2>

<P class=T>This example assigns the Programmatic ID of an Automation object created in Visual Basic to the variable <CODE>MyObjectID</CODE>, and then assigns that to the <B>Source</B> property of the <B>Err</B> object when it generates an error with the <B>Raise</B> method. When handling errors, you should not use the <B>Source </B>property (or any <B>Err </B>properties other than <B>Number</B>) programmatically. The only valid use of properties other than <B>Number</B> is for displaying rich information to an end user in cases where you can't handle an error. The example assumes that <CODE>App</CODE> and <CODE>MyClass</CODE> are valid references.</P>

<PRE class=CT><CODE>Dim MyClass, MyObjectID, MyHelpFile, MyHelpContext
' An object of type MyClass generates an error and fills all Err object
' properties, including Source, which receives MyObjectID, which is a 
' combination of the Title property of the App object and the Name
' property of the MyClass object.
MyObjectID = App.Title &amp; "." &amp; MyClass.Name
Err.<B>Raise</B>    Number := vbObjectError + 894, <B>Source</B> := MyObjectID, _
                Description := "Was not able to complete your task", _
                HelpFile := MyHelpFile, HelpContext := MyHelpContext 
</CODE></PRE>

<P class=T></P>

<P class=T></P>

</BODY>
</HTML>
