<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Event Statement Example</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<H2><A NAME="vastmeventx"></A>Event Statement Example</H2>

<P class=T>The following example uses events to count off seconds during a demonstration of the fastest 100 meter race. The code illustrates all of the event-related methods, properties, and statements, including the <B>Event</B> statement.</P>

<P class=T>The class that raises an event is the event source, and the classes that implement the event are the sinks. An event source can have multiple sinks for the events it generates. When the class raises the event, that event is fired on every class that has elected to sink events for that instance of the object.</P>

<P class=T>The example also uses a form (<CODE>Form1</CODE>) with a button (<CODE>Command1</CODE>), a label (<CODE>Label1</CODE>), and two text boxes (<CODE>Text1</CODE> and <CODE>Text2</CODE>). When you click the button, the first text box displays "From Now" and the second starts to count seconds. When the full time (9.84 seconds) has elapsed, the first text box displays "Until Now" and the second displays "9.84"</P>

<P class=T>The code for <CODE>Form1</CODE> specifies the initial and terminal states of the form. It also contains the code executed when events are raised.</P>

<PRE class=CT><CODE>Option Explicit

Private WithEvents mText As TimerState

Private Sub Command1_Click()
Text1.Text = "From Now"
    Text1.Refresh
    Text2.Text = "0"
    Text2.Refresh
Call mText.TimerTask(9.84)
End Sub

Private Sub Form_Load()
    Command1.Caption = "Click to Start Timer"
    Text1.Text = ""
    Text2.Text = ""
    Label1.Caption = "The fastest 100 meter run took this long:"
    Set mText = New TimerState
    End Sub

Private Sub mText_ChangeText()
    Text1.Text = "Until Now"
    Text2.Text = "9.84"
End Sub

Private Sub mText_UpdateTime(ByVal dblJump As Double)
    Text2.Text = Str(Format(dblJump, "0"))
    DoEvents
End Sub
</CODE></PRE>

<P class=T>The remaining code is in a class module named TimerState. The <B>Event</B> statements declare the procedures initiated when events are raised.</P>

<PRE class=CT><CODE>Option Explicit
<B>Public Event</B> UpdateTime<B>(ByVal</B> dblJump <B>As</B> Double<B>)</B>
<B>Public Event</B> ChangeText<B>()</B>

Public Sub TimerTask(ByVal Duration As Double)
    Dim dblStart As Double
    Dim dblSecond As Double
    Dim dblSoFar As Double
    dblStart = Timer
    dblSoFar = dblStart
    
    Do While Timer &lt; dblStart + Duration
        If Timer - dblSoFar &gt;= 1 Then
            dblSoFar = dblSoFar + 1
            RaiseEvent UpdateTime(Timer - dblStart)
        End If
    Loop
    
    RaiseEvent ChangeText
    
End Sub
</CODE></PRE>

</BODY>
</HTML>
