<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<TITLE>Declare Statement</TITLE>
<style>@import url(office.css);</style>
	<link disabled rel="stylesheet" href="msoffice.css"></HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">



<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defmodulelevel">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defprocedure">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defdll">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defmodule">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defdeclaration">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defexpression">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defvariable">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defconstant">
</OBJECT>
<OBJECT ID="hhobj_12" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defscoping">
</OBJECT>
<OBJECT ID="hhobj_13" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defarg">
</OBJECT>
<OBJECT ID="hhobj_14" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defdatatype">
</OBJECT>
<OBJECT ID="hhobj_15" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defbytedatatype">
</OBJECT>
<OBJECT ID="hhobj_16" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defbooleandatatype">
</OBJECT>
<OBJECT ID="hhobj_17" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defintegerdatatype">
</OBJECT>
<OBJECT ID="hhobj_18" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="deflong">
</OBJECT>
<OBJECT ID="hhobj_19" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defcurrencydatatype">
</OBJECT>
<OBJECT ID="hhobj_20" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defsingledatatype">
</OBJECT>
<OBJECT ID="hhobj_21" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defdoubledatatype">
</OBJECT>
<OBJECT ID="hhobj_22" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defdecimaldatatype">
</OBJECT>
<OBJECT ID="hhobj_23" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defdatedatatype">
</OBJECT>
<OBJECT ID="hhobj_24" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defstringdatatype">
</OBJECT>
<OBJECT ID="hhobj_25" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defvariantdatatype">
</OBJECT>
<OBJECT ID="hhobj_26" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defuserdefinedtype">
</OBJECT>
<OBJECT ID="hhobj_27" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defobjecttype">
</OBJECT>
<OBJECT ID="hhobj_28" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defbyvalue">
</OBJECT>
<OBJECT ID="hhobj_29" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defbyreference">
</OBJECT>
<OBJECT ID="hhobj_30" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="defarray">
</OBJECT>
</TD></TR></TABLE>



<H1><A NAME="vastmdeclare"></A>Declare Statement</H1>

<P class=ALNSR>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:See Also">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="AddressOfOperator;CallStatement;FunctionStatement;LastDLLErrorProperty;SubStatement">
</OBJECT>&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:Example">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vastmDeclareX">
</OBJECT>&nbsp;&nbsp;&nbsp;
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="Text" VALUE="Text:Specifics">
	<PARAM NAME="Flags" VALUE=",,1">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vastmDeclareS">
</OBJECT></P>

<P class=T>Used at <A HREF="JavaScript:hhobj_4.Click()">module level</A> to declare references to external <A HREF="JavaScript:hhobj_5.Click()">procedures</A> in a <A HREF="JavaScript:hhobj_6.Click()">dynamic-link library</A> (DLL).</P>

<P><B>Syntax 1</B></P>

<P class=SYN>[<B>Public</B> | <B>Private</B>] <B>Declare</B> <B>Sub</B> <I>name</I> <B>Lib</B> <B>"</B><I>libname</I><B>"</B> [<B>Alias</B> <B>"</B><I>aliasname</I><B>"</B>] [<B>(</B>[<I>arglist</I>]<B>)</B>]</P>

<P><B>Syntax 2</B></P>

<P class=SYN>[<B>Public</B> | <B>Private</B>] <B>Declare</B> <B>Function</B> <I>name</I> <B>Lib</B> <B>"</B><I>libname</I><B>"</B> [<B>Alias</B> <B>"</B><I>aliasname</I><B>"</B>] [<B>(</B>[<I>arglist</I>]<B>)</B>] [<B>As</B> <I>type</I>]</P>

<P class=T>The <B>Declare</B> statement syntax has these parts:</P>

<TABLE cellpadding=4 cellspacing=4 cols=2>

<TR VALIGN="top">
<TH width=19%>Part</TH>
<TH width=81%>Description</TH>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>Public</B></TD>
<TD class=T width=81%>Optional. Used to declare procedures that are available to all other procedures in all <A HREF="JavaScript:hhobj_7.Click()">modules</A>.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>Private</B></TD>
<TD class=T width=81%>Optional. Used to declare procedures that are available only within the module where the <A HREF="JavaScript:hhobj_8.Click()">declaration</A> is made.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>Sub</B></TD>
<TD class=T width=81%>Optional (either <B>Sub</B> or <B>Function</B> must appear). Indicates that the procedure doesn't return a value.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>Function</B></TD>
<TD class=T width=81%>Optional (either <B>Sub</B> or <B>Function</B> must appear). Indicates that the procedure returns a value that can be used in an <A HREF="JavaScript:hhobj_9.Click()">expression</A>.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><I>name</I></TD>
<TD class=T width=81%>Required. Any valid procedure name. Note that DLL entry points are case sensitive.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>Lib</B></TD>
<TD class=T width=81%>Required. Indicates that a DLL or code resource contains the procedure being declared. The <B>Lib</B> clause is required for all declarations.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><I>libname</I></TD>
<TD class=T width=81%>Required. Name of the DLL or code resource that contains the declared procedure.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>Alias</B></TD>
<TD class=T width=81%>Optional. Indicates that the procedure being called has another name in the DLL. This is useful when the external procedure name is the same as a keyword. You can also use <B>Alias</B> when a DLL procedure has the same name as a public <A HREF="JavaScript:hhobj_10.Click()">variable</A>, <A HREF="JavaScript:hhobj_11.Click()">constant</A>, or any other procedure in the same <A HREF="JavaScript:hhobj_12.Click()">scope</A>. <B>Alias</B> is also useful if any characters in the DLL procedure name aren't allowed by the DLL naming convention.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><I>aliasname</I></TD>
<TD class=T width=81%>Optional. Name of the procedure in the DLL or code resource. If the first character is not a number sign (<B>#</B>), <I>aliasname</I> is the name of the procedure's entry point in the DLL. If (<B>#</B>) is the first character, all characters that follow must indicate the ordinal number of the procedure's entry point.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><I>arglist</I></TD>
<TD class=T width=81%>Optional. List of variables representing <A HREF="JavaScript:hhobj_13.Click()">arguments</A> that are passed to the procedure when it is called.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><I>type</I></TD>
<TD class=T width=81%>Optional. <A HREF="JavaScript:hhobj_14.Click()">Data type</A> of the value returned by a <B>Function</B> procedure; may be <A HREF="JavaScript:hhobj_15.Click()">Byte</A>, <A HREF="JavaScript:hhobj_16.Click()">Boolean</A>, <A HREF="JavaScript:hhobj_17.Click()">Integer</A>, <A HREF="JavaScript:hhobj_18.Click()">Long</A>, <A HREF="JavaScript:hhobj_19.Click()">Currency</A>, <A HREF="JavaScript:hhobj_20.Click()">Single</A>, <A HREF="JavaScript:hhobj_21.Click()">Double</A>, <A HREF="JavaScript:hhobj_22.Click()">Decimal</A> (not currently supported), <A HREF="JavaScript:hhobj_23.Click()">Date</A>, <A HREF="JavaScript:hhobj_24.Click()">String</A> (variable length only), or <A HREF="JavaScript:hhobj_25.Click()">Variant</A>, a <A HREF="JavaScript:hhobj_26.Click()">user-defined type</A>, or an <A HREF="JavaScript:hhobj_27.Click()">object type</A>.</TD>
</TR>
</TABLE><BR>

<P class=FIXP></P>

<P class=T>The <I>arglist</I> argument has the following syntax and parts:</P>

<P class=SYN>[<B>Optional</B>] [<B>ByVal</B> | <B>ByRef</B>] [<B>ParamArray</B>] <I>varname</I>[<B>( )</B>] [<B>As</B> <I>type</I>]</P>

<TABLE cellpadding=4 cellspacing=4 cols=2>

<TR VALIGN="top">
<TH width=19%>Part</TH>
<TH width=81%>Description</TH>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>Optional</B></TD>
<TD class=T width=81%>Optional. Indicates that an argument is not required. If used, all subsequent arguments in <I>arglist</I> must also be optional and declared using the <B>Optional</B> keyword. <B>Optional</B> can't be used for any argument if <B>ParamArray</B> is used.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>ByVal</B></TD>
<TD class=T width=81%>Optional. Indicates that the argument is passed <A HREF="JavaScript:hhobj_28.Click()">by value</A>.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>ByRef</B></TD>
<TD class=T width=81%>Indicates that the argument is passed <A HREF="JavaScript:hhobj_29.Click()">by reference</A>. <B>ByRef</B> is the default in Visual Basic.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>ParamArray</B></TD>
<TD class=T width=81%>Optional. Used only as the last argument in <I>arglist</I> to indicate that the final argument is an <B>Optional</B> <A HREF="JavaScript:hhobj_30.Click()">array</A> of <B>Variant</B> elements. The <B>ParamArray</B> keyword allows you to provide an arbitrary number of arguments. The <B>ParamArray</B> keyword can't be used with <B>ByVal</B>, <B>ByRef</B>, or <B>Optional</B>.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><I>varname</I></TD>
<TD class=T width=81%>Required. Name of the variable representing the argument being passed to the procedure; follows standard variable naming conventions.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><B>( )</B></TD>
<TD class=T width=81%>Required for array variables. Indicates that <I>varname</I> is an array.</TD>
</TR>

<TR VALIGN="top">
<TD class=T width=19%><I>type</I></TD>
<TD class=T width=81%>Optional. Data type of the argument passed to the procedure; may be <B>Byte</B>, <B>Boolean</B>, <B>Integer</B>, <B>Long</B>, <B>Currency</B>, <B>Single</B>, <B>Double</B>, <B>Decimal</B> (not currently supported), <B>Date</B>, <B>String </B>(variable length only), <B>Object</B>, <B>Variant</B>, a user-defined type, or an object type.</TD>
</TR>
</TABLE><BR>

<P class=FIXP></P>

<P><B>Remarks</B></P>

<P class=T>For <B>Function</B> procedures, the data type of the procedure determines the data type it returns. You can use an <B>As</B> clause following <I>arglist</I> to specify the return type of the function. Within <I>arglist</I>, you can use an <B>As</B> clause to specify the data type of any of the arguments passed to the procedure. In addition to specifying any of the standard data types, you can specify <B>As Any</B> in <I>arglist</I> to inhibit type checking and allow any data type to be passed to the procedure.</P>

<P class=T>Empty parentheses indicate that the <B>Sub</B> or <B>Function</B> procedure has no arguments and that Visual Basic should ensure that none are passed. In the following example, <CODE>First</CODE> takes no arguments. If you use arguments in a call to <CODE>First</CODE>, an error occurs:</P>

<PRE class=CT><CODE>Declare Sub First Lib "MyLib" ()
</CODE></PRE>

<P class=T>If you include an argument list, the number and type of arguments are checked each time the procedure is called. In the following example, <CODE>First</CODE> takes one <B>Long</B> argument:</P>

<PRE class=CT><CODE>Declare Sub First Lib "MyLib" (X As Long)
</CODE></PRE>

<P class=NT><B>Note</B>&nbsp;&nbsp;&nbsp;You can't have fixed-length strings in the argument list of a <B>Declare</B> statement; only variable-length strings can be passed to procedures. Fixed-length strings can appear as procedure arguments, but they are converted to variable-length strings before being passed.</P>

<P class=NT><B>Note</B>&nbsp;&nbsp;&nbsp;The <B>vbNullString</B> constant is used when calling external procedures, where the external procedure requires a string whose value is zero. This is not the same thing as a zero-length string ("").</P>

</BODY>
</HTML>
