<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>Execute Method Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="rdproexecutex"></a>Execute Method Example</h1>
<p>
This example illustrates use of the <b>Execute</b> method to execute SQL queries against a remote data source. These action queries do not return rows, but in some cases do return the number of rows affected in the <b>RowsAffected</b> property. The example creates a work table called “TestData”, inserts a few rows of data in the table and proceeds to run a DELETE query against the table. Notice that the delete queries have their own embedded transaction management. Because of this, you must use the <b>rdExecDirect</b> option to prevent the creation of stored procedures which negate the use of query-provided transactions.</p>
<pre><code>Option Explicit
Dim er As rdoError
Dim cn As New rdoConnection
Dim qy As New rdoQuery
Dim rs As rdoResultset
Dim col As rdoColumn
Dim SQL As String

Private Sub DropRows_Click()
Dim SQL As String, Ans As Integer

SQL = "Begin Transaction Delete TestData " _
   &amp; " Where State = ‘" &amp; StateWanted &amp; "’"
cn.<span class=cfe><b>Execute</b></span> SQL, rdExecDirect
Ans = MsgBox("Ok to delete these "&nbsp; _
   &amp; cn.RowsAffected &amp; " rows?", vbOKCancel)
If Ans = vbOK Then
   cn.<span class=cfe><b>Execute</b></span> "Commit Transaction", rdExecDirect
Else
   cn.<span class=cfe><b>Execute</b></span> "Rollback Transaction", rdExecDirect
End If
Exit Sub
End Sub

Private Sub Form_Load()
cn.CursorDriver = rdUseOdbc
cn.Connect = "uid=;pwd=;server=sequel;" _
   &amp; "driver={SQL Server};" _
   &amp; "database=pubs;dsn=’’;"
cn.EstablishConnection
With qy
   .Name = "TestList"
   .SQL = "Select * from TestData Where State = ?"
   .RowsetSize = 1
   Set .ActiveConnection = cn
End With
SQL = "Drop Table TestData"
cn.<span class=cfe><b>Execute</b></span> SQL

SQL = " CREATE TABLE TestData " _
   &amp; " (ID integer identity NOT NULL, " _
   &amp; " PName char(10) NULL," _
   &amp; " State Char(2) NULL) " _
   &amp; " CREATE UNIQUE INDEX " _
   &amp;   "TestDataIndex on TestData(ID)"
 &nbsp;&nbsp; 
cn.<span class=cfe><b>Execute</b></span> SQL
SQL = "Insert TestData (PName,State)&nbsp; " _
   &amp; "Values('Bob', 'CA')" _
   &amp; " Insert TestData (PName,State) " _
   &amp; " Values('Bill', 'WA')" _
   &amp; " Insert TestData (PName,State) " _
   &amp; " Values('Fred', 'WA')” _
   &amp; " Insert TestData (PName,State) " _
   &amp; " Values('George', 'CA')" _
   &amp; " Insert TestData (PName,State) " _
   &amp; " Values('Sam', 'TX')" _
   &amp; " Insert TestData (PName,State) " _
   &amp; " Values('Marilyn', 'TX')"
cn.<span class=cfe><b>Execute</b></span> SQL
Debug.Print cn.RowsAffected
' This returns 1 
'(The last INSERT statement affected 1 row)
End Sub

Private Sub SeekRows_Click()
qy(0) = StateWanted
Set rs = qy.OpenResultset(rdOpenForwardOnly, _
rdConcurReadOnly)
List1.Clear
If rs.EOF Then
   MsgBox "No hits for that state"
Exit Sub
End If
Do Until rs.EOF
   List1.AddItem rs!PName &amp; " - " &amp; rs!state
   rs.MoveNext
Loop
End Sub
</code></pre>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
