<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>GetClipString Method</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="rdmthgetclipstring"></a>GetClipString Method</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdmthGetClipString_C;rdmthGetClipStringC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdmthGetClipString_X;rdmthGetClipStringX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdmthGetClipString_A;rdmthGetClipStringA">
</object></p>
<p>
The <b>GetClipString</b> method returns a delimited string for '<i>n</i>' rows in a result set.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>ResulsetString</b><i> = object</i><b>.GetClipString </b>(<i>NumRows</i>, [<i>ColumnDelimiter</i>],[<i>RowDelimiter</i>], <i>NullExpr</i>])</p>
<p>
The <b>GetClipString</b> method syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Part</b></td>
<td class=label width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%><b>ResultsetString</b></td>
<td width=72%>A variable used to reference the entire result set as a delimited string.</td>
</tr>
<tr valign=top>
<td width=28%><i>Object</i></td>
<td width=72%>An <a href="rddefobjectexpression.htm">object expression</a> that evaluates to an <b>rdoResultset</b> object.</td>
</tr>
<tr valign=top>
<td width=28%><i>NumRows</i></td>
<td width=72%>Required: <b>Long</b> value. Number of rows to copy into the clip string.</td>
</tr>
<tr valign=top>
<td width=28%><i>ColumnDelimiter</i></td>
<td width=72%>Optional: <b>Variant</b>(<b>String)</b> expression used to separate data columns as described in Settings. Default is Tab (<b>VbTab</b>).</td>
</tr>
<tr valign=top>
<td width=28%><i>RowDelimiter</i></td>
<td width=72%>Optional: <b>Variant</b>(<b>String)</b>expression used to separate data rows as described in Settings. Default is carriage return (<b>VbCr</b>).</td>
</tr>
<tr valign=top>
<td width=28%><i>NullExpr</i></td>
<td width=72%>Optional: <b>Variant</b>(<b>String)</b>expression used when NULL values are encountered as described in Settings. Default is an empty string.</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
The row and column delimiters can be any length, but are generally one or two bytes long. Generally, the <b><i>ResultsetString</i></b> delimiters are determined by the <b>Clip</b> property of the target object. For example, if the string is applied to a grid control, columns are separated by tabs and the rows are separated by carriage returns (the default settings).</p>
<p>
The <b><i>NullExpr</i></b> is used to substitute a suitable value in place of NULL values returned from the query. Generally, an empty string or “&lt;null&gt;” is used.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>GetClipString</b> method returns a delimited string for '<i>n'</i> rows in a result set based on the <b><i>NumRows</i></b> argument. If more rows are requested than are available, only the available rows are returned. Use the <b>RowCount</b> property to determine how many rows are actually fetched. The number of rows that can be fetched is constrained by available memory and should be chosen to suit your application. Don't expect to use <b>GetClipString</b> to bring your entire table or result set into memory if it is a large table.</p>
<p>
Generally, <b>GetClipString</b> works just like the <b>GetRows</b> method except that the data is returned as a string instead of a 2-dimensional variant array. <b>GetClipString</b> can be used fill a grid control, or any control that has a <b>Clip</b> property. It can also be used to format export data from a result set to a sequential file.</p>
<p>
After a call to <b>GetClipString</b>, the current row is positioned at the next unread row. That is, <b>GetClipString</b> is equivalent to using the <b>Move</b> (rows) method.</p>
<p>
If you are trying to fetch all the rows using multiple <b>GetClipString</b> calls, use the <b>EOF</b> property to determine if there are rows available. <b>GetClipString</b> returns less than the number requested either at the end of the <b>rdoResultset</b>, or if it cannot fetch a row in the range requested. For example, if a fifth row cannot be retrieved in a group of ten rows that you're trying to fetch, <b>GetClipString</b> returns four rows and leaves currency on the row that caused the problem. It will not generate a run-time error.</p>
<p>
The <b><i>ColumnDelimiter</i></b> optional parameter can be used to substitute a different column delimiter than the default tab (<b>Chr</b>$(9)) character, and the <b><i>RowDelimiter</i></b> optional parameter can be used to substitute a different row delimiter. This is useful when working with a control that accepts a clip format, but requires different characters for the column and row delimiters (some grids have been known to require both a carriage return and a line feed character for a row delimiter).</p>
</BODY>
</HTML>
