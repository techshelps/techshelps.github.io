<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>QueryTimeout Property, QueryTimeout Event Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="rdproquerytimeoutx"></a>QueryTimeout Property, QueryTimeout Event Example</h1>
<p>
The following example sets up the query event handlers to deal with query timeout contingencies. Notice that the QueryTimeout event procedure displays a message box that permits the user to decide if they want to wait for an additional timeout period for the query. The ShowRows procedure simply dumps the rows returned.</p>
<pre><code>Option Explicit
Dim en As rdoEnvironment
Dim cn As New rdoConnection
Dim rs As rdoResultset
Dim SQL As String
Dim col As rdoColumn
Dim er As rdoError
Public WithEvents Qd As rdoQuery

Private Sub cn_<span class=cfe><b>QueryTimeout</b></span>( _
   ByVal Query As RDO.rdoQuery, Cancel As Boolean)
Dim ans As Integer
ans = MsgBox("Query Timed out... Press Retry to continue waiting", _
 &nbsp;&nbsp; vbRetryCancel + vbCritical, "Query Took Too Long")
If ans = vbRetry Then
 &nbsp;&nbsp; Cancel = False
Else
 &nbsp;&nbsp; Cancel = True
End If
End Sub

Private Sub RunQuery_Click()

On Error GoTo RunQueryEH

 &nbsp;&nbsp; Qd(0) = Param1
 &nbsp;&nbsp; Qd.QueryTimeout = 5
 &nbsp;&nbsp; Set rs = Qd.OpenResultset(rdOpenKeyset, _
       rdConcurReadOnly)
 &nbsp;&nbsp; 
 &nbsp;&nbsp; If rs Is Nothing Then Else ShowRows
 &nbsp;&nbsp; 
Exit Sub

RunQueryEH:
Debug.Print Err, Error$
 &nbsp;&nbsp; For Each er In rdoErrors
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print er.Description, er.Number
 &nbsp;&nbsp; Next
 &nbsp;&nbsp; rdoErrors.Clear
 &nbsp;&nbsp; Resume Next
 &nbsp;&nbsp; 
End Sub


Private Sub Form_Load()
Set en = rdoEngine.rdoEnvironments(0)
With cn
 &nbsp;&nbsp; .Connect = "uid=;pwd=;database=workdb;dsn=WorkDB;"
 &nbsp;&nbsp; .CursorDriver = rdUseClientBatch
 &nbsp;&nbsp; .EstablishConnection Prompt:=rdDriverNoPrompt
End With

Set Qd = cn.CreateQuery("LongQuery", "")
With Qd
 &nbsp;&nbsp; .SQL = "{call VeryLongStoredProcedure (?,?)}"
 &nbsp;&nbsp; .rdoParameters(1).Direction = rdParamOutput
 &nbsp;&nbsp; .rdoParameters(0).Type = rdTypeVARCHAR
End With

End Sub
</code></pre>
</BODY>
</HTML>
