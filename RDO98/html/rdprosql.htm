<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>SQL Property (Remote Data)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="rdprosql"></a>SQL Property</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproSQL_C;rdproSQLC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproSQL_X;rdproSQLX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproSQL_A;rdproSQLA">
</object></p>
<p>
Returns or sets the <a href="rddefsqlstatement.htm">SQL statement</a> that defines the <a href="rddefquery.htm">query</a> executed by an <b>rdoQuery object</b> or a <b>RemoteData </b>control.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>object</i><b>.SQL</b> [= <i>value</i>]</p>
<p>
The <b>SQL</b> property syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Part</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><i>object</i></td>
<td width=50%>An <a href="rddefobjectexpression.htm">object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=50%><i>value</i></td>
<td width=50%>A <a href="rddefstringexpression.htm">string expression</a> that contains a value as described in Settings. (Data type is <a href="rddefstringdatatype.htm">String</a>.)</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
The settings for <i>value</i> are:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Setting</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%>A valid SQL statement</td>
<td width=50%>An SQL query using syntax appropriate for the <a href="rddefdatasource.htm">data source</a>.</td>
</tr>
<tr valign=top>
<td width=50%>A <a href="rddefstoredprocedure.htm">stored procedure</a></td>
<td width=50%>The name of a stored procedure supported by the data source preceded with the keyword "Execute".</td>
</tr>
<tr valign=top>
<td width=50%>An <b>rdoQuery</b></td>
<td width=50%>The name of one of the <b>rdoQuery</b> objects in the <b>rdoConnection</b> object's <b>rdoQueries</b> collection.</td>
</tr>
<tr valign=top>
<td width=50%>An <b>rdoResultset</b></td>
<td width=50%>The name of one of the <b>rdoResultset</b> objects in the <b>rdoConnection</b> object's <b>rdoResultsets</b> collection.</td>
</tr>
<tr valign=top>
<td width=50%>A table name</td>
<td width=50%>The name of one of the populated <b>rdoTable</b> objects defined in the <b>rdoConnection</b> object's <b>rdoTables</b> collection.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>SQL </b>property contains the structured query language statement that determines how <a href="rddefrow.htm">rows</a> are selected, grouped, and ordered when you execute a query. You can use a query to select rows to include in an <b>rdoResultset</b> object. You can also define <a href="rddefactionquery.htm">action queries</a> to modify data without returning rows.</p>
<p>
You cannot provide a table name at design time for the <b>SQL</b> property. However, you can either use a simple query like SELECT * FROM &lt;table&gt;, or at runtime, populate the <b>rdoTables</b> collection and use one of the table names returned in the collection. The <b>rdoTables</b> collection is populated as soon as it is associated with an active connection and referenced.</p>
<p>
The SQL syntax used in a query must conform to the SQL dialect as defined by the data source query processor. The SQL dialect supported by the <a href="rddefodbc.htm">ODBC</a> interface is defined by the X/Open standard. Generally, a driver scans an SQL statement looking for specific <a href="rddefescapecodes.htm">escape</a> sequences that are used to identify non-standard operands like <a href="rddeftimestamp.htm">timestamp</a> literals and functions.</p>
<p>
When you need to return rows from a query, you generally provide a SELECT statement in the <b>SQL</b> property. The SELECT statement specifies:
<ul type=disc>
<li>
The name of each column to return or "*" to indicate all columns of the specified tables are to be returned. Ambiguous column names must be addressed to include the table name as needed. You can also specify aggregate expressions to perform arithmetic or other functions on the columns selected.<br><br></li>
<li>
The name of each table that is to be searched for the information requested. If you specify more than one table, you must provide a WHERE clause to indicate which column(s) are used to cross-reference the information in the tables. Generally, these columns have the same name and meaning. For example the CustomerID column in the Customers table and the Orders table might be referenced.<br><br></li>
<li>
(Optionally) a WHERE clause to specify how to join the tables specified and how to limit or filter the number and types of rows returned. You can use parameters in the WHERE clause to specify different sets of information from query to query.<br><br></li>
<li>
(Optionally) other clauses such as ORDER BY to set a particular order for the rows or GROUP BY to structure the rows in related sets.</li>
</ul>
<p>
Each SQL dialect supports different syntax and different ancillary clauses. See the documentation provided with your remote server for more details.</p>
<p class=label>
<b>Specifying Parameters</b></p>
<p>
If the SQL statement includes question mark <a href="rddefparameter.htm">parameter</a> markers (?) for the query, you must provide these parameters before you execute the query. Until you reset the parameters, the same parameter values are applied each time you execute the query. To use the <b>rdoParameters</b> collection to manage SQL query parameters, you must include the "?" parameter marker in the SQL statement. Input, output, input/output and return value parameters must all be identified in this manner. In some cases, you must use the <b>Direction</b> property to indicate how the parameter will be used.</p>
<p class=indent>
<B><b>Note</b></B> &nbsp; When executing stored procedures that do <i>not</i> require parameters, do not include the parenthesis in the SQL statement. For example, to execute the "MySP" procedure use the following syntax:<code> {Call MySP }</code>.</p>
<p class=indent>
<B><b>Note</b></B> &nbsp; When using Microsoft SQL Server 6 as a data source, the <a href="rddefodbcdriver.htm">ODBC driver</a> automatically sets the <b>Direction</b> property. You also do not need to set the <b>Direction</b> property for input parameters, as this is the default setting.</p>
<p>
If the user changes the parameter value, you can re-apply the parameter value and re-execute the query by using the <b>Requery</b> method against the <b>rdoResultset</b> (<code>MyRs</code>).</p>
<pre><code>Cpw(0) = Text1.Text
MyRs.Requery
</code></pre>
<p>
You can also specify parameters in any SQL statement by concatenating the parameters to the SQL statement string. For example, to submit a query using this technique, you can use the following code:</p>
<pre><code>QSQL$ = "SELECT * FROM Authors WHERE Au_Lname = '" _
 &amp; Text.Text &amp; "'"
Set CPw = cn.CreateQuery("",QSQL$)
Set MyRs = Cpw.OpenResultSet()
</code></pre>
<p>
In this case, the <b>rdoParameters</b> collection is <i>not</i> created and cannot be referenced. To change the query parameter, you must rebuild the SQL statement with the new parameter value each time the query is executed, or before you use the <b>Requery</b> method.</p>
<p>
The SQL statement may include an ORDER BY clause to change the order of the rows returned by the <b>rdoResultset</b> or a WHERE clause to filter the rows.</p>
<p class=indent>
<B><b>Note</b></B> &nbsp; You can't use the <b>rdoTable</b> object names until the <b>rdoTables</b> collection is referenced. When your code references the <b>rdoTables</b> collection by enumerating one or more of its members, <a href="rddefremotedataobjectsrdo.htm">RDO</a> queries the data source for <a href="rddeftable.htm">table</a> meta data. This results in population of the <b>rdoTables</b> collection. This means that you cannot simply provide a table name for the <i>value</i> argument without first enumerating the <b>rdoTables</b> collection.</p>
<p class=label>
<b>RemoteData Control</b></p>
<p>
When used with the <b>RemoteData</b> control, the <b>SQL</b> property specifies the source of the data rows accessible through <a href="rddefboundcontrol.htm">bound controls</a> on your form. </p>
<p>
If you set the <b>SQL</b> property to an SQL<b> </b>statement that returns rows or to the name of an existing <b>rdoQuery</b>, all columns returned by the <b>rdoResultset</b> are visible to the bound controls associated with the <b>RemoteData </b>control.</p>
<p>
After changing the value of the <b>SQL</b> property at <a href="rddefruntime.htm">run time</a>, you must use the <b>Refresh</b> method to activate the change.</p>
<p class=indent>
<B><b>Note</b></B> &nbsp; Whenever your <b>rdoQuery</b> or SQL statement returns a value from an expression, the column name of the expression is determined by the wording of the SQL query. In most cases you'll want to <a href="rddefalias.htm">alias</a> expressions so you know the name of the column to bind to the bound control.</p>
<p class=indent>
Make sure each bound control has a valid setting for its <b>DataField</b> property. If you change the setting of a <b>RemoteData </b>control's <b>SQL</b> property and then use <b>Refresh</b>, the <b>rdoResultset</b> identifies the new object. This may invalidate the <b>DataField</b> settings of bound controls and cause a trappable error.</p>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
