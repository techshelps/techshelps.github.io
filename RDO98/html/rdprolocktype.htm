<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>LockType Property (Remote Data)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="rdprolocktype"></a>LockType Property (Remote Data)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproLockType_C;rdproLockTypeC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproLockType_X;rdproLockTypeX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproLockType_A;rdproLockTypeA">
</object></p>
<p>
Returns or sets a <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vadatlong">
</object><a href=JavaScript:alink_4.Click()>Long</a> integer value indicating the type of concurrency handling.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>object</i><b>.LockType </b>[= <i>value</i>]</p>
<p>
The <b>LockType </b>property syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Part</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><i>object</i></td>
<td width=50%>An <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_5.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=50%><i>value</i></td>
<td width=50%>A constant or <b>Long</b> value as described in Settings.</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
The settings for <i>value</i> are:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Constant</b></td>
<td class=label width=16%><b>Value</b></td>
<td class=label width=51%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=33%><b>rdConcurReadOnly</b></td>
<td width=16%>1</td>
<td width=51%>(Default) <a href="rddefcursor.htm">Cursor</a> is read-only. No updates are allowed.</td>
</tr>
<tr valign=top>
<td width=33%><b>rdConcurLock</b></td>
<td width=16%>2</td>
<td width=51%><a href="rddefpessimistic.htm">Pessimistic</a> concurrency.</td>
</tr>
<tr valign=top>
<td width=33%><b>rdConcurRowVer</b></td>
<td width=16%>3</td>
<td width=51%><a href="rddefoptimistic.htm">Optimistic</a> concurrency based on row ID.</td>
</tr>
<tr valign=top>
<td width=33%><b>rdConcurValues</b></td>
<td width=16%>4</td>
<td width=51%>Optimistic concurrency based on row values.</td>
</tr>
<tr valign=top>
<td width=33%><b>rdConcurBatch</b></td>
<td width=16%>5</td>
<td width=51%>Optimistic concurrency using batch mode updates. <b>Status</b> values returned for each row successfully updated.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
In order to maintain adequate control over the data being updated, RDO provides a number of concurrency options that control how other users are granted, or refused access to the data being updated. In many cases, when you lock a particular row using one of the <b>LockType</b> settings, the remote engine might also lock the entire page containing the row. If too many pages are locked, the remote engine might also escalate the page lock to a table lock to improve overall system performance.</p>
<p>
Not all lock types are supported on all data sources. For example, for SQL Server and Oracle servers using the <b>rdUseODBC</b> cursor library, <a href="rddefstaticresultset.htm">static-type</a> <b>rdoResultset</b> objects can only support <b>rdConcurValues</b> or <b>rdConcurReadOnly</b>.</p>
<p>
If the concurrency option is not supported by the <a href="rddefdatasource.htm">data source</a>, the driver substitutes a different concurrency option at execution time if one is available. If the driver cannot substitute a suitable alternative concurrency option, a trappable error is fired (SQLState Code 01S02 <code>"Option Value Changed"</code>). For <b>rdConcurValues</b>, the driver substitutes <b>rdConcurRowVer</b> and vice versa. For <b>rdConcurLock</b>, the driver substitutes, in order: <b>rdConcurRowVer</b> or <b>rdConcurValues</b>.</p>
<p class=label>
<b>Choosing a Concurrency Option</b></p>
<p class=indent>
<B><b>Note</b></B> &nbsp; RDO concurrency does not function as it does with Data Access Objects (DAO). Be sure to review the following sections to determine the best type of concurrency control for your application.
<ul type=disc>
<li>
<B><b>Read-Only Concurrency:</b></B> This option does not impose any exclusive locks on the rows fetched. In most cases, however, you must be granted a share lock to gain access to the rows. In other words, other users cannot have exclusive locks (read-write or intend to write locks) on the pages being accessed. Choosing this option makes the cursor read-only. This does not preclude use of action queries to update the data independent of the cursor. This is the default <b>LockType</b>.<br><br></li>
<li>
<B><b>Pessimistic Concurrency:</b></B> This option requests an <i>immediate</i> exclusive lock on the cursor rows which implements the lowest level of locking sufficient to ensure the row can be updated. Unlike DAO, which defers locking until the <b>Edit</b> method is used, RDO locks the first <b>RowsetSize</b> rows of the result set when the cursor is first opened with the <b>OpenResultset</b> method. That is, if your <b>RowsetSize</b> is 100 rows, the remote engine is instructed to lock each page that contains one of these selected rows. This means up to 100 pages can be locked – which can lock hundreds of rows. As the current row pointer is moved through the result set, additional pages are locked, and those no longer referenced are released. This technique assures your application that no other application is granted exclusive (read-write) access to any rows being processed by the cursor.<br><br></li>
<li>
<B><b>Optimistic Concurrency:</b></B> This type of concurrency management does not lock any rows or pages – it simply compares the row being posted to the database with the row as it currently exists on the server. Depending on the type of optimistic concurrency chosen, RDO and the ODBC layers compare either the row ID, the row data values, TimeStamp columns or combinations of these options with existing data to determine if a row has changed since last fetched. If no changes have taken place since the last fetch, the update is made. Otherwise, your application triggers a trappable error.</li>
</ul>
<p>
The <b>LockType</b> property supports three types of optimistic concurrency as described below. When using the Optimistic Batch Concurrency option (<b>rdConcurBatch</b>), you should also set the <b>UpdateCriteria</b> property to choose an appropriate update concurrency option.
<ul type=disc>
<li>
<B><b>Optimistic Concurrency – Row Version:</b></B> By comparing the row identifier (usually a TimeStamp column) , RDO can determine if the row has changed since last fetched. If it has, a trappable error results.<br><br></li>
<li>
<B><b>Optimistic Concurrency – Row Values:</b></B> By comparing row values on a column-by-column basis, RDO can determine if the row has changed since last fetched. If it has, a trappable error results.<br><br></li>
<li>
<B><b>Optimistic Batch:</b></B> This type of concurrency uses the <b>UpdateCriteria</b> property to determine how to test if rows have changed when using the <b>UpdateBatch</b> method.</li>
</ul>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
