<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>Direction Property (Remote Data)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="rdprodirection"></a>Direction Property (Remote Data)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproDirection_C;rdproDirectionC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproDirection_X;rdproDirectionX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdproDirection_A;rdproDirectionA">
</object></p>
<p>
Returns or sets a value indicating how a <a href="rddefparameter.htm">parameter</a> is passed to or from a procedure.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>object</i><b>.Direction </b>[= <i>value</i>]</p>
<p>
The <b>Direction </b>property syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Part</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><i>object</i></td>
<td width=50%>An <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=50%><i>value</i></td>
<td width=50%>A constant or <b>Integer</b> as described in Settings.</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
The settings for <i>value</i> are one of the following values:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Constant</b></td>
<td class=label width=16%><b>Value</b></td>
<td class=label width=51%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=33%><b>rdParamInput</b></td>
<td width=16%>0</td>
<td width=51%>(Default) The parameter is used to pass information to the procedure.</td>
</tr>
<tr valign=top>
<td width=33%><b>rdParamInputOutput</b></td>
<td width=16%>1</td>
<td width=51%>The parameter is used to pass information both to and from the procedure.</td>
</tr>
<tr valign=top>
<td width=33%><b>rdParamOutput</b></td>
<td width=16%>2</td>
<td width=51%>The parameter is used to return information from the procedure as in an output parameter in SQL.</td>
</tr>
<tr valign=top>
<td width=33%><b>rdParamReturnValue</b></td>
<td width=16%>3</td>
<td width=51%>The parameter is used to return the return status value from a procedure.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
When working with stored procedures, and parameter queries you should identify those parameters that are to be managed by RDO on your behalf — but only when using drivers that do not automatically detect parameter direction. A parameterized query can take virtually any number of input arguments — each of these need to be marked when you create your query.</p>
<p>
Generally, your query returns a set of rows that meet the requirements established in the query based on the parameters you provide at runtime. However, when working with stored procedures, another aspect is exposed. Stored procedures return information using row sets, return status, and output parameters. Because of this, each parameter returned by your stored procedure must be marked when creating your query.</p>
<p>
The <b>Direction</b> property determines whether the parameter is an input parameter, output parameter, or both — or if the parameter is the return value from the procedure.</p>
<p class=indent>
<B><b>Note</b></B> &nbsp; When first addressing the rdoParameter object to set the Direction property you might trip a trappable error if the rdoParameters collection could not be created. Generally this is due to syntax errors in the query or other problems that prevented RDO from creating the collection.</p>
<p>
Some <a href="rddefodbcdriver.htm">ODBC drivers</a> do not provide information on the direction of parameters to a SELECT statement or procedure call so all parameter directions default to <b>rdParamInput.</b> In these cases, it is necessary to set the direction in code prior to executing the <a href="rddefquery.htm">query</a>.</p>
<p class=indent>
<B><b>Note</b></B> &nbsp; The Microsoft SQL Server 6.x driver automatically sets the <b>Direction</b> property for all procedure parameters so you should not have to set the <b>Direction</b> property for any of your queries' parameters.</p>
<p>
The <b>Direction</b> property is associated with the <b>rdoParameter</b> object but it is generally unnecessary to address the <b>rdoParameter</b> object itself as it is the default collection of the <b>rdoQuery</b> object as shown in the examples below. </p>
<p>
For example, the following procedure returns a value from a stored procedure:</p>
<pre><code>{? = call sp_test}
</code></pre>
<p>
This call produces one parameter — the return value. It is necessary to set the direction of this parameter to <b>rdParamOutput</b> or <b>rdParamReturnValue</b> before executing the prepared statement. For example:</p>
<pre><code>Dim my_statement As rdoQuery
Set my_statement = someRdoConnection.CreateQuery _
   ("MyPs", "{? = call sp_testprocedure }", ...)
my_statement.rdoParameters(0).Direction =&nbsp; _
   rdParamReturnValue
my_statement.Execute
Print my_statement.rdoParameters(0)
</code></pre>
<p>
You need to set all parameter directions except <b>rdParamInput</b> before accessing or setting the values of the parameters and before executing the <b>rdoQuery</b>.</p>
<p>
You should use <b>rdParamReturnValue</b> for return values, but you can use <b>rdParamOutput</b> where <b>rdParamReturnValue</b> is not supported.</p>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
