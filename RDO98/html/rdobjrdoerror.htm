<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<title>rdoError Object</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="rdobjrdoerror"></a>rdoError Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdobjrdoError_C;rdobjrdoErrorC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdobjrdoError_X;rdobjrdoErrorX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdidxrdoErrorP;rdobjrdoError_P">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdobjrdoError_M;rdobjrdoErrorM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Events">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdobjrdoError_E;rdobjrdoErrorE">
</object></p>
<p>
Contains details about remote data access errors.</p>
<p>
<a href="rdobjrdoengine.htm"><img src="rdoeng3.gif" border=0></a><br>
<img src="parchild.gif" border=0><a href="rdobjrdoerrorscollection.htm"><img src="rdoerrs.gif" border=0></a><br>
<img src="space.gif" border=0><img src="parchild.gif" border=0><img src="rdoerr.gif" border=0></p>
<p class=label>
<b>Remarks</b></p>
<p>
Any operation involving remote data objects can potentially generate one or more ODBC errors or informational messages. As each error occurs or as messages are generated, one or more <b>rdoError</b> objects are placed in the <b>rdoErrors</b> collection of the <b>rdoEngine</b> object. When a subsequent RDO operation generates an error, the <b>rdoErrors</b> collection is cleared, and the new set of <b>rdoError</b> objects is placed in the <b>rdoErrors</b> collection. RDO operations that don't generate an error have no effect on the <b>rdoErrors</b> collection. To make error handling easier. you can use the <b>Clear</b> method to purge the <b>rdoErrors</b> collection between operations.</p>
<p>
Generally, all ODBC errors generate a trappable Visual Basic error of some kind. This is your cue to check the contents of the <b>rdoErrors</b> collection for any and all errors resulting from the last operation which provide specific details on the cause of the error.</p>
<p>
Not all errors generated by ODBC are fatal. In the normal course of working with connections, default databases, stored procedure print statements and other operations, the remote server often returns warnings or messages that are usually safe to ignore. When an informational message arrives, the <b>rdoEngine</b> InfoMessage event is fired. You should examine the <b>rdoErrors</b> collection in this event procedure.</p>
<p>
If the severity of the error number is below the error threshold as specified in either the <b>rdoDefaultErrorThreshold</b> or <b>ErrorThreshold</b> property, then a trappable error is triggered when the error is detected. Otherwise, an <b>rdoError</b> object is simply appended to the <b>rdoErrors</b> collection. To control trappable errors in Microsoft SQL Server, you should use the Transact SQL RAISERROR statement coupled with an appropriate <i>Severity</i> argument to indicate the error or other information. </p>
<p>
Use the <b>rdoError</b> object to determine the type and severity of any errors generated by the <a href="rddefdata.htm">RemoteData control</a> or RDO operations. For example, you can:
<ul type=disc>
<li>
Use the <b>Description</b> property to display a text message describing the error.<br><br></li>
<li>
Use the <b>Number</b> property to determine the native <a href="rddefdatasource.htm">data source</a> error number.<br><br></li>
<li>
Use the <b>Source</b> property to determine the source of the error and the object class causing the error.<br><br></li>
<li>
Use the <b>SQLRetCode</b> and <b>SQLState</b> properties to determine the <a href="rddefodbc.htm">ODBC</a> return code and <b>SQLState</b> flags.<br><br></li>
<li>
Use the <b>Clear</b> method on the <b>rdoErrors</b> collection to remove all <b>rdoError</b> objects. In most cases, it is not necessary to use the <b>Clear</b> method because the <b>rdoErrors</b> collection is cleared automatically when a new error occurs.</li>
</ul>
<p>
Members of the <b>rdoErrors</b> collection aren't appended as is typical with other collections. The most general errors are placed at the end of the collection (<b>Count</b> -1), and the most detailed errors are placed at index 0. Because of this implementation, you can often determine the root cause of the failure by examining <b>rdoErrors</b>(0).</p>
<p>
The set of <b>rdoError</b> objects in the <b>rdoErrors</b> collection describes one error. The first <b>rdoError</b> object is the lowest level error, the second is the next higher level, and so forth. For example, if an ODBC error occurs while the <b>RemoteData</b> control tries to create an <b>rdoResultset</b> object, the last <b>rdoError</b> object contains the RDO error indicating the object couldn't be opened. The first error object contains the lowest level ODBC error. Subsequent errors contain the ODBC errors returned by the various layers of ODBC. In this case, the driver manager, and possibly the driver itself, returns separate errors which generate <b>rdoError</b> objects.</p>
<p>
The <b>rdoErrors</b> collection is also used to manage informational messages returned by the data source. For example, messages returned back from PRINT statements, showplan requests, or DBCC operations in SQL Server are returned as <b>rdoError</b> objects in the <b>rdoErrors</b> collection. This type of message causes the InfoMessage event to fire, but does not trip a trappable error. Because of this, you must check the <b>rdoErrors</b> collection's <b>Count</b> property to see if any new errors have arrived.</p>
</BODY>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-1');</script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script></html>
