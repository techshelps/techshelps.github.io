<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Data Environment</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="viconthedataenvironment"></a>The Data Environment</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconTheDataEnvironment_C;viconTheDataEnvironmentC">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconTheDataEnvironment_T;viconTheDataEnvironmentT">
</object></p>
<p>
The data environment is a repository in your Microsoft<sup>®</sup> Visual InterDev™ Web project for the information required in server script to connect and manipulate data in databases. It provides a standard interface for creating re-usable data-related objects and for placing them on Web pages.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The data environment is available on the server. If you are designing a Web application that uses client access to data (using Microsoft<sup>®</sup> Internet Explorer 4.0 DHTML), the data environment is available at design time, but not used at run time.</p>
<p>
The data environment also provides an object you can reference in script, allowing you to access and manage database objects such as tables, views, stored procedures, and SQL commands programmatically. It provides an easy-to-use wrapper around <a href="vimsgado.htm">ActiveX Data Objects (ADO)</a>, making these objects more accessible and easier to work with in Visual InterDev.</p>
<p>
To understand the data environment, you must understand these concepts:
<ul type=disc>
<li>
<a href="#vimscdataenvironmentcontents">Data Environment Contents</a><br><br></li>
<li>
<a href="#vimscdragdropscenariosindataenvironment">Drag and Drop Scenarios in the Data Environment</a><br><br></li>
<li>
<a href="#vimscthedataenvironmentobjectmodel">The Data Environment Object Model</a></li>
</ul>
<h2><a name="vimscdataenvironmentcontents"></a>Data Environment Contents</h2>
<p>
The primary component of the data environment is a <a href="vimsgdataconnection.htm">data connection</a>, which includes the information required to connect to one database with a specific user name. For example, your data environment might include a connection that links your application to the Pubs database on a Microsoft<sup>®</sup> SQL Server<sup>®</sup> under the user names Admin (at design time) and Guest (at run time). If your application requires access to multiple databases, you can add multiple data connections to your data environment.</p>
<p>
Within each data connection, you can add one or more <a href="vimsgdatacommand.htm">data commands</a> (command objects), which define a set of data to work with. Command objects can reference a database object such as a table, query, view, synonym, stored procedure, or SQL statement. For example, you might create a command object that references the Authors table so you can display the contents of that table on a Web page. You could also define additional command objects to reference queries and stored procedures you can call to display and update data in other tables.</p>
<p class=label>
<b>A Web project showing the data environment and data commands</b></p>
<p>
<img src="vi3xx61.gif" border=0></p>
<p>
Command objects are accessible to any page in your application. They therefore become reusable objects. If the underlying database changes, you can make a single change to the command object, and all Web pages that reference the command object will continue to work properly.</p>
<p>
Each command object is a node that contains additional information relating to that command object. For example, a command object that references a table contains a list of columns in that table. A command object that references a stored procedure can contain a list of the columns returned by the procedure, or it can contain a list of the procedure's parameters. For information on adding Command objects, see <a href="vihowgettingrecords.htm">Getting Records</a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="virefRecordsetPropertiesDialogBox">
</object><a href=JavaScript:alink_3.Click()>Recordset Properties Dialog Box</a>.</p>
<p>
Visual InterDev creates a data environment for your project the first time you define a data connection. As soon as you add the connection, Visual InterDev creates the DataEnvironment folder and adds it as a node under the Global.asa file. The data connection you added is displayed in the DataEnvironment node.</p>
<p>
As you create additional data connections, they are added to the DataEnvironment node.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can only have one DataEnvironment node (and one data environment) in a Visual InterDev project. For more information on adding data connections, see <a href="vihowconnectingtodatabase.htm">Connecting to a Database</a>.</p>
<h2><a name="vimscdragdropscenariosindataenvironment"></a>Drag and Drop Scenarios in the Data Environment</h2>
<p>
An important feature of the data environment is that you can drag objects to and from it to simplify the process of adding database access to your application. To create new commands, you can drag database objects from the Data View window to the data environment. In addition, you can create data-bound controls on a page by dragging commands and database fields from the data environment to your page.</p>
<p>
The following table summarizes how you can use drag and drop with the data environment.</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=26%><b>Drag</b></td>
<td class=label width=20%><b>From</b></td>
<td class=label width=27%><b>Drop on</b></td>
<td class=label width=27%><b>To</b></td>
</tr>
<tr valign=top>
<td width=26%>Database object</td>
<td width=20%>Data View</td>
<td width=27%>Connection in data environment</td>
<td width=27%>Create a command object for the database object you dragged. For example, dragging a table creates a command object whose Database Object type is table.</td>
</tr>
<tr valign=top>
<td width=26%>Command object or Field object</td>
<td width=20%>Data environment</td>
<td width=27%>Web page</td>
<td width=27%>Create a data-bound control.</td>
</tr>
<tr valign=top>
<td width=26%>Database object</td>
<td width=20%>Data View</td>
<td width=27%>Web page</td>
<td width=27%>Not allowed. Drag objects from the data environment instead.</td>
</tr>
</table><br>
<p>
For details about using data-bound controls, see the <a href="victlrecordsetcontrol.htm">Recordset design-time control</a> and <a href="viovrviewingdata.htm">Viewing Data</a>.</p>

<h2><a name="vimscthedataenvironmentobjectmodel"></a>The Data Environment Object Model</h2>
<p>
The data environment supports its own object model, which you can use when writing script to manipulate the data you want to display on your Web page. The data environment object model is based on the <a href="vimsgado.htm">ActiveX Data Objects (ADO)</a> object model, but is simpler to use.</p>
<p>
In ADO, the main objects in the data environment object model are the Connection object, Command object, Recordset object, Field objects, and Parameter objects. Each of these ADO objects has its own properties and methods.</p>
<p>
The data environment abstracts this object model to make it simpler to use. The data environment itself is an object that can be used in script and that contains these ADO objects. Within the data environment object, command objects are exposed as methods in script. You can call a command method to execute it and return the recordset referenced by the command or to execute its SQL command or stored procedure. </p>
<p>
Each of the data environment objects also has properties you can set in the property page for that object or directly in script. For more information on the data environment object model and the properties for each object, see <a href="vihowexecutingdatabasecommands.htm">Executing Database Commands</a>.</p>
</BODY>
</HTML>
