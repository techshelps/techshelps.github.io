<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Troubleshooting</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vicontroubleshooting"></a>Troubleshooting</h1>
<p>
While working in Microsoft<sup>®</sup> Visual InterDev™, you may encounter unexpected behavior or results. You can use the following summary of common issues and concerns to understand Visual InterDev's features more fully and get the results you want. The major areas covered are:
<ul type=disc>
<li>
<a href="#vimscwebprojects">Web Projects</a><br><br></li>
<li>
<a href="#vimscdatabases">Databases</a><br><br></li>
<li>
<a href="#vimsceditingscripting">Editing and Scripting</a><br><br></li>
<li>
<a href="#vimscdebugging">Debugging</a></li>
</ul>
<h2><a name="vimscwebprojects"></a>Web Projects</h2>
<p>
This section covers issues with files, diagrams, site navigation, builds, and Microsoft<sup>®</sup> Internet Information Server (IIS).</p>
<h3>Working with Solutions and Projects</h3>
<p>
Typically, when you first create a project, you automatically create a solution with the same name. After you have created a solution, you can add additional projects. If you do not want the initial project and the solution to have the same name, you can rename the solution after it is created.</p>
<p class=label>
<b>To rename a solution</b>
<ol>
<li>
In the Project Explorer, select the solution.<br><br></li>
<li>
From the <b>File</b> menu, choose <b>Rename</b>.<br><br></li>
<li>
In the Project Explorer, enter the new name for the solution.<br><br></li>
<li>
The solution file (.sln) has the new name and the Web project file (.vip) remains the same.</li>
</ol>
<h3>Authentication Error Occurs During Creation or Copying of a Web Application</h3>
<p>
You may encounter an authentication error if you are entering the number for the IP address instead of the computer name when you specify a server for a Web application. </p>
<p>
If your computer uses a proxy server only for external addresses, this error occurs because the system attempted to access the IP address through the proxy server even though it is actually a local or an intranet address.</p>
<p>
You can avoid this error by performing one of following tasks:
<ul type=disc>
<li>
Use the computer name instead of the number for the IP address when creating a project or copying a Web application.<br><br></li>
<li>
If your Web project is not using the system Internet settings, change the proxy options for your Web project by including the number for the IP address in the List of hosts without proxy in the Web Project option settings.<br><br></li>
<li>
Change the system Internet settings by including the number for the IP address in the List of hosts without proxy in the Internet properties for the operating system.</li>
</ul>
<p>
For more information about specifying the list of hosts, see <a href="vihowconnectingtoproxyserver.htm">Connecting to a Proxy Server</a>.</p>
<h3>Adding Personal Files to a Project</h3>
<p>
If your project has <a href="vimsgpersonalfile.htm">personal files</a> in it, you can update the master Web application to include those files. If you are trying to update the master by selecting multiple files in the Project Explorer, select only the personal files. If you include other files that already exist on the Master server, the Add to Master command is not available.</p>
<p>
If someone removes master files using Microsoft<sup>®</sup> Windows<sup>®</sup> Explorer or some way other than through the Visual InterDev project, the file will appear as a personal file in your project. When you refresh your project, you will be prompted to delete the file from your local Web application as well. If you want to recover the file, you need to choose "No." Use the Add to Master command to include the file in the Web application.</p>
<p>
For more information, see <a href="viovrworkinglocally.htm">Working Locally</a>, <a href="vihowupdatingmasterwebapplication.htm">Updating the Master Web Application</a>, and <a href="vihowsynchronizingmasterworkingfiles.htm">Synchronizing Master and Local Files</a>.</p>
<h3>Site Diagram Issues</h3>
<ul type=disc>
<li>
In local mode, if you add a new file to a site diagram and then save the site diagram, Site Designer automatically adds the new pages to the master Web application on the master Web server.<p class=tl>
For more information about using site diagrams in local mode, see <a href="dvrefvisualinterdevmodesinsitedesigner.htm">Visual InterDev Modes in Site Designer</a>.</P></li>
<li>
In local mode, if you add a <a href="vimsgpersonalfile.htm">personal file</a> to a site diagram and then save the site diagram, Site Designer automatically adds the personal file to the master Web application on the master Web server.<p class=tl>
For more information about using site diagrams in local mode, see <a href="dvrefvisualinterdevmodesinsitedesigner.htm">Visual InterDev Modes in Site Designer</a>.</P></li>
<li>
Netscape Navigator and Netscape Communicator versions 4.0 through 4.03 implement cascading style sheets (CSS) differently than Microsoft<sup>®</sup> Internet Explorer. Navigator and Communicator interpret relative URLs as relative to the document rather than to the linked .css file. To fix this:<p class=tl>
Copy, but do not move, all of the images from the directory of the theme that you are using to the directory that contains the document that references the .css file.</P><p class=tl>
-or-</P><p class=tl>
Change the relative URLs in your CSS files to the appropriate absolute URLs.</P></li>
</ul>
<h3>Navigation Bars, Layouts, and Themes Issues</h3>
<ul type=disc>
<li>
The PageNavbar design-time control (DTC) allows you to use custom HTML to generate navigation bar links for your Web pages. If you use custom HTML for navigation bar links, you must set the <a href="viproorientationproperty.htm">Orientation property</a> to <i>horizontal</i> to specify a custom orientation for the navigation bar on the page.<p class=tl>
For more information about the PageNavbar DTC, see <a href="victlpagenavbarcontrol.htm">PageNavbar Design-Time Control</a>.</P></li>
<li>
The text <b>[FrontPage VINavbar Component]</b> appears in place of navigation bar links if you do not have the proper server components installed on both your local machine and the <a href="vimsgmasterwebserver.htm">master Web server</a>. To use the <a href="victlpagenavbarcontrol.htm">PageNavbar</a> control, you must have the VINavbar component installed on your local machine and on the master Web server. The VINavbar component is installed with the Microsoft<sup>®</sup> FrontPage<sup>®</sup> 98 server extensions.<p class=label>
<b>To verify that the VINavbar component is installed</b>
<ul type=disc>
<li>
On your local machine, search for the <code>vinavbar</code> folder. The <code>vinavbar</code> folder is installed by default in <i>drive</i>:\Program Files\Microsoft FrontPage\version3.0\bots\.</li>
</ul>
<p class=tl>
If you cannot find the <code>vinavbar </code>folder on your local machine, you must install the FrontPage 98 Server Extensions. See the Visual InterDev Readme file, Readmevi.htm, for installation instructions.</P><p class=tl>
After you have installed the FrontPage 98 Server Extensions, you must recalculate links on your Web project.</P><p class=label>
<b>To recalculate links for a Web project.</b>
<ol>
<li>
In the Project Explorer, right-click the root of the project.<br><br></li>
<li>
From the shortcut menu, choose <b>Recalculate Links</b>.</li>
</ol>
<p class=tl>
For more information, see <a href="victlpagenavbarcontrol.htm">PageNavbar Design-Time Control</a>.</P></li>
<li>
The Layout design-time control (DTC) header and footer text indicates where you should add content in a page that has a layout applied to it. In the actual layout template file, Layout.htm, the Layout DTC header and footer text means the opposite.<p class=tl>
For more information about the Layout DTC, see <a href="victllayoutheaderfootercontrols.htm">Layout Header and Footer Controls</a>.</P></li>
<li>
Changes made in site diagrams or the PageNavbar control may not immediately appear on the navigation bars when you preview your pages. To fix this:<ul type=disc>
<li>
From the <b>Project</b> menu, choose <b>Web Project</b> and then choose <b>Recalculate Links</b>.</li>
</ul>
<p class=tl>
The Recalculate Links command updates the navigation bar with the latest navigation structure information.</P></li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Changes made in site diagrams or the PageNavbar control may also not immediately appear on the navigation bars if you have unselected the <b>Always update navigation structure information on local Web server</b> option on the <a href="virefgeneraltabprojectpropertiesdialogbox.htm">General Tab (Project Properties Dialog Box)</a>.
<ul type=disc>
<li>
If you customize a theme file, such as a .css file, and later apply a theme from FrontPage, your customizations may be discarded. To prevent this:<ol>
<li>
Rename the theme folder containing the customized theme files in the _Themes directory. For example, if you are using the Nature theme, rename the Nature folder to MyTheme.<br><br></li>
<li>
Rename the .inf file for the customized theme. For example, rename <code>Nature.inf</code> to <code>MyTheme.inf</code>.<br><br></li>
<li>
In the renamed .inf file, change the <code>title=</code> text to the new theme folder name. For example, change <code>title=Nature</code> to <code>title=MyTheme</code>.<br><br></li>
<li>
Reapply the theme to all the pages previously using the customized theme.</li>
</ol>
</li>
<li>
If you specify a parameter or bookmark in the URL for an HTML page in a <a href="dvrefglossary.htm#dvmsgsitediagram">site diagram</a>, the <a href="victlpagenavbarcontrol.htm">PageNavbar</a> control will not generate navigation bar links for the .htm file. The PageNavbar control does not support parameters or bookmarks in the URL for .htm files. To prevent this:<ul type=disc>
<li>
If you have specified a parameter, create a new .asp file in the Project Explorer. Remove the .htm file from the site diagram and add the new .asp file using the <b>Add Existing File</b> command to specify the parameter for the .asp file.<p class=tl>
For more information, see <a href="dvhowaddingpagestositediagram.htm">Adding Pages to a Site Diagram</a>.</P></li>
<li>
If you have specified a bookmark, create an .asp file with a parameter that redirects the browser to the bookmark in the .htm file. Remove the .htm file from the site diagram and add the new .asp file.</li>
</ul>
</li>
</ul>
<h3>Link Diagram Issues</h3>
<ul type=disc>
<li>
In <a href="vimsglocalmode.htm">local mode</a>, Link View displays link information for your Web project as if you have already updated the master Web server with your changes. The link diagram may therefore display link status that conflicts with the actual status of the Web application. For more information, see <a href="dvrefworkingwithvisualinterdevmodesinlinkview.htm">Visual InterDev Modes in Link View</a>.</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In local mode, Link View may not immediately display changes to the link information in your files if you have unselected the <b>Always update navigation structure information on local Web server</b> option on the <a href="virefgeneraltabprojectpropertiesdialogbox.htm">General Tab (Project Properties Dialog Box)</a>.
<ul type=disc>
<li>
If you attempt to view links for items contained in directories that start with the underscore character _, such as _myfiles, the items may appear broken, the items may not display the proper in links and out links, or the items will not appear in the diagram. To avoid this, do not create directories that use an underscore character _ as the first character in its name.</li>
</ul>
<p class=indent>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;By default, Visual InterDev creates four directories that use an underscore character as the first character in its name: _Layouts, _private, _ScriptLibrary, and _Themes. Do not rename these directories.
<ul type=disc>
<li>
When you create a link diagram using the View Links command, you create a design-time view of your links. Dynamically generated links, such as links generated by ASP script or from a database, do not appear. To view dynamically generated links, use the View Links on WWW command and enter the full URL for the file. The View Links on WWW command provides a run-time view of the links in a Web application.<p class=tl>
For more information, see <a href="dvconlinkverification.htm">Link Verification</a>.</P></li>
</ul>
<h3>Broken Links Report Issues</h3>
<ul type=disc>
<li>
For best results, you should recalculate the links for the Web project before you run the Broken Links Report. Recalculating links ensures that you have the most current link information for the Broken Links Report. For more information, see <a href="dvhowrepairinglinks.htm">Repairing Links</a>.<br><br></li>
<li>
If you have created a directory that starts with the underscore character _, such as _myfiles, files contained in these directories may be excluded from the Broken Links Report or may be listed as unused in the Broken Links Report. To fix this, rename the directory so that it does not use an underscore character_ as the first character in its name.</li>
</ul>
<h3>Unable to Connect Remotely to Windows 95 or Windows 98 Web Server</h3>
<p>
Microsoft<sup>®</sup> Windows<sup>®</sup> 95 and Windows<sup>®</sup> 98 support the Web servers installed with FrontPage or the Windows NT<sup>®</sup> Option Pack. These Web servers are intended for local development. If you want to use a machine as a remote Web server, install Windows NT Server and the Windows NT Option Pack which includes Microsoft<sup>®</sup> Internet Information Server.</p>
<h3>IIS Administration Operations Fail with MTS Installed</h3>
<p>
Attempts to perform Web administration operations, such as setting application roots, when no user is logged on the Web server will fail under the following circumstances:
<ul type=disc>
<li>
If you are using Microsoft<sup>®</sup> Transaction Server (MTS)<p class=tl>
-and-</P></li>
<li>
If during installation of MTS, you accepted the default option, Interactive User, as the option to run MTS sessions.</li>
</ul>
<p class=label>
<b>To set "allow Web administration operations" without someone logged onto the server</b>
<ol>
<li>
Open the Microsoft Master Console for the server.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To open the Microsoft Master Console: From the Start menu, choose Windows NT 4.0 Option Pack, Microsoft Internet Information Server, and then Internet Service Manager.</p></li>
<li>
Expand <b>Microsoft Transaction Server</b>.<br><br></li>
<li>
Expand <b>Computers</b>.<br><br></li>
<li>
Expand <b>My Computer</b>.<br><br></li>
<li>
Expand <b>Packages Installed</b>.<br><br></li>
<li>
Right-click <b>System</b> and from the shortcut menu, choose <b>Properties</b>.<br><br></li>
<li>
On the <b>Identity</b> tab, choose a user that has administration privileges on the server.<br><br></li>
<li>
Close the Microsoft Master Console.</li>
</ol>
<p>
For more information, see the documentation for Internet Information Server or Microsoft Transaction Server.</p>
<h3>Build Order and Visual InterDev Projects</h3>
<p>
If you include your Web project in the Build Order dialog box, the project is automatically added to the end of the list so that it is built last. Visual InterDev projects must be built last. If you manually move the Visual InterDev project up in the list, your build may fail.</p>
<h3>Visual SourceSafe Explorer and Visual InterDev</h3>
<p>
When using Visual SourceSafe with Visual InterDev, use the Visual SourceSafe Explorer only to view history or to rollback to a previous version. If you use the Visual SourceSafe Explorer to set options for checking files in and out, you may get unexpected results.</p>
<p>
For example, you can set an option in Visual SourceSafe Explorer to remove local copies of a file on check in. If you choose that option, Visual SourceSafe considers the master copy to be the local copy and will remove that file from the Web server.</p>
<p>
If you want to remove local copies after checking them in, use the options available from within Visual InterDev.</p>
<p class=label>
<b>To remove local copies</b>
<ol>
<li>
From the <b>Tools</b> menu, choose <b>Options</b>.<br><br></li>
<li>
In the <b>Options</b> dialog box, choose <b>Projects</b> and then <b>Web Projects</b>.<br><br></li>
<li>
In the <b>Project Options</b> area, select <b>Remove local copies when checking in files</b>.<br><br></li>
<li>
Choose <b>OK</b>.</li>
</ol>
<p>
<HR></p>
<h2><a name="vimscdatabases"></a>Databases</h2>
<p>
This section covers issues with connecting to databases through ODBC, data binding and Recordset controls.</p>
<h3>Adding a Data Connection</h3>
<p>
You can use the Add Data Connection command to add a data connection to a project. This command is available from within the Project Explorer when you select a project or the data environment.</p>
<p>
The Add Data Connection command allows you to create a data source name (DSN) and define a data connection using this data source, as described in <a href="vihowconnectingtodatabase.htm">Connecting to a Database</a>.</p>
<p>
You can also use the ODBC Data Source Administrator, available in the Control Panel, to create DSNs. These DSNs will be available in the Select Data Source dialog box, and you can use them to make data connections in Visual InterDev. </p>
<p>
However, you must do this using the Add Data Connection command; the DSNs created using the ODBC Data Source Administrator don't become data connections until you use the Add Data Connection command to create the connection from the data source.</p>
<p>
For more information about using data connections with Visual InterDev, see <a href="vihowconnectingtodatabase.htm">Connecting to a Database</a> and <a href="vicondataaccessarchitecture.htm">Data Access Architecture</a>. </p>
<p>
For information about using data connections with the Microsoft<sup>®</sup> Visual Database Tools, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvhowAddingDataConnectionToDatabaseProject">
</object><a href=JavaScript:alink_1.Click()>Adding a Data Connection to a Database Project</a>.</p>
<h3>Data Binding</h3>
<p>
If you want your Web page to display data from a database, you must place a <a href="victlrecordsetcontrol.htm">Recordset design-time control</a> on the page, and set its properties to display a set of records from a database to which you've made a data connection. For more information, see <a href="vicondatabinding.htm">Data Binding</a>.</p>
<h3>Using Quoted Identifiers</h3>
<p>
There is a <b>Use quoted identifiers</b> check box in the Create New Data Source ODBC dialog box, which is on by default. If you turn this option off and have database object names containing quotes, problems will arise. If the identifiers you use for database objects may contain quotes, make sure to leave this option on.</p>
<p>
However, if you select this option, you could have unexpected results when dealing directly with database objects, such as stored procedure or trigger code. If you select this option, be careful how you use strings in your script. It might be a good idea to use single quotes (') when possible.</p>
<h3>Tooltips Show Errors for Recordset, PageObject, and FormManager Design-Time Controls</h3>
<p>
If you have an error in a Recordset, PageObject, or FormManager design-time control while you're designing it, you can use the mouse pointer to display a Tooltip describing the error.</p>
<p>
The Tooltip is displayed when you move the mouse pointer over the control in Design view, over the fields in its property pages, or over the property fields displayed on the face of the Recordset control.</p>
<p>
For example, if you create a row in the Actions Performed Before Transition table on the Action tab of the FormManager control's property pages, but don't fill in values for all the fields in this row, you'll generate an error for the control. This error ("Errors were found in the 'Action' property page of this DTC") will be displayed in a Tooltip if you move the mouse pointer over the FormManager control in Design view.</p>
<h3>Exclamation Point Appears on Recordset Control</h3>
<p>
When you see [red dot /w !] on a Recordset design-time control (DTC), it means there is a data problem. Select the Recordset DTC so that it has the focus, and then move the mouse over the [red dot] and Visual InterDev will display a Tooltip that explains the problem.</p>
<p>
Some typical causes are:
<ul type=disc>
<li>
The [red dot] appears in the Object Name list box when you change the Connection or Database Object setting. If you change the connection or database object, select a new object name.<br><br></li>
<li>
The [red dot] appears to the left of the Recordset name at the top left of the DTC when there's a problem with the data connection. Areas to investigate include:<ul type=disc>
<li>
Whether a connection can be made to the database server.<br><br></li>
<li>
The data connection in the DataEnvironment under the Global.asa file in the Project Explorer.<br><br></li>
<li>
The connection on the General tab of the Recordset Design-Time Control Property Pages dialog box.</li>
</ul>
</li>
</ul>
<h3>Name of Recordset Appears as Red on DTC's Property Page</h3>
<p>
You bind data to a data-bound design-time control by setting the DTC's Recordset property to one of the Recordset DTCs that exists on the same page. If you set a data-bound DTC's Recordset property to an existing Recordset DTC, and then delete that same Recordset DTC from the page, the name of the deleted Recordset will appear in red on the General property page of the data-bound DTC.</p>
<p>
To fix the problem, you must either add a Recordset DTC to the page that uses the same name as the deleted Recordset DTC, or change the setting of the data-bound DTC's Recordset property to an existing Recordset DTC.</p>
<h3>Errors when Moving Quickly Through Database Records</h3>
<p>
If you are working with an ASP page containing a data-bound form and try to navigate quickly from one record to the next, you might see the following error:</p>
<pre><code>Microsoft OLE DB Provider for ODBC Drivers error '80040e21'
</code></pre>
<p>
This error results from an attempt to get the next record before the previous database request has completed. You can avoid this error by buffering the page containing the form, so that it does not display in the browser until the data has been completely fetched and the page composed. To set buffering, add the following command to the top of the page:</p>
<pre><code>&lt;% Response.Buffering=true %&gt;
</code></pre>
<p>
<HR></p>
<h2><a name="vimsceditingscripting"></a>Editing and Scripting</h2>
<p>
This section covers issues with using the HTML editor, design-time controls, and other controls.</p>
<h3>Enabling the Scripting Object Model</h3>
<p>
Design-time controls function properly only if the scripting object model is enabled for the page on which they appear. If you drag a design-time control onto a page that doesn't already have the scripting object model enabled, a message box prompts you to add it. However, if you choose "No" and proceed, the control will not communicate with other controls on the page, and it will not display properly at run time. For details, see <a href="viconthescriptingobjectmodel.htm">The Scripting Object Model</a>.</p>
<h3>Scripting with Design-Time Controls and Script Objects</h3>
<p>
When writing script to interact with script objects created by design-time controls, keep the following tips in mind:
<ul type=disc>
<li>
While scripting, press CTRL+J at any time to display the statement completion drop-down list. If you are in the context of a particular object, that object's properties, methods, and events are included in the list. If you are not in an object context (for example, you are on a blank line), the drop-down list contains a complete list of objects and their members.<br><br></li>
<li>
Treat the names of properties, methods, and events as case sensitive even if you are scripting in VBScript. In many cases, the names you use are evaluated by the scripting object model framework (which is largely in JavaScript), and are therefore case sensitive.<p class=atl>
<B><b>Tip&nbsp;&nbsp;&nbsp;</b></B>When you are working with JavaScript, statement completion will not recognize an object unless you have used correct capitalization.</p></li>
<li>
When you are working on an ASP page with the scripting object model enabled, you can refer to the current page using the object thisPage. If there is a PageObject design-time control on the page, the object thisPage appears in the Script Outline window and is available for statement completion. If there is no PageObject control on the page, you can still use the thisPage object in your scripts, but it will not be visible in the Script Outline window or available for statement completion.<p class=tl>
In client script, the object thisPage is available only if you have a page object on the page. But in client script, you use the thisPage object only for accessing the properties and methods for page objects. For properties, methods, and events of the current page in client script, you can use the DHTML document object.</P></li>
<li>
When working with the names of methods and functions, you must be careful to use parentheses correctly. If you use statement completion to write method calls, parentheses are not added to method calls.<p class=tl>
If you are scripting in JavaScript, you must provide parentheses if the method is being executed as a function, if the method call returns a value, or if the method returns an object reference. The following two examples illustrate this use:</P><pre><code>str = Textbox1.value()&nbsp;&nbsp; // returns a value
// In the following getPagingNavbar() returns an object,
// and hide() executes a function
Grid1.getPagingNavbar().hide()
</code></pre>
<p class=tl>
If you do not include parentheses, the method call is treated as a function pointer, which is used to pass the name of a function as a parameter. For example, if you call an object's advise method, you pass the second parameter (the function name parameter) as a function pointer without parentheses, as in the following example:</P><pre><code>&lt;SCRIPT LANGUAGE="JavaScript"&gt;
function setAdviseMethods(){
 &nbsp; Btn1.advise("onmouseover", changecaption);&nbsp; //no (), function ptr
}
&lt;/SCRIPT&gt;
</code></pre>
<p class=tl>
If you are working with VBScript, you must provide parentheses if the method call returns a value; otherwise, they are optional. For example, in VBScript, both of the following statements will work:</P><pre><code>Textbox1.hide()
Textbox1.hide
</code></pre>
<p class=tl>
Be careful to include parentheses when invoking a method that returns an object reference, as in the following example:</P><pre><code>Grid1.getPagingNavbar().hide
</code></pre>
<p class=tl>
If you call an object's advise method in VBScript, you pass the name of the second parameter (the function name parameter) as a string, including the parentheses:</P><pre><code>&lt;SCRIPT LANGUAGE="VBScript"&gt;
Function setAdviseMethods()
 &nbsp; Btn1.advise("onmouseover", "changecaption()") ' note quotes and ()
End function
&lt;/SCRIPT&gt;
</code></pre>
<p class=atl>
<B><b>Tip&nbsp;&nbsp;&nbsp;</b></B>Remember that because the scripting object model uses JavaScript, you should treat method names as case sensitive, even in VBScript.</p></li>
</ul>
<h3>Using the Properties Window</h3>
<p>
The Properties window uses a grid to display all properties for the selected control or object. The following lists some tips for using the Properties window:
<ul type=disc>
<li>
<B><b>Check the selection.</b></B> The drop-down list at the top of the window displays the current element's type. If you are not seeing the properties you expect, check this. In a few cases (such as when you are working with HTML table elements), the list displays a hierarchy of elements that you can use to select the correct one.<br><br></li>
<li>
<B><b>Categorize properties.</b></B> Buttons at the top of the window allow you to display properties alphabetically or by category. Grouping properties by category makes it easier to find properties, such as inline style attributes.<br><br></li>
<li>
<B><b>Use the Custom option.</b></B> Some elements, such as design-time controls, provide custom property pages that make it easier to set property values. If a custom property page is available, the (Custom) property appears first in the alphabetical list, and you can click the button in the text box for that entry to display the window.<br><br></li>
<li>
<B><b>Use Help.</b></B> Help is provided for most individual properties. To see Help, select the property in the grid, and then press F1.</li>
</ul>
<h3>Previewing with the Quick View Tab</h3>
<p>
The <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgQuickViewHTMLEditor">
</object><a href=JavaScript:alink_2.Click()>Quick view</a> tab of the HTML editor processes only the client portions of a page: HTML text and client scripts. Although you can preview .asp files in Quick view, the editor does not perform a round trip to the server, therefore:
<ul type=disc>
<li>
No server script is executed.<br><br></li>
<li>
Design-time controls whose target platform is Server will not appear.</li>
</ul>
<h3>Cutting and Pasting HTML Text</h3>
<p>
When you cut or copy text to the Windows<sup>®</sup> Clipboard from an HTML source — such as Microsoft<sup>®</sup> Internet Explorer, Design view of the Visual InterDev editor, or the Visual InterDev Help system or sample applications — two versions of the text become available: an HTML version and a text version.</p>
<p>
The HTML version uses HTML escape sequences for reserved characters such as &lt;, &gt;, and quotation marks. For example, if you copied "&lt;MARQUEE&gt;" to the Clipboard, the HTML version would be "&amp;lt;MARQUEE&amp;gt;". The text version contains an exact copy of the original text you cut or copied.</p>
<p>
When you paste, you can choose either version. To paste the HTML version, choose Paste from the View menu or the right-click menu. To paste the text version, choose Paste as HTML from the right-click menu. In general:
<ul type=disc>
<li>
In Design view, choose Paste if you want to see the actual text such as "&lt;MARQUEE&gt;". Choose Paste As HTML if you want to create the tag. Tags do not appear in Design view, so the text you see might not appear to be the same as what you cut from another source.<br><br></li>
<li>
In Source view, choose Paste as HTML.</li>
</ul>
<h3>Cutting or Copying in Design View of the HTML Editor</h3>
<p>
If you cut or copy an element from Design view to the Windows Clipboard, it contains additional information used to manage that element. If you paste the element anywhere but in Design view, it might be pasted with an extra &lt;DESIGNTIMEP&gt; tag in it. Always check the results of a paste operation if the source was Design view.</p>
<h3>Distinguishing Design-Time Controls and HTML Controls</h3>
<p>
Be careful to distinguish design-time controls and HTML controls on the Toolbox. The controls have similar names&nbsp;— for example, there are text boxes and buttons on both tabs. It can be particularly difficult to distinguish the controls when working in Design view, because HTML controls are displayed graphically there.</p>
<p>
You will find it easier to distinguish them in Source view. There, HTML controls are displayed as simple HTML tags such as &lt;BUTTON&gt; or &lt;INPUT&gt;. Design-time controls are displayed either graphically or as &lt;OBJECT&gt; tags with additional information.</p>
<h3>Working with Text View in Source View</h3>
<p>
You can view controls (design-time controls, Java applets, and other controls) in Source view as text, which is useful when you want to see the exact contents of a page, and for making changes quickly to a series of controls. The following tips will help you when working with text view.
<ul type=disc>
<li>
Viewing a control as text applies only in Source view. Design view and Quick view always render the graphical view of a control (if possible).<br><br></li>
<li>
You can set the default view for controls using the <b>HTML </b>tab in the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgHTMLEditorOptions(HTMLOptionsDialogBox)">
</object><a href=JavaScript:alink_3.Click()>Options</a> dialog box.<br><br></li>
<li>
You can select text view for an individual control by right-clicking it, and then choosing Always View As Text. When you do, the VIEWASTEXT attribute is added to the control's &lt;OBJECT&gt; tag.<br><br></li>
<li>
You can also the View Controls As Text on the View menu to temporarily view controls in text view. You can then use the View Controls Graphically command to redisplay controls graphically (except those whose &lt;OBJECT&gt; tag contains the VIEWASTEXT attribute).<br><br></li>
<li>
If you choose Refresh from the View menu, the editor displays all controls in the current default view (as set in the Options dialog box) except those whose object tag contains the VIEWASTEXT attribute.</li>
</ul>
<p>
Using text view can affect how controls work on your page. Visual InterDev design-time controls do not function properly if they are displayed as text, because they cannot communicate with the scripting object model framework. Before you add a design-time control to a page, make sure that you have set options to view controls graphically. If you do inadvertently add a control to the page while the text view option is set, the HTML editor cannot create an instance of the control. You will see only the HTML &lt;OBJECT&gt; tag for the control, not the control itself.</p>
<h3>Printing Pages Containing Design-Time Controls</h3>
<p>
When you print a page in the HTML editor, some design-time controls might not be displayed with the values you set. If you put more than one instance of a design-time control on a page — for example, if you put multiple Textbox or Button controls on a page — the second and subsequent ones will display their default values in the printout.</p>
<h3>Creating Controls Inside Script Blocks</h3>
<p>
Do not drag controls&nbsp;— design-time controls, ActiveX<sup>®</sup> controls, or any other objects&nbsp;— into a &lt;SCRIPT&gt; block in Source view. A &lt;SCRIPT&gt; block is always assumed to contain only script, so the editor does not parse for controls, and therefore cannot create instances of them inside the block.</p>
<p>
If you do drop a control into a &lt;SCRIPT&gt; block, the editor creates an &lt;OBJECT&gt; block containing information about the control such as its class ID. However, no additional information is created, such as parameters or script, so the control cannot be instantiated and will not function correctly.</p>
<h3>Non-Functional ActiveX Controls on the Toolbox</h3>
<p>
In some instances, you might see controls listed on the Toolbox ActiveX<sup>®</sup> Controls tab that are not available. For example, you might see the options WalletAddress and WalletPayment on the Toolbox, but when you try to drag them onto a page, an error is displayed such as "can't show control graphically."</p>
<p>
This can occur if you are working in Microsoft<sup>®</sup> Windows NT<sup>®</sup> and chose the "Browser Only" option when installing Microsoft<sup>®</sup> Internet Explorer 4.0. This minimal installation does not copy the controls to your computer, so they are not available. However, a Windows registry entry for the control is created, so it appears on the Toolbox.</p>
<h3>Using Server Objects from the Toolbox</h3>
<p>
The Server tab of the Visual InterDev Toolbox lists a number of objects that are commonly available on Microsoft<sup>®</sup> Internet Information Server (IIS). These server objects are part of IIS, but are used heavily in ASP pages as part of Web solutions built in Visual InterDev. For example, Visual InterDev developers frequently create server-based database access using ActiveX<sup>®</sup> Data Objects (ADO).</p>
<p>
The list on the Server Objects tab is predefined — it is not constructed based on objects that are actually installed on a particular server. This allows the Toolbox to display the same list no matter what server you are working with at the moment. However, it also means that it is possible to add a control from the Toolbox to an ASP page that might not be available on the server when the page is run. You should always test pages with server objects on the production server.</p>
<p>
To use server objects, drag them from the Toolbox onto your Web page. (Do not drag them into &lt;SCRIPT&gt; blocks.) When you do, the editor creates an &lt;OBJECT&gt; block with the correct RUNAT and PROGID attributes, and with an ID attribute. Some of the objects created this way require additional information that you typically supply using &lt;PARAMETER&gt; tags inside the &lt;OBJECT&gt; block.</p>
<p>
When the page runs, the server creates an instance of the object in the &lt;OBJECT&gt; block. You can reference the object in your script using the object's ID. For example, if you drag a Browser Capabilities object onto your page, the editor creates an object tag that looks like this:</p>
<pre><code>&lt;OBJECT RUNAT=server PROGID=MSWC.BrowserType id=OBJECT1&gt;&lt;/OBJECT&gt;
</code></pre>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Change the object's ID to something meaningful. For example, in this case you might change it to oBType.</p>
<p>
After the object has been instantiated with the &lt;OBJECT&gt; block, you can reference it in your script using its ID. The following excerpt from a page shows how you might use the object created above:</p>
<pre><code>Your browser is &lt;%=oBType.browser%&gt;, version &lt;%=oBType.version%&gt;.
&lt;p&gt;
Your browser supports these programming languages:
&lt;UL&gt;
&lt;%If oBType.javascript Then%&gt;
 &nbsp; &lt;LI&gt;JavaScript&lt;/LI&gt;
&lt;% End If %&gt;
&lt;%If oBType.VBScript Then%&gt;
 &nbsp; &lt;LI&gt;VBScript&lt;/LI&gt;
&lt;% End If %&gt;
&lt;/UL&gt;
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the object you are working with is available on the computer where Visual InterDev is installed, you will get statement completion for the object's properties, methods, and events when you are scripting. For example, if Visual InterDev is running on the same computer as IIS, Visual InterDev has access to the objects on the Server Objects tab.</p>
<p>
You can find information about using server objects and about individual objects in the Microsoft Developer Network and elsewhere, as listed in the following table.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=38%><b>For information about</b></td>
<td class=label width=62%><b>See this location in MSDN and elsewhere</b></td>
</tr>
<tr valign=top>
<td width=38%>Using server objects</td>
<td width=62%>Tools and Technologies<br>
&nbsp;Active Server Pages<br>
&nbsp;&nbsp;Using Scripting Languages<br>
&nbsp;&nbsp;&nbsp;Using Components and Objects</td>
</tr>
<tr valign=top>
<td width=38%>ADO Command<br>
ADO Connection<br>
ADO Recordset<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Server ADO objects are not part of the Visual InterDev data-binding model. To bind Visual InterDev design-time controls to a database, use the Recordset design-time control.</p>
</td>
<td width=62%>Platform SDK<br>
&nbsp;Database and Messaging Services<br>
&nbsp;&nbsp;Microsoft Data Access SDK<br>
&nbsp;&nbsp;&nbsp;Microsoft ActiveX Data Objects<br>
&nbsp;&nbsp;&nbsp;&nbsp;ADO Programmer's Reference<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Getting Started with ADO<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Getting Started With ADO 2.0</td>
</tr>
<tr valign=top>
<td width=38%>Ad Rotator<br>
Browser Caps<br>
Content Linking<br>
My Info</td>
<td width=62%>Platform SDK<br>
&nbsp;Internet/Intranet/Extranet Services<br>
&nbsp;&nbsp;Active Server Pages<br>
&nbsp;&nbsp;&nbsp;Installable Components for ASP<p>
See also <a href="vihowcreatingportablescript.htm">Creating Portable Script</a>. For an example using the Ad Rotator object, see the <a href="vismprandomadvertisement.htm">Random Ad Sample</a>.</p>
</td>
</tr>
<tr valign=top>
<td width=38%>Dictionary<br>
FileSystem</td>
<td width=62%>Visual Studio Documentation<br>
&nbsp;Reference<br>
&nbsp;&nbsp;Language References<br>
&nbsp;&nbsp;&nbsp;VBScript Language Reference<br>
&nbsp;&nbsp;&nbsp;&nbsp;Objects</td>
</tr>
<tr valign=top>
<td width=38%>CDONTS NewMail<br>
CDONTS Session</td>
<td width=62%>Platform SDK<br>
&nbsp;Internet/Intranet/Extranet Services<br>
&nbsp;&nbsp;Active Server Pages<br>
&nbsp;&nbsp;&nbsp;Installable Components for ASP<br>
&nbsp;&nbsp;&nbsp;&nbsp;Collaboration Data Objects for NTS Component</td>
</tr>
<tr valign=top>
<td width=38%>Index Server Utility<br>
Index Server Query</td>
<td width=62%>These objects are described in the Index Server documentation. To display the documentation, follow this path from the Windows Start menu on the server where IIS is installed:<p>
Programs<br>
&nbsp;Windows NT 4.0 Option Pack<br>
&nbsp;&nbsp;Product Documentation</p>
<p>
In the documentation, follow this path:</p>
<p>
Microsoft Index Server<br>
&nbsp;Building Search Forms<br>
&nbsp;&nbsp;Active Server Pages</p>
</td>
</tr>
<tr valign=top>
<td width=38%>MSMQ<br>
MSMQ Mail</td>
<td width=62%>Platform SDK<br>
&nbsp;Networking and Distributed Services<br>
&nbsp;&nbsp;Microsoft Message Queue Server (MSMQ)<br>
&nbsp;&nbsp;&nbsp;MSMQ Reference<br>
&nbsp;&nbsp;&nbsp;&nbsp;MSMQ ActiveX Components<br>
&nbsp;&nbsp;&nbsp;&nbsp;MSMQ Mail ActiveX Components</td>
</tr>
</table><br>
<h3>Passing Parameters for Page Object Methods</h3>
<p>
When you pass parameters to method on page objects, and if the call results in a trip to or from the server, the parameters are converted to strings. This is required in order for the parameters to be passed via http protocol between pages.</p>
<p>
If you write a method that takes parameters that require a particular data type, you should always check the data type and convert it if necessary. For example, the following function in a page object takes a parameter that must be treated as a number. The function therefore converts it before using it.</p>
<pre><code>Sub SubmitBid( BidAmount )
 &nbsp; errorCode = ""
 &nbsp; iBidAmount = <span class=cfe><b>CInt</b></span>( BidAmount )
 &nbsp; If iBidAmount &lt; 0 then
 &nbsp;&nbsp;&nbsp;&nbsp; errorCode = INVALIDBID
 &nbsp; End if
 &nbsp; ' etc.
End Sub
</code></pre>
<p>
For more details, see <a href="vihowwritingscriptforscriptobjects.htm">Writing Script for Script Objects</a>.</p>
<h3>Specifying Timeline Events</h3>
<p>
After adding the Timelines control to a page, you need to add script that specifies the events you named in the control's property pages. For example, the control in the figure below has two timelines specified. TimeLine1 has two events, ActionA and ActionB. TimeLine2 has only ActionX. To simplify the example, the events cause an alert to appear.</p>
<p>
<img src="vi52iv1.gif" border=0></p>
<p>
For more information see <a href="vireftimelinecontrol.htm">Timelines design-time control</a>.</p>
<h3>Testing Page Transitions</h3>
<p>
Since a page transition plays when you move from one page to another, you can only view the transitions in a Web browser. Quick View of the editor does not play transitions.</p>
<p>
To view the results of enter transitions, use your Web browser to start with a page and then open the page with the transition.</p>
<p>
To view the results of exit transitions, open the page with the transition and then open another page.</p>
<p>
For more information, see <a href="victlpagetransitionscontrol.htm">PageTransitions design-time control</a>.</p>
<p>
<HR></p>
<h2><a name="vimscdebugging"></a>Debugging</h2>
<p>
This section includes information about debugging client and server script as well as notes about SQL debugging.</p>
<h3>Enabling ASP Debugging on the Server</h3>
<p>
You can debug script in an ASP page only if debugging is enabled for your application (project) on the IIS server. If you start a debugger session by launching the page from within your project, Visual InterDev can automatically enable debugging on the server as described under "Enabling Server Script Debugging for ASP Pages" in <a href="vihowdebuggingserverscript.htm">Debugging Server Script</a>.</p>
<p>
However, setting these options might not allow you to debug in these situations:
<ul type=disc>
<li>
You want to attach to a document (process) already running on the server.<br><br></li>
<li>
You want to launch the debugger in response to an error detected at run time (just-in-time debugging).</li>
</ul>
<p>
To debug in these situations, you must manually enable debugging for your application your application on the server.</p>
<p class=label>
<b>To manually enable debugging for an IIS application</b>
<ol>
<li>
On the server, start Microsoft Management Console (MMC) using this path from the Windows Start menu: Programs\Windows NT 4.0 Option Pack\Microsoft Internet Information Server\Internet Service Manager.<br><br></li>
<li>
Open the node for your server.<br><br></li>
<li>
Right-click your project (application).<br><br></li>
<li>
In the <b>Directory</b> tab under <b>Application Settings</b>, check <b>Run in separate memory space</b>, which causes your application to run out-of-process. This might take a short while.<br><br></li>
<li>
Choose <b>Configuration</b>, and then in the <b>Application Configuration</b> dialog box, choose the <b>App Debugging</b> tab.<br><br></li>
<li>
Under Debugging Flags, check <b>Enable ASP server-side debugging</b> and <b>Enable ASP client-side debugging</b>, and then close all dialog boxes.</li>
</ol>
<p>
Disabling debugging is the reverse of Steps 3 through 5.</p>
<p>
Do not leave debugging options on permanently, because they can affect performance. For details, see the section "Performance Issues while Debugging Server Script" below.</p>
<h3>Browser Displays Wrong Page when Debugging</h3>
<p>
If you launch the debugger and the browser displays the wrong page — that is, not the page you want to debug — return to Visual InterDev and make sure that the page you want to debug is set as the project's start page.</p>
<h3>Just-In-Time Debugging of Server Pages</h3>
<p>
If a debugger is installed on the server, the server will not pass server script syntax or run-time errors through to the client. Instead, it will stop page processing and display a message on its own computer's monitor prompting to launch the debugger. The server can launch either the Script Debugger installed with Microsoft<sup>®</sup> Internet Information Server (IIS), or if it is installed, the Visual InterDev debugger.</p>
<p>
If you can watch the monitor on the computer running the server, you can respond to the message and debug locally on the server. However, if you cannot watch the server computer's monitor, you might prefer that the server pass error information through to the client so you can use remote debugging to find and fix the error.</p>
<p>
To do so, you must remove all debuggers on the server. Uninstall the Script Debugger if it is installed. Similarly, make sure that Visual InterDev and other Visual Studio™ tools are not installed on the server. However, you must be sure that the Remote Debug Manager remains installed, or you will not be able to debug on the server at all.</p>
<h3>Evaluating Expressions in the Debugger</h3>
<p>
While debugging, you can evaluate any expression dynamically by selecting it in the editor and then pointing the mouse cursor at it. The expression is evaluated and the results are displayed in a Tooltip. Alternatively, you can right-click the expression and add it to the Watch window.</p>
<p>
However, you must be careful about evaluating expressions that can affect your debug session or even your Visual InterDev session. For example, if you select the expression Session.Abandon, the debugger will evaluate the expression and your current session will be abandoned.</p>
<h3>Resetting Debugger Options After Abnormal Termination</h3>
<p>
If Visual InterDev is set to automatically enable server debugging, it reads the current debugger settings on your Microsoft Internet Information Server (IIS) the first time you debug an ASP page after opening a project. If required, Visual InterDev enables debugging, including moving the IIS application out of process. When you finish your debugging session, Visual InterDev restores the settings to what they were earlier.</p>
<p>
However, if Visual InterDev quits while you are debugging — for example, if the computer loses power suddenly — the original settings are lost. When you next start Visual InterDev, it again reads the server debugging settings, but they might reflect the settings that were left when Visual InterDev quit abnormally.</p>
<p>
If this has occurred, and you want the settings to be different from how they were left, you must manually reset them in IIS. In particular, if you want to disable ASP debugging and reset the application to run in-process, you must change these options yourself. For details, see "Enabling ASP Debugging on the Server" above.</p>
<h3>Performance Issues while Debugging Server Script</h3>
<p>
Enabling debugging on Microsoft Internet Information Server (IIS) can affect the performance of your projects in several ways.</p>
<p>
Visual InterDev offers options that automatically enable server debugging on your IIS application (your Visual InterDev project). The first time you launch the debugger after opening the project, Visual InterDev checks the IIS debugger options for your project, and if they are not set, sets them. You can reduce this setup time slightly by using the IIS Microsoft Management Console (MMC) application to manually enable debugging for your application, as described in "Enabling ASP Debugging on the Server" above.</p>
<p>
When debugging is enabled on the server, it can affect the server's performance. It is recommended that you do enable debugging only when you need it, and that you never enabled debugging on a live production server. For details about debugging server script, see <a href="vihowdebuggingserverscript.htm">Debugging Server Script</a>.</p>
<p>
Do not use Active Desktop™ mode of Internet Explorer while you are debugging. Doing so can have two effects. First, the debugger will monitor all applications running from the Desktop, which can affect performance. Second, problems that might arise during debugging that would ordinarily require you only to reboot Internet Explorer might require you to reboot Windows.</p>
<h3>Unable to Install SQL Debugging Component</h3>
<p>
If the BackOffice installation wizard reports that it cannot install SQL Debugging, check that you have installed Service Pack 3 or higher for the SQL server.</p>
<h3>Troubleshooting SQL Debugging</h3>
<p>
If an error occurs while you are trying to use SQL debugging, try one of the following tips:
<ul type=disc>
<li>
If SQL Server is configured to log on as System Account, you will not be able to use SQL debugging.<br><br></li>
<li>
Errors on the server are written into an event log. To view the log, from the Windows Start menu on the server, choose Programs, then Administrative Tools, and Event Viewer. Open the Application log, and then look for SQLDebugging98 under Source. It is sometimes also useful to check the System log.<br><br></li>
<li>
If you are unsure whether you have the correct setup on your server, look for the file MSSDI98.DLL in the Bin folder of your SQL Server installation. </li>
</ul>
<p>
If you cannot get SQL debugging to work on a Windows95 workstation, confirm that the client DCOM settings are correct.</p>
<p class=label>
<b>To check the DCOM configuration on a Windows<sup>®</sup> 95 client computer</b>
<ul type=disc>
<li>
Using Regedit.exe, check the following settings in the Windows Registry under the key HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\OLE:<ul type=disc>
<li>
EnableDCOM should be set to Y.<br><br></li>
<li>
EnableRemoteConnet should be set to Y.</li>
</ul>
</li>
</ul>
<p class=indent>
If they are not set correctly, change them, and then restart the computer.</p>
<h3>Evaluating SQL Variables in the Debugger</h3>
<p>
If you are debugging stored procedures or triggers, and if you click a variable with an "@" prefix, the debugger adds it to the Watch window without the @ prefix. Edit the name of the variable in the window to add the @ prefix back in.</p>
</BODY>
</HTML>
