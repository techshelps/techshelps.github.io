<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Executing Dynamic Queries</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vihowexecutingdynamicqueries"></a>Executing Dynamic Queries</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vihowExecutingDynamicQueries_C">
</object></p>
<p>
If the recordset script object is bound to an SQL query, you can change the query at run time and re-execute it. This is particularly useful if you want to run a query that is based on information provided by the user.</p>
<p>
The current text of your SQL command is available by calling the recordset script object's <a href="viprogetsqlmethod.htm">getSQLText</a> method. You can set the SQL text by calling its <a href="viprosetsqlmethod.htm">setSQLText</a> method. After setting the SQL text, you re-execute the query by calling the recordset script object's <a href="viproopenmethod.htm">open</a> method.</p>
<p>
The following example shows how you can dynamically change the sort order of the records in your recordset. It gets the SQL text, appends a new ORDER BY clause onto the end of the command, updates the recordset again, and runs the query. After the query has been run, the handler restores the original query text.</p>
<pre><code>Sub btnByFName_onclick()
 &nbsp; oldSQL= rsEmployeeList.getSQLText
 &nbsp; newSQL = oldSQL &amp; " ORDER BY firstName"
 &nbsp; rsEmployeeList.setSQLText(newSQL)
 &nbsp; rsEmployeeList.Open&nbsp;&nbsp; ' Executes the new query
 &nbsp; rsEmployeeList.moveFirst
 &nbsp; ' Restores the original query
 &nbsp; rsEmployeeList.setSQLText(oldSQL)
End Sub
</code></pre>
<p>
You can determine when the query has finished by writing a handler for the <a href="viproondatasetcompleteevent.htm">ondatasetcomplete</a> event. For example, you might wait until the query has finished before you display data from it and before you enable the controls on the page. A handler to do that might look like this:</p>
<pre><code>Sub rsEmployeeList_ondatasetcomplete()
 &nbsp; ' Enables controls
 &nbsp; btnNext.disabled = False
 &nbsp; btnPrevious.disabled = False
 &nbsp; btnSave.disabled = False
 &nbsp; btnNew.disabled = False
 &nbsp; ' Refreshes the fields on the page
 &nbsp; txtLastName.value = rsEmployeeList.fields.getValue("au_lname")
 &nbsp; txtFirstName.value = rsEmployeeList.fields.getValue("au_fname")
End sub</code></pre>
</BODY>
</HTML>
