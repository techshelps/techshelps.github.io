<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Packaging Script as Objects</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="viconpackagingscriptasobjects"></a>Packaging Script as Objects</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconPackagingScriptAsObjects_C">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconPackagingScriptAsObjects_T">
</object></p>
<p>
Microsoft<sup>®</sup> Scripting Components (scriptlets) provide you with an easy way to create powerful, reusable controls. You create scriptlets using a Web scripting language such as Microsoft<sup>®</sup> Visual Basic<sup>®</sup> Scripting Edition (VBScript) and ECMAScript (a standard language based on JScript™ 2.0 and JavaScript 1.1). After creating your scriptlet, you can register and use it the way you would any ActiveX™ control.</p>
<p>
Scriptlets:
<ul type=disc>
<li>
Provide script authors the ability to create controls.<br><br></li>
<li>
Provide script authors with access to a broad range of system services.<br><br></li>
<li>
Are easy to create and maintain.<br><br></li>
<li>
Are small and efficient.</li>
</ul>
<h2>Types of Scriptlets</h2>
<p>
You can create two types of scriptlets:
<ul type=disc>
<li>
<b>DHTML scriptlet</b>&nbsp;&nbsp;&nbsp;A Web page based on Dynamic HTML (DHTML) that you can use as a control in any application that supports controls, such as Microsoft Visual Basic or Microsoft<sup>®</sup> Internet Explorer 4.0.<br><br></li>
<li>
<b>Server scriptlet</b>&nbsp;&nbsp;&nbsp;A scriptlet that you can use as a COM component. Server scriptlets contain only script (no HTML or other user interface elements). You can use server scriptlets as COM components in applications such as Microsoft<sup>®</sup> Internet Information Server (IIS), Microsoft<sup>®</sup> Windows<sup>®</sup> Scripting Host, and any other application that can support COM components.<p class=atl>
<b>Note</b> &nbsp; Server scriptlets are not discussed in this documentation. For information on building and using server scriptlets, visit the <A HREF="http://www.microsoft.com/scripting/">Microsoft Scripting web site</A>.</p></li>
</ul>
<p>
DHMTL scriptlets are used as visual controls in an application, and are suitable for display in client applications such as Internet Explorer and Visual Basic. With DHTML scriptlets, you can use the graphical and hypertext capabilities of Web pages as a visually rich interface for an application, such as a calendar control that you can display in a Web page, in Visual Basic or in another COM-based environment.</p>
<h2>How DHTML Scriptlets Work</h2>
<p>
If you are creating a DHTML scriptlet, there are two aspects to your scriptlet. The first is the visual interface. You create this as you would for a Web page using DHTML.</p>
<p>
The second aspect is the scriptlet's control interface: the properties, methods, and events that allow you to use the scriptlet as a control. You create these control elements using script that follows certain conventions for how methods and properties are exposed, and how events are trapped and forwarded to the host application.</p>
<p>
For example, a DHTML scriptlet might define animation that moves and resizes text on the page. You use DHTML to define the text and set its color, size, and location. You then use scripts to define properties that another application can use to set the speed and direction of the animation text, and methods that allow another application to start, stop, and pause the animation.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>To learn more about using Dynamic HTML in your Web pages, you can view the documentation for the Internet Client SDK located at <A Href="http://www.microsoft.com/msdn/sdk/inetsdk/help/default.htm">http://www.microsoft.com/msdn/sdk/inetsdk/help/default.htm</a>.</p>
<p>
After creating a DHTML scriptlet, you can use it as you would any control. You can add it to toolbars, draw it on a form, or add it to a Web page. In the host application, the DHTML scriptlet is hosted by a <i>scriptlet container object. </i>The container object creates a window for the DHTML scriptlet and provides a way for the host application to specify where the scriptlet displays, at what size, and so on. The scriptlet container object also provides the interface for you to set and get the DHTML scriptlet's properties, call its methods, and respond to its events.</p>
</BODY>
</HTML>
