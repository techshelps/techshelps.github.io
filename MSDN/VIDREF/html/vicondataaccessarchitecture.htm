<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Access Architecture</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vicondataaccessarchitecture"></a>Data Access Architecture</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconDataAccessArchitecture_C">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconDataAccessArchitecture_T">
</object></p>
<p>
Microsoft<sup>®</sup> Visual InterDev™ allows you great flexibility in designing Web applications with a database component. You can use any database supported by <a href="vimsgado.htm">ActiveX® Data Objects (ADO)</a> for which you have drivers, including Microsoft<sup>®</sup> SQL Server™, Microsoft<sup>®</sup> Access, Oracle, and others. </p>
<p>
You can interact directly with the database or use views, stored procedures, and other database entities to manage the database. The database can be physically located on the same computer as your Web server or on a different computer. You can do all your database access using the Web server, or you can access the database directly from a client computer.</p>
<p>
To prepare for the data access features of Visual InterDev, consider these concepts first:
<ul type=disc>
<li>
<a href="#vimscdatabaseintegrationinvisualinterdev">Database Integration in Visual InterDev</a><br><br></li>
<li>
<a href="#vimscwebserversdatabases">Web Servers and Databases</a><br><br></li>
<li>
<a href="#vimscdataconnections">Data Connections</a><br><br></li>
<li>
<a href="#vimscdatabasemanagement">Database Management</a></li>
</ul>
<h2><a name="vimscdatabaseintegrationinvisualinterdev"></a>Database Integration in Visual InterDev</h2>
<p>
Visual InterDev integrates a wide array of features to help you create Web applications with a database component:
<ul type=disc>
<li>
<b>Database projects</b>&nbsp;&nbsp;&nbsp;A type of project you can add to your Visual InterDev solution that includes tools required to build and manage your databases as a separate component from Web pages.<br><br></li>
<li>
<b>Data View window</b>&nbsp;&nbsp;&nbsp;A window that provides a live view of the data to which your database or Web project is currently connected. From the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="virefDataViewWindow">
</object><a href=JavaScript:alink_3.Click()>Data View window</a>, you can launch tools to manage your database, whether you are in a database project or Web project.<br><br></li>
<li>
<b>Microsoft</b><sup>®</sup><b> Visual Database Tools</b>&nbsp;&nbsp;&nbsp;A set of tools for managing and querying your database graphically. The Database Designer allows you to create and modify table definitions, column definitions, and relationships between tables in Microsoft SQL Server and Oracle databases. Using the Query Designer, you can visually create and run SQL statements. A View Designer enables you to create views.<br><br></li>
<li>
<b>Data Environment</b>&nbsp;&nbsp;&nbsp;A repository in your Web project for information required to connect to and access data in databases. The data environment stores reusable connection strings that allow you to access databases from your Web pages. In addition, the data environment stores data commands that represent recordsets, based on database objects or SQL commands.<br><br></li>
<li>
<b>Data-bound controls</b>&nbsp;&nbsp;&nbsp;Controls such as text boxes, buttons, and so on, that you can put on a Web page and that are automatically bound to specific fields in a database record. Data-bound controls already include script required to make data connections, extract data, and update the database so you can build database access into your Web pages with little or no scripting.<br><br></li>
<li>
<b>Source control for database objects&nbsp;&nbsp;&nbsp;</b>A link between databases and your source control system so you can put SQL scripts and compiled stored procedures under source control. This makes development simpler and more secure in companies with more than one database programmer.</li>
</ul>
<h2><a name="vimscwebserversdatabases"></a>Web Servers and Databases</h2>
<p>
In Web applications that access databases, two server-like functions are occurring: the Web server handles requests for pages and a database server or equivalent software handles database access. Although these two server functions are part of the same application, each functions separately.</p>
<p>
You can configure Web servers and database servers in various ways, depending on how you want people to use the database server, what the target audience is for your Web application, and how the application relates to other applications in your business. The following configuration options are possible:
<ul type=disc>
<li>
The database server can run on the same computer as the Web server.<p>
<img src="vi4yev1.gif" border=0></P></li>
<li>
The database server can be on a separate computer from the Web server. You might do this if you wanted to optimize each computer for its respective task, if you want to share a database server among several Web servers, or if the database server is used for applications other than the Web application.<p>
<img src="vi4yev2.gif" border=0></P></li>
<li>
The database server and Web server can be entirely separate processes that do not communicate. This model is practical if client computers can access the database directly, which can increase performance.<p>
<img src="vi4yev3.gif" border=0></P></li>
<li>
The database can be on a local (client) computer. You might do this in special cases, such as testing.<p>
<img src="vi4yev4.gif" border=0></P></li>
</ul>
<p>
Using the Web server as a gateway to the database is the most common strategy, because it gives Web applications the widest reach — the server does the database work, so it doesn't matter what type of browser the user has. Server-side database access is therefore a good choice for public Internet sites, where users might access the site with any browser.</p>
<p>
Client-side access, on the other hand, can provide a richer user experience that emphasizes performance, because the browser can manage data sets independently from the Web server. However, client-side access requires Internet Explorer DHTML as a browser, and also that the database be accessible via specific database drivers. Client-side database access is therefore most practical in intranet sites, such as a corporate Web site, where users access the site using a standard browser with predictable features.</p>
<p>
For information about Web server and database server security, see <a href="viconsecurity.htm">Security</a>.</p>
<h2><a name="vimscdataconnections"></a>Data Connections</h2>
<p>
To use a database, you add a <a href="vimsgdataconnection.htm">data connection</a> to your Visual InterDev project, which tells it how to access the database. Typically, a data connection includes information such as:
<ul type=disc>
<li>
The type of database you are accessing (for example, Microsoft SQL Server) and the server name (if appropriate).<br><br></li>
<li>
The name of the database (for example, pubs).<br><br></li>
<li>
A user name.<br><br></li>
<li>
A password.</li>
</ul>
<p>
You can add as many data connections to your project as you need. For example, if your application requires access to two different databases, you would add two data connections. For details about how to add a data connection, see <a href="vihowconnectingtodatabase.htm">Connecting to a Database</a>.</p>
<h3>Creating Connections</h3>
<p>
When you are creating a data connection, Visual InterDev reads connection information from a DSN (data source name) on your computer. Your computer can provide the DSN information in either a file DSN (stored in a .dsn file) or a machine or system DSN (stored in the Windows<sup>®</sup> registry of your computer).</p>
<h4>File Data Source Name</h4>
<p>
In the case of a file DSN, Visual InterDev reads the connection information from the DSN and extracts the connection string. It then adds a connection node to your project's data environment. </p>
<p>
The connection string extracted from the DSN is stored in your Web project in a binary file called DataEnvironment.asa. This is referred to as a "DSN-less" connection, because the Web project no longer needs the DSN to establish the connection. From then on, Visual InterDev can simply read the connection information from the binary file as needed.</p>
<h4>Machine Data Source Name</h4>
<p>
In the case of using a machine or system DSN, a connection string is not used. Instead, you will have to recreate the DSN on each development machine as well as the Web server.</p>
<h4>ODBC Drivers</h4>
<p>
At run time, the server must have the appropriate ODBC driver to make the connection to the data source. By default, ODBC drivers are installed on both your development computer and your server when you install Visual InterDev. However, if you deploy your applications to other servers, you must make sure that those servers also have the correct ODBC drivers.</p>
<h3>Security with Data Connections</h3>
<p>
Generally, when you are creating an application, you want to have the widest possible range of privileges so you can manipulate the database and data as needed. However, when users access the data at run time, you want to limit them to the minimum privileges required to run the application.</p>
<p>
Your first task is to create user profiles on the database. For example, you might create an administrator-level user profile for yourself to use during development. You can also create a user profile with privileges appropriate for users of your application. If the database server is on a different computer than the Web server, you must also make sure that the correct user profiles have been defined at the operating system level. For more information, see <a href="viconsecurity.htm">Security</a>.</p>
<p>
Later, when you create a data connection, you can specify both design-time and run-time authorization. Design-time authorization is the user name and password you use when developing the application. Run-time authorization is the user name and password that Visual InterDev will use when connecting to the database while the application is running.</p>
<p>
When specifying design-time authorization, you choose how secure your authorization is. For maximum security, you can choose to be prompted for a password each time you connect to the database. If you are not as concerned about security, you can choose not to be prompted. In that case, Visual InterDev encrypts your password and stores it in the project.</p>
<p>
When you specify run-time authorization, you do not have this choice: you cannot prompt users for a password, because the prompting would necessarily have to occur on the Web server. Therefore, you must include the password with the user name. The password is encrypted and stored in the project so it can be passed to the database each time a user connects to the database when the application is running.</p>
<h2><a name="vimscdatabasemanagement"></a>Database Management</h2>
<p>
In addition to helping you create Web pages that are linked to databases, Visual InterDev allows you to manage databases while directly connected to them at design time. Depending on the features of your database and your access privileges, you can use Visual InterDev tools to add, remove, or modify:
<ul type=disc>
<li>
Databases<br><br></li>
<li>
Tables or columns<br><br></li>
<li>
Views and synonyms<br><br></li>
<li>
Relationships between tables<br><br></li>
<li>
Indexes<br><br></li>
<li>
Constraints and triggers<br><br></li>
<li>
Stored procedures, functions, and packages<br><br></li>
<li>
Queries that return sets of data, or queries that modify a database by adding, updating, copying, or deleting records</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Features that allow you to make structural edits to databases are available only in the Enterprise Edition of Microsoft<sup>®</sup> Visual Studio™.</p>
<p>
Managing databases is a separate task from adding database functionality to a Web application. Therefore, to manage databases in Visual InterDev, you create a <a href="vimsgdatabaseproject.htm">database project</a>. To help you perform various database management tasks, a database project in Visual InterDev provides the following tools:
<ul type=disc>
<li>
<b>Data View window&nbsp;&nbsp;&nbsp;</b>A window that displays all the database objects that you can currently work with. From the Data View window, you can edit objects such as tables, views, stored procedures, and triggers.<p class=label>
<b>Data View window showing available database objects</b>
<p>
<img src="vi4yex1.gif" border=0></P></li>
<li>
<b>Database Designer&nbsp;&nbsp;&nbsp;</b>A tool that displays your Microsoft SQL Server or Oracle database as a <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmsgDatabaseDiagram">
</object><a href=JavaScript:alink_4.Click()>database diagram</a>, which you can edit to add or modify table and column definitions, define relationships, create indexes, and add constraints.<p class=label>
<b>Database diagram representing a database visually</b>
<p>
<img src="vi4yex2.gif" border=0></P></li>
<li>
<b>Query Designer</b>&nbsp;&nbsp;&nbsp;A designer that allows you to visually create SQL statements to query or modify a database.<p class=label>
<b>Query Designer being used to create an SQL statement</b>
<p>
<img src="vi4yex3.gif" border=0></P></li>
<li>
<b>View Designer</b>&nbsp;&nbsp;&nbsp;A version of the Query Designer that allows you to visually create the SQL Statement that defines a view.<br><br></li>
<li>
<b>Stored Procedure editor</b>&nbsp;&nbsp;&nbsp;A window for creating stored procedure that includes a link to the Query Designer to construct SQL statements.<br><br></li>
<li>
<b>Trigger editor</b>&nbsp;&nbsp;&nbsp;A window for creating triggers.<br><br></li>
<li>
<b>Script editor</b>&nbsp;&nbsp;&nbsp;A window for creating SQL scripts, which are SQL statements that are independent of any particular database. You can put SQL scripts under source control as well.</li>
</ul>
<p>
For more information about the tools available for managing a database, see <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconIntroducingMicrosoftVisualDatabaseTools">
</object><a href=JavaScript:alink_5.Click()>Introducing Microsoft Visual Database Tools</a>.</p>
</BODY>
</HTML>
