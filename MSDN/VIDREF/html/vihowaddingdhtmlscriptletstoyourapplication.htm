<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding DHTML Scriptlets to Your Application</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vihowaddingdhtmlscriptletstoyourapplication"></a>Adding DHTML Scriptlets to Your Application</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vihowAddingDHTMLScriptletsToYourApplication_C">
</object></p>
<p>
After you have created a DHTML scriptlet, you can use it in your applications. You must first create a scriptlet container object. This object creates a window for the scriptlet and provides a way for the host application to specify where the scriptlet displays, at what size, and so on.</p>
<p class=label>
<b>To add a DHTML scriptlet to a host application</b>
<ol>
<li>
Create a scriptlet container object in your application and set its Name property.<br><br></li>
<li>
Set the scriptlet container object's <a href="viprourlproperty.htm">url</a> property to the URL of the scriptlet you want to use.</li>
</ol>
<p class=indent>
<B><b>Important&nbsp;&nbsp;&nbsp;</b></B>If you are adding the scriptlet to a Web page, do not set the <code>url</code> property to the URL of the current page. Doing so causes a recursive call to the page and will cause the browser to stop functioning.</p>
<p>
If you are working with a Web page, you can use the &lt;OBJECT&gt; tag to reference the scriptlet. You can add a scriptlet to the Microsoft<sup>®</sup> Visual InterDev™ Toolbox.</p>
<p class=label>
<b>To add a DHTML scriptlet to the Toolbox</b>
<ul type=disc>
<li>
In the Project Explorer, right-click the scriptlet's .htm file, and then choose <b>Mark As Scriptlet</b>.<p class=tl>
An &lt;OBJECT&gt; tag containing a pointer to that scriptlet is added to the Scriptlet tab of the Toolbox. (If this is the first scriptlet on the Toolbar, the Scriptlet tab is created.) You can then drag the scriptlet from the Toolbox onto another page and automatically create the &lt;OBJECT&gt; tag necessary to implement the scriptlet. </P><p class=atl>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>When you add a scriptlet to the Toolbox, it includes the scriptlet's absolute URL. After you drag a scriptlet onto your page, you might need to modify the &lt;OBJECT&gt; tag's URL property in the Properties window or in Source view to make the link relative.</p></li>
</ul>
<p>
Alternatively, you can create an &lt;OBJECT&gt; tag yourself that references the scriptlet.</p>
<p class=label>
<b>To refer to a DHTML scriptlet in an &lt;OBJECT&gt; tag</b>
<ul type=disc>
<li>
Create an &lt;OBJECT&gt; tag with the following syntax, substituting the scriptlet's URL and name for <i>url/scriptletName</i>:<pre><code>&lt;OBJECT ID="MyScriptlet" TYPE="text/x-scriptlet" WIDTH=300 HEIGHT=200&gt;
 &nbsp; &lt;PARAM NAME="url" VALUE="<i>url/scriptletName</i>"&gt;
&lt;/OBJECT&gt;
</code></pre>
</li>
</ul>
<h2>Working with the Scriptlet Container Object</h2>
<p>
In your application, the DHTML scriptlet appears within a scriptlet container object. This object provides you with an interface to the scriptlet. For example, when an event occurs in the scriptlet (and if the scriptlet is forwarding the event), your application sees the event occurring in the container object. </p>
<p>
You can manage the appearance of the scriptlet by setting properties of the scriptlet container object. In some cases, you can set properties within the scriptlet's scripts to manage its own appearance.</p>
<p>
You can add scrollbars if the scriptlet does not fit within the container object. For details, see <a href="viproscrollbarproperty.htm">scrollbar property</a>. You can also resize the container object from within the scriptlet by using a script to set the DHTML script object's pixelHeight and pixelWidth properties. For example, the following example shows how you can resize the scriptlet container when the scriptlet is first loaded:</p>
<pre><code>&lt;HTML ID="MyPage"&gt;
&lt;HEAD&gt;
&lt;SCRIPT LANGUAGE="VBScript"&gt;
Sub window_onload()
 &nbsp; MyPage.style.pixelHeight = 300
 &nbsp; MyPage.style.pixelWidth = 400
End Sub
&lt;/SCRIPT&gt;
&lt;/HEAD&gt;
</code></pre>
<p>
If you change the .htm file after creating the control, the display in the control is not updated until the next time the page is read. This occurs when the application is run or if you change the url property of the control again.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>After the scriptlet has been initialized, the F5 key, used to refresh a page in Microsoft<sup>®</sup> Internet Explorer, is not active in the scriptlet container object.</p>
<p>
After creating an instance of the scriptlet, you can write scripts for it as you would for any other control. The object you are using to work with properties and methods is the scriptlet container object; the exact properties and methods you can use are defined by the scriptlet identified in the container's url property. If you are working in an environment that can display an object's properties and methods, such as Microsoft<sup>®</sup> Visual Basic<sup>®</sup>, you will not see the properties, because these are not exposed to the development environment.</p>
<p>
For example, the following code in a Visual Basic form sets a property and calls a method in the page referenced by the <code>ScriptContainer1</code> control:</p>
<pre><code>Sub cmdColor_Click()
 &nbsp; ScriptContainer1.BackgroundColor="red"
 &nbsp; ScriptContainer1.UpdateText (Text1.Text)
End Sub
</code></pre>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>In Visual Basic, you must pass a parameter to a scriptlet method even if the method does not require one, or errors can occur. For example, the following statement passes a placeholder parameter of zero to a scriptlet method that does not require parameters:</p>
<pre><code>ScriptContainer1.ToggleColor (0)
</code></pre>
<p>
Before getting a scriptlet's properties or calling its methods, you must be sure that the scriptlet has been fully loaded. For details, see the container object's <a href="viproonreadystatechangeevent.htm">onreadystatechange</a> event and <a href="viproreadystateproperty.htm">readyState</a> property, and the scriptlet's <a href="viprofrozenproperty.htm">frozen</a> property.</p>
<p>
Handling events that occur in the scriptlet is slightly different than it is for events in other objects. For details, see <a href="vihowexposingeventsindhtmlscriptlets.htm">Exposing Events in DHTML Scriptlets</a>.</p>
</BODY>
</HTML>
