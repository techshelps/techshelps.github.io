<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Button Design-Time Control</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="victlbuttoncontrol"></a>Button Design-Time Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="victlButtonControlC">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="victlButtonControlT">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="victlButtonControlP">
</object></p>
<p>
Creates a <a href="victlbuttonobject.htm">Button script object</a>, which creates an intrinsic HTML button. </p>
<p class=label>
<b>Remarks</b></p>
<p>
You can set the properties of the Button control at design time using the Properties window and the <a href="viovrbuttonpropertiesdialogbox.htm">Button Properties</a> dialog box. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Button controls cannot be bound to data.</p>
<p>
Button controls support either image or text to be displayed on the button. Use the <a href="viprocaptionproperty.htm">Caption</a> property to display text. To display an image, set the <a href="viproimageproperty.htm">Image</a> property to the URL of an image. Use the <a href="viproalttextproperty.htm">AltText</a> property to specify text that is displayed while the image loads or if it fails to load.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The scripting platform specifies where an object's script is run - either on the client (Microsoft<sup>®</sup> Internet Explorer 4.0 DHTML) or on the server (ASP). Thus, the scripting platform determines whether the object is available under <b>Client Objects &amp; Events </b>or <b>Server Objects &amp; Events</b> in the Script Outline window. </p>
<p class=indent>
For the Button control, the Scripting Platform property is specified on the <a href="virefgeneraltabbuttonpropertiesdialogbox.htm">General tab</a> of the Button Properties dialog box. For more information, see the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csproDTCScriptingPlatformProperty">
</object><a href=JavaScript:alink_4.Click()>DTCScriptingPlatform</a> property. For detailed information about choosing a scripting platform, see <a href="vihowwritingscriptforscriptobjects.htm">Writing Script for Script Objects</a>.</p>
<p class=label>
<b>Scripting Notes</b></p>
<p>
To control how the button is displayed, call the <a href="viprohidemethod.htm">hide</a>, <a href="viproshowmethod.htm">show</a>, and <a href="viproisvisiblemethod.htm">isVisible</a> methods. For more information about the run-time object, see <a href="victlbuttonobject.htm">Button Script Object</a>.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;When the scripting platform is set to server (ASP), use a server-side <a href="viproonclickevent.htm">onclick</a> event to call an event handler. When a user clicks the button, the page is submitted to the server where the onclick event is processed.</p>
<p>
After you add a Button control to your page, you can add script to your page that is run when the button is pressed. </p>
<p class=label>
<b>To add script for a Button control</b>
<ol>
<li>
Drag a Button control from the <b>Toolbox</b> onto a page.<br><br></li>
<li>
On the <b>View </b>menu, select <b>Other Windows </b>and then <b>Script Outline</b>.<br><br></li>
<li>
For scripting on the server (ASP), expand <b>Server Object and Events</b>.<p class=tl>
For scripting on the client (Internet Explorer 4.0 DHTML), expand <b>Client Object and Events</b>.</P></li>
<li>
Expand the object that corresponds to the name of your button.<br><br></li>
<li>
Double-click the <b>onclick </b>event. (Note the lightning bolt icon that signifies an event).<p class=tl>
Visual InterDev pastes the stub of an event handler for the onclick event onto your page. You can now write your script for this event handler.</P></li>
</ol>
<p>
For more information about the run-time object, see <a href="victlbuttonobject.htm">Button Script Object</a>. For more information on scripting and objects, see <a href="viovrscriptingwithdesigntimecontrolsscriptobjects.htm">Scripting with Design-Time Controls and Script Objects</a>.</p>
</BODY>
</HTML>
