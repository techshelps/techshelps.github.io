<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Migrating from Visual InterDev 1.0 to Visual InterDev 6.0</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="viconmigratingfromvisualinterdev10tovisualinterdev60"></a>Migrating from Visual InterDev 1.0 to Visual InterDev 6.0</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconMigratingFromVisualInterDev10ToVisualInterDev60_C">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconMigratingFromVisualInterDev10ToVisualInterDev60_T">
</object></p>
<p>
You can easily migrate your Microsoft<sup>®</sup> Visual InterDev™ 1.0 projects to Microsoft Visual InterDev 6.0.</p>
<p>
The Web applications you created with Visual InterDev 1.0 will continue to run in Visual InterDev 6.0. In fact, if members of your Web development team are still using Visual InterDev 1.0, they can view the application files even after you have upgraded to the new version of Visual InterDev. </p>
<p>
This cross-version compatibility is a key feature of Microsoft<sup>®</sup> Visual Studio™ components. However, Visual InterDev 6.0 offers a greatly enhanced HTML editor, a new toolbox of design-time controls, and integrated debugging that others will also want to use. For a full list of new and enhanced features, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconWhatsNew">
</object><a href=JavaScript:alink_3.Click()>What’s New in Visual InterDev 6.0</a>.</p>
<p>
For information about important issues when migrating existing Web applications from Visual InterDev 1.0, see the following sections.
<ul type=disc>
<li>
<a href="#vimscserverupgradesinvisualinterdev60">Server Upgrades in Visual InterDev 6.0</a><br><br></li>
<li>
<a href="#vimscdataconnectiondifferencesbetweenvisualinterdev60visualinterdev10">Data Connection Differences Between Visual InterDev 6.0 and Visual InterDev 1.0</a><br><br></li>
<li>
<a href="#vimscdifferencesbetweenvisualinterdev60visualinterdev10designtimecontrols">Differences Between Visual InterDev 6.0 and Visual InterDev 1.0 Design-Time Controls</a></li>
</ul>
<h2><a name="vimscserverupgradesinvisualinterdev60"></a>Server Upgrades in Visual InterDev 6.0</h2>
<p>
Visual InterDev 6.0 includes enhanced server software capability. All the software needed to upgrade your server is contained on the Visual InterDev 6.0 installation compact disc. Because the upgraded server software is designed to work with Visual InterDev 1.0, you will still be able to open Visual InterDev 1.0 projects after installing the new server extensions.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>The server extensions upgrade is required to run Visual InterDev 6.0.</p>
<h4>Enhanced Server Extensions</h4>
<p>
To take advantage of many of the new features in Visual InterDev 6.0, you need to run the Visual InterDev 6.0 Server Setup to upgrade your server extensions. Many new and improved features in version 6.0 are dependent upon the latest server extension software. For example, the Visual InterDev 6.0 <a href="viconscriptsinwebapplications.htm">Scripts in Web Applications</a>, <a href="vimsgdataenvironment.htm">Data Environment</a>, <a href="viovrdesign-timecontrols.htm">Design-Time Controls</a>, and <a href="vimsgdatacommand.htm">Data Commands</a> all use the upgraded server capability to simplify Web application development. These features are only supported after you run the Visual InterDev 6.0 Server Setup program.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Only the server requires the new server extensions. You do not need to load the server software on the client machine.</p>
<h4>Microsoft<sup>®</sup> Internet Information Server 4.0</h4>
<p>
In addition to the Visual InterDev 6.0 Server Setup, to run the Microsoft Visual InterDev debugger you need to install Microsoft<sup>®</sup> Internet Information Server 4.0. Internet Information Server 4.0 is included with your Visual InterDev software and with Microsoft<sup>®</sup> Windows NT<sup>®</sup> 5.0.</p>
<p>
You can use the Visual InterDev debugger to test scripts written in Microsoft<sup>®</sup> Visual Basic<sup>®</sup> Scripting Edition (VBScript) and Microsoft<sup>®</sup> JScript™, as well as applications written in Sun Microsystems Java and run using the Microsoft Java Virtual Machine (VM). For more information about the debugger, see <a href="viovrdebuggingyourpages.htm">Debugging Your Pages</a>.</p>
<p>
If you have installed an alternative scripting language that supports the Microsoft debugging protocol, such as REXX or Perl, you can also debug scripts in that language.</p>
<h2><a name="vimscdataconnectiondifferencesbetweenvisualinterdev60visualinterdev10"></a>Data Connection Differences Between Visual InterDev 6.0 and Visual InterDev 1.0</h2>
<p>
A data connection provides your Visual InterDev project with access to a particular database. Once you are connected to a database, you can display or edit data on your Web page in Visual InterDev.</p>
<p>
In Visual InterDev, to connect to a database you first create a data source name (DSN) for the database or choose an existing one. Then, you use the DSN to create a data connection and add it to your project. However, there has been a fundamental change in the way the data connections are stored in the Visual InterDev project with this new release.</p>
<p>
In Visual InterDev 1.0, established data connections are identified by <a href="vimsgsession.htm">session variables</a> within your project You can see the session variables by opening your project’s <a href="vimsgglobal.asafile.htm">Global.asa file</a>.</p>
<p>
In Visual InterDev 6.0, data connections are identified in <i>application</i> <i>variables</i> within your project. You can see the application variables in your project’s Global.asa file. You can also use the new <a href="vimsgdataenvironment.htm">Data Environment</a> to edit the application variables for each data connection. For more information about using the new data environment, see <a href="viconthedataenvironment.htm">The Data Environment</a>.</p>
<p>
When you first open a Visual InterDev 1.0 project in Visual InterDev 6.0, the data connections are automatically converted from session to application variables . The session variables that were defined in Visual InterDev 1.0 remain in the Global.asa file, but they are only used with the DTC components that shipped in Visual InterDev 1.0.</p>
<p>
Defining data connections as application variables is better, faster, and requires fewer resources than the version 1.0 method. When you use the version 6.0 application variables, each data connection can be shared between all the users accessing your application. This is an improvement over the version 1.0 session variables where each user must recreate the data connection variables.</p>
<p>
There are, however, issues you should be aware of when working with Visual InterDev projects in different versions.
<ul type=disc>
<li>
<a href="#vimscopeningvisualinterdev10projectswithdataconnectionsinvisualinterdev60">Opening Visual InterDev 1.0 Projects with Data Connections in Visual InterDev 6.0</a><br><br></li>
<li>
<a href="#vimscopeningvisualinterdev60projectswithdataconnectionsinvisualinterdev10">Opening Visual InterDev 6.0 Projects with Data Connections in Visual InterDev 1.0</a></li>
</ul>
<h3><a name="vimscopeningvisualinterdev10projectswithdataconnectionsinvisualinterdev60"></a>Opening Visual InterDev 1.0 Projects with Data Connections in Visual InterDev 6.0</h3>
<p>
When you open a Visual InterDev 1.0 project in Visual InterDev 6.0, all the project’s data connections are automatically converted from session variables to application variables.</p>
<p>
The session variables created in Visual InterDev 1.0 remain visible in your Global.asa file but are not used by Visual InterDev 6.0. Additionally, new application variables defining your data connections are added to your project’s Global.asa file. Therefore, data connection information actually appears twice in the Global.asa file so that both versions will continue to work properly. </p>
<p>
In Visual InterDev 1.0, the data connection is defined by session variables in the Global.asa file, as in the script below.</p>
<pre><code>Sub<b> <span class=cfe>Session</span></b>_OnStart
'==Visual InterDev Generated – DataConnection startspan==
'—Project Data Connection
Session ("NorthWind_ConectionString")="DBQ=E:\NorthWind.mdb;
DefaultDir=E:\;Driver={Microsoft Access Driver (*.mdb)};
DriverId=25;FIL=MSAccess;ImplicitCommitSync=Yes;MaxBufferSize=512;
MaxScanRows=8;PageTimeout=5;SafeTransactions=0;Threads=3;UID=admin;UserCommitSync=Yes;"
Session("NorthWind_ConnectionTimeout") = 15
Session("NorthWind_CommandTimeout") = 30
Session("NorthWind_RuntimeUserName") = "admin"
Session("NorthWind_RuntimePassword") = ""
==Visual InterDev Generated – DataConnection endspan==
End Sub
</code></pre>
<p>
When you open your Visual InterDev 1.0 project in Visual InterDev 6.0, the following message informs you that data connections are being converted into application variables in the Global.asa file.</p>
<p>
<img src="vi53881.gif" border=0></p>
<p>
When you view your project’s Global.asa file in Visual InterDev 6.0, your data connection is now defined by application variables, as well as by the original session variables, as it is in the example script below.</p>
<pre><code>Sub<b> <span class=cfe>Application</span></b>_OnStart
'==Visual InterDev Generated – DataConnection startspan==
'—Project Data Connection
Application ("NorthWind_ConectionString")="DBQ=E:\NorthWind.mdb;
DefaultDir=E:\;Driver={Microsoft Access Driver (*.mdb)};
DriverId=25;FIL=MSAccess;ImplicitCommitSync=Yes;MaxBufferSize=512;
MaxScanRows=8;PageTimeout=5;SafeTransactions=0;Threads=3;UID=admin;UserCommitSync=Yes;"
Application ("NorthWind_ConnectionTimeout") = 15
Application ("NorthWind_CommandTimeout") = 30
Application ("NorthWind_RuntimeUserName") = "admin"
Application ("NorthWind_RuntimePassword") = ""
==Visual InterDev Generated – DataConnection endspan==
End Sub
Sub<b> <span class=cfe>Session</span></b>_OnStart
'==Visual InterDev Generated – DataConnection startspan==
'—Project Data Connection
Session ("NorthWind_ConectionString")="DBQ=E:\NorthWind.mdb;
DefaultDir=E:\;Driver={Microsoft Access Driver (*.mdb)};
DriverId=25;FIL=MSAccess;ImplicitCommitSync=Yes;MaxBufferSize=512;
MaxScanRows=8;PageTimeout=5;SafeTransactions=0;Threads=3;UID=admin;UserCommitSync=Yes;"
Session("NorthWind_ConnectionTimeout") = 15
Session("NorthWind_CommandTimeout") = 30
Session("NorthWind_RuntimeUserName") = "admin"
Session("NorthWind_RuntimePassword") = ""
==Visual InterDev Generated – DataConnection endspan==
End Sub
</code></pre>
<p>
If you open the Web application again in Visual InterDev 1.0, version 1.0 ignores the new application variables and uses the original session variables whenever a data connection is made. </p>
<p>
Visual InterDev 6.0 ignores the existing session variables and uses the new application variables whenever a data connection is made. </p>
<h3><a name="vimscopeningvisualinterdev60projectswithdataconnectionsinvisualinterdev10"></a>Opening Visual InterDev 6.0 Projects with Data Connections in Visual InterDev 1.0</h3>
<p>
When you create data connections in Visual InterDev 6.0 projects, the data connections are defined in application variables within the project’s Global.asa file. These application variables are the only place the data connections need to be defined if you are only going to open the project in Visual InterDev 6.0.</p>
<p>
Visual InterDev 1.0 will not automatically interpret the data connections defined in a Visual InterDev 6.0 project. </p>
<p>
If you create projects in Visual InterDev 6.0 that you want to open in Visual InterDev 1.0, you must <i>manually redefine </i>your project’s data connections so they are Visual InterDev 1.0 compliant. To be Visual InterDev 1.0 compliant, your data connections must be defined in session variables as well as in application variables.</p>
<p>
Redefining your project’s data connections so they are Visual InterDev 1.0 compliant is easy and can be done in two ways:
<ul type=disc>
<li>
<a href="#vimscaddingdataconnectionsinvisualinterdev10">Adding Data Connections in Visual InterDev 1.0</a><br><br></li>
<li>
<a href="#vimsccopyingapplicationdefineddataconnectionstosessiondefineddataconnections">Copying Application-Defined Data Connections to Session-Defined Data Connections</a></li>
</ul>
<h3><a name="vimscaddingdataconnectionsinvisualinterdev10"></a>Adding Data Connections in Visual InterDev 1.0</h3>
<p>
The simplest way to redefine your Visual InterDev 6.0 data connections so they are Visual InterDev 1.0 compliant is to open the project in Visual InterDev 1.0, and add the data connections as if they were new.</p>
<p>
This procedure will automatically generate the session-defined data connections that are required for Visual InterDev 1.0. It will not modify the application-defined data connections that are required for Visual InterDev 6.0.</p>
<p class=label>
<b>To add a data connection to your Web project in Visual InterDev 1.0</b>
<ol>
<li>
Open your Visual InterDev 6.0 project in Visual InterDev 1.0.<br><br></li>
<li>
Select the project in <b>FileView</b>.<br><br></li>
<li>
On the <b>Project </b>menu, click <b>Add to Project</b>, and then click<b> Data Connection</b>.<br><br></li>
<li>
In the <b>Select Data Source</b> dialog box, choose the existing DSN that you connected to in Visual InterDev 6.0.<br><br></li>
<li>
Log on to the data server if required.</li>
</ol>
<p>
Your data connection is now available for use with Visual InterDev 1.0.</p>
<p class=label>
<b>To verify your data connection properties in Visual InterDev 1.0</b>
<ol>
<li>
Close the Global.asa file if it is open in the editor.<br><br></li>
<li>
Expand the Global.asa icon in <b>FileView</b>.<br><br></li>
<li>
Right-click the name of the data connection, and click <b>Properties</b>.<br><br></li>
<li>
Verify that the data connection properties are the same as the properties you set for the data connection in Visual InterDev 6.0.</li>
</ol>
<p>
Your Visual InterDev 6.0 project now has data connections that will work properly in both Visual InterDev 1.0 and Visual InterDev 6.0.</p>
<h3><a name="vimsccopyingapplicationdefineddataconnectionstosessiondefineddataconnections"></a>Copying Application-Defined Data Connections to Session-Defined Data Connections</h3>
<p>
If you want to make your Visual InterDev 6.0 project work correctly in Visual InterDev 1.0 without first opening the project in Visual InterDev 1.0, you can manually copy the application-defined data connections to session-defined data connections within the Visual InterDev 6.0 Global.asa file editor.</p>
<p class=label>
<b>To copy the application-defined data connections to session-defined data-connections</b>
<ol>
<li>
Open your project’s Global.asa file in the Visual InterDev 6.0 editor.<br><br></li>
<li>
Find the <b>Application_OnStart</b> script command that defines the data connection.<p class=tl>
The code will resemble the example below.</P><pre><code>Sub<b> <span class=cfe>Application_OnStart</span></b>
'==Visual InterDev Generated – DataConnection startspan==
'—Project Data Connection
Application ("NorthWind_ConectionString")="DBQ=E:\NorthWind.mdb;
DefaultDir=E:\;Driver={Microsoft Access Driver (*.mdb)};
DriverId=25;FIL=MSAccess;ImplicitCommitSync=Yes;MaxBufferSize=512;
MaxScanRows=8;PageTimeout=5;SafeTransactions=0;Threads=3;UID=admin;UserCommitSync=Yes;"
Application ("NorthWind_ConnectionTimeout") = 15
Application ("NorthWind_CommandTimeout") = 30
Application ("NorthWind_RuntimeUserName") = "admin"
Application ("NorthWind_RuntimePassword") = ""
==Visual InterDev Generated – DataConnection endspan==
End Sub
</code></pre>
</li>
<li>
Copy the entire application-defined data connection code and paste it back into your Global.asa file, so that the code defining the data connection appears twice.<br><br></li>
<li>
Manually change the highlighted lines in the second instance of the data connection definition to create a session-defined data connection in your Global.asa file, as shown in the example below.<pre><code>Sub<b> </b>Application_OnStart
'==Visual InterDev Generated – DataConnection startspan==
'—Project Data Connection
Application("NorthWind_ConectionString")="DBQ=E:\NorthWind.mdb;
DefaultDir=E:\;Driver={Microsoft Access Driver (*.mdb)};
DriverId=25;FIL=MSAccess;ImplicitCommitSync=Yes;MaxBufferSize=512;
MaxScanRows=8;PageTimeout=5;SafeTransactions=0;Threads=3;UID=admin;UserCommitSync=Yes;"
Application("NorthWind_ConnectionTimeout") = 15
Application("NorthWind_CommandTimeout") = 30
Application("NorthWind_RuntimeUserName") = "admin"
Application("NorthWind_RuntimePassword") = ""
==Visual InterDev Generated – DataConnection endspan==
End Sub
Sub <span class=cfe><b>Session_OnStart</b></span>
'==Visual InterDev Generated – DataConnection startspan==
'—Project Data Connection
<span class=cfe><b>Session</b></span> ("NorthWind_ConectionString")="DBQ=E:\NorthWind.mdb;
DefaultDir=E:\;Driver={Microsoft Access Driver (*.mdb)};
DriverId=25;FIL=MSAccess;ImplicitCommitSync=Yes;MaxBufferSize=512;
MaxScanRows=8;PageTimeout=5;SafeTransactions=0;Threads=3;UID=admin;
UserCommitSync=Yes;"
<span class=cfe><b>Session</b></span>("NorthWind_ConnectionTimeout") = 15
<span class=cfe><b>Session</b></span>("NorthWind_CommandTimeout") = 30
<span class=cfe><b>Session</b></span>("NorthWind_RuntimeUserName") = "admin"
<span class=cfe><b>Session</b></span>("NorthWind_RuntimePassword") = ""
==Visual InterDev Generated – DataConnection endspan==
End Sub
</code></pre>
<p class=tl>
You have now successfully modified your Visual InterDev 6.0 project so that the data connections are Visual InterDev 1.0 compliant.</P></li>
</ol>
<h2><a name="vimscdifferencesbetweenvisualinterdev60visualinterdev10designtimecontrols"></a>Differences Between Visual InterDev 6.0 and Visual InterDev 1.0 Design-Time Controls</h2>
<p>
In Visual InterDev 6.0, several product enhancements combine to create a richer, faster, more robust environment for using design-time controls (DTCs). In Visual InterDev 6.0, you’ll find a new set of DTCs that include enhanced design-time user interfaces for run-time effects. In addition, the philosophy behind the DTCs is expanded to allow you to code against the programming model as opposed to just coding script.</p>
<p>
Your Visual InterDev 1.0 Legacy DTCs will continue to function when your Visual InterDev 1.0 project is opened in Visual InterDev 6.0, but the approach to using DTCs has changed since the previous version of Visual InterDev. For more information about using the DTCs, see <a href="viconscriptsinwebapplications.htm">Scripts in Web Applications</a> and <a href="viovrscriptingwithdesigntimecontrolsscriptobjects.htm">Scripting with Design-Time Controls and Script Objects</a>.</p>
<p>
In general, the Visual InterDev 6.0 design-time controls offer you a richer, more visual editing interface for creating data-enriched pages. Data-bound controls make it simple to incorporate data in your ASP or HTML pages to interact with your database.</p>
<p>
The controls included with this version of Visual InterDev allow you to target a wide range of browsers, or to narrow your focus to the rich dynamic HTML available in Microsoft<sup>®</sup> Internet Explorer 4.0. For more information about the data-bound controls, see <a href="viovrdesign-timecontrols.htm">Design-Time Controls</a>.</p>
<h4>The Data Environment</h4>
<p>
In addition to the increased variety and functionality of DTCs in Visual InterDev 6.0, creating and modifying data-related objects is now collected in one place: the graphical <a href="vimsgdataenvironment.htm">data environment</a>. The data environment will affect the way you use and think about your DTCs.</p>
<p>
In the data environment, you can drag and drop objects onto ASP pages to automatically create data-bound design-time controls. The data environment provides a standard interface for creating reusable data-related objects and for placing them on Web pages.</p>
<p>
Before creating new projects in Visual InterDev 6.0, and in order to take full advantage of the Visual InterDev 6.0 DTCs, you should become acquainted with the data environment and explore how it will affect your project plans. For details, see <a href="viconthedataenvironment.htm">The Data Environment</a>.</p>
<h3><a name="vimsginstallingscriptlibraryfordesigntimecontrols"></a>Installing a Script Library for Design Time Controls</h3>
<p>
The script library is a repository for code generated by Visual InterDev 6.0 <a href="viovrdesign-timecontrols.htm">design-time controls</a>. Although this library was not part of the Visual InterDev 1.0 release, it is required by the Visual InterDev 6.0 Programming Model. </p>
<p>
When using Design-Time Controls in Visual InterDev 6.0 projects, it is important that the script library be present in order for your Visual InterDev 6.0 design-time controls to function correctly. </p>
<p>
When you first open a Visual InterDev 1.0 Web application in Visual InterDev 6.0, the following message box will prompt you to install the script library.</p>
<p>
<img src="vi55xr1.gif" border=0></p>
<p>
Click <b>Yes </b>to install the Script Library.</p>
<p>
If you choose not to install the Script Library, your project’s design-time controls will not be able to find the code they are intended to generate and errors can occur.</p>
<p class=label>
<b>If you choose No when asked to install the Script Library, then you later change your mind</b>
<ol>
<li>
Create a folder in your Web project folder called _ScriptLibrary.<br><br></li>
<li>
Copy the contents of the Microsoft Visual Studio\VIntDev98\ScriptLibrary folder to the _ScriptLibrary folder.<p class=tl>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>It is important that the new folder has the name _ScriptLibrary.</P></li>
</ol>
<p>
Once the new folder is created and the contents of the script library are copied into it, your Visual InterDev 1.0 projects will be able to use design-time controls when opened in Visual InterDev 6.0.</p>
</BODY>
</HTML>
