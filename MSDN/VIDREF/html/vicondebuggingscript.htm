<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging Script</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vicondebuggingscript"></a>Debugging Script</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconDebuggingScript_C;viconDebuggingScriptC">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="viconDebuggingScript_T;viconDebuggingScriptT">
</object></p>
<p>
Debugging script allows you to find errors in your script, such as syntax errors, run-time errors, and logic errors, before you publish that script to the World Wide Web. You probably already know how to set breakpoints for debugging and how to step through lines of script. Now you can see how to accomplish these tasks using Microsoft<sup>®</sup> Visual InterDev™.</p>
<p>
In Visual InterDev, debugging script consists of some or all of these steps, once you have added script to a page:
<ul type=disc>
<li>
<a href="#vimscaddingclientscripttohtmpage">Adding Client Script to an HTML Page</a><br><br></li>
<li>
<a href="#vimscsettingbreakpoints">Setting Breakpoints</a><br><br></li>
<li>
<a href="#vimscsteppingthroughlinesofscript">Stepping Through Lines of Script</a><br><br></li>
<li>
<a href="#vimscchangingvalueofvariable">Changing the Value of a Variable</a></li>
</ul>
<h2><a name="vimscaddingclientscripttohtmpage"></a>Adding Client Script to an HTML Page</h2>
<p>
Debugging client script is an easy way to become familiar with debugging in Visual InterDev. Client-side script is processed on the browser, while server-side script is processed on the Web server. For more information about client and server script, see <a href="vihowdebuggingclientscript.htm">Debugging Client Script</a> and <a href="vihowdebuggingserverscript.htm">Debugging Server Script</a>.</p>
<p>
To use this walkthrough, you will need to create a file with script to debug. The sample client script, located between the <code>&lt;SCRIPT&gt;</code> <code>&lt;/SCRIPT&gt;</code> tags in the example below, validates the length of password entries made in a simple form. The remaining HTML tags define the form and do not participate in the script debugging process.</p>
<p>
To use the script below, create a new .htm file and switch to <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgSourceViewHTMLEditor">
</object><a href=JavaScript:alink_3.Click()>Source</a> view in the HTML editor. Copy the script and HTML then right-click and choose Paste As Text from the shortcut menu. For more information, see <a href="viovreditingscript.htm">Scripting with HTML Elements</a>.</p>
<pre><code>&lt;SCRIPT LANGUAGE="JavaScript"&gt;
function validatePassword()
{
 &nbsp; var password;
 &nbsp; password = document.frm1.txtPassword.value;
 &nbsp; // debugger;
 &nbsp; alert("You entered " + password);
 &nbsp; if (password.length &lt; 4) {
 &nbsp;&nbsp;&nbsp;&nbsp; alert("You must enter 4 characters or more!");
 &nbsp;&nbsp;&nbsp;&nbsp; document.frm1.txtPassword.select();
 &nbsp;&nbsp;&nbsp;&nbsp; return false;
 &nbsp; }
 &nbsp; else {
 &nbsp;&nbsp;&nbsp;&nbsp; alert ("Your form is being submitted!");
 &nbsp;&nbsp;&nbsp;&nbsp; return true;
 &nbsp; }
}
&lt;/SCRIPT&gt;
&lt;P&gt;&lt;H2&gt;Please enter a password.&lt;/H2&gt;
&lt;P&gt;
&lt;FORM NAME="frm1" METHOD="Post" ACTION="Process.asp" OnSubmit="return validatePassword()"&gt;
 &nbsp;&nbsp; &lt;INPUT NAME="txtPassword" TYPE="Password"&gt;
 &nbsp;&nbsp; &lt;INPUT NAME="btnSubmit" TYPE="Submit" VALUE="Submit"&gt;
 &nbsp;&nbsp; &lt;INPUT NAME="btnReset" TYPE="Reset" VALUE="Reset"&gt;
&lt;/FORM&gt;
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;JavaScript is case sensitive, so the sample script above must appear in your .htm file exactly as it does here.</p>
<p>
<img src="vi4tv51.gif" border=0></p>
<p>
When the user clicks the Submit button, the script checks that the password length is four characters or greater. The script generates a message box listing the password the user entered. If the password is four characters or greater in length, the user is then redirected to the page called by the Action element of the &lt;FORM&gt; tag.</p>
<p>
If you haven't created Process.asp, the file that the form will call, the browser will display the "object not found" error. If the password is fewer than four characters in length, a message box appears indicating the character length requirement.</p>
<h2><a name="vimscsettingbreakpoints"></a>Setting Breakpoints</h2>
<p>
To specify a place in the script where you want to stop and examine the state of the process, you can use breakpoints. <i>Breakpoints</i> indicate the line of script you want to stop on in the application. You can then step through, step into, or step over lines of script individually to find errors. Breakpoints show up as red octagons to the left of a line of script in Source view.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To debug client scripts in Microsoft<sup>®</sup> Internet Explorer, you must be using Internet Explorer 4.0 and debugging must be enabled. For details, see the Internet Explorer documentation.</p>
<p class=label>
<b>To set breakpoints</b>
<ol>
<li>
Open the .htm file and select <b>Source view</b>.<br><br></li>
<li>
Place the cursor in the line of script you want to set a breakpoint in.<br><br></li>
<li>
From the <b>Debug</b> menu, choose <b>Insert Breakpoint</b>.<p class=tl>
A red octagon appears to the left of the line of script.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can also set or remove a breakpoint by placing the cursor in a line of script and pressing F9.</p></li>
</ol>
<p class=label>
<b>To launch the debugger</b>
<ol>
<li>
In the <b>Project Explorer</b>, right-click the .htm file and select <b>Set As Start Page</b>.<br><br></li>
<li>
Launch Internet Explorer 4.0 and load the .htm page into the browser.<br><br></li>
<li>
From the <b>Debug</b> menu in Visual InterDev, choose <b>Processes</b>.<p class=tl>
The <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csrgnProcessDialogBox">
</object><a href=JavaScript:alink_4.Click()>Processes</a> dialog box appears.</P></li>
<li>
In the <b>Process</b> area, select <b>Microsoft Internet Explorer,</b> and then select <b>Attach</b>.<p class=tl>
Microsoft Internet Explorer and your machine name appear in the <b>Debugged Processes</b> area.</P></li>
<li>
In Internet Explorer, enter a password and choose <b>Submit</b>.</li>
</ol>
<p>
The script executes until Internet Explorer reaches the breakpoint. When Internet Explorer reaches the breakpoint, it stops and displays the source script in Source view.</p>
<p>
A yellow arrow superimposed over the breakpoint icon indicates the line of script where the debugger stopped.</p>
<p>
For more information, see <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csdlgChooseBreakpointsDialogBoxC">
</object><a href=JavaScript:alink_5.Click()>Breakpoints Dialog Box</a> or <a href="vihowdebuggingclientscript.htm">Debugging Client Script</a>.</p>
<h2><a name="vimscsteppingthroughlinesofscript"></a>Stepping Through Lines of Script</h2>
<p>
To execute script one line at a time, you can use Step Into. After stepping through each line, you can view the effects of the statement by looking at the page in Internet Explorer.</p>
<p class=label>
<b>To step into lines of script</b>
<ol>
<li>
Open the .htm file in <b>Source</b> view and set a breakpoint at the following line of script:<pre><code>&lt;FORM NAME="frm1" METHOD="Post" ACTION="Process.asp" OnSubmit="return validatePassword()"&gt;
</code></pre>
<p>
<img src="vi4tv71.gif" border=0></P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When you place a breakpoint in the line of HTML above, you are actually specifying that the script stop executing when you click the Submit button, <code>OnSubmit="return validatePassword()"</code>.</p></li>
<li>
Launch the debugger.<br><br></li>
<li>
Enter a two-character password and choose <b>Submit</b>.<p>
<img src="vi4tv72.gif" border=0></P><p class=tl>
Internet Explorer reaches the breakpoint and switches to <b>Source</b> view. A yellow arrow appears superimposed over the breakpoint icon.</P></li>
<li>
From the <b>Debug</b> menu, choose <b>Step Into,</b> and then choose <b>Step Into</b> a second time.<p class=tl>
The following line of script is highlighted:</P><pre><code>alert("You entered " + password);
</code></pre>
</li>
<li>
From the <b>Debug</b> menu, choose <b>Step Into</b> again.<p>
<img src="vi4tv73.gif" border=0></P><p class=tl>
Internet Explorer executes the alert script and displays the message box.</P></li>
<li>
Choose <b>OK</b>.<p class=tl>
Internet Explorer reaches the next line of script and switches to <b>Source</b> view.</P></li>
</ol>
<p>
You can continue stepping into lines of script and view the results in Internet Explorer.</p>
<p>
To execute procedures in script as a single unit, you can use Step Over. Step Over allows you to skip a procedure or function and step through the next procedure or function.</p>
<p>
After stepping over a procedure, you can view the effects of the procedure by looking at the page in Internet Explorer.</p>
<p class=label>
<b>To step over lines of script</b>
<ol>
<li>
Open the .htm file in <b>Source</b> view and set a breakpoint at the following line of script:<pre><code>&lt;FORM NAME="frm1" METHOD="Post" ACTION="Process.asp" OnSubmit="return validatePassword()"&gt;
</code></pre>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When you place a breakpoint in the line of HTML above, you are actually specifying that the script stop executing when you click the Submit button, <code>OnSubmit="return validatePassword()"</code>.</p></li>
<li>
Launch the debugger.<br><br></li>
<li>
Enter a three-character password and choose <b>Submit</b>.<p class=tl>
Internet Explorer reaches the breakpoint and switches to Source view. A yellow arrow appears superimposed over the breakpoint icon.</P></li>
<li>
From the <b>Debug</b> menu, choose <b>Step Over</b>.<br><br></li>
<li>
Choose <b>OK</b> in each alert message.<p class=tl>
Internet Explorer executed the following script as a procedure unit:</P><pre><code>password = document.frm1.txtPassword.value;
//debugger;
alert("You entered " + password);
if (password.length &lt; 4){
alert("You must enter 4 characters or more!");
document.frm1.txtPassword.select();
return false;
</code></pre>
</li>
</ol>
<p>
Internet Explorer reaches the line of script after the procedure unit and switches back to Source view. For more information, see <a href="viovrdebuggingyourpages.htm">Debugging Your Pages</a> and <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csconSteppingThroughCodeToTraceExecution">
</object><a href=JavaScript:alink_6.Click()>Stepping Through Code to Trace Execution</a>.</p>
<h2><a name="vimscchangingvalueofvariable"></a>Changing the Value of a Variable</h2>
<p>
You can assign variables in your script as you debug. You change the value of a variable from the Immediate window. When Internet Explorer reaches a breakpoint and switches to Source view, you can then change the value of a variable and view the results in the Locals window.</p>
<p class=label>
<b>To change the value of a variable</b>
<ol>
<li>
Open the .htm file in <b>Source</b> view and set a breakpoint at the following line of script:<pre><code>&lt;FORM NAME="frm1" METHOD="Post" ACTION="Process.asp" OnSubmit="return validatePassword()"&gt;
</code></pre>
</li>
<li>
Launch the debugger.<br><br></li>
<li>
Enter a three-character password and choose <b>Submit</b>.<p class=tl>
Internet Explorer reaches the breakpoint and switches to <b>Source</b> view. A yellow arrow appears superimposed over the breakpoint icon.</P></li>
<li>
From the <b>Debug</b> menu in Visual InterDev, choose <b>Step Into</b>.<br><br></li>
<li>
From the <b>View</b> menu, select <b>Debug Windows,</b> and then select <b>Immediate</b>.<br><br></li>
<li>
In the <b>Immediate</b> window, type the following:<pre><code>password="test"
</code></pre>
</li>
<li>
Press <b>Enter</b>.<br><br></li>
<li>
From the <b>View</b> menu, select <b>Debug Windows,</b> and then select <b>Locals</b>.<p>
<img src="vi4tv81.gif" border=0></P><p class=tl>
The <b>Locals</b> window displays the new value of the variable you entered in the <b>Immediate</b> window.</P></li>
</ol>
<p>
For more information, see <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csconExecutingCommandsEvaluatingExpressionsInImmediateWindow">
</object><a href=JavaScript:alink_7.Click()>Executing Commands and Evaluating Expressions in the Immediate Window</a> and <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csconViewingLocalVariablesInLocalAutoWindows">
</object><a href=JavaScript:alink_8.Click()>Viewing Local Variables in the Locals Window</a>.</p>
</BODY>
</HTML>
