<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Getting Values from the Current Record</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vihowgettingvaluesincurrentrecord"></a>Getting Values from the Current Record</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vihowGettingValuesInCurrentRecord_C">
</object></p>
<p>
By default, when the page runs, the recordset script object opens the table or executes the query specified in its data binding properties, and then creates a recordset. A pointer is placed at the first record in the recordset, which becomes the current record.</p>
<p>
To display data, you need to get the values from the current record. If you are working with design-time controls and have established data binding for them, the controls are automatically updated to reflect database values.</p>
<p>
However, if you are working with non-data-bound controls, you must copy values from the current record to the control. Values from the current record are available in the recordset's fields collection.</p>
<p class=label>
<b>To get values from the current record</b>
<ul type=disc>
<li>
Call the <a href="viprogetvaluemethod.htm">getValue</a> method for the fields collection and specify which field you want. For example, the following statement extracts the value of the field "Name" from the fields collection of a recordset object called <code>rsEmployeeList</code>:<pre><code>name = rsEmployeeList.fields.getValue("Name")
</code></pre>
</li>
</ul>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;A good time to get the values from the current record is in a handler for the recordset's <a href="viproonrowenterevent.htm">onrowenter</a> event.</p>
<p class=tl>
After getting a value, you typically display it in a control such as a textbox or label control. For example, the following script shows how you would display values from the current record in a set of textbox script objects called txtName, txtAddress, and so on.</P><pre><code>txtName.value = rsEmployeeList.fields.getValue("Name")
txtAddress.value = rsEmployeeList.fields.getValue("Address")
txtCity.value = rsEmployeeList.fields.getValue("City")
areaCode = rsEmployeeList.fields.getValue("AreaCode")
phone = rsEmployeeList.fields.getValue("Phone")
txtPhone.value = areaCode &amp; " " &amp; phone
</code></pre>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>You can only copy information from the recordset to a control if the control and recordset use the same target scripting platform. For more details, see <a href="viconthescriptingobjectmodel.htm">The Scripting Object Model</a> and <a href="vihowcreatingformswithdesigntimecontrols.htm">Creating Forms with Design-Time Controls</a>.</p>
<p>
If you are displaying data in editable controls — such as textboxes — users can change the data. To save their changes and write them to the database, see <a href="vihowupdatingrecords.htm">Updating Records</a>.</p>
</BODY>
</HTML>
