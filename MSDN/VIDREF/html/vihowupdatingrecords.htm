<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Updating Records</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vihowupdatingrecords"></a>Updating Records</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vihowUpdatingRecords_C">
</object></p>
<p>
The <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="victlRecordsetControl">
</object><a href=JavaScript:alink_2.Click()>Recordset control</a> includes features that make it easy for you to allow users to update the current record in a recordset. For example, if you use a <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="victlRecordsetNavBarControl">
</object><a href=JavaScript:alink_3.Click()>RecordsetNavBar control</a> on your page, you can set an option that automatically updates the current record with user changes when a user navigates to another record.</p>
<p>
Not all recordsets allow changes to be written to the database. The Recordset object's cursor type must be set to Keyset or Dynamic. You must also have permission to update the database. Finally, queries can produce recordsets that do not contain sufficient information to allow updates. For details, see <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvconDeterminingWhenQueryResultsCanBeUpdated">
</object><a href=JavaScript:alink_4.Click()>Determining When Query Results Can Be Updated</a>.</p>
<p class=label>
<b>To enable automatic navigation updates</b>
<ul type=disc>
<li>
Set the RecordsetNavBar control's <a href="viproupdateonmovepropertydtc.htm">updateOnMove</a> property to True.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Setting this option to True causes the recordset to be updated each time the user navigates, even if no changes have been made. If you anticipate that users will seldom make changes, you might want to use a strategy with less overhead.</p></li>
</ul>
<p>
If you are working with data-bound design-time controls, they automatically copy their values to the current record before the update is made. However, if you are working with a control that is not a data-bound design-time control, you must manually update the current record before the update is made.</p>
<p class=label>
<b>To set values in the current record</b>
<ul type=disc>
<li>
Call the <a href="viprosetvaluemethod.htm">setValue</a> method for the <a href="viprofieldsproperty.htm">fields</a> collection and specify which field you want. You specify the field to update and the value.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;A good time to get the values from the current record is in a handler for the recordset's <a href="viproonbeforeupdateevent.htm">onbeforeupdate</a> event.</p><p class=tl>
For example, the following statement sets the <code>Name</code> field of the current record to the value of a textbox called <code>Name</code>:</P><pre><code>rsEmployeeList.fields.setValue("Name", txtName.value)
</code></pre>
</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can only copy from a control to the recordset if the control and recordset use the same target scripting platform. For more details, see <a href="viconthescriptingobjectmodel.htm">The Scripting Object Model</a> and <a href="vihowcreatingformswithdesigntimecontrols.htm">Creating Forms with Design-Time Controls</a>.</p>
<p>
You can also update records in script. The basic procedure is to call a method that writes the current record to the database.</p>
<p class=label>
<b>To update records in scripts</b>
<ol>
<li>
Be sure there is a Recordset control on your page. For details, see <a href="vihowgettingrecords.htm">Getting Records</a>. Note the Recordset control's name.<br><br></li>
<li>
If you have controls on the page that are not data-bound design-time controls, copy their values into the current record as described in the preceding procedure.<br><br></li>
<li>
After you have finished setting all the values you need in the current record, call the <a href="viproupdaterecordmethod.htm">updateRecord</a> method.</li>
</ol>
<p>
The following example shows a handler for a Save button's <a href="viproonclickevent.htm">onclick</a> event, which saves the current record to the database.</p>
<pre><code>Sub btnSave_onclick
 &nbsp; rsEmployeeList.updateRecord
End sub
</code></pre>
<p>
The following example shows the same procedure, but copies values from non-data-bound controls to the current record before saving it.</p>
<pre><code>Sub btnSave_onclick
 &nbsp; ' Copying data to the current record is required only for 
 &nbsp; ' controls that are not data-bound design-time controls
 &nbsp; rsEmployeeList.fields.setValue("Name", txtName.value)
 &nbsp; rsEmployeeList.fields.setValue("Insured", chkInsured.value)
 &nbsp; rsEmployeeList.fields.setValue("LastUpdate", date)
 &nbsp; rsEmployeeList.updateRecord
End sub
</code></pre>
<p>
To help you trap errors when updating a recordset, you can write handlers for the recordset object's <a href="viproonbeforeupdateevent.htm">onbeforeupdate</a> and <a href="viproonafterupdateevent.htm">onafterupdate</a> events. Typically you write a handler for the onbeforeupdate event to make sure that data in the current record is correct. You can use the onafterupdate event to determine whether the update was successful.</p>
<p>
For more information about writing event handlers for design-time controls, see <a href="vihowwritingscriptforscriptobjects.htm">Writing Scripts for Script Objects</a>.</p>
</BODY>
</HTML>
