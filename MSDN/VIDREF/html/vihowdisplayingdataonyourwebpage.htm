<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Data on Your Web Page</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vihowdisplayingdataonyourwebpage"></a>Displaying Data on Your Web Page</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vihowDisplayingDataOnYourWebPage_C;vihowDisplayingDataOnYourWebPageC">
</object></p>
<p>
Displaying data is easy using Microsoft<sup>®</sup> Visual InterDev™. You can connect to a database, specify the set of records to display, and display the records by using data-bound design-time controls, or you can display data directly using script. You can also display data in a grid, showing multiple records from a recordset.</p>
<p class=label>
<b>To display data using a data-bound control</b>
<ol>
<li>
Create a data environment Command object that specifies a set of records from a database. For details, see <a href="vihowgettingrecords.htm">Getting Records</a>.<br><br></li>
<li>
Open an ASP or HTML page in the editor.<br><br></li>
<li>
Drag the Command object from the <b>DataEnvironment</b> folder to the page. This creates a Recordset control on the page.<br><br></li>
<li>
Drag one or more fields from the Command object to the page.<p class=tl>
The fields are displayed under the Command object in the <b>DataEnvironment</b> folder.</P><p class=tl>
Each dragged field creates a data-bound control that will display the data from that field in the recordset. Text and numeric fields create <a href="victltextboxcontrol.htm">Textbox</a> controls. Yes/No or True/False (Boolean) fields create <a href="victlcheckboxcontrol.htm">Checkbox</a> controls. For more information, see <a href="viconthedataenvironment.htm">The Data Environment</a>.</P></li>
</ol>
<p>
You can easily provide navigation (moving from record to record) among the records you display on your Web page with the RecordsetNavbar control.</p>
<p class=label>
<b>To provide navigation among records</b>
<ol>
<li>
Open the ASP or HTML page in the editor.<br><br></li>
<li>
Drag the RecordsetNavbar control from the <b>Toolbox</b> onto the page.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If the RecordsetNavbar control is not shown in the <b>Toolbox</b>, right-click on the <b>Toolbox</b>, choose <b>Customize Toolbox</b>, and add the RecordsetNavbar control.</p><p class=tl>
The control is inserted onto your ASP or HTML page.</P></li>
<li>
Right-click the control and click <b>Properties</b> to open its property pages.<br><br></li>
<li>
Set the <b>Recordset</b> property of the control to the name of a Recordset control whose records are displayed on the page.</li>
</ol>
<p>
By default, the RecordsetNavbar control provides Move to First, Next, Previous, and Move to Last buttons. You can use these buttons to move among the records displayed on the page. You can also customize the functionality of these buttons by modifying the script that they create. For more information, see <a href="victlrecordsetnavbarcontrol.htm">RecordsetNavbar Control</a>.</p>
<h2>Navigating Using Script</h2>
<p>
You can move between records in the recordset by calling navigation methods in the recordset script object. When you move, the record you move to becomes the current record.</p>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;When you navigate to another record, the current record is not automatically saved. Be sure that you have copied data to the current record and saved the record before you call a navigation method. For details, see <a href="vihowupdatingrecords.htm">Updating Records</a>.</p>
<p class=label>
<b>To navigate using script</b>
<ul type=disc>
<li>
Call one of these methods of the recordset script object: <a href="vipromovenextmethod.htm">moveNext</a>, <a href="vipromovepreviousmethod.htm">movePrevious</a>, <a href="vipromovefirstmethod.htm">moveFirst</a>, <a href="vipromovelastmethod.htm">moveLast</a>, <a href="vipromoveabsolutemethod.htm">moveAbsolute</a>, or <a href="vipromovemethod.htm">move</a>.<p class=tl>
For example, the following shows the handler you might write for a "Next" button.</P><pre><code>Sub btnNext_onclick
 &nbsp; rsEmployeeList.moveNext
End Sub
</code></pre>
</li>
</ul>
<p>
If you want to perform a procedure based on navigation, you can write handlers for the <a href="viproonrowenterevent.htm">onrowenter</a> and <a href="viproonrowexitevent.htm">onrowexit</a> events. For example, perhaps your application does not simply display only the contents of fields. Instead, you want to use a single text box to display a combination of first and last names. </p>
<p>
To do this, you can write a handler for the onrowenter handler that gets values from the recordset, concatenates them, and puts them in a text box. The handler might look like this:</p>
<pre><code>Function rsEmployeeList_onrowenter()
 &nbsp; firstName = rsEmployeeList.fields.getValue("lastName")
 &nbsp; lastName = rsEmployeeList.fields.getValue("firstName")
 &nbsp; txtFullName.value = lastName &amp; ", " &amp; firstName
End function
</code></pre>
<p>
You can also create a data grid on your Web page using the <a href="victlgridcontrol.htm">Grid design-time control</a>. For information on creating a Grid control, see <a href="vismpdataboundgrid.htm">Data-bound Grid Sample</a> and <a href="viovrgridpropertiesdialogbox.htm">Grid Properties Dialog Box</a>.</p>
</BODY>
</HTML>
