<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Shopping Cart Sample</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vismpshoppingcart"></a>Shopping Cart Sample</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vismpShoppingCart_C;vismpShoppingCartC">
</object>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vismpShoppingCart_T;vismpShoppingCartT">
</object></p>
<p>
This sample displays a list of products and allows the user to select items to be placed into a "Shopping Cart" where they are held until the order is complete. Items can be removed and quantities can be changed. </p>
<h2>Behind the Scenes</h2>
<p>
This sample uses the following ten files: 
<ul type=disc>
<li>
<B><b>ShopCart.htm</b></B> sets the HTML frameset.<br><br></li>
<li>
<B><b>SCMain.htm</b></B> is the default page for the "Main" frame.<br><br></li>
<li>
<B><b>SCMenu.htm</b></B> displays the product search options.<br><br></li>
<li>
<B><b>Products.asp</b></B> displays the results of the search and allows an item to be selected.<br><br></li>
<li>
<B><b>AddCart.asp</b></B> displays information about the item selected from Products.asp and allows a quantity to be set.<br><br></li>
<li>
<B><b>SCUpdate.asp</b></B> saves the selected item and quantity into the ShopCart table.<br><br></li>
<li>
<B><b>ViewCart.asp</b></B> displays the current contents of the shopping cart.<br><br></li>
<li>
<B><b>SCDelete.asp</b></B> deletes a single item from the cart.<br><br></li>
<li>
<B><b>SCClear.asp</b></B> clears the entire contents of the cart.<br><br></li>
<li>
<B><b>SavOrder.asp</b></B> moves the contents from the ShopCart table to the Orders table as a completed order.</li>
</ul>
<p>
SCMenu.htm displays a drop-down box listing the different product categories to search for. After selecting a category and pressing the "Search" button, the Products.asp file displays the selected category of products in the "Main" frame.</p>
<p>
Products.asp uses the <a href="victlrecordsetcontrol.htm">Recordset design-time control</a> to query the Products table for items matching the selected category. The contents are displayed in an HTML table using the <a href="victlgridcontrol.htm">Grid design-time control</a>. The product name links to the AddCart.asp file to give more information about the selected product.</p>
<p>
AddCart.asp displays the product name, quantity per unit, and the price of each unit. A Recordset control is used to determine if the selected item is already in the shopping cart. The intQuantity variable is set to the appropriate value if the item is already in the cart:</p>
<pre><code>function DTCRecordset1_ondatasetcomplete() {
      if (DTCRecordset1.getCount() == 1) {
         intQuantity = DTCRecordset1.fields.getValue("Qty");
         InCart = true;
      }
</code></pre>
<p>
A text box is displayed to allow the user to adjust the number of units to add to the shopping cart. If this item is already in the cart, the user is prompted to change the quantity of items already in the cart:</p>
<pre><code>&lt;%If InCart then%&gt;
   You currently have &lt;b&gt;&lt;%=intQuantity%&gt;&lt;/b&gt; in your cart.&lt;br&gt;
   Please enter the new quantity: &lt;input NAME="intQTY" TYPE="Text" VALUE="&lt;%=intQuantity%&gt;" SIZE="5"&gt;&lt;br&gt;
   &lt;input TYPE="Hidden" NAME="InCart" VALUE="1"&gt;
&lt;%Else%&gt;
   Units to order: &lt;input NAME="intQTY" TYPE="Text" VALUE="&lt;%=intQuantity%&gt;" SIZE="5"&gt;&lt;br&gt;
   &lt;input TYPE="Hidden" NAME="InCart" VALUE="0"&gt;
&lt;%End If%&gt;
</code></pre>
<p>
After the quantity is set, the information is posted to SCUpdate.asp to save the information into the ShopCart table. After saving the information, SCUpdate.asp redirects the user to the ViewCart.asp to view the shopping cart contents.</p>
<p>
ViewCart.asp uses the Recordset and Grid controls to output the contents of the shopping cart for this user. The product name, quantity ordered, price per unit and the total charge for each item are displayed in an HTML table generated by the Grid control. </p>
<p>
Next to each item there are two links that allow the user to edit the item (change it's quantity) or remove the item from the cart. If the item is to be edited, the user is redirected back to the AddCart.asp to change the quantity. If the item is to be deleted, the link posts the information to SCDelete.asp.</p>
<p>
SCDelete.asp uses the Recordset control to select the appropriate record from the ShopCart table and delete it. After the record is deleted, this ASP redirects back to the ViewCart.asp page to see the current status of the shopping cart.</p>
<p>
There are two other buttons on the bottom of the page when viewing the contents of the shopping cart with ViewCart.asp. The first button will clear the entire contents of the cart by calling SCClear.asp. SCClear.asp will then delete all the records for this user and redirect back to the main page to start all over again. The second button on the bottom of the page will call SavOrder.asp to finalize the order.</p>
</BODY>
</HTML>
