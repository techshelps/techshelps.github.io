<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Universal Data Access Q&amp;A</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="universaldataaccessqa"></a>Universal Data Access Q&amp;A</h1>
<p>
February 98</p>
<h1>Universal Data Access</h1>
<p>
<b>Q. What is Universal Data Access?</b></p>
<p>
A. Universal Data Access is the Microsoft® strategy for providing access to all types of information across the enterprise. It provides high-performance access to a variety of information sources, including relational data and non-relational data, including mainframe ISAM/VSAM and hierarchical databases, email and file system stores, text, graphical, and geographical data, and more.</p>
<p>
<b>Q. What role does OLE DB play in Universal Data Access?</b></p>
<p>
A. OLE DB is the Microsoft strategic low-level interface that enables Universal Data Access.</p>
<p>
<b>Q. What’s the difference between Universal Data Access and ODBC?</b></p>
<p>
A. Universal Data Access provides a common way to access all types of data, both relational and non-relational. ODBC provides a common way to access relational data.</p>
<p>
<b>Q. How does Universal Data Access differ from what Oracle, Informix, IBM, and others are offering?</b></p>
<p>
A. These vendors offer some form of Universal Storage, which requires the movement of all data into a single database, not just once but on an ongoing basis. All access to the data is then tied to the database and to that vendor. Universal Data Access offers access to data where it lives when the user wants it. Of course, you can get to the data in these vendors’ databases via OLE DB. </p>
<p>
<b>Q. Does Universal Data Access get me to my mainframe data? </b></p>
<p>
A. Several vendors are currently supplying or will supply OLE DB providers to access VSAM, AS/400, HP/UX, IBM AIX, and OpenVMS data. These vendors include ASNA, IBM, ISG, MetaWise, and Microsoft. </p>
<p>
<b>Q. Where does Microsoft® SQL Server™ fit into the picture?</b></p>
<p>
A. The next version of SQL Server will use OLE DB as its native interface and will be able to query OLE DB data sources as well. This will allow distributed joins between SQL Server and other OLE DB data sources, including non-relational data. </p>
<p>
<b>Q. What is the difference between data consumers, data providers, and service components?</b></p>
<p>
A. Data consumers are applications or components that consume data via ADO or OLE DB. Data providers expose data via OLE DB for consumers to access. Service components provide extended functionality that is not implemented by the data provider.</p>
<p>
<b>Q. Does Microsoft currently supply any data providers?</b></p>
<p>
A. The OLE DB Provider for ODBC is a data provider that allows data consumers to access ODBC data via OLE DB. The Microsoft® Data Access Components 2.0 contain OLE DB providers for SQL Server, Oracle and Microsoft® Jet. </p>
<p>
<b>Q. Where do I find more information on Universal Data Access?</b></p>
<p>
A. Visit the Universal Data Access web site at <u>http://www.microsoft.com/data/</u>. </p>
<h1>OLE DB</h1>
<p>
<b>Q. What is OLE DB?</b></p>
<p>
A. OLE DB is the Microsoft strategic low-level interface to all kinds of data throughout the enterprise. It is an open specification for accessing both relational and non-relational data.</p>
<p>
<b>Q. What’s the difference between ADO and OLE DB?</b></p>
<p>
A. OLE DB is the underlying system service, which enables universal access to any data. ADO is a high-level interface, which simplifies development against OLE DB data sources.</p>
<p>
<b>Q. What’s the difference between OLE DB and ODBC?</b></p>
<p>
A. OLE DB provides a common way to access all types of data, both relational and non-relational. ODBC provides a common way to access relational data.</p>
<p>
<b>Q. Where does ODBC fit in?</b></p>
<p>
A. ODBC in the short and medium term is the best way to access a broad range of relational data due to the high number of available drivers. An integral part of OLE DB is the OLE DB Provider for ODBC, which enables OLE DB consumers to talk to ODBC drivers and data sources.</p>
<p>
<b>Q. Who in the industry backs Universal Data Access?</b></p>
<p>
A. A variety of companies are either already providing or have committed to providing OLE DB components, including ASNA, IBM, ISG, InterSolv, MetaWise, SAS, and Sequiter. In addition, companies such as Computer Associates, Digital Equipment, and Tandem Computers have licensed OLE DB service components from ISG for inclusion in their databases.</p>
<p>
<b>Q. How is performance with Universal Data Access?</b></p>
<p>
A. OLE DB is designed for the best possible performance by using the fewest possible layers and by allowing applications to use only the components they need to access data. With well-written data providers, performance should be excellent. </p>
<p>
<b>Q. Where do I find more information on OLE DB?</b></p>
<p>
A. Visit the Universal Data Access web site at <u>http://www.microsoft.com/data/</u>. </p>
<h1>ADO</h1>
<p>
<b>Q. What is ADO?</b></p>
<p>
A. ADO is Microsoft’s strategic, high-level interface to all kinds of data. It is an easy-to-use application level interface to OLE DB.</p>
<p>
<b>Q. What’s the difference between ADO and OLE DB?</b></p>
<p>
A. OLE DB enables universal access to any data. ADO makes it easy for developers to program. Since ADO is built on top of OLE DB, it benefits from the rich universal data access infrastructure we are building.</p>
<p>
<b>Q. What’s the difference between ADO, RDO, and DAO?</b></p>
<p>
A. ADO is an object model for accessing all types of data via OLE DB. RDO is an object model for accessing relational data via ODBC. DAO is an object model for accessing local or SQL data via Jet. All are COM interfaces and can be used from a variety of tools, including Visual Basic, Access, and Office. </p>
<p>
<b>Q. Why do I need ADO if I already use RDO/DAO?</b></p>
<p>
A. First, ADO can be used to access all types of data, whereas RDO and DAO only access relational data. Second, the ADO object model is not as complex as that of RDO or DAO and therefore is easier to use with less coding required. Third, ADO combines the best features of, and will eventually replace, RDO and DAO. Finally, ADO is the standard data access object model across Microsoft tools, including Visual Basic®, Microsoft® Access, Microsoft® Office, and Microsoft® Internet Information Server. </p>
<p>
<b>Q. What’s new in ADO 2.0?</b></p>
<p>
A. ADO 2.0 includes several exciting new features, including:
<ul type=disc>
<li>
Data shaping for displaying complex data relationships<br><br></li>
<li>
Persistent recordsets, to support offline users<br><br></li>
<li>
Events, for tighter integration between clients and servers<br><br></li>
<li>
Distributed transactions<br><br></li>
<li>
Integration with Visual Studio tools such as the Data Environment</li>
</ul>
<p>
<b>Q. How do I get ADO?</b></p>
<p>
A. ADO 2.0 ships with Internet Explorer 4.0, Internet Information Server 4.0, and the 6.0 version of each Microsoft® Visual Studio™ tool. ADO also ships with the OLE DB SDK, the Microsoft Data Access Components 2.0, and the Data Access SDK (all available for download from the Microsoft Web site).</p>
<p>
<b>Q. How do I use ADO?</b></p>
<p>
A. ADO, RDO, and DAO are all Automation servers that provide object models for developers. Therefore, their usage is very similar. The main ADO objects are Connections, Commands, and Recordsets. These have a wide variety of properties and methods that are used to access and manipulate data. </p>
<p>
<b>Q. I know RDO/DAO pretty well. Will I find ADO easy to use?</b></p>
<p>
A. ADO looks very similar to RDO and DAO because Microsoft took the best features of both models and put them together in one programming model. </p>
<p>
<b>Q. When should I use ADO?</b></p>
<p>
A. ADO is the standard data access object model across Microsoft tools. Therefore, if you are building new applications you should use ADO unless there are features you need today that are found only in RDO or DAO. </p>
<p>
<b>Q. Where do I find more information on ADO?</b></p>
<p>
A. Visit the Universal Data Access web site at <u>http://www.microsoft.com/data/. </u></p>
<h1>Remote Data Service</h1>
<p>
<b>Q. What is the Remote Data Service?</b></p>
<p>
A. RDS is a feature of ADO and makes full-featured, data-centric Web applications a reality by combining data manipulation of retrieved data, efficient client-side caching, and support for data-aware Microsoft® ActiveX® controls with an elegant and powerful programming model.</p>
<p>
<b>Q. What happened to the Advanced Data Connector? Why did the name change from Advanced Data Connector to Remote Data Service?</b></p>
<p>
A. ADC has been integrated with ADO to provide date remoting within the same programming model as ADO. To clarify the relationship of ADC to ADO, ADC is now known as the Remote Data Service (RDS).</p>
<p>
<b>Q. Where do I find more information on the Remote Data Service?</b></p>
<p>
A. Visit the Universal Data Access web site at <u>http://www.microsoft.com/data/. </u></p>
<h1>Microsoft Data Access Components</h1>
<p>
<b>Q. What are the Microsoft Data Access Components?</b></p>
<p>
A. Microsoft Data Access Components<b> </b>is a toolkit that includes key technologies to enable Universal Data Access. MDAC consists of the latest versions of ADO, OLE DB, and ODBC, which are now released and documented on a synchronized schedule.</p>
<p>
<b>Q. What is the difference between the Microsoft Data Access Components and Universal Data Access?</b></p>
<p>
A. The Microsoft Data Access Components enable Universal Data Access. They are the key technologies that make Universal Data Access possible.</p>
<p>
<b>Q. Is this another new technology?</b></p>
<p>
A. No. This is just a name for the set of data access components that Microsoft ships.</p>
<p>
<b>Q. How do I get the Microsoft Data Access Components?</b></p>
<p>
A. Microsoft Data Access Components 2.0 is available for free from the Microsoft Web site, and is supported for use with any Microsoft tools, applications, and Internet products running on Windows® 95 and Windows NT® 4.0.</p>
<p>
<b>Q. What’s the relationship between the Microsoft Data Access Components and Visual Studio?</b></p>
<p>
A. The Microsoft Data Access Components can be used with any of the Visual Studio tools to build high performance database solutions. </p>
<p>
<b>Q. What types of applications can I build today with Microsoft Data Access Components?</b></p>
<p>
A. All types of applications that access data across the organization, from the desktop to the enterprise, whether it is relational or non-relational. </p>
<p>
<b>Q. Where do I find more information on the Microsoft Data Access Components?</b></p>
<p>
A. Visit the Universal Data Access web site at <u>http://www.microsoft.com/data/</u>. </p>
</font></BODY>
</HTML>
