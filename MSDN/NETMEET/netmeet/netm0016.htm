<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Conference Object</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT>
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/netm0015.htm','/netm0000.htm','/netm0010.htm','/index.htm','/netm0017.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad='ShowButtons()' TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="comobj2_000a000106000000">Conference Object</A></H2>
<BR CLEAR=ALL>
<P>The Conference object manages a conference.

<P>The Conference object is instantiated with the <A HREF="netm0013.htm#comobj2_000a000103010300" TARGET="TEXT">INmManager::CreateConference</A> method.
<P>An application may instantiate any number of Conference objects, but only one may be active at any given time. The rest must be idle. An idle conference has no members and no channels, while an active conference will always have at least one member.
<P>Successful completion of the <A HREF="netm0013.htm#comobj2_000a000103010200" TARGET="TEXT">INmManager::CreateCall</A>, <A HREF="netm0016.htm#comobj2_000a000106010b00" TARGET="TEXT">INmConference::Host</A>, or <A HREF="netm0015.htm#comobj2_000a000105010100" TARGET="TEXT">INmCall::Accept</A> methods will result in an NM_CONFERENCE_ACTIVE state for the Conference object.
<P>Use the <A HREF="netm0026.htm#comobj2_000a000110010000" TARGET="TEXT">IEnumNmConference Interface</A> interface to navigate through the currently instantiated Conference objects.

<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">INmConference Interface</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106020000" TARGET="TEXT">INmConferenceNotify Interface</A>
</FONT></TD></TABLE>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0010.htm" TARGET="TEXT">Back to COM Object Reference</A>


<H3><A NAME="comobj2_000a000106010000">INmConference Interface</A></H3>
<P>This interface manages channels and members and also maintains conference-specific information.
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010100" TARGET="TEXT">CreateDataChannel</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010200" TARGET="TEXT">EnumChannel</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010300" TARGET="TEXT">EnumMember</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010400" TARGET="TEXT">GetChannelCount</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010500" TARGET="TEXT">GetID</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010600" TARGET="TEXT">GetMemberCount</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010700" TARGET="TEXT">GetName</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010800" TARGET="TEXT">GetNmchCaps</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010900" TARGET="TEXT">GetState</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010a00" TARGET="TEXT">GetTopProvider</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010b00" TARGET="TEXT">Host</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010c00" TARGET="TEXT">IsHosting</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010d00" TARGET="TEXT">LaunchRemote</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106010e00" TARGET="TEXT">Leave</A>
</FONT></TD></TABLE>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>


<H4><A NAME="comobj2_000a000106010100">INmConference::CreateDataChannel</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT CreateDataChannel(<br>    [out] INmChannelData **ppChannel,<br>    [in] REFGUID rguid);<br></FONT></PRE>
<P>Provides a pointer to an <A HREF="netm0019.htm#comobj2_000a000109010000" TARGET="TEXT">INmChannelData Interface</A> on a new Channel object. This Data Channel, identified by your application's globally unique identifier (GUID), can be used to transmit information between instances of your application running on each conference participant's computer. 


<UL><LI>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>ppChannel</I> is an invalid pointer.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>rguid</I> parameter contains an invalid value.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The channel cannot be created, or internal resources are not available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Memory could not be allocated to service the request.
</FONT></TD></TR></TABLE>
</UL>
<DL><DT><I>ppChannel</I>
 </DT><DD>Pointer to a pointer to the <A HREF="netm0019.htm#comobj2_000a000109010000" TARGET="TEXT">INmChannelData Interface</A> on the new Channel object.
</DD><DT><I>rguid</I>
 </DT><DD>GUID of the Data Channel.
</DD></DL>
<P>Typically, an application will have only one Data Channel and will use its own application GUID to identify the Channel. However, an application can create multiple Data Channels and identify each one with a different GUID.
<P>The <A HREF="netm0008.htm#tutorial_0009000101000000" TARGET="TEXT">Using the NetMeeting Data Channel</A> tutorial has more information on this subject.
<P>For more information on creating GUIDs, see <I>Inside OLE 2</I>, by Kraig Brockschmidt.


<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>

<H4><A NAME="comobj2_000a000106010200">INmConference::EnumChannel</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT EnumChannel(<br>    [out] IEnumNmChannel **ppEnum);<br></FONT></PRE>
<P>Returns an instance of the enumerator for the existing Channel objects in the conference. The <A HREF="netm0026.htm#comobj2_000a000110030000" TARGET="TEXT">IEnumNmChannel Interface</A> methods can be used to manipulate this enumerator.


<UL><LI>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>ppEnum</I> is an invalid pointer.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Internal resources are not available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Memory could not be allocated to service the request.
</FONT></TD></TR></TABLE>
</UL>
<DL><DT><I>ppEnum</I>
 </DT><DD>Pointer to a pointer to a Channel enumerator that can be used to enumerate all the Channels in this conference.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010300">INmConference::EnumMember</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT EnumMember(<br>    [out] IEnumNmMember **ppEnum);<br></FONT></PRE>
<P>Provides an instance of the enumerator for the Member objects in the current conference. The <A HREF="netm0026.htm#comobj2_000a000110020000" TARGET="TEXT">IEnumNmMember Interface</A> methods can be used to manipulate this enumerator.

<UL><LI>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>ppEnum</I> is an invalid pointer.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Internal resources are not available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Memory could not be allocated to service the request.
</FONT></TD></TR></TABLE>
</UL>
<DL><DT><I>ppEnum</I>
 </DT><DD>Pointer to a pointer to the member enumerator.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010400">INmConference::GetChannelCount</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT GetChannelCount(<br>    [out] ULONG *puCount);<br></FONT></PRE>
<P>Retrieves the current number of channels in the conference.

<UL><LI>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>puCount</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Internal resources are not available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Memory could not be allocated to service the request.
</FONT></TD></TR></TABLE>
</UL>
<DL><DT><I>puCount</I>
 </DT><DD>Pointer to a ULONG containing the number of channels in the conference.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010500">INmConference::GetID</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT GetID(<br>    [out] ULONG *puID);<br></FONT></PRE>
<P>Retrieves the unique identifier of the Conference object. This method will only return an identifier if the Conference object has data capabilities. 

<UL><LI>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>puID</I> pointer is invalid.
</FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_E_NO_T120_CONFERENCE </FONT></TD></TR><TR><TD></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The conference is audio and video only, or the conference is idle (waiting for others to join).
</FONT></TD></TR></TABLE>
</UL>
<DL><DT><I>puID</I>
 </DT><DD>Pointer to a ULONG that contains the returned conference identifier.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010600">INmConference::GetMemberCount</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT GetMemberCount(<br>    [out] ULONG *puCount);<br></FONT></PRE>
<P>Retrieves the current number of members in the conference.

<UL><LI>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>puCount</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Internal resources are not available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Memory could not be allocated to service the request.
</FONT></TD></TR></TABLE>
</UL>
<DL><DT><I>puCount</I>
 </DT><DD>Pointer to a ULONG containing the number of members.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010700">INmConference::GetName</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT GetName(<br>    [out] BSTR *pbstrName);<br></FONT></PRE>
<P>Retrieves the string for the conference name.

<UL><LI>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>pbstrName</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Internal resources are not available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Memory could not be allocated to service the request.
</FONT></TD></TR></TABLE>
</UL>
<DL><DT><I>pbstrName</I>
 </DT><DD>Pointer to a BSTR that receives the string containing a conference name.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010800">INmConference::GetNmchCaps</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT GetNmchCaps(<br>    [out] ULONG *puchCaps);<br></FONT></PRE>
<P>Retrieves the channel capabilities with which the Conference object was created. The capabilities define the channels for which the application will receive notifications.

<UL><LI>Returns S_OK if successful, or E_POINTER if the <I>puchCaps</I> pointer is invalid.
</UL>
<DL><DT><I>puchCaps</I>
</DT><DD>Pointer to a ULONG that identifies the channel capabilities. This can be NMCH_ALL, NMCH_NONE, or any combination of the remaining channel type constants:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NMCH_AUDIO </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Audio Channel capabilities.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NMCH_DATA </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Data Channel capabilities.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NMCH_FT </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">File Transfer Channel capabilities.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NMCH_SHARE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Application Sharing Channel capabilities.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NMCH_VIDEO </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Video Channel capabilities.
</FONT></TD></TR></TABLE>
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010900">INmConference::GetState</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT GetState(<br>    [out] NM_CONFERENCE_STATE *pState);<br></FONT></PRE>
<P>Retrieves the state of the Conference object. Though an application may have any number of Conference objects instantiated, only one Conference object may be active at any given time.


<UL><LI>Returns S_OK if successful, or E_POINTER if the <I>pState</I> pointer is invalid.
</UL>
<DL><DT><I>pState</I>
 </DT><DD>Pointer to an NM_CONFERENCE_STATE that identifies the conference state as idle (NM_CONFERENCE_IDLE) or active (NM_CONFERENCE_ACTIVE).
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010a00">INmConference::GetTopProvider</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT GetTopProvider(<br>    [out] INmMember **ppMember);<br></FONT></PRE>
<P>Retrieves the top provider, which is the member in charge of the conference.

<UL><LI>Returns S_OK if successful, or E_POINTER if the <I>ppMember</I> pointer is invalid.
</UL>
<DL><DT><I>ppMember</I>
</DT><DD>Pointer to a pointer to the <A HREF="netm0017.htm#comobj2_000a000107010000" TARGET="TEXT">INmMember Interface</A> on the top provider Member object.
</DD></DL>
<P>If the top provider leaves the conference, the conference will end.
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>

<H4><A NAME="comobj2_000a000106010b00">INmConference::Host</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT Host(void);<br></FONT></PRE>
<P>Activates a conference and makes the local user a member of the conference.

<UL><LI>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Conference is not idle.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_E_NO_T120_CONFERENCE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Conference does not have data capabilities.
</FONT></TD></TR></TABLE>
</UL>
<P>The conference must be in the idle state to be set as a host (state must be NM_CONFERENCE_IDLE).
<P>The conference must have data capabilities to be a host (must have NMCH_DATA set). For more information, see <A HREF="netm0013.htm#comobj2_000a000103010300" TARGET="TEXT">INmManager::CreateConference</A>.
<P>This method ensures that the local user will be the top provider (member in charge of the conference).
<P>This method has the same effect as choosing the "Host Meeting" menu item in NetMeeting.
<P>A hosted conference will not end when the last remote participant leaves the conference.


<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>

<H4><A NAME="comobj2_000a000106010c00">INmConference::IsHosting</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT IsHosting(void);<br> <br></FONT></PRE>
<P>Determines if the conference is being hosted by the local computer.

<UL><LI>Returns S_OK if in host mode, or S_FALSE otherwise.

</UL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010d00">INmConference::LaunchRemote</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT LaunchRemote(<br>    [in] REFGUID rguid,&#009;<br>    [in] INmMember *pMember);<br></FONT></PRE>
<P>Starts the application associated with the specified globally unique identifier (GUID) on the remote member's system.

<UL><LI>Returns S_OK if successful, or E_POINTER if <I>pMember</I> is an invalid pointer.
</UL>
<DL><DT><I>rguid</I>
 </DT><DD>GUID of the calling application.
</DD><DT><I>pMember</I>
</DT><DD>Pointer to the <A HREF="netm0017.htm#comobj2_000a000107010000" TARGET="TEXT">INmMember Interface</A> on the remote Member object.
</DD></DL>
<P>If <I>pMember</I> is NULL, NetMeeting attempts to start the remote application on all members in the conference.
<P>In most cases, each application will have one Data Channel and the same GUID will be used to identify the Data Channel and the application. In some cases, an application may have multiple Data Channels, each identified with its own GUID. In this case, the application will use one of these GUIDs as its own launching GUID.
<P>For more information, see the <A HREF="netm0008.htm#tutorial_0009000102000000" TARGET="TEXT">Remotely Launching Your Program</A> tutorial.

<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106010e00">INmConference::Leave</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT Leave(void);<br></FONT></PRE>
<P>Removes the local computer from the active conference.
<UL><LI>Returns S_OK if successful, or E_FAIL if the conference is not active, the operation failed, or internal resources are not available.
</UL>
<P>If other computers are connected to the conference through this computer, they will also be disconnected. If the local user is the top provider (member in charge of the conference), the conference will end.
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106010000" TARGET="TEXT">Back to INmConference Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H3><A NAME="comobj2_000a000106020000">INmConferenceNotify Interface</A></H3>
<P>This is an event notification sink interface for the INmConference interface. The methods in this interface are called by the Conference object interface when specific events occur.
<P>These event sink methods should be defined and implemented by the client application to respond to notifications from a Conference object. For example, the <A HREF="netm0016.htm#comobj2_000a000106020200" TARGET="TEXT">INmConferenceNotify::MemberChanged</A> method is notified when the member roster for the Conference object has changed. The client application implementation of this method could provide a display to the user informing him or her of the addition or removal of the specific member.

<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106020100" TARGET="TEXT">ChannelChanged</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106020200" TARGET="TEXT">MemberChanged</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106020300" TARGET="TEXT">NmUI</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="netm0016.htm#comobj2_000a000106020400" TARGET="TEXT">StateChanged</A>
</FONT></TD></TABLE>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>


<H4><A NAME="comobj2_000a000106020100">INmConferenceNotify::ChannelChanged</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT ChannelChanged(<br>    [in] NM_CHANNEL_NOTIFY uNotify,<br>    [in] INmChannel *pChannel);<br></FONT></PRE>
<P>Notifies the client that a channel for the conference has changed.

<UL><LI>This event sink should always return S_OK to the event source.
</UL>
<DL><DT><I>uNotify</I>
</DT><DD>Enumerated constant for the notification type. This can be one of the following:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_MEMBER_ADDED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A channel was added to the conference.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_MEMBER_REMOVED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A channel was removed from the conference.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_MEMBER_UPDATED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Information for a channel was updated.
</FONT></TD></TR></TABLE>
</DD><DT><I>pChannel</I>
</DT><DD>Pointer to the <A HREF="netm0018.htm#comobj2_000a000108010000" TARGET="TEXT">INmChannel Interface</A> on the Channel object that was updated, added to, or removed from the conference.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106020000" TARGET="TEXT">Back to INmConferenceNotify Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106020200">INmConferenceNotify::MemberChanged</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT MemberChanged(<br>    [in] NM_MEMBER_NOTIFY uNotify,<br>    [in] INmMember *pMember);<br></FONT></PRE>
<P>Notifies the client that the member roster for the conference has changed (someone has joined or left the conference or the member's capabilities has been updated).

<UL><LI>This event sink should always return S_OK to the event source.
</UL>
<DL><DT><I>uNotify</I>
</DT><DD>Enumerated constant for the notification type. This can be one of the following:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_MEMBER_ADDED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A member was added to the conference.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_MEMBER_REMOVED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A member was removed from the conference.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_MEMBER_UPDATED </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Information for a conference member was updated.
</FONT></TD></TR></TABLE>
</DD><DT><I>pMember</I>
</DT><DD>Pointer to the <A HREF="netm0017.htm#comobj2_000a000107010000" TARGET="TEXT">INmMember Interface</A> on the Member object that was updated, added to, or removed from the conference.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106020000" TARGET="TEXT">Back to INmConferenceNotify Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>
<H4><A NAME="comobj2_000a000106020300">INmConferenceNotify::NmUI</A></H4>
<PRE><FONT FACE="Courier" SIZE="2">HRESULT NmUI(<br>    [in] CONFN uNotify);<br></FONT></PRE>
<P>Receives event notification when a conference change occurs.

<UL><LI>This event sink should always return S_OK to the event source.
</UL>
<DL><DT><I>uNotify</I>
 </DT><DD>Reserved for future use.
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106020000" TARGET="TEXT">Back to INmConferenceNotify Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>

<H4><A NAME="comobj2_000a000106020400">INmConferenceNotify::StateChanged</A></H4>
<PRE><FONT FACE="Courier" SIZE="2"> HRESULT StateChanged(<br>        [in] NM_CONFERENCE_STATE uState);<br> <br></FONT></PRE>
<P>Notifies the application when the conference state has changed. 

<UL><LI>This event sink should always return S_OK to the event source.
</UL>
<DL><DT><I>uState</I>
 </DT><DD>New conference state. The state will be one of the following constants:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_CONFERENCE_ACTIVE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The conference is active. Most operations on a conference require it to be in this state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NM_CONFERENCE_IDLE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The conference is not active. It contains no members or channels. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> NM_CONFERENCE_INITIALIZING </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The conference is transitioning between the idle and active states. The application should wait for a notification that the state has changed to either waiting or active before attempting to perform any other conference operations.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> NM_CONFERENCE_WAITING </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A hosted conference with only the local member participating.
</FONT></TD></TR></TABLE>
</DD></DL>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm#comobj2_000a000106020000" TARGET="TEXT">Back to INmConferenceNotify Interface</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0016.htm" TARGET="TEXT">Back to Conference Object</A>
<P><IMG SRC="art/uparrow.gif" WIDTH="10" HEIGHT="10" ALT="Up Arrow" ><A HREF="netm0012.htm" TARGET="TEXT">Back to COM Object Listing</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<p>Last Updated: November 1, 1997
<br><A HREF="http://www.microsoft.com/isapi/redir.dll?PRD=msft&AR=copyright" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
