<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Keeping Features Accessible</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>Keeping Features Accessible</h2>

<H3><b>Glossary</b></h3>

<ul>
    <li><b>Accessibility: </b>The extent to which computers are
        easy to use and available to a wide range of users,
        including people with disabilities.</li>
</ul>

<p>The purpose of internationalizing your software is to make it
easy for as many people around the world as possible to use it.
Designing for accessibility has the same purpose&#151;and many
features that place software within reach of people with visual,
aural, cognitive, or mobility impairments also help prepare it
for localization. For example, dialog boxes with a simple design
and minimal text are easier to translate and easier for some
people with visual impairments to read. Addressing accessibility
issues in your product specification will result in a product
with a larger potential worldwide market. Just as with
internationalization, designing your product to be accessible
from the start saves you from having to redesign it
later&#151;and possibly from having to release special editions.</p>

<p>Detailed guidelines for designing accessible applications for
Microsoft Windows are published in the chapter titled
&quot;Special Design Considerations&quot; in <i>The Windows 95
SDK,</i> available through the Microsoft Developer Network.
Selected recommendations for creating applications that are both
accessible and global are listed below.</p>

<ul>
    <li>Avoid overly complex designs. They are difficult to see
        and difficult to translate.</li>
    <li>Use dialog tab controls instead of creating large dialog
        boxes. Expansive dialog boxes can cause you to run out of
        accelerator keys, which are essential to people who
        cannot use a mouse. Translations of lengthy text might
        not fit on the screen.</li>
    <li>Use color carefully. Some people with visual impairments
        have a hard time distinguishing between certain colors
        and shades. The symbolism of certain color combinations
        varies by culture. If possible, allow for customization.</li>
    <li>Display warnings or messages until the user dismisses
        them. People with visual disabilities or language
        difficulties might need extra time to read them.</li>
    <li>Draw text on bitmaps using the Win32 API. Screen-review
        utilities designed for people who are blind cannot read
        text that is part of the bitmap itself. Bitmaps with
        embedded text must be translated.</li>
    <li>Allow for customization of keyboard accelerators and
        shortcut-key combinations. Some combinations are
        difficult for users with physical impairments to type or
        are not available on all international keyboards.</li>
    <li>Use on-screen keyboards. (See Figure 2-5.) They are
        beneficial for people who have physical impairments or
        whose keyboard drivers don't correspond to their
        keyboards' physical layouts (for example, a French
        keyboard paired with an Arabic keyboard driver).</li>
    <li>Use standard Windows controls and mechanisms.
        Screen-review utilities can read only standard controls.
        Customized controls or mechanisms are hard to localize
        because they require customized localization tools.</li>
</ul>

<P><img src="F02FD05.gif" width="510" height="210"></p>

<P><b>Figure 2-5</b> <i>An on-screen keyboard.</i></p>
</FONT></BODY>
</html>
