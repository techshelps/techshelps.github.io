<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<HEAD><meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EnumFontFamiliesEx</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3><font size="4">EnumFontFamiliesEx</font></h3>

<p><i>EnumFontFamiliesEx</i> allows you to enumerate fonts based
on typeface name and charset. Instead of passing a pointer to a
typeface name, you pass a pointer to a logfont structure, which
contains the typeface name and charset information.</p>

<p><font size="2" face="Courier New">LOGFONT lf;<br>
<br>
lstrcpy( (LPSTR)&amp;lf.lfFaceName, lpsz );<br>
lf.lfCharSet = iCharset; <br>
rc = EnumFontFamiliesEx( hdc, &amp;lf, lpEnumProc, NULL, 0 );</font></p>

<p>To call <i>EnumFontFamiliesEx,</i> you can either specify a
typeface name or a charset, or you can ask for whatever is
available. Setting the typeface name of the logfont to NULL
enumerates all typeface names. Setting the charset field to
DEFAULT_CHARSET enumerates all charsets. As with <i>EnumFontFamilies,</i>
<i>EnumFontFamiliesEx</i> enumerates all font styles. Not all
styles of the same font cover the same charsets. For example,
Fontorama Bold might contain ANSI, Greek, and Cyrillic
characters, but Fontorama Italic might contain only ANSI
characters. For this reason, never assume that a given font
covers a specific charset&#151;even the ANSI charset. If you are
not certain about the properties of the available fonts, don't
make assumptions. Enumerate the available fonts using the
DEFAULT_CHARSET constant. When you do, <i>EnumFontFamiliesEx</i>
will separately enumerate each charset range covered by a big
font.</p>

<p><font size="2" face="Courier New">// To enumerate all styles
and charsets of all fonts:<br>
lf.lfFaceName[0] = '\0'; <br>
lf.lfCharSet = DEFAULT_CHARSET;<br>
<br>
// To enumerate all styles and charsets of the Arial font:<br>
lstrcpy( (LPSTR)&amp;lf.lfFaceName, &quot;Arial&quot; );<br>
lf.lfCharSet = DEFAULT_CHARSET;<br>
<br>
// To enumerate all styles of all fonts that cover the ANSI
charset:<br>
lf.lfFaceName[0] = '\0'; <br>
lf.lfCharSet = ANSI_CHARSET;<br>
<br>
// To enumerate all styles of the Arial font that cover the ANSI<br>
// charset:<br>
lstrcpy( (LPSTR)&amp;lf.lfFaceName, &quot;Arial&quot; );<br>
lf.lfCharSet = ANSI_CHARSET;</font></p>

<p>As with the API calls themselves, the callback functions for <i>EnumFontFamiliesEx</i>
and <i>EnumFontFamilies</i> are very similar. The main difference
is in the logfont parameter, which now includes a script field,
shown in bold below:</p>

<p><font size="2" face="Courier New">typedef struct
tagENUMLOGFONTEX {<br>
LOGFONT elfLogFont;<br>
BYTE elfFullName[LF_FULLFACESIZE];<br>
BYTE elfStyle[LF_FACESIZE];<br>
<b>BYTE elfScript[LF_FACESIZE];<br>
</b>} ENUMLOGFONTEX, FAR *LPENUMLOGFONTEX;</font></p>
</FONT></BODY>
</html>
