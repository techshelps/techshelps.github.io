<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<HEAD><meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Modifying the User Interface</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>Modifying the User Interface<i> </i></h3>

<p>With the help of several API functions, you can be creative in
the way you customize the user interface for any or all of the
IME windows. For example, your application could hide the status
window completely, just as the FULLIME sample from the PDK does,
and instead display status information in menus or on the border
of the application window. To retrieve the information normally
displayed in the status window, such as the sentence mode and the
input mode, you can call <i>ImmGetConversionStatus</i>. If you
provide an application-defined menu to allow the user to change
the input mode, your application can respond to user changes by
calling <i>ImmSetConversionStatus</i> to update the IME.</p>

<p>If you plan to customize the candidate or composition windows,
familiarize yourself with the CANDIDATELIST, COMPOSITIONFORM, and
CANDIDATEFORM structures, as well as with the flags and style
bits associated with these structures and related functions. The
Win32 SDK documentation gives detailed descriptions.</p>

<p>For example, the function <i>ImmGetCompositionString</i> can
give you a great deal of information about the string displayed
in the composition window. It can tell you whether the string
contains the characters the user has entered (for example,
hiragana or katakana characters), the characters resulting from
the conversion, the characters that have been selected but not
yet converted, or the characters that have been converted and are
still selected. The function can also tell you which characters
in the string constitute clauses and what position they hold in
the composition string, as well as where the cursor is positioned
and which characters the user originally entered. Because you are
drawing the composition window yourself, you can use any font you
want in any style you want and position the window wherever you
want it to be&#151;such as in the corner of the client area or
next to the current insertion point. You decide whether the
composition window will have a border.</p>

<p>Similarly, you can paint the candidate window to your own
specifications, but you must first retrieve the list of candidate
strings from the IME. <i>ImmGetCandidateListCount</i> will tell
you how large the buffer must be to accommodate the list of
strings, and <i>ImmGetCandidateList</i> will return a pointer
containing the actual list and the number of strings in the list.
<i>ImmGetCandidateList</i> will also tell you how the candidate
strings are related, such as whether they have the same reading,
have the same meaning, have the same number of strokes, or are
based on the same radical.</p>
</FONT></BODY>
</html>
