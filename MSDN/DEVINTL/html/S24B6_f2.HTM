<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<HEAD><meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Partial IME Support</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>Partial IME Support</h2>

<p>IME-aware applications can create their own IME windows, as
shown below, instead of relying on the system default.</p>

<p><font size="2" face="Courier New">hIMEWnd = CreateWindowEx(<br>
&quot;IME&quot;, // IME class<br>
NULL, // no window title<br>
WS_DISABLED | WS_POPUP, // disabled window<br>
0, 0, 0, 0, // no need to set size<br>
hWnd, // parent window<br>
(int)NULL, <br>
(HINSTACE)GetWindowLong(hWnd,GWL_HINSTANCE),<br>
NULL);</font></p>

<p>Applications with partial IME support can use this application
IME window to control certain IME behavior. For example, by
calling the function <i>ImmIsUIMessage,</i> an application can
pass messages related to the IME's user interface to the
application IME window, where the application can process them.
The following code would appear in the application IME window's
window procedure:</p>

<p><font size="2" face="Courier New">HIMC hIMC;<br>
LPVOID lpBufResult;<br>
COMPOSITIONFORM cf;<br>
DWORD dwBufLen;<br>
if (ImmIsUIMessage(hIMEWnd, uMsg, wParam, lParam) == TRUE)<br>
{<br>
switch(uMsg)<br>
{<br>
case WM_IME_COMPOSITION:<br>
if (lParam &amp; GCS_RESULTSTR)<br>
{<br>
hIMC = ImmGetContext(hWnd);<br>
ImmGetCompositionString(hIMC, GCS_RESULTSTR,<br>
lpBufResult, dwBufLen);<br>
ImmReleaseContext(hWnd, hIMC);<br>
}<br>
break;<br>
}<br>
return 0;<br>
}</font></p>

<p>The same window procedure could call <i>SendMessage</i> either
to reposition the status, composition, or candidate windows, or
to open or close the status window.</p>

<p>SendMessage(hIMEWnd, WM_IME_CONTROL,<br>
IMC_SETCOMPOSITIONWINDOW, &amp;cf);</p>

<p>Other API functions that allow the application to change
window positions or properties are <i>ImmSetCandidateWindow,
ImmSetCompositionFont, ImmSetCompositionString,
ImmSetCompositionWindow,</i> and <i>ImmSetStatusWindowPos</i>.
Applications that contain partial support for IMEs can use these
functions to set the style and the position of the IME user
interface windows, but the IME DLL is still responsible for
drawing them&#151;the general appearance of the IME's user
interface remains unchanged.</p>
</FONT></BODY>
</html>
