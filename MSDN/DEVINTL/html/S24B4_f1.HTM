<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Building Tables for Increased Efficiency</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>Building Tables for Increased Efficiency</h3>

<p>In most languages, words consist of characters separated by
white space and punctuation. Rather than calling the system each
time it analyzes a letter in the data stream, the search engine
builds several tables at startup. These tables indicate which
characters can be interpreted by the user's operating environment
and whether these characters are letters, numbers, or
punctuation. (To accommodate the word-breaking rules of more
complex languages, the search engine supports external
word-breaking DLLs. See the section titled &quot;Wordwrap
Functions&quot; in the <i>Microsoft Win32 Programmer's Reference</i>,
Volume 1, for information on creating a word-breaking DLL.)</p>

<p>To build these tables, the engine calls <i>GetStringType</i>
and <i>LCMapString,</i> which can return information for an
entire string of characters. To work around the limitations of
Windows 95 or Win32s, which do not support the wide-character
NLSAPI functions, the code calls several additional functions.
First it calls <i>EnumSystemCodePages</i> to determine which
code-page conversion tables are installed in the user's system.
(Remember that the engine does internal processing in Unicode.)
After the engine has determined which code pages the user's
system supports, it marks the characters contained in those code
pages as &quot;valid&quot; for the user's system by adding
character type information in the corresponding table entries.</p>

<p>If the user is running WinHelp on a DBCS system (Chinese,
Japanese, Korean, or Thai Windows 95, for example), the search
engine also creates a table of legal 2-byte characters. It calls <i>GetCPInfo</i>
to retrieve the <i>MaxCharSize</i> for each installed code page.
If the MaxCharSize for a code page is 2, that code page is DBCS.
Because <i>GetCPInfo</i> also returns the lead-byte ranges, the
search engine can quickly iterate through all possible lead-byte
and trail-byte combinations, calling <i>MultiByteToWideChar</i>
with the flag MB_ERR_INVALID_CHAR to determine whether each
combination is a valid character.</p>

<p>With this series of API calls, the search engine has
constructed several tables that indicate which characters can be
interpreted by the user's system. Next the engine calls <i>GetStringType</i>
on these characters to determine their properties. Win32
separates character properties into three categories, which are
listed in Figure 5-10 below with the constant values that <i>GetStringType</i>
returns.</p>

<table border="0" cellpadding="7" cols="3">
    <tr>
        <td valign="top"><b><i>Category</i></b></td>
        <td valign="top"><em><strong>Constant</strong></em></td>
        <td valign="top"><em><strong>Description</strong></em></td>
    </tr>
    <tr>
        <td valign="top"><b>CTYPE 1</b></td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_UPPER</td>
        <td valign="top">Uppercase</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_LOWER</td>
        <td valign="top">Lowercase</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_DIGIT</td>
        <td valign="top">Decimal digits</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_SPACE</td>
        <td valign="top">Space characters</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_PUNCT</td>
        <td valign="top">Punctuation</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_CNTRL</td>
        <td valign="top">Control characters</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_BLANK</td>
        <td valign="top">Blank characters</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_XDIGIT</td>
        <td valign="top">Hex digits</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C1_ALPHA</td>
        <td valign="top">Any linguistic character (alphabetic,
        syllabary, and ideographic)</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top"><b>CTYPE 2</b></td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">Strong </td>
        <td valign="top">C2_LEFTTORIGHT</td>
        <td valign="top">Left to right</td>
    </tr>
    <tr>
        <td valign="top">Directionality</td>
        <td valign="top">C2_RIGHTTOLEFT</td>
        <td valign="top">Right to left</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">Weak </td>
        <td valign="top">C2_EUROPENUMBER</td>
        <td valign="top">European number, European digit</td>
    </tr>
    <tr>
        <td valign="top">Directionality</td>
        <td valign="top">C2_EUROPESEPARATOR</td>
        <td valign="top">European numeric separator</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C2_EUROPETERMINATOR</td>
        <td valign="top">European numeric terminator</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C2_ARABICNUMBER</td>
        <td valign="top">Arabic number</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C2_COMMONSEPARATOR</td>
        <td valign="top">Common numeric separator</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">Neutral</td>
        <td valign="top">C2_BLOCKSEPARATOR</td>
        <td valign="top">Block separator</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C2_SEGMENTSEPARATOR</td>
        <td valign="top">Segment separator</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C2_WHITESPACE</td>
        <td valign="top">White space</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C2_OTHERNEUTRAL</td>
        <td valign="top">Other neutrals</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">No Directionality</td>
        <td valign="top">C2_NOTAPPLICABLE</td>
        <td valign="top">No implicit directionality (for example,
        control codes)</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top"><b>CTYPE 3</b></td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_NONSPACING</td>
        <td valign="top">Nonspacing mark</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_DIACRITIC</td>
        <td valign="top">Nonspacing diacritic</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_VOWELMARK</td>
        <td valign="top">Nonspacing vowel mark</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_SYMBOL</td>
        <td valign="top">Symbol</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_KATAKANA</td>
        <td valign="top">Katakana character</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_HIRAGANA</td>
        <td valign="top">Hiragana character</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_HALFWIDTH</td>
        <td valign="top">Half-width character</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_FULLWIDTH</td>
        <td valign="top">Full-width character</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_IDEOGRAPH</td>
        <td valign="top">Ideographic character</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_KASHIDA</td>
        <td valign="top">Arabic kashida character</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_LEXICAL</td>
        <td valign="top">Punctuation that either is embedded in a
        word or appears at the end of a word and is still
        considered part of the word; items include the
        apostrophe, the kashida, the hyphen, feminine/masculine
        ordinal indicators, the equal sign (used as a hyphen in
        parts of Europe), and so on</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_ALPHA</td>
        <td valign="top">All linguistic characters (alphabetic,
        syllabary, and ideographic)</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">C3_NOTAPPLICABLE</td>
        <td valign="top">Not applicable</td>
    </tr>
</table>

<P><b>Figure 5-10</b><i> CTYPE categories for the
function GetStringType. The values that GetStringType returns are
based on Unicode and remain constant, regardless of the default
system locale or code page.</i></p>

<p>The WinHelp engine parses the text stream of each document
character by character using these tables. It throws out white
space and creates a list of words and punctuation sequences,
which it then sorts.</p>
</FONT></BODY>
</html>
