<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Making Life Easier for Translators</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>Making Life Easier for Translators</h2>

<P><b>Glossary</b></p>

<ul>
    <li><b>Localization kit:</b> A subset of tools, source files,
        and binary files that can be used to create a localized
        edition of a program. Generally given to translators or
        third-party contractors.</li>
</ul>

<p>Translation is not cheap&#151;most translators charge by the
word. Developers can help maximize the accuracy of translation
and minimize the amount of support translators need in a number
of ways.</p>

<p>First of all, clarify the context of strings that should be
translated, preferably by providing comments in resource files or
separate text files. Does the English word <i>integral</i> refer
to the mathematical operator, or is it an adjective meaning
&quot;important&quot;? Does a particular string appear on a
dialog, menu, or button, or in a message? If a string should not
be translated, try to put it in a separate resource file where
the translator won't even see it, or use a standard way of naming
identifiers. For example, you could prefix identifiers for debug
messages that shouldn't be translated with &quot;IDS_DBG&quot; or
with an underline, as in &quot;_IDS.&quot;</p>

<p>When composing messages or other translatable strings, watch
out for slang, sloppy grammar, and ambiguous words or statements.
Translators will have a hard time understanding poorly worded
messages, and so will international users. Have a linguist or a
professional writer edit messages for clarity before you send
them for final translation. This will increase the accuracy of
translation as well as improve the quality of your
native-language product. If translators know which strings to
translate and how to translate them, they will be able to work
much faster. Their work will be more difficult if terminology is
inconsistent within a single application or among different
applications and if adequate tools for editing and updating
resources are not available.</p>

<p>The use of localization tools can expedite translation. Some
localization tools, for example, allow you to create translation
glossaries, which you can share with other software projects and
use for automatically translating resource files. (Microsoft
supplies translation glossaries as part of the Microsoft
Developer Network as well as in <i>The Windows Interface: An
Application Design Guide</i>.) Machine translation software is
also becoming commercially available. Automatically translated
text still requires editing, but editing often takes less time
than translating from scratch.</p>

<p>Giving translators a localization kit will allow them to work
more independently because they can compile and check their work
as they do it. Passing files back and forth among development,
translation, and testing departments is simple when all parties
are on the same computer network but is more difficult when the
translators are third-party contractors who work in different
countries. Express-mailing floppies, CD-ROMs, or portable hard
drives is one option, as is exchanging files via online computer
services.</p>
</FONT></BODY>
</html>
