<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How the IME System Works</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>How the IME System Works</h2>

<P><b>Glossary</b></p>

<ul>
    <li><b>Input Method Profiler (IMP): </b>The module on Windows
        NT 3.5 that keeps track of IMEs installed on the system.</li>
    <li><b>Input Method Manager (IMM): </b>The module on Windows
        that handles communication between IMEs and applications.</li>
</ul>

<p>The IME module on Windows fits into a larger mechanism for
passing user input to applications, and this section briefly
describes this overall framework. Unless you are writing an IME
package or customizing your IME user interface, you don't need to
worry about the details behind the other components.</p>

<p>On Windows NT, the Input Method Profiler (IMP) stores
information about each IME, such as whether it is currently
active. Control Panel calls the IMP API to add, delete, or
activate an individual IME. To get an idea of what kind of
information the IMP handles, click the IME icon in the Windows NT
3.5 Control Panel. When the user changes the active IME via
Control Panel, the IMP sends a WM_IME_REPORT message to all
applications, with <i>wParam</i> set to IR_IMESELECT. More than
one IME can be installed on the system, although on Windows NT
3.5 only one can be active at a time.</p>

<p>On Windows 95, multiple IMEs are handled by the multilingual
API instead of by an Input Method Profiler. (See <font class="MissingLink" meta="dev0i">Chapter 6</font> for a
description of the multilingual API.) Windows stores information
about each IME installed on the system in the system registry (in
the H_KEY_CURRENT_USER\Control Panel\Input Method section). The
user switches IMEs the same way the user switches Western
keyboard layouts&#151;by clicking the input language menu on the
taskbar or by entering a shortcut-key combination. The change is
reflected on the taskbar indicator:</p>

<P><img src="G07FD14.gif" width="89" height="25"></p>

<p>Switching IMEs generates the same messages as switching other
keyboard layouts: WM_INPUTLANGCHANGEREQUEST and
WM_INPUTLANGCHANGE. Applications can activate specific IMEs by
calling <i>ActivateKeyboardLayout</i>.</p>

<p>The IMM manages communication between IMEs and applications,
serving as the go-between. On Windows NT 3.5, the IMM API is
called almost exclusively by the system. Applications can call
two IMM functions: <i>WINNLSEnableIME,</i> which enables or
disables an IME, and <i>WINNLSGetEnableStatus,</i> which returns
the enabled or disabled status set by <i>WINNLSEnableIME</i>. On
Windows 95, applications can call a number of IMM API functions
in order to customize the IME user interface, as described in the
section titled <font class="MissingLink" meta="dev25j">&quot;Customized IME Support on Windows 95&quot;</font>.</p>

<p>In concept, Input Method Editors are the same as keyboard
drivers, but IMEs handle more characters, and Far East systems
require some extra code to handle them. On Windows 95, the Input
Method Manager is an extension of USER.EXE. Figure 7-17 below
illustrates the way in which the IME, the application, and the
rest of the system on Windows 95 communicate.</p>

<p><img src="f07fd17.gif" width="321" height="420"></p>

<P><b>Figure 7-17</b> <i>Communication between the IME,
the application, and the rest of the Windows 95 system.</i></p>

<p>When the IME program is active, it traps all keyboard events,
including the virtual keys listed in Figure 7-18 below. You can
see how some of these virtual-key codes correspond to the IME
states listed in <font class="MissingLink" meta="dev7j">Figure 7-6</font> and <font class="MissingLink" meta="dev9j">Figure 7-10</font>. Unless you are
writing an IME package or bypassing the IME module to create your
own application-specific input mechanism (definitely <i>not</i>
recommended!), you don't need to worry about adding code to
respond to these virtual keys.</p>

<table border="0" cellpadding="7" cols="2">
<COLGROUP><COL WIDTH="214pt" VALIGN="TOP"><COL WIDTH="214pt" VALIGN="TOP"></COLGROUP><TBODY>    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top"><b><i>Virtual Key</i></b></td>
        <td valign="top"><em><strong>Description</strong></em></td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_ALPHANUMERIC</td>
        <td valign="top">Changes the mode to alphanumeric</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_KATAKANA</td>
        <td valign="top">Changes the mode to katakana</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_HIRAGANA</td>
        <td valign="top">Changes the mode to hiragana</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_SBCSCHAR</td>
        <td valign="top">Changes the mode to single-byte
        characters</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_DBCSCHAR</td>
        <td valign="top">Changes the mode to double-byte
        characters</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_ROMAN</td>
        <td valign="top">Changes the mode to Roman characters</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_NOROMAN</td>
        <td valign="top">Changes the mode to non-Roman characters</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_CODEINPUT</td>
        <td valign="top">Changes the mode to code input</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_NOCODEINPUT</td>
        <td valign="top">Changes the mode to non-code input</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_ENTERIMECONFIGMODE</td>
        <td valign="top">Activates a dialog box for setting up an
        IME environment</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_ENTERWORDREGISTERMODE</td>
        <td valign="top">Activates the word registration dialog
        box</td>
    </tr>
    <tr>
        <td valign="top">VK_DBE_FLUSHSTRING</td>
        <td valign="top">Deletes the undetermined string without
        determining it</td>
    </tr>
    <tr>
        <td valign="top">VK_HANGEUL</td>
        <td valign="top">Changes the mode to hangul</td>
    </tr>
    <tr>
        <td valign="top">VK_HANJA</td>
        <td valign="top">Changes the mode to hanja</td>
    </tr>
    <tr>
        <td valign="top">VK_JUNJA</td>
        <td valign="top">Changes the mode to junja</td>
    </tr>
    <tr>
        <td valign="top">VK_PROCESSKEY (Windows 95)</td>
        <td valign="top">Tells the application that the IME has
        processed a virtual key; to retrieve the value of the
        virtual key, applications can call <i>ImmGetVirtualKey</i></td>
    </tr>
</table>

<P><b>Figure 7-18</b> <i>IME virtual keys.</i></p>
</FONT></BODY>
</html>
