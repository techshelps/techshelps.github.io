<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<HEAD><meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Do Not Assume That Characters Are Always 8-Bit</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>Do Not Assume That Characters Are Always 8-Bit</h3>

<p>Code that assumes that characters are 8 bits wide does not
work for double-byte character sets or Unicode.</p>

<p><font size="2" face="Courier New">szString = szString + 2; //
Skip two characters.</font></p>

<p>Because characters in double-byte character sets might be 1 or
2 bytes wide, it is safer to use the system call <i>CharNext,</i>
which correctly returns a pointer to the next character in any
context.</p>

<p><font size="2" face="Courier New">szString =
CharNext(CharNext(szString));</font></p>

<p>The following code will allocate a buffer that is only half
the size necessary for a Unicode string:</p>

<p><font size="2" face="Courier New">int cch = lstrlen(szString);<br>
char *pszBuffer = malloc(cch);</font></p>

<p>As described in detail in <font class="MissingLink" meta="dev0f">Chapter 3</font>, you can use generic
declarations and compile your code for Unicode, single-byte
character sets, or double-byte character sets. The code below
will allocate a buffer that is the correct size in any of these
cases:</p>

<p><font size="2" face="Courier New">int cch = lstrlen(szString);<br>
TCHAR *pszBuffer = malloc(cch*sizeof(TCHAR));</font></p>
</FONT></BODY>
</html>
