<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Code-Page Model</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>The Code-Page Model</h2>

<P><b>Glossary</b></p>

<ul>
    <li><b>ANSI:</b> (1) Acronym for the American National
        Standards Institute. (2) The Microsoft Windows ANSI
        character set, essentially ISO 8859/<i>x</i> plus
        additional characters, which was originally based on an
        ANSI draft standard.</li>
    <li><b>ASCII:</b> Acronym for American Standard Code for
        Information Interchange, a 7-bit code that is the United
        States (US) national variant of ISO 646.</li>
    <li><b>Encoding:</b> A system of assigning numeric values to
        characters.</li>
    <li><b>Code point, </b><b><i>or</i></b><b> code element: </b>(1)
        The minimum bit combination that can represent a unit of
        encoded text for processing or exchange. (2) An index
        into a code page.</li>
    <li><b>Extended characters:</b> (1) Characters above the
        ASCII range (32 through 127) in Windows-based single-byte
        character sets. (2) Accented characters.</li>
</ul>

<p>Once upon a time, PCs spoke mainly English and a few Western
European languages. Microsoft's operating system at that time,
MS-DOS, supported 256 characters. Each character was represented
by a unique, 1-byte numeric value. <font class="MissingLink" meta="dev1u">Take a look at a picture of
code in Appendix H:</font> you will see 26 letters of the English
alphabet (both uppercase and lowercase forms), punctuation marks,
Greek letters, line-drawing characters (which allow
MS-DOS&#150;based applications to draw boxes), and a few accented
characters.</p>

<p>As computers became more widely used and new languages had to
be accommodated, support for code pages that included different
accented characters, which are an integral part of many
languages, were added to MS-DOS. In each of these code pages, the
set of characters numbered 32 through 127 (hex 0x20 through 0x7F)
were identical, and formed the 7-bit set called ASCII. Every code
page supported English and any other language that uses the same
Latin alphabet, such as Hawaiian and Indonesian. The characters
numbered 128 through 255 (hex 0x80 through 0xFF) were called
extended characters and varied from code page to code page. The
set of extended characters determined which other languages the
code page could support.</p>

<p>More MS-DOS code pages appeared with the Arabic, Far East, and
Russian editions of MS-DOS. Every time a new language script
required character support, a new code page was created. Although
the MS-DOS code pages seem limited to us now, they were an
improvement over the 7-bit ASCII standard, which didn't include
any accented characters at all.</p>

<p>Windows 95 also uses code pages, but not the same ones as
MS-DOS. Windows doesn't need to bother with the line-drawing
characters that MS-DOS supports, so beginning with Windows 1 the
code page designers replaced those characters with publishing
characters. The character set that both Windows 3.1 and Windows
95 use to support Western European languages is referred to as
Latin 1, or ANSI<sup><sup>1</sup></sup>. The local code pages are
pictured in <font class="MissingLink" meta="dev0u">Appendix H</font>. As with the MS-DOS character sets,
characters numbered 32 through 127 are the same for each
single-byte code page.</p>

<hr>

<p>1. The character sets that Windows 95 uses were introduced
with Windows 3.1. This book will refer to these as Windows, or
local, code pages</p>
</FONT></BODY>
</html>
