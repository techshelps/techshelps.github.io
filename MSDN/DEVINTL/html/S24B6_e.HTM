<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<HEAD><meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IME Support for Applications Running on Windows NT 3.5</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h2>IME Support for Applications Running on Windows NT 3.5</h2>

<p>On Windows NT 3.5, a single IME covers all subsystems,
including Win32, Win16, Console, Virtual DOS Machines, and OS/2.
The user can enter Chinese characters into MS-DOS&#150;based
applications running on Virtual DOS Machines using the IMEs
provided by Windows NT. However, Japanese-language applications
cannot control the IMEs using the MS-KANJI API (the IME API for
MS-DOS). If the MS-DOS application does call the MS-KANJI API,
the user has to install the standard front-end processor for
MS-DOS before the application will work properly.</p>

<p>Implementing support for IMEs on Windows NT 3.5 involves
adding code to handle a few Windows messages and adding calls to
several API functions. Adding support for IMEs on Windows 95 can
be more complex because the system allows a higher level of
customization. If you are porting an existing application that
runs on Windows 3.1 to Windows NT or Windows 95, your IME-related
code will require few changes. Although the &quot;plumbing&quot;
underneath the IME system on Windows NT 3.5 differs from that on
Windows 3.1, the user interface and API are identical.</p>
</FONT></BODY>
</html>
