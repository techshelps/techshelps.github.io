<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Code to Respond to IME Messages</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>Adding Code to Respond to IME Messages</h3>

<p>The first order of business in supporting IMEs on Windows NT
3.5 is to add code that responds to messages sent by the active
IME DLL. An IME-aware application traps the message
WM_IME_REPORT. When an IME sends a WM_IME_REPORT message, it sets
<i>wParam</i> to one of the values listed in Figure 7-19. The IME
might send your application an entire string at once, in which
case it sets <i>wParam</i> to IR_STRING, or the IME might send
characters 1 byte at a time, in which case it sets <i>wParam</i>
to IR_STRINGSTART to signal that the next WM_CHAR message will
contain the beginning of a string. After the IME has transmitted
the entire string, it will send another WM_IME_REPORT message,
with <i>wParam</i> set to IR_STRINGEND.</p>

<table border="0" cellpadding="7" cols="2">
<COLGROUP><COL WIDTH="157pt" VALIGN="TOP"><COL WIDTH="252pt" VALIGN="TOP"></COLGROUP><TBODY>    <tr>
        <td valign="top"><b><i>wParam Value</i></b></td>
        <td valign="top"><em><strong>Description</strong></em></td>
    </tr>
    <tr>
        <td valign="top">IR_CHANGECONVERT</td>
        <td valign="top">Reports that the conversion window will
        change in status</td>
    </tr>
    <tr>
        <td valign="top">IR_CLOSECONVERT</td>
        <td valign="top">Reports that the conversion window will
        close</td>
    </tr>
    <tr>
        <td valign="top">IR_FULL_CONVERT</td>
        <td valign="top">Reports that the conversion window will
        overflow the bounding rectangle</td>
    </tr>
    <tr>
        <td valign="top">IR_OPENCONVERT</td>
        <td valign="top">Reports that the conversion window will
        open</td>
    </tr>
    <tr>
        <td valign="top">IR_STRING</td>
        <td valign="top">Reports a determined string</td>
    </tr>
    <tr>
        <td valign="top">IR_STRINGEND</td>
        <td valign="top">Reports the end of determined-string
        transmission</td>
    </tr>
    <tr>
        <td valign="top">IR_STRINGSTART</td>
        <td valign="top">Reports the start of determined-string
        transmission</td>
    </tr>
    <tr>
        <td valign="top">IR_BASE_UI</td>
        <td valign="top">Reports the user interface</td>
    </tr>
    <tr>
        <td valign="top">IR_ENHANCED_UI</td>
        <td valign="top">Reports the character-window&#150;based
        user interface</td>
    </tr>
</table>

<P><b>Figure 7-19</b> <i>Possible wParam values for the
message WM_IME_REPORT under the Windows NT 3.5 IME model.</i></p>

<p>The Japanese Win32 SDK ships with sample code, called USEIME,
that you can study for further details on implementing IME
support for Windows NT 3.5.</p>

<p>On Windows NT 3.5, the standard IMEs are based on the
appropriate local character set, such as Shift-JIS, rather than
on Unicode. The operating system automatically converts strings
into Unicode if necessary. (See the section titled &quot;Unicode
on Windows NT&quot; in <font class="MissingLink" meta="dev24f">Chapter 3</font>.)</p>
</FONT></BODY>
</html>
