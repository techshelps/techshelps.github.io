<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Localization Process</title>

<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<body bgcolor="#FFFFFF">

<h3>The Localization Process</h3>

<p class="t"><b>Glossary</b></p>

<ul>
    <li><b>Usability testing:</b> A series of tests in which
        users are observed trying to complete a set of given
        tasks. The purpose of usability testing is to determine
        how intuitive and easy to use the test subjects find new
        program features.</li>
    <li><b>Beta testing: </b>Distributing prerelease software to
        users and potential customers in order to get feedback
        and bug reports.</li>
</ul>

<p>The process of creating localized software involves a great
deal of communication between different players in a product
team. Figure 1-5 below outlines some basic lines of communication
and, read from top to bottom, indicates a rough timeline for
international product development. During the core phases, the
development team provides files to the localization team, which
translates text, resizes dialog boxes, and hands files back for
compilation, if necessary. The localized executable then goes to
the testing team, which reports functionality problems to
development and reports user interface problems to localization.
All three groups work together to resolve bugs, and the cycle
continues.</p>

<p>The least painful kind of localization process is one in which
the product team considers international issues during the
initial feature design and coding design stages. Market forces,
usability tests, and development constraints also affect the
design of the product. Translating and testing the code in
parallel with development uncovers code and feature design
problems early in the process, when it is easier to make changes.
Localizing a product is akin to launching a probe to Mars. It's
much less involved and much less expensive to adjust the course
soon after liftoff. The trajectory might be only a few degrees
off when the probe is near Earth, but if you wait until late in
the mission to make adjustments, you won't have enough fuel to
keep the probe from shooting past Mars by a million kilometers.</p>

<p><img src="f01fd05.gif" width="494" height="457"></p>

<p class="t"><b>Figure 1-5</b><b><i> </i></b><i>The localization
process.</i></p>

<p>It is important to &quot;freeze&quot; as much of the user
interface and feature design as possible well before the product
goes into final testing. Freezing the design means that no more
changes will be made before the product ships. Every time a piece
of the user interface changes, it has to be retranslated. In
addition, the teams in charge of documentation, online help,
online tutorials, and marketing collateral might need to update
their materials, which also have to be retranslated. Late
changes, as you can imagine, cause significant, expensive delays
in the release of localized products.</p>
</body>
</html>
