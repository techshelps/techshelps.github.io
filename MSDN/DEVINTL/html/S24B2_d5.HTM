<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Unicode-Enabled Applets on Windows NT</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>Unicode-Enabled Applets on Windows NT</h3>

<P><b>Glossary</b></p>

<ul>
    <li><b>Byte order mark (BOM):</b> The Unicode character
        U+FEFF or its non-character mirror image, U+FFFE, used to
        indicate the byte order of a text stream. The presence of
        a BOM is a strong clue that a file is encoded in Unicode.</li>
</ul>

<p>The applications GridFont and UniPut included with the Win32
SDK and Visual C++ 2 demonstrate various techniques for
programming for Unicode. Under Windows NT 3.5, the shell applets
and File Manager fully support Unicode. You can use the system's
Notepad and Character Map applets to create files containing
Unicode text by following these steps:</p>

<ol>
    <li>Enable the Lucida Sans Unicode font. (If it doesn't show
        up in the font dialog in Notepad, you need to add it from
        your SYSTEM directory using the Fonts icon in Control
        Panel.)</li>
    <li>Select the Lucida Sans Unicode font in Notepad (Edit/Set
        Font), in Character Map (Font list box), and in File
        Manager (Options/Font).</li>
    <li>In Character Map (shown below), select Basic Greek from
        the Subset list box.<p><img src="G03FD09.gif" width="630"
        height="281"></p>
    </li>
    <li>Choose several characters to copy to the clipboard by
        double-clicking characters in the map. Click the Copy
        button.</li>
    <li>Paste the characters into a document in Notepad.<p><img
        src="G03FD10.gif" width="470" height="244"></p>
    </li>
    <li>Now try to save the file. Most likely, Notepad will issue
        a warning that it cannot convert some of the characters
        to the current code page. To create a Unicode file,
        select Unicode Text as the data type in the Save As
        dialog box.<p><img src="G03FD11.gif" width="472"
        height="247"></p>
        <p>On an NTFS file system you can even use Unicode
        characters in the filename.</p>
        <P><img src="G03FD12.gif" width="488"
        height="227"></p>
    </li>
</ol>

<p>When saving as a Unicode Text file, Notepad always writes out
a byte order mark (BOM)&#151;Unicode character U+FEFF&#151;as the
first Unicode character in a file. It uses this character (and
not the file extension) to help it distinguish Unicode text from
other data.</p>

<p>Open one of your favorite applications and try to paste in the
clipboard text. You will see that Windows NT 3.5 converts as much
as it can to the code page used by the application&#151;no
modifications to the application are required. When you open a
file in Notepad, Notepad calls a Win32 function named <i>IsTextUnicode</i>.
This function determines whether the file uses Unicode. If the
file starts with the conventional signature for Unicode&#151;the
BOM U+FEFF&#151;it knows to treat the file as Unicode. (Notepad
always adds a BOM to a Unicode file when saving it and hides it
again when opening the file.) If there is no BOM, <i>IsTextUnicode
</i>can only guess whether the file uses Unicode based on a
number of rules (described in the Visual C++ 2 documentation of <i>IsTextUnicode</i>).</p>

<p>Even in Windows NT 3.5, several features are not
Unicode-enabled, such as the help system, WinHlp32. More
important for developers, source files for compilers and resource
compilers are still based on code pages, for compatibility
reasons.</p>
</FONT></BODY>
</html>
