<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Shipment of International Products</title>
<style>@import url(../msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="../msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h3>Shipment of International Products</h3>

<P><b>Glossary</b></p>

<ul>
    <li><b>Simultaneous ship, </b><b><i>or</i></b><b> &quot;sim
        ship&quot;: </b>The release of localized editions of a
        product at the same time as or soon after the domestic
        edition is released, usually within 30 days.</li>
    <li><b>Release delta:</b> The time between the release of the
        domestic product and the release of the localized
        edition.</li>
</ul>

<p>You can take one of two approaches to shipping international
products. The first is to begin working on international editions
after the domestic edition has been released or when it is almost
finished. The second is to plan for international products in
advance, work on several language editions concurrently, and ship
them all at roughly the same time.</p>

<p>Those who would advocate the first method fail to realize how
much effort it takes to create localized software. If it were an
easy task, the text would be only a few screens long. A common
argument from development managers is, &quot;Our domestic product
is really important. We don't want to delay the domestic product
or distract the team by worrying about the international editions
now.&quot; This short-term, restricted thinking makes sense only
for companies that generate 95 percent of their revenue
domestically or that have no international competitors. In other
words, very few companies benefit from this strategy.</p>

<p>Microsoft's careful attention to its internationalization
practices is the reason it earns the majority of its revenue
outside the United States. Companies that make most of their
revenue domestically either ship products with a domestic focus,
such as financial software or certain multimedia titles, or they
haven't tapped the potential of the international market. Because
controlling costs has a significant impact on profits, the main
argument <i>against</i> delaying work on international editions
of a program is that to delay such work is expensive.</p>

<p>One effective approach, and the one used by Microsoft to
develop Windows, is to create a solid internationalized core code
base and to begin translation work as soon as there is something
to translate. Microsoft develops the English, German, and
Japanese editions of its operating systems in-house and in
parallel&#151;English because it is the largest language market
for Windows and because most of the developers on the Windows
team are native English speakers; German because it is the
largest European-language market and serves as a good test for
European-language functionality and ease of translation; and
Japanese because the Far East is an important market (Microsoft's
second-largest) and Japanese serves as a good basis for all Far
Eastern language development issues. Other language editions,
such as Italian and Swedish, are translated in parallel at
Microsoft's subsidiary in Ireland. Teams in both Ireland and
Redmond, Washington, worked furiously to ensure that localized
editions of Windows NT and Windows 95 were ready for testing at
each major development milestone.</p>

<p>This method of developing international software is easier to
implement if all developers are held accountable for the
international functionality and localizability of their own
features. Naturally, having an internationally conscious team
that constructs several language editions of a product in
parallel with minimal problems is an ideal that might take more
than one product cycle to fully achieve. The key is to begin
early in each new product cycle. Early translation, for example,
can uncover design blunders before complex features have been
built around them. Coding problems can then be resolved while the
code is still fresh in developers' minds.</p>

<p>The best result of a &quot;three-pronged&quot; development
approach, such as Microsoft's simultaneous development of
English, German, and Japanese editions, is simultaneous shipment
of more than one language edition. The Windows NT 3.5 team, for
example, released the French, German, Spanish and US editions of
its product within days of one another. A
&quot;four-pronged&quot; approach, such as the one summarized in
Figure 1-6 below, would include either a right-to-left language,
such as Arabic, or a European language that does not use Latin
script, such as Russian.</p>

<p>The international press pays attention whenever a new product
revision reaches the market. Having more than one language
edition ready when the domestic edition is released allows more
than one language edition to take advantage of the publicity
surrounding the new revision. Not having key language editions
ready soon after the domestic release means that international
customers will wait for the revised localized releases rather
than buy the existing localized releases. The longer they have to
wait, the more frustrated they become, and the more sales your
company loses.</p>

<p>You will not significantly delay your domestic product if you
work toward international functionality from the beginning of
your product cycle; you will actually save your company time and
money in the long run. Inventing a productwide plan that
satisfies all internationalization requirements&#151;timely
domestic and international releases, inexpensive localization, a
compelling set of new features, and appropriate staffing&#151;can
be a balancing act. But without a plan and your team's commitment
to it, producing international editions of your product will turn
into one headache after another.</p>

<table border="0" cellpadding="7" cols="4">
    <tr>
        <td valign="top"><b><i>Language</i></b></td>
        <td valign="top"><em><strong>Purpose</strong></em></td>
        <td valign="top"><em><strong>Reason</strong></em></td>
        <td valign="top"><em><strong>Language Alternatives</strong></em></td>
    </tr>
    <tr>
        <td valign="top">English</td>
        <td valign="top">To develop product and test for general
        functionality</td>
        <td valign="top">Largest market for Windows based
        products</td>
        <td valign="top">Native language of developers</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">German</td>
        <td valign="top">To uncover international-related bugs
        and overcrowded user interface designs</td>
        <td valign="top">Largest European language market</td>
        <td valign="top">Finnish, French, Spanish</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">Japanese</td>
        <td valign="top">To enable multibyte character sets,
        vertical writing, and vertical printing</td>
        <td valign="top">Largest Far Eastern language market</td>
        <td valign="top">Simplified Chinese, Traditional Chinese,
        Korean</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">&nbsp;</td>
    </tr>
    <tr>
        <td valign="top">Arabic</td>
        <td valign="top">To create right to left look and feel;
        enable bidirectional text</td>
        <td valign="top">Largest Middle Eastern market; issues
        are a superset of Hebrew issues</td>
        <td valign="top">Farsi, Hebrew </td>
    </tr>
</TBODY></table>

<P><br>
</p>

<P><b>Figure 1-6</b> <i>Sample &quot;four-pronged&quot;
approach, designed to uncover potential problems in international
software early in the development process.</i></p>

<p>If your product team has already produced localized editions
but they have long release deltas, the principles in this book
can help you shorten the release deltas for your next product
revision. In some cases, a new product plan might schedule
localized releases of <i>Product Two </i>within months of
localized editions of <i>Product One</i>. If this happens,
suspend localization of <i>Product One </i>and concentrate on
shipping international editions of <i>Product Two </i>quickly.
Microsoft, for example, did not release a Japanese edition of
Microsoft Visual Basic 3, but went straight from localizing
Visual Basic 2 to localizing the version of Visual Basic that
will <i>follow</i> Visual Basic 3.</p>
</FONT></BODY>
</html>
