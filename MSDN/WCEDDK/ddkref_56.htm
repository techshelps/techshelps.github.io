<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CardGetParsedTuple</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_cardgetparsedtuple"></a>CardGetParsedTuple</h2>
<p>
The <b>CardGetParsedTuple </b>function reads and parses the specified tuple.</p>
<h4>Syntax</h4>
<p>
<b>STATUS CardGetParsedTuple( </b>    <b>CARD_SOCKET_HANDLE</b> <i>hSocket </i>  <br>
<b>UINT8</b> <i>uDesiredTuple </i>    <b>PVOID</b> <i> pBuf </i>    <b>PUINT32 </b><i> pnItems </i><b>    );</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>hSocket</i></dt>
<dd>
Specifies a handle to a socket and function pair.</dd>
<dt>
<i>uDesiredTuple</i></dt>
<dd>
Specifies the desired tuple to parse. Currently, only the CISTPL_CONFIG or CISTPL_CFTABLE_ENTRY tuples are supported for parsing.</dd>
<dt>
<i>pBuf</i></dt>
<dd>
Points to the buffer to contain the parsed tuple information. Points to the <b>PARSED_CONFIG</b> or <b>PARSED_CFTABLE </b>structure.</dd>
<dt>
<i>pnItems</i></dt>
<dd>
On entry, <i>pnItems</i> points to the number of entries in the buffer pointed to by <i>pBuf</i>.  On exit, <i>pnItems</i> specifies how many entries of <i>pBuf</i> were used, or how many entries are required if the buffer was not large enough.</dd>
</dl>
<h4>Return Value</h4>
<p>
If the function succeeds, the return value is CERR_SUCCESS; otherwise, it is one of the following values:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Value</th>
<th align=left width=63%>Description</th>
</tr>
<tr valign=top>
<td width=37%>CERR_BAD_ARG_LENGTH</td>
<td width=63%>Indicates the buffer specified by the <i>pnItems</i> pointer is not large enough.</td>
</tr>
<tr valign=top>
<td width=37%>CERR_BAD_ARGS</td>
<td width=63%>Indicates an invalid<i> pBuf </i>pointer.</td>
</tr>
<tr valign=top>
<td width=37%>CERR_BAD_SOCKET</td>
<td width=63%>Indicates an invalid <i>hSocket</i> socket identifier or a PC Card not inserted.</td>
</tr>
<tr valign=top>
<td width=37%>CERR_NO_MORE_ITEMS</td>
<td width=63%>Indicates the end of CIS reached or the requested tuple not found.</td>
</tr>
<tr valign=top>
<td width=37%>CERR_OUT_OF_RESOURCE</td>
<td width=63%>Indicates Card Services is unable to set up a memory window to read the CIS.</td>
</tr>
<tr valign=top>
<td width=37%>CERR_READ_FAILURE</td>
<td width=63%>Indicates that no PC Card is inserted, or that the PC Card is unreadable.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
This function reads the CIS data from the specified PC Card of the specified tuple code and formats the encoded data into an easily accessed structure. <b>CardGetParsedTuple</b> reduces code size by eliminating extra processing required to parse some variable length tuples, thereby letting drivers forego duplicating code to process these tuples.</p>
<p>
Currently, only the CISTPL_CONFIG and CISTPL_CFTABLE_ENTRY tuples are supported for parsing.</p>
<p>
When <b>CardGetParsedTuple</b> is called with CISTPL_CONFIG, it retrieves a <b>PARSED_CONFIG</b> structure. When it is called with CISTPL_CFTABLE_ENTRY, it retrieves a <b>PARSED_CFTABLE</b> structure. Accordingly, the <i>pBuf</i> pointer points to either the <b>PARSED_CONFIG</b> or the <b>PARSED_CFTABLE</b> structure.</p>
<p>
If there are multiple CISTPL_CFTABLE_ENTRY tuples, <b>CardGetParsedTuple</b> retrieves the required number of <b>PARSED_CFTABLE</b> structures, provided the user's buffer is large enough.</p>
<h4>See Also</h4>
<p>
<a href="ddkref_88.htm"><b>PARSED_CONFIG</b></a>,<b> <a href="ddkref_87.htm">PARSED_CFTABLE</a></b>,<b> <a href="ddkref_89.htm">POWER_DESCR</a></b></p>
<p>&nbsp;</p></body>
</HTML>
