<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CLIENT_CALLBACK</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_client_callback"></a>CLIENT_CALLBACK</h2>
<p>
<b>CLIENT_CALLBACK</b> specifies the prototype for PC Card event callback functions. The Card Services driver calls the callback function to notify the installable device driver of a PC Card event.</p>
<h4>Syntax</h4>
<p>
<b>typedef STATUS (*CLIENT_CALLBACK)(</b>  <b>    CARD_EVENT </b><i>CardEvent </i><b>    CARD_SOCKET_HANDLE </b><i>hSocket </i><b>    PCARD_EVENT_PARMS </b><i>pCardEventParms </i><b>    );</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>CardEvent</i></dt>
<dd>
Contains one of the Card Services callback event codes.</dd>
<dt>
<i>hSocket</i></dt>
<dd>
Contains a handle to a socket and function pair.</dd>
<dt>
<i>pCardEventParms</i></dt>
<dd>
Points to the parameters associated with <i>CardEvent</i>.</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, your callback function should return CERR_SUCCESS; otherwise, return one of the following:
<dl>
<dt>
CERR_BAD_ARGS</dt>
<dd>
Indicates the pointer specified for <i>pCardEventParms</i> is invalid.</dd>
<dt>
CERR_BAD_SOCKET</dt>
<dd>
Indicates the socket identifier specified for <i>hSocket</i> is invalid or a PC Card is not inserted.</dd>
</dl>
<h4>Remarks</h4>
<p>
When a PC Card event occurs, Card Services notifies drivers by calling their registered callback functions. The callback function must conform to the <b>CLIENT_CALLBACK</b> prototype. </p>
<p>
Drivers can indicate for which events they want notification when they register with <b>CardRegisterClient</b>. </p>
<p>
<b>CardRequestSocketMask</b> and <b>CardSetEventMask</b> can be used to request event notification for a specific socket and function pair.</p>
<h4>See Also</h4>
<p>
<a href="ddkref_60.htm"><b>CardRegisterClient</b></a>, <a href="ddkref_69.htm"><b>CardRequestSocketMask</b></a>, <a href="ddkref_72.htm"><b>CardSetEventMask</b></a>, <a href="ddkref_90.htm"><b>PC Card Event Codes</b></a></p>
<h2>EnumPnpIds</h2>
<p>
The <b>EnumPndIds</b> function returns a list of Plug-and-play IDs currently known to the system. These represent Plug-and-play devices that are currently inserted into the Windows CE platform.</p>
<h4>Syntax</h4>
<p>
<b>DWORD EnumPnpIds( </b> <b>LPTSTR</b> <i>PnpList</i>,  <b>LPDWORD </b><i>lpBufLen</i> <b>);</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>PnpList</i></dt>
<dd>
The list of Plug-and-Play IDs</dd>
<dt>
<i>lpBufLen</i></dt>
<dd>
The number of Plug-and-play IDs.</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
