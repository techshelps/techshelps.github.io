<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CARD_REGISTER_PARMS</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_card_register_parms"></a>CARD_REGISTER_PARMS</h2>
<p>
The <b>CARD_REGISTER_PARMS</b> structure contains driver characteristics passed to <b>CardRegisterClient</b>.<b> </b>All members are input only.</p>
<h4>Syntax</h4>
<p>
<b>typedef struct {  <br>
UINT16</b> <i>fAttributes</i>; <b> <br>
UINT16</b> <i>fEventMask</i>; <b> <br>
UINT32</b> <i>uClientData</i>; <b><br>
} CARD_REGISTER_PARMS, *PCARD_REGISTER_PARMS;</b></p>
<h4>Members</h4>
<dl>
<dt>
<i>fAttributes</i></dt>
<dd>
A bitmask of the following flags:
<dl>
<dt>
CLIENT_ATTR_MEM_DRIVER </dt>
<dd>
RAM or SRAM Memory driver</dd>
<dt>
CLIENT_ATTR_MTD_DRIVER </dt>
<dd>
Flash RAM Memory driver, sometimes known as a Memory Technology driver.</dd>
<dt>
CLIENT_ATTR_IO_DRIVER </dt>
<dd>
I/O driver</dd>
<dt>
CLIENT_ATTR_NOTIFY_SHARED </dt>
<dd>
Sharable PC Card</dd>
<dt>
CLIENT_ATTR_NOTIFY_EXCLUSIVE </dt>
<dd>
Exclusively used PC Card</dd>
</dl>
</dd>
<dt>
<i>fEventMask</i></dt>
<dd>
Specifies a global socket events bitmask. See <a href="ddkref_91.htm">PC Card Event Masks</a>.</dd>
<dt>
<i>uClientData</i></dt>
<dd>
Specifies 32 bits of context data sent to the client's callback function. This data is usually a pointer to a data structure.</dd>
</dl>
<h4>Remarks</h4>
<p>
The client data (<b>uClientData</b>) is passed as is to the installable device driver's callback function. The client can interpret this context data in any manner it chooses.</p>
<h4>See Also</h4>
<p>
<a href="ddkref_60.htm"><b>CardRegisterClient</b></a>, <a href="ddkref_86.htm"><b>CLIENT_CALLBACK</b></a></p>
<h2>CARD_SOCKET_HANDLE</h2>
<p>
The <b>CARD_SOCKET_HANDLE</b> structure identifies a socket and function pair composed of a socket number and function number. </p>
<h4>Syntax</h4>
<p>
<b>typedef struct {  <br>
UINT8</b> <i>uSocket</i>; <b> <br>
UINT8</b> <i>uFunction</i>; <b><br>
} CARD_SOCKET_HANDLE, *PCARD_SOCKET_HANDLE;</b></p>
<h4>Members</h4>
<dl>
<dt>
<i>uSocket</i></dt>
<dd>
Specifies the socket number. The first socket is 0 (zero).</dd>
<dt>
<i>uFunction</i></dt>
<dd>
Specifies the function number on the socket. The first function is 0 (zero).</dd>
</dl>
<h4>Remarks</h4>
<p>
The installable device driver generates these values and uses them in various Card Services functions. </p>
<p>
For single function cards, the function number is zero. For multiple function cards, the function number ranges from zero through one less than the number of functions on the card.</p>
<p>&nbsp;</p></body>
</HTML>
