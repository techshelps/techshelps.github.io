<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>xxx_Init</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_xxx_init"></a><i>xxx</i>_Init</h2>
<p>
Device Manager calls <i>xxx</i><b>_Init</b> function to initialize your device.</p>
<h4>Syntax</h4>
<p>
<b>DWORD</b>  <i>xxx</i><b>_Init(</b>  <b>DWORD </b> <i>dwContext</i> <b>);</b> </p>
<h4>Parameters</h4>
<dl>
<dt>
dwContext</dt>
<dd>
Specifies a pointer to a string containing the registry path to the active key for the installable device driver. </dd>
</dl>
<h4>Return Value</h4>
<p>
Returns a handle to the device context created. This handle is passed to the <i>xxx</i><b>_Open</b>,<b> </b><i>xxx</i><b>_PowerDown</b>, <i>xxx</i><b>_PowerUp</b>, and <i>xxx</i><b>_Deinit</b> functions.</p>
<h4>Remarks</h4>
<p>
When the user starts using a device, such as when a PC Card is inserted, the Device Manager calls this function to initialize the device. This function is not called by applications.</p>
<p>
The Device Manager specifies a pointer to a string containing the registry path to the active key of the specific PC Card device in the <i>dwContext </i>parameter. Usually the string contains the registry path to a numbered subkey of the HKEY_LOCAL_MACHINE\Drivers\Active key. Your initialization function can use this information to access data stored in the registry.</p>
<p>
Some tasks this function might perform include: 
<ul>
<li>
Initialize the installed device to a default state.</li>
<li>
Allocate resources used globally by the device driver.</li>
<li>
Register a status callback function with Card services. When the status of the device changes, the operating system calls this status callback function. For example, the status of a PC Card changes when you insert it or remove it.</li>
<li>
Map system memory and I/O space to a PC Card device's memory and I/O space.</li>
<li>
Request notification on specific callback events.</li>
<li>
For an interrupt-driven device, register an interrupt callback function. When the device generates an interrupt, the operating system calls this interrupt callback function.</li>
</ul>
<p>
After this function returns, the Device Manager checks the registry for a key named <b>Ctrl</b> for the driver, and if such a key is present Device Manger calls <i>xxx</i><b>_IOControl</b>. Your driver can use this function to finish initializing itself after it has been installed. For example, a driver might load additional modules that require the underlying driver to be installed before they can load.</p>
<p>&nbsp;</p></body>
</HTML>
