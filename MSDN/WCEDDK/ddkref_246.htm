<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The [Drivers\Builtin] Key</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_the_.5b.drivers.5c.builtin.5d_.key"></a>The [Drivers\Builtin] Key</h2>
<p>
The<b> [</b>HKEY_LOCAL_MACHINE\Drivers\Builtin]<b> </b>key contains subkeys for device drivers that the Device Manager should load when the system is turned on. Each subkey is named after the device driver and contains values described in the following table. Additional values can be stored for purposes specific to the device driver.</p>
<p>
Typically, installable device drivers will not use anything within the [Drivers\Builtin] key. However, if it is important for your driver to be loaded when the Windows CE platform undergoes a warm reboot, the driver's installation routine can install a key within the [Drivers\Builtin] key. Be cautious, however; you should not modify any existing keys within this portion of the registry. It is also good to recommend that users do a full backup of the data on their Windows CE platform in the event that changes to keys within this portion of the registry cause their Windows CE platform to become unusable.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=15%>Value name</th>
<th align=left width=19%>Value Type</th>
<th align=left width=66%>Description </th>
</tr>
<tr valign=top>
<td width=15%><b>Dll</b></td>
<td width=19%><b>REG_SZ</b></td>
<td width=66%>This required entry specifies the filename for an driver DLL the Device Manager is to load.</td>
</tr>
<tr valign=top>
<td width=15%><b>Entry</b></td>
<td width=19%><b>REG_SZ</b></td>
<td width=66%>The <b>Entry</b> value, if it exists, names an entry point to the DLL. The Device Manager loads the DLL and calls the specified entry point, with the driver's registry path as a parameter. When a driver is invoked in this manner, the driver is responsible for calling <b>RegisterDevice</b> on its own, and will not be tracked by the Device Manager. <b>RegisterDevice</b> calls <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_LoadLibrary">
</object><a href=JavaScript:alink_1.Click()><b>LoadLibrary</b></a> to load the DLL, so when the DLLs entry point returns, the Device Manager will call <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_FreeLibrary">
</object><a href=JavaScript:alink_2.Click()><b>FreeLibrary</b></a> to free the instance that it previously loaded.<p>
The function named in the <b>Entry</b> value must follow the prototype specified for <b>PFN_DEV_ENTRY</b>: DWORD (*PFN_DEV_ENTRY)(LPTSTR); where the <b>LPSTR</b> parameter is the registry path of the device's key.</p>
</td>
</tr>
<tr valign=top>
<td width=15%><b>Keep</b></td>
<td width=19%><b>REG_SZ</b></td>
<td width=66%>The <b>Keep</b> value works in conjunction with the <b>Entry</b> value; if you have the <b>Keep</b> value, you must also have the <b>Entry</b> value. The existence of this value causes the Device Manager to not call <b>FreeLibrary</b> after the entry point specified in the <b>Entry</b> value returns. This behavior should only be used by DLLs which are loaded by the Device Manager at boot time but which are not actually device drivers.</td>
</tr>
<tr valign=top>
<td width=15%><b>Order</b></td>
<td width=19%><b>DWORD</b></td>
<td width=66%>Specifies the load order for the built-in driver. If two drivers have the same load order value, they load in the order they occur in the registry. This entry is useful when one driver must load subsequent to another. This value is required for non-PC Card devices, ignored when loading PC Card drivers.</td>
</tr>
<tr valign=top>
<td width=15%><b>Prefix</b></td>
<td width=19%><b>REG_SZ</b></td>
<td width=66%>This required value specifies the device driver's <a href="devnames_2.htm">device filename prefix</a>. It is a three character identifier, such as "COM".</td>
</tr>
</table><br>
<p>
The following example shows the contents under the Builtin key for the standard serial port driver: </p>
<pre><code>HKEY_LOCAL_MACHINE
    [Drivers]
        [BuiltIn]
            [Serial]
                SZ: Dll = Serial.DLL
                DWORD: Order = 0x00000000 (0)
                SZ: Prefix = COM
                hex: DevConfig = 10 00 00 00 02 00 00 00 10 01 00 00 00 4b 00
                DWORD: DeviceArrayIndex = 0x00000000 (0)
                DWORD: DeviceType = 0x00000000 (0)
                SZ: FriendlyName = Serial Cable on COM1:
                SZ: Tsp = Unimodem.dll
</code></pre>
<p>&nbsp;</p></body>
</HTML>
