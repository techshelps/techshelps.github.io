<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ColorConverter Class</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_colorconverter_class"></a>ColorConverter Class</h2>
<p>
Complete color conversion support is contained within the GPE base classes in the file swconvrt.cpp as the class ColorConverter. This converter allows for Blt-time translation between any combination of source and destination surface pixel types.  Pixel formats for surfaces conform to one of the following basic types:
<dl>
<dt>
PAL_RGB</dt>
<dd>
Essentially the same as a PALETTENTRY structure, or an unsigned long of the form 0x00BBGGRR)</dd>
<dt>
PAL_BGR</dt>
<dd>
The same as an RGBQUAD structure, or an unsigned long of the form 0x00RRGGBB</dd>
<dt>
PAL_MASKED</dt>
<dd>
Similar to RGB or BGR in that specific bits are used for the different primary components of a color. This is most common for 15 or 16 bit pixel definitions.</dd>
<dt>
PAL_INDEXED</dt>
<dd>
A palettized surface. Each pixel may contain 1, 2, 4, or 8 bits to select from the current palette for the surface.
</dd>
</dl>
<p>
Upon entry to a Drv function which contains a pxlo (XLATEOBJ *) parameter, the Drv function creates and initializes a ColorConverter object for the translation. Alternatively, based upon the <i>iUniq</i> field of the XLATEOBJ, it may use a cached ColorConverter from a previous call.</p>
<p>
The ColorConverter populates two pointers — <i>pLookup</i> and <i>pConverter</i>. If both are NULL then no conversion is required for this operation (the source and destination formats are compatible and the palettes -if any- are identical). If pLookup is not NULL, then the operation must convert each source pixel to a destination pixel using the source pixel value as an index into the lookup table.</p>
<p>
If <i>pConverter</i> is not NULL, then it is the address of a function which should be called to convert a source pixel to a destination pixel. This is only used when the source and destination formats are not compatible and the source format is not indexed.</p>
<p>
At most one of <i>pLookup</i> and <i>pConverter</i> will be set to non-NULL.</p>
<p>
Color conversion is an optional feature for Windows CE. As such, it may be removed in part, or completely to reduce the size of the driver. If it is removed or reduced for a given platform, then all bitmaps provided for that platform must be authored to a bit depth and/or palette which is supported by the display driver.  The current size of the complete color converter is slightly over 2K bytes (non-debug)</p>
<p>&nbsp;</p></body>
</HTML>
