<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GPE Class</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_gpe_class"></a>GPE Class</h2>
<p>
The GPE class servers as the base from which concrete drivers can be derived. A GPE object represents a single display device.</p>
<p>
Drivers based upon GPE must implement the following methods</p>
<pre><code>    // Configuration methods
    virtual SCODE    GetModeInfo(
                GPEMode *pMode,
                int modeNo )=0;
    virtual int    NumModes()=0;
    virtual SCODE    SetMode(
int modeId )=0;
    // Blt methods
    virtual SCODE    BltPrepare(
GPEBltParms *pBltParms )=0;
    virtual SCODE    BltComplete(
GPEBltParms *pBltParms )=0;
    // Line Method
    virtual SCODE    Line(
                GPELineParms *pLineParms,
                EGPEPhase phase = gpeSingle )=0;
    // Surface creation Method
    virtual SCODE    AllocSurface(
                GPESurf **ppSurf,
                int width,
                int height,
                EGPEFormat format,
                int surfaceFlags )=0;
    // Cursor methods
    virtual SCODE    SetPointerShape(
                GPESurf *pMask,
                GPESurf *pColorSurf,
                int xHot,
                int yHot,
                int cx,
                int cy )=0;
    virtual SCODE    MovePointer(
                int x,
                int y )=0;
    // Palette methods
    virtual SCODE    SetPalette(
                RGBQUAD *src,
                unsigned short firstEntry,
                unsigned short numEntries )=0;
    virtual SCODE    SetPalette(
                PALETTEENTRY *src,
                unsigned short firstEntry,
                unsigned short numEntries )=0;
    // Timing method
    virtual int    InVBlank()=0;
</code></pre>
<p>&nbsp;</p></body>
</HTML>
