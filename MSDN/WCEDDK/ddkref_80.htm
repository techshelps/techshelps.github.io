<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CARD_ISR</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_card_isr"></a>CARD_ISR</h2>
<p>
When a PC Card generates an interrupt on the PC Card interrupt line, Card Services calls the interrupt service function handler that is associated with a specified socket and function pair. Interrupt service function handlers must conform to the <b>CARD_ISR</b> prototype.</p>
<h4>Syntax</h4>
<p>
<b>typedef void <br>
(*CARD_ISR)(   UINT32 </b><i>uISRContextData </i><b> );</b></p>
<p>
<b>Note</b>  The interrupt service function handler is not a true kernel-mode interrupt service routine; it is a user-mode callback function that Card Services will call directly.</p>
<h4>Parameters</h4>
<dl>
<dt>
<i>uISRContextData</i></dt>
<dd>
Contains context data specified by <b>CardRequestIRQ</b> that the driver can interpret as needed.  This parameter is usually a pointer to a structure representing the state of the socket and function pair.</dd>
</dl>
<h4>Return Values</h4>
<p>
None.</p>
<h4>Remarks</h4>
<p>
When a PC Card generates an interrupt, Card Services determines which function caused the interrupt and then calls the associated interrupt service function with the specified socket and function pair.  For single function cards, the function number is zero.</p>
<p>
An installable device driver calls <b>CardRequestIRQ</b> to register an interrupt service routine for a specified socket and function pair.</p>
<p>
Card Services clears the interrupt condition in the card configuration registers when the interrupt callback function returns.</p>
<p>
The interrupt callback function must clear the function interrupt request source on the card and return as quickly as possible. If more time is required for processing the interrupt, the callback function should determine what needs to be done and spawn a thread to do further processing.</p>
<h4>See Also</h4>
<p>
<a href="#_wceddk_card_isr"><b>CARD_ISR</b></a>, <a href="ddkref_68.htm"><b>CardRequestIRQ</b></a>, <a href="ddkref_63.htm"><b>CardReleaseIRQ</b></a></p>
<p>&nbsp;</p></body>
</HTML>
