<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PARSED_CFTABLE</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_parsed_cftable"></a>PARSED_CFTABLE</h2>
<p>
The <b>CardGetParsedTuple </b>function uses the <b>PARSED_CFTABLE</b> structure to return data for the CISTPL_CFTABLE_ENTRY tuple code. The <b>PARSED_CFTABLE</b> structure represents in a fixed form the information contained in a variable-length CISTPL_CFTABLE_ENTRY tuple code as parsed by <b>CardGetParsedTuple</b>.</p>
<h4>Syntax</h4>
<p>
<b>typedef struct {  POWER_DESCR </b><i>VccDescr</i><b>;  POWER_DESCR </b><i>Vpp1Descr</i><b>;  POWER_DESCR </b><i>Vpp2Descr</i><b>;  UINT32 </b><i>IOLength[MAX_IO_RANGES]</i><b>;  UINT32 </b><i>IOBase[MAX_IO_RANGES]</i><b>;  UINT8 </b><i>NumIOEntries</i><b>;  UINT8 </b><i>ConfigIndex</i><b>;  UINT8 </b><i>ContainsDefaults</i><b>;  UINT8 </b><i>IFacePresent</i><b>;  UINT8 </b><i>IFaceType</i><b>;  UINT8 </b><i>BVDActive</i><b>;  UINT8 </b><i>WPActive</i><b>;  UINT8 </b><i>ReadyActive</i><b>;  UINT8 </b><i>WaitRequired</i><b>;  UINT8 </b><i>IOAccess</i><b>;  UINT8 </b><i>NumIOAddrLines</i><b>; } PARSED_CFTABLE;</b></p>
<h4>Members</h4>
<dl>
<dt>
<i>VccDescr</i></dt>
<dd>
Specifies the power description for the Vcc voltage supply. (Output)</dd>
<dt>
<i>Vpp1Descr</i></dt>
<dd>
Specifies the power description for the Vpp1 voltage supply. (Output)</dd>
<dt>
<i>Vpp2Descr</i></dt>
<dd>
Specifies the power description for the Vpp2 voltage supply. If the <b>ValidMask</b> member of the <b>POWER_DESC</b> structure indicates no valid voltage values for Vpp2, then the values in <b>Vpp1Descr</b><i> </i>describe both Vpp1 and Vpp2. (Output)</dd>
<dt>
<i>IOLength[MAX_IO_RANGES]</i></dt>
<dd>
Specifies an array of the lengths of the I/O address ranges described by this CISTPL_CFTABLE_ENTRY. <b>IOLength[0]</b> is the length of the I/O address range starting at address <b>IOBase[0]</b>.</dd>
<dt>
<i>IOBase[MAX_IO_RANGES]</i></dt>
<dd>
Specifies an array of the base addresses of the I/O address ranges described by this CISTPL_CFTABLE_ENTRY. (Output)</dd>
<dt>
<i>NumIOEntries</i></dt>
<dd>
Specifies the number of I/O addresses in the arrays <b>IOLength[]</b> and<b> IOBase[]</b>. (Output)</dd>
<dt>
<i>ConfigIndex</i></dt>
<dd>
Specifies a configuration index value. The PC Card will conform to the behavior described by this CISTPL_CFTABLE_ENTRY if this value is written to the configuration option register. See <a href="ddkref_66.htm"><b>CardRequestConfiguration</b></a>. (Output)</dd>
<dt>
<i>ContainsDefaults</i></dt>
<dd>
The values described by this CISTPL_CFTABLE_ENTRY can be used as defaults for subsequent CISTPL_CFTABLE_ENTRY parsing. (Output)</dd>
<dt>
<i>IFacePresent</i></dt>
<dd>
If this field is not zero, then the <b>IFaceType</b>, <b>BVDActive</b>, <b>WPActive</b>, <b>ReadyActive</b> and <b>WaitRequired</b> members contain valid values. (Output)</dd>
<dt>
<i>IFaceType</i></dt>
<dd>
Specifies one of the following interface types: (Output)
<dl>
<dt>
0 (zero)</dt>
<dd>
Indicates a memory only interface.</dd>
<dt>
1</dt>
<dd>
Indicates an I/O interface.</dd>
<dt>
2, 3        </dt>
<dd>
Reserved.</dd>
<dt>
4–7</dt>
<dd>
Indicates a custom interface.</dd>
<dt>
8–15</dt>
<dd>
Reserved.</dd>
</dl>
</dd>
<dt>
<i>BVDActive</i></dt>
<dd>
Specifies True if BVD1 and BVD2 are active in the pin replacement register (PRR). (Output)</dd>
<dt>
<i>WPActive</i></dt>
<dd>
Specifies True if the card write protect is active in the PRR. (Output)</dd>
<dt>
<i>ReadyActive</i></dt>
<dd>
Specifies True if the READY signal is active in the PRR. (Output)</dd>
<dt>
<i>WaitRequired</i></dt>
<dd>
Specifies True if the WAIT signal is required for memory cycles. (Output)</dd>
<dt>
<i>IOAccess</i></dt>
<dd>
Specifies one of the following I/O access options: (Output)
<dl>
<dt>
1</dt>
<dd>
Indicates 8-bit only.</dd>
<dt>
2</dt>
<dd>
Indicates 8-bit access to 16-bit not supported.</dd>
<dt>
3</dt>
<dd>
Indicates 8-bit access to 16-bit is supported.</dd>
</dl>
</dd>
<dt>
<i>NumIOAddrLines</i></dt>
<dd>
Specifies the number of I/O address lines. If 0 (zero), the socket controller provides address decode. If 1–26, the value is the number of address lines decoded. (Output)</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="ddkref_56.htm"><b>CardGetParsedTuple</b></a>,  <a href="ddkref_88.htm"><b>PARSED_CONFIG</b></a>, <a href="ddkref_89.htm"><b>POWER_DESCR</b></a>, <a href="ddkref_92.htm"><b>PC Card Tuple Codes</b></a></p>
<p>&nbsp;</p></body>
</HTML>
