<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GPEVGA Class</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_gpevga_class"></a>GPEVGA Class</h2>
<p>
Many devices exist which are based (like the S3Trio64) upon the VGA standard. If your display device is VGA based, you will probably want to use the Gpevga.h header file and Gpevga.cpp functions in the same manner as the sample S3Trio64 driver to aid in configuring the numerous VGA registers. If your device is not VGA based, do not use Gpevga.h or call the functions in Gpevga.cpp.</p>
<p>
Since the VGA standard registers do not cover many of the desirable (high resolution, high bit depth) display modes, and do not define linear addressing schemes for display memory over 64k in size, you will need to determine the values to place in the non-standard registers. <b>Bear in mind that GPE only supports devices which are capable of presenting a linear frame buffer to the CPU.</b></p>
<p>
To use the GPEVGA class, derive your specific device's class from GPEVGA instead of deriving it from GPE  (GPEVGA is derived from GPE).</p>
<p>&nbsp;</p></body>
</HTML>
