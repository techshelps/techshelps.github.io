<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using GPE classes</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_using_gpe_classes"></a>Using GPE classes</h2>
<p>
The sample display driver uses the Graphics Primitive Engine (GPE) classes. While the GPE classes are optional, using them greatly facilitates the process of writing display drivers. If you use the GPE classes, you only need to provide new code necessary to make your display hardware function correctly and to perform acceleration.</p>
<p>
The GPE classes require that your display hardware uses a flat frame buffer. That is, the display's memory must lie in a contiguous memory range. Modifying the GPE classes to use a discontiguous frame buffer would require significant effort.</p>
<p>
To create a display driver based on the GPE classes, use the following approach:
<ol>
<li>
Create a directory for your project</li>
<li>
Copy the files from one of the sample driver directories, for example the S3Trio64 directory, to your project directory.</li>
<li>
Globally replace the device-specific name in those files, such as "S3Trio64", with your device's name.</li>
<li>
Change Config.CPP so that it puts your display device in a linear frame-buffer mode.</li>
<li>
Disable all hardware-specific acceleration:</li>
<li>
Build and test this non-accelerated driver.</li>
<li>
Add your own hardware acceleration code.</li>
</ol>
<p>
For more information see <a href="app_gpe.htm">GPE Classes and Methods</a>.</p>
<p>&nbsp;</p></body>
</HTML>
