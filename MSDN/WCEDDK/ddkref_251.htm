<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The [Drivers\PCMCIA\Driver] Key</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_the_.5b.drivers.5c.pcmcia.5c.driver.5d_.key"></a>The [Drivers\PCMCIA\Driver] Key</h2>
<p>
The name of a generic device driver can be a subkey of the Drivers\PCMCIA key, and are used in conjunction with drivers listed within the [Drivers\PCMCIA\Detect] key. Such<b> </b><i>Driver</i> subkeys are similar to the <a href="ddkref_250.htm">[Drivers\PCMCIA\<i>Plug-and-play ID</i>] keys</a> with respect to the values they contain.</p>
<p>
Values for this subkey are described in the following table. Additional values can be stored for purposes specific to the device.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=15%>Value name</th>
<th align=left width=22%>Value type</th>
<th align=left width=63%>Description</th>
</tr>
<tr valign=top>
<td width=15%><b>Dll</b></td>
<td width=22%><b>REG_SZ</b></td>
<td width=63%>This required entry specifies the filename for an driver DLL the Device Manager is to load.</td>
</tr>
<tr valign=top>
<td width=15%><b>Prefix</b></td>
<td width=22%><b>REG_SZ</b></td>
<td width=63%>The <b>Prefix </b>value, if it exists instead of <b>Entry</b>, specifies the device driver's <a href="devnames_2.htm">device filename prefix</a>. It is a three character identifier, such as "COM".</td>
</tr>
<tr valign=top>
<td width=15%><b>Index</b></td>
<td width=22%><b>REG_DWORD</b></td>
<td width=63%>Optional. Specifies the device index (0 through 9). The <b>Index </b>value specifies the index assigned to the driver. If the <b>Index</b> value is not present, the Device Manager assigns the lowest index value available. This index will be associated with the device (for example, PGR1). Only index values 0 through 9 are allowed. Let the Device Manager determine the index value.</td>
</tr>
<tr valign=top>
<td width=15%><b>Context</b></td>
<td width=22%><b>REG_DWORD</b></td>
<td width=63%>Optional. Specifies the device context. If the <b>Context</b> value is present (that is, if it was initialized by the device's setup application), the Device Manager passes it as the <i>dwInfo</i> parameter to <b>RegisterDevice</b>. If it is not present, a pointer to a string containing the registry path to the device's <b>Active</b> key is passed as the parameter. The driver's initialization function can then open this key to read its information. To let the driver read the <b>Active</b> key data, you should not initialize the <b>Context</b> value.</td>
</tr>
<tr valign=top>
<td width=15%><b>Ioctl</b></td>
<td width=22%><b>REG_DWORD</b></td>
<td width=63%>Optional. Specifies an optional I/O control code the Device Manager sends to an installable driver. If the <b>Ioctl</b> value is present, the Device Manager opens the loaded driver and calls its stream interface I/O control function. The Device Manager passes the I/O control code specified by the <b>Iocl</b> registry. The driver can do any necessary post-initialization in this context. For example, the driver could load modules that will use the device. <p>
In addition, the Device Manager broadcasts a WM_DEVICECHANGE message for the new device and it signals the application notification system via the <b>PegEventHasOccurred</b> function, passing it the NOTIFICATION_EVENT_DEVICE_CHANGE event.</p>
</td>
</tr>
</table><br>
<p>
For example, <b>RAMCard </b>is the name of a driver that does not have a Plug and Play ID. </p>
<pre><code>HKEY_LOCAL_MACHINE     [Drivers]         [PCMCIA]             [RAMCard]                 SZ: Prefix = RAM                 SZ: Dll = RAMCARD.DLL
</code></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
