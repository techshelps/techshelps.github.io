<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CardRegisterClient</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_cardregisterclient"></a>CardRegisterClient</h2>
<p>
The <b>CardRegisterClient </b>function registers a callback function that is called by Card Services when a specified socket event occurs. The callback function notifies the driver of the event, such as card insertion, so the driver can take the appropriate action.</p>
<h4>Syntax</h4>
<p>
<b>CARD_CLIENT_HANDLE CardRegisterClient(     <br>
CLIENT_CALLBACK</b> <i>CallBackFn </i><b>    PCARD_REGISTER_PARMS</b> <i>pParms </i><b>    );</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>CallBackFn</i></dt>
<dd>
Specifies a pointer to the driver's callback function.</dd>
<dt>
<i>pParms</i></dt>
<dd>
Specifies a pointer to a <b>CARD_REGISTER_PARMS</b> structure defining the drivers characteristics.</dd>
</dl>
<h4>Return Values</h4>
<p>
If successful, <b>CardRegisterClient</b> returns a driver handle. If unsuccessful, it returns NULL and <b>GetLastError</b> returns one of the following values:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=35%>Value</th>
<th align=left width=65%>Description</th>
</tr>
<tr valign=top>
<td width=35%>CERR_BAD_ARGS</td>
<td width=65%>Indicates the pointer specified in <i>pParms</i> or <i>CallBackFn </i>is invalid.</td>
</tr>
<tr valign=top>
<td width=35%>CERR_OUT_OF_RESOURCE</td>
<td width=65%>Indicates Card Services is unable to allocate memory to track the driver.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
A driver can request artificial insertion notifications so it can check whether a card it controls has already been inserted.</p>
<p>
Card Services sends a CE_CARD_INSERTION callback event code for every function on the PC Cards that are currently inserted. If the driver does not want to receive these artificial insertion notices, it can clear the CLIENT_ATTR_NOTIFY_SHARED and CLIENT_ATTR_NOTIFY_EXCLUSIVE bits in the <i>fAttributes</i> field of the <b>CARD_REGISTER_PARMS</b> structure.</p>
<p>
Because the CE_CARD_INSERTION callbacks can occur before <b>CardRegisterClient</b> returns, the <i>Parm2</i> member of the <b>CARD_EVENT_PARMS</b> structure contains the registering client's CARD_CLIENT_HANDLE.  For the same reason, <i>Parm1</i> also contains the registering client's handle on the CE_REGISTRATION_COMPLETE callback.</p>
<p>
When the driver is unloaded, it must call <b>CardDeregisterClient</b> to free any PC Card resources allocated to the driver.</p>
<h4>See Also</h4>
<p>
<a href="ddkref_74.htm"><b>CARD_CLIENT_HANDLE</b></a>,<b> <a href="ddkref_77.htm">CARD_EVENT</a></b>,<b> <a href="ddkref_81.htm">CARD_REGISTER_PARMS</a></b>,<b> <a href="ddkref_79.htm">CARD_EVENT_PARMS</a></b>,<b> <a href="ddkref_52.htm">CardDeregisterClient</a></b></p>
<p>&nbsp;</p></body>
</HTML>
