<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiling a Miniport Driver for Windows CE</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_wceddk_compiling_a_miniport_driver_for_windows_ce"></a>Compiling a Miniport Driver for Windows CE</h2>
<p>
The process of compiling a Miniport driver for Windows CE is slightly different than compiling for Windows NT. On Windows NT, Miniport drivers are compiled as system files (.SYS files). Windows CE does not support .sys files, so you must compile your driver as a DLL instead.</p>
<p>
As a consequence of being compiled as a DLL, your driver must export a <b>DriverEntry</b> function in its .DEF file. Typically, this function performs any general initialization, and calls other functions in the DLL to perform platform-specific initialization. The <b>DriverEntry</b> function must have the following prototype:</p>
<p>
<b>NTSTATUS DriverEntry(IN PDRIVER_OBJECT </b><i>pDriverObject_</i><b>, <br>
IN PUNICODE_STRING </b><i>pRegistryPath_</i><b>);</b></p>
<p>
For sample DriverEntry implementations, see the source code for the sample Miniport drivers.</p>
<p>&nbsp;</p></body>
</HTML>
