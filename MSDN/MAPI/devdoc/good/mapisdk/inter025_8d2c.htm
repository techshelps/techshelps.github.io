<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISupport::MakeInvalid</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisupport_makeinvalid"></a>IMAPISupport::MakeInvalid</h2>
<p>
The <b>IMAPISupport::MakeInvalid</b> method marks an object as unusable.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter025_8uge.htm"><b>IMAPISupport : IUnknown</b></a>.</p>
<pre><code><b>HRESULT MakeInvalid(
  ULONG</b><i> ulFlags</i><b>,</b>     
<b>  LPVOID</b><i> lpObject</i><b>,</b>   
<b>  ULONG</b><i> ulRefCount</i><b>,</b>  
<b>  ULONG</b><i> cMethods     </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulFlags</i></dt>
<dd>
Reserved; must be zero.</dd>
<dt>
<i>lpObject</i></dt>
<dd>
[in] Pointer to the object to be invalidated. The object's interface must be derived from <b>IUnknown</b>.</dd>
<dt>
<i>ulRefCount</i></dt>
<dd>
[in] The object's present reference count.</dd>
<dt>
<i>cMethods</i></dt>
<dd>
[in] Count of methods in the object's vtable.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The object was successfully marked as unusable.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISupport::MakeInvalid</b> method is implemented for all support objects. The object to be invalidated must be derived from the <b>IUnknown </b>interface or from an interface derived from <b>IUnknown</b>.</p>
<p>
<b>MakeInvalid</b> marks an object as unusable by replacing the object's vtable with a stub vtable of similar size in which the <b>IUnknown::AddRef</b> and <b>IUnknown::Release</b> methods perform as expected but any other methods fail, returning the value MAPI_E_INVALID_OBJECT.</p>
<h4>Notes to Callers</h4>
<p>
Service providers and message services typically call <b>IMAPISupport::MakeInvalid</b> at shutdown time. However, <b>MakeInvalid</b> can be called at any time. For example, if a client releases an object without releasing some of its subobjects, you can call <b>MakeInvalid</b> immediately to release those subobjects. </p>
<p>
You must own the object that you attempt to invalidate. It must be at least 16 bytes long and have at least three methods in its vtable. </p>
<p>
You can call <b>MakeInvalid</b> and then perform any shutdown work, such as discarding associated data structures, that is usually done during the release of an object. Code to support the object need not be kept in memory because MAPI frees the memory by calling <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> and then releases the object. You can release resources, call <b>MakeInvalid</b>, and then ignore the invalidated object. </p>
<h4>See Also</h4>
<p>
<a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a></p>
<p>&nbsp;</p></body>
</HTML>
