<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITnef::FinishComponent</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_itnef_finishcomponent"></a>ITnef::FinishComponent</h2>
<p>
The <b>ITnef::FinishComponent</b> method processes individual components from a message one at a time into a TNEF stream.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter041_0ai6.htm"><b>ITnef : IUnknown</b></a>.</p>
<pre><code><b>HRESULT FinishComponent(
  ULONG</b><i> ulFlags</i><b>,</b>                      
<b>  ULONG</b><i> ulComponentID</i><b>,</b>                
<b>  LPSPropTagArray</b><i> lpCustomPropList</i><b>,</b>   
<b>  LPSPropValue</b><i> lpCustomProps</i><b>,</b>         
<b>  LPSPropTagArray</b><i> lpPropList</i><b>,</b>         
<b>  LPSTnefProblemArray FAR *</b><i> lppProblems  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls which component will be finished. One or the other of the following flags must be set:
<dl>
<dt>
TNEF_COMPONENT_ATTACHMENT</dt>
<dd>
Finish processing for an attachment object; the <i>ulComponentID</i> parameter contains the <a href="propa_0p4d.htm">PR_ATTACH_NUM</a> property of the attachment. </dd>
<dt>
TNEF_COMPONENT_MESSAGE</dt>
<dd>
Finish processing for a message object. </dd>
</dl>
</dd>
<dt>
<i>ulComponentID</i></dt>
<dd>
[in] Zero to indicate processing for a message or the PR_ATTACH_NUM property of the attachment to be processed. If the TNEF_COMPONENT_MESSAGE flag is set in the <i>ulFlags</i> parameter, <i>ulComponentID</i> must be zero.</dd>
<dt>
<i>lpCustomPropList</i></dt>
<dd>
[in] Pointer to an <a href="structyp_23i1.htm"><b>SPropTagArray</b></a> structure that holds property tags identifying the properties passed in the <i>lpCustomProps </i>parameter. There must be a one-to-one correspondence between each property value in <i>lpCustomProps </i>and a property tag in the <i>lpCustomPropList </i>parameter.</dd>
<dt>
<i>lpCustomProps</i></dt>
<dd>
[in] Pointer to an <a href="structyp_9sbp.htm"><b>SPropValue</b></a> structure containing property values for the properties to encode.</dd>
<dt>
<i>lpPropList</i></dt>
<dd>
[in] Pointer to an <b>SPropTagArray</b> structure containing property tags for the properties to encode.</dd>
<dt>
<i>lppProblems</i></dt>
<dd>
[out] Pointer to a pointer to a returned <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a> structure. The <b>STnefProblemArray</b> structure indicates which properties were not encoded properly, if any. If NULL is passed in the <i>lppProblems</i> parameter, no property problem array is returned. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The call succeeded and has returned the expected value or values.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Transport providers, message store providers, and gateways call the <b>ITnef::FinishComponent</b> method to perform TNEF processing for one component, either a message or an attachment, as indicated by the flag set in the <i>ulFlags</i> parameter. </p>
<p>
For component processing to be enabled, the calling provider or gateway must have passed the TNEF_COMPONENT_ENCODING flag in <i>ulFlags </i>for the <a href="function_28ml.htm"><b>OpenTnefStream</b></a> function or <a href="function_3qk8.htm"><b>OpenTnefStreamEx</b></a> function that opened the object to receive encoding.</p>
<p>
Passing values in <i>lpCustomPropList</i> and <i>lpCustomProps</i> performs component encoding equivalent to that done by the <a href="inter041_6mlv.htm"><b>ITnef::SetProps</b></a> method. Passing a value in the <i>lpPropList</i> parameter performs component encoding equivalent to that done by the <a href="inter041_267n.htm"><b>ITnef::AddProps</b></a> method with the TNEF_PROP_INCLUDE flag set in <i>ulFlags</i>. Passing such values enables you to perform encodings with a single call rather than multiple calls.</p>
<p>
The TNEF implementation reports TNEF stream encoding problems without halting the <b>FinishComponent </b>process. The <b>STnefProblemArray</b> structure returned in <i>lppProblems</i> indicates which TNEF attributes or MAPI properties, if any, could not be processed. The value returned in the <b>scode </b>member of the <b>STnefProblemArray</b> structure indicates the specific problem. The provider or gateway can work on the assumption that all properties or attributes for which <b>FinishComponent </b>does not return a problem report were processed successfully. </p>
<p>
If a provider or gateway does not work with problem arrays, it can pass NULL in <i>lppProblems;</i> in this case, no problem array is returned. </p>
<p>
The value returned in <i>lppProblems</i> is only valid if the call returns S_OK. When S_OK is returned, the provider or gateway should check the values returned in the <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a> structure. If an error occurs on the call, then the <b>STnefProblemArray</b> structure is not filled in and the calling provider or gateway should not use or free the structure. If no error occurs on the call, the calling provider or gateway must release the memory for the <b>STnefProblemArray</b> by calling the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a><b> </b>function.</p>
<h4>See Also</h4>
<p>
<a href="inter041_267n.htm"><b>ITnef::AddProps</b></a>, <a href="inter041_6mlv.htm"><b>ITnef::SetProps</b></a>, <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a>, <a href="function_28ml.htm"><b>OpenTnefStream</b></a>, <a href="function_3qk8.htm"><b>OpenTnefStreamEx</b></a>, <a href="structyp_23i1.htm"><b>SPropTagArray</b></a>, <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a></p>
<p>&nbsp;</p></body>
</HTML>
