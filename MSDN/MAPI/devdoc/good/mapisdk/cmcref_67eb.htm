<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>cmc_send_documents</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_cmc_send_documents"></a>cmc_send_documents</h2>
<p>
The <b>cmc_send_documents</b> function sends a document. </p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>XCMC.H</td>
</tr>
</table><br>
<pre><code><b>CMC_return_code cmc_send_documents (
  CMC_string</b><i> recipient_addresses</i><b>,</b>   
<b>  CMC_string</b><i> subject</i><b>,</b>               
<b>  CMC_string</b><i> text_note</i><b>,</b>             
<b>  CMC_flags</b><i> send_doc_flags</i><b>,</b>         
<b>  CMC_string</b><i> file_paths</i><b>,</b>            
<b>  CMC_string</b><i> file_names</i><b>,</b>            
<b>  CMC_string</b><i> delimiter</i><b>,</b>             
<b>  CMC_ui_id</b><i> ui_id                   </i>
<b>)</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>recipient_addresses</i></dt>
<dd>
[in] Pointer to the address of the document recipient. When the client application specifies multiple recipients, it should separate the strings using the character specified by the <i>delimiter</i> parameter. The <b>cmc_send_documents</b> function assumes a recipient to be a primary recipient unless the address is prefixed by CC: (carbon copy) or BCC: (blind carbon copy). The TO: prefix can optionally be used with the primary recipient for consistency with the other recipient types. Passing NULL in the <i>recipient_addresses</i> parameter indicates that <b>cmc_send_documents</b> should present a dialog box to prompt for recipients.</dd>
<dt>
<i>subject</i></dt>
<dd>
[in] Pointer to the subject of the document. Passing NULL in the <i>subject</i> parameter indicates no subject text.</dd>
<dt>
<i>text_note</i></dt>
<dd>
[in] Pointer to the text note carried with the document. Passing NULL in the <i>text_note</i> parameter indicates no text note.</dd>
<dt>
<i>send_doc_flags </i></dt>
<dd>
[in] Bitmask of flags used to control how documents are sent. The following flags can be set:
<dl>
<dt>
CMC_COUNTED_STRING_TYPE</dt>
<dd>
The string type the calling application or provider uses for CMC interactions is CMC_counted_string. If this flag is not set, the function treats all strings as null-terminated strings.</dd>
<dt>
CMC_ERROR_UI_ALLOWED</dt>
<dd>
Displays a dialog box on encountering recoverable errors. If this flag is not set, <b>cmc_send_documents</b> does not display a dialog box and returns an error value instead.</dd>
<dt>
CMC_FIRST_ATTACH_AS_TEXT_NOTE</dt>
<dd>
Sends the first attachment as the message text. If this flag is not set, the <i>text_note</i> field contains the text note.</dd>
<dt>
CMC_LOGON_UI_ALLOWED</dt>
<dd>
Displays a dialog box to prompt for logon if required. If this flag is not set, <b>cmc_send_documents</b> does not display a dialog box and returns an error if the user does not supply enough information.</dd>
<dt>
CMC_SEND_UI_REQUESTED</dt>
<dd>
Displays a dialog box to prompt for recipients, message field information, and other sending options. If this flag is not set, <b>cmc_send_documents</b> does not display a dialog box but must specify at least one recipient.</dd>
</dl>
</dd>
<dt>
<i>file_paths</i></dt>
<dd>
[in] Pointer to the actual path for the attachment file. When the client application specifies multiple paths, it should separate the names using the character indicated by the <i>delimiter</i> parameter.</dd>
<dt>
<i>attach_titles</i></dt>
<dd>
[in] Pointer to the title of the attachment displayed for the recipient. When the client application specifies multiple titles, it should separate the titles using the character indicated by the <i>delimiter</i> parameter.</dd>
<dt>
<i>delimiter</i></dt>
<dd>
[in] Pointer to a character used to delimit the names in the <i>file_paths</i>, <i>attach_titles</i>, and <i>recipient_addresses</i> strings. The client application should choose a character that is not used in operating system filenames or recipient names. This parameter cannot be NULL.</dd>
<dt>
<i>ui_id</i></dt>
<dd>
[in] Handle of a dialog box for <b>cmc_send_documents</b> to present to help resolve processing questions or prompt the user for additional information as required.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
CMC_E_ATTACHMENT_NOT_FOUND</dt>
<dd>
The specified attachment was not found as specified.</dd>
<dt>
CMC_E_ATTACHMENT_OPEN_FAILURE</dt>
<dd>
The specified attachment was found but could not be opened, or the attachment file could not be created.</dd>
<dt>
CMC_E_ATTACHMENT_READ_FAILURE</dt>
<dd>
The specified attachment was found and opened, but there was an error reading it.</dd>
<dt>
CMC_E_ATTACHMENT_WRITE_FAILURE</dt>
<dd>
The attachment file was created successfully, but there was an error writing it.</dd>
<dt>
CMC_E_COUNTED_STRING_NOT_SUPPORTED</dt>
<dd>
The current implementation does not support counted strings.</dd>
<dt>
CMC_E_FAILURE</dt>
<dd>
There was a general failure that does not fit the description of any other return value.</dd>
<dt>
CMC_E_INSUFFICIENT_MEMORY</dt>
<dd>
Insufficient memory was available to complete the requested operation.</dd>
<dt>
CMC_E_INVALID_FLAG</dt>
<dd>
A flag set using a flags parameter was invalid.</dd>
<dt>
CMC_E_INVALID_PARAMETER</dt>
<dd>
A function parameter was invalid. </dd>
<dt>
CMC_E_INVALID_UI_ID</dt>
<dd>
The specified user-interface identifier is invalid or no longer valid.</dd>
<dt>
CMC_E_LOGON_FAILURE</dt>
<dd>
The service, user name, or password specified was invalid, so logon cannot be completed.</dd>
<dt>
CMC_E_RECIPIENT_NOT_FOUND</dt>
<dd>
One or more of the specified recipients were not found.</dd>
<dt>
CMC_E_TEXT_TOO_LARGE</dt>
<dd>
The size of the text string passed to the current implementation is too large.</dd>
<dt>
CMC_E_TOO_MANY_FILES</dt>
<dd>
The current implementation cannot support the number of files specified.</dd>
<dt>
CMC_E_TOO_MANY_RECIPIENTS</dt>
<dd>
The current implementation cannot support the number of recipients specified.</dd>
<dt>
CMC_E_UNSUPPORTED_FLAG</dt>
<dd>
The current implementation does not support the flag requested.</dd>
<dt>
CMC_E_USER_CANCEL</dt>
<dd>
The operation was canceled by the user.</dd>
<dt>
CMC_E_USER_NOT_LOGGED_ON</dt>
<dd>
The user was not logged on and the CMC_LOGON_UI_ALLOWED flag was not set.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>cmc_send_documents</b> function is primarily useful for calls from a scripting language application, such as a spreadsheet application using macros, that cannot handle data structures. The <b>cmc_send_documents</b> function tries to establish a session without a logon dialog box. If this is not possible, it prompts the user for logon information to establish a session. Before the function returns, it closes the session.</p>
<p>&nbsp;</p></body>
</HTML>
