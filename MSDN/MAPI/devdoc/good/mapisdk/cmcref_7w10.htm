<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>cmc_send</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_cmc_send"></a>cmc_send</h2>
<p>
The <b>cmc_send</b> function sends a message. </p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>XCMC.H</td>
</tr>
</table><br>
<pre><code><b>CMC_return_code cmc_send (
  CMC_session_id</b><i> session</i><b>,</b>               
<b>  CMC_message FAR *</b><i> message</i><b>,</b>            
<b>  CMC_flags</b><i> send_flags</i><b>,</b>                 
<b>  CMC_ui_id</b><i> ui_id</i><b>,</b>                      
<b>  CMC_extension FAR s*</b><i> send_extensions  </i>
<b>)</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>session</i></dt>
<dd>
[in] Opaque session handle that represents a MAPI session object indicating a session with a message service. If the value provided for the <i>session</i> parameter is invalid, the <b>cmc_send </b>function returns <small>cmc_e_invalid_session_id</small>.</dd>
<dt>
<i>message</i></dt>
<dd>
[in] Pointer to a <a href="cmcref_6sv9.htm"><b>CMC_message</b></a> structure identifying the message to be sent. If the client application has not set the flag CMC_SEND_UI_REQUESTED in the <i>send_flags</i> parameter, the message structure must specify at least one primary (TO), carbon-copy (CC), or blind carbon-copy (BCC) recipient. All other structure members are optional. The <b>cmc_send</b> function ignores the <b>time_sent</b> and <b>message_reference</b> members.</dd>
<dt>
<i>send_flags</i></dt>
<dd>
[in] Bitmask of flags. The following flags can be set:
<dl>
<dt>
CMC_COUNTED_STRING_TYPE</dt>
<dd>
The string type the calling application or provider uses for CMC interactions is CMC_counted_string. If this flag is not set, the function treats all strings as null-terminated strings.</dd>
<dt>
CMC_ERROR_UI_ALLOWED</dt>
<dd>
Displays a dialog box on encountering recoverable errors. If this flag is not set, <b>cmc_send</b> does not display a dialog box and returns an error value instead.</dd>
<dt>
CMC_LOGON_UI_ALLOWED</dt>
<dd>
Displays a dialog box to prompt for logon if required. If this flag is not set, <b>cmc_send</b> does not display a dialog box and returns an error value if the caller does not supply enough information.</dd>
<dt>
CMC_SEND_UI_REQUESTED</dt>
<dd>
Displays a dialog box to prompt for recipients, message field information, and other sending options. If this flag is not set, <b>cmc_send</b> does not display a dialog box and the caller must specify at least one recipient.</dd>
</dl>
</dd>
<dt>
<i>ui_id</i></dt>
<dd>
[in] Handle of a dialog box for <b>cmc_send</b> to present when resolving processing questions, prompting the user for additional information, or verifying provided information.</dd>
<dt>
<i>send_extensions </i></dt>
<dd>
[in, out] Pointer to an array of <a href="cmcref_1woe.htm"><b>CMC_extension</b></a> structures specifying function extensions. On input, this array contains MAPI extensions to the standard <b>cmc_send</b> function. A value of NULL for the <i>send_extensions </i>parameter indicates that the client application has no extensions for <b>cmc_send</b> and is expecting no extensions. 
<p>
On output, <b>cmc_send</b> returns to the array new information about the send operation. It returns NULL if it generates no output extensions. 

</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
CMC_E_AMBIGUOUS_RECIPIENT</dt>
<dd>
The recipient name was ambiguous. Multiple matches were found.</dd>
<dt>
CMC_E_ATTACHMENT_NOT_FOUND</dt>
<dd>
The specified attachment was not found as specified.</dd>
<dt>
CMC_E_ATTACHMENT_OPEN_FAILURE</dt>
<dd>
The specified attachment was found but could not be opened, or the attachment file could not be created.</dd>
<dt>
CMC_E_ATTACHMENT_READ_FAILURE</dt>
<dd>
The specified attachment was found and opened, but there was an error reading it.</dd>
<dt>
CMC_E_ATTACHMENT_WRITE_FAILURE</dt>
<dd>
The attachment file was created successfully, but there was an error writing it.</dd>
<dt>
CMC_E_COUNTED_STRING_UNSUPPORTED</dt>
<dd>
The current implementation does not support the counted-string type.</dd>
<dt>
CMC_E_FAILURE</dt>
<dd>
There was a general failure that does not fit the description of any other return value.</dd>
<dt>
CMC_E_INSUFFICIENT_MEMORY</dt>
<dd>
Insufficient memory was available to complete the requested operation.</dd>
<dt>
CMC_E_INVALID_FLAG</dt>
<dd>
A flag set using a flags parameter was invalid.</dd>
<dt>
CMC_E_INVALID_MESSAGE_PARAMETER</dt>
<dd>
One of the parameters in the message was invalid.</dd>
<dt>
CMC_E_INVALID_PARAMETER</dt>
<dd>
A function parameter was invalid. </dd>
<dt>
CMC_E_INVALID_SESSION_ID</dt>
<dd>
The specified session handle is invalid or no longer valid — for example, after logging off.</dd>
<dt>
CMC_E_INVALID_UI_ID</dt>
<dd>
The specified user-interface identifier is invalid or no longer valid.</dd>
<dt>
CMC_E_LOGON_FAILURE</dt>
<dd>
The service, user name, or password specified were invalid, so logon cannot be completed.</dd>
<dt>
CMC_E_RECIPIENT_NOT_FOUND</dt>
<dd>
One or more of the specified recipients were not found.</dd>
<dt>
CMC_E_TEXT_TOO_LARGE</dt>
<dd>
The size of the text string passed to the current implementation is too large.</dd>
<dt>
CMC_E_TOO_MANY_FILES</dt>
<dd>
The current implementation cannot support the number of files specified.</dd>
<dt>
CMC_E_TOO_MANY_RECIPIENTS</dt>
<dd>
The current implementation cannot support the number of recipients specified.</dd>
<dt>
CMC_E_UNSUPPORTED_DATA_EXT</dt>
<dd>
The current implementation does not support the data extension requested.</dd>
<dt>
CMC_E_UNSUPPORTED_FLAG</dt>
<dd>
The current implementation does not support the flag requested.</dd>
<dt>
CMC_E_UNSUPPORTED_FUNCTION_EXT</dt>
<dd>
The current implementation does not support the function extension requested.</dd>
<dt>
CMC_E_USER_CANCEL</dt>
<dd>
The operation was canceled by the user.</dd>
<dt>
CMC_E_USER_NOT_LOGGED_ON</dt>
<dd>
The user was not logged on and the CMC_LOGON_UI_ALLOWED flag was not set.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>cmc_send</b> function can, at the client application's option, either use an interface, like a dialog box, to prompt the user for message creation or proceed without any user interaction. A successful return from this function does not necessarily imply recipient validation.</p>
<p>
The client application can optionally provide recipient list, subject text, attachments, and note text for the message. If the client application does not provide the required message elements, the <b>cmc_send</b> function can prompt the user for them if a dialog box is available. If the client provides one or more recipients, the function can send the message without prompting the user. If the client provides optional parameters and requests a dialog box, the parameters provide the initial values for the dialog box.</p>
<p>
The following conditions apply to the <a href="cmcref_6sv9.htm"><b>CMC_message</b></a> structure members: 
<dl>
<dt>
<b>message_type</b></dt>
<dd>
To specify an interpersonal message, use a pointer to the string "CMC:IPM". If the client application provides a pointer value of NULL or a pointer to an empty string, <b>cmc_send</b> uses the default string CMC:IPM.</dd>
<dt>
<b>subject </b></dt>
<dd>
A pointer value of NULL indicates no subject text. </dd>
<dt>
<b>text_note</b></dt>
<dd>
A pointer value of NULL indicates no message text. If the client application does pass a non-null value to indicate the message text that exceeds the limits of the service provider, the provider can demote the text to an attachment. Alternatively, it can cause <b>cmc_send</b> to return <small>cmc_e_text_too_large</small>.</dd>
<dt>
<b>recipients<i> </i></b></dt>
<dd>
A pointer value of NULL indicates no recipients. If the client application passes a non-null value to indicate recipients in excess of the number of recipients that the service provider allows per message, <b>cmc_send</b> returns <small>cmc_e_too_many_recipients</small>.
<p>
Note that the <a href="cmcref_5cvo.htm"><b>CMC_recipient</b></a> structure pointed to by <b>recipients</b> can include either the recipient's name, an address, or a name and address pair. If the client application specifies only a name, <b>cmc_send</b> resolves the name to an address using name resolution rules defined by the CMC implementation. If the client specifies only an address, <b>cmc_send</b> uses this address for delivery and for the recipient display name. Finally, if the client specifies a name and address pair, <b>cmc_send</b> does not resolve the name.

<p>
The <b>cmc_send</b> function does not require a recipient of type originator to send a message. 
</dd>
<dt>
<b>attachments </b></dt>
<dd>
A pointer value of NULL indicates no attachments. If the client application passes a non-null value to indicate attachments in excess of the number of attachments that the service provider allows per message, <b>cmc_send</b> returns <small>cmc_e_too_many_files</small>. 
<p>
The <b>cmc_send</b> function reads the attachment files before it returns. Thus the caller or user can freely change or delete attachment files after <b>cmc_send</b> returns without affecting the message.
</dd>
<dt>
<b>message_flags </b></dt>
<dd>
Bitmask of message flags. The following flag can be set:
<dl>
<dt>
CMC_MSG_TEXT_NOTE_AS_FILE</dt>
<dd>
The <b>text_note</b> member of the <i>message</i> parameter is ignored and the message text is contained in the file referred to by the first attachment. If this flag is set to zero, the message text is contained in the <b>text_note</b> member.
</dd>
</dl>
</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="cmcref_1woe.htm"><b>CMC_extension</b></a>,<b> <a href="cmcref_6sv9.htm">CMC_message</a></b>,<b> <a href="cmcref_5cvo.htm">CMC_recipient</a></b></p>
<p>&nbsp;</p></body>
</HTML>
