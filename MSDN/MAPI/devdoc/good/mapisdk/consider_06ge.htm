<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Ensuring a Thread-Safe Notification</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_ensuring_a_thread_safe_notification"></a>Ensuring a Thread-Safe Notification</h2>
<p>
If your client runs on a multithreaded platform such as Windows NT, you may need assurance that calls to your <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a> methods occur on a particular thread. Because calls to <b>OnNotify</b> can typically occur on any thread, it is possible to receive notifications on unexpected and unwanted threads, leading to errors that are difficult to debug. </p>
<p>
To guarantee that calls to <b>OnNotify</b> for a particular notification are made on the same thread that was used for the <b>Advise</b> call, call <a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a> before calling <b>Advise</b>. <b>HrThisThreadAdviseSink</b> creates a new advise sink object from your advise sink object. Pass this new object in the call to <b>Advise</b>. All clients with advise sink objects that might not work outside the context of a particular thread should always register advise sink objects created with <b>HrThisThreadAdviseSink</b>.</p>
<p>
If your client runs on a 16-bit platform, you can call <b>HrThisThreadAdviseSink</b> if desired without any negative side effects; the only processing that occurs is an increment of the reference count on the original advise sink. </p>
<p>&nbsp;</p></body>
</HTML>
