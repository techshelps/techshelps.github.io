<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Functions for Visual Basic</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_functions_for_visual_basic"></a>Functions for Visual Basic</h1>
<p>
Visual Basic uses a different set of calling and programming conventions than C and C++ use. Different structure and parameter definitions support the Visual Basic representation of strings and of structures, which in Visual Basic are called <i>types</i>. The following list describes how programming Simple MAPI Visual Basic applications differs from programming Simple MAPI C and C++ applications:
<ul>
<li>
Because the concept of a pointer is foreign to Visual Basic, developers use extra function parameters instead of the complex pointer structures used in C and C++. </li>
<li>
Because the Visual Basic MAPI functions are declared, it is not necessary to explicitly cast passed arguments using <b>ByVal</b>. </li>
<li>
An empty string in a string variable is equivalent to a NULL value. </li>
<li>
Arrays must be dynamically declared so that they are redimensioned when the Simple MAPI function is executed.</li>
<li>
Visual Basic manages memory, eliminating the need for calling the <b>MAPIFreeBuffer</b> function.</li>
<li>
All structures used in the Visual Basic version of Simple MAPI are Visual Basic types rather than C-language structures.</li>
<li>
All strings used in the Visual Basic version of Simple MAPI are Visual Basic strings rather than C-language strings.</li>
</ul>
<p>
The Simple MAPI functions for Visual Basic work with Visual Basic 3, Visual Basic 4, and Visual Basic for Applications. Note that slight differences in the 16-bit and 32-bit Visual Basic runtime DLLs mean that some Simple MAPI functions have different declarations depending on which runtime is being used. The 32-bit declarations use explicit Visual Basic array notation. The alternate declarations are documented with the functions that have them.</p>
<p>&nbsp;</p></body>
</HTML>
