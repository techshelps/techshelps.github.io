<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Finding Information About a User in the Address Book</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_finding_information_about_a_user_in_the_address_book"></a>Finding Information About a User in the Address Book</h1>
<p>
You can find a user in the address book given a name, part of a name, or other information about the user; retrieve information from that entry; and search for several users at a time. </p>
<h4>Design Tasks</h4>
<ol>
<li>
Decide whether you're searching the entire address book, one or more containers belonging to a specific message service, or a particular type of container such as a personal or global address list.</li>
<li>
Decide what properties are in your search criteria. The only property you can rely on searching with acceptable performance is <a href="propa_1yjp.htm">PR_DISPLAY_NAME</a>. If you want to use another property such as an account name, employee identification number, or organization name, you must experiment with the address book providers you expect to use to verify that searching on those properties is supported and the performance is acceptable.</li>
<li>
Understand whether or not the information you are given should identify each user uniquely. If it can be ambiguous — if it can match more than one entry in the address book — then decide whether your program should:<ul>
<li>
Prompt its user to choose the right entry.</li>
<li>
Choose the right entry itself based on further information retrieved about each entry.</li>
<li>
Fail.</li>
</ul>
</li>
</ol>
<h4>Implementation Tasks</h4>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To search the entire address book by display name for one or more entries</h5>
<ul>
<li>
Use the <a href="inter006_64v9.htm"><b>IAddrBook::ResolveName</b></a> method. You can optionally request a dialog box that prompts the user to choose the correct entry in case the information you were given matches more than one entry.</li>
</ul>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To open the user's personal address book (PAB)</h5>
<ol>
<li>
Retrieve its entry identifier by calling the <a href="inter006_89wi.htm"><b>IAddrBook::GetPAB</b></a> method. </li>
<li>
Call the <a href="inter006_4cc9.htm"><b>IAddrBook::OpenEntry</b></a> method passing the PAB's entry identifier.</li>
</ol>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To open a specific container other than the PAB</h5>
<ol>
<li>
Open the address book's root container by calling the <a href="inter006_4cc9.htm"><b>IAddrBook::OpenEntry</b></a> method with a NULL entry identifier. The root container is constructed by MAPI and contains the top-level containers of all the address book providers in the profile.</li>
<li>
Get the list of top-level containers by calling the <a href="inter011_1sh1.htm"><b>IMAPIContainer::GetHierarchyTable</b></a> method.</li>
<li>
If you want a specific container type such as the global address list, restrict the table on <a href="propa_7s6d.htm">PR_DISPLAY_TYPE</a>:<ol type=a>
<li>
Create a property restriction to match PR_DISPLAY_TYPE with the value for the particular type of container you want to open. For example, to open the global address book, build a property restriction that matches PR_DISPLAY_TYPE with the DT_GLOBAL value.</li>
<li>
Create an <a href="structyp_23i1.htm"><b>SPropTagArray</b></a> including <a href="propa_8cv8.htm">PR_ENTRYID</a>, <a href="propa_7s6d.htm">PR_DISPLAY_TYPE</a>, and any other columns of interest.</li>
<li>
Call the <a href="function_0dgz.htm"><b>HrQueryAllRows</b></a> function passing your property tag array and restriction. Ordinarily, there will be a single global address list, but the call can return zero, one, or more rows depending on the address book providers in your profile. Be prepared to handle all these cases, not just one row.</li>
<li>
Call the <a href="inter006_4cc9.htm"><b>IAddrBook::OpenEntry</b></a> method with the <a href="propa_8cv8.htm">PR_ENTRYID</a> column from the row you want to open the container.</li>
</ol>
</li>
<li>
If you want a container belonging to a specific address book provider, restrict the table on <a href="propa_1mw4.htm">PR_AB_PROVIDER_ID</a>:<ol type=a>
<li>
Create a property restriction to match PR_AB_PROVIDER_ID with the value that represents the target address book provider. You will find this property value in a header file created by the service provider. In the Platform SDK, for instance, the value for the flat file address book sample is SAB_PROVIDER_ID in SMPAB.H.</li>
<li>
Create an <b>SPropTagArray</b> structure including PR_ENTRYID, PR_AB_PROVIDER_ID, and any other columns of interest.</li>
<li>
Call the <b>HrQueryAllRows</b> function passing your property tag array and restriction. The call will return zero rows if the provider you want is not in the profile. It can return one or more rows depending on the provider's containers are organized, but it will only return the top-level rows.</li>
<li>
Call the <b>IAddrBook::OpenEntry</b> method with the PR_ENTRYID column from the row you want to open the container. If the container you want is not a top-level container, you will then have to navigate down through the latter's hierarchy table.</li>
</ol>
</li>
</ol>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To search in a specific address book container</h5>
<ol>
<li>
Open its contents table by calling its <b>GetContentsTable</b> method. </li>
<li>
Use <a href="inter026_2lkn.htm"><b>IMAPITable::FindRow</b></a>, <a href="inter026_3gmd.htm"><b>IMAPITable::SortTable</b></a>, and <a href="inter026_43lg.htm"><b>IMAPITable::Restrict</b></a> to search the contents table just as you can any MAPI table. See <a href="tables_5zvr.htm">Table Positioning</a> and <a href="tables_0qyb.htm">About Restrictions</a>. These methods are subject to limitations in the provider's implementation, and their speed is unpredictable; careful testing against any providers you expect to use is indispensible. In addition to the normal <b>IMAPITable</b> methods, there are two search techniques specific to address book containers:<ul>
<li>
Restriction on <a href="propa_1gtu.htm">PR_ANR</a> (ambiguous name resolution). Although formatted as an ordinary <b>SPropertyRestriction</b> structure, this restriction actually invokes a special display name matching algorithm based on separating the string you give it into words and prefix-matching those words against display names in the address book. See <a href="ab_94by.htm">Implementing Name Resolution</a>.</li>
<li>
<a href="inter003_0ss3.htm"><b>IABContainer::ResolveNames</b></a>. This method does the same work as a PR_ANR restriction for multiple names, and can be much faster. Providers are not required to implement it, and generally do not unless it carries a significant performance benefit. It is not necessary to open the contents table in order to user this method.</li>
</ul>
</li>
<li>
After applying any of the restriction methods listed above, call the <a href="inter026_7wkz.htm"><b>IMAPITable::QueryRows</b></a> method to retrieve any rows that match the restriction. You may get back zero, one, or more rows that match.</li>
<li>
Retrieve additional information for a single address book entry by calling the <a href="inter006_4cc9.htm"><b>IAddrBook::OpenEntry</b></a> method passing its entry identifier, then call <b>GetProps</b> on the resulting <b>IMAPIProp</b> interface. To retrieve additional properties for multiple address book entries, you can of course call <b>OpenEntry</b> for each one, but it is usually much more efficient to call the <a href="inter006_98fn.htm"><b>IAddrBook::PrepareRecips</b></a> method. <b>PrepareRecips</b> requires an <a href="structyp_87n8.htm"><b>ADRLIST</b></a> structure.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
