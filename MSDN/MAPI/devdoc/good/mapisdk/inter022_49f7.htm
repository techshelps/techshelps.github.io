<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPIProp::GetIDsFromNames</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapiprop_getidsfromnames"></a>IMAPIProp::GetIDsFromNames</h2>
<p>
The <b>IMAPIProp::GetIDsFromNames</b> method provides the property identifiers that correspond to one or more property names.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter022_00tq.htm"><b>IMAPIProp : IUnknown</b></a>.</p>
<pre><code><b>HRESULT GetIDsFromNames(
  ULONG</b><i> cPropNames</i><b>,</b>                  
<b>  LPMAPINAMEID FAR *</b><i> lppPropNames</i><b>,</b>   
<b>  ULONG</b><i> ulFlags</i><b>,</b>                     
<b>  LPSPropTagArray FAR *</b><i> lppPropTags  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cPropNames</i></dt>
<dd>
[in] Count of property names pointed to by the <i>lppPropNames </i>parameter. If <i>lppPropNames</i> is NULL, the <i>cPropNames</i> parameter must be zero<i>.</i></dd>
<dt>
<i>lppPropNames</i></dt>
<dd>
[in] Pointer to an array of property names or NULL. Passing NULL requests property identifiers for all property names in all property sets about which the object has information. The <i>lppPropNames</i> parameter must not be NULL if the MAPI_CREATE flag is set in the <i>ulFlags</i> parameter.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that indicates how the property identifiers should be returned. The following flag can be set:
<dl>
<dt>
MAPI_CREATE</dt>
<dd>
Assigns a property identifier to one or more of the names included in the property name array pointed to by <i>lppPropNames</i> if one has not yet been assigned<i>.</i> Internally registers the identifier in the name-to-identifier mapping table.</dd>
</dl>
</dd>
<dt>
<i>lppPropTags</i></dt>
<dd>
[out] Pointer to a pointer to an array of property tags containing existing or newly assigned property identifiers. The property types for the property tags in this array are set to PT_UNSPECIFIED. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The identifiers for the specified property names were successfully returned.</dd>
<dt>
MAPI_E_NO_SUPPORT</dt>
<dd>
The object does not support named properties.</dd>
<dt>
MAPI_E_NOT_ENOUGH_MEMORY</dt>
<dd>
Insufficient memory was available to retrieve the identifiers.</dd>
<dt>
MAPI_E_TOO_BIG</dt>
<dd>
The operation cannot be performed because it requires too many property tags be returned.</dd>
<dt>
MAPI_W_ERRORS_RETURNED</dt>
<dd>
The call succeeded overall, but one or more property identifiers could not be returned. The corresponding property type for each inaccessible property is set to PT_ERROR and its identifier to zero. When this warning is returned, handle the call as successful. To test for this warning, use the <b>HR_FAILED</b> macro. See <a href="extend_5k9z.htm">Using Macros for Error Handling</a>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The<b> IMAPIProp::GetIDsFromNames</b> method retrieves an array of property tags that hold the property identifiers for one or more named properties. <a href="#_mapi1book_imapiprop_getidsfromnames"><b>IMAPIProp::GetIDsFromNames</b></a> can be called to:
<ul>
<li>
Create identifiers for new names.</li>
<li>
Retrieve identifiers for specific names.</li>
<li>
Retrieve identifiers for all named properties that are included in the object's mapping.</li>
</ul>
<p>
Named properties are commonly used by message store providers for folders and messages. Other objects, such as messaging users and profile sections, might not support the association of names to property identifiers and return MAPI_E_NO_SUPPORT from <b>GetIDsFromNames</b>.</p>
<p>
If there is an error returning an identifier for a particular name, <b>GetIDsFromNames</b> returns MAPI_W_ERRORS_RETURNED and sets the property type in the property tag array entry that corresponds to the name to PT_ERROR and the identifier to zero. </p>
<p>
Name-to-identifier mapping is represented by an object's <a href="propa_04f9.htm">PR_MAPPING_SIGNATURE</a> property. PR_MAPPING_SIGNATURE contains a <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> structure that indicates the service provider responsible for the object. If the PR_MAPPING_SIGNATURE property is the same for two objects, assume that these objects use the same name-to-identifier mapping. </p>
<h4>Notes to Implementers</h4>
<p>
The identifiers that you pass back in the property tag array pointed to by <i>lppPropNames</i> must be in the 0x8000 to 0xFFFE range. The entries in this array must be in the same order as the names passed in the property name array pointed to by <i>lppPropNames</i>. </p>
<p>
If you support named properties on a container, use the same name-to-identifier mapping for all objects in your container. That is, do not use a different mapping for each folder in your message store or each message in your folder.</p>
<h4>Notes to Callers</h4>
<p>
Because the property types for the returned identifiers in the property tag array pointed to by <i>lppPropTags</i> are set to PT_UNSPECIFIED, you will need to call <a href="inter022_6cxf.htm"><b>IMAPIProp::SetProps</b></a> to retrieve the accurate types. </p>
<p>
If you move or copy objects with named properties, and the source and destination objects have different mapping signatures as indicated by the values of their PR_MAPPING_SIGNATURE properties, you must preserve the names during these operations. To preserve property names, adjust the corresponding property identifiers to match the name-to-identifier mapping of the destination object.</p>
<p>
Some objects have a limit as to the number of property identifiers they can name. If a call to <b>GetIDsFromNames</b> causes this limit to be exceeded, the method returns MAPI_E_TOO_BIG. In this case, query by identifier.</p>
<p>
For more information, see <a href="property_2jw3.htm">Named Properties</a>. </p>
<h4>See Also</h4>
<p>
<a href="inter022_7ib7.htm"><b>IMAPIProp::GetNamesFromIDs</b></a>, <a href="structyp_1iqs.htm"><b>MAPINAMEID</b></a>, <a href="structyp_3p9g.htm"><b>MAPIUID</b></a></p>
<p>&nbsp;</p></body>
</HTML>
