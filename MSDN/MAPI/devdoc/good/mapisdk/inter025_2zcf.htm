<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISupport::DoCopyTo</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisupport_docopyto"></a>IMAPISupport::DoCopyTo</h2>
<p>
The <b>IMAPISupport::DoCopyTo</b> method copies or moves all properties of one object, except for specifically excluded properties, to another object.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter025_8uge.htm"><b>IMAPISupport : IUnknown</b></a>.</p>
<pre><code><b>HRESULT DoCopyTo(
  LPCIID</b><i> lpSrcInterface</i><b>,</b>                 
<b>  LPVOID</b><i> lpSrcObj</i><b>,</b>                       
<b>  ULONG</b><i> ciidExclude</i><b>,</b>                     
<b>  LPCIID</b><i> rgiidExclude</i><b>,</b>                   
<b>  LPSPropTagArray</b><i> lpExcludeProps</i><b>,</b>        
<b>  ULONG</b><i> ulUIParam</i><b>,</b>                       
<b>  LPMAPIPROGRESS</b><i> lpProgress</i><b>,</b>             
<b>  LPCIID</b><i> lpDestInterface</i><b>,</b>                
<b>  LPVOID</b><i> lpDestObj</i><b>,</b>                      
<b>  ULONG</b><i> ulFlags</i><b>,</b>                         
<b>  LPSPropProblemArray FAR *</b><i> lppProblems  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpSrcInterface</i></dt>
<dd>
[in] Pointer to the interface identifier (IID) representing the interface to be used to access the object with the properties to be copied or moved.</dd>
<dt>
<i>lpSrcObj</i></dt>
<dd>
[in] Pointer to the object with the properties to be copied or moved.</dd>
<dt>
<i>ciidExclude</i></dt>
<dd>
[in] Count of interfaces to exclude when copying or moving properties.</dd>
<dt>
<i>rgiidExclude</i></dt>
<dd>
[in] Array of interface identifiers indicating interfaces that should not be used when copying or moving supplemental information to the destination object.</dd>
<dt>
<i>lpExcludeProps</i></dt>
</dl>
<p>
[in] Pointer to a property tag array identifying the property tags that should be excluded from the copy or move operation. Passing NULL in the <i>lpExcludeProps</i> parameter indicates that all of the object's properties should be copied or moved. <b>DoCopyTo</b> returns MAPI_E_INVALID_PARAMETER when the <b>cValues </b>member of the <b>SPropTagArray</b> structure pointed to by <i>lpExcludeProps</i> is set to zero.
<dl>
<dt>
<i>ulUIParam</i></dt>
<dd>
[in] Handle of the parent window for the progress indicator. </dd>
<dt>
<i>lpProgress</i></dt>
</dl>
<p>
[in] Pointer to a progress indicator implementation. If NULL is passed in the <i>lpProgress</i> parameter, MAPI provides the progress implementation. The <i>lpProgress</i> parameter is ignored unless the MAPI_DIALOG flag is set in the <i>ulFlags</i> parameter.
<dl>
<dt>
<i>lpDestInterface</i></dt>
<dd>
[in] Pointer to the interface identifier representing the interface to be used to access the object to receive the copied or moved properties.</dd>
<dt>
<i>lpDestObj</i></dt>
<dd>
[in] Pointer to the object to receive the copied or moved properties.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls the copy or move operation. The following flags can be set:
<dl>
<dt>
MAPI_DIALOG</dt>
<dd>
Allows the display of a progress indicator. </dd>
<dt>
MAPI_MOVE</dt>
</dl>
</dd>
</dl>
<p>
<b>DoCopyTo</b> should perform a move operation rather than a copy operation. When this flag is not set, <b>DoCopyTo</b> performs a copy operation.
<dl>
<dt>
MAPI_NOREPLACE</dt>
<dd>
Existing properties in the destination object should not be overwritten. When this flag is not set, <b>DoCopyTo</b> overwrites existing properties. </dd>
<dt>
<i>lppProblems</i></dt>
</dl>
<p>
[out] On input, can be NULL, indicating no need for error information, or a pointer to a pointer to an <a href="structyp_0omx.htm"><b>SPropProblemArray</b></a> structure. If <i>lppProblems</i> is a valid pointer on input, <b>DoCopyTo</b> returns detailed information about errors in copying one or more properties.</p>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The properties have been successfully copied or moved.</dd>
<dt>
MAPI_E_COLLISION</dt>
<dd>
A property to be copied or moved already exists in the destination object and the MAPI_NOREPLACE flag is set. </dd>
<dt>
MAPI_E_FOLDER_CYCLE</dt>
<dd>
The source object directly or indirectly contains the destination object. Significant work might have been performed before this condition was discovered, so the source and destination objects might be partially modified. </dd>
<dt>
MAPI_E_INTERFACE_NOT_SUPPORTED</dt>
</dl>
<p>
The interface identified by the <i>lpSrcInterface</i> parameter is not supported by the object pointed to by <i>lpSrcObj,</i> or the interface identified by the <i>lpDestInterface</i> parameter is not supported by the object pointed to by <i>lpDestObj</i>. 
<dl>
<dt>
MAPI_E_NO_ACCESS</dt>
</dl>
<p>
An attempt was made to access an object for which the caller has insufficient permissions. This error is returned if the destination object is the same as the source object.
<dl>
<dt>
MAPI_E_INVALID_PARAMETER</dt>
</dl>
<p>
The <i>lpSrcInterface</i> parameter is NULL.</p>
<p>
The following values can be returned in the <a href="structyp_0omx.htm"><b>SPropProblemArray</b></a><b> </b>structure,<b> </b>but not as return values for <b>DoCopyTo</b>. These errors apply to a single property:
<dl>
<dt>
MAPI_E_BAD_CHARWIDTH</dt>
<dd>
Either the MAPI_UNICODE flag was set and <b>DoCopyTo</b> does not support Unicode, or MAPI_UNICODE was not set and <b>DoCopyTo</b> only supports Unicode.</dd>
<dt>
MAPI_E_COMPUTED</dt>
</dl>
<p>
The property cannot be modified by the caller because it is a read-only property, computed by the owner of the destination object. This error is not severe; the caller should allow the copy operation to continue.
<dl>
<dt>
MAPI_E_INVALID_TYPE</dt>
<dd>
The property type is invalid.</dd>
<dt>
MAPI_E_UNEXPECTED_TYPE</dt>
<dd>
The property type is not the type expected by the caller.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISupport::DoCopyTo</b> method is implemented for message store provider support objects. Message store providers can call <b>DoCopyTo</b> to implement <a href="inter022_83qn.htm"><b>IMAPIProp::CopyTo</b></a><b> </b>for their folders and messages.</p>
<p>
By default, <b>DoCopyTo</b> copies or moves all of the properties of one object to another object. Any subobjects in the source object are automatically included in the operation and copied or moved in their entirety.</p>
<p>
If any of the copied or moved properties already exist in the destination object, the existing properties are overwritten by the new, unless the MAPI_NOREPLACE flag is set in the <i>ulFlags </i>parameter. Existing information in the destination object that is not overwritten is left untouched.</p>
<h4>Notes to Callers</h4>
<p>
To exclude properties from the copy or move operation, include their property tags in the <i>lpExcludeProps </i>parameter. If you pass the results of using the PROP_TAG macro to build a property tag from a specific identifier in the property tag array, all properties with that identifier will be excluded. For example, the following entry in the property tag array causes all properties with an identifier of 0x8002 to be excluded, regardless of type:</p>
<pre><code>PROP_TAG(PT_LONG, 0x8002)
</code></pre>
<p>
To avoid copying a message's delivery time when copying the message to a different folder, specify <a href="propa_17ad.htm">PR_MESSAGE_DELIVERY_TIME</a> in the property tag exclude array. To exclude a message's recipient list, add the <a href="propa_1zw3.htm">PR_MESSAGE_RECIPIENTS</a> property to the exclude array. To exclude a message's attachments, add the <a href="propa_2c1f.htm">PR_MESSAGE_ATTACHMENTS</a> property to the array.</p>
<p>
Similarly, prevent the copying or moving of a folder or address book container's hierarchy or contents table by including <a href="propa_13sp.htm">PR_CONTAINER_HIERARCHY</a> or<a href="propa_4df7.htm"> PR_CONTAINER_CONTENTS</a> in the property tag exclude array.</p>
<p>
Ignore MAPI_E_COMPUTED errors returned in the <b>SPropProblemArray </b>structure in the <i>lppProblems</i> parameter.</p>
<p>
The interface identifier pointed to by <i>lpSrcInterface </i>is usually the same as the interface identifier pointed to by <i>lpDestInterface</i>. </p>
<p>
If you pass an acceptable interface identifier in <i>lpDestInterface</i> but an invalid pointer in <i>lpDestObj</i>, the results are unpredictable. Most likely this will cause your provider to fail. </p>
<p>
Conversely, if you are aware of supplemental information that should not be copied or moved, include the interface identifiers for the interfaces to be excluded in the array passed in the <i>rgiidExclude</i> parameter. For example, if you are copying messages, but not any of their message attachments, pass IID_IMessage in the <i>rgiidExclude</i> array. <b>DoCopyTo </b>ignores any interfaces listed in <i>rgiidExclude</i> it doesn't recognize. </p>
<p>
When you use the <i>rgiidExclude</i> parameter to exclude an interface, it also excludes all interfaces derived from that interface. For example, excluding  <b>IMAPIContainer</b> causes folders or address book containers to be excluded, depending on the type of provider. Do not exclude <b>IMAPIProp</b> or <b>IUnknown</b> because so many interfaces derive from them. </p>
<p>
<b>DoCopyTo</b> reports global errors — errors that apply to the operation as a whole — and individual errors — errors that apply to individual properties. These individual errors are placed in an <a href="structyp_0omx.htm"><b>SPropProblemArray</b></a> structure. You can suppress error reporting at the property level by passing NULL for the property problem array structure parameter rather than a valid pointer. </p>
<p>
If you want to receive information about errors, pass a valid <b>SPropProblemArray</b> structure pointer in the <i>lppProblems</i> parameter. When <b>DoCopyTo</b> returns S_OK, check for possible errors with individual properties in the structure. When <b>DoCopyTo</b> returns an error, no information is returned in the <b>SPropProblemArray</b> structure. Instead, call <a href="inter025_7q5u.htm"><b>IMAPISupport::GetLastError</b></a> to retrieve detailed error information. </p>
<p>
If <b>CopyTo</b> returns S_OK, free the returned <b>SPropProblemArray</b> structure by calling the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> function.</p>
<p>
If a global error occurs on the <b>DoCopyTo</b> call, do not use or free the <b>SPropProblemArray</b> structure. Providers should ignore the <b>ulIndex</b> member in <b>SPropProblemArray</b> structures returned by <b>DoCopyTo</b>.</p>
<h4>See Also</h4>
<p>
<a href="inter025_8oj6.htm"><b>IMAPISupport::CopyFolder</b></a>, <a href="inter025_0h4j.htm"><b>IMAPISupport::CopyMessages</b></a>, <a href="#_mapi1book_imapisupport_docopyto"><b>IMAPISupport::DoCopyTo</b></a>, <a href="structyp_0omx.htm"><b>SPropProblemArray</b></a>, <a href="structyp_23i1.htm"><b>SPropTagArray</b></a></p>
<p>&nbsp;</p></body>
</HTML>
