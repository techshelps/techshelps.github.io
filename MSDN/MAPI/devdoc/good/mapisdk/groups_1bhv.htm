<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Memory Management Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_memory_management_functions"></a>Memory Management Functions</h2>
<p>
The following functions are used to allocate and deallocate memory: </p>
<p>
<a href="function_1z5g.htm"><b>FreePadrlist</b></a> <br>
<a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a> <br>
<a href="function_11wl.htm"><b>MAPIAllocateMore</b></a> <br>
<a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> <br>
<a href="function_6roj.htm"><b>MAPIGetDefaultMalloc</b></a> </p>
<p>
<b>MAPIAllocateBuffer</b>, <b>MAPIAllocateMore</b>, and <b>MAPIFreeBuffer</b> enable client applications and service providers to exchange blocks of memory. <b>MAPIAllocateBuffer</b> is called to initially allocate memory for a buffer; <b>MAPIAllocateMore</b> can be used at a later time to allocate a subsequent block of memory that is linked to the initial block. Assume when calling these allocators that the returned buffer is appropriately aligned for the CPU architecture. </p>
<p>
The chaining of allocations supported by <b>MAPIAllocateMore</b> simplifies the handling of complex memory objects for clients. An array of property values, for example, can consist of numerous blocks of memory linked together by pointers that can be released with a single call to the third function, <b>MAPIFreeBuffer</b>. Whenever a block of memory is returned from any MAPI method, such as <a href="inter022_44c3.htm"><b>IMAPIProp::GetProps</b></a>, <b>MAPIFreeBuffer</b> must be used to release it. <b>MAPIFreeBuffer</b> releases the initial block and any subsequent blocks. </p>
<p>
Whenever possible, allocate all of the necessary memory with a single call to <b>MAPIAllocateBuffer</b>. <b>MAPIAllocateMore</b> exists merely as a convenience. However, if <b>MAPIAllocateMore</b> is used to allocate additional memory for a buffer, this memory should always be freed along with the initial buffer. Ignore any errors returned from <b>MAPIFreeBuffer</b>. The function almost always succeeds, and in the rare case that an error is returned, there is little that the caller can do about it. </p>
<p>
<b>Note</b>  Clients call the <b>MAPIAllocateBuffer</b> and <b>MAPIAllocateMore</b> functions directly, while service providers must make an indirect call, retrieving the function pointers through a call to <a href="inter025_8v5f.htm"><b>IMAPISupport::GetMemAllocRoutines</b></a>. </p>
<p>&nbsp;</p></body>
</HTML>
