<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing the RemovePreprocessInfo Function for Preprocessors</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_implementing_the_removepreprocessinfo_function_for_preprocessors"></a>Implementing the RemovePreprocessInfo Function for Preprocessors</h2>
<p>
After messages are sent by any transport providers, the MAPI spooler calls each preprocessor's <a href="function_7gq7.htm"><b>RemovePreprocessInfo</b></a> function. This gives the preprocessor a chance to undo any changes it made to the input message before the message is passed to any hook providers. For example, a preprocessor for a FAX-based transport can generate a bitmap representation of the input message for sending to receiving fax machines; there will be little reason for that bitmap to be archived by any hook providers, so the <b>RemovePreprocessInfo</b> function can take the bitmap out of the input message before any hook providers process the message.</p>
<p>
If multiple message preprocessors are being used, the individual <b>RemovePreprocessInfo</b> functions are called in the opposite order as the <a href="function_82lh.htm"><b>PreprocessMessage</b></a> functions. This is so that <b>RemovePreprocessInfo</b> implementations that depend on positions within the message can locate the information they should remove without interference by the actions of other preprocessors. For example, a preprocessor that adds an automatic closing or signature to a message's <a href="propa_9lvd.htm">PR_BODY</a> or <a href="propb_7vhg.htm">PR_RTF_COMPRESSED</a> properties will probably use a position or offset from the end of the property to locate the information it should remove. If another preprocessor modifies these properties later, then that preprocessor's <b>RemovePreprocessInfo</b> function should undo its actions before the first preprocessor undoes its actions.</p>
<p>
<b>Note</b>  There is no requirement that the <b>RemovePreprocessInfo</b> function actually undoes the effects of the associated <a href="function_82lh.htm"><b>PreprocessMessage</b></a> function. However, if the <b>RemovePreprocessorInfo</b> does not undo the effects of the <b>PreprocessMessage</b>, then the <b>PreprocessMessage</b> function should take care to make its changes in such a way as to minimize interference with <b>RemovePreprocessInfo</b> implementations that do, or make an effort to inform the user that the transport provider which registers the preprocessor should be installed into the user's profile ahead of other transports.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
