<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Large Columns</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_working_with_large_columns"></a>Working with Large Columns</h2>
<p>
Columns with string or binary property data can be large, possibly many thousands of bytes long. Because including one or more columns with hundreds of bytes in a view is often impractical, MAPI enables table implementers to truncate the value, most often to 255 bytes and less often to 510 bytes. Whenever possible, table implementers should include the full value of a property in a table column. The recommended alternative is to include only the first 255 bytes. </p>
<p>
Clients cannot know in advance whether or not a table they are using truncates large columns. They should assume that a column represents a truncated property if the length of the column is either 255 or 510 bytes. If necessary, clients can directly retrieve the full value of a truncated column from the object by calling the object's <a href="inter022_44c3.htm"><b>IMAPIProp::GetProps</b></a> method.</p>
<p>
Clients building restrictions with large properties should be aware that it is up to the table implementer as to how these restrictions operate. Some table implementers allow restrictions that are built with a truncated column to be based on the truncated size while others base it on the entire value. </p>
<p>&nbsp;</p></body>
</HTML>
