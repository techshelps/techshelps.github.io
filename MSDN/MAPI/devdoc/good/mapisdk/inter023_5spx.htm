<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISession::Advise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisession_advise"></a>IMAPISession::Advise</h2>
<p>
The <b>IMAPISession::Advise</b> method registers to receive notification of specified events affecting the session.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter023_64ry.htm"><b>IMAPISession : IUnknown</b></a>.</p>
<pre><code><b>HRESULT Advise(
  ULONG</b><i> cbEntryID</i><b>,</b>                 
<b>  LPENTRYID</b><i> lpEntryID</i><b>,</b>             
<b>  ULONG</b><i> ulEventMask</i><b>,</b>               
<b>  LPMAPIADVISESINK</b><i> lpAdviseSink</i><b>,</b>   
<b>  ULONG FAR *</b><i> lpulConnection       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cbEntryID</i></dt>
<dd>
[in] Count of bytes in the entry identifier pointed to by the <i>lpEntryID</i> parameter.</dd>
<dt>
<i>lpEntryID</i></dt>
<dd>
[in] Pointer to the entry identifier of the address book or message store object about which notifications should be generated, or NULL, indicating that the client is registering to receive notifications about events that affect only the session. </dd>
<dt>
<i>ulEventMask</i></dt>
<dd>
[in] A mask of values indicating the types of notification events that the client is interested in and should be included in the registration. If <i>lpEntryID</i> is NULL, MAPI automatically registers the client for critical error events for the session — the only type of event supported by the session.
<p>
When <i>lpEntryID</i> points to an entry identifier, the following values are valid for the <i>ulEventMask</i> parameter:

<dl>
<dt>
<i>fnevCriticalError</i></dt>
<dd>
Registers for notifications about severe errors, such as insufficient memory.</dd>
<dt>
<i>fnevExtended</i></dt>
<dd>
Registers for notifications about events specific to a particular address book or message store provider and about session shut down.</dd>
<dt>
<i>fnevNewMail</i></dt>
<dd>
Registers for notifications about the arrival of new messages. </dd>
<dt>
<i>fnevObjectCreated</i></dt>
<dd>
Registers for notifications about the creation of a new object.</dd>
<dt>
<i>fnevObjectCopied</i></dt>
<dd>
Registers for notifications about an object being copied.</dd>
<dt>
<i>fnevObjectDeleted</i></dt>
<dd>
Registers for notifications about an object being deleted.</dd>
<dt>
<i>fnevObjectModified</i></dt>
<dd>
Registers for notifications about an object being modified.</dd>
<dt>
<i>fnevObjectMoved</i></dt>
<dd>
Registers for notifications about an object being moved.</dd>
<dt>
<i>fnevSearchComplete</i></dt>
<dd>
Registers for notifications about the completion of a search operation.</dd>
</dl>
</dd>
<dt>
<i>lpAdviseSink</i></dt>
<dd>
[in] Pointer to an advise sink object to receive the subsequent notifications. This advise sink object must have already been allocated.</dd>
<dt>
<i>lpulConnection</i></dt>
<dd>
[out] Pointer to a nonzero number that represents the connection between the caller's advise sink object and the session. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The registration was successful.</dd>
<dt>
MAPI_E_INVALID_ENTRYID</dt>
<dd>
The entry identifier pointed to by <i>lpEntryID</i> does not represent a valid entry identifier.</dd>
<dt>
MAPI_E_NO_SUPPORT</dt>
<dd>
The service provider responsible for the entry identifier pointed to by <i>lpEntryID</i> either does not support the type of events specified in the <i>ulEventMask</i> parameter or does not support notification. </dd>
<dt>
MAPI_E_UNKNOWN_ENTRYID</dt>
<dd>
The entry identifier pointed to by <i>lpEntryID</i> cannot be handled by any of the service providers in the profile.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISession::Advise</b> method establishes a connection between the caller's advise sink object, the session, and, as an option, a service provider. This connection is used to send notifications to the advise sink when one or more events as specified in the <i>ulEventMask</i> parameter occur to the object pointed to by <i>lpEntryID</i>. When <i>lpEntryID</i> is NULL, the target object is the session and notifications are sent for critical error and extended events only. </p>
<p>
When <i>lpEntryID</i> points to a valid entry identifier, MAPI calls the <b>Advise</b> method of the logon object belonging to the responsible service provider. For example, if <i>lpEntryID</i> points to the entry identifier of a distribution list, MAPI calls the appropriate address book provider's <b>IABLogon::Advise</b> method. </p>
<p>
To send a notification, either the service provider or MAPI calls the registered advise sink's <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a> method. One of the parameters to <b>OnNotify</b>, a notification structure, contains information that describes the specific event.</p>
<h4>Notes to Callers</h4>
<p>
On systems that support multiple threads of execution, the call to <b>OnNotify </b>can also occur on any thread at any time. If you must be assured that notifications only occur at a particular time on a particular thread, call <a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a> to generate the advise sink object that you pass to <b>Advise</b>. </p>
<p>
To determine when a client has logged off, register for notifications in your service provider by calling <b>Advise</b> with <i>lpEntryID</i> set to NULL and <i>cbEntryID</i> set to zero. When the logoff occurs, you'll receive an <i>fnevExtended</i> notification. </p>
<p>
After a call to <b>Advise</b> has succeeded and before<b> Unadvise</b> has been called to cancel the registration, be prepared for the advise sink object to be released. You should release your advise sink object after <b>Advise</b> returns unless you have a specific long-term use for it. </p>
<p>
For an overview of the notification process, see <a href="extend_8fvt.htm">Event Notification in MAPI</a>. </p>
<p>
For more information on handling notifications, see <a href="consider_4nw3.htm">Handling Notifications</a>. </p>
<h4>See Also</h4>
<p>
<a href="structyp_5dbi.htm"><b>NOTIFICATION</b></a>, <a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a>, <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a>, <a href="inter023_5b1h.htm"><b>IMAPISession::Unadvise</b></a></p>
<p>&nbsp;</p></body>
</HTML>
