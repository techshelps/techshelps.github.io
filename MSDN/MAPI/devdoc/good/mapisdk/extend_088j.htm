<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Record and Search Keys</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_record_and_search_keys"></a>Record and Search Keys</h1>
<p>
Record keys and search keys are binary identifiers that are assigned to many MAPI objects. Unlike an object's entry identifier, its record or search key is directly comparable as well as transmittable.</p>
<p>
A record key is used to compare two objects. Message store and address book objects are required to have record keys, stored in their <a href="propb_6lkp.htm">PR_RECORD_KEY</a> property. Because a record key identifies an object and not its data, every instance of an object has a unique record key. The scope of a record key is the message store for folders and messages and the set of top-level containers provided by MAPI for use in the integrated address book for address book containers, messaging users, and distribution lists.</p>
<p>
Record keys can be duplicated in another resource. For example, different messages in two different message stores can have the same record key. This is different from long-term entry identifiers; because they contain a reference to the service provider, they have a wider scope. A message store's record key is similar in scope to a long-term entry identifier; it should be unique across all message store providers. To ensure this uniqueness, message store providers typically set their record key to a value that is the combination of their <a href="propa_7whe.htm">PR_MDB_PROVIDER</a> property and an identifier that is unique to the message store.</p>
<p>
A search key is used to compare the data in two objects. An object's search key is stored in its <a href="propb_960p.htm">PR_SEARCH_KEY</a> property. Because a search key represents an object's data and not the object itself, two different objects with the same data can have the same search key. When an object is copied, for example, both the original object and its copy have the same data and the same search key. </p>
<p>
Messages and messaging users have search keys. The search key of a message is a unique identifier of the message's data. Message store providers furnish a message's PR_SEARCH_KEY property at message creation time. The search key of an address book entry is computed from its address type (<a href="propa_4gkl.htm">PR_ADDRTYPE</a>) and address (<a href="propa_2t9v.htm">PR_EMAIL_ADDRESS</a>). If the address book entry is writeable, its search key might not be available until the address type and address have been set using <a href="inter022_6cxf.htm"><b>IMAPIProp::SetProps</b></a> and the entry saved using <a href="inter022_5rqr.htm"><b>IMAPIProp::SaveChanges</b></a>. When these address properties change, it is possible for the corresponding search key not to be synchronized with the new values until the changes have been committed with a <b>SaveChanges</b> call.</p>
<p>
The value of an object's record key can be the same as or different from the value of its search key, depending on the service provider. Some service providers use the same value for an object's search key, record key, and its entry identifier. Other service providers assign unique values for each of its objects' identifiers. </p>
<p>&nbsp;</p></body>
</HTML>
