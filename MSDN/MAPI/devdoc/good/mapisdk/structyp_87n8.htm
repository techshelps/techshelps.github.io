<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADRLIST</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_adrlist"></a>ADRLIST</h2>
<p>
The <b>ADRLIST</b> structure describes zero or more properties belonging to one or more recipients. </p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>MAPIDEFS.H</td>
</tr>
<tr valign=top>
<td width=48%>Related macros:</td>
<td width=52%><a href="structyp_8ipg.htm"><b>CbADRLIST</b></a><b><br>
<a href="structyp_6gc4.htm">CbNewADRLIST</a><br>
<a href="structyp_9uwk.htm">SizedADRLIST</a></b></td>
</tr>
</table><br>
<pre><code>typedef struct _ADRLIST  
{  
     ULONG      cEntries;  
     ADRENTRY   aEntries[MAPI_DIM];  
} ADRLIST, FAR *LPADRLIST; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>cEntries</b></dt>
<dd>
Count of entries in the array specified by the <b>aEntries </b>member.</dd>
<dt>
<b>aEntries</b></dt>
<dd>
Array of <b>ADRENTRY</b> structures, one structure for each recipient.
</dd>
</dl>
<h4>Remarks</h4>
<p>
An <b>ADRLIST</b> structure contains one or more <a href="structyp_6m49.htm"><b>ADRENTRY</b></a> structures, each describing the properties of a recipient. A recipient can be unresolved, meaning that it is lacking an entry identifier in its array of property values, or resolved, meaning that the <a href="propa_8cv8.htm">PR_ENTRYID</a> property is included. Typically, resolved recipients also have an e-mail address — the <a href="propa_2t9v.htm">PR_EMAIL_ADDRESS</a> property. However, the e-mail address is not required. <b>ADRLIST</b> structures are used, for example, to describe the recipient list for an outgoing message and by MAPI to display the entries in the address book.</p>
<p>
<b>ADRLIST</b> structures resemble <a href="structyp_2378.htm"><b>SRowSet</b></a> structures — the structures used for representing rows in tables. In fact, these two structures are designed so that they can be used interchangeably. Both<b> </b>contain an array of structures describing a group of properties and a count of the values in the array. Whereas in the <b>ADRLIST</b> structure, the array contains <a href="structyp_6m49.htm"><b>ADRENTRY</b></a> structures, in the <b>SRowSet</b> structure the array contains <a href="structyp_233r.htm"><b>SRow</b></a> structures. <b>ADRENTRY</b> structures and <b>SRow</b> structures are identical in layout. Because <b>ADRLIST</b> and <b>SRowSet</b> structures follow the same allocation rules, an <b>SRowSet</b> structure that is retrieved from the contents table of an address book container can be cast to an <b>ADRLIST</b> structure and used as is.</p>
<p>
The following diagram illustrates the layout of an <b>ADRLIST</b> structure.</p>
<p>
<img src="images/amapi_18.gif" border=0></p>
<p>
The <a href="structyp_6m49.htm"><b>ADRENTRY</b></a> and <a href="structyp_9sbp.htm"><b>SPropValue</b></a> portions in an <b>ADRLIST</b> structure must be allocated and freed independently of the other parts. That is, each <b>SPropValue</b> structure must be allocated individually after memory for the <b>ADRENTRY</b> structure has been allocated and freed before the <b>ADRENTRY</b> structure is freed. This independence in handling memory allows recipients and individual recipient properties to be freely added or deleted from the address list. </p>
<p>
The <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a> and <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> functions must be used to allocate and free the <b>ADRLIST</b> structure and all its parts. </p>
<p>
If a recipient list is too large to fit in memory, clients can call the <a href="inter029_8vw3.htm"><b>IMessage::ModifyRecipients</b></a> method to work with a subset of the list. Clients should not use the address book common dialog boxes in such a situation. </p>
<p>
For more information on allocating memory for <b>ADRENTRY</b> structures, see <a href="extend_41ir.htm">Managing Memory for <b>ADRLIST</b> and <b>SRowSet</b> Structures</a>. </p>
<h4>See Also</h4>
<p>
<a href="groups_4ucz.htm">Address Structures</a>, <a href="structyp_6m49.htm"><b>ADRENTRY</b></a>, <a href="structyp_6gc4.htm"><b>CbNewADRLIST</b></a>, <a href="inter029_8vw3.htm"><b>IMessage::ModifyRecipients</b></a>, <a href="structyp_2378.htm"><b>SRowSet</b></a></p>
<p>&nbsp;</p></body>
</HTML>
