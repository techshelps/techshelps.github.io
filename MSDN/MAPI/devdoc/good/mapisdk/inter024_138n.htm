<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPIStatus::SettingsDialog</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapistatus_settingsdialog"></a>IMAPIStatus::SettingsDialog</h2>
<p>
The <b>IMAPIStatus::SettingsDialog</b> method displays a property sheet enabling the user to change a service provider's configuration.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter024_22i8.htm"><b>IMAPIStatus : IMAPIProp</b></a>.</p>
<pre><code><b>HRESULT SettingsDialog(
  ULONG</b><i> ulUIParam</i><b>,</b>   
<b>  ULONG</b><i> ulFlags      </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulUIParam</i></dt>
<dd>
[in] Handle of the parent window for the configuration property sheet.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls the display of the property sheet. The following flag can be set:
<dl>
<dt>
UI_READONLY</dt>
<dd>
Suggests that the provider not enable users to change configuration properties. This flag is only a suggestion; it can be ignored.
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The configuration property sheet was displayed successfully.</dd>
<dt>
MAPI_E_NO_SUPPORT</dt>
<dd>
The status object does not support this method as indicated by the absence of the STATUS_SETTINGS_DIALOG flag in the <a href="propb_3lkj.htm">PR_RESOURCE_METHODS</a> property.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPIStatus::SettingsDialog</b> method displays a configuration property sheet. MAPI recommends that all service providers support the <b>SettingsDialog</b> method, but it is not required. Service providers can implement their own property sheets or use the implementation supplied in the support object's <a href="inter025_9s1g.htm"><b>IMAPISupport::DoConfigPropsheet</b></a> method. <b>DoConfigPropsheet</b> builds a read/write property sheet. </p>
<h4>Notes to Implementers</h4>
<p>
If a remote transport provider has any settings, it should do the following:
<ul>
<li>
Open the transport provider's profile section.</li>
<li>
Get the transport provider's property settings from the profile.</li>
<li>
Display the property settings in a dialog box.</li>
<li>
If the dialog box allows editing of the property settings, check that the new settings are valid and store them back in the transport provider's profile section.</li>
<li>
Return S_OK, or any error values returned during the preceeding steps.</li>
</ul>
<h4>Notes to Callers</h4>
<p>
You can use the property sheet displayed through <b>SettingsDialog</b> to perform a variety of tasks, such as:
<ul>
<li>
Specify a default message store.</li>
<li>
Specify a transport order.</li>
<li>
Specify a default address book container for browsing.</li>
<li>
Specify a search order for resolving ambiguous names.</li>
<li>
Specify a default personal address book.</li>
</ul>
<p>
Service providers can implement property sheets that are read/write, read-only, or a mixture of access modes, depending on the property. Service providers can implement different access on individual properties by setting property restrictions. The default mode for property sheets is read/write. You can request read-only displays by setting the UI_READONLY flag in your calls to <b>SettingsDialog</b>. Service providers that are able to honor the request can do so. However, because some service providers cannot override the default mode, you must be prepared to handle property sheets of either type. </p>
<p>
Because a user interface is always involved in this operation, only interactive clients should call <b>SettingsDialog</b>.</p>
<p>&nbsp;</p></body>
</HTML>
