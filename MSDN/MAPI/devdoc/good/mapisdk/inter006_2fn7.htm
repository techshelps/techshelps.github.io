<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAddrBook::Address</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_iaddrbook_address"></a>IAddrBook::Address</h2>
<p>
The <b>IAddrBook::Address</b> method displays the common address dialog box. </p>
<h4>Quick Info</h4>
<p>
See <a href="inter006_23e8.htm"><b>IAddrBook : IMAPIProp</b></a>.</p>
<pre><code><b>HRESULT Address(
  ULONG FAR *</b><i> lpulUIParam</i><b>,</b>   
<b>  LPADRPARM</b><i> lpAdrParms</i><b>,</b>   
<b>  LPADRLIST FAR *</b><i> lppAdrList  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpulUIParam</i></dt>
<dd>
[in, out] Handle of the parent window of the dialog box. On input, a window handle must always be passed. On output, if the <b>ulFlags</b> member of the <i>lpAdrParms</i> parameter is set to DIALOG_SDI, then the window handle of the modeless dialog box is returned.</dd>
<dt>
<i>lpAdrParms</i></dt>
<dd>
[in, out] Pointer to an <a href="structyp_9ze5.htm"><b>ADRPARM</b></a> structure that controls the presentation and behavior of the address dialog box.</dd>
<dt>
<i>lppAdrList</i></dt>
<dd>
[in, out] Pointer to a pointer to an <a href="structyp_87n8.htm"><b>ADRLIST</b></a> structure containing recipient information. On input, this parameter can be NULL or point to a valid pointer. On output, this parameter points to a pointer to valid recipient information.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The common address dialog box was successfully displayed.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <a href="structyp_87n8.htm"><b>ADRLIST</b></a> structure passed back by MAPI to the caller through the <i>lppAdrList</i> parameter contains an array of <a href="structyp_6m49.htm"><b>ADRENTRY</b></a> structures, one structure for each recipient. When passed to an outgoing message's <a href="inter029_8vw3.htm"><b>IMessage::ModifyRecipients</b></a><b> </b>method in the <i>lpMods</i> parameter, the <b>ADRLIST</b> structure can be used to update its recipient list. </p>
<p>
Each <b>ADRENTRY</b> structure in the <b>ADRLIST</b> structure contains zero or more <a href="structyp_9sbp.htm"><b>SPropValue</b></a> structures, one structure for every property set for the recipient. There can be zero <b>SPropValue</b> structures when the dialog box presented by <b>IAddrBook::Address</b> is used to remove a recipient. When there are one or more <b>SPropValue</b> structures, the corresponding <b>ADRENTRY</b> structure is used to add or update a recipient. The recipient can either be resolved, indicating that one of the <b>SPropValue</b> structures describes the recipient's <a href="propa_8cv8.htm">PR_ENTRYID</a> property, or unresolved, indicating that the PR_ENTRYID property is missing. </p>
<p>
In addition to PR_ENTRYID, resolved recipients include the following properties:</p>
<p class=indent1>
<a href="propb_0n6t.htm">PR_RECIPIENT_TYPE</a></p>
<p class=indent1>
<a href="propa_1yjp.htm">PR_DISPLAY_NAME</a></p>
<p class=indent1>
<a href="propa_4gkl.htm">PR_ADDRTYPE</a></p>
<p class=indent1>
<a href="propa_7s6d.htm">PR_DISPLAY_TYPE</a></p>
<p>
The <b>ADRLIST</b> structure that the caller passes in might be a different size from the structure that MAPI returns. If MAPI must return a larger <b>ADRLIST</b> structure, it frees the original structure and allocates a new one. When allocating memory for the <b>ADRLIST</b> structure, allocate the memory for each <b>SPropValue</b> structure separately. For more information about how to allocate and free <b>ADRLIST</b> structures, see <a href="extend_41ir.htm">Managing Memory for <b>ADRLIST</b> and <b>SRowSet</b> Structures</a></p>
<p>
<b>Address</b> returns immediately if the DIALOG_SDI flag is set in the <b>ulFlags</b> member of the <b>ADRPARM</b> structure in the <i>lpAdrParms</i> parameter.</p>
<p>
<b>Address</b> supports Unicode character strings in the <b>ADRPARM</b> and <b>ADRLIST</b> parameters for Windows NT platforms only. The Unicode strings are converted to the multibyte character string (MBCS) format before they are displayed in the common dialog box.</p>
<h4>See Also</h4>
<p>
<a href="structyp_6m49.htm"><b>ADRENTRY</b></a>, <a href="structyp_87n8.htm"><b>ADRLIST</b></a>, <a href="structyp_9ze5.htm"><b>ADRPARM</b></a>, <a href="function_1z5g.htm"><b>FreePadrlist</b></a>, <a href="function_3wkz.htm"><b>FreeProws</b></a>, <a href="inter026_7wkz.htm"><b>IMAPITable::QueryRows</b></a>, <a href="inter029_8vw3.htm"><b>IMessage::ModifyRecipients</b></a>, <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a>, <a href="function_11wl.htm"><b>MAPIAllocateMore</b></a>, <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a>, <a href="structyp_9sbp.htm"><b>SPropValue</b></a>, <a href="structyp_2378.htm"><b>SRowSet</b></a></p>
<p>&nbsp;</p></body>
</HTML>
