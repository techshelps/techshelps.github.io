<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HrThisThreadAdviseSink</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_hrthisthreadadvisesink"></a>HrThisThreadAdviseSink</h2>
<p>
The <b>HrThisThreadAdviseSink</b> function creates an advise sink that wraps an existing advise sink for thread safety. </p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIUTIL.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Client applications </td>
</tr>
</table><br>
<pre><code><b>HrThisThreadAdviseSink(
  LPMAPIADVISESINK</b><i> lpAdviseSink</i><b>,</b>        
<b>  LPMAPIADVISESINK FAR *</b><i> lppAdviseSink  </i>
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>lpAdviseSink </i></dt>
<dd>
[in] Pointer to the advise sink to be wrapped. </dd>
<dt>
<i>lppAdviseSink </i></dt>
<dd>
[out] Pointer to a pointer to a new advise sink that wraps the advise sink pointed to by the <i>lpAdviseSink</i> parameter. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
The purpose of the wrapper is to ensure that notification is called on the same thread that called the <b>HrThisThreadAdviseSink</b> function. This function is used to protect notification callbacks that must run on a particular thread. </p>
<p>
Client applications should use <b>HrThisThreadAdviseSink</b> to restrict when notifications are generated, that is, when calls are made to the <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a> method of the advise sink object passed by the client in a previous <b>Advise</b> call. If notifications are allowed to be generated arbitrarily, a notification implementation might force a client into multithreaded operation when that would not be appropriate. For example, a client might use a library, such as one of the Microsoft Foundation Class Libraries, that does not support multithreaded calls. Notification on a different thread would make such a client difficult to test and prone to error. </p>
<p>
<b>HrThisThreadAdviseSink</b> ensures that <b>OnNotify</b> calls occur only at these appropriate times: 
<ul>
<li>
During processing of a call to any MAPI method. </li>
<li>
During processing of Windows messages. </li>
</ul>
<p>
When <b>HrThisThreadAdviseSink</b> is implemented, any calls to the new advise sink's <b>OnNotify</b> method on any thread cause the original notification method to be executed on the thread on which <b>HrThisThreadAdviseSink</b> was called. </p>
<p>
For more information on notification and advise sinks, see <a href="extend_8fvt.htm">Event Notification in MAPI</a> and <a href="consider_18hg.htm">Implementing an Advise Sink Object</a>. </p>
<h4>See Also</h4>
<p>
<a href="groups_72er.htm">Notification Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
