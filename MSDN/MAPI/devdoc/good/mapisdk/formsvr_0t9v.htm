<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Choosing a Message Class</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_choosing_a_message_class"></a>Choosing a Message Class</h1>
<p>
As described in <a href="extend_5gab.htm">Message Classes</a>, message classes are an important concept for establishing the relationship between types of custom messages, and by extension, between form servers themselves. Fortunately, choosing a message class string is fairly simple. The message class string of a message class is an arbitrary string, but should follow these conventions:
<ul>
<li>
The string should satisfy all the conventions described in the documentation for <a href="propa_0ecz.htm">PR_MESSAGE_CLASS</a>. Importantly, the string should be composed entirely of ANSI characters and be less than 256 characters long.</li>
<li>
If your form server is derived from an existing form server or is an extension of an existing form server, your message class string should be formed by adding a period and another word to the message class string of the form server your form is based on. For example, imagine that your are implementing a form for rescheduling a meeting, and your form is based on an existing form for scheduling meetings. If the meeting scheduling form's message class string is "IPM.Meeting", your message class string could be "IPM.Meeting.Reschedule".</li>
<li>
If your form is not based on any existing form, your message class string should still begin with either the IPM. or IPC. prefix, depending on whether the form is intended to be received by a person or by another piece of software. IPM. designates an interpersonal message that usually ends up in a user's Inbox, and IPC. designates an interprocess communication message that is not typically delivered to a user's Inbox.</li>
<li>
If your message class is intended to be human-readable, the message class string should start with IPM. A message class is generally considered human-readable if it uses any properties that contain plain text or Rich Text Format (RTF) data. If your form uses the <a href="propa_9lvd.htm">PR_BODY</a> property, it should almost certainly use an IPM.-derived message class string. For example, if you are implementing a form for purchase orders, and your organization requires that purchase orders be approved by a manager, your message class string could be IPM.Purchase_Order. Forms that are designed for use with public folders or public folder applications are typically considered to be interpersonal because they are read by people even though they are not actually addressed to any person's e-mail address. The typical prefix for public folder message classes is IPM.post. </li>
<li>
If your message class is intended to be received by some other piece of software instead of by a person, the message class string should start with IPC. For example, if you are implementing a form for allowing people to automatically subscribe to mailing lists, your message class string could be IPC.Subscribe.</li>
<li>
Your message class string should never end with a period.</li>
</ul>
<p>
The message class string should be put in the <b>[Description]</b> section of the form configuration file, in the <b>MessageClass</b> entry, like this:</p>
<pre><code>MessageClass=IPM.Meeting.Reschedule
 </code></pre>
<p>
Once you have chosen an appropriate message class string, you should generate a class identifier for it. Class identifiers are generated with the UUIDGEN.EXE utility that is included with the Platform SDK. The class identifier must be put in the form configuration file's <b>CLSID</b> entry, along with the <b>MessageClass</b> entry, like this:</p>
<pre><code>CLSID={88FFF551-B8C5-11ce-8DE0-00AA0060D242}
 </code></pre>
<p>
Your class identifier will almost certainly be different, of course. For details, see <a href="formsvr_59t1.htm">Creating a Form Configuration File</a>.</p>
<p>
When the form is installed on a user's computer, your installation process — whether it is a setup program or something else — must make a registry entry in the <b>HKEY_CLASSES_ROOT\CLSID\</b> section of the registry for the class identifier. This entry must be set to the message class string. For example, you would create a registry entry like this for the example class identifier above:</p>
<pre><code>HKEY_CLASSES_ROOT\CLSID\{88FFF551-B8C5-11ce-8DE0-
    00AA0060D242}="IPM.Meeting.Reschedule"
 </code></pre>
<p>
For details, see <a href="formsvr_2zqx.htm">Installing a Form into a Library</a>.</p>
<p>&nbsp;</p></body>
</HTML>
