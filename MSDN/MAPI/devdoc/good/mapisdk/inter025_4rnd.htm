<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISupport::OpenEntry</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisupport_openentry"></a>IMAPISupport::OpenEntry</h2>
<p>
The <b>IMAPISupport::OpenEntry</b> method opens an object and returns an interface pointer for further access. </p>
<h4>Quick Info</h4>
<p>
See <a href="inter025_8uge.htm"><b>IMAPISupport : IUnknown</b></a>.</p>
<pre><code><b>HRESULT OpenEntry(
  ULONG</b><i> cbEntryID</i><b>,</b>       
<b>  LPENTRYID</b><i> lpEntryID</i><b>,</b>   
<b>  LPCIID</b><i> lpInterface</i><b>,</b>    
<b>  ULONG</b><i> ulOpenFlags</i><b>,</b>     
<b>  ULONG FAR *</b><i> lpulObjType</i><b>,</b>   
<b>  LPUNKNOWN FAR *</b><i> lppUnk </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cbEntryID</i></dt>
<dd>
[in] Count of bytes in the entry identifier pointed to by the <i>lpEntryID</i> parameter<i>.</i></dd>
<dt>
<i>lpEntryID</i></dt>
<dd>
[in] Pointer to the entry identifier of the object to open.</dd>
<dt>
<i>lpInterface</i></dt>
<dd>
[in] Pointer to the interface identifier (IID) representing the interface to be used to access the object. Passing NULL results in the object's standard interface being returned. For example, if the object to be opened is a message, the standard interface is <b>IMessage</b>; for folders, it is <b>IMAPIFolder</b>. The standard interfaces for address book objects are <b>IDistList</b> for a distribution list and <b>IMailUser</b> for a messaging user.</dd>
<dt>
<i>ulOpenFlags</i></dt>
<dd>
[in] Bitmask of flags that controls how the object is opened. The following flags can be set:
<dl>
<dt>
MAPI_BEST_ACCESS</dt>
<dd>
Requests that the object be opened with the maximum network permissions allowed for the caller. For example, if the caller has read/write access, the object should be opened with read/write access; if the caller has read-only access, the object should be opened with read-only access. </dd>
<dt>
MAPI_DEFERRED_ERRORS</dt>
<dd>
Allows <b>OpenEntry</b> to return successfully, possibly before the object is fully accessible to the caller. If the object is not accessible, making a subsequent object call can result in an error.</dd>
<dt>
MAPI_MODIFY</dt>
<dd>
Requests read/write access. By default, objects are opened with read-only access, and callers should not work on the assumption that read/write access has been granted. </dd>
</dl>
</dd>
<dt>
<i>lpulObjType</i></dt>
<dd>
[out] Pointer to the type of the opened object.</dd>
<dt>
<i>lppUnk</i></dt>
<dd>
[out] Pointer to a pointer to the opened object.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The object was successfully opened.</dd>
<dt>
MAPI_E_NO_ACCESS</dt>
<dd>
An attempt was made to modify a read-only object or an attempt was made to access an object for which the user has insufficient permissions.</dd>
<dt>
MAPI_E_NOT_FOUND</dt>
<dd>
There is not an object associated with the entry identifier passed in <i>lpEntryID</i>.</dd>
<dt>
MAPI_E_UNKNOWN_ENTRYID</dt>
<dd>
The entry identifier passed in the <i>lpEntryID</i> parameter is in an unrecognizable format. This value is typically returned if the address book provider that contains the object is not open.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISupport::OpenEntry</b> method is implemented for all service provider support objects. Service providers call <b>OpenEntry</b> to retrieve a pointer to an interface that can be used to access a particular object. </p>
<h4>Notes to Callers</h4>
<p>
Call <b>IMAPISupport::OpenEntry</b> only when you do not know what kind of object you are opening. If you know you are opening a folder or a message, call <a href="inter031_3se1.htm"><b>IMsgStore::OpenEntry</b></a> instead. If you know you are opening an address book container, a messaging user, or a distribution list, call <a href="inter006_4cc9.htm"><b>IAddrBook::OpenEntry</b></a>. These more specific methods are faster than <b>IMAPISupport::OpenEntry</b>. </p>
<p>
<b>OpenEntry</b> opens all objects with read-only access, unless you set the MAPI_MODIFY or MAPI_BEST_ACCESS flag in the <i>ulFlags</i> parameter and your access is sufficient. Setting one of these flags does not guarantee a particular type of access; the permissions that you are granted depends on the service provider that owns the object, your access level, and the object. To determine the access level of the opened object, retrieve its <a href="propa_4w8c.htm">PR_ACCESS_LEVEL</a> property.</p>
<p>
Check the value returned in the <i>lpulObjType</i> parameter to determine that the object type returned is what you expected. If the object type is as expected, cast the pointer from the <i>lppUnk</i> parameter to a pointer of the appropriate type. For example, if you are opening a folder, cast <i>lppUnk</i> to a pointer of type LPMAPIFOLDER.</p>
<p>&nbsp;</p></body>
</HTML>
