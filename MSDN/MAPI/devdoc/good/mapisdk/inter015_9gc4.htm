<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPIFormAdviseSink::OnActivateNext</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapiformadvisesink_onactivatenext"></a>IMAPIFormAdviseSink::OnActivateNext</h2>
<p>
The <b>IMAPIFormAdviseSink::OnActivateNext </b>method indicates whether or not the form can handle the message class of the next message to display.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter015_8l66.htm"><b>IMAPIFormAdviseSink : IUnknown</b></a>.</p>
<pre><code><b>HRESULT OnActivateNext(
  LPCSTR</b><i> lpszMessageClass</i><b>,</b>                 
<b>  ULONG</b><i> ulMessageStatus</i><b>,</b>                   
<b>  ULONG</b><i> ulMessageFlags</i><b>,</b>                    
<b>  LPPERSISTMESSAGE FAR *</b><i> ppPersistMessage  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszMessageClass</i></dt>
<dd>
[in] Pointer to the message class of the next message.</dd>
<dt>
<i>ulMessageStatus</i></dt>
<dd>
[in] Bitmask of client-defined or provider-defined flags — copied from the <a href="propb_3c1f.htm">PR_MSG_STATUS</a> property of the next message to display — that provides status information relating to the contents table in which it is included.</dd>
<dt>
<i>ulMessageFlags</i> </dt>
<dd>
[in] Pointer to a bitmask of flags — copied from the <a href="propa_95wz.htm">PR_MESSAGE_FLAGS</a> property of the next message to display — that indicates the current state of the message.</dd>
<dt>
<i>ppPersistMessage</i></dt>
<dd>
[out] Pointer to a pointer to the <b>IPersistMessage</b> implementation for the form object used for the new form, if a new form is required. A pointer to NULL can be returned if the current form object can be used to display and save the next message.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The notification was successful and the form can handle the next message.</dd>
<dt>
S_FALSE</dt>
<dd>
The form does not handle the message class of the next message.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Form viewers call the <b>IMAPIFormAdviseSink::OnActivateNext</b><i> </i>method<i> </i>to help the form determine whether it is capable of displaying the next message in a folder. The next message could be a message of any class, but typically it is of the same class or a related class. This makes the process of reading multiple messages of the same class more efficient by allowing client applications to reuse form objects whenever possible.</p>
<p>
Most form objects will use the message class pointed to by <i>lpszMessageClass</i> to determine whether or not they can handle the next message. Usually a form can handle messages that belong to classes of which the form's default class is a subclass as well as messages that belong to the default class. However, a form can use other factors to determine without question whether or not a message can be handled, such as the sent or unsent status of the next message.</p>
<h4>Notes to Implementers</h4>
<p>
Return S_OK and NULL in the <i>ppPersistMessage</i> parameter if your form can handle the message class. If your form can create a new form that can handle the message that your form is unable to handle, perform the following tasks:
<ol>
<li>
Call your form's class factory to create an instance of a new form object.</li>
<li>
Store that instance in the contents of the <i>ppPersistMessage</i> pointer parameter.</li>
<li>
Return S_OK.</li>
</ol>
<p>
The message will be loaded by the form viewer using the <a href="inter034_69wk.htm"><b>IPersistMessage::Load</b></a> method belonging to the object pointed to by <i>ppPersistMessage</i>.</p>
<p>
If neither your form nor a form that you can create can handle the next message, return S_FALSE. MAPI discourages forms from returning this value because it results in degraded performance in the form viewer.</p>
<h4>See Also</h4>
<p>
<a href="inter034_69wk.htm"><b>IPersistMessage::Load</b></a></p>
<p>&nbsp;</p></body>
</HTML>
