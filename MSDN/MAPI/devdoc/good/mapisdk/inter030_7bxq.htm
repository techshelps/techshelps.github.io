<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMsgServiceAdmin : IUnknown</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_imsgserviceadmin_iunknown"></a>IMsgServiceAdmin : IUnknown</h1>
<p>
The <b>IMsgServiceAdmin</b> interface is used to make changes to a message service within a profile.</p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=43%>Header file:</td>
<td width=57%>MAPIX.H</td>
</tr>
<tr valign=top>
<td width=43%>Exposed by:</td>
<td width=57%>Message service administration objects</td>
</tr>
<tr valign=top>
<td width=43%>Implemented by:</td>
<td width=57%>MAPI</td>
</tr>
<tr valign=top>
<td width=43%>Called by:</td>
<td width=57%>Client applications</td>
</tr>
<tr valign=top>
<td width=43%>Interface identifier:</td>
<td width=57%>IID_IMsgServiceAdmin</td>
</tr>
<tr valign=top>
<td width=43%>Pointer type:</td>
<td width=57%>LPSERVICEADMIN</td>
</tr>
</table><br>
<h4>Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=37%><a href="inter030_6kz6.htm"><b>GetLastError</b></a></td>
<td width=63%>Returns a <b>MAPIERROR</b> structure containing information about the last error that occurred for a message service administration object.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_4did.htm"><b>GetMsgServiceTable</b></a></td>
<td width=63%>Provides access to the message service's provider table, a listing of the message services in the profile.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_60th.htm"><b>CreateMsgService</b></a></td>
<td width=63%>Adds a message service to the current profile.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_8krp.htm"><b>DeleteMsgService</b></a></td>
<td width=63%>Deletes a message service from a profile.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_3usl.htm"><b>CopyMsgService</b></a></td>
<td width=63%>Copies a message service into a profile.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_3usm.htm"><b>RenameMsgService</b></a></td>
<td width=63%>Assigns a new name to a message service.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_4cv9.htm"><b>ConfigureMsgService</b></a></td>
<td width=63%>Enables a user to reconfigure a message service using the service's configuration property sheet.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_16pa.htm"><b>OpenProfileSection</b></a></td>
<td width=63%>Opens a section of the current profile and returns an <b>IProfSect</b> pointer for further access</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_0ysy.htm"><b>MsgServiceTransportOrder</b></a></td>
<td width=63%>Sets the order in which transport providers are called to deliver a message.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_2yur.htm"><b>AdminProviders</b></a></td>
<td width=63%>Returns a pointer providing access to a provider administration object.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_1zeh.htm"><b>SetPrimaryIdentity</b></a></td>
<td width=63%>Designates a message service to be the supplier of the primary identity for the profile.</td>
</tr>
<tr valign=top>
<td width=37%><a href="inter030_8p5x.htm"><b>GetProviderTable</b></a></td>
<td width=63%>Provides access to the provider table, a listing of the service providers in the profile.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
An implementation can get a pointer to an <b>IMsgServiceAdmin</b> interface in two ways: by calling the <a href="inter023_6uk3.htm"><b>IMAPISession::AdminServices</b></a> method or by calling the <a href="inter035_1h6b.htm"><b>IProfAdmin::AdminServices</b></a> method. For clients primarily concerned with profile configuration — for example, control panels — <b>IProfAdmin::AdminServices</b> is the preferred way to get the <b>IMsgServiceAdmin</b> interface because it does not log providers on to the MAPI session. If a client requires the ability to make changes to the active profile, then <b>IMAPISession::AdminServices</b> should be called to get the <b>IMsgServiceAdmin</b> pointer. Clients that are modifying the profile that is active for the session should be designed with the awareness that although MAPI does not allow a profile that is in use to be deleted, there are no safeguards to prevent a client from removing all the message services within the profile.</p>
<p>&nbsp;</p></body>
</HTML>
