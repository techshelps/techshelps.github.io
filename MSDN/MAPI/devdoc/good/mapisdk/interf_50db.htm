<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing Objects in C++</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_implementing_objects_in_c_"></a>Implementing Objects in C++</h2>
<p>
C++ clients and service providers define MAPI objects by creating classes that inherit from the interfaces they are implementing. Each of the interface methods is public as are the constructor and destructor for the class. If the class has additional methods, they can be public or private, depending on the implementation. All data members are private. </p>
<p>
The following example code shows how to define a C++ status object. The CMyMAPIObject class inherits from the <a href="inter024_22i8.htm"><b>IMAPIStatus : IMAPIProp</b></a> interface. Many of the macros used in this example are defined in the OLE header file COMPOBJ.H.The first members of the class are the methods of the base interface, followed by the methods of the inherited interfaces in order of inheritance. Following the interface definitions are any additional methods, the constructor and destructor, and the data members.</p>
<pre><code>class  CMyMAPIObject : public IMAPIStatus
{
public:
// Methods of IUnknown
    STDMETHODIMP QueryInterface (REFIID riid, LPVOID * ppvObj);
    STDMETHODIMP_(ULONG) AddRef ();
    STDMETHODIMP_(ULONG) Release ();

    MAPI_IMAPIPROP_METHODS(IMPL);
    MAPI_IMAPISTATUS_METHODS(IMPL);

// Other methods specific to CMyMAPIObject
    BOOL WINAPI Method1 ();
    void WINAPI Method2 ();

// Constructors and destructors
public :
    CMyMAPIObject () {};
    ~CMyMAPIObject () {};

// Data members specific to CMyMAPIObject
private :
    ULONG               m_cRef; 
    CAnotherObj *       m_pObj;
};
 </code></pre>
<p>
To use an instance of the CMyMAPIObject class, C++ clients or service providers make a call to one of its methods as follows:</p>
<pre><code>lpMyObj-&gt;ValidateState(ulUIParam, ulFlags);
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
