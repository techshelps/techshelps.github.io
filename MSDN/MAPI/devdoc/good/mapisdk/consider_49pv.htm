<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Call QueryRows for Small Tables</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_call_queryrows_for_small_tables"></a>Call QueryRows for Small Tables</h2>
<p>
When retrieving rows from a small table, call <a href="inter026_7wkz.htm"><b>IMAPITable::QueryRows</b></a> instead of first building a restriction. Creating a restriction impacts performance because the provider must first create a table, find the matching rows in the original table, and then copy the rows to the new table. If the total number of rows in the table is less than one hundred, it is probably more effective to read all of the rows and then call <a href="inter026_2lkn.htm"><b>IMAPITable::FindRow</b></a> to find the appropriate row. This is a particularly good strategy if this information is needed only occasionally.</p>
<p>
A proper time to use a restriction is when the restricted or filtered information will be used over a longer period of time or used frequently. For instance, if you always need a view with unread messages, then a restriction is the proper call to use.</p>
<p>&nbsp;</p></body>
</HTML>
