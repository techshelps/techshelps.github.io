<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPIContainer::OpenEntry</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapicontainer_openentry"></a>IMAPIContainer::OpenEntry</h2>
<p>
The <b>IMAPIContainer::OpenEntry</b> method opens an object within the container, returning an interface pointer for further access.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter011_7u0g.htm"><b>IMAPIContainer : IMAPIProp</b></a>.</p>
<pre><code><b>HRESULT OpenEntry(
  ULONG</b><i> cbEntryID</i><b>,</b>       
<b>  LPENTRYID</b><i> lpEntryID</i><b>,</b>   
<b>  LPCIID</b><i> lpInterface</i><b>,</b>    
<b>  ULONG</b><i> ulFlags</i><b>,</b>         
<b>  ULONG FAR *</b><i> lpulObjType</i><b>,</b>   
<b>  LPUNKNOWN FAR *</b><i> lppUnk </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cbEntryID</i></dt>
<dd>
[in] Count of bytes in the entry identifier pointed to by the <i>lpEntryID</i> parameter<i>.</i></dd>
<dt>
<i>lpEntryID</i></dt>
<dd>
[in] Pointer to the entry identifier of the object to open. If <i>lpEntryID</i> is set to NULL, the top-level container in the container's hierarchy is opened.</dd>
<dt>
<i>lpInterface</i></dt>
<dd>
[in] Pointer to the interface identifier (IID) representing the interface to be used to access the object. Passing NULL results in the identifier for the object's standard interface being returned. For messages, the standard interface is <a href="inter029_525s.htm"><b>IMessage</b></a>; for folders, it is <a href="inter013_9ohe.htm"><b>IMAPIFolder</b></a>. The standard interfaces for address book objects are <a href="inter008_5tf6.htm"><b>IDistList</b></a> for a distribution list and <a href="inter009_3sc0.htm"><b>IMailUser</b></a> for a messaging user.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls how the object is opened. The following flags can be used:
<dl>
<dt>
MAPI_BEST_ACCESS</dt>
<dd>
Requests that the object be opened with the maximum network permissions allowed for the user and the maximum client application access. For example, if the client has read/write access, the object should be opened with read/write access; if the client has read-only access, the object should be opened with read-only access. </dd>
<dt>
MAPI_DEFERRED_ERRORS</dt>
<dd>
Allows <b>OpenEntry</b> to return successfully, possibly before the object is fully accessible to the calling client. If the object is not accessible, making a subsequent object call can result in an error.</dd>
<dt>
MAPI_MODIFY</dt>
<dd>
Requests read/write access. By default, objects are opened with read-only access, and clients should not work on the assumption that read/write access has been granted. </dd>
</dl>
</dd>
<dt>
<i>lpulObjType</i></dt>
<dd>
[out] Pointer to the opened object's type.</dd>
<dt>
<i>lppUnk</i></dt>
<dd>
[out] Pointer to a pointer to the interface implemention to use to access the open object.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The object was successfully opened.</dd>
<dt>
MAPI_E_NO_ACCESS</dt>
<dd>
Either the user has insufficient permissions to open the object or an attempt was made to open a read-only object with read/write access.</dd>
<dt>
MAPI_E_NOT_FOUND</dt>
<dd>
The entry identifier specified by <i>lpEntryID</i> does not represent an object.</dd>
<dt>
MAPI_E_UNKNOWN_ENTRYID</dt>
<dd>
The entry identifier in the <i>lpEntryID</i> parameter is not of a format recognized by the container.
</dd>
</dl>
<h4>Remarks </h4>
<p>
The <b>IMAPIContainer::OpenEntry</b> method opens an object within a container and returns a pointer to an interface implementation to use for further access. </p>
<h4>Notes to Callers</h4>
<p>
Because service providers are not required to return an interface implementation of the type specified by the interface identifier in <i>lpInterface</i>, check the value pointed to by the <i>lpulObjType</i> parameter. If necessary, cast the pointer returned in <i>lppUnk</i> to a pointer of the appropriate type.</p>
<p>
By default, service providers open objects with read-only access unless you set either the MAPI_MODIFY or MAPI_BEST_ACCESS flag. When one of these flags is set, service providers attempt to return a modifiable object. Do not assume that because you set the MAPI_MODIFY flag, for example, that the opened object has read/write access. Either plan for the possibility of a subsequent modification to fail or retrieve the object's <a href="propa_4w8c.htm">PR_ACCESS_LEVEL</a> property to determine the access level granted by <b>OpenEntry</b>.</p>
<p>&nbsp;</p></body>
</HTML>
