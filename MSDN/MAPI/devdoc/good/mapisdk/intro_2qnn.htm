<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows NT Service Client Applications</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_windows_nt_service_client_applications"></a>Windows NT Service Client Applications</h2>
<p>
To enable client applications that are written as Windows NT services to operate with MAPI-compliant service providers, MAPI imposes several limitations and requirements. Simple MAPI, CMC, and MAPI clients have the following limitations:
<ul>
<li>
They cannot allow a user interface.</li>
<li>
They can only send messages through a <a href="glossary_4s38.htm#_mapi1book_gly_tightly_coupled">tightly coupled</a> message store and transport provider. In addition, MAPI clients can only send and receive messages using the Microsoft Exchange Server or another server-based transport provider. Because of identity and security issues between client applications and the <a href="glossary_4s31.htm#_mapi1book_gly_mapi_spooler">MAPI spooler</a>, most transport providers are not supported in a Windows NT service. </li>
</ul>
<p>
All client applications, whether or not they are implemented as Windows NT services, must call <a href="function_6ycl.htm"><b>MAPIInitialize</b></a> to initialize the MAPI libraries. A call to <b>OleInitialize</b> is also necessary to use the OLE libraries. Both <b>MAPIInitialize</b> and <b>OleInitialize</b> make calls to <b>CoInitialize</b> to initialize the Component Object Model (COM) libraries. Clients that are Windows NT services must set a special flag, MAPI_NT_SERVICE, in the <b>ulFlags</b> member of the <b>MAPIINIT_0</b> structure that is passed to <b>MAPIInitialize</b> and in the <i>ulFlags</i> parameter that is passed to <b>MAPILogonEx</b> to inform MAPI of their special implementation.</p>
<p>
Windows NT service clients written with the MAPI client interface have a few additional requirements:
<ul>
<li>
They must set the MAPI_NO_MAIL flag in the call to <a href="function_8to8.htm"><b>MAPILogonEx</b></a>. Other types of Windows NT service clients need not set a flag for logon because it is automatically set by MAPI.</li>
<li>
They must add the service's account to the group of accounts called Administrators on the machine that the service is using. This is necessary for profile access. If the account does not belong to this Administrators group of accounts, the <b>MAPIInitialize</b> function will fail when called.</li>
</ul>
<p>
<b>Note</b>  The requirement that the account belong to the Administrators group will be removed in a future release of Windows NT.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To handle messages in an initialization thread, a MAPI client that is implemented as a Windows NT service</h5>
<ol>
<li>
Calls <b>MsgWaitForMultipleObjects</b> when the main thread blocks.</li>
<li>
Calls the <b>GetMessage</b>, <b>TranslateMessage</b>, and <b>DispatchMessage</b> sequence of Windows functions to handle the message when <b>MsgWaitForMultipleObjects</b> returns the sum of the value of the <i>nCount</i> parameter and the value of WAIT_OBJECT_0, indicating that a message is in the queue.</li>
</ol>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To produce application log entries through asserts and error traces</h5>
<ol>
<li>
Use the debug version of MAPI.</li>
<li>
Add the following lines to the debug initialization file, MAPIDGB.INI:<pre><code>[General]

DebugTrace=1
EventLog=1
 </code></pre>
</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
