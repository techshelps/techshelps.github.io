<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing Status Objects for Remote Transports</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_implementing_status_objects_for_remote_transports"></a>Implementing Status Objects for Remote Transports</h2>
<p>
You should derive a C++ class from the <b>IMAPIStatus</b> class to implement this interface. Because <b>IMAPIStatus</b> inherits from the <b>IMAPIProp</b> and <b>IUnknown</b> classes, there are some methods from those interfaces that need to be implemented as well. Methods from those interfaces that are not listed here should be implemented as stubs which return MAPI_E_NO_SUPPORT.</p>
<p>
Remote transport providers must implement the following <b>IMAPIStatus</b> methods:</p>
<p class=indent1>
<a href="inter024_3dno.htm"><b>IMAPIStatus::ChangePassword</b></a></p>
<p class=indent1>
<a href="inter024_8c37.htm"><b>IMAPIStatus::FlushQueues</b></a></p>
<p class=indent1>
<a href="inter024_138n.htm"><b>IMAPIStatus::SettingsDialog</b></a></p>
<p class=indent1>
<a href="inter024_6x2d.htm"><b>IMAPIStatus::ValidateState</b></a></p>
<p>
Since remote transport providers, like other MAPI service providers, use the MAPI status table, they must implement some methods from the <b>IMAPIProp</b> interface to support client requests for property information. These methods are:</p>
<p class=indent1>
<a href="inter022_1hv6.htm"><b>IMAPIProp::GetLastError</b></a></p>
<p class=indent1>
<a href="inter022_5rqr.htm"><b>IMAPIProp::SaveChanges</b></a></p>
<p class=indent1>
<a href="inter022_44c3.htm"><b>IMAPIProp::GetProps</b></a></p>
<p class=indent1>
<a href="inter022_79v8.htm"><b>IMAPIProp::GetPropList</b></a></p>
<p>
The only method from the <b>IUnknown</b> interface that is special for MAPI is the <b>QueryInterface</b> method.</p>
<p>
The semantics of the <b>QueryInterface</b> method that a remote transport provider's implementation should follow are described in the Platform SDK. If the interface identifier passed in is one of IID_IMAPIStatus, IID_IMAPIProp, or IID_IUnknown, then a pointer to the status object should be passed back to the caller in the parameter provided for that purpose, and your status object's reference count must be incremented.</p>
<p>
If the interface identifier passed in is IID_IMAPIFolder, then your implementation should return a pointer to the folder that contains the available message headers and increment the reference count for that folder. If no folder is present, one should be created and then returned.</p>
<p>
If the interface identifier is anything else, <b>QueryInterface</b> should return MAPI_E_INTERFACE_NOT_SUPPORTED.</p>
<p>&nbsp;</p></body>
</HTML>
