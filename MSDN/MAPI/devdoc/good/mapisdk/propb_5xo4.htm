<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PR_NORMALIZED_SUBJECT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_pr_normalized_subject"></a>PR_NORMALIZED_SUBJECT</h2>
<p>
The PR_NORMALIZED_SUBJECT property contains the message subject with any prefix removed.</p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=43%>Header file:</td>
<td width=57%>MAPITAGS.H</td>
</tr>
<tr valign=top>
<td width=43%>Must be exposed by:</td>
<td width=57%>Message objects</td>
</tr>
<tr valign=top>
<td width=43%>Identifier:</td>
<td width=57%>0x0E1D</td>
</tr>
<tr valign=top>
<td width=43%>Property type:</td>
<td width=57%>PT_TSTRING</td>
</tr>
<tr valign=top>
<td width=43%>Property tag:</td>
<td width=57%>0x0E1D001E (0x0E1D001F for Unicode)</td>
</tr>
<tr valign=top>
<td width=43%>Corresponding X.400 attribute:</td>
<td width=57%>IM_SUBJECT</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The PR_NORMALIZED_SUBJECT property is computed by message store or transport providers from the <a href="propb_3c8k.htm">PR_SUBJECT</a> and <a href="propb_4114.htm">PR_SUBJECT_PREFIX</a> properties in the following manner. 
<ul>
<li>
If PR_SUBJECT_PREFIX is present and is an initial substring of PR_SUBJECT, PR_NORMALIZED_SUBJECT is set to the contents of PR_SUBJECT with the prefix removed. </li>
<li>
If PR_SUBJECT_PREFIX is present, but it is not an initial substring of PR_SUBJECT, PR_SUBJECT_PREFIX is deleted and recalculated from PR_SUBJECT using the following rule:<p>
If the string contained in PR_SUBJECT begins with one to three non-numeric characters followed by a colon and a space, then the string together with the colon and the blank becomes the prefix. Numbers, blanks, and punctuation characters are not valid prefix characters.
</li>
<li>
If PR_SUBJECT_PREFIX is not present, it is calculated from PR_SUBJECT using the rule outlined in the previous step. PR_NORMALIZED_SUBJECT then is set to the contents of PR_SUBJECT with the prefix removed.</li>
</ul>
<p>
<b>Note</b>  When PR_SUBJECT_PREFIX is an empty string, PR_SUBJECT and PR_NORMALIZED_SUBJECT are the same. </p>
<p>
Ultimately, PR_NORMALIZED_SUBJECT should be the part of PR_SUBJECT following the prefix. If there is no prefix, PR_NORMALIZED_SUBJECT becomes the same as PR_SUBJECT.</p>
<p>
PR_SUBJECT_PREFIX and PR_NORMALIZED_SUBJECT should be computed as part of the <a href="inter022_5rqr.htm"><b>IMAPIProp::SaveChanges</b></a> implementation. A client application should not prompt the <a href="inter022_44c3.htm"><b>IMAPIProp::GetProps</b></a> method for their values until they have been committed by an <b>IMAPIProp::SaveChanges</b> call.</p>
<p>
The subject properties are typically small strings of fewer than 256 characters, and a message store provider is not obligated to support the OLE <b>IStream</b> interface on them. The client should always attempt access through the <b>IMAPIProp</b> interface first, and resort to <b>IStream</b> only if MAPI_E_NOT_ENOUGH_MEMORY is returned.</p>
<h4>See Also</h4>
<p>
<a href="groups_87xv.htm">Subject Properties</a> </p>
<p>&nbsp;</p></body>
</HTML>
