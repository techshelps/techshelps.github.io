<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAPISendMail</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_c_mapisendmail"></a>MAPISendMail</h2>
<p>
The <b>MAPISendMail</b> function sends a message. This function differs from the <a href="smapiref_3kvn.htm"><b>MAPISendDocuments</b></a> function in that it allows greater flexibility in message generation.</p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>MAPI.H</td>
</tr>
</table><br>
<pre><code><b>ULONG FAR PASCAL MAPISendMail(
  LHANDLE</b><i> lhSession</i><b>,</b>         
<b>  ULONG</b><i> ulUIParam</i><b>,</b>           
<b>  lpMapiMessage</b><i> lpMessage</i><b>,</b>   
<b>  FLAGS</b><i> flFlags</i><b>,</b>             
<b>  ULONG</b><i> ulReserved           </i>
<b>)</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lhSession</i></dt>
<dd>
[in] Handle to a Simple MAPI session or zero. If the value of the <i>lhSession</i> parameter is zero, MAPI logs on the user and creates a session that exists only for the duration of the call. This temporary session can be an existing shared session or a new one. If necessary, the logon dialog box is displayed.</dd>
<dt>
<i>ulUIParam</i></dt>
<dd>
[in] Parent window handle or zero, indicating that if a dialog box is displayed, it is application modal. If the <i>ulUIParam</i> parameter contains a parent window handle, it is of type HWND (cast to a ULONG). If no dialog box is displayed during the call, <i>ulUIParam</i> is ignored.</dd>
<dt>
<i>lpMessage</i></dt>
<dd>
[in] Pointer to a <a href="smapiref_6n1b.htm"><b>MapiMessage</b></a> structure containing the message to be sent. If the MAPI_DIALOG flag is not set, the <b>nRecipCount</b> and <b>lpRecips</b> members must be valid for successful message delivery. Client applications can set the <b>flFlags</b> member to MAPI_RECEIPT_REQUESTED to request a read report. All other members are ignored and unused pointers should be NULL. </dd>
<dt>
<i>flFlags</i></dt>
<dd>
[in] Bitmask of option flags. The following flags can be set:
<dl>
<dt>
MAPI_DIALOG</dt>
<dd>
A dialog box should be displayed to prompt the user for recipients and other sending options. When MAPI_DIALOG is not set, at least one recipient must be specified.</dd>
<dt>
MAPI_LOGON_UI</dt>
<dd>
A dialog box should be displayed to prompt the user to log on if required. When the MAPI_LOGON_UI flag is not set, the client application does not display a logon dialog box and returns an error value if the user is not logged on. <b>MAPISendMail</b> ignores this flag if the <i>lpszMessageID</i> parameter is empty.</dd>
<dt>
MAPI_NEW_SESSION</dt>
<dd>
An attempt should be made to create a new session rather than acquire the environment's shared session. If the MAPI_NEW_SESSION flag is not set, <b>MAPISendMail</b> uses an existing shared session.</dd>
</dl>
</dd>
<dt>
<i>ulReserved</i></dt>
<dd>
Reserved; must be zero.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
MAPI_E_AMBIGUOUS_RECIPIENT</dt>
<dd>
A recipient matched more than one of the recipient descriptor structures and MAPI_DIALOG was not set. No message was sent.</dd>
<dt>
MAPI_E_ATTACHMENT_NOT_FOUND</dt>
<dd>
The specified attachment was not found. No message was sent.</dd>
<dt>
MAPI_E_ATTACHMENT_OPEN_FAILURE</dt>
<dd>
The specified attachment could not be opened. No message was sent.</dd>
<dt>
MAPI_E_BAD_RECIPTYPE</dt>
<dd>
The type of a recipient was not MAPI_TO, MAPI_CC, or MAPI_BCC. No message was sent.</dd>
<dt>
MAPI_E_FAILURE</dt>
<dd>
One or more unspecified errors occurred. No message was sent.</dd>
<dt>
MAPI_E_INSUFFICIENT_MEMORY</dt>
<dd>
There was insufficient memory to proceed. No message was sent.</dd>
<dt>
MAPI_E_INVALID_RECIPS</dt>
<dd>
One or more recipients were invalid or did not resolve to any address.</dd>
<dt>
MAPI_E_LOGIN_FAILURE</dt>
<dd>
There was no default logon, and the user failed to log on successfully when the logon dialog box was displayed. No message was sent.</dd>
<dt>
MAPI_E_TEXT_TOO_LARGE</dt>
<dd>
The text in the message was too large. No message was sent.</dd>
<dt>
MAPI_E_TOO_MANY_FILES</dt>
<dd>
There were too many file attachments. No message was sent.</dd>
<dt>
MAPI_E_TOO_MANY_RECIPIENTS</dt>
<dd>
There were too many recipients. No message was sent.</dd>
<dt>
MAPI_E_UNKNOWN_RECIPIENT</dt>
<dd>
A recipient did not appear in the address list. No message was sent.</dd>
<dt>
MAPI_E_USER_ABORT</dt>
<dd>
The user canceled one of the dialog boxes. No message was sent.</dd>
<dt>
SUCCESS_SUCCESS</dt>
<dd>
The call succeeded and the message was sent.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>MAPISendMail</b> function sends a standard message, with or without any user interaction. The profile must be configured so that <b>MAPISendMail</b> can open the default service providers without requiring user interaction. However, if the <i>flFlags</i> parameter is set to MAPI_NEW_SESSION, disallowing the use of a shared session, and the profile requires a password, MAPI_LOGON_UI must be set or the function will fail. Client applications can avoid this situation by using an explicit profile without a password or by using the default profile without a password. </p>
<p>
Client applications can provide a full or partial list of recipient names, subject text, file attachments, or message text. If any information is missing, <b>MAPISendMail</b> can prompt the user for it. If no information is missing, either the message can be sent as is or the user can be prompted to verify the information, changing values if necessary. </p>
<p>
A successful return from <b>MAPISendMail</b> does not necessarily imply recipient validation. The message might not have been sent to all recipients. Depending on the transport provider, recipient validation can be a lengthy process.</p>
<p>
A NULL value for the <b>lpszSubject</b> member of the <a href="smapiref_6n1b.htm"><b>MapiMessage</b></a> structure pointed to by the <i>lpMessage </i>parameter indicates that there is no text for the subject of the message. A NULL value for the <b>lpszNoteText</b> member indicates that there is no message text. Some client applications can truncate subject lines that are too long or contain carriage returns, line feeds, or form feeds. </p>
<p>
Each paragraph should be terminated with a CR (0x0d), an LF (0x0a), or a CRLF pair (0x0d0a). <b>MAPISendMail</b> wraps lines as appropriate. If the text exceeds system limits, the function returns the MAPI_E_TEXT_TOO_LARGE value.</p>
<p>
The <b>lpszMessageType</b> member of the <b>MapiMessage</b> structure pointed to by <i>lpMessage</i> is used only by non-IPM applications. Applications that handle IPM messages can set it to NULL or have it point to an empty string. </p>
<p>
The number of attachments per message can be limited in some messaging systems. If the limit is exceeded, the MAPI_E_TOO_MANY_FILES value is returned. If no files are specified, a pointer value of NULL should be assigned to the <b>lpFiles</b> member of the structure pointed to by <i>lpMessage</i>. File attachments are copied to the message before <b>MAPISendMail</b> returns; therefore, later changes to the files do not affect the contents of the message. The files must be closed when they are copied. Do not attempt to display attachments outside the range of the message text. </p>
<p>
Some messaging systems can limit the number of recipients per message. A pointer value of NULL for the <b>lpRecips</b> member in the <a href="smapiref_6n1b.htm"><b>MapiMessage</b></a> structure pointed to by <i>lpMessage</i> indicates no recipients. If the client application passes a non-NULL value indicating a number of recipients exceeding the system limit, <b>MAPISendMail</b> returns the MAPI_E_TOO_MANY_RECIPIENTS value. If the value of the <b>nRecipCount</b> member in the <b>MapiMessage</b> structure pointed to by <i>lpMessage</i> is 0, the MAPI_DIALOG flag must be present in the call to <b>MAPISendMail</b>.</p>
<p>
Note that<i> </i>the <b>lpRecips</b> member in the <b>MapiMessage</b> structure can include either an entry identifier, the recipient's name, an address, or a name and address pair. The following table shows how <b>MAPISendMail</b> handles the variety of information that can be specified:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%>Information </th>
<th align=left width=75%>Action</th>
</tr>
<tr valign=top>
<td width=25%>entry identifier</td>
<td width=75%>No name resolution; the name and address are ignored.</td>
</tr>
<tr valign=top>
<td width=25%>name</td>
<td width=75%>Name resolved using the Simple MAPI resolution rules.</td>
</tr>
<tr valign=top>
<td width=25%>address</td>
<td width=75%>No name resolution; address is used for both message delivery and for displaying the recipient name.</td>
</tr>
<tr valign=top>
<td width=25%>name and address</td>
<td width=75%>No name resolution; name used only for displaying the recipient name. </td>
</tr>
</table><br>
<p>
Client applications that send messages to custom recipients can avoid name resolution. Such clients should set the <b>lpszAddress</b> member of the <a href="smapiref_13tr.htm"><b>MapiRecipDesc</b></a> structure pointed to by the <b>lpRecips</b> member of the <b>MapiMessage</b> structure pointed to by the <i>lpMessage </i>parameter to the custom address.</p>
<p>
<b>MAPISendMail</b> does not require an originator-type recipient to send a message. </p>
<h4>See Also</h4>
<p>
<a href="smapiref_68tq.htm"><b>MAPILogon</b></a>, <a href="smapiref_6n1b.htm"><b>MapiMessage</b></a>, <a href="smapiref_13tr.htm"><b>MapiRecipDesc</b></a></p>
<p>&nbsp;</p></body>
</HTML>
