<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating and Configuring a Profile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_creating_and_configuring_a_profile"></a>Creating and Configuring a Profile</h1>
<p>
See <a href="intro_6vqr.htm">Message Services and Profiles</a> for more information about creating a profile using MAPI, adding message services to it and configuring them, and establishing certain default settings in the profile.</p>
<h4>Design Tasks</h4>
<ol>
<li>
Understand what message services your profile requires, and whether you wish to give your user any choice of services.</li>
<li>
Choose your tool. There are several tools available for creating profiles. Alternatives include:<ul>
<li>
Not creating one and using the messaging client's profile. This is usually the best choice for interpersonal (IPM) applications, especially if you want to use the same message store as the messaging client.</li>
<li>
Using the Profile Wizard to create a profile and having your user select message services interactively. For this technique to succeed, the services you require must all support wizard-based configuration, and your application must tolerate uncertainty in its configuration. See <a href="consider_3yec.htm">Creating a Profile with the Profile Wizard</a>.</li>
<li>
Using the NEWPROF.EXE utility and a template contained in a .PRF file to create a profile from a setup program or batch environment, or by spawning the utility from your own program. See <a href="consider_2equ.htm">Creating a Profile with NEWPROF</a>.</li>
<li>
Writing C or C++ code to create a profile. This is often the best choice for a noninteractive application which requires a specific set of message services. See <a href="consider_9kyt.htm">Creating a Profile with Custom Code</a>.</li>
</ul>
</li>
<li>
Understand in what order to add services. Following are guidelines for ordering service providers. These guidelines will occasionally conflict; when they do, you will have to write C or C++ code to configure one or more of the provider orders. You can use the Delivery and Addressing pages of the Mail and Fax control panel applet to inspect a profile you have created and see if the providers have been ordered as you expected.<ul>
<li>
Default message store. The first message store added to a profile which is capable of being the default store becomes the default store. Ordinarily, the service you intend to contain the default store should be listed first. See <a href="inter023_3u91.htm"><b>IMAPISession::SetDefaultStore</b></a>.</li>
<li>
Personal address book (PAB), default directory, and address book search order. The PAB, if not set explicitly, is the first container that is writeable and can contain names (according to its <a href="propa_3m7n.htm">PR_CONTAINER_FLAGS</a> property). The default directory is the first container in the hierarchy that contains names and is not the PAB (unless the PAB is the only container that can contain names). The default search path is the PAB, followed by each directory that is of display type DT_GLOBAL, has names, and does not have the AB_NOT_DEFAULT flag set in PR_CONTAINER_FLAGS. If there are no directories of type DT_GLOBAL, the default search path is just the PAB and the default directory. See <a href="consider_3i1x.htm">Resolving a Name</a>, <a href="inter006_6ftu.htm"><b>IAddrBook::SetPAB</b></a>, and <a href="inter006_86w8.htm"><b>IAddrBook::SetSearchPath</b></a>.</li>
<li>
Transport order. If the transport order is not explicitly set, MAPI services transports in the same order they were added to the profile, except that transports which set the STATUS_XP_PREFER_LAST flag are serviced last. The transport order is unimportant unless your profile contains two or more transports which handle the same e-mail address type. See <a href="inter030_0ysy.htm"><b>IMsgServiceAdmin::MsgServiceTransportOrder</b></a>. </li>
</ul>
</li>
</ol>
<p>
If your application must run unattended, perhaps as a background application or a Windows NT service, some special cautions apply. See <a href="consider_7sdw.htm">Writing an Automated Client</a> and <a href="intro_2qnn.htm">Windows NT Service Client Applications</a>.</p>
<p>
If your application requires a specific profile other than the default profile, you must save its name in your own configuration database or use a specific naming convention. MAPI does not expose any profile attributes other than the name and default flag in the profile table, and the default profile flag is reserved for the messaging client and related IPM applications.</p>
<h4>Implementation Tasks</h4>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To create a .PRF file for use with the NEWPROF.EXE utility</h5>
<ol>
<li>
Assemble information from existing .PRF files. For each service you plan to use, copy the section that lists the name, type, and property identifier for each configuration property. The section must have the same name as the service. Services implemented by Microsoft are listed in Section 4 of the DEFAULT.PRF file that is installed with MAPI. </li>
<li>
Place the profile name in the <b>ProfileName=</b> line of the <b>[General]</b> section.</li>
<li>
Create the <b>[Service List]</b> section, in Section 2 of the file. In this section, list each service you require and the name of the section that contains its configuration properties. Refer to the earlier guidelines to establish the order of services.</li>
<li>
For each service listed in the <b>[Service List]</b> section, create a section that lists the value for each configuration property; the section must have the same name as the service. This information appears in Section 3 of the file.</li>
<li>
Invoke the utility. On 32-bit operating systems, it can be run from a command line or batch file. On 16-bit Windows, NEWPROF.EXE cannot be run from an MS-DOS shell; it can be run by a Windows-based setup script, by the <b>Run</b> command on the <b>File</b> menu in Program Manager or File Manager, or by the <b>WinExec</b> system call. It takes command line parameters as follows:<ul>
<li>
<b>-P</b> descriptor-file-path<p>
An absolute path to the .PRF file. The default value is DEFAULT.PRF in the Windows directory.
</li>
<li>
-<b>S</b><p>
If this option is present, NEWPROF.EXE displays a logging window showing what is being executed and any errors it encounters. By default no window is displayed.
</li>
<li>
-<b>X</b><p>
If this option is present, NEWPROF.EXE immediately creates the profile. By default, it waits until the user chooses the <b>Execute</b> button in its window. This option is required if NEWPROF.EXE is to run without displaying its window.
</li>
<li>
-<b>Z</b><p>
If this option is present, NEWPROF.EXE displays error messages and other debugging information in its window. By default this information is not displayed.
</li>
</ul>
</li>
</ol>
<p>
<b>Note</b>  References to Sections 1, 2, 3, and 4 in the preceding procedure refer to comments in the DEFAULT.PRF file distributed with the Platform SDK.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To write custom C or C++ code to create a profile</h5>
<ol>
<li>
Read the header file for each service. Understand what properties you need to configure and what values you will use.</li>
<li>
Call the <a href="function_9jg3.htm"><b>MAPIAdminProfiles</b></a> function to obtain an <a href="inter035_46y6.htm"><b>IProfAdmin</b></a> interface. Call the <b>CreateProfile</b> method to create your profile, and the <b>AdminServices</b> method to obtain an <a href="inter030_7bxq.htm"><b>IMsgServiceAdmin</b></a> interface.</li>
<li>
Add message services to the profile. Refer to the previous guidelines for the order you should use. For each service, use the <b>IMsgServiceAdmin</b> interface to:  <ol type=a>
<li>
Call the <a href="inter030_60th.htm"><b>CreateMsgService</b></a> method.</li>
<li>
Obtain the <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> structure of the service you just created. </li>
<li value=1>
Call the <a href="inter030_4did.htm"><b>GetMsgServiceTable</b></a> method to obtain an <a href="inter026_44ry.htm"><b>IMAPITable</b></a> interface.</li>
<li>
Call the <a href="function_0dgz.htm"><b>HrQueryAllRows</b></a> function to retrieve all rows from the table.</li>
<li>
Get the <a href="propb_357o.htm">PR_SERVICE_UID</a> column from the last row. This is the <b>MAPIUID</b> structure of the last service added. You may wish to check with an assertion that other properties of the service are as you expect.</li>
<li value=3>
Call the <a href="inter030_4cv9.htm"><b>ConfigureMsgService</b></a> method, passing the <b>MAPIUID</b> structure of the service you just created and a property value array with its configuration properties.</li>
</ol>
</li>
<li>
If you must make configuration calls that require an <b>IMAPISession</b> interface, such as <b>IMAPISession::SetDefaultStore</b>, <b>IAddrBook::SetPAB</b>, or <b>IAddrBook::SetABSearchPath</b>, pass the MAPI_NO_MAIL flag to the <a href="function_8to8.htm"><b>MAPILogonEx</b></a> function.</li>
<li>
To make your profile temporary, call the <a href="inter035_3eqt.htm"><b>IProfAdmin::DeleteProfile</b></a> method immediately after logging on to the profile. It will be deleted after you log off, and will not be visible to other applications in the meantime.</li>
</ol>
<h4>About Sample Source Code</h4>
<p>
None available at this time.</p>
<p>&nbsp;</p></body>
</HTML>
