<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Testing and Debugging</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_testing_and_debugging"></a>Testing and Debugging</h2>
<p>
Testing strategies differ depending on whether you are developing a client or service provider. Because a client application requires one or more service providers to operate, clients should be tested in an environment with different sets of service providers. </p>
<p>
Service providers, however, should be tested in isolation before being integrated with other providers. MAPI provides tools that are meant to test the features of a service provider of a particular type. ABVIEW.EXE (for 16-bit platforms) and ABVIEW32.EXE (for 32-bit platforms) exercises the features of an address book provider. MDBVU.EXE (for 16-bit platforms) and MDBVU32.EXE (for 32-bit platforms) works with a message store provider. </p>
<p>
To test any service provider in isolation, use one of these sample applications and limit the entries in the profile the provider to be tested. Include any other service providers that are absolutely necessary. For example, to test a transport provider, your profile would contain that provider, the personal address book (PAB), and a message store. For more information about these tools, see <a href="start_49ma.htm">Address Book Viewer</a> and <a href="start_973m.htm">Message Store Viewer</a>.</p>
<p>
All clients and service providers can benefit from using a set of debugging macros provided by MAPI in the MAPIDBG utility. This utility is controlled by the entries in its initialization file, MAPIDBG.INI. MAPIDBG.INI is used to control various features of the MAPI subsystem. The file resides in the Windows directory and is organized in sections, similar to other Windows initialization files and MAPISVC.INF. Sections are labeled in the following format with each section containing several entries that affect the utility's behavior:</p>
<pre><code>[SectionName] Section
 </code></pre>
<p>
For detailed information about the various sections in the MAPIDBG.INI file, see <a href="appxfile_1zop.htm">File Format of MAPIDBG.INI</a>. </p>
<p>&nbsp;</p></body>
</HTML>
