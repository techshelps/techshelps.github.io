<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAPIInitialize</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_mapiinitialize"></a>MAPIInitialize</h2>
<p>
The <b>MAPIInitialize</b> function increments the MAPI subsystem reference count and initializes global data for the MAPI DLL. </p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIX.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Client applications </td>
</tr>
</table><br>
<pre><code><b>HRESULT MAPIInitialize(
  LPVOID</b><i> lpMapiInit  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpMapiInit</i></dt>
<dd>
[in] Pointer to a <a href="structyp_501c.htm"><b>MAPIINIT_0</b></a> structure. The <i>lpMapiInit</i> parameter can be set to NULL.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The MAPI subsystem was initialized successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>MAPIInitialize</b> function increments the MAPI reference count for the MAPI subsystem, and the <a href="function_6pk5.htm"><b>MAPIUninitialize</b></a> function decrements the internal reference count. Thus, the number of calls to one function must equal the number of calls to the other. <b>MAPIInitialize</b> returns S_OK if MAPI has not been previously initialized. </p>
<p>
A client or service provider must call <b>MAPIInitialize</b> before making any other MAPI call. Failure to do so causes client or service provider calls to return the MAPI_E_NOT_INITIALIZED value.</p>
<p>
When calling <b>MAPIInitialize</b> from a multithreaded application, set the <i>lpMapiInit</i> parameter to a <a href="structyp_501c.htm"><b>MAPIINIT_0</b></a> structure that is declared as follows: </p>
<p>
<b>MAPIINIT_0</b> MAPIINIT= { 0, MAPI_MULTITHREAD_NOTIFICATIONS} </p>
<p>
and call: </p>
<p>
<b>MAPIInitialize</b> (&amp;MAPIINIT); </p>
<p>
When this structure is declared, MAPI creates a separate thread to handle the notification window, which continues until the initialize reference count falls to zero. A Windows NT service must set the <b>ulflags</b> member of the <b>MAPIINIT_0</b> structure pointed to by <i>lpMapiInit</i> to MAPI_NT_SERVICE. </p>
<p>
<b>Note</b>  You cannot call <b>MAPIInitialize</b> or <b>MAPIUninitialize</b> from within a Win32 <b>DllEntryPoint</b> function or any other function that creates or terminates threads. For more information, see <a href="extend_1c6r.htm">Using Thread-Safe Objects</a>. </p>
<p>
<b>MAPIInitialize </b>does not return any extended error information. Unlike most other MAPI calls, the meanings of its return values are strictly defined to correspond to the particular step of the initialization that failed:</p>
<p>
<b>Step 1 </b>Checks parameters and flags.</p>
<p>
MAPI_E_INVALID_PARAMETER or MAPI_E_UNKNOWN_FLAGS. Caller passed invalid parameter or flag.</p>
<p>
<b>Step 2</b> Initializes registry keys required by MAPI and confirms the type of operating system. This step only happens if the client process is running as a service under Windows NT and sets the MAPI_NT SERVICE flag in the <b>MAPIINIT_0</b> structure.  </p>
<p>
MAPI_E_TOO_COMPLEX. (Windows NT only) The calling process is an NT service and registry keys required by MAPI could not be initialized. </p>
<p>
Additional information may be available in the application event log.</p>
<p>
<b>Step 3a</b> Checks for compatibility between the current versions of OLE and MAPI.  </p>
<p>
MAPI_E_VERSION. The version of OLE installed on the workstation is not compatible with this version of MAPI.</p>
<p>
<b>Step 3b</b> Initializes OLE.   </p>
<p>
During this step only, this function can return an error code not listed here. Any error <i>not</i> listed here should be assumed to come from the OLE function <b>CoInitialize</b>.</p>
<p>
<b>Step 4</b> Initializes per-process global variables.</p>
<p>
MAPI_E_SESSION_LIMIT.  MAPI sets up context specific to the current process. Failures may occur on Win16 if the number of processes exceeds a certain number, or on any system if available memory is exhausted.</p>
<p>
<b>Step 5 </b>Initializes shared global variables of all processes.</p>
<p>
MAPI_E_NOT_ENOUGH_RESOURCES. Not enough system resources were available to complete the operation.</p>
<p>
<b>Step 6</b> Initializes the notification engine, creates its window and its thread if requested by the MAPI_MULTITHREAD_NOTIFICATIONS flag. </p>
<p>
MAPI_E_INVALID_OBJECT.  May fail if system resources are exhausted. </p>
<p>
<b>Step 7</b> Loads and initializes the profile provider. Verifies that <b>MAPIInitialize </b>can access the registry key where profile data are stored. </p>
<p>
MAPI_E_NOT_INITIALIZED.  The profile provider has encountered an error. In a service running under Windows NT version 3.51, the profile provider must first initialize the registry subtree called HKEY_CURRENT_USER, this occurs in Step 2. This process is subject to additional failures, including lack of access rights to the registry. </p>
<h4>See Also</h4>
<p>
<a href="groups_4tbn.htm">MAPI Initialization Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
