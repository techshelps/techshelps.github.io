<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMsgStore::GetReceiveFolder</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imsgstore_getreceivefolder"></a>IMsgStore::GetReceiveFolder</h2>
<p>
The <b>IMsgStore::GetReceiveFolder</b> method obtains the folder that was established as the destination for incoming messages of a specified message class or the default receive folder for the message store.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter031_1jg0.htm"><b>IMsgStore : IMAPIProp</b></a>.</p>
<pre><code><b>HRESULT GetReceiveFolder(
  LPTSTR</b><i> lpszMessageClass</i><b>,</b>      
<b>  ULONG</b><i> ulFlags</i><b>,</b>                
<b>  ULONG FAR *</b><i> lpcbEntryID</i><b>,</b>      
<b>  LPENTRYID FAR *</b><i> lppEntryID</i><b>,</b>   
<b>  LPTSTR FAR *</b><i> lppszExplicitClass  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszMessageClass</i></dt>
<dd>
[in] Pointer to a message class that is associated with a receive folder. If the <i>lpszMessageClass</i> parameter is set to NULL or an empty string, <b>GetReceiveFolder</b> returns the default receive folder for the message store.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls the type of the passed-in and returned strings. The following flag can be set:
<dl>
<dt>
MAPI_UNICODE</dt>
<dd>
The message class string is in Unicode format. If the MAPI_UNICODE flag is not set, the message class string is in ANSI format.</dd>
</dl>
</dd>
<dt>
<i>lpcbEntryID</i></dt>
<dd>
[out] Pointer to the count of bytes in the entry identifier pointed to by the <i>lppEntryID</i> parameter.</dd>
<dt>
<i>lppEntryID</i></dt>
<dd>
[out] Pointer to a pointer to the entry identifier for the requested receive folder.</dd>
<dt>
<i>lppszExplicitClass</i></dt>
<dd>
[out] Pointer to a pointer to the message class that explicitly sets as its receive folder the folder pointed to by <i>lppEntryID</i>. This message class should either be the same as the class in the <i>lpszMessageClass </i>parameter<i> </i>or of a superclass of that class. Passing NULL indicates that the folder pointed to by <i>lppEntryID </i>is the default receive folder for the message store. 
</dd>
</dl>
<h4>Return Value</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The receive folder was successfully returned.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMsgStore::GetReceiveFolder</b> method obtains the entry identifier of a receive folder, a folder designated to receive incoming messages of a particular message class. Callers can specify a message class or NULL in the <i>lpszMessageClass</i> parameter. If <i>lpszMessageClass</i> is NULL, <b>GetReceiveFolder</b> returns:
<ul>
<li>
In <i>lppszExplicitClass</i>, the name of the first superclass of the message class pointed to by <i>lpszMessageClass </i>that does explicitly set a receive folder.</li>
<li>
In <i>lppEntryID</i>, the entry identifier of the receive folder for the superclass pointed to by the <i>lppszExplicitClass</i> parameter.</li>
</ul>
<p>
For example, suppose the receive folder of the message class IPM.Note has been set to the entry identifier of the Inbox and <b>GetReceiveFolder</b> is called with the contents of <i>lpszMessageClass</i> set to IPM.Note.Phone. If IPM.Note.Phone does not have an explicit receive folder set, <b>GetReceiveFolder</b> returns the entry identifier of the Inbox in <i>lppEntryID</i> and IPM.Note in <i>lppszExplicitClass</i>.</p>
<p>
If the client calls <b>GetReceiveFolder</b> for a message class and has not set a receive folder for that message class, <i>lppszExplicitClass</i> is either a zero-length string, a string in Unicode format, or a string in ANSI format depending on whether the client set the MAPI_UNICODE flag in the <i>ulFlags</i> parameter. </p>
<p>
A default receive folder, obtained by passing NULL in the <i>lpszMessageClass</i> parameter, always exists for every message store.</p>
<p>
A client should call the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> function when it is done with the entry identifier returned in <i>lppEntryID</i> to free the memory that holds that entry identifier. It should also call <b>MAPIFreeBuffer</b> when it is done with the message class string returned in <i>lppszExplicitClass</i> to free the memory that holds that string.</p>
<h4>See Also</h4>
<p>
<a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a></p>
<p>&nbsp;</p></body>
</HTML>
