<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting Formatted Text: Message Store Responsibilities</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_supporting_formatted_text_message_store_responsibilities"></a>Supporting Formatted Text: Message Store Responsibilities </h2>
<p>
Message store providers use the <a href="propb_01t7.htm">PR_STORE_SUPPORT_MASK</a> property to publish whether or not they can handle Rich Text Format (RTF) and, if they are RTF-aware, whether they store the formatted text in a compressed or uncompressed format. Message store providers indicate that they are RTF-aware by setting the STORE_RTF_OK bit and that they store the formatted text in an uncompressed form by setting the STORE_UNCOMPRESSED_RTF bit. </p>
<p>
While it is important for an RTF-aware client to check for the STORE_RTF_OK bit to determine whether or not a message store supports RTF, it is not necessary for a client to be concerned with the format of an RTF-aware store's formatted text. </p>
<p>
All message stores must support non-RTF-aware clients. A non-RTF-aware message store must delete the <a href="propb_26ar.htm">PR_RTF_IN_SYNC</a> property during a call to the message's <a href="inter022_5rqr.htm"><b>IMAPIProp::SaveChanges</b></a> method if a client has changed <a href="propa_9lvd.htm">PR_BODY</a> without updating either <a href="propb_26ar.htm">PR_RTF_IN_SYNC</a> or <a href="propb_7vhg.htm">PR_RTF_COMPRESSED</a>. Deleting PR_RTF_IN_SYNC causes the PR_RTF_COMPRESSED property to be recomputed from the PR_BODY property the next time an RTF-aware client calls <a href="function_4yg3.htm"><b>RTFSync</b></a>. </p>
<p>
Most RTF-aware message stores are not given the message text by clients; it must be computed on request. Because this computation is time consuming and expensive, clients should use PR_RTF_COMPRESSED whenever possible. To compute the PR_BODY property, the message store provider must uncompress the contents of the PR_RTF_COMPRESSED property and remove the rich text formatting. Clients that do not support the PR_RTF_COMPRESSED property require this computation to take place for every message.</p>
<p>
When copying messages, message store providers that do not use the <b>IMAPISupport::DoCopyProps</b> or <b>IMAPISupport::DoCopyTo</b> methods run the risk of creating a message with no content if their implementation excludes the PR_BODY property and relies on PR_RTF_COMPRESSED. It is possible for the data in the PR_RTF_COMPRESSED property to be corrupt. Before excluding either of these message content properties in the copy operation, check for corruption as follows:
<ol>
<li>
If the value of <a href="propb_7vhg.htm">PR_RTF_COMPRESSED</a> is not larger than the compressed RTF, the property is corrupt.</li>
<li>
If the magic value in the RTF header is not <i>dwMagicCompressedRTF</i> or <i>dwMagicUncompressedRTF</i>, the property is corrupt.</li>
</ol>
<p>
Message store providers using the support methods need not be concerned with implementing a check for PR_RTF_COMPRESSED corruption; MAPI ensures that the appropriate properties exist and are valid. </p>
<p>
There are three different levels of RTF support that message store providers can implement; MAPI recommends that RTF-aware message store providers implement their support at the middle or highest level. All RTF-aware message store providers take care of generating PR_BODY from the data included in PR_RTF_COMPRESSED on outgoing messages and make a call to <b>RTFSync</b> to synchronize text and formatting on incoming messages. </p>
<p>
The differences between these three levels are described in the following table. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=26%>Level of support</th>
<th align=left width=74%>Description</th>
</tr>
<tr valign=top>
<td width=26%>Low</td>
<td width=74%>Message store provider calls <b>RTFSync</b> whenever changes are saved to a message and extracts the data for the PR_BODY property from PR_RTF_COMPRESSED rather than requiring clients to set it. Both PR_BODY and PR_RTF_COMPRESSED are stored. </td>
</tr>
<tr valign=top>
<td width=26%>Middle</td>
<td width=74%>Message store provider stores only the PR_RTF_COMPRESSED property, computing PR_BODY when necessary.</td>
</tr>
<tr valign=top>
<td width=26%>High</td>
<td width=74%>Message store provider stores neither PR_BODY or the auxilliary RTF properties. <b>RTFSync</b> is called when the message text has changed and the formatting remains unchanged or when a new message is downloaded by a transport provider.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
