<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting Message Attachments for Message Store Providers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_supporting_message_attachments_for_message_store_providers"></a>Supporting Message Attachments for Message Store Providers</h2>
<p>
It is not required that your message store provider support message attachments. However, many client applications expect to be able to add attachments to messages. If your message store will be used to create or store IPM.Note messages, then you should support message attachments. Default message store providers are strongly encouraged to support message attachments. For more information, see <a href="extend_5gab.htm">Message Classes</a>, and <a href="storearc_3elv.htm">Default Message Stores</a>.</p>
<p>
There are five types of attachments that MAPI supports: file attachments, data attachments, message attachments, OLE object attachments, and links. The requirements for supporting each type are different. Clients differentiate between the two types of attachments by means of the <a href="propa_7o6c.htm">PR_ATTACH_METHOD</a> property on attachment objects.</p>
<p>
Supporting attachments means implementing the <a href="inter007_8aeo.htm"><b>IAttach : IMAPIProp</b></a> interface. The <b>IAttach</b> interface has no methods of its own; it only has methods inherited from the <a href="inter022_00tq.htm"><b>IMAPIProp</b></a> interface. Since your message store provider must already implement properties for message objects, this greatly simplifies the task of supporting attachments. Implementing <b>IAttach</b> basically means providing a way for clients to access a table of properties for particular attachments on messages.</p>
<p>
Data attachments are simply attachments where the contents of the attachment are stored directly in an attachment's <a href="propa_6eni.htm">PR_ATTACH_DATA_BIN</a> property. Data attachments exist primarily to allow clients to attach files to a message when the sender and the recipient of the message do not have access to a common file server. See <a href="propa_7o6c.htm">PR_ATTACH_METHOD</a> for details.</p>
<p>
Message attachments are attachments where the attachment subobject is another <a href="inter029_525s.htm"><b>IMessage : MAPIProp</b></a> object. Since message store providers already support the <b>IMessage</b> interface, supporting message attachments is not difficult.</p>
<p>
Supporting OLE object attachments means implementing the OLE <b>IStorage</b>, <b>IStream</b>, and <b>IStreamDocfile</b> interfaces. Your message store provider must be able to convert OLE object data stored in the message into an active OLE object when a client opens the object. For more information, see <a href="groups_6reb.htm">Attachment Properties</a>.</p>
<p>
Links come in two types: links to files and links to other messages. Links to files use the ATTACH_BY_REF_ONLY value for the <a href="propa_7o6c.htm">PR_ATTACH_METHOD</a> property along with <a href="propa_0011.htm">PR_ATTACH_PATHNAME</a> or <a href="propa_23dx.htm">PR_ATTACH_LONG_PATHNAME</a> to specify the location of a file.</p>
<p>
How one implements links to messages may be dependent on aspects of the local messaging system, and as such cannot be fully documented here. For example, sending a link to a message that is stored on a server-based message store is typically just a matter of sending the entry identifier of the linked message, providing that both the sender and recipient have access to that server. Other messaging system configurations present other requirements and challenges for implementing links to messages.</p>
<p>&nbsp;</p></body>
</HTML>
