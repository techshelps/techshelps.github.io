<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Address Book Entries</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_adding_address_book_entries"></a>Adding Address Book Entries</h2>
<p>
To add a messaging user or distribution list to a container, a client calls <a href="inter006_7b7d.htm"><b>IAddrBook::NewEntry</b></a> or a provider calls <a href="inter025_8q2h.htm"><b>IMAPISupport::NewEntry</b></a> with the entry identifier of the target container in the <i>lpEIDContainer</i> parameter. MAPI in turn calls the container's <a href="inter003_8b21.htm"><b>IABContainer::CreateEntry</b></a> method to create the entry using a one-off template from a one-off table. A one-off template allows the client to create a new recipient of a particular type. Most of the fields are editable. The template pointed to by the <i>lpEntryID</i> parameter might be one that your provider supplies or it might be a template from a foreign provider, if your provider supports foreign templates. Implementations of <b>CreateEntry</b> for providers that can create recipients from a foreign template are always more complex than implementations for providers that cannot. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To implement IABContainer::CreateEntry</h5>
<ol>
<li>
Determine the type of entry identifier specified by the <i>lpEntryID</i> parameter. </li>
<li>
If the entry identifier represents a template for a messaging user, distribution list, or address book container owned by your provider:<ol type=a>
<li>
Create and initialize the appropriate object. Your provider can set some initial properties if desired. These properties depend on the type of recipient being created. </li>
<li>
Return a pointer to the object's implementation in the contents of the <i>lppMAPIPropEntry</i> parameter.</li>
</ol>
</li>
<li>
If the entry identifier represents a template for a foreign provider:<ol type=a>
<li>
Call <a href="inter025_4rnd.htm"><b>IMAPISupport::OpenEntry</b></a> to open the foreign object. </li>
<li>
Call the object's <a href="inter022_44c3.htm"><b>IMAPIProp::GetProps</b></a> method, passing NULL for the property tag array, to retrieve its properties.</li>
<li>
Edit the property value array returned from <b>GetProps</b> by changing the property tag to PR_NULL for all properties that will not apply to the new object and should not be transferred. </li>
<li>
Create an entry identifier for the new object. </li>
<li>
Create a new object of the appropriate type, either messaging user or distribution list.</li>
<li>
Initialize the new object by setting default properties.</li>
<li>
Check whether or not the foreign object supports the <a href="propb_8810.htm">PR_TEMPLATEID</a> property. </li>
<li>
If the foreign object supports PR_TEMPLATEID, call <a href="inter025_8aec.htm"><b>IMAPISupport::OpenTemplateID</b></a> to retrieve a property object interface from the foreign provider and set the contents of the <i>lppMAPIPropEntry</i> parameter to the foreign property object implementation. </li>
<li>
If the foreign object does not support PR_TEMPLATEID, set the contents of the <i>lppMAPIPropEntry</i> parameter to your provider's implementation of the new object.</li>
<li>
Call the <a href="inter022_6cxf.htm"><b>IMAPIProp::SetProps</b></a> method of the object pointed to by the <i>lppMAPIPropEntry</i> parameter to set the appropriate properties from the foreign object.</li>
</ol>
<p>

</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
