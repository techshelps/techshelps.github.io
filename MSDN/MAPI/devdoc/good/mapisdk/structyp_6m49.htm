<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADRENTRY</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_adrentry"></a>ADRENTRY</h2>
<p>
The <b>ADRENTRY</b> structure describes zero or more properties belonging to a recipient.</p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>MAPIDEFS.H</td>
</tr>
</table><br>
<pre><code>typedef struct _ADRENTRY  
{  
     ULONG        ulReserved1; 
     ULONG        cValues; 
     LPSPropValue rgPropVals;  
} ADRENTRY, FAR *LPADRENTRY; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>ulReserved1</b></dt>
<dd>
Reserved; must be zero.</dd>
<dt>
<b>cValues</b></dt>
<dd>
Count of properties in the property value array pointed to by the <b>rgPropVals</b> member. The <b>cValues</b> member can be zero. </dd>
<dt>
<b>rgPropVals</b></dt>
<dd>
Pointer to a property value array describing the properties for the recipient. The <b>rgPropVals</b> member can be NULL.
</dd>
</dl>
<h4>Remarks </h4>
<p>
An <b>ADRENTRY</b> structure describes properties belonging to a single recipient. The properties that are typically used to describe a recipient include:</p>
<p class=indent1>
<a href="propa_1yjp.htm">PR_DISPLAY_NAME</a></p>
<p class=indent1>
<a href="propa_4gkl.htm">PR_ADDRTYPE</a></p>
<p class=indent1>
<a href="propa_2t9v.htm">PR_EMAIL_ADDRESS</a></p>
<p class=indent1>
<a href="propa_8cv8.htm">PR_ENTRYID</a></p>
<p>
When an entry identifier — or PR_ENTRYID property — appears in the <a href="structyp_9sbp.htm"><b>SPropValue</b></a> array for a recipient, this indicates that the recipient has been resolved. Clients call the <a href="inter006_64v9.htm"><b>IAddrBook::ResolveName</b></a> method to ensure that all recipients in the recipient list of an outgoing message have been resolved. Only resolved recipients can be sent with messages. </p>
<p>
<b>ADRENTRY</b> structures are commonly combined to form an array for the <b>aEntries</b> member of an <a href="structyp_87n8.htm"><b>ADRLIST</b></a> structure. </p>
<p>
<b>ADRENTRY</b> structures and <a href="structyp_233r.htm"><b>SRow</b></a> structures are identical in that they both contain a reserved member, an array of property values, and a count of values in the array. Whereas <b>ADRENTRY</b> structures are combined to form the <b>aEntries</b> member of an <b>ADRLIST</b> structure, <b>SRow</b> structures are combined to form the <b>aRow</b> member of an <a href="structyp_2378.htm"><b>SRowSet</b></a> structure. Both types of structures follow the same allocation rules, implying that an <b>SRowSet</b> structure that is retrieved from the contents table of an address book container can be cast to an <b>ADRLIST</b> structure and used as is.</p>
<p>
An <b>ADRENTRY</b> structure can be empty. An <b>ADRENTRY</b> structure contained in the <b>ADRLIST</b> structure pointed to by the <i>lppAdrList</i> parameter in a call to <b>IAddrBook::Address</b> can be empty when, for example, a recipient is being removed. </p>
<p>
For more information on allocating memory for <b>ADRENTRY</b> structures, see <a href="extend_41ir.htm">Managing Memory for <b>ADRLIST</b> and <b>SRowSet</b> Structures</a>.</p>
<h4>See Also</h4>
<p>
<a href="groups_4ucz.htm">Address Structures</a>, <a href="inter006_2fn7.htm"><b>IAddrBook::Address</b></a>, <a href="inter029_8vw3.htm"><b>IMessage::ModifyRecipients</b></a>, <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a>, <a href="structyp_233r.htm"><b>SRow</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
