<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAPISaveMail (VB)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_mapisavemail_vb_"></a>MAPISaveMail (VB)</h2>
<p>
The Visual Basic <b>MAPISaveMail</b> function saves a message. </p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>MAPIVB32.BAS</td>
</tr>
</table><br>
<p>
<b>MAPISaveMail</b>(</p>
<p>
<b>&nbsp;&nbsp;&nbsp;&nbsp;</b><i>Session</i> as<b> Long,<br>
</b>&nbsp;&nbsp;&nbsp;&nbsp;<i>UIParam</i> as <b>Long</b>, <br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>Message</i> as <b>MapiMessage</b>, <br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>Recips</i> as <b>MapiRecip</b>, <br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>Files</i> as <b>MapiFile</b>, <br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>Flags</i> as <b>Long, </b><br>
&nbsp;&nbsp;&nbsp;&nbsp;<i>Reserved</i> ByVal as <b>Long,<br>
&nbsp;&nbsp;&nbsp;&nbsp;</b><i>MessageID</i> as <b>String</b>) as <b>Long</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>Session</i></dt>
<dd>
[in] Session handle that represents a Simple MAPI session or zero. If the value for the <i>Session</i> parameter is zero, MAPI logs on the user and creates a session that exists only for the duration of the call. This temporary session can be an existing shared session or a new one. If necessary, a logon dialog box is displayed. </dd>
<dt>
<i>UIParam</i></dt>
<dd>
[in] Parent window handle or zero, indicating that if a dialog box is displayed, it is application modal. If no dialog box is displayed during the call, the <i>UIParam</i> parameter is ignored.</dd>
<dt>
<i>Message</i></dt>
<dd>
[in] Contents of the message to be saved. Client applications can either ignore the <b>Flags</b> member of the <a href="smapiref_1iov.htm"><b>MapiMessage</b></a> type, or if the message has never been saved, can set the MAPI_SENT and MAPI_UNREAD flags. </dd>
<dt>
<i>Recips</i></dt>
<dd>
[in] The first element in an array of recipients. When the value of the <b>RecipCount</b> member in the <b>MapiMessage</b> type is zero, this parameter is ignored. The recipient string can include either the recipient's name or the recipient's name-address pair. If only a name is specified, the name is resolved to an address using implementation-defined address-book search rules. If an address is also specified, a search for the name is not performed. The address is in an implementation-defined format and is assumed to have been obtained from the implementation some other way. When the address is specified, the name is used for display to the user and the address is used for delivery. When the <b>EntryID</b> member for a particular recipient is used, no search is performed and the display-name and address are ignored. (A name and address are associated with the <b>EntryID</b> within the messaging system.) </dd>
<dt>
<i>Files</i></dt>
<dd>
[in] The first element in an array of attachment files written when the message is read. The number of attachments per message can be limited in some systems. If the limit is exceeded, the MAPI_E_TOO_MANY_FILES value is returned. When the value of the <b>FileCount</b> member in the <a href="smapiref_1iov.htm"><b>MapiMessage</b></a> type is zero, this parameter is ignored. Attachment files are read and attached to the message before the call returns. Do not attempt to display attachments outside the range of the message text.</dd>
<dt>
<i>Flags</i></dt>
<dd>
[in] Bitmask of option flags. The following flags can be set: 
<dl>
<dt>
MAPI_LOGON_UI</dt>
<dd>
A dialog box should be displayed to prompt the user to log on if required. When the MAPI_LOGON_UI flag is not set, the client application does not display a logon dialog box and returns an error value if the user is not logged on. <b>MAPISaveMail</b> ignores this flag if the <i>MessageID</i> parameter is empty.</dd>
<dt>
MAPI_LONG_MSGID</dt>
<dd>
The returned message identifier is expected to be 512 characters. If this flag is set, the <i>MessageID</i> parameter must be large enough to accomodate 512 characters. </dd>
<dt>
MAPI_NEW_SESSION</dt>
<dd>
An attempt should be made to create a new session rather than acquire the environment's shared session. If the MAPI_NEW_SESSION flag is not set, <b>MAPISaveMail</b> uses an existing shared session.</dd>
</dl>
</dd>
<dt>
<i>Reserved</i></dt>
<dd>
Reserved; must be zero.</dd>
<dt>
<i>MessageID</i></dt>
<dd>
[in] A variable-length, caller-allocated string identifier for the message, returned either by the <b>MAPIFindNext</b> function or a previous call to <b>MAPISaveMail</b>, or a null string. If the <i>MessageID</i> parameter contains a valid message identifier, the message is overwritten. If <i>MessageID</i> contains a null string, a new message is created. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
MAPI_E_FAILURE</dt>
<dd>
One or more unspecified errors occurred while saving the message. No message was saved.</dd>
<dt>
MAPI_E_BAD_RECIPTYPE</dt>
<dd>
The type of a recipient was not MAPI_TO, MAPI_CC, or MAPI_BCC. No message was sent.</dd>
<dt>
MAPI_E_INSUFFICIENT_MEMORY</dt>
<dd>
There was insufficient memory to save the message. No message was saved.</dd>
<dt>
MAPI_E_INVALID_MESSAGE</dt>
<dd>
An invalid message identifier was passed in the <i>MessageID</i> parameter. No message was saved.</dd>
<dt>
MAPI_E_INVALID_SESSION</dt>
<dd>
An invalid session handle was passed in the <i>Session</i> parameter. No message was saved.</dd>
<dt>
MAPI_E_LOGIN_FAILURE</dt>
<dd>
There was no default logon, and the user failed to log on successfully when the logon dialog box was displayed. No message was saved.</dd>
<dt>
MAPI_E_NOT_SUPPORTED</dt>
<dd>
The operation was not supported by the underlying messaging system.</dd>
<dt>
MAPI_E_USER_ABORT</dt>
<dd>
The user canceled the process. No message was saved.</dd>
<dt>
SUCCESS_SUCCESS</dt>
<dd>
The call succeeded and the message was saved.
</dd>
</dl>
<h4>Remarks</h4>
<p>
To replace an existing message, the caller first calls the <a href="smapiref_4fvj.htm"><b>MAPIFindNext</b></a> function to locate the message to be replaced and then calls the <b>MAPISaveMail</b> function with the <i>MessageID</i> parameter set with a valid message identifier. The elements of the message identified by <i>MessageID</i> are replaced by the elements in the <a href="smapiref_1iov.htm"><b>MapiMessage</b></a> type pointed to by the <i>Message </i>parameter. </p>
<p>
To create a new message, the caller passes an empty string for <i>MessageID</i>. New messages are saved in the folder appropriate for incoming messages of that class. The new message identifier is returned in <i>MessageID</i> on completion.</p>
<p>
The <i>MessageID</i> parameter must be a variable-length string. The elements of the message identified by <i>MessageID</i> are replaced by the elements in the <i>Message</i> parameter. If <i>MessageID</i> is empty, a new message is created. </p>
<p>
<b>MAPISaveMail</b> takes the recipients and file attachments from the <i>Recips</i> and <i>Files</i> parameters, which should each be the first element of dynamically allocated arrays of their respective types. These arrays are not redimensioned.</p>
<p>
The declaration of this function for the 32-bit Visual Basic runtime is:</p>
<p>
<b>MAPISaveMail(</b></p>
<p>
ByVal <i>Session</i>&amp;, <br>
ByVal <i>UIParam</i>&amp;, <br>
<i>message</i> As MAPIMessage, <br>
<i>Recipient</i>() As MapiRecip, <br>
<i>File</i>() As MapiFile, <br>
ByVal <i>Flags</i>&amp;, <br>
ByVal <i>Reserved</i>&amp;, <br>
<i>MsgID</i>$) <b>As Long</b></p>
<p>&nbsp;</p></body>
</HTML>
