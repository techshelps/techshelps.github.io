<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPersistMessage::HandsOffMessage</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_ipersistmessage_handsoffmessage"></a>IPersistMessage::HandsOffMessage</h2>
<p>
The <b>IPersistMessage::HandsOffMessage</b> method causes the form to release its current message.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter034_24ry.htm"><b>IPersistMessage : IUnknown</b></a>.</p>
<pre><b><code>HRESULT HandsOffMessage();</code></b></pre>
<h4>Parameters</h4>
<p>
None</p>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The message was successfully released.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Forms transition into two Hands Off states: 
<ul>
<li>
Hands Off After Save</li>
<li>
Hands Off From Normal</li>
</ul>
<p>
When a form is in either of these states, it is in the process of being stored permanently.  </p>
<h4>Notes to Implementers</h4>
<p>
When a form viewer calls the <b>IPersistMessage::HandsOffMessage</b> method while your form is in the Normal or No Scribble state, recursively call <b>HandsOffMessage</b> on each message embedded in the current message and <b>IPersistStorage::HandsOffStorage</b> on each OLE object embedded in the current message. Then release the current message and all embedded messages and OLE objects. If your form was in the Normal state, transition to the Hands Off From Normal state. If your form was in the No Scribble state, transition to the Hands Off After Save state. After a successful transition, call the message's <b>IUnknown::Release</b> method and return S_OK.</p>
<p>
When a form viewer calls <b>HandsOffMessage</b> while your form is in either of the Hands Off states, return E_UNEXPECTED. </p>
<p>
For more information about the different states of a form, see <a href="formsvr_1583.htm">Form States</a>. For more information on working with the Hands Off state of storage objects, see the <b>IPersistStorage::HandsOffStorage</b> method documented in the <i>OLE Programmer's Reference.</i> </p>
<p>&nbsp;</p></body>
</HTML>
