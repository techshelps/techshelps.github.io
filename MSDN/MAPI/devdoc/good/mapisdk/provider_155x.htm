<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing a Display Table</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_implementing_a_display_table"></a>Implementing a Display Table</h1>
<p>
A display table is used to show a property sheet — a special dialog box that is made up of one or more tabbed property pages dedicated to displaying and possibly editing one or more properties. Associated with every display table is an <a href="inter022_00tq.htm"><b>IMAPIProp</b></a> interface implementation. The <b>IMAPIProp</b> implementation maintains the property data that is presented in the property sheet. </p>
<p>
The following illustration is an example of a property sheet that displays the properties of a messaging user:</p>
<p>
<img src="images/userprop.gif" border=0></p>
<p>
The rows in a display table represent the controls in the property sheet. Most controls can be associated with properties maintained with the <b>IMAPIProp</b> implementation. When a user changes the value of a modifiable control, the corresponding property is updated. </p>
<p>
The columns in a display table represent properties of the control, such as its position in the property sheet, its type, associated structure, and identifier. For a complete list of required display table columns, see <a href="tables_6rw3.htm">Display Tables</a>.</p>
<p>
MAPI displays a property sheet to the user of a client application by reading property values from the <b>IMAPIProp</b> implementation associated with the display table or from the display table directly. As the user works with the property sheet, changing values in the controls, MAPI calls <a href="inter022_6cxf.htm"><b>IMAPIProp::SetProps</b></a> to save a changed control if the control's DT_SET_IMMEDIATE flag is set. For controls without the DT_SET_IMMEDIATE flag set, changes to properties are saved when the user dismisses the dialog box by clicking the <b>OK</b> or <b>Apply Now</b> button. When either of these buttons or the <b>Cancel</b> button is clicked, MAPI removes the property sheet from view. </p>
<p>
MAPI gains access to your display table either by calling the <a href="inter022_15vd.htm"><b>OpenProperty</b></a> method in the <b>IMAPIProp</b> implementation and requesting the <a href="propa_692d.htm">PR_DETAILS_TABLE</a> property or by inheriting it in a call that you have made to MAPI, such as <a href="inter025_9s1g.htm"><b>IMAPISupport::DoConfigPropsheet</b></a>.</p>
<p>
The first access technique is used when address book providers are asked to show details about messaging users or distribution lists. The following processing occurs:
<ol>
<li>
A client calls the <a href="inter006_5er7.htm"><b>IAddrBook::Details</b></a> method. </li>
<li>
MAPI calls the address book provider's <a href="inter004_422h.htm"><b>IABLogon::OpenEntry</b></a> method to access the messaging user that represents the selected entry. </li>
<li>
MAPI calls the messaging user's <a href="inter022_15vd.htm"><b>IMAPIProp::OpenProperty</b></a> method to retrieve the PR_DETAILS_TABLE property, the display table for the details dialog box. </li>
<li>
MAPI displays the dialog box, handling the user's interaction with the information, and removes it when the user has finished. </li>
</ol>
<p>
A combination of the two access techniques is used when transport providers are asked to show a message options property sheet. The transport provider makes the property interface available to MAPI through a callback function. MAPI then calls the property interface to open the PR_DETAILS_TABLE property.</p>
<p>
Before a message options property sheet can be shown, the transport provider must:
<ol>
<li>
Make the message options properties available by returning an <a href="structyp_7gtd.htm"><b>OPTIONDATA</b></a> structure with information about supported options when MAPI calls its <a href="inter042_8gvn.htm"><b>IXPLogon::RegisterOptions</b></a> method.</li>
<li>
Implement a function that conforms to the <a href="function_5s8b.htm"><b>OPTIONCALLBACK</b></a> prototype. The <b>OPTIONCALLBACK</b> function handles the data stored in the <a href="structyp_7gtd.htm"><b>OPTIONDATA</b></a> structure. </li>
</ol>
<p>
When it is time to show the message options property sheet, the following processing occurs:
<ol>
<li>
The client calls <a href="inter023_9ier.htm"><b>IMAPISession::MessageOptions</b></a>. </li>
<li>
MAPI calls the transport provider's <b>OPTIONCALLBACK</b> function which returns an <b>IMAPIProp</b> interface implementation. The <b>OpenProperty</b> method of this implementation supports the <a href="propa_692d.htm">PR_DETAILS_TABLE</a> property. </li>
<li>
When the <b>OPTIONCALLBACK</b> function returns, MAPI calls <b>OpenProperty</b> to open PR_DETAILS_TABLE and retrieve the display table describing the message options dialog box.</li>
<li>
MAPI displays the dialog box, handling the user's interaction with the information, and removes it when the user has finished. </li>
</ol>
<p>&nbsp;</p></body>
</HTML>
