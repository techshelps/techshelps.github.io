<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPIForm::ShutdownForm</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapiform_shutdownform"></a>IMAPIForm::ShutdownForm</h2>
<p>
The <b>IMAPIForm::ShutdownForm</b> method closes the form.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter014_0dym.htm"><b>IMAPIForm : IUnknown</b></a>.</p>
<pre><code><b>HRESULT Close(
  ULONG</b><i> ulSaveOptions  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulSaveOptions</i></dt>
<dd>
[in] Value that controls how or whether data in the form is saved before the form is closed. One of the following values can be set:
<dl>
<dt>
SAVEOPTS_NOSAVE</dt>
<dd>
Form data should not be saved.</dd>
<dt>
SAVEOPTS_PROMPTSAVE</dt>
<dd>
The user should be prompted to save any changed data in the form.</dd>
<dt>
SAVEOPTS_SAVEIFDIRTY</dt>
<dd>
Form data should be saved if it has changed since the last save. If no user interface is being displayed, the form can optionally switch to using the functionality for the SAVEOPTS_NOSAVE option.
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The form was closed.</dd>
<dt>
E_UNEXPECTED</dt>
<dd>
The form was already closed by a prior call to <b>ShutdownForm</b>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Form viewers call the<b> IMAPIForm::ShutdownForm</b><i> </i>method<i> </i>to close a form.</p>
<h4>Notes to Implementers</h4>
<p>
Perform the following tasks in your implementation of <b>ShutdownForm</b>:
<ol>
<li>
Check that a viewer has not already called <b>ShutdownForm </b>and return E_UNEXPECTED if it has. Although this is unlikely, it is wise to make the check.</li>
<li>
Call your form's <b>IUnknown::AddRef</b> method so that storage for your form and any internal data structures remain available until processing is finished. </li>
<li>
Determine whether or not there are any unsaved changes to the form's data. Save unsaved data according to how the <i>ulSaveOptions</i> parameter is set by calling your viewer's <a href="inter020_9hgl.htm"><b>SaveMessage</b></a> method.</li>
<li>
Destroy your form's user interface window.</li>
<li>
Release your form's message and message site objects by calling their <b>IUnknown::Release</b> methods.</li>
<li>
Notify all registered viewers of the pending shutdown by calling their <a href="inter027_490u.htm"><b>IMAPIViewAdviseSink::OnShutdown</b></a> methods.</li>
<li>
Call <a href="inter028_0cbv.htm"><b>IMAPIViewContext::SetAdviseSink</b></a> to cancel your form's registration for notification by setting the advise sink pointer to NULL.</li>
<li>
Call the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> function to free the memory for your form's properties.</li>
<li>
Call your form's <b>IUnknown::Release</b> method, matching the <b>AddRef</b> call made in step 2.</li>
<li>
Return S_OK.</li>
</ol>
<p>
<b>Note</b>  After these actions have been completed, the only valid methods on the form object that may be called are those from the <b>IUnknown</b> interface.</p>
<h4>Notes to Callers</h4>
<p>
When <b>ShutdownForm</b> returns, regardless of whether it returns an error, release the form by calling its <b>IUnknown::Release</b> method. You can safely ignore any errors returned by <b>ShutdownForm</b>.</p>
<h4>See Also</h4>
<p>
<a href="inter027_490u.htm"><b>IMAPIViewAdviseSink::OnShutdown</b></a></p>
<p>&nbsp;</p></body>
</HTML>
