<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Inbox and Outbox Folders in Message Stores</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_mapi1book_inbox_and_outbox_folders_in_message_stores"></a>Inbox and Outbox Folders in Message Stores</h3>
<p>
In order to be the default message store, a message store provider must implement an Inbox and an Outbox folder. They are typically stored within the IPM subtree of a message store. These folders are special in that they are designated as the folders that messages are delivered to and sent from, but no special functionality is required of them. Sending and receiving messages happens by way of defined call sequences between client applications, the MAPI spooler, and the message store provider. The Inbox and Outbox folders are simply folders that are used to hold messages during those call sequences. The important point is not that the folders are special, or even that they are named Inbox and Outbox; the important point is that the message store provider uses them as part of its support for sending and receiving messages.</p>
<p>
To support receiving messages, the message store provider must implement the <a href="inter031_2u05.htm"><b>IMsgStore::GetReceiveFolderTable</b></a> and <a href="inter031_7acy.htm"><b>IMsgStore::GetReceiveFolder</b></a> methods. See <a href="storearc_3apf.htm">Receiving Messages with Message Store Providers</a> for details.</p>
<p>
To support sending messages, the message store provider must support the <a href="inter031_9gkl.htm"><b>IMsgStore::GetOutgoingQueue</b></a> method in addition to the other methods used by the MAPI spooler during the message sending process. A message store's outgoing queue does not have to correspond to an actual folder anywhere in the message store's folder tree. However, it is customary for a message store provider to show the contents of the outgoing message queue in the Outbox folder, if there is one. Doing so gives client applications a convenient way to indicate the status of messages that the user has sent, since an Outbox folder can be displayed along with all the other folders in a message store. See <a href="storearc_88oj.htm">Sending Messages with Message Store Providers</a> for details.</p>
<p>&nbsp;</p></body>
</HTML>
