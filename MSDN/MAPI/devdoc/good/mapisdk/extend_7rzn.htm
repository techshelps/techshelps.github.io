<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Status Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_status_objects"></a>Status Objects</h1>
<p>
Status objects report information about a MAPI resource: a service provider, the MAPI subsystem, the MAPI spooler, or the address book. </p>
<p>
There is a status object supplying information about each individual service provider in the current profile. MAPI is responsible for implementing status objects for the subsystem, the MAPI spooler, and the address book. The subsystem status object supplies global information. The MAPI spooler status object supplies information about the status of all transport providers currently open. The status object for the integrated address book supplies the status of all address book providers currently operating. </p>
<p>
Every status object is included in the <a href="glossary_4s37.htm#_mapi1book_gly_status_table">status table</a>, a table maintained by MAPI that provides clients with all of the status information for the session. Clients can access a particular status object either through the table or, for a service provider, through its logon object. For example, to access an address book provider's status object, a client can call <b>IABLogon::OpenStatusEntry</b>.</p>
<p>
Clients can use status objects to:
<ul>
<li>
Learn about the state of a session.</li>
<li>
Monitor a service provider.</li>
<li>
Control message transmission.</li>
<li>
View or change a resource's configuration and status.</li>
</ul>
<p>
Every status object implements the <a href="inter024_22i8.htm"><b>IMAPIStatus</b></a> interface. However, not every status object fully supports every <b>IMAPIStatus</b> method. Because there is variation in the methods that are supported by a status object, clients need to learn about a particular status object before they can use it. Status objects are required to publish information about their features in the following three properties:</p>
<p class=indent1>
<a href="propb_3lkj.htm">PR_RESOURCE_METHODS</a></p>
<p class=indent1>
<a href="propb_0oh1.htm">PR_RESOURCE_TYPE</a></p>
<p class=indent1>
<a href="propb_4u5v.htm">PR_RESOURCE FLAGS</a></p>
<p>
For more information about the status table, see <a href="tables_1rad.htm">Status Table</a>. For more information about implementing a status object, see <a href="provider_1gz8.htm">Implementing a Status Object</a>. For more information about using a status object, see <a href="consider_1koj.htm">Using the Status Table and Status Objects</a>. </p>
<p>&nbsp;</p></body>
</HTML>
