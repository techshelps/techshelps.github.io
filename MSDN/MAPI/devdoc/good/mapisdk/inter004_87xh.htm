<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IABLogon::Advise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_iablogon_advise"></a>IABLogon::Advise</h2>
<p>
The <b>IABLogon::Advise</b> method registers to receive notification of specified events affecting a container, messaging user, or distribution list.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter004_8ofi.htm"><b>IABLogon : IUnknown</b></a>.</p>
<pre><code><b>HRESULT Advise(
  ULONG</b><i> cbEntryID</i><b>,</b>                 
<b>  LPENTRYID</b><i> lpEntryID</i><b>,</b>             
<b>  ULONG</b><i> ulEventMask</i><b>,</b>               
<b>  LPMAPIADVISESINK</b><i> lpAdviseSink</i><b>,</b>   
<b>  ULONG FAR *</b><i> lpulConnection       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cbEntryID</i></dt>
<dd>
[in] Count of bytes in the entry identifier pointed to by the <i>lpEntryID</i> parameter.</dd>
<dt>
<i>lpEntryID</i></dt>
<dd>
[in] Pointer to the entry identifier of the object about which notifications should be generated.</dd>
<dt>
<i>ulEventMask</i></dt>
<dd>
[in] A mask of values indicating the types of notification events that the caller is interested in and should be included in the registration. There is a corresponding <a href="structyp_5dbi.htm"><b>NOTIFICATION</b></a> structure associated with each type of event that holds information about the event.
<p>
The following table lists the valid values for the <i>ulEventMask</i> parameter and the structures associated with each value.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=36%>Notification event type</th>
<th align=left width=64%>Corresponding NOTIFICATION structure</th>
</tr>
<tr valign=top>
<td width=36%><pre><code>fnevCriticalError</code></pre>
</td>
<td width=64%><a href="structyp_9epa.htm"><b>ERROR_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=36%><pre><code>fnevObjectCreated</code></pre>
</td>
<td width=64%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=36%><pre><code>fnevObjectDeleted</code></pre>
</td>
<td width=64%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=36%><pre><code>fnevObjectModified</code></pre>
</td>
<td width=64%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=36%><pre><code>fnevObjectCopied</code></pre>
</td>
<td width=64%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=36%><pre><code>fnevObjectMoved</code></pre>
</td>
<td width=64%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
</table><br>

</dd>
<dt>
<i>lpAdviseSink</i></dt>
<dd>
[in] Pointer to an advise sink object to receive the subsequent notifications.</dd>
<dt>
<i>lpulConnection</i></dt>
<dd>
[out] Pointer to a nonzero value that represents the notification registration.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The notification registration was successful.</dd>
<dt>
MAPI_E_INVALID_ENTRYID</dt>
<dd>
The entry identifier passed in <i>lpEntryID</i> is not in the appropriate format.</dd>
<dt>
MAPI_E_NO_SUPPORT</dt>
<dd>
The address book provider does not support notification, possibly because it does not allow changes to be made to its objects.</dd>
<dt>
MAPI_E_UNKNOWN_ENTRYID</dt>
<dd>
The address book provider cannot handle the entry identifier passed in <i>lpEntryID</i>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Address book providers implement the <b>IABLogon::Advise</b> method to register the caller to be notified when a change occurs to an object in one of their containers. Callers can register for notifications on messaging users, distribution lists, or entire containers.</p>
<p>
Clients typically call <a href="inter006_58v9.htm"><b>IAddrBook::Advise</b></a> to register for address book notifications. MAPI then calls the <b>IABLogon::Advise</b> method of the address book provider that is responsible for the object represented by the entry identifier in <i>lpEntryID</i>.</p>
<p>
When a change occurs to the indicated object of the type represented in <i>ulEventMask</i>, a call is made to the <b>OnNotify</b> method of the advise sink pointed to by <i>lpAdviseSink</i>. Data passed in the notification structure to the <b>OnNotify </b>routine describes the event.</p>
<h4>Notes to Implementers</h4>
<p>
You can support notification with or without help from MAPI. MAPI has three support object methods for helping service providers implement notification:</p>
<p class=indent1>
<a href="inter025_56xx.htm"><b>IMAPISupport::Subscribe</b></a></p>
<p class=indent1>
<a href="inter025_3rhh.htm"><b>IMAPISupport::Unsubscribe</b></a></p>
<p class=indent1>
<a href="inter025_8fax.htm"><b>IMAPISupport::Notify</b></a></p>
<p>
If you elect to use the MAPI support methods, call <b>Subscribe</b> when your <b>Advise</b> method is called and release the <i>lpAdviseSink</i> pointer.</p>
<p>
If you elect to support notification yourself, call the <b>IUnknown::AddRef</b> method of the advise sink represented by the <i>lpAdviseSink</i> parameter to keep a copy of this pointer. Maintain this copy until your <a href="inter004_7up1.htm"><b>IABLogon::Unadvise</b></a> method is called to cancel the registration.</p>
<p>
Regardless of how you support notification, assign a nonzero connection number to the notification registration and return it in the <i>lpulConnection</i> parameter. Do not release this connection number until <b>Unadvise</b> has been called.</p>
<h4>Notes to Callers</h4>
<p>
The advise sink pointer that you pass in the <i>lpAdviseSink</i> parameter to <b>Advise</b> can point to an object that you have created or that MAPI has created through the <a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a> function. You might want to use <b>HrThisThreadAdviseSink</b> if you support multiple threads of execution and want to ensure that subsequent calls to your <b>OnNotify</b> method occur at an appropriate time on an appropriate thread.</p>
<p>
Be prepared for your advise sink object to be released any time after your call to <b>Advise</b> and before your call to<b> Unadvise</b>. MAPI recommends that you release your advise sink object after <b>Advise</b> returns, unless you have a specific long-term use for it.</p>
<p>
For more information on the notification process, see <a href="extend_8fvt.htm">Event Notification in MAPI</a>. For information about using the <b>IMAPISupport</b> methods to support notification, see <a href="provider_2ii6.htm">Supporting Event Notification</a>. For more information about multithreading and MAPI, see <a href="extend_78x5.htm">Threading in MAPI</a>.</p>
<h4>See Also</h4>
<p>
<a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a>, <a href="inter004_7up1.htm"><b>IABLogon::Unadvise</b></a>, <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a>, <a href="structyp_5dbi.htm"><b>NOTIFICATION</b></a></p>
<p>&nbsp;</p></body>
</HTML>
