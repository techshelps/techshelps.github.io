<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Receiving Messages with Message Store Providers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_receiving_messages_with_message_store_providers"></a>Receiving Messages with Message Store Providers</h2>
<p>
Message store providers do not have to support incoming message submissions; that is, the ability for transport providers and the MAPI spooler to use the message store provider as a delivery point for messages. However, if your message store provider does not support incoming message submissions, it cannot be used as the default message store.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To support incoming message submissions, your message store provider must</h5>
<ul>
<li>
Support the <a href="inter031_2u05.htm"><b>IMsgStore::GetReceiveFolderTable</b></a> and <a href="inter031_7acy.htm"><b>IMsgStore::GetReceiveFolder</b></a> methods so client applications can find incoming messages.</li>
<li>
Support the <a href="inter031_0x7w.htm"><b>IMsgStore::NotifyNewMail</b></a> method so that the MAPI spooler can inform the message store provider that a new message has arrived.</li>
<li>
Implement notifications so that clients can register for new message notification. Strictly speaking, notifications are optional, but they are strongly recommended.</li>
</ul>
<p>
The sequence of method calls that occurs when an incoming message is delivered to a message store is:
<ol>
<li>
The MAPI spooler calls <a href="inter031_3se1.htm"><b>IMsgStore::OpenEntry</b></a> with the Inbox's <a href="structyp_05gk.htm"><b>EntryID</b></a> to get an <b>IMAPIFolder</b> interface.</li>
<li>
The MAPI spooler calls <a href="inter013_7wv9.htm"><b>IMAPIFolder::CreateMessage</b></a> to get a new message object.</li>
<li>
The MAPI spooler passes the message object to the transport provider.</li>
<li>
The transport provider fills in the message's properties with data from the underlying messaging system and calls the message object's <a href="inter022_5rqr.htm"><b>IMAPIProp::SaveChanges</b></a> method.</li>
<li>
The MAPI spooler calls any registered hook providers. The message may be modified, moved to a different folder, deleted, and so on.</li>
<li>
The message store provider uses its notification method to inform registered clients that a new message has arrived.</li>
<li>
The MAPI spooler calls the message store's <a href="inter031_0x7w.htm"><b>IMsgStore::NotifyNewMail</b></a> method.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
