<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMsgStore::SetReceiveFolder</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imsgstore_setreceivefolder"></a>IMsgStore::SetReceiveFolder</h2>
<p>
The <b>IMsgStore::SetReceiveFolder</b> method establishes a folder as the destination for incoming messages of a particular message class.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter031_1jg0.htm"><b>IMsgStore : IMAPIProp</b></a>.</p>
<pre><code><b>HRESULT SetReceiveFolder(
  LPTSTR</b><i> lpszMessageClass</i><b>,</b>   
<b>  ULONG</b><i> ulFlags</i><b>,</b>             
<b>  ULONG</b><i> cbEntryID</i><b>,</b>           
<b>  LPENTRYID</b><i> lpEntryID        </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszMessageClass</i></dt>
<dd>
[in] Pointer to the message class that is to be associated with the new receive folder. If the <i>lpszMessageClass</i> parameter is set to NULL or an empty string, <b>SetReceiveFolder</b> sets the default receive folder for the message store.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls the type of the text in the passed-in strings. The following flag can be set:
<dl>
<dt>
MAPI_UNICODE</dt>
<dd>
The message class string is in Unicode format. If the MAPI_UNICODE flag is not set, the message class string is in ANSI format.</dd>
</dl>
</dd>
<dt>
<i>cbEntryID</i></dt>
<dd>
[in] Count of bytes in the entry identifier pointed to by the <i>lpEntryID</i> parameter.</dd>
<dt>
<i>lpEntryID</i></dt>
<dd>
[in] Pointer to the entry identifier of the folder to establish as the receive folder. If the <i>lpEntryID</i> parameter is set to NULL, <b>SetReceiveFolder</b> replaces the current receive folder with the message store's default.
</dd>
</dl>
<h4>Return Value</h4>
<dl>
<dt>
S_OK</dt>
<dd>
A receive folder was successfully established.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMsgStore::SetReceiveFolder</b> method sets or changes the receive folder for a particular message class. With <b>SetReceiveFolder</b>, a client can, by using successive calls, specify a different receive folder for each message class defined or specify that incoming messages for multiple message classes all go to the same folder. A client can, for example, have its own class of messages arrive in its own folder. For instance, a fax application can designate a folder where the store provider places incoming faxes and one where the provider places outgoing faxes.</p>
<p>
If an error occurs while calling <b>SetReceiveFolder</b>, the receive folder setting remains unchanged. </p>
<p>
If <b>SetReceiveFolder</b> changes the receive folder setting with <i>lpEntryID</i> set to NULL, indicating the default receive folder should be set, <b>SetReceiveFolder</b> returns S_OK even if there was no existing setting for the indicated message class.</p>
<p>&nbsp;</p></body>
</HTML>
