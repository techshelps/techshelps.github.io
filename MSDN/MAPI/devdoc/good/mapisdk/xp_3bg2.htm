<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Releasing the Transport Provider</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_releasing_the_transport_provider"></a>Releasing the Transport Provider</h2>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;When MAPI or the MAPI spooler finishes using a transport logon object</h5>
<ol>
<li>
MAPI or the MAPI spooler calls the transport provider's <a href="inter042_4spy.htm"><b>IXPLogon::TransportLogoff</b></a><b> </b>method.</li>
<li>
The transport provider invalidates the status object by calling the <a href="inter025_8d2c.htm"><b>IMAPISupport::MakeInvalid</b></a> method. Whether the transport provider invalidates message objects that are being sent or received at the time of the <b>TransportLogoff</b> call depends on the flags that were passed to <b>TransportLogoff</b>.</li>
<li>
The transport provider calls the support object's <b>Release</b> method to remove the provider's row from the status table and remove from internal tables any Unique Identifiers (UIDs) that were set with the <a href="inter025_91no.htm"><b>IMAPISupport::SetProviderUID</b></a><b> </b>method. It decrements the count of known logon objects active on this provider object. If the count reaches zero, MAPI calls the <a href="inter043_4p0u.htm"><b>IXPProvider::Shutdown</b></a> method and <b>Release</b> on the provider object. If this was the last known provider object using this DLL on this process, MAPI calls <b>FreeLibrary</b> on the DLL at some later time. Memory for the MAPI support object is freed and the support object <b>Release</b> method returns.</li>
<li>
The <b>TransportLogoff</b> method returns S_OK.</li>
<li>
MAPI or the MAPI spooler calls <b>Release</b> on the transport provider's logon object. The memory for the object is discarded.</li>
<li>
MAPI or the MAPI spooler calls <b>FreeLibrary</b> on the provider DLL.</li>
</ol>
<p>
For robustness, the logon and provider objects should be able to handle final <b>Release</b> calls on themselves without first having their <b>TransportLogoff</b> or <b>Shutdown</b> methods called. If <b>Release</b> is called in such cases, transport providers should treat the calls as if <b>TransportLogoff </b>or <b>Shutdown</b> had been called with a zero argument followed by <b>Release</b>.</p>
<p>&nbsp;</p></body>
</HTML>
