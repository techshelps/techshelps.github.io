<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Objects and Interfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_objects_and_interfaces"></a>Objects and Interfaces</h1>
<p>
A MAPI object is a C++ object class or C data structure inherited from one or more MAPI interfaces, or collections of related functions. These collections of related functions are known to C++ developers as pure virtual functions. For a pure virtual function, MAPI supplies only the function prototype, not an implementation. It is expected that a client application, a service provider, or MAPI will provide this implementation by creating an object class inherited from the interface and conforming to the function descriptions documented in the <i>MAPI Programmer's Reference</i>. A MAPI interface can only be instantiated through an inherited class.</p>
<p>
There are many different MAPI objects, each object inheriting from an interface that is ultimately inherited from <b>IUnknown</b>. <b>IUnknown</b> is the OLE Component Object Model (COM) base interface. It provides MAPI objects with a standard mechanism for communication and control. The Component Object Model dictates how object implementers handle issues such as memory management, parameter management, and multithreading. By conforming to this model, an object implementer adheres to a contract as specified by the interfaces included in the object. </p>
<p>
Many MAPI interfaces are inherited directly from <b>IUnknown</b> while others are inherited indirectly through one of two other base interfaces: <a href="inter022_00tq.htm"><b>IMAPIProp</b></a> for property management and <a href="inter011_7u0g.htm"><b>IMAPIContainer</b></a> for folder and address book access. Base interfaces are never implemented as separate, standalone objects; they are always implemented as part of other objects, objects that implement derived interfaces. </p>
<p>
MAPI defines many types of objects, each implemented by one or more MAPI components. Objects implemented by clients are used by MAPI, by service providers, and by custom form components. Objects implemented by service providers are typically used by MAPI and by clients. Objects implemented by form library providers and form servers are used by other form components and by clients. </p>
<p>&nbsp;</p></body>
</HTML>
