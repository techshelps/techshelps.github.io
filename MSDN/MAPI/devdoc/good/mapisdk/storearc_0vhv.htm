<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Generating and Using Entry Identifiers in Message Store Providers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_generating_and_using_entry_identifiers_in_message_store_providers"></a>Generating and Using Entry Identifiers in Message Store Providers</h2>
<p>
When a new folder or message is created in a message store, the message store provider has to assign that object an entry identifier so that client applications can refer to it. This brings up the option of reusing the defunct long-term entry identifiers of deleted objects or not. There is no requirement one way or the other for message store providers, although if it is feasable, it is better if a message store provider always generates new long-term entry identifiers for new objects rather than reusing old ones. It is fine to reuse short-term entry identifiers when the objects they refer to are deleted.</p>
<p>
The reason for this is that clients can cache entry identifiers, sometimes for long periods of time. If that happens and the message store provider does reuse entry identifiers, then it is possible for the entry identifier to refer to a different object when the client opens the entry identifier than when it first obtained the entry identifier. If the message store provider does not reuse entry identifiers — or at least uses an entry identifier generation scheme that does not repeat for a very long time — this problem cannot occur.</p>
<p>
Similarly, it is good for message store providers to attempt to preserve entry identifiers for folders and messages when they are moved within the message store. If the message store provider can do that, references to objects in the store will not become invalid when the object is moved to a different location within the store.</p>
<p>&nbsp;</p></body>
</HTML>
