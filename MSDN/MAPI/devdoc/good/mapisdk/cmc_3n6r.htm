<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Releasing Memory with CMC</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_releasing_memory_with_cmc"></a>Releasing Memory with CMC</h1>
<p>
In some circumstances, you will have to release memory that has been allocated by CMC. CMC provides a single function, <a href="cmcref_5z51.htm"><b>cmc_free</b></a>, for releasing memory that it has allocated. This memory is typically the result of a CMC function call. For example, the <b>cmc_look_up</b> function allocates an array of <b>CMC_recipient</b> structures to hold the results of an address book search. You are responsible for calling the <b>cmc_free</b> function on that array after it is no longer needed. To free memory allocated by CMC, pass a pointer to the memory to the <b>cmc_free</b> function.</p>
<p>
A client should not try to free the memory itself. The memory is not guaranteed to be in a single contiguous block, so one call to an underlying memory management function — such as the C run time library function <b>malloc</b> — is not guaranteed to free all of the memory that CMC has allocated. A memory leak will result if you do this. The <b>cmc_free</b> function will make all the necessary memory management calls to properly free the memory CMC has allocated.</p>
<p>&nbsp;</p></body>
</HTML>
