<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Get and Set Multiple Properties</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_get_and_set_multiple_properties"></a>Get and Set Multiple Properties</h2>
<p>
By getting and setting as many properties as possible with the least number of calls, remote activity is curtailed and the overhead involved with each property is reduced. Although service providers try to collect properties before making a remote procedure call for retrieval or modification, you can optimize this effort by requesting multiple properties to begin with.</p>
<p>
For example, if you work with routing lists that describe future recipients with named properties belonging to particular property sets, process all of the recipients with two calls, one to<b> <a href="inter022_49f7.htm">IMAPIProp::GetIDsFromNames</a></b> to retrieve the identifiers for all of the recipient properties and the other to <a href="inter022_44c3.htm"><b>IMAPIProp::GetProps</b></a> to retrieve all of the values. The alternative, making a call to <b>GetIDsFromNames</b> followed by a call to <b>GetProps</b> for each recipient, is much less efficient.</p>
<p>&nbsp;</p></body>
</HTML>
