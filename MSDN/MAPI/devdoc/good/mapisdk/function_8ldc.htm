<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateIProp</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_createiprop"></a>CreateIProp</h2>
<p>
The <b>CreateIProp </b>function creates a property data object, that is, an <a href="inter037_5prk.htm"><b>IPropData</b></a> object. </p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIUTIL.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Client applications and service providers </td>
</tr>
</table><br>
<pre><code><b>SCODE CreateIProp(
  LPCIID</b><i> lpInterface</i><b>,</b>                  
<b>  ALLOCATEBUFFER FAR *</b><i> lpAllocateBuffer</i><b>,</b>   
<b>  ALLOCATEMORE FAR *</b><i> lpAllocateMore</i><b>,</b>   
<b>  FREEBUFFER FAR *</b><i> lpFreeBuffer</i><b>,</b>       
<b>  LPVOID</b><i> lpvReserved</i><b>,</b>                  
<b>  LPPROPDATA FAR *</b><i> lppPropData</i>         
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>lpInterface </i></dt>
<dd>
[in] Pointer to an interface identifier (IID) for the property data object. The valid interface identifier is IID_IMAPIPropData. Passing NULL in the <i>lpInterface </i>parameter also causes the property data object returned in the <i>lppPropData</i> parameter to be cast to the standard interface for a property data object. </dd>
<dt>
<i>lpAllocateBuffer </i></dt>
<dd>
[in] Pointer to the <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a> function, to be used to allocate memory. </dd>
<dt>
<i>lpAllocateMore </i></dt>
<dd>
[in] Pointer to the <a href="function_11wl.htm"><b>MAPIAllocateMore</b></a> function, to be used to allocate additional memory where required. </dd>
<dt>
<i>lpFreeBuffer </i></dt>
<dd>
[in] Pointer to the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> function, to be used to free memory. </dd>
<dt>
<i>lpvReserved </i></dt>
<dd>
Reserved; must be zero. </dd>
<dt>
<i>lppPropData </i></dt>
<dd>
[out] Pointer to a pointer to the returned property data object. 
</dd>
</dl>
<h4>Return Values </h4>
<dl>
<dt>
S_OK </dt>
<dd>
The call succeeded and has returned the expected value or values. </dd>
<dt>
MAPI_E_INTERFACE_NOT_SUPPORTED </dt>
<dd>
The requested interface is not supported for this object. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
The <i>lpAllocateBuffer</i>, <i>lpAllocateMore</i>, and <i>lpFreeBuffer </i>input parameters point to the <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a>, <a href="function_11wl.htm"><b>MAPIAllocateMore</b></a>, and <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> functions, respectively. A client application calling <b>CreateIProp</b> passes in pointers to the MAPI functions just named; a service provider passes the pointers to these functions it received in its initialization call or retrieved with a call to the <a href="inter025_8v5f.htm"><b>IMAPISupport::GetMemAllocRoutines</b></a> method. </p>
<h4>See Also</h4>
<p>
<a href="groups_8po3.htm">Properties Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
