<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting Multiple Client Access to Messages in Message Stores</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_mapi1book_supporting_multiple_client_access_to_messages_in_message_stores"></a>Supporting Multiple Client Access to Messages in Message Stores</h3>
<p>
It is possible for multiple client applications to open a given message simultaneously. Message store providers do not have to follow any particular rules for governing such access. However, if the client applications modify the message and save their changes, the store provider should follow certain rules:
<ul>
<li>
Allow the first call to the <a href="inter022_5rqr.htm"><b>IMAPIProp::SaveChanges</b></a> method to proceed as if it were the only client that has the message open.</li>
<li>
On the subsequent <b>SaveChanges</b> calls by other clients, the message store provider should ignore the changes and return MAPI_E_OBJECT_CHANGED.</li>
<li>
Allow client applications to respond to a MAPI_E_OBJECT_CHANGED return code by calling <b>SaveChanges</b> again with the FORCE_SAVE flag. If a client application does this, the message store provider should replace the previous changes with the new ones.</li>
</ul>
<p>
Alternatively, the message store provider can detect the conflict and present an interface which allows the user to choose whether to keep the original message, overwrite the original message with the new changes, or save the new changes to another location.</p>
<p>&nbsp;</p></body>
</HTML>
