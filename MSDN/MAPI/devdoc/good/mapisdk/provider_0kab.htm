<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BuildDisplayTable and Related Structures</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_builddisplaytable_and_related_structures"></a>BuildDisplayTable and Related Structures</h2>
<p>
Creating a display table is similar to writing a program with a scripting language. You can create a display table either by calling <a href="function_5wpx.htm"><b>BuildDisplayTable</b></a> or writing custom code to populate the rows and columns of the table. MAPI recommends the <b>BuildDisplayTable</b> technique because it is simpler.</p>
<p>
Before you can call <b>BuildDisplayTable</b> to prompt MAPI to create a display table, there is a hierarchy of structures that you must build. The top level structure, the <a href="structyp_7zxh.htm"><b>DTPAGE</b></a> structure, describes a single tabbed property page. Within every <b>DTPAGE</b> structure is a <a href="structyp_9sh8.htm"><b>DTCTL</b></a> structure describing a single control, such as an edit box or a radio button. Each <b>DTCTL</b> structure contains a structure that is specific to the type of control. For example, if the <b>DTCTL</b> structure is describing an edit box control, it will contain a <b>DTBLEDIT</b> structure. The <b>DTCTL</b> structure for a radio button contains a <b>DTBLRADIOBUTTON</b> structure. </p>
<p>
These structures relate directly to <b>BuildDisplayTable</b>; they have no meaning outside the context of this function. When you call <b>BuildDisplayTable</b>, you pass one or more <b>DTPAGE</b> structures as input parameters. The <b>DTPAGE</b> structures contain an array of <b>DTCTL</b> structures and a count of the number of <b>DTCTL</b> structures in the array. There is one structure for every control to appear in the dialog box. <b>DTPAGE</b> structures also have a character string that represents the name of a corresponding help file and dialog resource.</p>
<p>
Each <b>DTCTL</b> structure in a <b>DTPAGE</b> structure contains data that is used to set properties for the control:
<ul>
<li>
Control type for setting <a href="propa_2w9x.htm">PR_CONTROL_TYPE</a></li>
<li>
Control flags for setting <a href="propa_6pir.htm">PR_CONTROL_FLAGS</a></li>
<li>
Notification data for setting <a href="propa_7wo4.htm">PR_CONTROL_ID</a></li>
<li>
Control structure for setting <a href="propa_4vvp.htm">PR_CONTROL_STRUCTURE</a></li>
</ul>
<p>
<b>DTCTL</b> structures also contain a resource identifier and, for edit and combo box controls, a character filter. </p>
<p>
The control structure member of a <b>DTCTL</b> structure describes the data that is unique for the type of control. MAPI defines a different structure for each control type. For example, the data of an edit control is represented by a <b>DTBLEDIT</b> structure; the data of a list box by a <b>DTBLLBX</b> structure.</p>
<p>
The relationship between these three types of display table structures is illustrated in the following diagram. The dialog box described by this display table has two controls: a label and an edit control. The <b>DTBLLBX</b> structure has a label offset member, as do several of the control structures, that describes where the character string for the label begins. Label character strings are typically placed in memory immediately following the structure.</p>
<p>
<img src="images/dtstruct.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
