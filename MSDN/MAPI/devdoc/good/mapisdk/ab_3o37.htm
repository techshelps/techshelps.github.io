<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening Address Book Entries</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_opening_address_book_entries"></a>Opening Address Book Entries</h2>
<p>
When a client or provider has requested that one of your objects be opened, MAPI calls your provider's<b> <a href="inter004_422h.htm">IABLogon::OpenEntry</a></b> method. MAPI determines that the entry identifier representing the target object belongs to your provider by examining the <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> portion of the entry identifier and matching it to the <b>MAPIUID</b> that your provider registered in the call to <b>IMAPISupport::SetProviderUID</b>. MAPI then calls your <b>OpenEntry</b> method. Your provider must respond by retrieving the corresponding object — a container, distribution list, or messaging user.</p>
<p>
A NULL entry identifier indicates a request to open the address book provider's root container. Clients open the root container to access its hierarchy table and its recipients. Address book providers that only supply templates for creating one-off recipients do not support the <b>OpenEntry</b> call for the root container.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To implement IABLogon::OpenEntry</h5>
<ol>
<li>
Check that the entry identifier is a valid identifier that your provider supports. If it is not a valid entry identifier, return MAPI_E_INVALID_ENTRYID. </li>
<li>
Check the flag that is passed in with the <i>ulFlags</i> parameter. If MAPI has passed in MAPI_MODIFY and your provider does not allow its objects to be modified, fail and return the MAPI_E_ACCESS_DENIED error value.</li>
<li>
Check that the interface requested in the <i>lpInterface</i> parameter is valid for the type of object your provider has been asked to open. If an invalid parameter has been passed in, fail and return the MAPI_E_INTERFACE_NOT_SUPPORTED error value.</li>
<li>
If the <i>cbEntryID</i> parameter is zero, this is a request to open your provider's root container. Create the root container and return a pointer to its <b>IABContainer</b> interface implementation.</li>
<li>
If your provider implements several logon objects, each with its own registered <b>MAPIUID</b>, map the <b>MAPIUID</b> contained in the entry identifier with the appropriate logon object. </li>
<li>
Determine which type of object the entry identifier represents: a messaging user, distribution list, or container belonging to your provider or a one-off messaging user or distribution list so that the appropriate value can be set for the <i>lpulObjectType</i> parameter.</li>
<li>
Create the object of the appropriate type and set the following basic properties:<p class=indent1>
<a href="propa_7s6d.htm">PR_DISPLAY_TYPE</a></p>
<p class=indent1>
<a href="propa_8cv8.htm">PR_ENTRYID</a></p>
<p class=indent1>
<a href="propb_0okl.htm">PR_OBJECT_TYPE</a></p>
<p class=indent1>
<a href="propa_4gkl.htm">PR_ADDRTYPE</a></p>
<p>
Calculate <a href="propa_2t9v.htm">PR_EMAIL_ADDRESS</a> and <a href="propa_1yjp.htm">PR_DISPLAY_NAME</a> from information in the entry identifier. 
</li>
<li>
Return a pointer to the interface implementation for the object. </li>
</ol>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
