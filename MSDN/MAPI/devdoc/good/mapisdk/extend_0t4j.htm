<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Constructing Entry Identifiers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_constructing_entry_identifiers"></a>Constructing Entry Identifiers</h2>
<p>
Entry identifiers are constructed with the <a href="structyp_05gk.htm"><b>ENTRYID</b></a> structure. The <b>ENTRYID</b> structure is made up of a flag that describes the attributes of the entry identifier and the actual entry identifier. The <b>ENTRYID</b> structure is defined as follows:</p>
<pre><code>typedef struct  
{
    BYTE        abFlags[4];
    BYTE        ab[MAPI_DIM];
}  ENTRYID, FAR *LPENTRYID;
 </code></pre>
<p>
MAPI_DIM is a constant that is defined in the MAPIDEFS.H header file. </p>
<p>
The first byte of the 4-byte <b>abFlags</b> member describes the type and use of the entry identifier and can have the following values:</p>
<p class=indent1>
MAPI_NOTRECIP</p>
<p class=indent1>
MAPI_NOTRESERVED</p>
<p class=indent1>
MAPI_NOW</p>
<p class=indent1>
MAPI_SHORTTERM</p>
<p class=indent1>
MAPI_THISSESSION</p>
<p>
MAPI_NOTRESERVED, when set, indicates that the entry identifier can be used by other service providers for other objects. The MAPI_NOTRECIP value indicates whether or not the entry identifier can be applied to a message recipient. When MAPI_NOW is set, the entry identifier can only be used at the present time, and when MAPI_THIS_SESSION is set, the entry identifier can only be used for the current session. MAPI_SHORTTERM identifies the entry identifier as a short-term identifier.</p>
<p>
Clients expect to be able to check this first <b>abFlags</b> byte to determine the entry identifier's longevity. A zero in <b>abFlags[0]</b> indicates a long-term identifier and a nonzero indicates a short-term identifier. The last three bytes of the <b>abFlags</b> member must be zero. </p>
<p>
The <b>ab</b> member of entry identifiers created by address book and message store providers is made up of two pieces: a 16-byte <b>MAPIUID</b> that identifies the service provider and a piece to identify the object. <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> is a structure that contains a globally unique identifier, or <b>GUID</b>. A <b>GUID</b> is a byte order independent identifier which can be created using the Microsoft utility UUIDGEN.EXE. </p>
<p>
A service provider registers its <b>MAPIUID</b> structure with MAPI during the logon process in a call to <a href="inter025_91no.htm"><b>IMAPISupport::SetProviderUID</b></a>. When a client calls an <b>OpenEntry</b> method to access an object, MAPI uses the <b>MAPIUID</b> structure to determine which service provider can provide that access. Service providers should use the same <b>MAPIUID</b> structure for all versions of their DLL. This enables clients with the newer version to respond to messages sent and saved with the older version. Service providers that are using a profile that must work on two different processors, each with a different byte order, use a <b>MAPIUID</b> structure to differentiate between objects. </p>
<p>
The rest of the <b>ab</b> member after the 16-byte <b>MAPIUID</b> contains service provider-specific binary data for identifying particular objects. There is no fixed size for this portion of the entry identifier. It can be any size, within reason. </p>
<p>
A service provider typically includes the following in this part of its entry identifiers:
<ul>
<li>
Version information<p>
Because it is common for a service provider to change the format of its entry identifiers from version to version, storing version information makes it possible to quickly determine how to decipher any entry identifier.
</li>
<li>
Location information<p>
Location information is data that gives a service provider an indicator of how to locate the object represented by the entry identifier. For example, a service provider can store the disk offset for the last place in a data file that the object was stored. Because this type of information can change over time, service providers should provide multiple ways for locating objects in their entry identifiers. 
</li>
</ul>
<p>
Service providers are encouraged not to recycle their entry identifiers, but they can. If it is necessary to reuse an entry identifier, service providers should make the time period that elapses between the initial use and the reuse as long as possible. Also, the entry identifier should be reassigned to another object of the same type. That is, a particular entry identifier should not be associated first with a message and then with a folder. </p>
<p>&nbsp;</p></body>
</HTML>
