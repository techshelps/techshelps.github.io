<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITnef::ExtractProps</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_itnef_extractprops"></a>ITnef::ExtractProps</h2>
<p>
The <b>ITnef::ExtractProps</b> method extracts the properties from a TNEF encapsulation. </p>
<h4>Quick Info</h4>
<p>
See <a href="inter041_0ai6.htm"><b>ITnef : IUnknown</b></a>.</p>
<pre><code><b>HRESULT ExtractProps(
  ULONG</b><i> ulFlags</i><b>,</b>                        
<b>  LPSPropTagArray</b><i> lpPropList</i><b>,</b>           
<b>  LPSTnefProblemArray FAR *</b><i> lpProblems  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls how properties are decoded. The following flags can be set:
<dl>
<dt>
TNEF_PROP_EXCLUDE</dt>
<dd>
Decodes all properties not specified in the <i>lpPropList</i> parameter.</dd>
<dt>
TNEF_PROP_INCLUDE</dt>
<dd>
Decodes all properties specified in <i>lpPropList</i>.</dd>
</dl>
</dd>
<dt>
<i>lpPropList</i></dt>
<dd>
[in] Pointer to the list of properties to include in or exclude from the decoding operation.</dd>
<dt>
<i>lpProblems</i></dt>
<dd>
[out] Pointer to a pointer to a returned <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a> structure. The <b>STnefProblemArray</b> structure indicates which properties were not encoded properly, if any. If NULL is passed in the <i>lpProblems</i> parameter, no property problem array is returned. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The call succeeded and has returned the expected value or values.</dd>
<dt>
MAPI_E_CORRUPT_DATA</dt>
<dd>
Data being decoded into a stream is corrupted.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Transport providers, message store providers, and gateways call the <b>ITnef::ExtractProps</b> method to extract — that is, decode — properties from the encapsulation of a message or an attachment that was passed to the <a href="function_28ml.htm"><b>OpenTnefStream</b></a> function. The calling provider or gateway can specify a list of properties to decode. Providers and gateways can also use <b>ExtractProps</b> to provide information on any special handling attachments should be given. </p>
<p>
<b>ExtractProps</b> populates the original message passed into <b>OpenTnefStream</b> with the decoded properties. Subsequent <b>ExtractProps</b> calls go back to the message and extract the new list of properties.</p>
<p>
Unlike the <a href="inter041_267n.htm"><b>ITnef::AddProps</b></a><b> </b>method, which queues requested actions until the <b>ITnef::Finish</b> method is called, the <b>ExtractProps</b> method decodes the encapsulated properties immediately when it is called. For that reason, the target message for encapsulation decoding should be relatively empty. Existing properties in the target message are overwritten by encapsulated properties. </p>
<p>
<b>ExtractProps</b> is only supported for objects opened with the TNEF_DECODE flag for the <b>OpenTnefStream</b> or <a href="function_3qk8.htm"><b>OpenTnefStreamEx</b></a> function.</p>
<p>
The TNEF implementation reports TNEF stream encoding problems without halting the <b>ExtractProps </b>process. The <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a> structure returned in <i>lpProblems</i> indicates which TNEF attributes or MAPI properties, if any, could not be processed. The value returned in the <b>scode </b>member of the <b>STnefProblemArray</b> structure indicates the specific problem. The provider or gateway can work on the assumption that all properties or attributes for which <b>ExtractProps </b>does not return a problem report were processed successfully. </p>
<p>
One exception is that if, during the decoding of a TNEF stream, a property in the MAPI encapsulation block cannot be processed and leaves the stream unreliable; then decoding of the encapsulation block is halted and a problem is reported. The problem array for this type of problem contains 0L for the <b>ulPropTag </b>member, <code>attMAPIProps</code> or <code>attAttachment</code> for the <b>ulAttribute </b>member, and MAPI_E_UNABLE_TO_COMPLETE for the <b>scode </b>member. Note that the decoding of the stream is not halted, just the decoding of the MAPI encapsulation block. The stream decoding continues with the next attribute block.</p>
<p>
If a provider or gateway does not work with problem arrays, it can pass NULL in <i>lpProblems;</i> in this case, no problem array is returned. </p>
<p>
The value returned in <i>lpProblems</i> is only valid if the call returns S_OK. When S_OK is returned, the provider or gateway should check the values returned in the <b>STnefProblemArray</b> structure. If an error occurs on the call, then the <b>STnefProblemArray</b> structure is not filled in and the calling provider or gateway should not use or free the structure. If no error occurs on the call, the calling provider or gateway must release the memory for the <b>STnefProblemArray</b> structure by calling the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a><b> </b>function.</p>
<h4>See Also</h4>
<p>
<a href="inter041_267n.htm"><b>ITnef::AddProps</b></a>, <a href="inter041_3nvs.htm"><b>ITnef::Finish</b></a>, <a href="inter041_6mlv.htm"><b>ITnef::SetProps</b></a>, <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a>, <a href="function_28ml.htm"><b>OpenTnefStream</b></a>, <a href="function_3qk8.htm"><b>OpenTnefStreamEx</b></a>, <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a></p>
<p>&nbsp;</p></body>
</HTML>
