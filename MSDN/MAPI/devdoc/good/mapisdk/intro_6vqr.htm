<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Message Services and Profiles</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_message_services_and_profiles"></a>Message Services and Profiles</h1>
<p>
Some users require the services of several <a href="glossary_4s31.htm#_mapi1book_gly_messaging_system">messaging systems</a>, each with one or more <a href="glossary_4s37.htm#_mapi1book_gly_service_provider">service providers</a>. Because it is cumbersome to have to install and configure each of these service providers individually and because a messaging server usually requires a group of related providers to expose all of its functionality, MAPI includes the concept of a <a href="glossary_4s31.htm#_mapi1book_gly_message_service">message service</a>. Message services help users install and configure their service providers.</p>
<p>
To create a message service, a developer writes a message-service entry point program to handle the configuration of each provider in the service and a setup program to:
<ul>
<li>
Install each provider in the service.</li>
<li>
Create registry and initialization file entries.</li>
<li>
Create entries in the MAPI configuration file, MAPISVC.INF.</li>
</ul>
<p>
The MAPISVC.INF file contains information relating to the configuration of all message services and service providers installed on the computer workstation. It is organized in hierarchical sections, with each level linked to the next. At the top are three sections: one listing message service help files, one listing the most important, or default, message services, and one listing all of the services on the workstation. The next level contains sections for each message service and the last level contains sections for each service provider in a service. MAPI requires developers of service providers and message services to add certain entries to MAPISVC.INF; other entries can be added at the developer's discretion. Most of the information in MAPISVC.INF ends up in one or more profiles, a collection of configuration information for a user's preferred set of message services. Because a workstation can have multiple users and a single user can have multiple sets of preferences, many profiles can exist on a workstation. Each profile describes a different set of message services. Having multiple profiles enables a user to work, for example, at home with one set of message services and at the office with a different set.</p>
<p>
Profiles are created at message service installation or logon time by a client application that provides configuration support. MAPI provides two such client applications: the Control Panel applet and the Profile Wizard. The Control Panel applet is a full service configuration application that allows users to create, delete, edit, and copy profiles as well as make modifications to the entries within a profile. The Profile Wizard is a simple application designed to make adding a message service to a profile as easy as possible. The Profile Wizard consists of a series of dialog boxes, called property pages, that prompt the user through the process of installing and configuring a service. The user is prompted only for values for the most critical settings; all other settings inherit default values. Once the profile has been created, users are not allowed to make changes. </p>
<p>
Whereas the Control Panel applet is always invoked through the Control Panel, there are a variety of scenarios that can cause the Profile Wizard to be called. Client applications can call the Profile Wizard to create a default profile at logon time when one has not yet been created. Rather than reimplementing code to add a profile, the Control Panel applet or another client application can rely on the functionality already in the Profile Wizard. A message service, in its <a href="glossary_4s2t.htm#_mapi1book_gly_entry_point_function">entry point function</a>, can call the Profile Wizard when the service needs to be added to the default profile. Message services that use the Profile Wizard must write an extra entry point function and a standard Windows dialog procedure. The Profile Wizard calls the entry point function to retrieve the service's configuration dialog box while the dialog procedure handles the messages that are generated when this dialog box is in use. </p>
<p>
Profiles are organized in a similar way to the MAPISVC.INF file. There are linked hierarchical sections with service providers owning sections in the lowest level, message services owning sections in the middle level, and MAPI owning sections in the highest level. Each section is identified with a unique identifier known as a <a href="structyp_3p9g.htm"><b>MAPIUID</b></a>. The MAPI sections contain information internal to MAPI, such as the identifiers of all of the message service profile sections and links to each of the other sections. Each message service section stores links to its provider sections and each provider section stores a link to its service section. </p>
<p>
The following illustration shows the contents of two typical profiles. Sam has two profiles on his computer, one for home use and one for office use. The home profile contains three message services. Message Service X is a single provider service for address book management. Message Services Y and Z have three providers — an address book provider, a message store provider, and a transport provider. Sam's Work Profile contains two different message services; each of which has an address book provider, a message store provider, and a transport provider. </p>
<p>
<img src="images/amapi_56.gif" border=0></p>
<p>
Some profiles, depending on the platform, are password-protected. Password protection is only supported on platforms that do not provide user account security. It can be desirable to password protect profiles if it is important to ensure single user access.</p>
<p>
<b>Note</b>  Although password-protected profiles can only be changed by valid users, anyone with access to the system can delete them. This is because profiles are not considered critical components; they can be easily recreated.</p>
<p>
The following illustration shows a profile that includes two message services. The code for installing and configuring the service providers that belong to the message service reside in the same DLL as the code for the providers. This code reads information from the profile at logon time to configure the service providers and prompts the user, if possible and necessary, for missing information. Requests from a client to view or change configuration settings for any of the providers are also handled by this common code.</p>
<p>
<img src="images/amapi_55.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
