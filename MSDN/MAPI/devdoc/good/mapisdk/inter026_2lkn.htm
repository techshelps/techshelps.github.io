<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPITable::FindRow</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapitable_findrow"></a>IMAPITable::FindRow</h2>
<p>
The <b>IMAPITable::FindRow</b> method finds the next row in a table that matches specific search criteria.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter026_44ry.htm"><b>IMAPITable : IUnknown</b></a>.</p>
<pre><code><b>HRESULT FindRow(
  LPSRestriction</b><i> lpRestriction</i><b>,</b>   
<b>  BOOKMARK</b><i> BkOrigin</i><b>,</b>              
<b>  ULONG</b><i> ulFlags                   </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpRestriction</i></dt>
<dd>
[in] Pointer to an <a href="structyp_45ny.htm"><b>SRestriction</b></a> structure that describes the search criteria.</dd>
<dt>
<i>BkOrigin</i></dt>
<dd>
[in] Bookmark identifying the row where <b>FindRow</b> should begin its search. A bookmark can be created using the <a href="inter026_0v3f.htm"><b>IMAPITable::CreateBookmark</b></a> method, or one of the following predefined values can be passed:
<dl>
<dt>
BOOKMARK_BEGINNING</dt>
<dd>
Searches from the beginning of the table. </dd>
<dt>
BOOKMARK_CURRENT</dt>
<dd>
Searches from the row in the table where the cursor is located. </dd>
<dt>
BOOKMARK_END</dt>
<dd>
Searches from the end of the table. </dd>
</dl>
</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls the direction of the search. The following flag can be set: 
<dl>
<dt>
DIR_BACKWARD</dt>
<dd>
Searches backward from the row identified by the bookmark.
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The find operation was successful.</dd>
<dt>
MAPI_E_INVALID_BOOKMARK</dt>
<dd>
The bookmark in the <i>BkOrigin</i> parameter is invalid because it has been removed or because it is beyond the last row requested.</dd>
<dt>
MAPI_E_NOT_FOUND</dt>
<dd>
No rows were found that matched the restriction.</dd>
<dt>
MAPI_W_POSITION_CHANGED</dt>
<dd>
The call succeeded, but the bookmark used in the operation is no longer set at the same row as when it was last used; if the bookmark has not been used, it is no longer in the same position as when it was created. When this warning is returned, the call should be handled as successful. To test for this warning, use the <b>HR_FAILED</b> macro. See <a href="extend_5k9z.htm">Using Macros for Error Handling</a>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The<b> IMAPITable::FindRow</b> method locates the first row in the table to match a set of search criteria described in the <a href="structyp_45ny.htm"><b>SRestriction</b></a> structure pointed to by the <i>lpRestriction</i> parameter.</p>
<p>
Usually, <b>FindRow</b> searches forward from the specified bookmark. The caller can set the search to move backward from the bookmark by setting the DIR_BACKWARD flag in the <i>ulFlags </i>parameter. Searching forward starts from the current bookmark; searching backward starts from the row prior to the bookmark. The end position of the search is just before the first row found that satisfied the restriction. <b>FindRow</b> returns the data of the found row.</p>
<p>
If the row pointed to by the bookmark in the <i>BkOrigin</i> parameter no longer exists in the table and the table cannot establish a new position for the bookmark, <b>FindRow </b>returns MAPI_E_INVALID_BOOKMARK. If the row pointed to by <i>BkOrigin</i> no longer exists and the table is able to establish a new position for the bookmark, <b>FindRow</b> returns MAPI_W_POSITION_CHANGED.</p>
<p>
If the bookmark passed in <i>BkOrigin </i>is either BOOKMARK_BEGINNING or BOOKMARK_END, <b>FindRow </b>returns MAPI_E_NOT_FOUND if no matching row is found. If the bookmark used in <i>BkOrigin </i>is BOOKMARK_CURRENT, <b>FindRow </b>can return MAPI_W_POSITION_CHANGED but not MAPI_E_INVALID_BOOKMARK because there is always a current cursor position.</p>
<p>
The <a href="propa_65h5.htm">PR_INSTANCE_KEY</a> property column is required for all tables, and all implementations of <b>FindRow</b> are required to support calls seeking a row based on PR_INSTANCE_KEY.</p>
<h4>Notes to Implementers</h4>
<p>
The type of prefix searching performed by <b>FindRow </b>is only useful when the search follows the same direction as the table organization. In order to achieve the required behavior, the comparison function implied by the <b>RELOP_GE </b>passed in the property restriction structure should be the same comparison function on which the table sort order is based.</p>
<h4>Notes to Callers</h4>
<p>
You can use <b>FindRow</b> to support scrolling based on strings typed in by the user, especially in list boxes within address dialog boxes. In this type of scrolling, users enter progressively longer prefixes of a desired string value, and you can periodically issue a <b>FindRow</b> call to jump to the first row that matches the prefix. Which direction the cursor jumps depends on which direction the search is set to run. </p>
<p>
To use <b>FindRow</b>, a bookmark must be set. The string search can originate from any bookmark, including from the preset bookmarks indicating the current position and the beginning and end of the table. If there is a large number of rows in the table, the search operation can be slow.</p>
<p>
Use a restriction to find a string prefix for scrolling as follows. For forward searching on a column sorted in ascending order and for backward searching on a column sorted in descending order, pass a property restriction structure in the <i>lpRestriction</i> parameter with the relation <b>RELOP_GE </b>and the appropriate property tag and prefix, using the format <i>tag</i> <b>GE </b><i>prefix</i>. </p>
<p>
For more information about using restriction structures to specify a filter, see <a href="tables_0qyb.htm">About Restrictions</a>. For information about using regular expressions in restrictions, see <a href="apprgexp_2mb7.htm">Regular Expressions</a>.</p>
<h4>See Also</h4>
<p>
<a href="inter026_0v3f.htm"><b>IMAPITable::CreateBookmark</b></a>, <a href="structyp_6fxq.htm"><b>SPropertyRestriction</b></a>, <a href="structyp_45ny.htm"><b>SRestriction</b></a></p>
<p>&nbsp;</p></body>
</HTML>
