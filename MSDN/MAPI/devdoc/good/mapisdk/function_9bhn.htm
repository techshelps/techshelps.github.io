<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HrAllocAdviseSink</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_hrallocadvisesink"></a>HrAllocAdviseSink</h2>
<p>
The <b>HrAllocAdviseSink</b> function creates an advise sink object, given a context specified by the calling implementation and a callback function to be triggered by an event notification. </p>
<p>
<b>Note</b>  This function may not be supported in future versions of MAPI.</p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIUTIL.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Client applications and service providers </td>
</tr>
</table><br>
<pre><code><b>STDAPI HrAllocAdviseSink(
  LPNOTIFCALLBACK</b><i> lpfnCallback</i><b>,</b>         
<b>  LPVOID</b><i> lpvContext</i><b>,</b>                    
<b>  LPMAPIADVISESINK FAR *</b><i> lppAdviseSink  </i>
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>lpfnCallback </i></dt>
<dd>
[in] Pointer to a callback function based on the <a href="function_5mp7.htm"><b>NOTIFCALLBACK</b></a> prototype that MAPI is to call when a notification event occurs for the newly created advise sink. </dd>
<dt>
<i>lpvContext </i></dt>
<dd>
[in] Pointer to caller data passed to the callback function when MAPI calls it. The caller data can represent an address of significance to the client or provider. Typically, for C++ code, the <i>lpvContext </i>parameter represents a pointer to the address of an object. </dd>
<dt>
<i>lppAdviseSink </i></dt>
<dd>
[out] Pointer to a pointer to an advise sink object. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
To use the <b>HrAllocAdviseSink</b> function, a client application or service provider creates an object to receive notifications, creates a notification callback function based on the <a href="function_5mp7.htm"><b>NOTIFCALLBACK</b></a> function prototype that goes with that object, and passes a pointer to the object in the <b>HrAllocAdviseSink</b> function as the <i>lpvContext </i>value. Doing so performs a notification; and as part of the notification process, MAPI calls the callback function with the object pointer as the context. </p>
<p>
MAPI implements its notification engine asynchronously. In C++, the notification callback can be an object method. If the object generating the notification is not present, the client or provider requesting notification must keep a separate reference count for that object for the object's advise sink. </p>
<p>
<b>HrAllocAdviseSink </b>should be used sparingly; it is safer for clients to create their own advise sinks. </p>
<h4>See Also</h4>
<p>
<a href="groups_72er.htm">Notification Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
