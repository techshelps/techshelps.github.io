<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>cmc_read</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_cmc_read"></a>cmc_read</h2>
<p>
The <b>cmc_read</b> function reads a specified message. </p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>XCMC.H</td>
</tr>
</table><br>
<pre><code><b>CMC_return_code cmc_read (
  CMC_session_id</b><i> session</i><b>,</b>                      
<b>  CMC_message_reference *</b><i> message_reference</i><b>,</b>   
<b>  CMC_flags</b><i> read_flags</i><b>,</b>                        
<b>  CMC_message FAR * FAR *</b><i> message</i><b>,</b>             
<b>  CMC_ui_id</b><i> ui_id</i><b>,</b>                             
<b>  CMC_extension FAR *</b><i> read_extensions          </i>
<b>)</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>session </i></dt>
<dd>
[in] Opaque session handle that represents a MAPI session object indicating a session with a message service. If the value provided for the <i>session</i> parameter is invalid, the <b>cmc_read</b> function returns <small>cmc_e_invalid_session_id</small>.</dd>
<dt>
<i>message_reference </i></dt>
<dd>
[in] Pointer to a <a href="cmcref_98kl.htm"><b>CMC_message_reference</b></a> structure containing the message reference of the message to be retrieved. A NULL value for this parameter indicates that <b>cmc_read</b> should retrieve the first message in the mailbox. If the message reference is invalid, <b>cmc_read</b> returns <small>cmc_e_invalid_message_reference</small>. </dd>
<dt>
<i>read_flags</i></dt>
<dd>
[in] Bitmask of flags. The following flags can be set:
<dl>
<dt>
CMC_DO_NOT_MARK_AS_READ</dt>
<dd>
Does not mark messages as read when they are returned. This flag also suppresses sending of receipt reports. The calling client application or service provider can query the implementation to see if it supports this flag by calling the <a href="cmcref_2nu6.htm"><b>cmc_query_configuration</b></a> function.</dd>
<dt>
CMC_ERROR_UI_ALLOWED</dt>
<dd>
Displays a dialog box on encountering recoverable errors. If this flag is not set, <b>cmc_read</b> does not display a dialog box and returns an error value instead.</dd>
<dt>
CMC_MSG_AND_ATT_HDRS_ONLY</dt>
<dd>
The <i>attach_filename</i> fields in the <a href="cmcref_6sv9.htm"><b>CMC_message</b></a> structure returned in the <i>message</i> parameter will be undefined when <b>cmc_read</b> returns and should be ignored. This flag can be used to reduce the amount of data transferred, because the filenames will not be included in the transfer. If this flag is not set, the <i>attach_filename</i> fields are returned as usual.
<p>
Note that if the CMC_MSG_TEXT_NOTE_AS_FILE value is set in the flags of the returned message, the first attachment contains the message text. In this case, <b>cmc_read</b> returns the <i>attach_filename</i> field for that attachment regardless of the setting of the CMC_MSG_AND_ATT_HDRS_ONLY flag.
</dd>
<dt>
CMC_READ_FIRST_UNREAD_MESSAGE</dt>
<dd>
Returns the first message that is not marked as read. If this flag is not set, <b>cmc_read</b> should return the first message in the mailbox, whether it is marked as read or not. This flag can only be set when passing a null message reference to receive the first message in the mailbox. </dd>
</dl>
</dd>
<dt>
<i>message</i></dt>
<dd>
[out] Pointer to the location to which <b>cmc_read</b> writes the <a href="cmcref_6sv9.htm"><b>CMC_message</b></a> structure containing the message it has read. The function writes attachment data in files, and the <b>CMC_message</b> structure indicates the names of those files in its <b>attachments</b> member. If the client application has set the CMC_MSG_AND_ATT_HDRS_ONLY flag, the function does not indicate any attachment files.</dd>
<dt>
<i>ui_id</i></dt>
<dd>
[in] Handle of a dialog box for <b>cmc_read</b> to present to help resolve processing questions.</dd>
<dt>
<i>read_extensions </i></dt>
<dd>
[in, out] Pointer to an array of <a href="cmcref_1woe.htm"><b>CMC_extension</b></a> structures specifying function extensions. On input, this array contains MAPI extensions to the standard <b>cmc_read</b> function. A value of NULL for the <i>read_extensions </i>parameter indicates that the client application has no extensions for <b>cmc_read</b> and is expecting no extensions. 
<p>
On output, <b>cmc_read</b> writes to the array new information about the read operation. It writes NULL if it generates no output extensions. 

</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
CMC_E_ATTACHMENT_OPEN_FAILURE</dt>
<dd>
The specified attachment was found but could not be opened, or the attachment file could not be created.</dd>
<dt>
CMC_E_ATTACHMENT_READ_FAILURE</dt>
<dd>
The specified attachment was found and opened, but there was an error reading it.</dd>
<dt>
CMC_E_ATTACHMENT_WRITE_FAILURE</dt>
<dd>
The attachment file was created successfully, but there was an error writing it.</dd>
<dt>
CMC_E_DISK_FULL</dt>
<dd>
Insufficient disk space was available to complete the requested operation — this can refer to local or shared disk space.</dd>
<dt>
CMC_E_FAILURE</dt>
<dd>
There was a general failure that does not fit the description of any other return value.</dd>
<dt>
CMC_E_INSUFFICIENT_MEMORY</dt>
<dd>
Insufficient memory was available to complete the requested operation.</dd>
<dt>
CMC_E_INVALID_FLAG</dt>
<dd>
A flag set using a flags parameter was invalid.</dd>
<dt>
CMC_E_INVALID_MESSAGE_REFERENCE</dt>
<dd>
The specified message reference is invalid or no longer valid — for example, it has been deleted.</dd>
<dt>
CMC_E_INVALID_PARAMETER</dt>
<dd>
A function parameter was invalid. </dd>
<dt>
CMC_E_INVALID_SESSION_ID</dt>
<dd>
The specified session handle is invalid or no longer valid — for example, after logging off.</dd>
<dt>
CMC_E_INVALID_UI_ID</dt>
<dd>
The specified user-interface identifier is invalid or no longer valid.</dd>
<dt>
CMC_E_TOO_MANY_FILES</dt>
<dd>
The current implementation cannot support the number of files specified.</dd>
<dt>
CMC_E_UNABLE_TO_NOT_MARK_READ</dt>
<dd>
The current implementation cannot support the CMC_DO_NOT_MARK_AS_READ flag.</dd>
<dt>
CMC_E_UNSUPPORTED_FLAG</dt>
<dd>
The current implementation does not support the flag requested.</dd>
<dt>
CMC_E_UNSUPPORTED_FUNCTION_EXT</dt>
<dd>
The current implementation does not support the function extension requested.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>cmc_read</b> function only reads the first message in the mailbox if the client application passes a null message-reference value. </p>
<p>
After processing, <b>cmc_read</b> writes the data from the message into the <a href="cmcref_6sv9.htm"><b>CMC_message</b></a> structure. Unless the client application has set the flag CMC_DO_NOT_MARK_AS_READ on input, the message will be marked as read when <b>cmc_read</b> returns. If the client application has set the input flag CMC_MSG_AND_ATT_HDRS_ONLY, <b>cmc_read</b> writes only message and attachment headers on output.</p>
<p>
The <b>cmc_read</b> function can write multiple addresses. Before it writes message information, it must allocate memory for the structure to contain that information. When this memory is no longer needed, the client application should free all structures in the array with a call to the <a href="cmcref_5z51.htm"><b>cmc_free</b></a> function. </p>
<h4>See Also</h4>
<p>
<a href="cmcref_1woe.htm"><b>CMC_extension</b></a>,<b> <a href="cmcref_5z51.htm">cmc_free</a></b>,<b> <a href="cmcref_8x10.htm">cmc_list</a></b>, <a href="cmcref_6sv9.htm"><b>CMC_message</b></a>,<b> <a href="cmcref_98kl.htm">CMC_message_reference</a></b>,<b> <a href="cmcref_2nu6.htm">cmc_query_configuration</a></b></p>
<p>&nbsp;</p></body>
</HTML>
