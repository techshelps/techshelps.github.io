<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BuildDisplayTable</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_builddisplaytable"></a>BuildDisplayTable</h2>
<p>
The <b>BuildDisplayTable</b> function creates a display table from the property page data contained in one or more <a href="structyp_7zxh.htm"><b>DTPAGE</b></a> structures. </p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIUTIL.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Service providers </td>
</tr>
</table><br>
<pre><code><b>STDAPI BuildDisplayTable(
  LPALLOCATEBUFFER</b><i> lpAllocateBuffer</i><b>,</b>   
<b>  LPALLOCATEMORE</b><i> lpAllocateMore</i><b>,</b>   
<b>  LPFREEBUFFER</b><i> lpFreeBuffer</i><b>,</b>       
<b>  LPMALLOC</b><i> lpMalloc</i><b>,</b>               
<b>  HINSTANCE</b><i> hInstance</i><b>,</b>             
<b>  UINT</b><i> cPages</i><b>,</b>                     
<b>  LPDTPAGE</b><i> lpPage</i><b>,</b>                 
<b>  ULONG</b><i> ulFlags</i><b>,</b>                   
<b>  LPMAPITABLE *</b><i> lppTable</i><b>,</b>          
<b>  LPTABLEDATA *</b><i> lppTblData         </i>
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>lpAllocateBuffer </i></dt>
<dd>
[in] Pointer to the <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a> function, to be used where required by MAPI to allocate memory. </dd>
<dt>
<i>lpAllocateMore </i></dt>
<dd>
[in] Pointer to the <a href="function_11wl.htm"><b>MAPIAllocateMore</b></a> function, to be used where required by MAPI to allocate additional memory. </dd>
<dt>
<i>lpFreeBuffer </i></dt>
<dd>
[in] Pointer to the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> function, to be used where required by MAPI to free memory. </dd>
<dt>
<i>lpMalloc </i></dt>
<dd>
Unused; should be set to NULL. </dd>
<dt>
<i>hInstance </i></dt>
<dd>
[in] An instance of a MAPI object from which <b>BuildDisplayTable</b> retrieves resources. </dd>
<dt>
<i>cPages </i></dt>
<dd>
[in] Count of <a href="structyp_7zxh.htm"><b>DTPAGE</b></a> structures in the array pointed to by the <i>lpPage</i> parameter. </dd>
<dt>
<i>lpPage </i></dt>
<dd>
[in] Pointer to an array of <b>DTPAGE</b> structures that contain information about the display table pages to be built. </dd>
<dt>
<i>ulFlags </i></dt>
<dd>
[in] Bitmask of flags. The following flag can be set: 
<dl>
<dt>
MAPI_UNICODE </dt>
<dd>
The passed-in strings are in Unicode format. If the MAPI_UNICODE flag is not set, the strings are in ANSI format. </dd>
</dl>
</dd>
<dt>
<i>lppTable </i></dt>
<dd>
[out] Pointer to a pointer to the display table, which exposes the <a href="inter026_44ry.htm"><b>IMAPITable</b></a> interface. </dd>
<dt>
<i>lppTblData </i></dt>
<dd>
[in, out] Pointer to a pointer to a table data object exposing the <a href="inter040_3s4u.htm"><b>ITableData</b></a> interface on the table returned in the <i>lppTable</i> parameter. If no table data object is desired, <i>lppTblData</i> should be set to NULL instead of a pointer value. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
MAPI uses the functions pointed to by <i>lpAllocateBuffer</i>, <i>lpAllocateMore</i>, and <i>lpFreeBuffer</i> for most memory allocation and deallocation, in particular to allocate memory for use by client applications when calling object interfaces such as <a href="inter022_44c3.htm"><b>IMAPIProp::GetProps</b></a> and <a href="inter026_7wkz.htm"><b>IMAPITable::QueryRows</b></a>. </p>
<h4>Notes to Callers </h4>
<p>
Everything possible is read from the dialog resource, including: 
<ul>
<li>
The page title — that is, the <i>ulbLpszLabel</i> member of the <a href="structyp_9pnp.htm"><b>DTBLPAGE</b></a> structure — read from the dialog title in the resource. </li>
<li>
All control titles — that is, the <i>ulbLpszLabel</i> members of other control structures — read from the control text in the resource. </li>
</ul>
<p>
<b>BuildDisplayTable</b> overwrites anything passed in the input control structures with information from the dialog resource, which means the caller of <b>BuildDisplayTable</b> cannot dynamically specify page or control titles. Callers who need to do that can choose to have <b>BuildDisplayTable</b> return to them the table data object in <i>lppTableData</i> and change rows in it; but they might find it simpler to build the display table by hand in a table data object instead. </p>
<p>
If <i>lppTableData</i> is not set to NULL, the provider is responsible for freeing the table data object when it is finished with the display table. </p>
<p>&nbsp;</p></body>
</HTML>
