<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISupport::PrepareSubmit</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisupport_preparesubmit"></a>IMAPISupport::PrepareSubmit</h2>
<p>
The <b>IMAPISupport::PrepareSubmit</b> method prepares a message for submission to the MAPI spooler.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter025_8uge.htm"><b>IMAPISupport : IUnknown</b></a>.</p>
<pre><code><b>HRESULT PrepareSubmit(
  LPMESSAGE</b><i> lpMessage</i><b>,</b>   
<b>  ULONG FAR *</b><i> lpulFlags  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpMessage</i></dt>
<dd>
[in] Pointer to the message to prepare.</dd>
<dt>
<i>lpulFlags</i></dt>
<dd>
[in, out] On input, the <i>lpulFlags</i> parameter is reserved and must be zero. On output, <i>lpulFlags </i>must be NULL.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The message was successfully prepared.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISupport::PrepareSubmit</b> method is implemented for message store provider support objects. Message store providers call <b>PrepareSubmit</b> in their implementation of <a href="inter029_65ut.htm"><b>IMessage::SubmitMessage</b></a> to prepare a message for submission to the MAPI spooler. </p>
<p>
<b>PrepareSubmit</b> is used to handle messages that have the MSGFLAG_RESEND flag set in their <a href="propa_95wz.htm">PR_MESSAGE_FLAGS</a> property. MSGFLAG_RESEND is set for messages that include a request to be resent when an initial transmission fails. <b>PrepareSubmit</b> determines which of the recipients in the recipient list successfully received the message and which did not.  </p>
<p>
To access the recipient list, <b>PrepareSubmit</b> calls the message's <a href="inter029_9zhh.htm"><b>IMessage::GetRecipientTable</b></a> method. To retrieve the recipient data, <b>PrepareSubmit</b> calls the recipient table's <a href="inter026_7wkz.htm"><b>IMAPITable::QueryRows</b></a>. For each row in the table, <b>PrepareSubmit </b>checks <a href="propb_0n6t.htm">PR_RECIPIENT_TYPE</a>, and: 
<ul>
<li>
If the MAPI_SUBMITTED flag is set, <b>PrepareSubmit</b> clears the flag and sets the <a href="propb_92pl.htm">PR_RESPONSIBILITY</a> property to FALSE.</li>
<li>
If the MAPI_SUBMITTED flag is not set, <b>PrepareSubmit</b> changes the PR_RECIPIENT_TYPE to MAPI_P1 and sets the PR_RESPONSIBILITY property to TRUE.</li>
</ul>
<h4>Notes to Callers</h4>
<p>
Before you call <b>PrepareSubmit</b>, make sure you have called <a href="inter025_5b7d.htm"><b>IMAPISupport::SpoolerNotify</b></a> and set the NOTIFY_READYTOSEND flag in the <i>ulFlags</i> parameter. The <b>SpoolerNotify</b> call must be made once per session before the call to <b>PrepareSubmit</b>. <b>SpoolerNotify</b> synchronizes the MAPI spooler and ensures that all needed transport providers are logged on and their address types registered. </p>
<h4>See Also</h4>
<p>
<a href="inter013_4ucz.htm"><b>IMAPIFolder::GetMessageStatus</b></a>, <a href="inter029_65ut.htm"><b>IMessage::SubmitMessage</b></a></p>
<p>&nbsp;</p></body>
</HTML>
