<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Attachment Tables</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_attachment_tables"></a>Attachment Tables</h1>
<p>
An attachment table contains information about all of the attachment objects that are associated with a submitted message or a message under composition. Only attachments that have been saved through a call to the message's <a href="inter022_5rqr.htm"><b>IMAPIProp::SaveChanges</b></a> method are included in the table. Attachment tables are implemented by message store providers and used by client applications and transport providers. </p>
<p>
An attachment table can be accessed by calling:
<ul>
<li>
<a href="inter029_24it.htm"><b>IMessage::GetAttachmentTable</b></a>.<p>
– Or –
</li>
<li>
<a href="inter022_15vd.htm"><b>IMAPIProp::OpenProperty</b></a>, requesting the <a href="propa_2c1f.htm">PR_MESSAGE_ATTACHMENTS</a> property.</li>
</ul>
<p>
Attachment tables are <a href="glossary_4s2s.htm#_mapi1book_gly_dynamic_table">dynamic</a>.</p>
<p>
Message store providers are not required to support sorting on their attachment tables. If sorting is not supported, the table must be presented in order by rendering position — the <a href="propb_8uni.htm">PR_RENDERING_POSITION</a> property.</p>
<p>
Message store providers are also not required to support restrictions on their attachment tables. Providers that do not support restrictions return MAPI_E_NO_SUPPORT from their implementations of <b>IMAPITable::Restrict</b> and <b>IMAPITable::FindRow</b>.</p>
<p>
Attachment tables can be small; there are only four columns in the required column set:</p>
<p class=indent1>
<a href="propa_0p4d.htm">PR_ATTACH_NUM</a></p>
<p class=indent1>
<a href="propa_65h5.htm">PR_INSTANCE_KEY</a></p>
<p class=indent1>
<a href="propb_6lkp.htm">PR_RECORD_KEY</a></p>
<p class=indent1>
<a href="propb_8uni.htm">PR_RENDERING_POSITION</a></p>
<p>
<a href="propa_0p4d.htm">PR_ATTACH_NUM</a> is nontransmittable and contains a value for uniquely identifying an attachment within a message. This property is often used as an index into the rows of the table. PR_ATTACH_NUM has a short lifespan; it is only valid while the message containing the attachment is open. Its value is guaranteed to remain constant as long as the attachment table is open.</p>
<p>
<a href="propa_65h5.htm">PR_INSTANCE_KEY</a> is required in nearly every table. It is used to uniquely identify a particular row. </p>
<p>
<a href="propb_6lkp.htm">PR_RECORD_KEY</a> is commonly used to uniquely identify an object for comparison purposes. Unlike PR_ATTACH_NUM, PR_RECORD_KEY has the same scope as a long-term entry identifier; it remains available and valid even after the message is closed and reopened. For more information about the use of record keys in MAPI, see <a href="extend_088j.htm">Record and Search Keys</a>.</p>
<p>
<a href="propb_8uni.htm">PR_RENDERING_POSITION</a> indicates how an attachment should be displayed in a plain text message. It can be set to an offset in characters, with the first character of the message content as stored in the <a href="propa_9lvd.htm">PR_BODY</a> property being offset 0, or to -1 (0xFFFFFFFF), indicating that the attachment should not be rendered within the message text at all. Not setting PR_RENDERING_POSITION is also an option. </p>
<p>
When an attachment table is sorted by rendering position, the message store provider treats it as a signed value (PT_LONG). Therefore, attachments with rendering positions of -1 are sorted before attachments with rendering positions that reflect valid offsets. </p>
<p>
For more information about rendering an attachment in a plain text message, see <a href="consider_3ib8.htm">Rendering an Attachment in Plain Text</a>. </p>
<p>
For information about rendering an attachment in formatted text such as Rich Text Format (RTF), see <a href="consider_99is.htm">Rendering an Attachment in Formatted Text</a>.</p>
<p>
Some of the properties message store providers commonly include in an attachment table because they are easy to compute or retrieve are:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%><a href="propa_0sx3.htm">PR_ATTACH_ENCODING</a></td>
<td width=52%><a href="propa_1rji.htm">PR_ATTACH_EXTENSION</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="propa_29lx.htm">PR_ATTACH_FILENAME</a></td>
<td width=52%><a href="propa_4cyt.htm">PR_ATTACH_LONG_FILENAME</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="propa_0011.htm">PR_ATTACH_PATHNAME</a></td>
<td width=52%><a href="propa_23dx.htm">PR_ATTACH_LONG_PATHNAME</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="propa_7o6c.htm">PR_ATTACH_METHOD</a></td>
<td width=52%><a href="propa_173b.htm">PR_ATTACH_TAG</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="propa_4sdh.htm">PR_CREATION_TIME</a></td>
<td width=52%><a href="propa_88px.htm">PR_ATTACH_TRANSPORT_NAME</a></td>
</tr>
<tr valign=top>
<td width=48%><a href="propa_1yjp.htm">PR_DISPLAY_NAME</a></td>
<td width=52%><a href="propa_4xet.htm">PR_LAST_MODIFICATION_TIME</a></td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
