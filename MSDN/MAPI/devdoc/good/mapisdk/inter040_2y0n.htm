<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITableData::HrGetView</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_itabledata_hrgetview"></a>ITableData::HrGetView</h2>
<p>
The <b>ITableData::HrGetView</b> method creates a table view, returning a pointer to an <a href="inter026_44ry.htm"><b>IMAPITable</b></a> implementation.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter040_3s4u.htm"><b>ITableData : IUnknown</b></a>.</p>
<pre><code><b>HRESULT HrGetView(
  LPSSortOrderSet</b><i> lpSSortOrderSet</i><b>,</b>        
<b>  CALLERRELEASE FAR *</b><i> lpfCallerRelease</i><b>,</b>   
<b>  ULONG</b><i> ulCallerData</i><b>,</b>                     
<b>  LPMAPITABLE FAR *</b><i> lppMAPITable          </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpSSortOrderSet</i></dt>
<dd>
[in] Pointer to a sort order structure describing the sort order for the table view. If NULL is passed in the <i>lpSSortOrderSet</i> parameter, the view is not sorted.</dd>
<dt>
<i>lpfCallerRelease</i></dt>
<dd>
[in] Pointer to a callback function based on the <a href="function_4w85.htm"><b>CALLERRELEASE</b></a> prototype that MAPI calls when it releases the view. If NULL is passed in the <i>lpfCallerRelease</i> parameter, no function is called upon release of the view.</dd>
<dt>
<i>ulCallerData</i></dt>
<dd>
[in] Data that must be saved with the new view and passed to the callback function pointed to by <i>lpfCallerRelease</i>.</dd>
<dt>
<i>lppMAPITable</i></dt>
<dd>
[out] Pointer to a pointer to the newly created view. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The view was successfully created.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>ITableData::HrGetView</b> method creates a read-only view of the data in the table sorted in the order pointed to by <i>lpSSortOrderSet</i>. The cursor is placed at the beginning of the first row in the view. An <b>IMAPITable</b> interface implementation for accessing the view is returned.</p>
<p>
Service providers call <b>HrGetView</b> when they need to give a client access to a table. <b>HrGetView</b> creates the view and returns the <b>IMAPITable</b> pointer. Service providers in turn pass the pointer on to the client. When the client is finished using the table and calls its <b>IUnknown::Release</b> method, <b>HrGetView</b> calls the callback function pointed to by the <i>lpfCallerRelease</i> parameter.</p>
<p>
If a service provider needs to return to a client a view that has a customized column set or a restriction in place, the provider can call the view's <b>IMAPITable::SetColumns </b>and <b>Restrict</b> methods before allowing the client access.</p>
<h4>See Also</h4>
<p>
<a href="function_4w85.htm"><b>CALLERRELEASE</b></a>, <a href="inter026_44ry.htm"><b>IMAPITable : IUnknown</b></a>, <a href="structyp_7y2c.htm"><b>SSortOrderSet</b></a></p>
<p>&nbsp;</p></body>
</HTML>
