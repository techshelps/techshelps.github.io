<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HrAddColumnsEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_hraddcolumnsex"></a>HrAddColumnsEx</h2>
<p>
The <b>HrAddColumnsEx</b> function adds or moves columns to the beginning of an existing table. </p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIUTIL.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Client applications and service providers </td>
</tr>
</table><br>
<pre><code><b>HRESULT HrAddColumnsEx(
  LPMAPITABLE</b><i> lptbl</i><b>,</b>                                       
<b>  LPSPropTagArray</b><i> lpproptagColumnsNew</i><b>,</b>                     
<b>  LPALLOCATEBUFFER</b><i> lpAllocateBuffer</i><b>,</b>                       
<b>  LPFREEBUFFER</b><i> lpFreeBuffer</i><b>,</b>                               
<b>  void (FAR * lpfnFilterColumns) (LPSPropTagArray</b><i> ptaga)</i>   
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>lptbl </i></dt>
<dd>
[in] Pointer to the MAPI table affected. </dd>
<dt>
<i>lpproptagColumnsNew </i></dt>
<dd>
[in] Pointer to an <a href="structyp_23i1.htm"><b>SPropTagArray</b></a> structure containing an array of property tags for the properties to be added or moved to the beginning of the table. </dd>
<dt>
<i>lpAllocateBuffer </i></dt>
<dd>
[in] Pointer to the <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a> function, to be used to allocate memory. </dd>
<dt>
<i>lpFreeBuffer </i></dt>
<dd>
[in] Pointer to the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> function, to be used to free memory. </dd>
<dt>
<i>lpfnFilterColumns </i></dt>
<dd>
[in] Pointer to a callback function furnished by the caller. If the <i>lpfnFilterColumns</i> parameter is set to NULL, no callback is made. </dd>
<dt>
<i>ptaga</i> </dt>
<dd>
[in] Pointer to an <a href="structyp_23i1.htm"><b>SPropTagArray</b></a> structure containing the array of property tags already existing in the table before properties are added or moved to the beginning. <b>HrAddColumnsEx</b> passes this pointer as the parameter to the callback function pointed to by <i>lpfnFilterColumns</i>.
</dd>
</dl>
<h4>Return Values </h4>
<dl>
<dt>
S_OK </dt>
<dd>
The call succeeded and the specified columns were moved or added. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
The properties passed to <b>HrAddColumnsEx</b> using the <i>lpproptagColumnsNew</i> parameter become the first properties exposed on subsequent calls to the <a href="inter026_7wkz.htm"><b>IMAPITable::QueryRows</b></a> method. Any properties previously in the table that were not specified in the <i>lpproptagColumnsNew</i> parameter are exposed after all the added and moved properties. </p>
<p>
If any table properties are undefined when <b>QueryRows</b> is called, they are returned with property type PT_NULL and property identifier PROP_ID_NULL. </p>
<h4>Notes to Callers </h4>
<p>
The <b>HrAddColumnsEx</b> function allows the caller to furnish a callback function to filter the columns that were already in the table, for example to convert strings from property type PT_UNICODE to PT_STRING8. <b>HrAddColumnsEx</b> passes a pointer to the previously existing column set as the parameter to the callback function. The callback function can change data within the property tag array but cannot add new tags. </p>
<p>
<b>HrAddColumnsEx</b> first calls the callback function if one is furnished, then adds or moves the specified columns, and finally calls <a href="inter026_7x83.htm"><b>IMAPITable::SetColumns</b></a>. </p>
<p>
The <i>lpAllocateBuffer</i> and <i>lpFreeBuffer </i>input parameters point to the <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a> and <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a> functions, respectively. The exact values of the pointers passed to <b>HrAddColumnsEx</b> depend on whether the caller is a client application or a service provider. A client passes pointers to the MAPI functions with the specified names. A service provider passes the pointers it received in its initialization call or retrieved by calling the <a href="inter025_8v5f.htm"><b>IMAPISupport::GetMemAllocRoutines</b></a> method. </p>
<h4>See Also </h4>
<p>
<a href="groups_52b7.htm">Table Functions</a>, <a href="inter026_98c3.htm"><b>IMAPITable::QueryColumns</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
