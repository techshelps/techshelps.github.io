<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPITable::Advise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapitable_advise"></a>IMAPITable::Advise</h2>
<p>
The <b>IMAPITable::Advise</b> method registers to receive notification of specified events affecting the table.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter026_44ry.htm"><b>IMAPITable : IUnknown</b></a>.</p>
<pre><code><b>HRESULT Advise(
  ULONG</b><i> ulEventMask</i><b>,</b>               
<b>  LPMAPIADVISESINK</b><i> lpAdviseSink</i><b>,</b>   
<b>  ULONG FAR *</b><i> lpulConnection       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulEventMask</i></dt>
<dd>
[in] Value indicating the type of event that will generate the notification. Only the following value is valid:</dd>
</dl>
<pre><code>fnevTableModified
</code></pre>
<dl>
<dt>
<i>lpAdviseSink</i></dt>
<dd>
[in] Pointer to an advise sink object to receive the subsequent notifications. This advise sink object must have been already allocated.</dd>
<dt>
<i>lpulConnection</i></dt>
<dd>
[out] Pointer to a nonzero value that represents the successful notification registration. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The notification registration successfully completed.</dd>
<dt>
MAPI_E_NO_SUPPORT</dt>
<dd>
The table implementation either does not support changes to its rows and columns or does not support notification.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Use the <b>IMAPITable::Advise</b> method to register a table object implemented in the provider for notification callbacks. Whenever a change occurs to the table object, the provider checks to see what event mask bit was set in the <i>ulEventMask</i> parameter and thus what type of change occurred. If a bit is set, then the provider calls the <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a> method for the advise sink object indicated by the <i>lpAdviseSink</i> parameter to report the event. Data passed in the notification structure to the <b>OnNotify </b>routine describes the event.</p>
<p>
The call to <b>OnNotify </b>can occur during the call that changes the object, or at any following time. On systems that support multiple threads of execution, the call to <b>OnNotify </b>can occur on any thread. For a way to turn a call to <b>OnNotify </b>that might happen at an inopportune time into one that is safer to handle, a provider should use the <a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a> function. </p>
<p>
To provide notifications, the provider implementing <b>Advise</b> needs to keep a copy of the pointer to the <i>lpAdviseSink</i> advise sink object; to do so, it calls the <b>IUnknown::AddRef</b> method for the advise sink to maintain its object pointer until notification registration is canceled with a call to the <a href="inter026_3b1h.htm"><b>IMAPITable::Unadvise</b></a> method. The <b>Advise</b> implementation should assign a connection number to the notification registration and call <b>AddRef</b> on this connection number before returning it in the <i>lpulConnection</i> parameter. Service providers can release the advise sink object before the registration is canceled, but they must not release the connection number until <b>Unadvise</b> has been called. </p>
<p>
After a call to <b>Advise</b> has succeeded and before<b> Unadvise</b> has been called, clients must be prepared for the advise sink object to be released. A client should therefore release its advise sink object after <b>Advise</b> returns unless it has a specific long-term use for it.</p>
<p>
Because of the asynchronous behavior of notification, implementations that change table column settings can receive notifications with information organized in a previous column order. For instance, a table row might be returned for a message that has just been deleted from the container. Such a notification is sent when the column setting change has been made and information about it sent but the notification table view has not been updated with that information yet.</p>
<p>
For more information on the notification process, see <a href="extend_8fvt.htm">Event Notification in MAPI</a>. For specific information about table notification, see <a href="tables_3bzn.htm">About Table Notifications</a>. For information about using the <b>IMAPISupport</b> methods to support notification, see <a href="provider_2ii6.htm">Supporting Event Notification</a>.</p>
<h4>See Also</h4>
<p>
<a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a>, <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a>, <a href="inter026_3b1h.htm"><b>IMAPITable::Unadvise</b></a>, <a href="structyp_65o0.htm"><b>TABLE_NOTIFICATION</b></a></p>
<p>&nbsp;</p></body>
</HTML>
