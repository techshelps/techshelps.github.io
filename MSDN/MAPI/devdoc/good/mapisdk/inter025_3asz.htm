<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISupport::StoreLogoffTransports</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisupport_storelogofftransports"></a>IMAPISupport::StoreLogoffTransports</h2>
<p>
The <b>IMAPISupport::StoreLogoffTransports</b> method requests the orderly release of a message store.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter025_8uge.htm"><b>IMAPISupport : IUnknown</b></a>.</p>
<pre><code><b>HRESULT StoreLogoffTransports(
  ULONG FAR *</b><i> lpulFlags  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpulFlags</i></dt>
<dd>
[in, out] Bitmask of flags that controls how message store logoff occurs. On input, all flags for this parameter are mutually exclusive; only one of the following flags can be set per call:
<dl>
<dt>
LOGOFF_ABORT</dt>
<dd>
Any transport provider activity for this store should be stopped before logoff. Control is returned to the client after the activity is stopped and the MAPI spooler has logged off the store. If any transport activity is taking place, the logoff does not occur and no change in MAPI spooler or transport provider behavior occurs. If there is currently no activity, the MAPI spooler releases the store. </dd>
<dt>
LOGOFF_NO_WAIT</dt>
<dd>
The MAPI spooler should release the store and return control to the client immediately after all outbound mail that is ready to be sent is sent. If the message store has the default Inbox, any in-process message is received and then further reception is disabled. </dd>
<dt>
LOGOFF_ORDERLY</dt>
<dd>
The MAPI spooler should release the store and return control to the client immediately after any pending messages have finished processing. No new messages should be processed. </dd>
<dt>
LOGOFF_PURGE</dt>
<dd>
Works the same as the LOGOFF_NO_WAIT flag. The LOGOFF_PURGE flag returns control to the caller after completion. </dd>
<dt>
LOGOFF_QUIET</dt>
<dd>
The logoff should not occur if any transport provider activity is taking place. The type of activity taking place is returned as a flag on output. 
</dd>
</dl>
</dd>
</dl>
<p>
On output, the MAPI spooler can return one or more of the following flags:
<dl>
<dt>
LOGOFF_COMPLETE</dt>
<dd>
The logoff can complete. All resources associated with the store have been released, and the object has been invalidated. The MAPI spooler has performed or will perform all requests. Only the message store's <b>IUnknown::Release</b> method should be called at this point. </dd>
<dt>
LOGOFF_INBOUND</dt>
<dd>
A message is currently coming into the store from one or more transport providers. </dd>
<dt>
LOGOFF_OUTBOUND</dt>
<dd>
A message is currently being sent from the store by one or more transport providers. </dd>
<dt>
LOGOFF_OUTBOUND_QUEUE</dt>
<dd>
There are currently messages in the outbound queue for the store. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The logoff procedure was successful.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISupport::StoreLogoffTransports</b> method is implemented for message store provider support objects. Message store providers call <b>StoreLogoffTransports</b> to give client applications some control over how MAPI handles transport provider activity as a message store is closing. </p>
<p>
If another process has the store to be logged off open for the same profile, MAPI ignores a call to <b>StoreLogoffTransports</b> and returns the flag LOGOFF_COMPLETE in <i>lpulFlags</i>.</p>
<p>
The behavior of the store provider following the return from <b>StoreLogoffTransports</b> should be based on the value of <i>lpulFlags</i>, which indicates system status and conveys client instructions on logoff behavior. </p>
<h4>Notes to Callers</h4>
<p>
<b>StoreLogoffTransports</b> is typically called from a store provider's <a href="inter031_5dra.htm"><b>IMsgStore::StoreLogoff</b></a><b> </b>method. However, it can also be called from the <b>IUnknown::Release</b> method of the message store. Implement the <b>Release</b> method of your message store so that you can check whether or not a call to <b>StoreLogoffTransports</b> has occurred. If not, call it with the LOGOFF_ABORT flag set.</p>
<p>
The <i>lpulFlags</i> parameter is set to a flag that indicates how the client requires the message store to be shut down. Determine the appropriate setting for <i>ulFlags</i> based on the setting of the corresponding parameter in the call to the <a href="inter031_5dra.htm"><b>IMsgStore::StoreLogoff</b></a> method. That is, if a client called your <b>StoreLogoff</b> method with <i>ulFlags</i> set to LOGOFF_ORDERLY, you should call <b>StoreLogoffTransports</b> with <i>ulFlags</i> set to LOGOFF_ORDERLY.</p>
<p>
For more information about the message store logoff process, see <a href="provider_67xu.htm">Shutting Down a Message Store Provider</a>.</p>
<h4>See Also</h4>
<p>
<a href="inter031_5dra.htm"><b>IMsgStore::StoreLogoff</b></a>, <a href="inter042_8vn7.htm"><b>IXPLogon::FlushQueues</b></a></p>
<p>&nbsp;</p></body>
</HTML>
