<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAddrBook::Advise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_iaddrbook_advise"></a>IAddrBook::Advise</h2>
<p>
The <b>IAddrBook::Advise</b> method registers a client or service provider to receive notifications about changes to one or more entries in the address book. </p>
<h4>Quick Info</h4>
<p>
See <a href="inter006_23e8.htm"><b>IAddrBook : IMAPIProp</b></a>.</p>
<pre><code><b>HRESULT Advise(
  ULONG</b><i> cbEntryID</i><b>,</b>                 
<b>  LPENTRYID</b><i> lpEntryID</i><b>,</b>             
<b>  ULONG</b><i> ulEventMask</i><b>,</b>               
<b>  LPMAPIADVISESINK</b><i> lpAdviseSink</i><b>,</b>   
<b>  ULONG FAR *</b><i> lpulConnection       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cbEntryID</i></dt>
<dd>
[in] Count of bytes in the entry identifier pointed to by the <i>lpEntryID</i> parameter.</dd>
<dt>
<i>lpEntryID</i></dt>
<dd>
[in] Pointer to the entry identifier of the address book container, messaging user, or distribution list that will generate a notification when a change occurs of the type or types described in the <i>ulEventMask</i> parameter.</dd>
<dt>
<i>ulEventMask</i></dt>
<dd>
[in] One or more notification events that the caller is registering to receive. Each event is associated with a particular notification structure containing information about the change that occurred. The following table lists the valid values for <i>ulEventMask</i> and their corresponding structures. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=44%>Notification event</th>
<th align=left width=56%>Corresponding structure</th>
</tr>
<tr valign=top>
<td width=44%><pre><code>fnevCriticalError</code></pre>
</td>
<td width=56%><a href="structyp_9epa.htm"><b>ERROR_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=44%><pre><code>fnevObjectCreated</code></pre>
</td>
<td width=56%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=44%><pre><code>fnevObjectDeleted</code></pre>
</td>
<td width=56%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=44%><pre><code>fnevObjectModified</code></pre>
</td>
<td width=56%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=44%><pre><code>fnevObjectCopied</code></pre>
</td>
<td width=56%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=44%><pre><code>fnevObjectMoved</code></pre>
</td>
<td width=56%><a href="structyp_5tm6.htm"><b>OBJECT_NOTIFICATION</b></a></td>
</tr>
<tr valign=top>
<td width=44%><pre><code>fnevTableModified</code></pre>
</td>
<td width=56%><a href="structyp_65o0.htm"><b>TABLE_NOTIFICATION</b></a></td>
</tr>
</table><br>

</dd>
<dt>
<i>lpAdviseSink</i></dt>
<dd>
[in] Pointer to the advise sink object to be called when the event for which notification has been requested occurs.</dd>
<dt>
<i>lpulConnection</i></dt>
<dd>
[out] Pointer to a nonzero connection number that represents the notification registration.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The notification registration was successful.</dd>
<dt>
MAPI_E_INVALID_ENTRYID</dt>
<dd>
The address book provider responsible for the entry identifier passed in <i>lpEntryID</i> could not register a notification for the corresponding entry.</dd>
<dt>
MAPI_E_NO_SUPPORT</dt>
<dd>
Notification is not supported by the address book provider responsible for the object identified by the entry identifier passed in the <i>lpEntryID</i> parameter. </dd>
<dt>
MAPI_E_UNKNOWN_ENTRYID</dt>
<dd>
The entry identifier passed in <i>lpEntryID</i> cannot be handled by any of the address book providers in the profile.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Clients and service providers call the <b>IAddrBook::Advise</b> method to register for a particular type or types of notification on an address book entry. The types of notification are indicated by the event mask passed in with the <i>lpEventMask</i> parameter. </p>
<p>
MAPI forwards this <b>Advise</b> call to the address book provider responsible for the entry as indicated by the entry identifier in the <i>lpEntryID</i> parameter. The address book provider either handles the registration itself or calls the support method, <a href="inter025_56xx.htm"><b>IMAPISupport::Subscribe</b></a>, to prompt MAPI to register the caller. A nonzero connection number is returned to represent the successful registration.</p>
<p>
Whenever a change occurs to the entry of the type indicated by the notification registration, the address book provider calls the <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a> method for the advise sink object specified in the <i>lpAdviseSink</i> parameter. The <b>OnNotify</b> method includes a <a href="structyp_5dbi.htm"><b>NOTIFICATION</b></a> structure as an input parameter that contains data to describe the event. </p>
<p>
Depending on the address book provider, the call to <b>OnNotify </b>can occur immediately following the change to the registered object or at some later time. On systems that support multiple threads of execution, the call to <b>OnNotify </b>can occur on any thread. Clients can request that these notifications occur on a particular thread by calling the <a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a> function to create the advise sink object that is passed to <b>Advise</b>. </p>
<p>
Because an address book provider can release the advise sink object passed in by clients at any time after the successful completion of the <b>Advise</b> call and before an <b>Unadvise</b> call to cancel the notification, clients should release their advise sink objects when <b>Advise</b> returns. </p>
<p>
For more information on the notification process, see <a href="extend_8fvt.htm">Event Notification in MAPI</a>.</p>
<h4>See Also</h4>
<p>
<a href="function_1fxn.htm"><b>HrThisThreadAdviseSink</b></a>, <a href="inter006_6lut.htm"><b>IAddrBook::Unadvise</b></a>, <a href="inter010_4y2h.htm"><b>IMAPIAdviseSink::OnNotify</b></a>, <a href="structyp_5dbi.htm"><b>NOTIFICATION</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
