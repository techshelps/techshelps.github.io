<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tightly Coupled Message Store Providers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_tightly_coupled_message_store_providers"></a>Tightly Coupled Message Store Providers</h1>
<p>
Message store providers can be "tightly coupled" with a transport provider. Tightly coupling MAPI service providers means implementing the two providers such that the store provider and transport provider can communicate to make the process of sending and receiving messages more efficient. The benefit of doing this is that performance improvements can result when two service providers can interact with each other directly rather than by means of the MAPI spooler. To tightly couple a message store provider to a transport provider, the transport provider must place the message store provider's entry identifier in the <a href="propb_46jo.htm">PR_OWN_STORE_ENTRYID</a> property in the transport provider's row in the MAPI status table. This enables the MAPI spooler to connect the store provider to the transport provider.</p>
<p>
There is no requirement that a message store provider ever be tightly coupled with any other service provider. The most common service provider to tightly couple with a message store provider is a transport provider. This is usually done so that sending and receiving messages can be accomplished without involving the MAPI spooler. For example, when the user submits an outgoing message, the combined message store provider and transport provider can send it directly. The combined service providers don't have to first notify the MAPI spooler that there is a new message to process and then wait for the MAPI spooler to initiate the process of transferring the message from the message store provider to the transport provider. This has particular benefits when a server-based message store is being used by minimizing network traffic between the user's computer and the server.</p>
<p>
In general, there are no well-specified procedures for tightly coupling service providers. However, there are some guidelines:
<ul>
<li>
Keep in mind that if the reason for tightly coupling service providers is performance, then they are taking other parts of the MAPI subsystem out of the processes that those parts would normally be involved in. This implies that the individual parts within the combined service provider should interact with each other in a way that simulates the interaction they would normally have with the parts of the MAPI subsystem that are not being used.</li>
<li>
When tightly coupled service providers do interact with other MAPI components, they must still interact with them in exactly the way they would if they were not tightly coupled. For example, if a user is using a combined message store provider/transport provider as their default message store but is using a separate transport provider to send messages — as can happen when a user takes his or her computer on the road and switches to a remote transport provider — the message store portion of the tightly coupled service provider must still interact with the MAPI spooler just as if it were a standalone message store provider.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
