<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Finding a Message in a Message Store</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mapi1book_finding_a_message_in_a_message_store"></a>Finding a Message in a Message Store</h1>
<p>
There are various tasks related to finding a message in a message store. The tasks are different, depending on the client interface you are using for your client and the message store. Some message stores support searching; others do not. Create a prototype to determine whether or not a particular search strategy will work. </p>
<p>
If the message store supports searches, your client can use a search-results folder to locate messages. Clients written with the MAPI client interface can either create a new search-results folder or use a pre-existing one. Clients written with the Active Messaging Library must use a pre-existing search-results folder. </p>
<p>
If the message store does not support searches, your client will have to traverse the message store hierarchy, looking through each folder for the target message rather than using search criteria. </p>
<p>
Specifically, this topic explains how to:
<ul>
<li>
Create a search-results folder using the MAPI client interface.</li>
<li>
Locate an existing search-results folder using the Active Messaging Library.</li>
<li>
Perform a search in a searchable message store using the MAPI client interface.</li>
</ul>
<p>
</p>
<h4>Design Tasks</h4>
<ol>
<li>
Determine whether or not the message store supports searches, meaning the ability to create search-results folders. Clients using message stores that support searches can use a search-results folder to find a message; clients using non-searchable message stores must traverse the folder hierarchy. </li>
<li>
For clients using message stores that support searches, determine whether or not the message store supports the type of restrictions you will be imposing. For example, if you want to use a property restriction, make sure that the message store supports the specific property. </li>
</ol>
<p>
</p>
<h4>Implementation Tasks</h4>
<ol>
<li>
Retrieve the <a href="propb_01t7.htm">PR_STORE_SUPPORT_MASK</a> property from the message store by calling its<a href="inter022_44c3.htm"> <b>IMAPIProp::GetProps</b></a> method. If the STORE_SEARCH_OK flag is set, proceed. If this flag is not set, there are two choices:<ul>
<li>
Fail because the message store does not support searches. </li>
<li>
Attempt the alternate strategy of enumerating the message store hierarchy. </li>
</ul>
</li>
<li>
Create a search-results folder if possible. See the following procedure.</li>
<li>
If creating a search-results folder is not possible, locate an existing search-results folder. MAPI creates a default search-results folder called Search Root when it initializes a message store. Creating search-results folders is not allowed if you are using the Active Messaging Library. See the following procedure.</li>
<li>
Build a restriction that reflects your search criteria. See <a href="tables_0qyb.htm">About Restrictions</a>. If you are searching on a named property, call the <a href="inter022_49f7.htm"><b>IMAPIProp::GetIDsFromNames</b></a> method to create a searchable property tag from the name.</li>
<li>
Start the search by calling the search-results folder's <a href="inter011_2psx.htm"><b>IMAPIContainer::SetSearchCriteria</b></a> method. Pass the BACKGROUND_SEARCH or FOREGROUND_SEARCH flag as appropriate, the restriction, and the entry identifier of the folder in which to search.</li>
<li>
Retrieve the search results by opening the search-results folder's contents table and querying the rows. You can process this incrementally or wait for an <i>fnevSearchComplete</i> notification from the message store.</li>
</ol>
<p>
</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To create a search-results folder using the MAPI client interface</h5>
<ol>
<li>
Locate and open the target message store. See <a href="consider_54yt.htm">Opening a Message Store</a> or <a href="consider_77j9.htm">Opening the Default Message Store</a>.</li>
<li>
Retrieve the message store's <a href="propa_3gro.htm">PR_FINDER_ENTRYID</a> property — the entry identifier of the root search-results folder.</li>
<li>
Open the root search-results folder by calling <a href="inter031_3se1.htm"><b>IMsgStore::OpenEntry</b></a> with the entry identifier from the PR_FINDER_ENTRYID property. </li>
<li>
Create a new folder in the root search-result folder by calling the root folder's <a href="inter013_9tpu.htm"><b>IMAPIFolder::CreateFolder</b></a> method. Set the <i>ulFolderType</i> parameter to FOLDER_SEARCH. See <a href="extend_6b8z.htm">Search-Results Folders</a>.</li>
</ol>
<p>
</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To locate an existing search-results folder using the Active Messaging Library</h5>
<ol>
<li>
Locate and open the target message store using the Session.InfoStores collection. An InfoStore object provides access to the root folder for a message store. </li>
<li>
Retrieve the folder's <b>FolderID</b> property to identify its parent folder and pass this identifier in a call to Session.GetFolder to open the parent folder.</li>
<li>
Work up through the folder hierarchy by repeating the previous step until the <b>FolderID</b> property is the same in two sequential iterations. When this occurs, you will be at the root folder of the message store. </li>
<li>
Retrieve the Folders collection and browse for the folder whose name is Search Root. MAPI always creates a folder by that name when it initializes a message store. </li>
<li>
Retrieve the root search-results folder's Folders collection and browse for your own search-results folder by name.</li>
</ol>
<p>
</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To locate an existing search-results folder using the MAPI client interface</h5>
<ol>
<li>
Locate and open the target message store. See <a href="consider_54yt.htm">Opening a Message Store</a> or <a href="consider_77j9.htm">Opening the Default Message Store</a>.</li>
<li>
Retrieve the message store's <a href="propa_3gro.htm">PR_FINDER_ENTRYID</a> property — the entry identifier of the root search-results folder.</li>
<li>
Open the root search-results folder by calling <a href="inter031_3se1.htm"><b>IMsgStore::OpenEntry</b></a> with the entry identifier from the PR_FINDER_ENTRYID property. </li>
<li>
Access the folder's hierarchy table by calling <b>IMAPIFolder::GetHierarchyTable</b>.</li>
<li>
Look for a row in the table that has a <a href="propa_0vhh.htm">PR_FOLDER_TYPE</a> column set to FOLDER_SEARCH and a <a href="propa_1yjp.htm">PR_DISPLAY_NAME</a> column set to Search Root. MAPI always creates a folder by that name when it initializes a message store.</li>
</ol>
<p>
</p>
<h4>About Sample Source Code</h4>
<p>
See the following topic:</p>
<p class=indent1>
<a href="start_0n8y.htm">Sample Messaging Hook Provider</a></p>
<p>&nbsp;</p></body>
</HTML>
