<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPIFormFactory::CreateClassFactory</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapiformfactory_createclassfactory"></a>IMAPIFormFactory::CreateClassFactory</h2>
<p>
The <b>IMAPIFormFactory::CreateClassFactory</b> method returns a class factory object for the form.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter017_6ppq.htm"><b>IMAPIFormFactory : IUnknown</b></a>.</p>
<pre><code><b>HRESULT CreateClassFactory(
  REFCLSID</b><i> clsidForm</i><b>,</b>                   
<b>  ULONG</b><i> ulFlags</i><b>,</b>                        
<b>  LPCLASSFACTORY FAR *</b><i> lppClassFactory  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>clsidForm</i></dt>
<dd>
[in] Class identifier for the form to be created by the class factory.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
Reserved; must be zero.</dd>
<dt>
<i>lppClassFactory</i></dt>
<dd>
[out] Pointer to the class factory object.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The class factory object was returned.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Form viewers call the <b>IMAPIFormFactory::CreateClassFactory</b> method to obtain a class factory for a specific form. The class factory is used to create instances of a form that handles messages of a specific class and to control the access to these instances.</p>
<p>
The <b>CreateClassFactory</b> method is called by form viewers to obtain a class factory object for form servers that implement multiple message classes. This method receives a class identifier (CLSID) as a parameter. Based on that parameter, this method can determine the specific kind of class factory object to return. </p>
<h4>Notes to Implementers</h4>
<p>
You can return from your <b>CreateClassFactory</b> implementation the same class factory object on multiple calls for the same class identifier. Creating a new class factory instance is not required. </p>
<p>
You can have a single class factory implementation that creates appropriate class factory instances on demand, or multiple class factory implementations, one for each message class.</p>
<p>&nbsp;</p></body>
</HTML>
