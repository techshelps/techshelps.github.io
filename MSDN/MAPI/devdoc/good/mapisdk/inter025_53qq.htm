<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISupport::RegisterPreprocessor</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisupport_registerpreprocessor"></a>IMAPISupport::RegisterPreprocessor</h2>
<p>
The <b>IMAPISupport::RegisterPreprocessor</b> method registers a transport provider's preprocessor function — a function that conforms to the <a href="function_82lh.htm"><b>PreprocessMessage</b></a> prototype.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter025_8uge.htm"><b>IMAPISupport : IUnknown</b></a>.</p>
<pre><code><b>HRESULT RegisterPreprocessor(
  LPMAPIUID</b><i> lpMuid</i><b>,</b>                 
<b>  LPTSTR</b><i> lpszAdrType</i><b>,</b>               
<b>  LPTSTR</b><i> lpszDLLName</i><b>,</b>               
<b>  LPSTR</b><i> lpszPreprocess</i><b>,</b>             
<b>  LPSTR</b><i> lpszRemovePreprocessInfo</i><b>,</b>   
<b>  ULONG</b><i> ulFlags                     </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpMuid</i></dt>
<dd>
[in] Pointer to the <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> structure containing the identifier that the preprocessor function handles. The <i>lpMuid</i> parameter can be NULL.</dd>
<dt>
<i>lpszAdrType</i></dt>
<dd>
[in] Pointer to the address type for the messages the function operates on, such as FAX, SMTP, or X500. The <i>lpszAdrType</i> parameter can be NULL.</dd>
<dt>
<i>lpszDLLName</i></dt>
<dd>
[in] Pointer to the name of the dynamic-link library (DLL) containing the entry point for the preprocessor function.</dd>
<dt>
<i>lpszPreprocess</i></dt>
<dd>
[in] Pointer to the name of the preprocessor function. The <i>lpszPreprocess</i> parameter can be NULL.</dd>
<dt>
<i>lpszRemovePreprocessInfo</i></dt>
<dd>
[in] Pointer to the name of the function that removes preprocessor information — a function that conforms to the <a href="function_7gq7.htm"><b>RemovePreprocessInfo</b></a> prototype. The <i>lpszRemovePreprocessInfo</i> parameter can be NULL.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
Reserved; must be zero. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The preprocessor function was successfully registered.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISupport::RegisterPreprocessor</b> method is implemented for transport provider support objects only. Transport providers call <b>RegisterPreprocessor</b> to register a preprocessor function — a function that conforms to the <a href="function_82lh.htm"><b>PreprocessMessage</b></a> prototype. A preprocessor function must be registered before it can be called by the MAPI spooler. </p>
<p>
The <i>lpszPreprocess</i>, <i>lpszRemovePreprocessInfo</i> and <i>lpszDLLName</i> parameters should all point to strings that can be used in conjunction with calls to the Win32 <b>GetProcAddress</b> function, allowing the preprocessor's DLL entry point to be called correctly.</p>
<h4>Notes to Callers</h4>
<p>
Calls to preprocessors are specific to transport provider order. This means that if another transport provider ahead of your provider is able to handle a message, your preprocessor function will not get called for that message. Your preprocessor function will only be called for messages that you will handle.</p>
<p>
Preprocessor functions can be written to handle either a specific identifier stored in a <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> structure or a type of address. If you specify both a <b>MAPIUID</b> structure in the <i>lpMuid</i> parameter and an address type in <i>lpszAdrType</i>, your function will be called for message recipients that match either the <b>MAPIUID</b> or the address type. If <i>lpMuid</i> is NULL and <i>lpszAdrType</i> is non-null, your function will be called only for recipients with an address that matches the type pointed to by <i>lpszAdrType</i>. If <i>lpMuid</i> is non-null and <i>lpszAdrType</i> is NULL, your function will be called for recipients that match <b>MAPIUID</b>, regardless of their address type. If both are NULL, your function is called for all recipients of the message.</p>
<h4>See Also</h4>
<p>
<a href="structyp_3p9g.htm"><b>MAPIUID</b></a>, <a href="function_82lh.htm"><b>PreprocessMessage</b></a>, <a href="function_7gq7.htm"><b>RemovePreprocessInfo</b></a></p>
<p>&nbsp;</p></body>
</HTML>
