<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SContentRestriction</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_scontentrestriction"></a>SContentRestriction</h2>
<p>
The <b>SContentRestriction</b> structure describes a content restriction, which is used to limit a table view to only those rows that include a column with contents matching a search string. </p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>MAPIDEFS.H</td>
</tr>
</table><br>
<pre><code>typedef struct _SContentRestriction 
{ 
     ULONG        ulFuzzyLevel; 
     ULONG        ulPropTag; 
     LPSPropValue lpProp; 
} SContentRestriction; 
 </code></pre>
<h4>Members </h4>
<dl>
<dt>
<b>ulFuzzyLevel </b></dt>
<dd>
Option settings defining the level of preciseness that the content restriction should enforce when checking for a match. 
<p>
The lower 16 bits of the <b>ulFuzzyLevel</b> member apply to properties of type PT_BINARY and PT_STRING8 and must be set to one of the following values: 

<dl>
<dt>
FL_FULLSTRING </dt>
<dd>
To match, the <b>lpProp</b> search string must be completely contained in the property identified by <b>ulPropTag</b>.</dd>
<dt>
FL_PREFIX </dt>
<dd>
To match, the <b>lpProp</b> search string must appear at the beginning of the property identified by <b>ulPropTag</b>. The two strings should be compared only up to the length of the search string indicated by <b>lpProp</b>. </dd>
<dt>
FL_SUBSTRING </dt>
<dd>
To match, the <b>lpProp</b> search string must be contained anywhere within the property identified by <b>ulPropTag</b>. </dd>
</dl>

<p>
The upper 16 bits of the <b>ulFuzzyLevel</b> member apply only to properties of type PT_STRING8 and can be set to the following values in any combination:

<dl>
<dt>
FL_IGNORECASE </dt>
<dd>
The comparison should be made without considering case. </dd>
<dt>
FL_IGNORENONSPACE </dt>
<dd>
The comparison should ignore Unicode-defined nonspacing characters such as diacritical marks. </dd>
<dt>
FL_LOOSE </dt>
<dd>
The comparison should result in a match whenever possible, ignoring case and nonspacing characters. </dd>
</dl>
</dd>
<dt>
<b>ulPropTag </b></dt>
<dd>
Property tag identifying the string property to be checked for occurrence of the search string. </dd>
<dt>
<b>lpProp </b></dt>
<dd>
Pointer to a property value structure containing the string value to use as the search string.
</dd>
</dl>
<h4>Remarks </h4>
<p>
There are two property tags in an <b>SContentRestriction</b> structure: one in the <b>ulPropTag</b> member and the other in the <b>ulPropTag</b> member of the <b>SPropValue</b> structure pointed to by <b>lpProp</b>. In both tags, MAPI requires only the property type field and ignores the property identifier field. However, the two property types must match, or else the error value MAPI_E_TOO_COMPLEX is returned when the restriction is used in a call to <a href="inter026_43lg.htm"><b>IMAPITable::Restrict</b></a> or <a href="inter026_2lkn.htm"><b>IMAPITable::FindRow</b></a>.  </p>
<p>
The values FL_FULLSTRING, FL_PREFIX, and FL_SUBSTRING are mutually exclusive. Only one of them can be set, and one of them must be set. Their meanings are fixed, and the provider must implement them exactly as defined. The provider should return MAPI_E_TOO_COMPLEX if it is unable to support these values. </p>
<p>
The values FL_IGNORECASE, FL_IGNORENONSPACE, and FL_LOOSE are independent. Anywhere from zero to all three of them can be set. Their definitions are provided as a guideline only, and the provider is free to implement its own specific meaning of each flag. The provider should not return any error indication if it has no implementation of a specified flag. </p>
<p>
The result of a content restriction imposed against a property is undefined when the property does not exist. When a client requires well-defined behavior for such a restriction and is not sure whether the property exists — for example, it is not a required column of a table — it should create an <b>AND</b> restriction to join the content restriction with an exist restriction. Use an <a href="structyp_7qy6.htm"><b>SExistRestriction</b></a> structure to define the exist restriction and an <a href="structyp_0v1q.htm"><b>SAndRestriction</b></a> structure to define the <b>AND</b> restriction.</p>
<p>
For more information on the <b>SContentRestriction</b> structure and restrictions in general, see <a href="tables_0qyb.htm">About Restrictions</a>.</p>
<h4>See Also </h4>
<p>
<a href="groups_3dpv.htm">Restriction Structures</a>, <a href="structyp_9sbp.htm"><b>SPropValue</b></a>,<b> <a href="structyp_45ny.htm">SRestriction</a></b> </p>
<p>&nbsp;</p></body>
</HTML>
