<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CALLERRELEASE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_callerrelease"></a>CALLERRELEASE</h2>
<p>
The <b>CALLERRELEASE</b> function prototype defines a callback function that can release a table data object when a table view is being released. </p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIUTIL.H </td>
</tr>
<tr valign=top>
<td width=48%>Defined function implemented by: </td>
<td width=52%>Client applications and service providers </td>
</tr>
<tr valign=top>
<td width=48%>Defined function called by: </td>
<td width=52%>MAPI </td>
</tr>
</table><br>
<pre><code><b>void CALLERRELEASE( 
  ULONG</b><i> ulCallerData</i><b>,     </b>
<b>  LPTABLEDATA</b><i> lpTblData</i><b>,  </b>
<b>  LPMAPITABLE</b><i> lpVue       </i>
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>ulCallerData </i></dt>
<dd>
[in] 32-bit caller data saved by MAPI with the table view and passed to the <b>CALLERRELEASE</b> – based callback function. The data provides context about the table view being released. </dd>
<dt>
<i>lpTblData </i></dt>
<dd>
[in] Pointer to the <a href="inter040_3s4u.htm"><b>ITableData : IUnknown</b></a> interface for the table data object underlying the table view being released. </dd>
<dt>
<i>lpVue </i></dt>
<dd>
[in] Pointer to the <a href="inter026_44ry.htm"><b>IMAPITable : IUnknown</b></a> interface for the table view being released. This is an interface for the table object returned in the <i>lppMAPITable</i> parameter of the <a href="inter040_2y0n.htm"><b>ITableData::HrGetView</b></a> method that created the object to release. 
</dd>
</dl>
<h4>Return Values </h4>
<p>
None </p>
<h4>Remarks </h4>
<p>
A client application or service provider that has populated a table data object can call <a href="inter040_2y0n.htm"><b>ITableData::HrGetView</b></a> to create a read-only, sorted view of the table. The call to <b>HrGetView</b> passes a pointer to a <b>CALLERRELEASE</b> – based callback function and also a 32-bit context to be saved with the table view. When the reference count of the table view returns to zero and the view is being released, the <b>IMAPITable</b> implementation calls the callback function, passing the 32-bit context in the <i>ulCallerData</i> parameter. </p>
<p>
A common use of a <b>CALLERRELEASE</b> based callback function is to release the underlying table data object and not have to keep track of it during subsequent processing. </p>
<p>&nbsp;</p></body>
</HTML>
