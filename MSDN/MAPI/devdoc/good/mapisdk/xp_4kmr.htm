<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Configuration Property Sheets with Transport Providers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_displaying_configuration_property_sheets_with_transport_providers"></a>Displaying Configuration Property Sheets with Transport Providers</h2>
<p>
Transport providers use the <a href="inter025_9s1g.htm"><b>IMAPISupport::DoConfigPropSheet</b></a> method to implement configuration property sheets. When calling <b>DoConfigPropSheet</b>, the transport provider passes in a pointer to an array of properties along with information about how to display them. MAPI then presents the properties to the user by means of a standard dialog box. You are strongly encouraged to use this property sheet mechanism when implementing your transport provider due to the benefit to the user of a consistent interface.</p>
<p>
Transport providers can use the <b>BuildDisplayTable</b> function to simplify construction of a display table for use with <b>DoConfigPropSheet</b>. Transport providers targeted at the Win32 platform only can also use the property sheet API directly. To buffer changes to the properties, transport providers can use the <b>CreateIProp</b> function. This simplifies the handling of cancellations by the user while the user modifies the values stored in the properties. If necessary, a transport provider can also provide a wizard dialog box to simplify configuration tasks for the user.</p>
<p>&nbsp;</p></body>
</HTML>
