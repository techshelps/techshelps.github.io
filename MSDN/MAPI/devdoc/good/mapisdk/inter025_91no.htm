<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISupport::SetProviderUID</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisupport_setprovideruid"></a>IMAPISupport::SetProviderUID</h2>
<p>
The <b>IMAPISupport::SetProviderUID</b> method registers a <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> structure that uniquely represents the service provider.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter025_8uge.htm"><b>IMAPISupport : IUnknown</b></a>.</p>
<pre><code><b>HRESULT SetProviderUID(
  LPMAPIUID</b><i> lpProviderID</i><b>,</b>   
<b>  ULONG</b><i> ulFlags             </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpProviderID</i></dt>
<dd>
[in] Pointer to the <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> structure identifying the address book or message store provider.</dd>
<dt>
<i>ulFlags</i></dt>
<dd>
Reserved; must be zero.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The <b>MAPIUID</b> structure was successfully registered.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISupport::SetProviderUID</b> method is implemented for address book and message store provider support objects. These providers call <b>SetProviderUID</b> to register a unique identifier described in the <a href="structyp_3p9g.htm"><b>MAPIUID</b></a> structure pointed to by <i>lpProviderID</i>. Providers include this identifier in all of the entry identifiers that they create. </p>
<p>
MAPI uses the <b>MAPIUID</b> when sending outbound messages to the MAPI spooler and to determine the appropriate provider for handling client requests. For example, when a client calls <b>IMAPISession::OpenEntry</b>, MAPI examines the <b>MAPIUID</b> portion of the entry identifier, maps it to the provider that passed it to <b>SetProviderUID</b>, and calls that provider's <b>OpenEntry</b>. </p>
<h4>Notes to Callers</h4>
<p>
Call <b>SetProviderUID</b> at logon time to register your <b>MAPIUID</b> structure. MAPI allows address book and message store providers to register multiple identifiers. When you make multiple calls to <b>SetProviderUID</b>, it always adds the <b>MAPIUID</b> structure to the provider's set of <b>MAPIUID</b>s, even if the <b>MAPIUID</b> is a duplicate. <b>SetProviderUID</b> cannot remove a <b>MAPIUID</b>. </p>
<h4>See Also</h4>
<p>
<a href="structyp_3p9g.htm"><b>MAPIUID</b></a></p>
<p>&nbsp;</p></body>
</HTML>
