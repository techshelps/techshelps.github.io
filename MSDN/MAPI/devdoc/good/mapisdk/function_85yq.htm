<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAPIFreeBuffer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_mapifreebuffer"></a>MAPIFreeBuffer</h2>
<p>
The <b>MAPIFreeBuffer</b> function frees a memory buffer allocated with a call to the <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a> function or the <a href="function_11wl.htm"><b>MAPIAllocateMore</b></a> function. </p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIX.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Client applications and service providers </td>
</tr>
</table><br>
<pre><code><b>ULONG<i> </i>MAPIFreeBuffer(
  LPVOID</b><i> lpBuffer  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpBuffer</i></dt>
<dd>
[in] Pointer to a previously allocated memory buffer. If NULL is passed in the <i>lpBuffer </i>parameter, <b>MAPIFreeBuffer</b> does nothing. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The call succeeded and freed the memory requested. <b>MAPIFreeBuffer</b> can also return S_OK on already freed locations or if memory block is not allocated with <b>MAPIAllocateBuffer</b> and <b>MAPIAllocateMore</b>. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
Usually, when a client application or service provider calls <a href="function_8z3m.htm"><b>MAPIAllocateBuffer</b></a> or <a href="function_11wl.htm"><b>MAPIAllocateMore</b></a>, the operating system constructs in one contiguous memory buffer one or more complex structures with multiple levels of pointers. When a MAPI function or method creates a buffer with such contents, a client can later free all the structures contained in the buffer by passing to <b>MAPIFreeBuffer</b> the pointer to the buffer returned by the MAPI function that created the buffer. For a service provider to free a memory buffer using <b>MAPIFreeBuffer</b>, it must pass the pointer to that buffer returned with the provider's support object. </p>
<p>
The call to <b>MAPIFreeBuffer</b> to free a particular buffer must be made as soon as a client or provider is finished using this buffer. Simply calling the <a href="smapiref_9oiu.htm"><b>MAPILogoff</b></a> function at the end of a MAPI session does not automatically release memory buffers. </p>
<p>
A client or service provider should operate on the assumption that the pointer passed in <i>lpBuffer </i>is invalid after a successful return from <b>MAPIFreeBuffer</b>. If the pointer indicates either a memory block not allocated by the messaging system through <b>MAPIAllocateBuffer</b> or <b>MAPIAllocateMore</b> or a free memory block, the behavior of <b>MAPIFreeBuffer</b> is undefined. </p>
<p>
<b>Note</b>  Passing a null pointer to <b>MAPIFreeBuffer</b> makes application cleanup code simpler and smaller because <b>MAPIFreeBuffer</b> can initialize pointers to NULL and then free them in the cleanup code without having to test them first. </p>
<p>
<b>MAPIFreeBuffer</b> is exported, with a slightly different syntax, by both Simple MAPI and MAPI. For Simple MAPI, it is an entry point function. </p>
<h4>See Also </h4>
<p>
<a href="groups_1bhv.htm">Memory Management Functions</a>, <a href="inter025_8v5f.htm"><b>IMAPISupport::GetMemAllocRoutines</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
