<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HrComposeMsgID</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_hrcomposemsgid"></a>HrComposeMsgID</h2>
<p>
The <b>HrComposeMsgID</b> function creates an ASCII string representing a compound entry identifier for an object, usually a message in a message store. </p>
<p>
<b>Note</b>  This function may not be supported in future versions of MAPI.</p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIUTIL.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Client applications </td>
</tr>
</table><br>
<pre><code><b>HrComposeMsgID(
  LPMAPISESSION</b><i> psession</i><b>,</b>   
<b>  ULONG</b><i> cbStoreRecordKey</i><b>,</b>   
<b>  LPBYTE</b><i> pStoreRecordKey</i><b>,</b>   
<b>  ULONG</b><i> cbMsgEID</i><b>,</b>        
<b>  LPENTRYID</b><i> pMsgEID</i><b>,</b>     
<b>  LPTSTR FAR *</b><i> pszMsgID  </i>
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>psession </i></dt>
<dd>
[in] Pointer to the session in use by the client application. </dd>
<dt>
<i>cbStoreRecordKey </i></dt>
<dd>
[in] Size, in bytes, of the record key of the message store containing the message or other object. If zero is passed in the <i>cbStoreRecordKey</i> parameter, the <i>pszMsgID</i> parameter points to a copy of the entry identifier converted to text. </dd>
<dt>
<i>pStoreRecordKey </i></dt>
<dd>
[in] Pointer to the record key of the message store containing the message or other object. </dd>
<dt>
<i>cbMsgEID </i></dt>
<dd>
[in] Size, in bytes, of the entry identifier of the message or other object. </dd>
<dt>
<i>pMsgEID </i></dt>
<dd>
[in] Pointer to the entry identifier of the object. </dd>
<dt>
<i>pszMsgID </i></dt>
<dd>
[out] Pointer to the returned ASCII string. If the <i>cbStoreRecordKey </i>parameter is greater than zero, the <i>pszMsgID </i>parameter points to a compound entry identifier converted to text. If <i>cbStoreRecordKey</i> is zero, <i>pszMsgID</i> points to a noncompound entry identifier converted to text. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
If the message or other object for which the compound entry identifier is being created resides in a message store, the identifier string is created from the object's entry identifier and the store's record key. If the object is not in a store, that is, if the byte count for the store record key passed in the <i>cbStoreRecordKey</i> parameter is zero, the object's entry identifier is simply copied and converted into a string. </p>
<p>
Calling the <b>HrComposeMsgID</b> function is equivalent to calling the <a href="function_1hk4.htm"><b>HrComposeEID</b></a> function and then the <a href="function_7s4k.htm"><b>HrSzFromEntryID</b></a> function. </p>
<p>
<b>HrComposeMsgID</b> enables client applications based on Simple MAPI and OLE to work with objects in multiple stores through the use of compound entry identifiers. An application can call the <a href="function_3wv8.htm"><b>HrDecomposeMsgID</b></a> function to split the compound entry identifier into its original constituents. </p>
<h4>See Also</h4>
<p>
<a href="groups_1jlf.htm">Entry Identifier Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
