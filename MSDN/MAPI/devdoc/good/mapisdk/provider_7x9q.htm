<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing a Service Provider Entry Point Function</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_implementing_a_service_provider_entry_point_function"></a>Implementing a Service Provider Entry Point Function</h2>
<p>
Every service provider DLL has an entry point function that MAPI calls to load it. Be aware that this entry point function is not the same as <b>DllEntryPoint</b>, the Win32 DLL entry point function. For information about Win32 DLL entry point functions, see the <i>Win32 Programmer's Reference</i>. </p>
<p>
Depending on the type of your provider, your provider entry point function conforms to a different prototype. MAPI defines four different entry point function prototypes for service providers:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Address book providers</th>
<th align=left width=52%><a href="function_1sqc.htm">ABProviderInit</a> </th>
</tr>
<tr valign=top>
<td width=48%>Message store providers</td>
<td width=52%><a href="function_7zxw.htm"><b>MSProviderInit</b></a> </td>
</tr>
<tr valign=top>
<td width=48%>Transport providers</td>
<td width=52%><a href="function_0wc4.htm"><b>XPProviderInit</b></a> </td>
</tr>
<tr valign=top>
<td width=48%>Messaging hook providers</td>
<td width=52%><a href="function_4y7o.htm"><b>HPProviderInit</b></a></td>
</tr>
</table><br>
<p>
Much of the functionality in these prototypes is the same for all service provider types. Messaging hook providers do not implement the same functionality as the other providers. Whereas the other providers instantiate provider and logon objects, messaging hook providers instantiate spooler hook objects, or objects that implement the <a href="inter039_9q5q.htm"><b>ISpoolerHook</b></a> interface. </p>
<p>
Address book, message store, and transport providers perform these two main tasks in their entry point functions:
<ol>
<li>
Check the version of the service provider interface (SPI) to make sure MAPI is using a version that is compatible with the version that your service provider is using. Use the <i>lpulMAPIVer</i> parameter, which contains the MAPI SPI version, and the <i>lpulProviderVer</i> parameter, which contains your SPI version, to perform the check. <p>
These parameters are 32-bit unsigned integers composed of three parts:  
</li>
</ol>
<ul>
<li>
Bits 24-31 represent the major version.</li>
<li>
Bits 16-23 represent the minor version.</li>
<li>
Bits 0-15 represent the micro version.<p>
Although the major version number rarely changes, the minor version number changes whenever MAPI is released and the SPI has changed. The micro version is the Microsoft internal build version; it is used to track changes during the development process. 
<p>
MAPI defines the CURRENT_SPI_VERSION constant, documented in the MAPISPI.H header file, for indicating the present SPI version. Fail your check with the error MAPI_E_VERSION if you are using a version of the SPI that is newer than the version that MAPI is using. 
</li>
</ul>
<ol start=2>
<li>
Instantiate a provider object. Because your provider can be started and initialized multiple times, you should instantiate a separate object each time this occurs. Providers are started multiple times when they appear in multiple profiles that are in use simultaneously by one or more clients or when they appear multiple times in a single profile.<p>
Just as the entry point function prototype differs depending on the type of your provider, so does the type of provider object. If you are writing an address book provider, implement <a href="inter005_5wdq.htm"><b>IABProvider</b></a>.
<p>
If you are writing a message store provider, implement <a href="inter033_42pa.htm"><b>IMSProvider</b></a>. See <a href="storearc_32lv.htm">Loading Message Store Providers</a>. 
<p>
If you are writing a transport provider, implement <a href="inter043_3zji.htm"><b>IXPProvider</b></a>. See <a href="xp_3yr6.htm">Initializing the Transport Provider</a>.
</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
