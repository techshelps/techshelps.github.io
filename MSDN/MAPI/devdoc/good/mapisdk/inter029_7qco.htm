<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMessage::OpenAttach</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imessage_openattach"></a>IMessage::OpenAttach</h2>
<p>
The <b>IMessage::OpenAttach</b> method opens an attachment. </p>
<h4>Quick Info</h4>
<p>
See <a href="inter029_525s.htm"><b>IMessage : IMAPIProp</b></a>.</p>
<pre><code><b>HRESULT OpenAttach(
  ULONG</b><i> ulAttachmentNum</i><b>,</b>   
<b>  LPCIID</b><i> lpInterface</i><b>,</b>   
<b>  ULONG</b><i> ulFlags</i><b>,</b>        
<b>  LPATTACH FAR *</b><i> lppAttach  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulAttachmentNum</i></dt>
<dd>
[in] Index number of the attachment to open, as stored in the attachment's <a href="propa_0p4d.htm">PR_ATTACH_NUM</a> property. This index number uniquely identifies the attachment in the message and is valid only in the context of the message.</dd>
<dt>
<i>lpInterface</i></dt>
<dd>
[in] Pointer to the interface identifier (IID) representing the interface to be used to access the attachment. Passing NULL results in the attachment's standard interface, or <b>IAttach</b>, being returned. </dd>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls how the attachment is opened. The following flags can be set:
<dl>
<dt>
MAPI_BEST_ACCESS</dt>
<dd>
Requests that the attachment be opened with the maximum network permissions allowed for the user and the maximum client application access. For example, if the client has read/write access, the attachment should be opened with read/write access; if the client has read-only access, the attachment should be opened with read-only access. </dd>
<dt>
MAPI_DEFERRED_ERRORS</dt>
<dd>
Allows <b>OpenAttach</b> to return successfully, possibly before the attachment is fully accessible to the calling client. If the attachment is not accessible, making a subsequent call to it can result in an error.</dd>
<dt>
MAPI_MODIFY</dt>
<dd>
Requests read/write access. By default, attachments are opened with read-only access, and clients should not work on the assumption that read/write access has been granted. </dd>
</dl>
</dd>
<dt>
<i>lppAttach</i></dt>
<dd>
[out] Pointer to a pointer to the open attachment.
</dd>
</dl>
<h4>Return Value</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The attachment was successfully opened.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMessage::OpenAttach</b> method opens a message's attachment.</p>
<h4>Notes to Callers</h4>
<p>
To open an attachment, you must have access to its attachment number — or <a href="propa_0p4d.htm">PR_ATTACH_NUM</a> property. Call <a href="inter029_24it.htm"><b>IMessage::GetAttachmentTable</b></a> to retrieve the message's attachment table and locate the row that represents the attachment to be opened. See <a href="consider_6hh0.htm">Opening an Attachment</a> for more information.</p>
<p>
Do not try to open one attachment multiple times; the results are undefined and dependent on the message store provider.</p>
<p>
You can request that the attachment be opened in read/write mode, rather than the default read-only mode. However, whether or not the attachment will actually be opened in read/write mode is up to the message store provider. You can either attempt to modify the attachment, preparing to handle possible failure, or check the level of access that was granted by retrieving the attachment's <a href="propa_4w8c.htm">PR_ACCESS_LEVEL</a> property, if it is available. </p>
<p>&nbsp;</p></body>
</HTML>
