<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transport Provider-MAPI Spooler Operational Model</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_transport_provider_mapi_spooler_operational_model"></a>Transport Provider-MAPI Spooler Operational Model</h2>
<p>
Transport provider initialization, startup, processing, shutdown and deinitialization are accomplished by a series of calls from the MAPI spooler to the transport provider. The calls are sequenced as follows:
<ol>
<li>
The MAPI spooler calls the <a href="function_0wc4.htm"><b>XPProviderInit</b></a><b> </b>function, passes a support object, gets the provider object, and checks that the provider and MAPI spooler support a compatible range of MAPI version numbers.</li>
<li>
The MAPI spooler calls the <a href="inter043_2r72.htm"><b>IXPProvider::TransportLogon</b></a> method of the XPProvider object. A session is established between the MAPI spooler and the transport with the credentials in the current section of the profile. The provider returns a logon object.</li>
<li>
The MAPI spooler calls the <a href="inter042_0xbn.htm"><b>IXPLogon::AddressTypes</b></a> method. The transport returns a list of the unique identifiers (UIDs) and e-mail address types it will accept.</li>
<li>
The MAPI spooler calls the <a href="inter042_8gvn.htm"><b>IXPLogon::RegisterOptions</b></a> method for recipient options. The transport returns a list of the available per-recipient options for any of the e-mail address types that it returned in the <b>IXPLogon::AddressTypes</b> call.</li>
<li>
The MAPI spooler calls <b>RegisterOptions</b> for message options. The transport returns a list of the available per-message options for any of the e-mail address types that it returned in the <b>IXPLogon::AddressTypes</b> call.</li>
<li>
The transport calls the <a href="inter025_0oxj.htm"><b>IMAPISupport::ModifyStatusRow</b></a> method to create its row in the MAPI status table.</li>
<li>
The MAPI spooler calls the <a href="inter042_5cah.htm"><b>IXPLogon::TransportNotify</b></a> method to enable message transmission and reception.</li>
<li>
If requested by the transport provider in its return for the <b>TransportLogon</b> call, the MAPI spooler periodically calls the <a href="inter042_250l.htm"><b>IXPLogon::Idle</b></a> method. Idle processing is useful if the transport provider needs to poll the underlying messaging system for new messages or perform other low-priority tasks.</li>
<li>
The MAPI spooler and transport send and receive messages (see <a href="xp_1ru4.htm">Message Submission Model</a> and <a href="xp_38h8.htm">Message Reception Model</a>). The MAPI spooler services transport requests and calls on support, message, and attachment objects.</li>
<li>
The MAPI spooler calls the <b>TransportNotify</b> method to disable message transmission and reception.</li>
<li>
The MAPI spooler releases the logon and provider objects. See <a href="inter043_4p0u.htm"><b>IXPProvider::Shutdown</b></a>.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
