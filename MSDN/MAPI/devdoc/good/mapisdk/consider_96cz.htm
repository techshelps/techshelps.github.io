<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sort Tables after Setting Columns and Restrictions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_sort_tables_after_setting_columns_and_restrictions"></a>Sort Tables after Setting Columns and Restrictions</h2>
<p>
When you need to limit the view of a sorted table, always make the following <b>IMAPITable</b> calls in the following order:
<ol>
<li>
<a href="inter026_7x83.htm"><b>IMAPITable::SetColumns</b></a> to define the column set.</li>
<li>
<a href="inter026_43lg.htm"><b>IMAPITable::Restrict</b></a> to impose the restriction.</li>
<li>
<a href="inter026_3gmd.htm"><b>IMAPITable::SortTable</b></a> to perform the sort.</li>
</ol>
<p>
If the sorted table is categorized, make a call to <a href="inter026_74v9.htm"><b>SetCollapseState</b></a> if necessary after the <b>SortTable</b> call. This ordering of calls is important because most service providers sort a table as the last task to achieve the best performance. If, for example, a message store provider must categorize a folder contents table before a restriction can be imposed, this categorization will be removed during the processing of the restriction. A second categorization will be necessary. </p>
<p>&nbsp;</p></body>
</HTML>
