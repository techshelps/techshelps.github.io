<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Logging On and Off: CMC Sample</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_logging_on_and_off_cmc_sample"></a>Logging On and Off: CMC Sample</h2>
<p>
The following code example demonstrates how you can log on and off and use <a href="cmcref_2nu6.htm"><b>cmc_query_configuration</b></a> to get system information.</p>
<pre><code>/* Local variables used */

CMC_return_code Status;
CMC_boolean     UI_available;   /* True if an interface is allowed */
CMC_session_id  Session;

/* Find out if user interface (UI) is available with this 
   implementation before starting.*/

Status = cmc_query_configuration(
              0,                      /* No session handle         */
              CMC_CONFIG_UI_AVAIL,    /* See if UI is available.   */
              (void *)&amp;UI_available,  /* Return value              */
              NULL);                  /* No extensions             */
    /* Error handling */

/* Log onto system using UI. */

Status = cmc_logon(
              NULL,                   /* Default service           */
              NULL,                   /* Prompt for user name      */
              NULL,                   /* Prompt for password       */
              NULL,                   /* Default character set     */
              0,                      /* Default UI ID             */
              CMC_VERSION,            /* Version 1 CMC calls       */
              CMC_LOGON_UI_ALLOWED |  /* Full logon UI             */
              CMC_ERROR_UI_ALLOWED,   /* Use UI to display errors. */
              &amp;Session,               /* Returned session ID       */
              NULL);                  /* No extensions             */
    /* Error handling */

/* Do various CMC calls. */

/* Log off from the implementation. */

Status = cmc_logoff(
              Session,            /* Session ID                    */
              0,                  /* No UI will be used.           */
              0,                  /* No flags                      */
              NULL);              /* No extensions                 */
    /* Error handling */
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
