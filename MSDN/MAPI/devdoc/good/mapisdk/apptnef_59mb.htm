<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>attMAPIProps</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_attmapiprops"></a>attMAPIProps</h2>
<p>
The <b>attMAPIProps</b> attribute is special in that it can be used to encode any MAPI property that does not have a counterpart in the set of existing TNEF-defined attributes. The attribute data is a counted set of MAPI properties laid end-to-end. The format of this encoding, which allows for any set of MAPI properties, is as follows:
<dl>
<dt>
<i>Property_Seq:</i></dt>
<dd>
property-count <i>Property_Value, ...</i>
</dd>
</dl>
<p>
There must be as many <i>Property_Value</i> items as the property-count value indicates.
<dl>
<dt>
<i>Property_Value:</i></dt>
<dd>
property-tag <i>Property</i><br>
property-tag <i>Proptag_Name Property</i>
</dd>
</dl>
<p>
The property-tag is simply the value associated with the property identifier, such as 0x0037001F for <a href="propb_3c8k.htm">PR_SUBJECT</a>.
<dl>
<dt>
<i>Property:</i></dt>
<dd>
<i>Value<br>
</i>value-count <i>Value, ...</i></dd>
<dt>
<i>Value:</i></dt>
<dd>
value-data<br>
value-size value-data padding<br>
value-size value-IID value-data padding</dd>
<dt>
<i>Proptag_Name:</i></dt>
<dd>
name-guid name-kind name-id<br>
name-guid name-kind name-string-length name-string padding
</dd>
</dl>
<p>
The encapsulation of each property varies based on the property identifier and the property type. Property tags, identifiers, and types are defined in the MAPITAGS.H and MAPIDEFS.H header files.</p>
<p>
If the property is a named property, then the property tag is immediately followed by the MAPI property name, consisting of a globally unique identifier (GUID), a type, and either an identifier or a Unicode string.</p>
<p>
Multivalued properties and properties with variable length values, such as the PT_BINARY, PT_STRING8, PT_UNICODE, or PT_OBJECT property types, are treated in the following way. First the number of values, encoded as a 32-bit unsigned long, is placed in the TNEF stream, followed by the individual values. Each property's value-data is encoded as its size in bytes followed by the value-data itself. The value-data is padded out to a 4-byte boundary, although the amount of padding is not included in the value-size.</p>
<p>
If the property is of type PT_OBJECT, the value-size is followed by the interface identifier of the object. The current implementation of TNEF only supports the IID_IMessage, IID_IStorage, and IID_Istream interface identifiers. The size of the interface identifier is included in the value-size.</p>
<p>
If the object is an embedded message (that is, it has a property type of PT_OBJECT and an interface identifier of IID_Imessage), the value data is encoded as an embedded TNEF stream. The actual encoding of an embedded message in TNEF implementation is done by opening a second TNEF object for the original stream and processing the stream inline.</p>
<p>&nbsp;</p></body>
</HTML>
