<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Form Configuration File [Extensions] Section</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_form_configuration_file_extensions_section"></a>Form Configuration File [Extensions] Section</h2>
<p>
The <b>[Extensions]</b> section lists the extended attributes of the form, typically a named property set, which are any attributes beyond the basic ones listed in the <b>[Description]</b> section of the form configuration file. Extended attributes are properties returned from calls to the <b>GetProps</b> method of the <b>IMAPIFormInfo</b> object with the high bit set in the property tag. Client applications can determine a form's extended attributes, if any, by retrieving these tags. To do so, clients call the <a href="inter022_49f7.htm"><b>IMAPIProp::GetIDsFromNames</b></a> method, passing in the names of the form's properties and call the <a href="inter022_44c3.htm"><b>IMAPIProp::GetProps</b></a> method to get the properties.</p>
<p>
Each entry in the <b>[Extensions]</b> section references a subsequent section that has a name with the syntax <b>[Extension</b>.<i>string2</i><b>]</b>.</p>
<p>
<b>[Extensions]<br>
Extension.</b><i>string1</i> = <i>string2</i></p>
<p>
Each extension property section defines one extension attribute using the MAPI named property syntax. The property type must be either PT_LONG or PT_STRING8. Property sets containing named strings are not supported. The format of the <b>[Extension]</b> section is:</p>
<p>
<b>[Extension.</b><i>string2</i><b>]<br>
Type</b> = <i>integer<br>
</i><b>NmidPropset</b> = <i>guid<br>
</i><b>NmidInteger</b> = <i>integer<br>
</i><b>Value</b> = <i>string</i> | <i>integer</i></p>
<p>
An example of an <b>[Extensions]</b> section and a subsequent related section is shown following.</p>
<pre><code>[Extensions] 
Extension.A = 1 
 
[Extension.1] 
Type = 30 
NmidPropset = {00020D0C-0000-0000-C000-000000000046} 
NmidInteger = 1 
Value = 11220000 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
