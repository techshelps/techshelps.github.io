<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CMC_recipient</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_cmc_recipient"></a>CMC_recipient</h2>
<p>
A <b>CMC_recipient</b> structure contains information about a messaging user, either a message recipient or the message sender. </p>
<h4>Quick Info</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>XCMC.H</td>
</tr>
</table><br>
<pre><code>typedef struct { 
     CMC_string     name; 
     CMC_enum      name_type; 
     CMC_string     address; 
     CMC_enum role; 
     CMC_flags recip_flags; 
     CMC_extension *recip_extensions; 
} CMC_recipient; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>name</b></dt>
<dd>
Pointer to a string that identifies the recipient or sender display name. When the CMC implementation resolves the name to an address, it determines whether it should interpret the name as the name of an individual first and then as the name of a group if the individual name is not found, or vice versa, according to the value of the <b>name_type</b> member. </dd>
<dt>
<b>name_type</b></dt>
<dd>
Enumeration that indicates whether the structure contains information for a message recipient or a message sender. Possible values are:
<dl>
<dt>
CMC_TYPE_GROUP</dt>
<dd>
The recipient or sender name belongs to a distribution list.</dd>
<dt>
CMC_TYPE_INDIVIDUAL</dt>
<dd>
The recipient or sender name belongs to an individual messaging user.</dd>
<dt>
CMC_TYPE_UNKNOWN</dt>
<dd>
An unknown recipient or originator name.</dd>
</dl>

<p>
The <b>name_type</b> member is meaningful only if the <b>name</b> member is present. The CMC implementation sets <b>name_type</b> on output. On input, the <b>name_type</b> information can be used by the addressing mechanism in the message service to optimize resolution of the name.
</dd>
<dt>
<b>address</b></dt>
<dd>
Pointer to a recipient or sender address string in a format recognized by the underlying messaging system. CMC does not define the format of the string. This member therefore accommodates any string notations supported by the CMC implementation, as configured at installation.</dd>
<dt>
<b>role</b></dt>
<dd>
Enumeration that indicates the role of the message recipient or sender. Possible values are: 
<dl>
<dt>
CMC_ROLE_AUTHORIZING_USER</dt>
<dd>
The user authorizing the message, in cases of messages sent by proxy or in the name of another user.</dd>
<dt>
CMC_ROLE_BCC</dt>
<dd>
A blind carbon copy (BCC) recipient.</dd>
<dt>
CMC_ROLE_CC</dt>
<dd>
A carbon copy (CC) recipient.</dd>
<dt>
CMC_ROLE_ORIGINATOR</dt>
<dd>
The sender of the message.</dd>
<dt>
CMC_ROLE_TO</dt>
<dd>
A primary recipient.</dd>
</dl>
</dd>
<dt>
<b>recip_flags</b></dt>
<dd>
Bitmask of recipient flags. The following flags can be set: 
<dl>
<dt>
CMC_RECIP_IGNORE</dt>
<dd>
CMC should ignore the specified recipient. This flag is useful for reusing an incoming message's recipient list for a reply. If this flag is set to zero, it indicates that the recipient should not be ignored.</dd>
<dt>
CMC_RECIP_LAST_ELEMENT</dt>
<dd>
The last structure in an array of <a href="#_mapi1book_cmc_recipient"><b>CMC_recipient</b></a><b> </b>structures. The structure with this flag set must be at the end of the array. If this flag is set to zero for any structure, that structure is not the last array element.</dd>
<dt>
CMC_RECIP_LIST_TRUNCATED</dt>
<dd>
CMC has not written all recipient or originator structures requested. The client application uses this flag only for the <a href="cmcref_6kvk.htm"><b>cmc_look_up</b></a> function when the complete list of recipients matching the search name cannot be written. The function only sets this flag in the last structure in the array of <b>CMC_recipient</b> structures. If the flag is set to zero, <b>cmc_look_up</b> has written a complete recipient array.</dd>
</dl>
</dd>
<dt>
<b>recip_extensions</b></dt>
<dd>
Pointer to the first structure in an array of <a href="cmcref_1woe.htm"><b>CMC_extension</b></a> structures that contain the recipient or sender data extensions, if any.
</dd>
</dl>
<h4>Remarks</h4>
<p>
If the underlying messaging system does not support carbon copy recipients, CMC can convert such a recipient to a primary recipient. Services that cannot support blind carbon-copy recipients should reject messages containing them. If a user designates the same recipient in more than one role, the client application should place multiple recipient entries in the recipient list, each differing from the others in role.</p>
<p>
On output, the CMC implementation writes an array of <a href="#_mapi1book_cmc_recipient"><b>CMC_recipient</b></a> structures in a specific order. The message sender's structure should be the first element in the array, followed by the primary, carbon copy, and blind carbon-copy recipient structures grouped together in that order. If there is an authorizing user structure, it should be the final element in the array. The CMC implementation does not require ordering of the <b>CMC_recipient</b> structures on input.</p>
<h4>See Also</h4>
<p>
<a href="cmcref_1woe.htm"><b>CMC_extension</b></a>, <a href="cmcref_6kvk.htm"><b>cmc_look_up</b></a></p>
<p>&nbsp;</p></body>
</HTML>
