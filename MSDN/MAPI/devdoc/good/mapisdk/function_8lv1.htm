<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WrapCompressedRTFStream</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_wrapcompressedrtfstream"></a>WrapCompressedRTFStream</h2>
<p>
The <b>WrapCompressedRTFStream</b> function creates a text stream in uncompressed Rich Text Format (RTF) from the compressed format used in the <a href="propb_7vhg.htm">PR_RTF_COMPRESSED</a> property. </p>
<h4>Quick Info </h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Header file: </td>
<td width=52%>MAPIUTIL.H </td>
</tr>
<tr valign=top>
<td width=48%>Implemented by: </td>
<td width=52%>MAPI </td>
</tr>
<tr valign=top>
<td width=48%>Called by: </td>
<td width=52%>Client applications </td>
</tr>
</table><br>
<pre><code><b>HRESULT WrapCompressedRTFStream(
  LPSTREAM</b><i> lpCompressedRTFStream</i><b>,</b>         
<b>  ULONG</b><i> ulflags</i><b>,</b>                          
<b>  LPSTREAM FAR *</b><i> lpUncompressedRTFStream  </i>
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>lpCompressedRTFStream </i></dt>
<dd>
[in] Pointer to a stream opened on the PR_RTF_COMPRESSED property of a message. </dd>
<dt>
<i>ulFlags </i></dt>
<dd>
[in] Bitmask of option flags for the function. The following flags can be set: 
<dl>
<dt>
MAPI_MODIFY </dt>
<dd>
Whether the client intends to read or write the wrapped stream interface that is returned. </dd>
<dt>
STORE_UNCOMPRESSED_RTF </dt>
<dd>
Uncompressed RTF should be written to the stream pointed to by <i>lpCompressedRTFStream </i></dd>
</dl>
</dd>
<dt>
<i>lpUncompressedRTFStream </i></dt>
<dd>
[out] Pointer to the location where <b>WrapCompressedRTFStream</b> returns a stream for the uncompressed RTF. 
</dd>
</dl>
<h4>Return Values </h4>
<dl>
<dt>
S_OK </dt>
<dd>
The call succeeded and has returned the expected value or values. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
If the MAPI_MODIFY flag is passed in the <i>ulFlags</i> parameter, the <i>lpCompressedRTFStream</i> parameter must already be open for reading and writing. New, uncompressed RTF text should be written into the stream interface returned in <i>lpUncompressedRTFStream</i>. Because it is not possible to append the existing stream, the entire message text must be written. </p>
<p>
If zero is passed in the <i>ulFlags</i> parameter, then <i>lpCompressedRTFStream</i> may be opened read-only. Only the entire message text can be read out of the stream interface returned in <i>lpUncompressedRTFStream;</i> it is not possible to search into the middle of the stream and begin reading. </p>
<p>
<b>WrapCompressedRTFStream</b> assumes that the compressed stream's pointer is set to the beginning of the stream. Certain OLE <b>IStream</b> methods are not supported by the returned uncompressed stream. These include <b>IStream::Clone</b>, <b>IStream::LockRegion</b>, <b>IStream::Revert</b>, <b>IStream::Seek</b>, <b>IStream::SetSize</b>, <b>IStream::Stat</b>, and <b>IStream::UnlockRegion</b>. In order to copy to the entire stream, a read/write loop is needed. </p>
<p>
Because the client writes new RTF in uncompressed format, it should use <b>WrapCompressedRTFStream</b>, rather than directly writing to the stream. RTF-aware clients should search for the STORE_UNCOMPRESSED_RTF flag in the <a href="propb_01t7.htm">PR_STORE_SUPPORT_MASK</a> property and pass it to <b>WrapCompressed RTFStream</b> if it is set. </p>
<h4>See Also </h4>
<p>
<a href="groups_0jn7.htm">RTF Synchronization Functions</a>, <a href="function_4yg3.htm"><b>RTFSync</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
