<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITnef::Finish</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_itnef_finish"></a>ITnef::Finish</h2>
<p>
The <b>ITnef::Finish</b> method finishes processing for all TNEF operations that are queued and waiting. </p>
<h4>Quick Info</h4>
<p>
See <a href="inter041_0ai6.htm"><b>ITnef : IUnknown</b></a>.</p>
<pre><code><b>HRESULT Finish(
  ULONG</b><i> ulFlags</i><b>,</b>                       
<b>  WORD FAR *</b><i> lpKey</i><b>,</b>                    
<b>  LPSTnefProblemArray FAR *</b><i> lpProblem  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulFlags</i></dt>
<dd>
Reserved; must be zero.</dd>
<dt>
<i>lpKey</i></dt>
<dd>
[out] Pointer to the <a href="propa_0p4d.htm">PR_ATTACH_NUM</a> key property of an attachment. The TNEF encapsulation object uses this key to match an attachment to its attachment placement tag within a message. This key should be unique to each attachment.</dd>
<dt>
<i>lpProblem</i></dt>
<dd>
[out] Pointer to a pointer to a returned <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a> structure. The <b>STnefProblemArray</b> structure indicates which properties were not encoded properly, if any. If NULL is passed in the <i>lpProblem</i> parameter, no property problem array is returned. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The call succeeded and has returned the expected value or values.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Transport providers, message store providers, and gateways call the <b>ITnef::Finish</b> method to perform the encoding of all properties for which encoding was requested in calls to the <a href="inter041_267n.htm"><b>ITnef::AddProps</b></a> and <a href="inter041_6mlv.htm"><b>ITnef::SetProps</b></a> methods. If the TNEF object was opened with the TNEF_ENCODE flag for the <a href="function_28ml.htm"><b>OpenTnefStream</b></a> or <a href="function_3qk8.htm"><b>OpenTnefStreamEx</b></a> function, the <b>Finish</b> method encodes the requested properties into the encapsulation stream passed to that object. If the TNEF object was opened with the TNEF_DECODE flag, the <b>Finish</b> method decodes the properties from the TNEF stream and writes them back to the message they belong to.</p>
<p>
After the <b>Finish</b> call, the pointer to the encapsulation stream points to the end of the TNEF data. If the provider or gateway needs to use the TNEF stream data after the <b>Finish</b> call, it must reset the stream pointer to the beginning of the TNEF stream data.</p>
<p>
The TNEF implementation reports TNEF stream encoding problems without halting the <b>Finish </b>process. The <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a> structure returned in <i>lpProblem</i> indicates which TNEF attributes or MAPI properties, if any, could not be processed. The value returned in the <b>scode </b>member of the <b>STnefProblemArray</b> indicates the specific problem. The provider or gateway can work on the assumption that all properties or attributes for which <b>Finish </b>does not return a problem report were processed successfully. </p>
<p>
If a provider or gateway does not work with problem arrays, it can pass NULL in <i>lpProblem;</i> in this case, no problem array is returned. </p>
<p>
The value returned in <i>lpProblem</i> is only valid if the call returns S_OK. When S_OK is returned, the provider or gateway should check the values returned in the <b>STnefProblemArray</b> structure. If an error occurs on the call, then the <b>STnefProblemArray</b> structure is not filled in and the calling provider or gateway should not use or free the structure. If no error occurs on the call, the calling provider or gateway must release the memory for the <b>STnefProblemArray</b> by calling the <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a><b> </b>function.</p>
<h4>See Also</h4>
<p>
<a href="inter041_267n.htm"><b>ITnef::AddProps</b></a>, <a href="function_85yq.htm"><b>MAPIFreeBuffer</b></a>, <a href="function_28ml.htm"><b>OpenTnefStream</b></a>, <a href="function_3qk8.htm"><b>OpenTnefStreamEx</b></a>, <a href="propa_0p4d.htm">PR_ATTACH_NUM</a>, <a href="structyp_8gjd.htm"><b>STnefProblemArray</b></a></p>
<p>&nbsp;</p></body>
</HTML>
