<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMAPISupport::ReadReceipt</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_mapi1book_imapisupport_readreceipt"></a>IMAPISupport::ReadReceipt</h2>
<p>
The <b>IMAPISupport::ReadReceipt</b> method generates a read or nonread report for a message.</p>
<h4>Quick Info</h4>
<p>
See <a href="inter025_8uge.htm"><b>IMAPISupport : IUnknown</b></a>.</p>
<pre><code><b>HRESULT ReadReceipt(
  ULONG</b><i> ulFlags</i><b>,</b>                   
<b>  LPMESSAGE</b><i> lpReadMessage</i><b>,</b>         
<b>  LPMESSAGE FAR *</b><i> lppEmptyMessage  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulFlags</i></dt>
<dd>
[in] Bitmask of flags that controls how the read or nonread report is generated. The following flag can be set:
<dl>
<dt>
MAPI_NON_READ</dt>
<dd>
A nonread report is generated. If MAPI_NON_READ is not set, a read report is generated.</dd>
</dl>
</dd>
<dt>
<i>lpReadMessage</i></dt>
<dd>
[in] Pointer to the message about which the report should be generated.</dd>
<dt>
<i>lppEmptyMessage</i></dt>
<dd>
[in, out] On input, <i>lppEmptyMessage</i> points to a pointer to an empty message. On output, <i>lppEmptyMessage</i> points to a pointer to the report message. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The report was successfully generated.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IMAPISupport::ReadReceipt </b>method is implemented for message store provider support objects only. Message store providers call <b>ReadReceipt</b> to instruct MAPI to generate a read or nonread report for the message pointed to by the <i>lpReadMessage</i> parameter. </p>
<h4>Notes to Callers</h4>
<p>
Call <b>ReadReceipt</b> when the <a href="propb_07qc.htm">PR_READ_RECEIPT_REQUESTED</a> property is set and one of the following conditions is true:
<ul>
<li>
The message has been read.</li>
<li>
The message has been moved.</li>
<li>
The message has been copied.</li>
<li>
The message's <a href="inter029_4x47.htm"><b>IMessage::SetReadFlag</b></a> method has been called.</li>
</ul>
<p>
Do not call <b>ReadReceipt</b> when a message is deleted. </p>
<p>
A read or nonread report should only be sent once for a message. Keep track of a message's read status and do not send multiple reports for a single message.</p>
<p>
If <i>lppEmptyMessage</i> points to a valid report message when MAPI returns from <b>ReadReceipt</b>, call its <a href="inter029_65ut.htm"><b>IMessage::SubmitMessage</b></a> method to send it and then release it by calling its <b>IUnknown::Release </b>method. </p>
<p>
If <b>ReadReceipt</b> fails, the message should be released without being submitted. If you store the message's read status, you can attempt to generate the read or nonread report at a later time.</p>
<p>
You can either hide or display read and nonread reports generated by stores in your folders. Storing read and nonread reports in hidden folders allows you to implement tighter security.</p>
<h4>See Also</h4>
<p>
<a href="inter013_1ttf.htm"><b>IMAPIFolder::DeleteMessages</b></a>, <a href="inter029_65ut.htm"><b>IMessage::SubmitMessage</b></a>, <a href="propb_07qc.htm">PR_READ_RECEIPT_REQUESTED</a></p>
<p>&nbsp;</p></body>
</HTML>
