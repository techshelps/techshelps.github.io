<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Pretesting UNC and LFN Support</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_logo_pretesting_unc_and_lfn_support"></a>Pretesting UNC and LFN Support</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The following sections describe the pretesting for Uniform Naming Convention (UNC) paths and Long File Names (LFNs).</p>
<h3>Test direct network browsing with UNC paths</h3>
<p>
Open a file and then use the Save As command to save the file to a standard server with a Long File Name (LFN) and with various Uniform Naming Convention (UNC) paths (for example, \\ServerName\MySubdirectory\MyLongFileName). 
<ul>
<li>
It should be possible to save and retrieve files without specifically referring to a network drive letter.</li>
</ul>
<h3>Proper handling of LFNs</h3>
<p>
Basically, LFN handling must do the following:
<ul>
<li>
Allow plus signs ( + ), commas ( , ), semicolons ( ; ), equal signs ( = ), and square brackets ( [ ] ) anywhere in the file name.</li>
<li>
Not save leading or trailing spaces. You can test for this by removing the name inserted into the Save As dialog box, pressing the spacebar several times, typing "test", and then pressing the spacebar several more times. Your program should strip the spaces and add an extension, returning the file name "test.<i>ext</i>" (not "    test   .<i>ext</i>").</li>
<li>
Not save question marks.</li>
<li>
Support 255 characters (including the path and extension).</li>
<li>
Save to a UNC path, such as \\Server\Directory\Filename.</li>
<li>
Add an extension before saving a file. For example, "test." should be saved as "test.<i>ext</i>". </li>
</ul>
<h3>Testing proper LFN handling</h3>
<p>
Test each of the allowed file names in the following list. Note that the pound sign ( # ) in the names below is intended to represent a spacebar space:</p>
<pre><code>test
test#test#test#test
test#1234567890</code>[<i>up to a total of 260 characters</i>]</pre>
<p>
You should also test the following list of file names, which should be saved to the hard disk as indicated. Again, the pound sign ( # ) in the names below is intended to represent a spacebar space, and <i>ext</i> is intended to stand for the file extension that is appropriate to your application:</p>
<pre><code>test                (should be saved as "test.<i>ext</i>")
###test             (should be saved as "test.<i>ext</i>")
test###             (should be saved as "test.<i>ext</i>")
test#;#+#,#=#[#]    (saved as "test#;#+#,#=#[#].<i>ext</i>")

\\folder#one\folder#two\folder#three\folder#four\file
</code></pre>
<h3>Testing LFN Handling for Utilities:</h3>
<ul>
<li>
Run the utility (your product), and manipulate several LFN files. </li>
<li>
Open these files both with their LFNs and with their 8.3 aliases, and make sure both relate to the same file.</li>
<li>
Check overall LFN file structure to ensure its integrity has not been damaged.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
