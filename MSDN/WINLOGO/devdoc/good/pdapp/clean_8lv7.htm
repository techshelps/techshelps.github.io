<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Categories</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_zaw_data_categories"></a>Data Categories</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Data on the desktop can be divided into three categories:
<ul>
<li>
<b>Reconstructable Data.</b> This is information that can be regenerated. For example, an application's binaries can be reinstalled.</li>
<li>
<b>Recoverable Data</b>. This is information that has been saved in a location from which it can be recovered at need. Data that has been backed up to tape or floppy disk is one example. Another is data that has automatically been saved or mirrored on an enterprise server (by Microsoft® IntelliMirror™, for example). </li>
<li>
<b>Unprotected Data</b>. This is information that could be lost in the event of an unforeseen failure — it should be considered as information that <i>will</i> be lost. </li>
</ul>
<p>
<i>Microsoft</i>®<i> Windows NT</i>®<i> 5.0 provides new opportunities to reduce <b>Unprotected Data</b> on the desktop to an absolute minimum. </i></p>
<p>
Applications must play a role in achieving this goal, by clearly distinguishing between reconstructable elements such as application binaries and default settings, and user data such as settings, other profile data, documents, and other content files created explicitly by the user. </p>
<p>
The operating system provides new, transparent ways of achieving some of these goals. IntelliMirror, for example, is a Windows technology that mirrors users' data, applications, and customized operating-system settings to a server using intelligent caching and centralized synchronization. This means that users have access to information and applications on their local hard drives even when they are not connected to the network, but also that their data is safely maintained on the server when they are connected.</p>
<p>
To take the fullest advantage of this kind of new technology, user data of all sorts should be saved to standard locations that are determined by consulting the registry through the <b>SHGetSpecialFolderLocation</b> function. </p>
<h4>Categories of Application Data</h4>
<p>
Data associated with an application generally includes some or all of the following categories and subcategories:
<dl>
<dt>
<b>Application files</b></dt>
<dd>

<dl>
<dt>
Application executables</dt>
<dt>
Private DLLs</dt>
<dt>
Shared DLLs</dt>
<dt>
Help Files</dt>
<dt>
Tutorials</dt>
<dt>
Setup files and utilities</dt>
<dt>
Support Files </dt>
</dl>
</dd>
<dt>
<b>Profile Information</b></dt>
<dd>

<dl>
<dt>
Per-user settings</dt>
<dt>
Workstation-specific settings </dt>
</dl>

<p>
Hardware configuration information
</dd>
<dt>
<b>User Content Files</b></dt>
<dd>

<dl>
<dt>
Documents or other content files created by users</dt>
<dd>
</dd>
</dl>
</dd>
</dl>
<p>
It is very important and useful to keep user data completely separate from application binaries on the one hand, and computer-specific data on the other.</p>
<p>&nbsp;</p></body>
</HTML>
