<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Partitioning Applications</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_zaw_partitioning_applications"></a>Partitioning Applications</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
It can be a daunting task to divide an application into independent components, each of which supports a coherent feature set. Nonetheless, it is a challenge that an increasing number of large applications are meeting. The component architectures from Microsoft provide the technological underpinnings needed to make such segmentation possible.</p>
<p>
From a user's perspective, payoffs for segmentation are provided by two technologies:
<ul>
<li>
<a href="clean_1cj2.htm"><b>Just-in-Time Installation</b></a>. The ability to install applications and application components on an as-needed basis. Not only does this save precious local hard drive space, it reduces the bandwidth needed to run an application from a network. (For more information on new installation and component management technology from Microsoft, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_msi_introduction_to_new_microsoft_installer_technology">
</object><a href=JavaScript:alink_1.Click()>Introduction to New Microsoft Installer Technology</a>.</li>
<li>
<a href="clean_28by.htm"><b>Feature-Set Configuration</b></a>. The idea is that each application makes a number of its features optional, based on the settings of one or more registry keys. In some cases, these registry keys might be public, shared among numerous applications, but more often they would be private, specific to a single application. <p>
Administrators using Group Policy can take advantage of Feature-Set Configuration to tailor applications to the needs of different groups of users. This gives them a powerful tool to reduce training and support costs while increasing productivity among their users.
</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
