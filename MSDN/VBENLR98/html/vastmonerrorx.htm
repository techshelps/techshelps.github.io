<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>On Error Statement Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="vastmonerrorx"></a>On Error Statement Example</h2>
<p>
This example first uses the <b>On Error GoTo</b> statement to specify the location of an error-handling routine within a procedure. In the example, an attempt to delete an open file generates error number 55. The error is handled in the error-handling routine, and control is then returned to the statement that caused the error. The <b>On Error GoTo 0 </b>statement turns off error trapping. Then the <b>On Error Resume Next</b> statement is used to defer error trapping so that the context for the error generated by the next statement can be known for certain. Note that <b>Err.Clear</b> is used to clear the <b>Err </b>object's properties after the error is handled.</p>
<pre><code>Sub OnErrorStatementDemo()
   <span class=cfe><b>On Error GoTo</b></span> ErrorHandler   ' Enable error-handling routine.
   Open "TESTFILE" For Output As #1   ' Open file for output.
   Kill "TESTFILE"   ' Attempt to delete open 
            ' file.
   <span class=cfe><b>On Error Goto 0</b></span>   ' Turn off error trapping.
   On Error Resume Next   ' Defer error trapping.
   ObjectRef = GetObject("MyWord.Basic")   ' Try to start nonexistent
            ' object, then test for 
'Check for likely Automation errors.
   If Err.Number = 440 Or Err.Number = 432 Then
      ' Tell user what happened. Then clear the Err object.
      Msg = "There was an error attempting to open the Automation object!"
      MsgBox Msg, , "Deferred Error Test"
      Err.Clear   ' Clear Err object fields 
   End If   
Exit Sub      ' Exit to avoid handler.
ErrorHandler:   ' Error-handling routine.
   Select Case Err.Number   ' Evaluate error number.
      Case 55   ' "File already open" error.
         Close #1   ' Close open file.
      Case Else
         ' Handle other situations here... 
   End Select
   Resume   ' Resume execution at same line
            ' that caused the error.
End Sub
</code></pre>
</BODY>
</HTML>
