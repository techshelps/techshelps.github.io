<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateObject Function</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vafctcreateobject"></a>CreateObject Function</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vafctCreateObjectC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vafctCreateObjectX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vafctCreateObjectS">
</object></p>
<p>
Creates and returns a reference to an <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defactivexobject">
</object><a href=JavaScript:alink_4.Click()>ActiveX object</a>.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>CreateObject(</b><i>class,[servername]</i><b>)</b></p>
<p>
The <b>CreateObject</b> function syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=16%><b>Part</b></td>
<td class=label width=84%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=16%><i>class</i></td>
<td width=84%>Required;<b> Variant</b> (<b>String</b>). The application name and class of the object to create.</td>
</tr>
<tr valign=top>
<td width=16%><i>servername</i></td>
<td width=84%>Optional;<b> Variant</b> (<b>String</b>). The name of the network server where the object will be created.</td>
</tr>
</table><br>
<p>
The <i>class</i> <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defarg">
</object><a href=JavaScript:alink_5.Click()>argument</a> uses the syntax <i>appname</i><b>.</b><i>objecttype</i> and has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=16%><b>Part</b></td>
<td class=label width=84%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=16%><i>appname</i></td>
<td width=84%>Required;<b> Variant</b> (<b>String</b>). The name of the application providing the object.</td>
</tr>
<tr valign=top>
<td width=16%><i>objecttype</i></td>
<td width=84%>Required;<b> Variant</b> (<b>String</b>). The type or <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defclass">
</object><a href=JavaScript:alink_6.Click()>class</a> of object to create.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
Every application that supports Automation provides at least one type of object. For example, a word processing application may provide an <b>Application</b> object, a <b>Document</b> object, and a <b>Toolbar</b> object.</p>
<p>
To create an ActiveX object, assign the object returned by <b>CreateObject</b> to an <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectvariable">
</object><a href=JavaScript:alink_7.Click()>object variable</a>:</p>
<pre><code>' Declare an object variable to hold the object 
' reference. Dim as Object causes late binding. 
Dim ExcelSheet As Object
Set ExcelSheet = CreateObject("Excel.Sheet")
</code></pre>
<p>
This code starts the application creating the object, in this case, a Microsoft Excel spreadsheet. Once an object is created, you reference it in code using the object variable you defined. In the following example, you access <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defproperty">
</object><a href=JavaScript:alink_8.Click()>properties</a> and <object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defmethod">
</object><a href=JavaScript:alink_9.Click()>methods</a> of the new object using the object variable, <code>ExcelSheet</code>, and other Microsoft Excel objects, including the <code>Application</code> object and the <code>Cells</code> collection.</p>
<pre><code>' Make Excel visible through the Application object.
ExcelSheet.Application.Visible = True
' Place some text in the first cell of the sheet.
ExcelSheet.Cells(1, 1).Value = "This is column A, row 1"
' Save the sheet to C:\test.doc directory.
ExcelSheet.SaveAs "C:\ TEST.DOC"
' Close Excel with the Quit method on the Application object.
ExcelSheet.Application.Quit
' Release the object variable.
Set ExcelSheet = Nothing
</code></pre>
<p>
Declaring an object variable with the <code>As Object</code> clause creates a variable that can contain a reference to any type of object. However, access to the object through that variable is late bound; that is, the binding occurs when your program is run. To create an object variable that results in early binding, that is, binding when the program is compiled, declare the object variable with a specific class ID. For example, you can declare and create the following Microsoft Excel references:</p>
<pre><code>Dim xlApp As Excel.Application 
Dim xlBook As Excel.Workbook
Dim xlSheet As Excel.WorkSheet
Set xlApp = CreateObject("Excel.Application")
Set xlBook = xlApp.Workbooks.Add
Set xlSheet = xlBook.Worksheets(1)
</code></pre>
<p>
The reference through an early-bound variable can give better performance, but can only contain a reference to the <object id=alink_10 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defclass">
</object><a href=JavaScript:alink_10.Click()>class</a> specified in the <object id=alink_11 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defdeclaration">
</object><a href=JavaScript:alink_11.Click()>declaration</a>.</p>
<p>
You can pass an object returned by the <b>CreateObject</b> function to a function expecting an object as an argument. For example, the following code creates and passes a reference to a Excel.Application object:</p>
<pre><code>Call MySub (CreateObject("Excel.Application"))
</code></pre>
<p>
You can create an object on a remote networked computer by passing the name of the computer to the <i>servername</i> argument of <b>CreateObject</b>. That name is the same as the Machine Name portion of a share name: for a share named "\\\\MyServer\\Public," <i>servername</i> is "MyServer."</p>
<p>
The following code returns the version number of an instance of Excel running on a remote computer named <code>MyServer</code>:</p>
<pre><code>Dim xlApp As Object
Set xlApp = CreateObject("Excel.Application", "MyServer")
Debug.Print xlApp.Version
</code></pre>
<p>
If the remote server doesn’t exist or is unavailable, a run-time error occurs.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Use <b>CreateObject</b> when there is no current instance of the object. If an instance of the object is already running, a new instance is started, and an object of the specified type is created. To use the current instance, or to start the application and have it load a file, use the <b>GetObject</b> function.</p>
<p class=indent>
If an object has registered itself as a single-instance object, only one instance of the object is created, no matter how many times <b>CreateObject</b> is executed.</p>
</BODY>
</HTML>
