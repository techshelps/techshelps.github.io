<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RaiseEvent Statment Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="vastmraiseeventx"></a>RaiseEvent Statment Example</h2>
<p>
The following example uses events to count off seconds during a demonstration of the fastest 100 meter race. The code illustrates all of the event-related methods, properties, and statements, including the <b>RaiseEvent</b> statement.</p>
<p>
The class that raises an event is the event source, and the classes that implement the event are the sinks. An event source can have multiple sinks for the events it generates. When the class raises the event, that event is fired on every class that has elected to sink events for that instance of the object.</p>
<p>
The example also uses a form (<code>Form1</code>) with a button (<code>Command1</code>), a label (<code>Label1</code>), and two text boxes (<code>Text1</code> and <code>Text2</code>). When you click the button, the first text box displays "From Now" and the second starts to count seconds. When the full time (9.84 seconds) has elapsed, the first text box displays "Until Now" and the second displays "9.84"</p>
<p>
The code for <code>Form1</code> specifies the initial and terminal states of the form. It also contains the code executed when events are raised.</p>
<pre><code>Option Explicit

Private WithEvents mText As TimerState

Private Sub Command1_Click()
 &nbsp;&nbsp; Text1.Text = "From Now"
 &nbsp;&nbsp; Text1.Refresh
 &nbsp;&nbsp; Text2.Text = "0"
 &nbsp;&nbsp; Text2.Refresh
 &nbsp;&nbsp; Call mText.TimerTask(9.84)
End Sub

Private Sub Form_Load()
 &nbsp;&nbsp; Command1.Caption = "Click to Start Timer"
 &nbsp;&nbsp; Text1.Text = ""
 &nbsp;&nbsp; Text2.Text = ""
 &nbsp;&nbsp; Label1.Caption = "The fastest 100 meters ever run took this long:"
 &nbsp;&nbsp; Set mText = New TimerState
 &nbsp;&nbsp; End Sub

Private Sub mText_ChangeText()
 &nbsp;&nbsp; Text1.Text = "Until Now"
 &nbsp;&nbsp; Text2.Text = "9.84"
End Sub

Private Sub mText_UpdateTime(ByVal dblJump As Double)
 &nbsp;&nbsp; Text2.Text = Str(Format(dblJump, "0"))
 &nbsp;&nbsp; DoEvents
End Sub
</code></pre>
<p>
The remaining code is in a class module named TimerState. Included among the commands in this module are the<b> Raise Event</b> statements.</p>
<pre><code>Option Explicit
Public Event UpdateTime(ByVal dblJump As Double)
Public Event ChangeText()

Public Sub TimerTask(ByVal Duration As Double)
 &nbsp;&nbsp; Dim dblStart As Double
 &nbsp;&nbsp; Dim dblSecond As Double
 &nbsp;&nbsp; Dim dblSoFar As Double
 &nbsp;&nbsp; dblStart = Timer
 &nbsp;&nbsp; dblSoFar = dblStart
 &nbsp;&nbsp; 
 &nbsp;&nbsp; Do While Timer &lt; dblStart + Duration
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Timer - dblSoFar &gt;= 1 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dblSoFar = dblSoFar + 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=cfe><b>RaiseEvent</b></span> UpdateTime(Timer - dblStart)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; Loop
 &nbsp;&nbsp; 
 &nbsp;&nbsp; <span class=cfe><b>RaiseEvent</b></span> ChangeText
 &nbsp;&nbsp; 
End Sub
</code></pre>
</BODY>
</HTML>
