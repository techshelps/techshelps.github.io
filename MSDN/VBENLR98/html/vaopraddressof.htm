<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AddressOf Operator</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vaopraddressof"></a>AddressOf Operator</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vaoprAddressOfC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vaoprAddressOfX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vaoprAddressOfS">
</object></p>
<p>
A unary operator that causes the address of the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defprocedure">
</object><a href=JavaScript:alink_4.Click()>procedure</a> it precedes to be passed to an API procedure that expects a function pointer at that position in the <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defarg">
</object><a href=JavaScript:alink_5.Click()>argument</a> list.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>AddressOf </b><i>procedurename</i></p>
<p>
The required <i>procedurename</i> specifies the procedure whose address is to be passed. It must represent a procedure in a <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defstandardmodule">
</object><a href=JavaScript:alink_6.Click()>standard module</a> module in the <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defproject">
</object><a href=JavaScript:alink_7.Click()>project</a> in which the call is made.</p>
<p class=label>
<b>Remarks</b></p>
<p>
When a procedure name appears in an argument list, usually the procedure is evaluated, and the address of the procedure’s return value is passed. <b>AddressOf</b> permits the address of the procedure to be passed to a Windows API function in a <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defdll">
</object><a href=JavaScript:alink_8.Click()>dynamic-link library (DLL)</a>, rather passing the procedure's return value. The API function can then use the address to call the Basic procedure, a process known as a callback. The <b>AddressOf</b> operator appears only in the call to the API procedure.</p>
<p>
Although you can use <b>AddressOf</b> to pass procedure pointers among Basic procedures, you can't call a function through such a pointer from within Basic. This means, for example, that a <object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defclass">
</object><a href=JavaScript:alink_9.Click()>class</a> written in Basic can't make a callback to its controller using such a pointer. When using <b>AddressOf</b> to pass a procedure pointer among procedures within Basic, the <object id=alink_10 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defparameter">
</object><a href=JavaScript:alink_10.Click()>parameter</a> of the called procedure must be typed <b>As Long</b>.</p>
<p class=indent>
<B><b>Warning</b></B>&nbsp;&nbsp;&nbsp;Using <b>AddressOf</b> may cause unpredictable results if you don't completely understand the concept of function callbacks. You must understand how the Basic portion of the callback works, and also the code of the DLL into which you are passing your function address. Debugging such interactions is difficult since the program runs in the same process as the <object id=alink_11 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defdevelopmentenvironment">
</object><a href=JavaScript:alink_11.Click()>development environment</a>. In some cases, systematic debugging may not be possible.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can create your own call-back function prototypes in DLLs compiled with Microsoft Visual C++ (or similar tools). To work with <b>AddressOf</b>, your prototype must use the __stdcall calling convention. The default calling convention (__cdecl) will not work with <b>AddressOf</b>.</p>
<p>
Since the caller of a callback is not within your program, it is important that an error in the callback procedure not be propagated back to the caller. You can accomplish this by placing the <b>On Error Resume Next</b> statement at the beginning of the callback procedure.</p>
</BODY>
</HTML>
