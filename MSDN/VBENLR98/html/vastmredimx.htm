<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ReDim Statement Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h2><a name="vastmredimx"></a>ReDim Statement Example</h2>
<p>
This example uses the <b>ReDim</b> statement to allocate and reallocate storage space for dynamic-array variables. It assumes the <b>Option Base </b>is <b>1</b>.</p>
<pre><code>Dim MyArray() As Integer   ' Declare dynamic array.
<span class=cfe><b>Redim</b></span> MyArray<span class=cfe><b>(</b></span>5<span class=cfe><b>)</b></span>   ' Allocate 5 elements.
For I = 1 To 5   ' Loop 5 times.
   MyArray(I) = I   ' Initialize array.
Next I
</code></pre>
<p>
The next statement resizes the array and erases the elements.</p>
<pre><code><span class=cfe><b>Redim</b></span> MyArray<span class=cfe><b>(</b></span>10<span class=cfe><b>)</b></span>   ' Resize to 10 elements.
For I = 1 To 10   ' Loop 10 times.
   MyArray(I) = I   ' Initialize array.
Next I
</code></pre>
<p>
The following statement resizes the array but does not erase elements.</p>
<pre><code><span class=cfe><b>Redim</b></span> Preserve MyArray<span class=cfe><b>(</b></span>15<span class=cfe><b>)</b></span>   ' Resize to 15 elements.
</code></pre>
</BODY>
</HTML>
