<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Web Technologies to Your Windows-based Applications</title>
<meta name=MS-HAID content="msdn_dhtmlinvb">
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<font face="verdana,arial,helvetica" size="2"><form name="x"><object classid="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" name="iv" width=0 height=0></object></form>
<h1><a name="msdn_dhtmlinvb"></a>Add Web Technologies to Your Windows-based Applications</h1>
<p>
John Swenson<br>
MSDN Content Development Group</p>
<p>
As Web development merges with the world of Windows-based development, Microsoft is working on new ways to further blend these two programming models into its tools. If you're a developer for Windows, there's no need to sit and wait for these new Web-enabled tools to arrive, however. Plenty of ways exist to use today's tools to add Web technologies to your Windows-based applications. In some cases, you can even save yourself work over more traditional Windows programming methods.</p>
<p>
Chief among these new development methods is to use Dynamic HTML with Visual Basic 5.0. Visual Basic developers can save themselves a lot of time and effort—and turn out better applications—if they insert Dynamic HTML into the appropriate parts of their Visual Basic applications, says David Stutz, an architect on the Microsoft Visual Basic team. </p>
<p>
"There are a bunch of things that are really easy to do in Dynamic HTML, but are hard to do with Win32," he says. Stutz rattles off a long list of items that are simpler to program in Dynamic HTML, such as styles, nested tables, automatic layout, and fancy typography. </p>
<h2>A Richer Interface</h2>
<p>
Then there's the user interface—probably the greatest strength of Dynamic HTML. With Dynamic HTML, developers can put a richer, more interactive user interface on their Visual Basic–based applications. They can create forms that tightly integrate typography with database content, forms that dynamically change the controls that they contain, and even forms that exploit multimedia effects. (For a complete primer on what Dynamic HTML can do, see the Microsoft Site Builder Network Web site at <b>http://microsoft.com/workshop/author/dhtml/</b>.)</p>
<p>
For programmers, the coolest and most far-reaching feature of Dynamic HTML is its tendency toward separating logic from an application's look and feel, and navigation from content, Stutz says. This simple four-way division is extremely powerful:
<ul>
<li>
Dynamic HTML mechanisms take the place of resizing, UI feedback, and layout code.<br><br></li>
<li>
Dynamic styles take the place of code for manipulating an application's look and feel.<br><br></li>
<li>
Hyperlinks and URLs stand in for code that would have controlled navigation and application flow.<br><br></li>
<li>
Text, images, sound, and other MIME types supply standard types for the application's content, often eliminating the need for media-type-specific code to store, display, or manipulate the content.</li>
</ul>
<p>
Taken together, these four capabilities of Dynamic HTML can significantly reduce the amount of code written.</p>
<p>
Unfortunately, few programmers for Windows think of using a familiar programming tool such as Visual Basic to add Web technologies to their applications. That's too bad, Stutz says, since there are many benefits to using Dynamic HTML in addition to Visual Basic forms.</p>
<p>
For example, a developer who wants to create a scroll bar in Visual Basic has to write a lot of code. But if the same developer created a hybrid application that mixed HTML pages with Visual Basic forms, their application would have built-in scrollbars. HTML also has the notion of hyperlinking built into the format, eliminating the need to write code for navigating between pages.</p>
<h2>Create Hybrid Applications</h2>
<p>
When you blend Dynamic HTML and other Web technologies with Visual Basic, you end up with hybrid applications that look like they're part Web and part Windows. These hybrid applications take advantage of the strengths of both platforms, and are clearly the wave of the future, Stutz says.</p>
<p>
"We anticipate that hybrid applications are actually going to become the norm," he predicts. Stutz mentions Microsoft Money 98 as a prime example of one of these hybrid applications, where it's hard to tell when you're in a Windows screen and when you're in an HTML page.</p>
<p>
For a primer on when Visual Basic programmers should use Dynamic HTML as a complement to the Win32 API, read Stutz's article &nbsp;<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"
	width=0 height=0 hspace=0>
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_vbdhtml">
</object><a href=JavaScript:alink_1.Click()> "Building Dynamic Visual Basic Programs with DHTML."</a>  Although Stutz's main job is to design future versions of Visual Basic, he's been spending time lately visiting conferences to spread the word about using Dynamic HTML and other Web technologies with Visual Basic. The article contains highlights from his presentations.</p>
</font></BODY>
</HTML>
