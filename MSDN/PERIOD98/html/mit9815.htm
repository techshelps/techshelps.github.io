<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scriptlets: A New Powerful Way to Web Computing </title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000 dir=ltr>
<Font face="verdana,arial,helvetica" size="2">
<h1><a name="scriptletsanewpowerfulwaytowebcomputing"></a>Scriptlets: A New Powerful Way to Web Computing </h1>
<p class=indent>
by Shamir Dasgupta</p>
<p>
Scripting languages such as Visual Basic Script and JavaScript have transformed the Web into a dynamic environment that now supports sophisticated client/server applications. If you’re a developer who uses a lot of scripting on your Web site, you know that the best code you can write for your application is the code you won’t have to rewrite. The “scriplet” technology lets you reuse script that you’ve already written and add even more functionality to it—without altering the original code.</p>
<p>
Internet Explorer 4.0 currently supports scriptlets on all platforms. In this article, we’ll show you how to write and implement scriptlets for your Web site. First, though, let’s explore the underlying technology behind scriptlets.</p>
<h3>A natural evolution of the Web</h3>
<p>
In a nutshell, a <i>scriptlet</i> is a Web component that you can write using HTML and scripting, which takes full advantage of the capabilities of Dynamic HTML (DHTML). Scriptlets are based on Win32 Component Object Model (COM), so you can use them to interact with other applications that support COM. On any platform, a scriptlet is just a Web page created with HTML; however, on a Win32 platform, a scriptlet becomes a COM object as well.</p>
<h3>Advantages</h3>
<p>
As a Web author, you’ll find some definite advantages to using scriptlets. In the past, for example, to reuse code you’d have to cut and paste your code and then customize it for each implementation. With scriptlets, you can create your code once and then reuse it or let others reuse it in multiple Web pages. And since scriptlets are just HTML and scripts, they’re lightweight and quick to download. </p>
<h3>Scriptlet rules</h3>
<p>
A scriptlet exposes only the global variables, procedures, and functions you want exposed. To expose any variable or function, all you have to do is use a prefix of “public_” on it . Any global variable with the “public_” prefix becomes a readable and writeable property of the scriptlet. </p>
<p>
When it comes to event-handling, a scriptlet has an <b><i>onscriptletevent </i></b>in addition to the normal Windows events. <b><i>onscriptletevent</i></b> also has two parameters: a string and an arbitrary object. An event handler can select how to respond based on the string being passed. You can include additional detail about the event itself in the object parameter. </p>
<p>
You name your scriptlets with an HTM (normal HTML page) or an ASP (Active Server Page) extension and then implement the scriptlet on a page with an &lt;OBJECT&gt; tag just like you would an ActiveX Control. However, unlike ActiveX Controls, scriptlets don’t use a CLSID (Class ID), but instead rely on a simple MIME entry like this:</p>
<pre><code>&lt;OBJECT ID="MyScriptlet" type="text/x-scriptlet" data="MyScriptlet.htm"&gt;
&lt;/OBJECT&gt;</code></pre>
<p>
Now that we’ve explained how they work, let’s create and implement a simple scriptlet.</p>
<h3>Scrolling scriptlet</h3>
<p>
For our example, we’ll implement a simple marquee scriptlet within a sample Web page. First we’ll write the marquee scriptlet using simple HTML and JavaScript. Our scriptlet will display a scrolling block of text moving from left to right. Once we’ve completed the scriptlet, we’ll implement it on a sample Web page using the &lt;OBJECT&gt; tag.</p>
<p>
When we’re finished, our sample page will look like the one in <b>Figure A</b>. Let’s start by creating the scriptlet.</p>
<p>
<b>Figure A</b></p>
<p>
<img src="mit9815a.gif" border=0></p>
<p>
<b>Our marquee scriptlet displays a scrolling message.</b></p>
<h3>Creating the scriptlet</h3>
<p>
Using an HTML editor, begin a new HTML document. Start the JavaScript with the &lt;SCRIPT&gt; tag on the &lt;HEAD&gt; section as we have here:</p>
<pre><code>&lt;html&gt; &lt;head&gt;
&lt;title&gt;Scrolling scriptlet&lt;/title&gt; 
&lt;script language="JavaScript"&gt;
&lt;!--</code></pre>
<p>
Then, declare the variables and the Public description as shown here:</p>
<pre><code>var maxLeft = 700;
var currentLeft;
var startLeft = 200;

public_description = new MyScriptlet;</code></pre>
<p>
Notice that we’ve used a “public_” prefix to describe the function <b><i>MyScriptlet()</i></b> since we want its properties exposed. Next, create the <b><i>MyScriptlet() </i></b>function that defines the marquee style, with the lines:</p>
<pre><code>function MyScriptlet(){
   this.put_foreColor = put_foreColor;
   this.put_font = put_font;
   this.put_fontSize = put_fontSize;
   this.put_fontStyle = put_fontStyle;
   this.put_text = put_text;
   this.put_farPoint = put_farPoint;
   this.put_startPoint = put_startPoint;   
}</code></pre>
<p>
Now define the functions for each attribute in the <b><i>MyScriptlet()</i></b> function asfollows:</p>
<pre><code>function put_foreColor(sCol){
   theDiv.style.color = sCol;
}
function put_font(sfont){
   theDiv.style.fontFamily = sfont;
}
function put_fontSize(ssize){
   theDiv.style.fontSize = ssize;
}
function put_fontStyle(sstyle){
   theDiv.style.fontStyle = sstyle;
}
function put_text(text){
   theDiv.innerText = text;
}
function put_farPoint(farLeft){
   maxLeft = farLeft;
}
function put_startPoint(startPoint){
   startLeft = startPoint;
}</code></pre>
<p>
At this point we need to create the main scrolling function with the lines</p>
<pre><code>function scrollMessage()
{
   if (currentLeft &gt;= maxLeft)
   {
       theDiv.style.left = -startLeft;
   }
   currentLeft = theDiv.style.posLeft;
   currentLeft += 1;
   theDiv.style.left = currentLeft;
   window.setTimeout('scrollMessage()', 10);
}</code></pre>
<p>
We’re now finished with the marquee function and are ready to define the container theDiv that will hold our text message. But first, close out the &lt;SCRIPT&gt; tag with the following lines of code:</p>
<pre><code>// --&gt;
&lt;/script&gt;
&lt;/head&gt;</code></pre>
<p>
To create the container, we’ll simply use the Dynamic HTML &lt;DIV&gt; tag and define the style attribute necessary in the <b><i>MyScriptlet()</i></b> function we created earlier. The following lines of code will do the trick:</p>
<pre><code>&lt;div id=theDiv style="position:absolute; font-color: green; size: 14; font-family: Trebuchet, Arial; font-weight: bold; width:100%"&gt;
Hello Microsoft Web Builder Visitors!
&lt;br&gt;
&lt;a href="http://mswebbuilder.com"&gt;
Click here
&lt;/a&gt; to go to our site!&lt;br&gt;
&lt;/div&gt;</code></pre>
<p>
As you can see, we’ve created a fairly simple container with text and a text link. We have one more task left to do: Provide a way to load the scrolling function when the page loads. For this final step, simply modify the &lt;BODY&gt; tag, so it reads</p>
<pre><code>&lt;body onload="scrollMessage()" bgcolor="white"&gt;</code></pre>
<p>
That’s it! We’re finished with this document. You’ve just created your first scriptlet! Next, we’ll create a sample Web page and implement our scriptlet—but first save this document as MARQUEE.htm.</p>
<h3>Implementing the scriptlet</h3>
<p>
Start a new HTML document and insert an &lt;OBJECT &gt; tag in the body section as we have here:</p>
<pre><code>&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Scriplet Testing&lt;/title&gt;
&lt;STYLE type="text/css"&gt;
&lt;!--
BODY  {font-size: 10pt; color: #000000; font-family: Verdana, Arial, Helvetica;z-index:1;}
P {font-size: 10pt; color: #000000; font-family: Verdana, Arial, Helvetica;z-index:1;}
H1 {font-size: 20pt; color: #CC0000; font-family: Verdana, Arial, Helvetica;z-index:1;}
--&gt;
&lt;/STYLE&gt;
&lt;/head&gt;
&lt;body bgcolor="white"&gt;
&lt;h1&gt;Web Builder Scriptlet Test&lt;/h1&gt;
&lt;p&gt;The following Marquee effect is created with a scriptlet&lt;/p&gt;
&lt;object&gt;&lt;/object&gt;</code></pre>
<p>
Now add the scriptlet by modifying the &lt;OBJECT&gt; tag, like this:</p>
<pre><code>&lt;OBJECT ID="headlines" STYLE="position:absolute; width:80%; height:70; top:120; left:50; color: white;" type="text/x-scriptlet" data="marquee.htm"&gt;
&lt;/OBJECT&gt;</code></pre>
<p>
At this point, you may add any additional graphics or text you feel necessary. Remember to adjust the TOP attribute within the STYLE parameter to fit your text properly. Save the document as MIT.htm and open it in Internet Explorer. The result should look something like <b>Figure A</b>: You should see the marquee scrolling across the page.</p>
<h3>Conclusion</h3>
<p>
By incorporating scriptlets on your Web pages, you can significantly cut development time and let others reuse your code more efficiently. In this article, we’ve shown how scriptlets can help you take advantage of Dynamic HTML’s capabilities.</p>
<p>
<b>Shamir Dasgupta</b> is technical editor of <i>Microsoft Web Builder </i>and <i>Active Server Developer's Journal</i>, both publications of The Cobb Group.</p>
<p>
Copyright © 1998 The Cobb Group, a division of Ziff-Davis Inc. The Cobb Group and The Cobb Group logo are trademarks of Ziff-Davis Inc. All rights reserved. Reproduction in whole or in part in any form or medium without express written permission of Ziff-Davis is prohibited.</p>
</font></BODY>
</HTML>
