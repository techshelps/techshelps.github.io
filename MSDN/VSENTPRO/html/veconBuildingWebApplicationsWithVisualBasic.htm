<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Building Web Applications with Visual Basic</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconbuildingwebapplicationswithvisualbasic"></a>Building Web Applications with Visual Basic</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconBuildingWebApplicationsWithVisualBasic_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconBuildingWebApplicationsWithVisualBasic_T">
</object></p>
<p>
You can use Visual Basic to build two different types of Web applications — Dynamic HTML (DHTML) applications and Microsoft<sup>®</sup> Internet Information Server (IIS) applications. DHTML applications do their processing on the client computer; IIS applications do their processing on the server computer. Additionally, Visual Basic makes it easy for you to incorporate other types of Internet functionality into your applications; for example, you can create and use ActiveX components, including ActiveX controls, documents, and code components. You can also use the WebBrowser control to display HTML or ASP-based pages within a Visual Basic form.</p>
<p>
The user interface in your Visual Basic Web application can consist of:</p>
<ul type=disc>
<li>
A series of HTML pages.</li>
<li>
A mix of HTML pages and Visual Basic forms.</li>
<li>
A Visual Basic form that uses controls that provide Internet functionality, such as the WebBrowser control.</li>
</ul>
<p>
You do not have to code the HTML pages yourself. Often, HTML pages are coded by a Web designer instead of a developer. You can focus on using your Visual Basic programming skills to write code that interacts with and uses HTML.</p>
<p>
This section provides an overview of the following Visual Basic Web application features.</p>
<ul type=disc>
<li>
IIS applications</li>
<li>
DHTML applications</li>
<li>
Downloading ActiveX components</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbmscWhatsNewInInternetFeaturesVB98">
</object><a href=JavaScript:alink_3.Click()>What's New in Internet Features</a>, online in <i>MSDN Library Visual Studio 6.0</i>.</p>
<h2>IIS Applications</h2>
<p>
An IIS application (named after Internet Information Server) is a Visual Basic application that uses both HTML and compiled Visual Basic code to create a browser-based application. IIS applications can run in any browser and on either a corporate intranet or the Internet, making it possible to reach a broad audience.</p>
<p>
IIS applications physically reside on a Web server, where they receive requests from the browser, run the code associated with the requests, and return responses to the browser.</p>
<p>
In addition to simply intercepting a user request and returning an HTML page, you can create IIS applications that perform more advanced functions, such as:</p>
<ul type=disc>
<li>
Querying databases, writing information to and from records.</li>
<li>
Retrieving HTML pages, and then replacing portions with dynamic content before sending them to the browser.</li>
<li>
Dynamically creating HTML elements and generating events for those elements at run time.</li>
</ul>
<p>
These advanced functions make it possible for you to write complex applications, with Visual Basic code replacing scripting, Common Gateway Interface (CGI) processing, and other methods of Internet application development.</p>
<h3>Webclasses</h3>
<p>
An IIS application is composed of an object called a webclass, which contains a series of resources called webitems. The webclass acts as the central functional unit of the application, processing data from the browser and sending information to the users. You define a series of Visual Basic procedures that determine how the webclass responds to these requests. The webitems are the HTML pages and other data the webclass can send to the browser in response to a request.</p>
<h3>What About Active Server Pages (ASP) Applications?</h3>
<p>
IIS applications and ASP applications are quite similar. You can use both technologies to create dynamic, interactive Web applications that reside on the server. Both technologies are capable of calling other code components to perform complex business processing. The major difference between the two, aside from the fact that you code IIS applications using Visual Basic and you code ASP applications using scripting code (either VBScript or JScript), is that IIS applications separate the user interface (HTML or Active Server Pages) from the application code. ASP applications combine the application code and HTML on the same page.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See the following topics online in <i>MSDN Library Visual Studio 6.0</i>.</p>
<ul type=disc>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAdvantagesOfIISApplications">
</object><a href=JavaScript:alink_4.Click()>Advantages of IIS Applications</a></li>
<li>
<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconWebclasses">
</object><a href=JavaScript:alink_5.Click()>An Introduction to Webclasses</a></li>
<li>
<object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconIISApplicationDevelopmentProcess">
</object><a href=JavaScript:alink_6.Click()>IIS Application Development Process</a></li>
<li>
<object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconWebclassEvents">
</object><a href=JavaScript:alink_7.Click()>Webclass Events</a></li>
<li>
<object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconRespondingToEventsInIISApplications">
</object><a href=JavaScript:alink_8.Click()>Responding to Events in IIS Applications</a></li>
<li>
<object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconHandlingStateInIISApplications">
</object><a href=JavaScript:alink_9.Click()>State Management in IIS Applications</a></li>
</ul>
<h2>DHTML Applications</h2>
<p>
A DHTML application is a Visual Basic application consisting of a combination of Dynamic HTML and compiled Visual Basic code. Together these elements create an interactive, browser-based application. DHTML applications are named for Dynamic HTML, a technology extension of Internet Explorer 4.0 and later that makes it possible for users and developers to interact with Web pages in new ways. DHTML applications require Internet Explorer 4.01 or later.</p>
<p>
DHTML applications reside on the browser computer, where they interpret and respond to actions the end user performs in the browser.</p>
<p>
Although a DHTML application can be as simple as a single HTML page that uses Visual Basic code and the Dynamic HTML object model to respond to objects on the page, you can create more complicated DHTML applications that perform functions like the following:</p>
<ul type=disc>
<li>
Retrieve data from the user and then use that data to query a database.</li>
<li>
Update a page's appearance and behavior.</li>
<li>
Create HTML elements and insert them into a page in response to user requests.</li>
</ul>
<p>
DHTML applications use Visual Basic code to replace scripting, CGI processing, and other methods of Internet application development. More importantly, DHTML applications offload most of the processing from the server to the browser computer.</p>
<p>
In addition to writing Visual Basic code to connect to a Web page, you can use a special designer in Visual Basic to create Web pages that act as the user interface of your application. You can also edit an existing Web page in Visual Basic. This way, if you're familiar with HTML or want to create your own pages, you can use the DHTML Page Designer to do so, or you can have someone else create your pages and just add the pages to your application.</p>
<p>
The user interface for a DHTML application consists of HTML pages. HTML pages are analogous to forms, in the sense that they contain the visual elements that make up your application's user interface. You can place some of the same items on an HTML page as you can on a form, including text, buttons, check boxes, and option buttons. However, where forms require just the Visual Basic run-time DLL, Msvbm60.dll, in order to display at run time, HTML pages additionally require hosting in either a Web browser or the Internet Explorer 4.0 WebBrowser control.</p>
<h3>Differences Between IIS Applications and DHTML Applications</h3>
<p>
IIS applications and DHTML applications are similar in the sense that both types of applications can respond to events generated by an HTML page. Significant differences between the two include:</p>
<ul type=disc>
<li>
<b>Dependency</b>&nbsp;&nbsp;&nbsp;DHTML applications require Internet Explorer 4.0 or later; IIS applications are operating system- and browser-independent.</li>
<li>
<b>Object model</b>&nbsp;&nbsp;&nbsp;DHTML applications use the Dynamic HTML object model for programming; IIS applications use the Active Server Pages object model.</li>
<li>
<b>Location</b>&nbsp;&nbsp;&nbsp;DHTML applications reside and do most of their work on the browser computer; IIS applications reside and do most of their work on the server computer.</li>
</ul>
<p>
IIS applications are intended for use on either a large corporate intranet with multiple operating systems and browsers or the Internet; DHTML applications are intended for intranets where everyone uses Internet Explorer 4.0 or later.</p>
<h3>Sample Applications</h3>
<p>
Visual Basic includes two sample applications that demonstrate techniques for using DHTML in your applications. These applications are called DhShowMe and PropBag. See the <object id=alink_10 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_10.Click()>Visual Basic Samples</a> page online in <i>MSDN Library Visual Studio 6.0</i> for information on how to install the samples.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See the following topics online in <i>MSDN Library Visual Studio 6.0</i>.</p>
<ul type=disc>
<li>
<object id=alink_11 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAdvantagesOfClientInternetApplications">
</object><a href=JavaScript:alink_11.Click()>Advantages of DHTML Applications</a></li>
<li>
<object id=alink_12 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconClientInternetApplicationDevelopmentProcess">
</object><a href=JavaScript:alink_12.Click()>DHTML Application Development Process</a></li>
<li>
<object id=alink_13 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDesigningPagesForClientInternetApplications">
</object><a href=JavaScript:alink_13.Click()>Designing Pages for DHTML Applications</a></li>
<li>
<object id=alink_14 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconHandlingStateInClientInternetApplications">
</object><a href=JavaScript:alink_14.Click()>Managing State in DHTML Applications</a></li>
</ul>
<h2>Downloading ActiveX Components</h2>
<p>
With Visual Basic, you can use ActiveX technology to create components that you can use on HTML pages or as alternatives to HTML pages. These components can include controls (.ocx files), code components (.exe and .dll files) that run on the client, or ActiveX documents (.vbd files) that function much like an HTML page. All of these components help you create Internet solutions that meet your business needs. Internet component download delivers these ActiveX solutions to users through an Internet browser.</p>
<p>
Visual Basic offers support to help you package and download your ActiveX controls, code components, and ActiveX documents. This support includes:</p>
<ul type=disc>
<li>
The Package and Deployment Wizard, which can help you prepare your software for Internet component download.</li>
<li>
The License Package Authoring tool, which can help you create license files for HTML pages.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See the following topics online in <i>MSDN Library Visual Studio 6.0</i>.</p>
<ul type=disc>
<li>
<object id=alink_15 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconStepsForPreparingYourComponentForDownload">
</object><a href=JavaScript:alink_15.Click()>Steps to Prepare Your Component for Download</a></li>
<li>
<object id=alink_16 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconHowInternetComponentDownloadWorks">
</object><a href=JavaScript:alink_16.Click()>How Internet Component Download Works</a></li>
<li>
<object id=alink_17 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingSetupWizardToPrepareSoftwareForDownload">
</object><a href=JavaScript:alink_17.Click()>File Packaging with the Package and Deployment Wizard</a></li>
<li>
<object id=alink_18 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUnderstandingLicensingOnInternet">
</object><a href=JavaScript:alink_18.Click()>Licensing for ActiveX Components</a></li>
</ul>
</BODY>
</HTML>
