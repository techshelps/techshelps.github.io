<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Finding and Running Level A</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconfindingrunninglevela"></a>Finding and Running Level A</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconFindingRunningLevelA_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconFindingRunningLevelA_T">
</object></p>
<p>
Both Levels A and C of the Island Hopper News sample application are included on the MSDN library CD. You can run Setup for either version at any time.</p>
<p>
The installation process for Level A installs all the source code onto your local drive, as well as working versions of both the Windows and Web clients. The source code is located in Program Files\IslandHopper\ScenarioA, if you accept the installation defaults. Each business and data access component has its own folder, as shown in the following table.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=23%><b>Folder</b></td>
<td class=label width=77%><b>Contents</b></td>
</tr>
<tr valign=top>
<td width=23%>bus_AdA</td>
<td width=77%>Source code for the bus_AdA component, which handles the browsing and placing of ads within the application.</td>
</tr>
<tr valign=top>
<td width=23%>ClassifiedsEXE</td>
<td width=77%>Source code for the Windows client application, as well as a master project that points to the individual projects for the business and data access components.</td>
</tr>
<tr valign=top>
<td width=23%>CompatibleDLLs</td>
<td width=77%>Compiled versions of the components used in the application. These components are gathered together into one directory for purposes of binary version compatibility; they provide the reference point.</td>
</tr>
<tr valign=top>
<td width=23%>db_AdA</td>
<td width=77%>Source code for the db_AdA component, which handles updates and queries to the Advertisements table in the database.</td>
</tr>
<tr valign=top>
<td width=23%>db_CategoryA</td>
<td width=77%>Source code for the db_CategoryA component, which handles updates and queries to the Categories table in the database.</td>
</tr>
<tr valign=top>
<td width=23%>DLLs</td>
<td width=77%>Compiled versions of the components used in the application. These are the actual run-time DLLs.<p>
Note that all of the Visual Basic projects for the components in Level A have the Binary Compatibility option set in the project properties. The Binary Compatibility option ensures that when you recompile a component, its CLSID stays constant — fixed to be that of the DLL in the CompatibleDLLs folder. The DLLs in the CompatibleDLLs folder are simply slightly older versions of the DLLs generated when you build any of the components in Level A.</p>
</td>
</tr>
<tr valign=top>
<td width=23%>errPlusA</td>
<td width=77%>Source code for the error-handling portions of the application.</td>
</tr>
<tr valign=top>
<td width=23%>Globals</td>
<td width=77%>Global code for the application.</td>
</tr>
<tr valign=top>
<td width=23%>Packages</td>
<td width=77%>MTS-enabled versions of the components in the application. </td>
</tr>
<tr valign=top>
<td width=23%>util_TakeANumber</td>
<td width=77%>Source code for the TakeANumber utility, which assigns unique IDs when necessary.</td>
</tr>
<tr valign=top>
<td width=23%>WebA</td>
<td width=77%>Source code for the Web client application.</td>
</tr>
</table><br>
<p class=label>
<b>To start the Windows client</b>
<ol>
<li>
Click <b>Start</b>.<br><br></li>
<li>
Point to <b>Programs</b>.<br><br></li>
<li>
Point to <b>Island Hopper</b>.<br><br></li>
<li>
Click <b>Island Hopper A</b>.</li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See <a href="veconawalkthroughlevelavisualbasic.htm">Level A Walk-Through — Windows</a> in this chapter for a description of both user flow and processing flow of the Windows version of the sample.</p>
<p class=label>
<b>To start the Web client</b>
<ol>
<li>
Start Microsoft<sup>®</sup> Internet Explorer 4.0 or higher.<br><br></li>
<li>
Point the browser at the islandhoppera directory in your local Web root. For example, http://MyMachine/islandhoppera.</li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See <a href="veconawalkthroughlevelaweb.htm">Level A Walk-Through — Web</a> in this chapter for a description of both user flow and processing flow of the Web version of the sample.</p>
</BODY>
</HTML>
