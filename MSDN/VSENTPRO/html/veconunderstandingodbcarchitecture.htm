<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding ODBC Architecture</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconunderstandingodbcarchitecture"></a>Understanding ODBC Architecture</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUnderstandingODBCArchitecture_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUnderstandingODBCArchitecture_T">
</object></p>
<p>
The ODBC architecture consists of four components, as described in the following list.</p>
<ul type=disc>
<li>
<b>Application programming interface (API)</b>&nbsp;&nbsp;&nbsp;Calls ODBC functions to connect to a data source, send and receive data, and disconnect.</li>
<li>
<b>Driver manager</b>&nbsp;&nbsp;&nbsp;Provides information to an application (such as a list of available data sources), loads drivers dynamically as they are needed, and provides argument and state transition checking.</li>
<li>
<b>Driver</b>&nbsp;&nbsp;&nbsp;Processes ODBC function calls and manages all exchanges between an application and a specific relational database. If necessary, the driver may translate the standard SQL syntax into the native SQL of the target data source.</li>
<li>
<b>Data source</b>&nbsp;&nbsp;&nbsp;Comprises the data and its associated database engine.</li>
</ul>
<p>
Your application uses the ODBC API to connect to a data source, submit SQL statements, fetch data, and disconnect. A driver manager sits between the application and the ODBC drivers, decides which driver to load, and manages communications as driver functions are called. Finally, the drivers implement the functions of the ODBC API for the particular database. The following drawing shows how these functions interact.</p>
<p>
<img src="ve52ga1.gif" border=0></p>
<p>
What the ODBC architecture means to your application is that you can access different ODBC data sources, in different locations, using the same function calls available in the ODBC API. Once you have working code to access one relational data source, the code is easily extended to access other data sources.</p>
</BODY>
</HTML>
