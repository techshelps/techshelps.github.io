<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>User Model</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vecontheusermodel"></a>User Model</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconTheUserModel_C;veconTheUserModelC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconTheUserModel_T;veconTheUserModelT">
</object></p>
<p>
The <i>user model</i> defines the target end user of the application. Some of the questions this model answers include:</p>
<ul type=disc>
<li>
Who is the user and what are the user's skills, experiences, and use cases/scenarios?</li>
<li>
What are the user requirements for task sequencing, usability, training, responsiveness, performance, and interoperability with external applications and data?</li>
<li>
Is the user a dedicated employee who can tolerate usability quirks or inconveniences, or are they a consumer who may not buy any products if the user interface is not easy, reliable, and efficient?</li>
<li>
How much feature documentation and help will the user need? Will they have the patience to read documentation?</li>
<li>
Will the user require product support? Will they pay for it?</li>
<li>
How many users will be using the application at any one time?</li>
<li>
How powerful is the user's desktop computer, and how fast is their network connection?</li>
<li>
What is required to ensure proper security?</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In large formal environments, the user model itself can be separated into four relatively independent sub-models: the usability model, the documentation model, the support model, and the user security model.</p>
<h2>How the user model interacts with other models</h2>
<p>
As the diagram in the <a href="vecontheenterpriseapplicationmodel.htm">Enterprise Application Model</a> shows, the user model directly interacts with the business model, the logical model, the technology model, and the physical model. The following table characterizes these interactions and gives brief examples of each.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>Sub-model</b></td>
<td class=label width=38%><b>How the user model relates to it</b></td>
<td class=label width=37%><b>Example</b></td>
</tr>
<tr valign=top>
<td width=25%>Business model</td>
<td width=38%>Number of users, their skill levels and desktop configurations determine cost of training and supporting them.</td>
<td width=37%>A retail order entry application must be fast to accommodate busy clerks. This may require additional hardware or infrastructure investments.</td>
</tr>
<tr valign=top>
<td width=25%>Logical model</td>
<td width=38%>How the user thinks about the tasks and works at them determines how the functionality must be logically encapsulated.</td>
<td width=37%>If a customer’s credit can be checked while the order is taken, the credit checking functionality must be in a separate, asynchronously processed component.</td>
</tr>
<tr valign=top>
<td width=25%>Technology model</td>
<td width=38%>User requirements determine the technology needed to meet them.</td>
<td width=37%>An application deployed on the Internet must use platform-independent technology for the user interface elements.</td>
</tr>
<tr valign=top>
<td width=25%>Physical model</td>
<td width=38%>Number of users and their locations affects the component architecture needed to reach them effectively.</td>
<td width=37%>An application that will be used by a rapidly changing number of users must deploy its user-intensive services in an easily scalable configuration, such a component pool or queue.</td>
</tr>
</table><br>
<p class=mini>
Since the development model permeates all of the Enterprise sub-models, there are no "typical" interactions because you must account for every design and implementation decision in the development model.</p>
<h2>How the Internet affects the user model</h2>
<p>
Examples of the way the Internet has affected the user model include:</p>
<ul type=disc>
<li>
Access to an enormous wealth of professionally published HTML-based information.</li>
<li>
A huge growth in the opportunity to reach untrained consumers directly from enterprise applications.</li>
<li>
A significant fear of "big-brother-like" Web applications gaining access to personal desktop resources.</li>
<li>
A loss of some user interface form rendering techniques.</li>
<li>
Slower user-interface responsiveness in applications, based on slow network links.</li>
<li>
Unreliable information and application access over relatively fragile Internet links.</li>
</ul>
<p>
<B><b>For more information</b></B>&nbsp;&nbsp;&nbsp;The business model is explored in greater depth in "<a href="veconmeetinguserneeds.htm">Meeting User Needs</a>,"in Chapter 3, "Tools for Enterprise Application Design."</p>
</BODY>
</HTML>
