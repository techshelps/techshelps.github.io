<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Security and Exchange Server</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconsecurityexchangeserver"></a>Security and Exchange Server</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconSecurityExchangeServer_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconSecurityExchangeServer_T">
</object></p>
<p>
Your enterprise application might use Microsoft Exchange Server to store, send, and receive files. Because these files are stored in user mailboxes or public folders, and transmitted over external Internet communications, you'll want to secure them using Exchange Server's security features.</p>
<p>
Configuring Exchange Server to secure your files requires:</p>
<ul type=disc>
<li>
Protecting Mailboxes.</li>
<li>
Protecting Public Folders.</li>
<li>
Restricting "Permissions Admin" Permissions.</li>
<li>
Using Advance Exchange Security.</li>
<li>
Using Extended Simple Mail Transport Protocol.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on how to configure Exchange Server security, search for "About Information Store Security" in <i>MSDN Library Visual Studio 6.0</i>.</p>
<h2>Protecting Mailboxes</h2>
<p>
Before establishing a connection, Exchange validates the client's credentials. Only known Windows NT accounts are permitted. When you configure Exchange to use network security during logon, the name and user ID authenticates a connection to Exchange.</p>
<h2>Protecting Public Folders</h2>
<p>
You can set user access permission for each public folder. Each user permission is either assigned a role (such as Editor or Reviewer), or given a custom selection of access permissions. If your application is creating or reading files in public folders, you should enable the properties Create items, Read items, and Create subfolders.</p>
<p>
You can control access to public folders by using distribution lists. Using distribution lists is similar to using Windows NT User Groups to provide an easy mechanism for assigning permissions to a block of users.</p>
<p>
If your application uses public folders, be sure to limit the folder's user permissions.</p>
<h2>Restricting "Permissions Admin" Permissions</h2>
<p>
The "permissions admin" permission lets an authorized Windows NT administrator assign Send As permission on a mailbox. This presents an important security issue for your application: the administrator can then create and route messages masquerading as the mailbox owner.</p>
<p>
While Windows NT administration permissions are required to install Exchange, they are not necessary for ongoing administration tasks. You should restrict the "permissions admin" permission to one or two primary administrators for Exchange.</p>
<h2>Using Advanced Exchange Security</h2>
<p>
Your application can easily send and receive protected mail using Exchange Server's security features. Exchange provides both message encryption and digital signatures to secure the content, the transmission, and the authentication of mail messages.</p>
<p>
The encrypted mail feature of Exchange operates only on external mail outside your organization; it does not protect mail inside an organization.</p>
<p>
If your enterprise application uses Exchange for routing mail messages, don't overlook the protection for sensitive data provided by Exchange Server's certification authority.</p>
<h2>Using Extended Simple Mail Transport Protocol</h2>
<p>
Although Exchange servers authenticate each other to prevent data theft, the standard Exchange configuration using Simple Mail Transfer Protocol (SMTP) does not provide any data protection (such as encryption) for the mail messages routed within an organization.</p>
<p>
This presents a security problem for your application: sensitive user information that is internal to your company should still be protected.</p>
<p>
For sites connected with Internet Mail Server, Exchange provides the Extended Simple Mail Transport Protocol (ESMTP) to encrypt connections. If your application is using Exchange to store and route internal mail messages with sensitive information, you should consider using ESMTP.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on securing SMTP, search for "Security Requirements When Using SMTP/POP3" in <i>MSDN Library Visual Studio 6.0.</i></p>
</BODY>
</HTML>
