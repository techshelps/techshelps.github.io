<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Integrating IIS With Your Network</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconintegratingiiswithyournetwork"></a>Integrating IIS with Your Network</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconIntegratingIISWithYourNetwork_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconIntegratingIISWithYourNetwork_T">
</object></p>
<p>
Integrating IIS with your network becomes a balancing act of how you want your Web application to be accessed, and how you want to manage your domain accounts. Probably the number one decision is whether or not anonymous access will be enabled.</p>
<p>
The basic drawback with the anonymous logon account is that it is initially created only as a local user account. In situations where IIS is on a domain controller, this is not an issue because as the account is created it naturally becomes a domain account.</p>
<p>
However, where IIS is on a stand-alone server, the anonymous logon account is local, and other remote resources will be accessed from that IIS machine, then the access authentication at the remote machine will fail. For example, when a remote SQL Server attempts to validate the connection, it will not find the user in the local user account information and the connection will fail.</p>
<p>
The best approach is to make the anonymous logon account a domain account. This means that whenever authentication is required, the account will always be available to other network servers for validation. The most obvious advantage here is that it allows you to bypass SQL Server authentication through Named Pipes. By adding the anonymous logon account to the domain, this problem ceases to be an issue.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;<a href="veconchoosingsqlserversnetworkprotocol.htm">Choosing SQL Server's Network Protocol</a>, in this chapter, introduces SQL Server authentication through Named Pipes. For a more extensive discussion of Web hosting security issues, search for "General Web Hosting Security Issues" in <i>MSDN Library Visual Studio 6.0</i>.</p>
</BODY>
</HTML>
