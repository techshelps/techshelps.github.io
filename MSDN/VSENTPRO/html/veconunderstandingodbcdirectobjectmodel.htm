<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding the ODBCDirect Object Model</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconunderstandingodbcdirectobjectmodel"></a>Understanding the ODBCDirect Object Model</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUnderstandingODBCDirectObjectModel_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUnderstandingODBCDirectObjectModel_T">
</object></p>
<p>
The ODBCDirect object model is essentially a subset of the Data Access Objects (DAO) object model. However, it contains none of the Microsoft Jet database-specific objects (User, Group, Container, Document), it's missing the database definition objects (TableDef and Relation), and it has one new object, Connection. With the Connection object, your application can open multiple asynchronous connections against multiple databases and complete other tasks while the connection is busy.</p>
<p>
The following drawing shows the ODBCDirect object model.</p>
<p>
<img src="ve52e11.gif" border=0></p>
<p>
There are nine objects in the ODBCDirect object model, as listed here.</p>
<ul type=disc>
<li>
<b>DBEngine object</b>&nbsp;&nbsp;&nbsp;This base ODBCDirect object holds all of the model's other objects and maintains engine options.</li>
<li>
<b>Workspace object</b>&nbsp;&nbsp;&nbsp;Defines and manages the current user session. Contains information on open databases and provides mechanisms for simultaneous transactions.</li>
<li>
<b>Database object</b>&nbsp;&nbsp;&nbsp;Represents an ODBC database with at least one open connection.</li>
<li>
<b>Connection object</b>&nbsp;&nbsp;&nbsp;Represents a connection to an ODBC database, including data source, user name, password, and default database.</li>
<li>
<b>QueryDef object</b>&nbsp;&nbsp;&nbsp;Represents a stored SQL query statement, with zero or more parameters, maintained in an ODBC database.</li>
<li>
<b>Recordset object</b>&nbsp;&nbsp;&nbsp;Represents a query result set with cursor. ODBCDirect has five types of Recordset objects: table, dynaset, snapshot, forward-only, and dynamic.<p class=tl>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on Recordset objects, cursor types, and how your application can use them, see <a href="veconchoosingmanagingcursors.htm">Choosing and Managing Cursors</a> in Chapter 7 of this book.</P></li>
<li>
<b>Field</b>&nbsp;&nbsp;&nbsp;Represents a field in a table, query, index, relation, or recordset. A Field object contains data, and you can use it to read data from a record or write data to a record.</li>
<li>
<b>Parameter</b>&nbsp;&nbsp;&nbsp;Represents a value associated with a QueryDef object. Query parameters can be input, output, or both.</li>
<li>
<b>Error</b>&nbsp;&nbsp;&nbsp;Contains information about an error that occurred during an ODBCDirect operation. When more than one error occurs during a single ODBCDirect operation, each individual error is represented by a separate Error object.</li>
</ul>
</BODY>
</HTML>
