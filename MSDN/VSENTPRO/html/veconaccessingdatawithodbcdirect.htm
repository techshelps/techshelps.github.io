<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing Data with ODBCDirect</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconaccessingdatawithodbcdirect"></a>Accessing Data with ODBCDirect</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconAccessingDataWithODBCDirect_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconAccessingDataWithODBCDirect_T">
</object></p>
<p>
When your application uses ODBCDirect, it is actually using RDO. You might reasonably ask: "Why not just use RDO?" The answer is that complete conversion to RDO would require many more changes than the few simple adjustments needed to use ODBCDirect.</p>
<p>
It's worth noting that ODBCDirect isn't exactly direct. To access a data source requires negotiation with DAO objects, conversion through an ODBCDirect translation layer, an RDO ODBC call, and presentation to the ODBC driver, which finally translates your data access request into database engine code.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Unlike standard DAO, you can't use ODBCDirect to perform DDL (Data Definition Language) operations that affect the structure of your database, but you could achieve the same effect using SQL statements. Also, ODBCDirect cannot perform heterogeneous joins across tables from multiple data sources — one of the strengths of DAO.</p>
<p>
An ODBCDirect-based application uses the following operations to access a data source.</p>
<ul type=disc>
<li>
<b>Create the workspace</b>&nbsp;&nbsp;&nbsp;Defines the user session, including user identification, password, and database type.</li>
<li>
<b>Open the connection</b>&nbsp;&nbsp;&nbsp;Specifies a connection string for a particular workspace with information such as data source name and database table.</li>
<li>
<b>Open the recordset</b>&nbsp;&nbsp;&nbsp;Runs an SQL query (with or without parameters) and populates the recordset.</li>
<li>
<b>Use the recordset</b>&nbsp;&nbsp;&nbsp;The query results are now available to your application. Depending on the cursor type, you can browse and change the row data.</li>
<li>
<b>Close the recordset</b>&nbsp;&nbsp;&nbsp;Drops the query results and closes the recordset.</li>
<li>
<b>Close the database</b>&nbsp;&nbsp;&nbsp;Closes the database and releases the connection.</li>
</ul>
<p>
Even though ODBCDirect uses RDO, there are some important features that are handled differently. For example, with ODBCDirect you must create a new Workspace object for each different cursor on a specific connection. Transactions are coordinated at the workspace level, not at the connection or database level. Finally, even though ODBCDirect supports asynchronous operations, you must poll for completion (there is no callback).</p>
<p>
Compared to DAO, one of the best enhancements in ODBCDirect is batch optimistic updating. With batch optimistic dating your application can cache data locally and refresh the server in batch mode. This tends to be very fast because it significantly reduces back-and-forth traffic on the network. The reference to "optimistic" has to do with the underlying assumption that the locally changed records have not been concurrently updated by another process.</p>
<p>
ODBCDirect is a good data access technology that is limited to ODBC data stores. If your application requires access to other types of data stores, ODBCDirect cannot provide it.</p>
</BODY>
</HTML>
