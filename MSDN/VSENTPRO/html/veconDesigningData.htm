<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Designing the Data</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vecondesigningdata"></a>Designing the Data</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDesigningData_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDesigningData_T">
</object></p>
<p>
A well-designed database is the result of careful data modeling to identify the data and data handling services your application requires. The process of data modeling includes:</p>
<ul type=disc>
<li>
Identifying the data (what the data is and where the data is located).</li>
<li>
Defining the data (assigning tables, columns, and data types).</li>
<li>
Ensuring data integrity (providing referential integrity, business rules, and data validation).</li>
<li>
Defining the operational processes (specifying ongoing operational processes such as backup and performance monitoring).</li>
<li>
Choosing a data storage technology (selecting from the differing kinds of data storage technologies, including relational, hierarchical, and indexed).</li>
</ul>
<p>
Data modeling is very important. Most of your application's database access speed will come from careful modeling of the data structures, handling multiuser concurrency situations, and optimizing queries.</p>
<p>
If you're used to building client/server applications using local databases, data modeling is not as simple as it appears. Data modeling is especially difficult when it comes to identifying and resolving multiuser concurrency situations.</p>
<p>
In a large distributed application, it is quite common to have dozens (or even hundreds) of users all accessing the same database. Worse, they may be accessing the same table and identical rows — a situation called concurrency. Concurrency has to do with separate processes, running at the same time, trying to use the same item. Concurrency problems are generally resolved by adjusting transaction sizes (smaller is often better), reducing result sets (smaller is better) and using differing types of locks to maintain data integrity.</p>
<p>
Concurrency is generally thought of as a design problem for just the clients that use your single application. But what if your application uses a transaction that spans several tables and some other application does the same? This type of concurrency problem is one of the most difficult to identify and prevent. It basically requires that you understand the entire dynamic transaction workload as presented to the database at any point in time.</p>
<p>
You should take the time to carefully design your database. High-performance data access depends on the good data structures and relationships that result from attentive data modeling.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on data modeling, designing data structures, and determining data attributes, see <a href="veovrchapter4designingenterprisedata.htm">Designing Enterprise Data</a> in Chapter 4 of this book. For more information on how your application can handle concurrency issues by using locks, see <a href="veconmanagingconcurrencywithcursorlocks.htm">Managing Concurrency With Cursor Locks</a> in Chapter 7 of this book.</p>
</BODY>
</HTML>
