<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ODBC Cursor Library</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconodbccursorlibrary"></a>ODBC Cursor Library</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconODBCCursorLibrary_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconODBCCursorLibrary_T">
</object></p>
<p>
The ODBC cursor library provides the necessary basic cursor features: forward and backward scrolling, direct access by position, and positioned updates. In addition, ODBC has a cursor model that lets a properly written driver simulate a scrollable, updatable cursor — even though the underlying database does not.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;There is little need for using the ODBC cursor library with the SQL Server ODBC driver because the SQL Server ODBC driver itself supports more cursor functions than the ODBC cursor library. The only reason to use the ODBC cursor library with the SQL Server ODBC driver is because the driver implements its cursor support through server cursors, and server cursors do not support some SQL statements (such as COMPUTE, COMPUTE BY, FOR BROWSE, or INTO).</p>
<p>
The ODBC cursor library provides the following types of cursors.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=47%><b>Cursor type</b></td>
<td class=label width=53%><b>Constants</b></td>
</tr>
<tr valign=top>
<td width=47%>Static cursor</td>
<td width=53%>SQL_CURSOR_STATIC</td>
</tr>
<tr valign=top>
<td width=47%>Forward-only cursor</td>
<td width=53%>SQL_CURSOR_FORWARD_ONLY</td>
</tr>
<tr valign=top>
<td width=47%>Dynamic cursor</td>
<td width=53%>SQL_CURSOR_DYNAMIC</td>
</tr>
<tr valign=top>
<td width=47%>Keyset cursor</td>
<td width=53%>SQL_CURSOR_KEYSET_DRIVEN</td>
</tr>
</table><br>
<p>
You can control how the data source and the ODBC cursor library manage concurrency with the following locking options.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Locking type</b></td>
<td class=label width=50%><b>Constant</b></td>
</tr>
<tr valign=top>
<td width=50%>Read-only. Changes are not permitted.</td>
<td width=50%>SQL_CONCUR_READ_ONLY</td>
</tr>
<tr valign=top>
<td width=50%>Optimistic concurrency using row versions.</td>
<td width=50%>SQL_CONCUR_ROWVER</td>
</tr>
<tr valign=top>
<td width=50%>Optimistic concurrency using row values.</td>
<td width=50%>SQL_CONCUR_VALUES</td>
</tr>
<tr valign=top>
<td width=50%>Uses the minimum locking sufficient to ensure that the row can be updated.</td>
<td width=50%>SQL_CONCUR_LOCK</td>
</tr>
</table><br>
<p>
Care must be used with the ODBC cursor library because it caches the entire result set on the client computer, which can use large amounts of memory and reduce performance speed.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on the ODBC cursor library, search online for "Using ODBC Cursors" and "SQLSetStmtOption" in <i>MSDN Library Visual Studio 6.0</i>. For more information on using locks to handle multiuser concurrency situations, see <a href="veconmanagingconcurrencywithcursorlocks.htm">Managing Concurrency with Cursor Locks</a> in this chapter.</p>
</BODY>
</HTML>
