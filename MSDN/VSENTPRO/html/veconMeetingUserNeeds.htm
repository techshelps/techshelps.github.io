<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Meeting User Needs</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconmeetinguserneeds"></a>Meeting User Needs</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconMeetingUserNeeds_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconMeetingUserNeeds_T">
</object></p>
<p>
User model design is the process of understanding, documenting, and validating what the user envisions the application to be. Through it, you identify the user requirements of the application, arriving at a business solution as seen by the user. With it, you also assess the user's skills and experience, and determine the user's desktop client platform.</p>
<p>
The user model design stage is independent of physical implementations. The primary focus is on <i>what</i> the users want to do, explained in the context of <i>how</i> they want to do it (but not how it might be implemented).</p>
<h2>User Model Tasks</h2>
<p>
In the user model phase of design you begin with an emphasis on the activities of the user, rather than aspects of software development. A strong focus on the user in the beginning of the project can help you maintain a proper perspective throughout the development cycle.</p>
<p>
User model design can be subdivided into five basic tasks, with the result being a set of usage scenarios and user profiles that document the user's view of the business solution. The entire process may be repeated many times as new requirements are revealed and the usage scenarios are refined.</p>
<p>
The major design tasks in the user model are:</p>
<ul type=disc>
<li>
Identify users and their roles.</li>
<li>
Gather input from users.</li>
<li>
Document usage scenarios.</li>
<li>
Validate with users.</li>
<li>
Validate against the other models.</li>
</ul>
<h2>User Model Tools</h2>
<p>
The user model tools are mainly conceptual tools, rather than software tools. The most important are user profiles and usage scenarios. In addition, physical prototyping of the user interface can be invaluable, especially in later iterations of user design.</p>
<h3>User Profiles</h3>
<p>
There are many different techniques for understanding the users that can be applied separately or in combination to develop extensive user profiles. Some useful data-gathering techniques include user interviews, focus groups, user surveys, shadowing, and statistical or anecdotal information gathered from the Help Desk.</p>
<h3>Usage Scenarios</h3>
<p>
Usage scenarios capture the requirements of the system in the users' business context. They also describe these requirements in the context of how a particular process, feature, or function will be used. The project team can use the usage scenarios to maintain their focus on the real problem to be solved.</p>
<p>
Usage scenarios serve to:</p>
<ul type=disc>
<li>
Document the series of steps required to complete a business function.</li>
<li>
Trace a path between the user's view and the final physical design.</li>
<li>
Add reality and focus to user expectations.</li>
<li>
Set a prerequisite to defining services at the logical design view.</li>
</ul>
<p>
Usage scenarios capture the users' perspective and environment in a narrative or story portion as well as describe necessary tasks. During the design process, usage scenarios validate the design and aid in defining features and making trade-offs.</p>
<p>
<B><b>For more information</b></B>&nbsp;&nbsp;&nbsp;For more information about usage scenarios, search online for "usage scenarios" in <i>MSDN Library Visual Studio 6.0</i> or at the Microsoft Web site at http://www.microsoft.com.</p>
<h3>Prototypes</h3>
<p>
User interface prototypes validate what users would like to see in a system. Prototyping demands a stable concept of how the new system should operate, therefore it is more likely to be of value during later iterations through the user model design process, than at the beginning design stages. The information yielded by prototyping is of high value, and prototypes can be quickly built in the development environment of your Visual Studio programming language of choice.</p>
</BODY>
</HTML>
