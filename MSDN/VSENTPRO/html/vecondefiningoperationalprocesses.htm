<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Defining the Operational Processes</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="vecondefiningoperationalprocesses"></a>Defining the Operational Processes</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDefiningOperationalProcesses_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDefiningOperationalProcesses_T">
</object></p>
<p>
Regular operational processes to protect data integrity are the backbone of your application. Every application requires ongoing maintenance activities, including:</p>
<ul type=disc>
<li>
Maintaining the database</li>
<li>
Providing data backups</li>
<li>
Reviewing security</li>
</ul>
<h2>Maintaining the Database</h2>
<p>
If you are responsible for maintaining your database, you will need to periodically perform a number of database-oriented tasks. For relational databases, this includes clearing the log file, checking the memory and procedure cache peak loads, compressing the file size, and validating the links between tables and index pages. For hierarchical databases, this means checking for broken links by walking the data structure from the top down through all of the child records. For VSAM files, this includes a rebuild with additional preallocated index positions for future expansion based on historical growth trends.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you're using SQL Server, you can use the Database Consistency Checker (DBCC) to analyze and repair various aspects of a SQL Server installation. For more information, search online for "Database Consistency Checking" in the <i>SQL Server Books Online</i>.</p>
<h2>Providing Data Backups</h2>
<p>
Backups are crucial to your application in case you need to recover data due to corruption or some catastrophic event. You have several backup choices, including:</p>
<ul type=disc>
<li>
Dumping</li>
<li>
Mirroring</li>
<li>
Replication</li>
</ul>
<p>
Dumping copies the data to an external device (such as disk or tape) using a specialized format. Because dumping provides a snapshot of the entire database, changes made subsequent to the dump process are lost (unless you supplement the dump with transaction logs). Dumps are a popular method of handling data recovery. If you use dumps, be sure to do it nightly.</p>
<p>
Most relational databases (including SQL Server) provide an alternative to dumping called mirroring. With mirroring, all transactions on one device are continuously copied to the duplicate mirror device. Once mirroring is set up, it is seamless and maintenance free. The benefit of mirroring is that recovery from a crash is virtually instantaneous. Caution is advised, however, because if the network connection to the mirroring machine becomes corrupted, your database will stop. Even with mirroring, you should still use periodic dumps to be safe.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on how to use mirroring with SQL Server, search online for "Setting Up Mirroring Using Transact-SQL Statements" in <i>MSDN Library Visual Studio 6.0</i>.</p>
<p>
Using replication you can copy all or portions of your database to any number of remote machines. Besides providing a means to backup data, replication has other benefits as well: you can distribute your data throughout the network, balancing the workload and minimizing the risk of catastrophic failure. Replication is primarily a tool for keeping data consistent between distributed databases, and is not generally recognized as a way to provide database backups.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on the features and capabilities of replication, search online for "Replication Concepts" in <i>MSDN Library Visual Studio 6.0</i>.</p>
<h2>Reviewing Security</h2>
<p>
After your application is installed and running, you must periodically review the security implementation to ensure continued protection of your application's data. Security concerns more than just authorizing user logons. Security is about controlling access to all of your application's architectural components and processes, including:</p>
<ul type=disc>
<li>
User interface services.</li>
<li>
Operating system services.</li>
<li>
Business process services.</li>
<li>
Data transmission services.</li>
<li>
Database services.</li>
</ul>
<p>
Regularly scheduled security reviews will help protect your application's data from unauthorized tampering or modification.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on securing your application's components and processes, see <a href="veconchapter13implementingenterpriseapplicationsecurity.htm">Implementing Enterprise Application Security</a> in Chapter 8 of this book.</p>
</BODY>
</HTML>
