<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Finding and Running Level C</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconfindingrunninglevelc"></a>Finding and Running Level C</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconFindingRunningLevelC_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconFindingRunningLevelC_T">
</object></p>
<p>
Both Level A and Level C of the Island Hopper News sample are included on the MSDN library CD. You can run Setup for either version at any time.</p>
<p>
The installation process for Level C installs all the source code onto your local drive, as well as working versions of both the Windows and Web clients. The source code is located in Program Files\IslandHopper\ScenarioC\Source, if you accept the installation defaults. The Source folder contains the three folders in the following list.</p>
<ul type=disc>
<li>
Server_Components</li>
<li>
VBClient</li>
<li>
Web</li>
</ul>
<p>
Source code for the server components for Level C, most of which are written in Visual Basic, is in the Server_Components folder; source for the Windows client is in the VBClient folder. Source code for the Web client is in the Web folder.</p>
<p>
Within the Server_Components folder, each business and data access component has its own folder, as described in the following table.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%><b>Folder</b></td>
<td class=label width=70%><b>Contents</b></td>
</tr>
<tr valign=top>
<td width=30%>bus_AdC</td>
<td width=70%>Source code for the bus_AdC component, which handles the browsing and placing of ads within the application.</td>
</tr>
<tr valign=top>
<td width=30%>bus_CustomerC</td>
<td width=70%>Source code for the bus_CustomerC component, which handles the creation, deletion, and modification of customer records.</td>
</tr>
<tr valign=top>
<td width=30%>bus_InvoiceC</td>
<td width=70%>Source code for the bus_InvoiceC component, which handles invoices. Bus_InvoiceC is written using Visual C++.</td>
</tr>
<tr valign=top>
<td width=30%>bus_PaymentC</td>
<td width=70%>Source code for the bus_PaymentC component, which handles payments.</td>
</tr>
<tr valign=top>
<td width=30%>CompatibleDLLs</td>
<td width=70%>Compiled versions of the components used in the application. These components are gathered together into one directory for purposes of binary version compatibility.</td>
</tr>
<tr valign=top>
<td width=30%>db_AdC</td>
<td width=70%>Source code for the db_AdC component, which handles updates and queries to the Advertisements table in the database.</td>
</tr>
<tr valign=top>
<td width=30%>db_CategoryC</td>
<td width=70%>Source code for the db_CategoryC component, which handles updates and queries to the Categories table in the database.</td>
</tr>
<tr valign=top>
<td width=30%>db_CustomerC</td>
<td width=70%>Source code for the db_CustomerC component, which handles updates and queries to the Customers table in the database.</td>
</tr>
<tr valign=top>
<td width=30%>db_CustomerPasswordC</td>
<td width=70%>Source code for the db_CustomerPasswordC component, which handles updates and queries to the CustomerPasswords table in the database.</td>
</tr>
<tr valign=top>
<td width=30%>db_InvoiceC</td>
<td width=70%>Source code for the db_InvoiceC component, which handles updates and queries to the Invoice table in the database.</td>
</tr>
<tr valign=top>
<td width=30%>db_PaymentC</td>
<td width=70%>Source code for the db_PaymentC component, which handles updates and queries to the Payment table in the database. Db_PaymentC is written using Visual C++.</td>
</tr>
<tr valign=top>
<td width=30%>db_ProductC</td>
<td width=70%>Source code for the db_ProductC component, which handles updates and queries to the Products table in the database.</td>
</tr>
<tr valign=top>
<td width=30%>DLLs</td>
<td width=70%>Compiled versions of the components used in the application.<p>
Note that all of the Visual Basic projects for the components in Level C have the Binary Compatibility option set in the project's properties. The Binary Compatibility option ensures that when you recompile a component, its CLSID stays constant — fixed to be that of the DLL in the CompatibleDLLs folder. The DLLs in the CompatibleDLLs folder are simply slightly older versions of the DLLs generated when you build any of the components in Level C.</p>
</td>
</tr>
<tr valign=top>
<td width=30%>Globals</td>
<td width=70%>Global code for the application.</td>
</tr>
<tr valign=top>
<td width=30%>Interfaces</td>
<td width=70%>Source code for the COM interfaces used in the application.</td>
</tr>
<tr valign=top>
<td width=30%>util_TakeANumber</td>
<td width=70%>Source code for the TakeANumber utility, which assigns unique IDs when necessary.</td>
</tr>
<tr valign=top>
<td width=30%>util_WordCount</td>
<td width=70%>Source code for the WordCount utility, which calculates the price of an ad based on the number of words in the ad. WordCount is written using Visual C++.</td>
</tr>
</table><br>
<p class=label>
<b>To start the Windows client</b>
<ol>
<li>
Start SQL Server, if necessary.<br><br></li>
<li>
Click <b>Start</b>.<br><br></li>
<li>
Point to <b>Programs</b>.<br><br></li>
<li>
Point to <b>Island Hopper</b>.<br><br></li>
<li>
Click <b>Island Hopper C</b>.</li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See <a href="veconawalkthroughlevelcvisualbasic.htm">Level C Walk-Through — Windows</a> in this chapter for a description of both user flow and processing flow of the Windows version of the sample.</p>
<p class=label>
<b>To start the Web client</b>
<ol>
<li>
Start Microsoft<sup>®</sup> Internet Explorer 4.0 or higher.<br><br></li>
<li>
Point the browser at the islandhopperc directory in your local Web root. For example, http://MyMachine/islandhopperc.</li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See <a href="veconawalkthroughlevelcweb.htm">Level C Walk-Through — Web</a> in this chapter for a description of both user flow and processing flow of the Web version of the sample.</p>
</BODY>
</HTML>
