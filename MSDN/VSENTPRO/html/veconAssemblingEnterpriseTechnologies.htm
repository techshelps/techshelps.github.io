<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Assembling Enterprise Technologies</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconassemblingenterprisetechnologies"></a>Assembling Enterprise Technologies</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconAssemblingEnterpriseTechnologies_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconAssemblingEnterpriseTechnologies_T">
</object></p>
<p>
The technology model is the design phase in which you evaluate and select the tools, infrastructure and platforms for your component-based application. It is also where the physical components that will work together in your solution are designed and coded, or where existing components are selected for reuse or purchased from an outside vendor.</p>
<h2>Technology Model Tasks</h2>
<p>
In the technology model design phase, you translate the abstract business objects you defined in the logical model into actual physical components. In addition to the actual coding (or selection for reuse) of these components, you also evaluate the requirements identified in all the other models to choose a technology platform that will adequately support them. These technology evaluation tasks include the following.</p>
<h3>Evaluating Existing Assets and Interoperability</h3>
<p>
What features and services can be used or reused to reduce the project's development cost, schedule, and risk? What architectural or implementation requirements do these assets impose on the current project? This includes previous versions of the application, and components available from other groups or third-party vendors.</p>
<h3>Choosing Platforms and Infrastructure</h3>
<p>
What operating system platforms will the software run on? Will it run on a local area network only, or on an intranet or over the Internet? Do the client computers all run the same operating system, or must a "generic" client platform (HTML/ASP) be used for the client? In conjunction with the physical model design, what infrastructure services will be needed to support scalability, transaction services, messaging, queuing, database support, mainframe bridges, and so on?</p>
<h3>Choosing Development Tools</h3>
<p>
What programming languages will be used for components that will be built by the project team? What development environments? If client and server components will run on different platforms, are different tools appropriate for the different components? What constraints do various tools impose on the physical architecture (machine code, threading model, memory requirements, and so on)?</p>
<h2>Technology Model Tools</h2>
<p>
Visual Studio, Enterprise Edition, along with the Microsoft operating systems and Back Office products, offer an extremely broad range of development, platform, infrastructure, and database technology tools. A partial list of these technology options includes:</p>
<ul type=disc>
<li>
Visual Studio programming languages.</li>
<li>
Microsoft<sup>®</sup> Windows<sup>®</sup> and Windows NT<sup>®</sup>.</li>
<li>
Component Object Model (COM).</li>
<li>
Microsoft<sup>®</sup> Transaction Server (MTS).</li>
<li>
Microsoft Message Queue (MSMQ).</li>
<li>
Microsoft<sup>®</sup> Internet Information Server (IIS).</li>
<li>
Microsoft<sup>®</sup> Systems Management Server (SMS).</li>
<li>
Microsoft Proxy Server.</li>
<li>
Microsoft<sup>®</sup> SNA Server.</li>
<li>
Microsoft Exchange Server.</li>
<li>
Visual Basic Web Classes.</li>
<li>
Microsoft<sup>®</sup> Internet Explorer.</li>
<li>
Microsoft<sup>®</sup> SQL Server™.</li>
<li>
Microsoft Data Access Components (MDAC).</li>
</ul>
<p>
<B><b>For more information</b></B>&nbsp;&nbsp;&nbsp;The MSDN library provides extensive documentation for using all of these technologies and services. For more information about any technologies, search online in <i>MSDN Library Visual Studio 6.0</i> for the name of the technology.</p>
</BODY>
</HTML>
