<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Some Practical Database Access Tips</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconsomepracticaldatabaseaccesstips"></a>Some Practical Database Access Tips</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconSomePracticalDatabaseAccessTips_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconSomePracticalDatabaseAccessTips_T">
</object></p>
<p>
The following is a brief summary of some common strategies that will provide high-performance, scalable data access for your enterprise application.</p>
<ul type=disc>
<li>
<b>Design your data carefully</b>&nbsp;&nbsp;&nbsp;The design of your database is usually a bigger performance factor than the design of your application.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on data modeling, designing data structures, and determining data attributes, see <a href="veovrchapter4designingenterprisedata.htm">Designing Enterprise Data</a> in Chapter 4 of this book.</p>
<ul type=disc>
<li>
<b>Understand cursors and how to use them</b>&nbsp;&nbsp;&nbsp;Your application should use the most efficient cursor type for your application's data access requirements. To gain the full benefit from cursors, you must understand cursor types and their configuration options. </li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information using cursors in your application, see <a href="veconchoosingmanagingcursors.htm">Choosing and Managing Cursors</a> in Chapter 7 of this book.</p>
<ul type=disc>
<li>
<b>Retrieve only the required data</b>&nbsp;&nbsp;&nbsp;Retrieving large result sets for browsing on the client adds CPU and network load. It's generally better to minimize network traffic by specifying only the required fields and rows.</li>
<li>
<b>Adjust network packet size</b>&nbsp;&nbsp;&nbsp;You should optimize data access to remote servers by adjusting the size of the network packet. Configuring the packet size provides a choice between responsiveness and overall throughput. Larger packets provide less packet overhead and better throughput. Smaller packets are more responsive.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on configuring SQL Server packet sizes, search online for "Setting the Configuration Options" and "Network Tuning" in <i>MSDN Library Visual Studio 6.0</i>.</p>
<ul type=disc>
<li>
<b>Provide for cancellation of a query in progress</b>&nbsp;&nbsp;&nbsp;Your application should allow cancellation of a query in progress. No application should force the user to reboot the client computer to cancel a slow query.</li>
<li>
<b>Set a query timeout</b>&nbsp;&nbsp;&nbsp;Do not allow queries to run indefinitely.</li>
<li>
<b>Use transactions</b>&nbsp;&nbsp;&nbsp;In a multiuser environment, wrap updates within a transaction, and always commit or roll back a transaction as soon as possible.</li>
<li>
<b>Use connection pooling</b>&nbsp;&nbsp;&nbsp;Recycling the connections provides better performance and reduces the number of idle connections.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on the benefits of connection pooling, see <a href="veconusingconnectionpooling.htm">Using Connection Pooling</a> in this chapter.</p>
<ul type=disc>
<li>
<b>Use stored procedures</b>&nbsp;&nbsp;&nbsp;Stored procedures are already parsed, normalized, and compiled, and they run very quickly.</li>
<li>
<b>Put data service components on the database computer</b>&nbsp;&nbsp;&nbsp;Deploying data service components on the same computer as the database engine can greatly reduce network traffic and improve overall data throughput.</li>
<li>
<b>Keep lookup tables locally</b>&nbsp;&nbsp;&nbsp;There are usually instances in which read-only data is accessed fairly often by your application. By keeping that data locally, lookups become extremely fast.</li>
</ul>
</BODY>
</HTML>
