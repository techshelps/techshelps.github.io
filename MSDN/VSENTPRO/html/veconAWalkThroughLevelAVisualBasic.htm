<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Level A Walk-Through -- Windows</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconawalkthroughlevelavisualbasic"></a>Level A Walk-Through — Windows</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconAWalkThroughLevelAVisualBasic_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconAWalkThroughLevelAVisualBasic_T">
</object></p>
<p>
This section describes how the Windows client application of the Island Hopper News sample Level A works, including both what you see as a user and what happens behind the scenes. If possible, run the application as you read through this section, and look at the source code, which you'll find in Program Files\IslandHopper\ScenarioA\classifieds.vbg. For complete information on all the different parts of Level A, see <a href="veconlevelaspecification.htm">Level A Specification</a> in this chapter.</p>
<h2>First Impressions</h2>
<p>
When you start the Windows client, you see what appears to be a single form with the caption "Island Hopper News."</p>
<p>
This is actually an MDI form, frmParentA, which calls a child, frmAccountingA, immediately. The child form contains the controls and background you see.</p>
<p>
The main screen of the sample offers you the following three choices.</p>
<ul type=disc>
<li>
Browse Ads, for browsing through the ads in the database.</li>
<li>
Ad Maintenance, for editing ads already in the database and for placing new ads.</li>
<li>
Exit.</li>
</ul>
<p>
Notice how the labels change color when you move the pointer over them. This is done by detecting the mouse move and changing the color of the labels. Look at the code for frmAccountingA and locate the Form_MouseMove and lblOption_MouseMove methods.</p>
<h2>Browsing Ads</h2>
<p>
Click Browse Ads to display the Browse Ads form, frmDisplayAdsA. This form consists of two parts: the list of ad categories on the left and the list of ads on the right. Click a category to see the ads in that category, and then click the title of an ad to see the text of the ad.</p>
<h3>How It's Done</h3>
<p>
The list of categories is a standard ListBox control that is populated through a method called FillAdsByCategory. You can see this method if you look at the code for frmDisplayAdsA. The FillAdsByCategory method instantiates the db_CategoryA component to access the database, Classifieds.mdb, and return a list of all the categories in the Categories table.</p>
<p>
The list of ads is displayed by a WebBrowser control. The WebBrowser control is available with Internet Explorer 4.0 and later, and with it you can display Web pages as part of a Visual Basic form. The WebBrowser control locates the Web server and displays an Active Server Pages file, AdsList.asp, which contains the ads that apply to the selected category. To see how this is done, look at the lstCategory_Click event code for frmDisplayAdsA.</p>
<h2>Retrieving Ads</h2>
<p>
Click Ad Maintenance to display the Ad Maintenance form, frmAdA. You can use this form to retrieve an ad from the database. You must supply both an e-mail address and a phone number to retrieve ads. If you have not placed any new ads yourself yet, you can use someone@microsoft.com for the e-mail address and 555-5555 for the phone number to retrieve some ads. You can click Place Ads to place an ad, but you must supply an e-mail address and phone number first.</p>
<h3>How It's Done</h3>
<p>
The Ad Maintenance form instantiates the bus_AdA component when it loads. When you fill in an e-mail address or phone number and click Retrieve, the corresponding bus_AdA method (ListByMail or ListByPhoneNumber) is called. Both of these methods instantiate the db_AdA component to perform the actual retrieval.</p>
<p>
The retrieved ads are displayed in an MSFlexGrid control. Double-clicking on an ad displays the Ad Details form, frmAdDetailA. Clicking Place Ads also displays the Ad Details form.</p>
<h2>Placing and Editing Ads</h2>
<p>
You can update, delete, or place new ads with the Ad Details form, frmAdDetailA. These three modes are controlled by a set of option buttons in the upper left corner. The mode that is enabled when the form is displayed depends on how you got to the form. If you clicked Place Ads, the Ad Details form is displayed with the Place New Ad option selected. If you double-clicked an ad on the Ad Maintenance form, the Ad Details form is displayed with the Update option selected and the ad's information displayed. You can delete an ad by clicking the Delete option button.</p>
<h3>How It's Done</h3>
<p>
When the Ad Details form is loaded, it instantiates the bus_AdA component, calls the FillCategory and FillDuration methods to populate the Category and Duration combo boxes, and clears all the text fields in preparation for input. Then the form is activated. The activation code determines which option button should be enabled.</p>
<p>
The FillDuration method uses the ComboBox control's AddItem method to populate the Duration combo box. The FillCategory method instantiates the db_CategoryA component to access the database and retrieve the categories, and then uses the AddItem method to populate the combo box.</p>
<p>
When the Ad Details form is activated, it calls the RetrieveAdByID method to retrieve the ad from the database. RetrieveAdByID uses the GetByID method of bus_AdA to retrieve the ad information and populate the fields.</p>
</BODY>
</HTML>
