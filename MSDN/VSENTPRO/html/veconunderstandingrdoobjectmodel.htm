<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding the RDO Object Model</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconunderstandingrdoobjectmodel"></a>Understanding the RDO Object Model</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUnderstandingRDOObjectModel_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUnderstandingRDOObjectModel_T">
</object></p>
<p>
Remote Data Objects (RDO) is a thin object-model layer over the ODBC application programming interface (API). RDO depends on the ODBC driver and the database engine for much of its functionality. Data access using RDO is intended for only ODBC relational databases.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;While it is technically possible to use RDO and ODBC drivers to access Microsoft Jet and ISAM databases, it requires complex coding and is not recommended.</p>
<p>
The RDO object model includes a number of objects, properties, and methods specifically designed to work with stored procedures and their arguments, input and output parameters, and return status values.</p>
<p>
The following drawing shows the RDO object model.</p>
<p>
<img src="ve52dx1.gif" border=0></p>
<p>
There are ten objects in the RDO object model, as described in the following list.</p>
<ul type=disc>
<li>
<b>rdoEngine object</b>&nbsp;&nbsp;&nbsp;The base RDO object. This object is created automatically when you first access RDO in your application.</li>
<li>
<b>rdoError object</b>&nbsp;&nbsp;&nbsp;Handles all ODBC errors and messages generated by RDO. This object is created automatically.</li>
<li>
<b>rdoEnvironment object</b>&nbsp;&nbsp;&nbsp;Defines a logical set of connections and transaction scope for a particular user name. This object contains both open and allocated (but unopened) connections, provides mechanisms for simultaneous transactions, and defines a security context for operations on the database. This object is created automatically.</li>
<li>
<b>rdoConnection object</b>&nbsp;&nbsp;&nbsp;Represents either an open connection to a remote data source, or an allocated, but as yet unopened, connection.</li>
<li>
<b>rdoQuery object</b>&nbsp;&nbsp;&nbsp;An SQL query statement with zero or more parameters.</li>
<li>
<b>rdoColumn object</b>&nbsp;&nbsp;&nbsp;Represents a column of data, including data type and common properties.</li>
<li>
<b>rdoParameter object</b>&nbsp;&nbsp;&nbsp;Represents a parameter associated with an rdoQuery object. Query parameters can be input, output, or both.</li>
<li>
<b>rdoResultset object</b>&nbsp;&nbsp;&nbsp;A set of rows returned from a query.</li>
<li>
<b>rdoTable object</b>&nbsp;&nbsp;&nbsp;Represents the stored database definition of a table or view.</li>
<li>
<b>rdoPreparedStatement object</b>&nbsp;&nbsp;&nbsp;The rdoPreparedStatement object contains a prepared SQL statement and collection of rdoParameter objects. The rdoPreparedStatement object is obsolete (although still supported). You should use the rdoQuery object instead.</li>
</ul>
</BODY>
</HTML>
