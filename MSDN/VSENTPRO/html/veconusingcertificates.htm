<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Certificates</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconusingcertificates"></a>Using Certificates</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUsingCertificates_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconUsingCertificates_T">
</object></p>
<p>
One of the best ways to control access to your Web application is to require users to log on with a client certificate. <i>Certificates</i> contain digital information about the user in a way that is very difficult to impersonate.</p>
<p>
With Internet Information Server, you can map client certificates to Windows NT user accounts. It might be useful to group authenticated individuals into protected access role groups. In this way, your application would require only a few Windows NT domain accounts that express various roles that clients could play (such as buyer, seller, supplier, and manager). These certificate-based security roles can then be extended into the roles used by Microsoft Transaction Server.</p>
<p>
Whenever a user attempts to log on to a Web application requiring a certificate, the user's Web browser automatically forwards the certificate to the server. The server then authenticates the user before permitting access to an ASP application. Your application can use ASP scripts to read the fields on a certificate. For example, you can access the user name or company name fields from the certificate, and thereby restrict content according to the company's designated pages.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information about using certificates, see <a href="veconsecuritycertificateserver.htm">Security and Certificate Server</a> in this chapter, and search for "The Microsoft Internet Security Framework: Technology for Secure Communication, Access Control, and Commerce" in <i>MSDN Library Visual Studio 6.0</i>. <a href="veconsecuringmicrosofttransactionserver.htm">Securing Microsoft Transaction Server</a>, in this chapter, introduces two ways to protect component interface access: client impersonation and client authorization.</p>
</BODY>
</HTML>
