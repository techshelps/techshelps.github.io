<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Choosing SQL Server's Network Protocol</title>
<style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="veconchoosingsqlserversnetworkprotocol"></a>Choosing SQL Server's Network Protocol</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconChoosingSQLServersNetworkProtocol_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Tasks">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconChoosingSQLServersNetworkProtocol_T">
</object></p>
<p>
As you configure SQL Server, the network protocols you choose affect how you integrate SQL Server with IIS. While SQL Server works with a large variety of protocols, TCP/IP Sockets, Named Pipes, and Multi-Protocol are the most common.</p>
<p>
The choice of protocol depends on whether or not your enterprise application requires SQL Server's integrated security features. Integrated security lets the client use a single logon account instead of requiring both a Windows NT logon and also a SQL Server logon account. With integrated security, your application takes advantage of Windows NT security features, including user names, passwords, password aging, and domain-wide user administration. SQL Server integrated security permits access to your database based solely on the Windows NT validation. Once connected to the database, access to SQL objects (such as tables, views, and stored procedures) is controlled using standard SQL Server access permissions.</p>
<p>
In order to use SQL Server's integrated security, you must choose either Named Pipes or Multi-Protocol with Named Pipes.</p>
<p class=indent>
<b>Note</b>&nbsp;&nbsp;&nbsp;You can configure the SQL Server network protocols using the SQL Server Client Configuration Utility.</p>
<h2>TCP/IP Sockets</h2>
<p>
TCP/IP Sockets is a non-authenticated protocol. This means that connections are not authenticated, and connections and access levels are determined only by the user name and password provided during the connection. TCP/IP Sockets requires more administration than Named Pipes, since each user access permission must be defined at the SQL Server.</p>
<p>
TCP/IP Sockets is a good choice for network protocol if your application does not require SQL Server's integrated security.</p>
<h2>Named Pipes</h2>
<p>
Named Pipes is an authenticated protocol. This means that any time a user attempts to open a connection to the SQL Server via Named Pipes, the Windows NT authentication process occurs. This is important to remember because Named Pipes is also the default protocol when installing SQL Server. Named Pipes is required to support SQL Server's integrated security option. It's also worth noting that Named Pipes connects very fast – much faster than the other protocols.</p>
<p>
Named Pipes is an excellent choice for network protocol if your application intends to use SQL Server's integrated security and does not need other protocols for remote connections.</p>
<h2>Multi-Protocol</h2>
<p>
The Multi-Protocol option lets a client machine connect to any SQL Server machine using any Windows NT protocol. This provides an interesting advantage over Named Pipes: with Multi-Protocol, you can connect to different servers using different protocols (including Named Pipes) all at the same time. However, if your enterprise application will run on a homogeneous network configured with a single protocol, Multi-Protocol provides no benefit.</p>
<p>
Because of the way server names are mapped to network addresses, Multi-Protocol can sometimes be a problem. Each network protocol that the Multi-Protocol option might use has a different approach to identifying the server name. The problem here is that a single machine could have one NetBIOS name and yet another WINS name. Depending on which protocol asks the question, the name resolution could be different. Of course, this problem does not exist where the two names are identical.</p>
<p>
Multi-Protocol is a good choice for network protocol if your application must access remote servers using several different network protocols. Where the network protocol is Named Pipes, your application can use SQL Server's integrated security option, otherwise the client will need both a Windows NT and a SQL Server logon account. This requires extra administration to define SQL Server user logon accounts.</p>
</BODY>
</HTML>
