<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object and Counter Design</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Object and Counter Design</H2><P>A performance counter object is an entity for which performance data is available. A performance counter defines the type of data that is available for a particular type of counter object. An application can provide information for multiple counter objects, each with more than one counter.</P>
<P>Using the Windows&nbsp;NT system to illustrate the relationship between objects and counters, objects include memory, disk, and cache. Each of these objects has multiple counters relating to that object:  the Memory object includes the counters Available Bytes and Page Faults/sec, for example.</P>
<P>An application can also define objects that have multiple instances. For example, a SCSI application could use a single set of counter definitions to define a drive object with two counters, such as Bytes Read and Bytes Written. Using this object, the application's performance DLL could report performance data for multiple instances of the drive object (for example, for each drive controlled by the application).</P>
<P>Performance Monitor always shows counters denoting raw counts as rates, such as Page Faults/sec. This gives context to the viewer, who doesn't have to do in-the-head calculations to compare data from different time intervals. However, you don't have to worry about this when you design a counter. Just let the counter count incrementally, and let the monitor application do the work of converting raw counts to a rate.</P></FONT></BODY></HTML>
