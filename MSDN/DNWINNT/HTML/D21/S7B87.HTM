<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>System Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>System Object</H2><H3><A NAME="sec0"></A>Object: System <I>    </I>Index: 002     <I>Novice</I></H3><P>The System object type includes those counters that apply to all processors on the computer collectively. These counters represent the activity of all processors on the computer.</P>
<H3><A NAME="sec1"></A> % Total Privileged Time<I>     Advanced</I></H3><P>The % Total Privileged Time is the average percentage of time spent in Privileged mode by all processors. On a multiprocessor system, if all processors are always in Privileged mode this is 100%, if all processors are 50% in Privileged mode this is 50% and if one-fourth of the processors are in Privileged mode this is 25%. When a Windows&nbsp;NT system service is called, the service will often run in Privileged Mode in order to gain access to system-private data. Such data is protected from access by threads executing in User Mode. Calls to the system may be explicit, or they may be implicit such as when a page fault or an interrupt occurs. Unlike some early operating systems, Windows&nbsp;NT uses process boundaries for subsystem protection in addition to the traditional protection of User and Privileged modes. These subsystem processes provide additional protection. Therefore, some work done by Windows&nbsp;NT on behalf of an application may appear in other subsystem processes in addition to the Privileged Time in the application process.</P>
<P>Index: 244     Default Scale: 1</P>
<P>Counter Type: PERF_100NSEC_TIMER     Counter Size: 8 bytes</P>
<H3><A NAME="sec2"></A>% Total Processor Time<I>     Novice</I></H3><P>The % Total Processor Time is the average percentage of time that all the processors on the system are busy executing non-idle threads. On a multiprocessor system, if all processors are always busy this is 100%, if all processors are 50% busy this is 50% and if one-fourth of the processors are busy this is 25%. It can be viewed as the fraction of the time spent doing useful work. Each processor is assigned an Idle thread in the Idle process which consumes those unproductive processor cycles not used by any other threads. </P>
<P>Index: 240     Default Scale: 1</P>
<P>Counter Type: PERF_100NSEC_TIMER_INV     Counter Size: 8 bytes</P>
<H3><A NAME="sec3"></A>% Total User Time<I>     Advanced</I></H3><P>The % Total User Time is the average percentage of time spent in User mode by all processors. On a multiprocessor system, if all processors are always in User mode this is 100%, if all processors are 50% in User mode this is 50% and if one-fourth of the processors are in User mode this is 25%. Applications execute in User Mode, as do subsystems like the window manager and the graphics engine. Code executing in User Mode cannot damage the integrity of the Windows&nbsp;NT Executive, Kernel, and device drivers. Unlike some early operating systems, Windows&nbsp;NT uses process boundaries for subsystem protection in addition to the traditional protection of User and Privileged modes. These subsystem processes provide additional protection. Therefore, some work done by Windows&nbsp;NT on behalf of an application may appear in other subsystem processes in addition to the Privileged Time in the application process.</P>
<P>Index: 242     Default Scale: 1</P>
<P>Counter Type: PERF_100NSEC_TIMER     Counter Size: 8 bytes</P>
<H3><A NAME="sec4"></A>Alignment Fixups/sec     Wizard</H3><P> Alignment Fixups/sec is the rate of alignment faults fixed by the system.</P>
<P>Index: 686     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec5"></A>Context Switches/sec     <I>Advanced</I></H3><P>Context Switches/sec is the rate of switches from one thread to another. Thread switches can occur either inside of a single process or across processes. A thread switch may be caused either by one thread asking another for information, or by a thread being preempted by another, higher priority thread becoming ready to run. Unlike some early operating systems, Windows&nbsp;NT uses process boundaries for subsystem protection in addition to the traditional protection of User and Privileged modes. These subsystem processes provide additional protection. Therefore, some work done by Windows&nbsp;NT on behalf of an application may appear in other subsystem processes in addition to the Privileged Time in the application. Switching to the subsystem process causes one Context Switch in the application thread. Switching back causes another Context Switch in the subsystem thread.</P>
<P>Index: 146     Default Scale: 0.01</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec6"></A>Exception Dispatches/sec Index: Wizard</H3><P>Exception Dispatches/sec is the rate of exceptions dispatched by the system.</P>
<P>Index: 688     Default Scale: 0</P>
<P>Counter Type: 0x10410400, PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec7"></A>File Control Bytes/sec     <I>Wizard</I></H3><P>File Control Bytes/sec is an aggregate of bytes transferred for all file system operations that are neither reads nor writes. These operations usually include file system control requests or requests for information about device characteristics or status.</P>
<P>Index: 020     Default Scale: 0.001</P>
<P>Counter Type: PERF_COUNTER_BULK_COUNT     Counter Size: 8 bytes</P>
<H3><A NAME="sec8"></A>File Control Operations/sec     <I>Advanced</I></H3><P>File Control Operations/sec is an aggregate of all file system operations that are neither reads nor writes. These operations usually include file system control requests or requests for information about device characteristics or status.</P>
<P>Index: 014     Default Scale: 1</P>
<P>Type: PERF_COUNTER_COUNTER     Size: 4 bytes</P>
<H3><A NAME="sec9"></A>File Data Operations/sec     <I>Novice</I></H3><P>File Data Operations per second is the rate that the computer is issuing Read and Write operations to file system devices. It does not include File Control Operations.</P>
<P>Index: 406     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec10"></A>File Read Bytes/sec     <I>Expert</I></H3><P>File Read Bytes/sec is an aggregate of the bytes transferred for all the file system read operations on the computer.</P>
<P>Index: 016     Default Scale: 0.0001</P>
<P>Type: PERF_COUNTER_BULK_COUNT     Size: 8 bytes</P>
<H3><A NAME="sec11"></A>File Read Operations/sec     <I>Novice</I></H3><P>File Read Operations/sec is an aggregate of all the file system read operations on the computer.</P>
<P>Index: 010     Default Scale: 1</P>
<P>Type: PERF_COUNTER_COUNTER     Size: 4 bytes</P>
<H3><A NAME="sec12"></A>File Write Bytes/sec     <I>Expert</I></H3><P>File Write Bytes/sec is an aggregate of the bytes transferred for all the file system write operations on the computer.</P>
<P>Index: 018      Default Scale: 0.0001</P>
<P>Type: PERF_COUNTER_BULK_COUNT     Size: 8 bytes</P>
<H3><A NAME="sec13"></A>File Write Operations/sec     <I>Novice</I></H3><P>File Write Operations/sec is an aggregate of all the file system write operations on the computer.</P>
<P>Index: 012     Default Scale: 1</P>
<P>Type: PERF_COUNTER_COUNTER     Size: 4 bytes</P>
<H3><A NAME="sec14"></A>Floating Emulations/sec     Wizard</H3><P>Floating Emulations/sec is the rate of floating emulations performed by the system.</P>
<P>Index: 690     Default Scale: 1</P>
<P>Counter Type: 0x10410400, PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec15"></A>Processor Queue Length     <I>Wizard</I></H3><P>Processor Queue Length is the instantaneous length of the processor queue in units of threads. This counter is always 0 unless you are also monitoring a thread counter. All processors use a single queue in which threads wait for processor cycles. This length does not include the threads that are currently executing. A sustained processor queue length greater than two generally indicates processor congestion. This is an instantaneous count, not an average over the time interval.</P>
<P>Index: 044     Default Scale: 10</P>
<P>Counter Type: PERF_COUNTER_RAWCOUNT     Counter Size: 4 bytes</P>
<H3><A NAME="sec16"></A>System Calls/sec<I>     Advanced</I></H3><P>Systems Calls/sec is the frequency of calls to Windows&nbsp;NT system service routines. These routines perform all of the basic scheduling and synchronization of activities on the computer, and provide access to non-graphical devices, memory management, and name space management.</P>
<P>Index: 150     Default Scale: 0.1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec17"></A>System Up Time<I>     Novice</I></H3><P>Total Time (in seconds) that the computer has been operational since it was last started.</P>
<P>Index: 674     Default Scale: 0.00001</P>
<P>Counter Type: PERF_ELAPSED_TIME     Counter Size: 8 bytes</P>
<H3><A NAME="sec18"></A>Total Interrupts/sec<I>     Advanced</I></H3><P>Total Interrupts/sec is the rate the computer is receiving and servicing hardware interrupts. Some devices that may generate interrupts are the system timer, the mouse, data communication lines, network interface cards and other peripheral devices. This counter provides an indication of how busy these devices are on a computer-wide basis. See also Processor:Interrupts/sec.</P>
<P>Index: 246     Default Scale: 0.01</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P></FONT></BODY></HTML>
