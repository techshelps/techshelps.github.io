<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Choosing Between API Sets</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Choosing Between API Sets</H2><P>The number of Win32 implementations the application designer might be considering is growing. At present these consist of Windows&nbsp;NT and Win32s&trade;. As you certainly know by now, Win32s is implemented on top of 16-bit Windows so that Win32s applications can gain the benefits of a 32-bit address space, but still execute on existing 16-bit Windows systems. The existence of these two flavors of the Win32 API complicates the design decisions for the application programmer primarily in the performance arena. This is because Win32s offers the application the advantages of the 32-bit address space, but continues to be subject to the internal restrictions of 16-bit Windows (and to some extent, MS-DOS). </P>
<P>Therefore optimizations made for Windows&nbsp;NT will not always port to Win32s, and vice versa. Here we'll summarize which optimizations apply to which Win32 implementations. </P>
<P>The following table lists the various optimizations and tools presented in this chapter, and indicates where they apply. (Many of the tools listed at the end of  the table are discussed in Chapter 10, "Tuning Windows&nbsp;NT Applications," and Chapter 11, "Tuning the Working Set of Your Application.") The abbreviations used in the table are: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="58pt" VALIGN="TOP"><COL WIDTH="276pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>OK to use in this implementation</P></TD></TR><TR><TD VALIGN="TOP"><P>N/A</P></TD><TD VALIGN="TOP"><P>Not applicable, does not apply to Win32s</P></TD></TR><TR><TD VALIGN="TOP"><P>No-op</P></TD><TD VALIGN="TOP"><P>You can do this without effect on Win32s</P></TD></TR><TR><TD VALIGN="TOP"><P>No</P></TD><TD VALIGN="TOP"><P>No, don't do this on Win32s</P></TD></TR></TBODY></TABLE>
<P>|<P><BR></P>
<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="60pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Optimization</P></TD><TD VALIGN="TOP"><P>Windows&nbsp;NT</P></TD><TD VALIGN="TOP"><P>Win32s</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Kernel optimizations:</B></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Large address space</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Discard old custom virtual memory schemes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Use memory-mapped files for file access</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Reserve large data address spaces, but commit only what you need</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Use named shared virtual memory</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>For sequential I/O, use 4K or 8K blocks</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Use threads to enhance concurrency</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Keep files open </P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Global and Local allocation are the same</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Real-time priority for data communications</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Page-Locking API is provided</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Use new data type MULTI_SZ in Registry</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Write the application using Unicode</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>No disk cache tuning required</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Graphics:</B></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Client-server protection dominates </P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>N/A</P></TD></TR><TR><TD VALIGN="TOP"><P>Batching of calls amortizes cost </P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>N/A</P></TD></TR><TR><TD VALIGN="TOP"><P>Caching of values on client side reduces cost</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>N/A</P></TD></TR><TR><TD VALIGN="TOP"><P>Mapping of server data read-only to client</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>N/A</P></TD></TR><TR><TD VALIGN="TOP"><P>Batch output functions that return a Boolean result</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>N/A</P></TD></TR><TR><TD VALIGN="TOP"><P>SetPixelV and MoveToEx are batched</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>New APIs Gdi{Get|Set}BatchLimit, GdiFlush help</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>Set batch limit as high as possible while avoiding jerky display</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>Most "user" (that is, Windows management) calls flush the batch</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>GDI calls that return a number or a handle flush  the batch</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>Selecting fonts, brushes, and pens do not flush  the batch</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>Selecting bitmaps and regions flush the batch</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>SetWorldTransform and SetMapMode flush the batch</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>GdiSetBatchLimit(1) only to see errors, or </P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>GdiSetBatchLimit(1) only to profile API calls</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No-op</P></TD></TR><TR><TD VALIGN="TOP"><P>Use new Poly calls as much as possible</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Avoid Create, Select, Use, Select former, Destroy</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Create, Create, Create; Select and Use, Use, Use...</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Richer structures to hold unlimited objects</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>N/A</P></TD></TR><TR><TD VALIGN="TOP"><P>Group attribute usage:  gray, gray, gray, red, red</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Grouping avoids cache lookup for pens, fonts, colors, palettes, brushes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Use CS_OWNDC in RegisterClass</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>CreateWindow, Get(Own)DC set DC attributes only once</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Timers are no longer precious</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Less need to use PeekMessage frequently</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Write to Unicode</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P><B>RISC:</B></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Be sure to align data</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Compiler pragma for handling file/net data</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes</P></TD></TR><TR><TD VALIGN="TOP"><P>Exception handling for data alignment not supported</P></TD><TD VALIGN="TOP"><P>varies</P></TD><TD VALIGN="TOP"><P>N/A</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Tools:</B></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Win32 API Profiler</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>Yes1</P></TD></TR><TR><TD VALIGN="TOP"><P>Win32 Call/Attributed Profiler</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Working Set Tuner</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>2</P></TD></TR><TR><TD VALIGN="TOP"><P>VADump</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>2</P></TD></TR><TR><TD VALIGN="TOP"><P>PView</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Debugger <B>wt</B> command</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR><TR><TD VALIGN="TOP"><P>Performance Monitor</P></TD><TD VALIGN="TOP"><P>Yes</P></TD><TD VALIGN="TOP"><P>No</P></TD></TR></TBODY></TABLE>
<P>|<P><BR></P><P>1    There are two Win32 API Profilers:  one for Windows&nbsp;NT, and another for Win32s.</P>
<P>2    Working set tuning done on Windows&nbsp;NT will apply without further effort to the same application  running on Win32s.</P></FONT></BODY></HTML>
