<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processor Scheduling on Windows NT</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Processor Scheduling on Windows&nbsp;NT </H3><P>In order to understand how processors are used in Windows&nbsp;NT you need to understand how they are scheduled. This is typical of what we will find throughout this book:  we need to know how the system works and how it is measured to properly interpret the data. Otherwise, we're just guessing. Let's avoid that, it's what our boss does!</P>
<P>Windows&nbsp;NT schedules processors using symmetric multiprocessing with soft affinity and preemptive multitasking. What a mouthful! Read on to find out what it means.</P>
<P>Let's look first at a single-processor computer, which is scheduled by preemptive multitasking. This means that the highest priority thread that is ready to run will execute processor instructions. If another thread is waiting, what happens depends on its priority. If it is a lower priority than the executing thread, it will mostly wait, only occasionally getting processor time to prevent total starvation. If it has the same priority as the executing thread, the two will share the processor. The system will periodically switch from one thread to the other in order to let them both have processor access.</P>
<P>Priorities are assigned at two levels. The process is assigned a priority class based on how the user starts and interacts with it. Then, within the process's priority class, its threads are assigned priorities that can change depending on requests by the thread itself, or because of interactions with peripherals or with the user. When the thread uses the processor, its priority is lowered; when it accesses peripherals, it is raised, and when it accesses such peripherals as the keyboard it is boosted even more. But to gain this boost, peripheral access must be through direct communication with Windows&nbsp;NT Executive. Windows applications are treated somewhat differently, as described shortly.</P>
<P>If a computer has multiple processors, a ready thread can run on any of them. The system attempts to run a thread on the same processor it last ran on, all other things being equal. (This is soft affinity.) This helps reuse data left in the processor's memory caches from the previous execution of the thread. A thread could be restricted to run on only certain processors, but this is uncommon.</P>
<P>Most applications started by users during system operation run in the Normal Priority class. When a user is interacting with an application using the keyboard and mouse, that application is in the foreground. The foreground application processes get an elevated base priority of nine instead of the level eight assigned to other Normal Priority class processes. (A higher number has higher priority.) When an application relinquishes the foreground, it becomes a background process and is given a base priority of seven. </P>
<P>What all this means is that when the foreground application uses the processor heavily, it can lock out all lower priority processes from execution. Because responding quickly to the user is usually the goal of the system, this is the chosen default for Windows&nbsp;NT operation. If you want to alter this behavior, choose the Tasking button in the System option in Control Panel. The setting of Best Foreground Application Response Time is the default. If you change this to Foreground Application More Responsive Than Background, foreground processes will be given a priority of eight. Setting this to Foreground And Background Applications Equally Responsive assures that both foreground and background processes get priority level seven.</P>
<P>The following table lists all possible thread priorities. </P>
<P>Table 3.1    Thread Priorities in Windows&nbsp;NT</P>

<TABLE COLS="6" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="40pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"><COL WIDTH="115pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="254pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><P>Base</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Priority class</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Thread priority</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>31</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Real-time </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_TIME_CRITICAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>26</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Real-time </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_HIGHEST </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>25</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Real-time </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_ABOVE_NORMAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>24</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Real-time </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_NORMAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>23</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Real-time </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_BELOW_NORMAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>22</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Real-time </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_LOWEST </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>16</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Real-time </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_IDLE </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>15</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Idle, Normal, or High </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_TIME_CRITICAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>15</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>High </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_HIGHEST</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>14</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>High </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_ABOVE_NORMAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>13</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>High </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_NORMAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>12</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>High </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_BELOW_NORMAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>11</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>High </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_LOWEST </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>11</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Foreground normal </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_HIGHEST</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>10</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Foreground normal </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_ABOVE_NORMAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>9</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Foreground normal </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_NORMAL </P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>9</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Background normal </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_HIGHEST</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>8</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Foreground normal </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_BELOW_NORMAL</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P>8</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>Background normal </P></TD><TD COLSPAN="3" VALIGN="TOP"><P>THREAD_PRIORITY_ABOVE_NORMAL</P></TD></TR><TR><TD VALIGN="TOP"><P>7</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Foreground normal </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_LOWEST </P></TD></TR><TR><TD VALIGN="TOP"><P>7</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Background normal </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_NORMAL</P></TD></TR><TR><TD VALIGN="TOP"><P>6</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Background normal </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_BELOW_NORMAL</P></TD></TR><TR><TD VALIGN="TOP"><P>6</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Idle </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_HIGHEST</P></TD></TR><TR><TD VALIGN="TOP"><P>5</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Background normal </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_LOWEST </P></TD></TR><TR><TD VALIGN="TOP"><P>5</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Idle </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_ABOVE_NORMAL</P></TD></TR><TR><TD VALIGN="TOP"><P>4</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Idle </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_NORMAL </P></TD></TR><TR><TD VALIGN="TOP"><P>3</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Idle </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_BELOW_NORMAL </P></TD></TR><TR><TD VALIGN="TOP"><P>2</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Idle </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_LOWEST </P></TD></TR><TR><TD VALIGN="TOP"><P>1</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>Idle, Normal, or High </P></TD><TD COLSPAN="4" VALIGN="TOP"><P>THREAD_PRIORITY_IDLE </P></TD></TR></TBODY></TABLE>
<P>|<P><BR></P></FONT></BODY></HTML>
