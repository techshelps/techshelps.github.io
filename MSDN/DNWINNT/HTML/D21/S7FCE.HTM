<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processor Usage by 16-bit MS-DOS Applications</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Processor Usage by 16-bit MS-DOS Applications</H3><P>Each MS-DOS application runs in its own NTVDM process on Windows&nbsp;NT. If you have been following along carefully you will realize that this creates a bit of a challenge for us, because we can only monitor one program of a given name at a time. Not only are all MS-DOS applications given the same name, they have the same name as the process running all the 16-bit Windows applications. Could it get any worse than this?</P>
<P><img src="XOPZ14.gif"></P>
<P>Figure 3.34    16-bit MS-DOS applications on Windows&nbsp;NT</P>
<P>Yes, it could, because this isn't really so bad. What we can do is change the name of the program used to execute MS-DOS applications. Go to the directory %SystemRoot%\SYSTEM32 on the volume holding your copy of Windows&nbsp;NT. Copy NTVDM.EXE to a file name of your choice. (Be sure to copy it to another filename instead of renaming it, because you want to leave NTVDM.EXE around for WowExec to work with.) You then tell Windows&nbsp;NT to use the new program copy for executing MS-DOS programs. You do this by making a slight change in the Configuration Registry using the Registry Editor, REGEDT32.EXE. You can do this between starting the applications, and you do not have to shut down the system to have this change take effect. The value to change is </P>
<P>|<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE<BR>    SYSTEM<BR>        CurrentControlSet<BR>                    Control<BR>                        WOW<BR>                                cmdline:</code></pre>
<P>Double-click the <B>cmdline</B> entry to change it. Modify the spelling of NTVDM.EXE to that of your copied NTVDM.EXE. Then start an MS-DOS application. If you need to start another one and measure it separately, you can repeat this process. You can leave the Registry Editor running and positioned at the cmdline value to make repeated changes easy. Figure 3.35 shows the Registry Editor in this position.</P>
<P><img src="XOPC16.gif"></P>
<P>Figure 3.35    Registry Editor set to change name of NTVDM for running MS-DOS programs</P>
<H4><B>Note</B>   We recommend that you set cmdline back to NTVDM.EXE when your experiment is over. If you are very ambitious and this is a big issue for you, you might want to write an application to perform these changes before and after the execution of your MS-DOS applications.</P>
<P>Figure 3.36 shows two MS-DOS applications being monitored concurrently by Performance Monitor using this technique. The threads in one of them are shown in Figure 3.37. There are two worker threads and one for the application. By stimulating the application you might be able to distinguish between them, but this is not really crucial because unlike in WowExec, there is only one application per process, and you know what the process is.</P>
<P><img src="XOPC30.gif"></P>
<P>Figure 3.36    Two MS-DOS applications monitored using renamed NTVDMs </P>
<P><img src="XOPC31.gif"></P>
<P>Figure 3.37    Threads in a renamed NTVDM executing an MS-DOS application</P>
<P>See? Piece of cake. </P></FONT></BODY></HTML>
