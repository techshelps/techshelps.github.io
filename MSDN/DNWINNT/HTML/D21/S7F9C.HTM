<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows NT Is Always in Tune</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Windows&nbsp;NT Is Always in Tune</H2><P>In the old days, operating systems were built with many tuning parameters that could be adjusted to affect the performance of the system. These parameters frequently had obscure effects deep within the system. Understanding these effects meant grasping subtle design details. In fact, operating system designers became adept at leaving the most difficult decisions about the system's performance to the users.</P>
<P>Unfortunately, the users rarely had the system's source code at hand to help make these decisions. In an effort to keep manuals simple and friendly, the documentation rarely included the information required to set the parameters properly. Tuning an operating system became the arcane art of somehow understanding the many poorly documented values and how they affected the system's performance. This task was made more difficult because the interactions of the parameters were even more obscure than the parameters themselves.</P>
<P>A major design goal of Windows&nbsp;NT was to eliminate the many obtuse parameters that characterized earlier systems. Adaptive algorithms were incorporated in Windows&nbsp;NT so that correct values are determined by the system as it runs. The 32-bit address space removed many limitations on memory and the need for users to manually adjust parameters to partition memory. </P>
<P>Windows&nbsp;NT has fundamentally changed how computers will be managed in the future. The task of optimizing Windows&nbsp;NT is not the art of manually adjusting many conflicting parameters. Optimizing Windows&nbsp;NT is a process of determining what hardware resource is experiencing the greatest demand, and then adjusting the operation to relieve that demand. The system comes equipped with elegant (if we do say so ourselves) tools for accomplishing this task. Teaching you how to use these tools to make your computer run faster is the primary purpose of this book.</P>
<P>Windows&nbsp;NT did not achieve the goal of automatic tuning in every single case. A few parameters remain, mainly because it is not possible for us to know precisely how every computer is used. Default values for all parameters are set for a broad range of normal system use, and they rarely need to be altered. But there are special circumstances when changes might be advisable. In this book we will be sure to mention the few tuning parameters that remain in Windows&nbsp;NT, and when it is appropriate to change them from their default values. </P></FONT></BODY></HTML>
