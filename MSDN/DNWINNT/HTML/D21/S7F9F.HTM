<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Optimizing Applications</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Optimizing Applications</H2><P>If you are developing software for Windows&nbsp;NT, you will want to take advantage of the advanced features that will make your application hot, hot, hot. It's important to know that much of the lore that guided the development of Windows-based applications for 16-bit computers is no longer relevant to the new, 32-bit architecture of Windows&nbsp;NT. In Chapter 9 we'll cover these issues in some detail.</P>
<P>If you are merely a victim of these ruthless programmers, Chapter 9 will give you a few weapons to defend yourself. You will be able to determine whether they are using the correct techniques to get the most out of Windows&nbsp;NT. Imagine the looks on their faces when you point out to them that they should be mapping the WIZBANG.DAT file. Send us the videotape!</P>
<P>If you are developing software on Windows&nbsp;NT, you immediately have access (through the Windows&nbsp;NT Software Development Kit) to a strong set of tools for application optimization. You can find out how your application is using the system, and whether it is behaving as you hoped. You can acquire intimate knowledge of such details as how long it takes to make any given system call on your computer and how often your program is making that call. For example, you can use the Windows&nbsp;NT API Profiler to determine which files are most heavily accessed and which events and semaphores are causing the most delays within the application. Chapter 10 will give you some guidelines on using these tools wisely, as well as guidelines for other useful tools that are on the floppy disk accompanying this book. </P>
<P>You will also be able to minimize the memory used by your application. A tool for automatic working set tuning is included in the Windows&nbsp;NT Software Development Kit (SDK). Other tools will help you to understand your virtual memory activity in some detail, so you can find memory and virtual memory leaks. Chapter 11 discusses all of this.</P>
<P>In Chapters 12 and 13 we will provide information to help you write your own performance monitor or to incorporate the monitoring technology into your application so you can produce information about the system's behavior along with statistics about your application's progress. And you will find out how to add counters from your application to the performance monitor so that your users can remotely monitor the progress of your application and correlate that progress with computer resource usage.</P></FONT></BODY></HTML>
