<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Response Probe Input Files</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Response Probe Input Files</H2><P>Text script files are used to specify the exact workload applied to the computer being probed. This allows for a highly flexible method of applying various loads on the computer. The high-resolution performance counter discussed at the end of Chapter 12, "Writing a Custom Windows&nbsp;NT Performance Monitor," is used to measure response times. </P>
<P>All the input arguments and script parameters are checked against possible error conditions. Probing starts once all the required processes and their corresponding threads launch successfully and are ready to probe. Measurements are taken by each thread once the computer reaches a steady state. Steady state is reached when increasing the time limit on the trial has no significant effect on the threads' response times. Currently, each thread begins taking measurements with the first probe cycle to start after 50% of the trial time has expired.</P>
<P>In the script file, you supply values for the mean and standard deviation. These values generate the normally distributed values needed during the probe cycles. </P>
<P>Once any of the threads is done probing, all other threads are forced to stop the probe operation. Test results are printed to the designated output file, as discussed in the following section.</P></FONT></BODY></HTML>
