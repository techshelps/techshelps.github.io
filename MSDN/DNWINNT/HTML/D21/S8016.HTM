<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Performance Counters:  the Big Picture</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Adding Performance Counters:  the Big Picture</H2><P>Performance Monitor was designed so that developers could add performance counters for their own applications to the system. To add performance counters to the system, you must create an extended object. Your extended object is called when Performance Monitor collects data, as shown in Figure 13.1. The Configuration Registry is handled by ADVAPI32.DLL in the Performance Monitor process on the local computer, and by SCREG.EXE on remotely monitored computers.</P>
<P><img src="XOPZ16.gif"></P>
<P>Figure 13.1  How Performance Monitor collects data from an extended object</P>
<P>To add performance objects and counters for your application, follow the basic steps in the list below. Each of these steps is discussed in detail in following sections of this chapter.</P>
<OL><LI>Design the object types and counters for the application. </LI><LI>Set up the necessary performance monitoring entries in the Registry. This includes the following steps: </LI></OL><UL><LI>Create a Performance key in the application's Services node in the Registry. If you don't have such a node you must create one. Create it under HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services.</LI><LI>Create an .INI file containing the names and descriptions of the counter objects and counters. </LI><LI>Create an .H file containing the relative offsets at which the counter objects and counters will be installed in the Registry. </LI><LI>Use the <B>lodctr</B> utility with the .INI and .H files to install the information in the Registry. <B>Lodctr</B> succeeds only if a Performance key exists in the application's Services node.</LI><LI>Add Library, Open, Collect, and Close value entries to the application's Services node in the Registry. These entries specify the name of the application's performance DLL, and the names of the DLLs required functions. The Open and Close entries are optional.</LI></UL><OL start=3><LI>To your application, add functions and data structures for collecting and storing performance data, and a mechanism for communicating the data to the performance DLL.</LI><LI>Create a performance DLL containing a set of exported functions that provide the link between the application and a performance monitoring application (such as Windows&nbsp;NT Performance Monitor).</LI><LI>Modify the application's OEMSETUP.INF file to automate the Registry setup described in step 2.</LI></OL></FONT></BODY></HTML>
