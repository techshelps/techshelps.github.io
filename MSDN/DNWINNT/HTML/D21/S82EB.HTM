<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Why You Would Use Response Probe</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Why You Would Use Response Probe</H2><P>A Response Probe workload is pure—it is completely controlled and specified by the experimenter. Systematic changes to the workload produce corresponding changes in the response by the computer's hardware and software. By placing a series of known workloads on the computer, Response Probe can characterize overall computer performance in an application-independent fashion. </P>
<P>Response Probe experiments are relatively short. Because you can place a pure workload on the computer, the experiments are highly repeatable.</P>
<P>Response Probe has limitations, however. It doesn't test the graphics subsystem. To evaluate this area, you must use other benchmarks. Even more important, you must keep in mind that unless you really understand your applications, it is a significant leap from understanding the computer's response surface to predicting the performance of applications. This is because only measuring the actual applications with Performance Monitor will reveal which computer components are used by various applications, and in what proportions. Complicating the matter is that these proportions change when the hardware is changed. </P>
<P>The approach to using Response Probe, therefore, can take on at least two forms. One is to chart the whole response surface, varying one parameter at a time (such as record size) in a systematic way while keeping all other parameters fixed, to yield a response surface chart. This is the method we use throughout this book. You can then measure your applications and match their characteristics to the charts of the response surface to see how they are affected by hardware changes. Another approach is to measure your application to form a picture of the application's use of the computer. Then use Response Probe to mimic the application's behavior as closely as possible, and apply that synthetic load to the various types of hardware you will use. </P></FONT></BODY></HTML>
