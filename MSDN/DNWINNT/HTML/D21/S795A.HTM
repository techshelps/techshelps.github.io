<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cache Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Cache Object</H2><H3><A NAME="sec0"></A>Object: Cache     Index: 086 <I>        Advanced</I></H3><P>The Cache object type manages memory for rapid access to files. Files on Windows&nbsp;NT are cached in main memory in units of pages. Main memory not being used in the working sets of processes is available to the Cache for this purpose. The Cache preserves file pages in memory for as long as possible to permit access to the data through the file system without having to access the disk.</P>
<H3><A NAME="sec1"></A>Async Copy Reads/sec<I>     Wizard</I></H3><P>Async Copy Reads/sec is the frequency of reads from Cache pages that involve a memory copy of the data from the Cache to the application's buffer. The application will regain control immediately even if the disk must be accessed to retrieve the page.</P>
<P>Index: 110     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec2"></A>Async Data Maps/sec<I>     Wizard</I></H3><P>Async Data Maps/sec is the frequency that an application using a file system such as NTFS or HPFS to map a page of a file into the Cache to read the page, and does not wish to wait for the Cache to retrieve the page if it is not in main memory.</P>
<P>Index: 092     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec3"></A>Async Fast Reads/sec<I>     Wizard</I></H3><P>Async Fast Reads/sec is the frequency of reads from Cache pages that bypass the installed file system and retrieve the data directly from the Cache. Normally, file I/O requests will invoke the appropriate file system to retrieve data from a file, but this path permits direct retrieval of Cache data without file system involvement if the data is in the Cache. Even if the data is not in the Cache, one invocation of the file system is avoided. If the data is not in the Cache, the request (application program call) will not wait until the data has been retrieved from disk, but will get control immediately.</P>
<P>Index: 128     Default Scale: 0.1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec4"></A>Async MDL Reads/sec<I>     Wizard</I></H3><P>Async MDL Reads/sec is the frequency of reads from Cache pages using a Memory Descriptor List (MDL) to access the pages. The MDL contains the physical address of each page in the transfer, thus permitting Direct Memory Access (DMA) of the pages. If the accessed page(s) are not in main memory, the calling application program will not wait for the pages to fault in from disk.</P>
<P>Index: 118     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec5"></A>Async Pin Reads/sec<I>     Wizard</I></H3><P>Async Pin Reads/sec is the frequency of reading data into the Cache preparatory to writing the data back to disk. Pages read in this fashion are pinned in memory at the completion of the read. The file system will regain control immediately even if the disk must be accessed to retrieve the page. While pinned, a page's physical address will not be altered.</P>
<P>Index: 102     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec6"></A>Copy Read Hits %<I>     Expert</I></H3><P>Copy Read Hits is the percentage of Cache Copy Read requests that hit the Cache, that is, did not require a disk read in order to provide access to the page in the Cache. A Copy Read is a file read operation that is satisfied by a memory copy from a Cache page to the application's buffer. The LAN Redirector uses this method for retrieving Cache information, as does the LAN Server for small transfers. This is a method used by the disk file systems as well.</P>
<P>Index: 112     Default Scale: 1</P>
<P>Counter Type: PERF_SAMPLE_FRACTION     Counter Size: 4 bytes</P>
<H3><A NAME="sec7"></A>Copy Reads/sec<I>     Expert</I></H3><P>Copy Reads/sec is the frequency of reads from Cache pages that involve a memory copy of the data from the Cache to the application's buffer. The LAN Redirector uses this method for retrieving Cache information, as does the LAN Server for small transfers. This is a method used by the disk file systems as well.</P>
<P>Index: 106     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec8"></A>Data Flush Pages/sec<I>     Advanced</I></H3><P>Data Flush Pages/sec is the number of pages the Cache has flushed to disk as a result of a request to flush or to satisfy a write-through file write request. More than one page can be transferred on each flush operation.</P>
<P>Index: 140     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec9"></A>Data Flushes/sec<I>     Wizard</I></H3><P>Data Flushes/sec is the frequency the Cache has flushed its contents to disk as the result of a request to flush or to satisfy a write-through file write request. More than one page can be transferred on each flush operation.</P>
<P>Index: 138     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec10"></A>Data Map Hits %<I>     Wizard</I></H3><P>Data Map Hits is the percentage of Data Maps in the Cache that could be resolved without having to retrieve a page from the disk, that is the page was already in physical memory.</P>
<P>Index: 094     Default Scale: 1</P>
<P>Counter Type: PERF_SAMPLE_FRACTION     Counter Size: 4 bytes</P>
<H3><A NAME="sec11"></A>Data Map Pins/sec<I>     Wizard</I></H3><P>Data Map Pins/sec is the frequency of Data Maps in the Cache that resulted in pinning a page in main memory, an action usually preparatory to writing to the file on disk. While pinned, a page's physical address in main memory and virtual address in the Cache will not be altered.</P>
<P>Index: 096     Default Scale: 1</P>
<P>Counter Type: PERF_SAMPLE_FRACTION     Counter Size: 4 bytes</P>
<H3><A NAME="sec12"></A>Data Maps/sec<I>     Expert</I></H3><P>Data Maps/sec is the frequency that a file system such as NTFS or HPFS maps a page of a file into the Cache to read the page.</P>
<P>Index: 088     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec13"></A>Fast Read Not Possibles/sec<I>     Wizard</I></H3><P>Fast Read Not Possibles/sec is the frequency of attempts by an application program interface (API) function call to bypass the file system to get at Cache data, that could not be honored without invoking the file system after all.</P>
<P>Index: 132     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec14"></A>Fast Read Resource Misses/sec<I>     Wizard</I></H3><P>Fast Read Resource Misses/sec is the frequency of Cache misses necessitated by the lack of available resources to satisfy the request.</P>
<P>Index: 130     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec15"></A>Fast Reads/sec<I>     Expert</I></H3><P>Fast Reads/sec is the frequency of reads from Cache pages that bypass the installed file system and retrieve the data directly from the Cache. Normally, file I/O requests invoke the appropriate file system to retrieve data from a file, but this path permits direct retrieval of Cache data without file system involvement if the data is in the Cache. Even if the data is not in the Cache, one invocation of the file system is avoided.</P>
<P>Index: 124     Default Scale: 0.1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec16"></A>Lazy Write Flushes/sec<I>     Wizard</I></H3><P>Lazy Write Flushes/sec is the frequency the Cache's Lazy Write thread has written to disk. Lazy Writing is the process of updating the disk after the page has been changed in memory, so the application making the change to the file does not have to wait for the disk write to complete before proceeding. More than one page can be transferred on each write operation.</P>
<P>Index: 134     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec17"></A>Lazy Write Pages/sec<I>     Advanced</I></H3><P>Lazy Write Pages/sec is the frequency the Cache's Lazy Write thread has written to disk. Lazy Writing is the process of updating the disk after the page has been changed in memory, so the application making the change to the file does not have to wait for the disk write to complete before proceeding. More than one page can be transferred on a single disk write operation.</P>
<P>Index: 136     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec18"></A>MDL Read Hits %<I>     Expert</I></H3><P>MDL Read Hits is the percentage of Cache Memory Descriptor List (MDL) Read requests that hit the Cache, that is, did not require disk accesses in order to provide memory access to the page(s) in the Cache.</P>
<P>Index: 120     Default Scale: 1</P>
<P>Counter Type: PERF_SAMPLE_FRACTION     Counter Size: 4 bytes</P>
<H3><A NAME="sec19"></A>MDL Reads/sec<I>     Expert</I></H3><P>MDL Reads/sec is the frequency of reads from Cache pages that use a Memory Descriptor List (MDL) to access the data. The MDL contains the physical address of each page involved in the transfer, and thus can employ a hardware Direct Memory Access (DMA) device to effect the copy. The LAN Server uses this method for large transfers out of the server.</P>
<P>Index: 114     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec20"></A>Pin Read Hits %<I>     Expert</I></H3><P>Pin Read Hits is the percentage of Cache Pin Read requests that hit the Cache, that is, did not require a disk read in order to provide access to the page in the Cache. While pinned, a page's physical address in the Cache will not be altered. The LAN Redirector uses this method for retrieving Cache information, as does the LAN Server for small transfers. This is usually the method used by the disk file systems as well.</P>
<P>Index: 104     Default Scale: 1</P>
<P>Counter Type: PERF_SAMPLE_FRACTION     Counter Size: 4 bytes</P>
<H3><A NAME="sec21"></A>Pin Reads/sec<I>     Expert</I></H3><P>Pin Reads/sec is the frequency of reading data into the Cache preparatory to writing the data back to disk. Pages read in this fashion are pinned in memory at the completion of the read. While pinned, a page's physical address in the Cache will not be altered.</P>
<P>Index: 098     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec22"></A>Sync Copy Reads/sec<I>     Wizard</I></H3><P>Sync Copy Reads/sec is the frequency of reads from Cache pages that involve a memory copy of the data from the Cache to the application's buffer. The file system will not regain control until the copy operation is complete, even if the disk must be accessed to retrieve the page.</P>
<P>Index: 108     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec23"></A>Sync Data Maps/sec<I>     Wizard</I></H3><P>Sync Data Maps/sec counts the frequency that a file system such as NTFS or HPFS maps a page of a file into the Cache to read the page, and wishes to wait for the Cache to retrieve the page if it is not in main memory.</P>
<P>Index: 090     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec24"></A>Sync Fast Reads/sec<I>     Wizard</I></H3><P>Sync Fast Reads/sec is the frequency of reads from Cache pages that bypass the installed file system and retrieve the data directly from the Cache. Normally, file I/O requests invoke the appropriate file system to retrieve data from a file, but this path permits direct retrieval of Cache data without file system involvement if the data is in the Cache. Even if the data is not in the Cache, one invocation of the file system is avoided. If the data is not in the Cache, the request (application program call) will wait until the data has been retrieved from disk.</P>
<P>Index: 126     Default Scale: 0.1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec25"></A>Sync MDL Reads/sec<I>     Wizard</I></H3><P>Sync MDL Reads/sec is the frequency of reads from Cache pages that use a Memory Descriptor List (MDL) to access the pages. The MDL contains the physical address of each page in the transfer, thus permitting Direct Memory Access (DMA) of the pages. If the accessed page(s) are not in main memory, the caller will wait for the pages to fault in from the disk.</P>
<P>Index: 116     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P>
<H3><A NAME="sec26"></A>Sync Pin Reads/sec<I>     Wizard</I></H3><P>Sync Pin Reads/sec is the frequency of reading data into the Cache preparatory to writing the data back to disk. Pages read in this fashion are pinned in memory at the completion of the read. The file system will not regain control until the page is pinned in the Cache, in particular if the disk must be accessed to retrieve the page. While pinned, a page's physical address in the Cache will not be altered.</P>
<P>Index: 100     Default Scale: 1</P>
<P>Counter Type: PERF_COUNTER_COUNTER     Counter Size: 4 bytes</P></FONT></BODY></HTML>
