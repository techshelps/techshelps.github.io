<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Counter Names and Descriptions to the Registry</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Adding Counter Names and Descriptions to the Registry</H3><P>The names and Explain text of objects and counters are stored in the Registry. You must add this information to the Registry for any objects and counters you add to the system.</P>
<P>The following diagram shows the Registry location where performance counter names and descriptions are stored.</P>
<P>|<P><BR></P>
<pre><code><BR>\HKEY_LOCAL_MACHINE<BR>    \SOFTWARE<BR>        \Microsoft<BR>            \Windows&nbsp;NT<BR>                \CurrentVersion<BR>                    \Perflib<BR>                        Last Counter =<BR>                        Last Help =<BR>                        \009<BR>                            Counters = 2 System 4 Memory <BR>                            Help = 3 The System object type includes...<BR>                        \other supported languages<BR>                            Counters =<BR>                            Help =</code></pre>
<P>The Perflib key has one or more subkeys, representing each language supported on the computer. The name in each subkey is the language ID:  for example, 009 is the language ID for U.S. English. </P>
<P>Under each language subkey are Counters and Explain text entries that store multiple Unicode strings containing information about all registered objects and counters. In the Registry example above, part of the Counters and Help entries for U.S. English are shown.</P>
<P>As described in the last chapter, for each counter or counter object the Counters value stores an index and a name that identifies the counter or counter object. Similarly, the Help value stores an index and a string that describes the counter or counter object. (The strings in the Help value are shown when you choose the Explain button in Performance Monitor.)</P>
<P>The Counters index for each counter is always an even number, and the Help index is usually one greater than the Counters index for that counter. This convention makes it easy to associate the help text with its counter during debugging. The following table shows a fragment from typical Counters and Help values:</P>
<P>Table 13.1    Performance Counters and Help Values</P>

<TABLE COLS="4" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="99pt" VALIGN="TOP"><COL WIDTH="99pt" VALIGN="TOP"><COL WIDTH="99pt" VALIGN="TOP"><COL WIDTH="99pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Counters</P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>Help</P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Index</B></P></TD><TD VALIGN="TOP"><P><B>Name</B></P></TD><TD VALIGN="TOP"><P><B>Index+1</B></P></TD><TD VALIGN="TOP"><P><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP"><P>820</P></TD><TD VALIGN="TOP"><P>VGA</P></TD><TD VALIGN="TOP"><P>821</P></TD><TD VALIGN="TOP"><P>The VGA Object Type handles the VGA device on your system.</P></TD></TR><TR><TD VALIGN="TOP"><P>822</P></TD><TD VALIGN="TOP"><P>BitBlts/sec</P></TD><TD VALIGN="TOP"><P>823</P></TD><TD VALIGN="TOP"><P>BitBlts/sec is the rate at which your system sends blocks of pixels to the display.</P></TD></TR><TR><TD VALIGN="TOP"><P>824</P></TD><TD VALIGN="TOP"><P>TextOuts/sec</P></TD><TD VALIGN="TOP"><P>825</P></TD><TD VALIGN="TOP"><P>TextOuts/sec is the rate at which your system sends lines of text to the display.</P></TD></TR></TBODY></TABLE>
<P>|<P><BR></P><P>Performance monitoring applications and performance DLLs use the Counters index to identify the counter or counter object. A performance monitoring application uses the Counters name and the Help description to display information about a counter.</P>
<P>Also under the Perflib key are the Last Counter and Last Help values. These values are set to the highest index numbers used in the Counters and Help values.</P>
<P>To add names and descriptions of the objects and counters for your application, use the <B>lodctr</B> utility included on the diskette provided with this book (it's also in the Windows&nbsp;NT DDK). The <B>lodctr</B> utility takes strings from an .INI file and adds them to the Counters and Help values under the appropriate language subkeys under the Perflib key. It also updates the Last Counter and Last Help values under PerfLib.</P>
<P>You should add all your counters at one time. Running <B>lodctr</B> twice to add more counters without running <B>unlodctr</B> in between will not work. Avoid this scurrilous practice.</P>
<P>The .INI file can include strings for any number of languages, but <B>lodctr</B> only installs the strings for languages that have existing subkeys under PerfLib. You should set up your .INI file to install strings for all languages you might ever want to see your objects and counters in. If you have not yet translated them, consider installing the English strings as placeholders until you have time to translate. It's not perfect, but it's better than nothing.</P>
<P>While it modifies the values in the PerfLib node, <B>lodctr</B> creates a value called 'Updating' in the Perflib node to act as a semaphore to synchronize PerfLib modifications. Before it stops, <B>lodctr</B> deletes the Updating value.</P>
<P>In addition to making the additions under PerfLib, the <B>lodctr</B> utility also adds the following value entries to the Performance subkey in the application's <B>Services</B> node:</P>
<P>|<P><BR></P>
<pre><code><BR>\HKEY_LOCAL_MACHINE<BR>     \SYSTEM<BR>          \CurrentControlSet<BR>               \Services<BR>                    \ApplicationName<BR>                         \Performance<BR>                              First Counter =<BR>                              First Help =<BR>                              Last Counter =<BR>                              Last Help =</code></pre>
<P>The following table explains these values.</P>
<P>Table 13.2    LodCtr-Added Value Names and Descriptions</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="63pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Value name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>First Counter</P></TD><TD VALIGN="TOP"><P>Counter index of the first counter or counter object that LodCtr installed for this application.</P></TD></TR><TR><TD VALIGN="TOP"><P>First Help</P></TD><TD VALIGN="TOP"><P>Help index of the first counter or counter object that LodCtr installed for this application.</P></TD></TR><TR><TD VALIGN="TOP"><P>Last Counter</P></TD><TD VALIGN="TOP"><P>Counter index of the last counter or counter object that LodCtr installed for this application.</P></TD></TR><TR><TD VALIGN="TOP"><P>Last Help</P></TD><TD VALIGN="TOP"><P>Help index of the last counter or counter object that LodCtr installed for this application.</P></TD></TR></TBODY></TABLE>
<P>|<P><BR></P><P>The command-line syntax for <B>lodctr </B>is:</P>
<P><B>lodctr</B> <I>MyApplication</I><B>.ini</B></P>
<P>The .INI file used by <B>lodctr</B> has the following format:</P>
<P>|<P><BR></P>
<pre><code><BR>[info]<BR>applicationname=ApplicationName<BR>symbolfile=SymbolFile<BR><BR>[languages] // one key (value optional) for each language supported<BR>langid=<BR> .<BR> .<BR> .<BR><BR>[text]  // name and description for each counter or counter object<BR>offset_langid_NAME=Name         // "Counters" name string<BR>offset_langid_HELP=Description  // "Help" description string<BR> .<BR> .<BR> .</code></pre>
<P>The .INI file entries are variables with the following meanings:</P>
<P>Table 13.3    LodCtr Variables</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="249pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Variable</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P><I>ApplicationName</I></P></TD><TD VALIGN="TOP"><P>The name of the application found under the CurrentControlSet\Services key.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>SymbolFile</I></P></TD><TD VALIGN="TOP"><P>An .H file containing symbolic offsets of counters. The performance DLL also uses the offsets in this file along with the First Counter and First Help Registry values to determine the indexes of the various counters and counter objects.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>langid</I></P></TD><TD VALIGN="TOP"><P>An ID corresponding to the language subkey in the Registry (for example, 009 for U.S. English).</P></TD></TR><TR><TD VALIGN="TOP"><P><I>offset</I></P></TD><TD VALIGN="TOP"><P>A symbolic constant defined in <I>SymbolFile</I>. Offsets must be consecutive, even numbers beginning with zero. These offsets determine the order in which the counters are installed in the Counters and Help values in the Registry.</P></TD></TR></TBODY></TABLE>
<P>|<P><BR></P><P>The following listings show examples of a <I>SymbolFile</I> and an .INI file:</P>
<P>|<P><BR></P>
<pre><code>// begin symfile.h example<BR><BR>#define OBJECT_1    0<BR>#define DEVICE_COUNTER_1    2<BR>#define DEVICE_COUNTER_2    4<BR><BR>// end symfile.h example<BR><BR>---------------------------------------------------<BR>// begin .INI file example<BR>[info]<BR>applicationname=ApplicationName<BR>symbolfile=symfile.h<BR><BR>[languages] <BR>009=English<BR>011=OtherLanguage<BR><BR>[text]  <BR>OBJECT_1_009_NAME=Device Name<BR>OBJECT_1_009_HELP=Displays performance statistics on Device Name<BR>OBJECT_1_011_NAME=Device Name in other language<BR>OBJECT_1_011_HELP=Displays performance of Device Name in other language<BR><BR>DEVICE_COUNTER_1_009_NAME=Counter A<BR>DEVICE_COUNTER_1_009_HELP=Displays the current value of Counter A<BR>DEVICE_COUNTER_1_011_NAME=Counter A in other language<BR>DEVICE_COUNTER_1_011_HELP=Displays the value of Counter A in other language<BR><BR>DEVICE_COUNTER_2_009_NAME=Counter B<BR>DEVICE_COUNTER_2_009_HELP=Displays the current rate of Device B<BR>DEVICE_COUNTER_2_011_NAME=Counter B in other language<BR>DEVICE_COUNTER_2_011_HELP=Displays the rate of Device B in other language<BR><BR>// end .INI file<BR></code></pre>
<P>If you run <B>lodctr</B> to add counters for an application and the application does not have a Performance subkey, <B>lodctr</B> returns without modifying the PerfLib values.</P>
<H4><A NAME="sec0"></A>Removing Counter Names and Descriptions from the Registry</H4><P>If you need to remove counter names and Explain text from the Registry, use the <B>unlodctr </B>utility. This removes the Registry entries made by <B>lodctr</B>. The command-line syntax for <B>unlodctr </B>is:</P>
<P><B>unlodctr</B> <I>ApplicationName</I></P>
<P>The <B>unlodctr</B> utility looks up the First Counter and Last Counter values in the application's <B>Performance</B> key to determine the indexes of the counter objects to remove. Using these indexes, it makes the following changes to the Last Counter, Last Help, Counters, and Help values under the <B>Perflib</B> node:</P>
<P>|<P><BR></P>
<pre><code>\HKEY_LOCAL_MACHINE<BR>   \SOFTWARE<BR>      \Microsoft<BR>         \Windows&nbsp;NT<BR>            \CurrentVersion<BR>               \Perflib<BR>                  Last Counter = (updated if changed)<BR>                  Last Help =    (updated if changed)  <BR>                  \009<BR>                     Counters (application's text removed)<BR>                     Help     (application's text removed)<BR>                  \other supported languages<BR>                     Counters (application's text removed)<BR>                     Help     (application's text removed)</code></pre>
<P>Then, <B>unlodctr </B> removes the First Counter, First Help, Last Counter, and Last Help value entries from the application's <B>Performance</B> key.</P></FONT></BODY></HTML>
