<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What a Counter Counts</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>What a Counter Counts </H2><P>Someone once said that if you can't measure it, you can't manage it. Unfortunately, just being able to measure something does not guarantee that you can manage it. But it's a start.</P>
<P>Fundamental to Performance Monitor is the concept of a <I>counter</I>. On hardware devices, counters count visits to the device (in the fancy parlance of the previous section, <I>visits(device))</I>. The Physical Disk device has, for example, a count of disk transfers made, expressed as Transfers/sec. The <I>service(device)</I> is sometimes also<I> </I>provided, as in Avg. Disk sec/IO in the case of Physical Disks. Often we break down these visits into categories to better indicate the cause of the activity. To continue the example, we provide the counters Disk Reads/sec and Disk Writes/sec so you can gain a better understanding of the cause of disk congestion.</P>
<P>We have a strong bias for expressing counters as rates per second, and timers as the fraction of time that a device is used (expressed as a percentage). The advantage of this approach is that if a counter is observed over a five-minute period and then compared to its value over a 10-second period, the numbers are comparable if they are expressed as a fraction of time or a rate over time.</P>
<P>You'll have to deal with this a lot, so let's take an example to make this concept clear. Suppose we have one counter that is timing disk operation, and another that is counting disk transfers. Table 2.1 shows a simple case with absolute counter values.</P>
<P>Table 2.1    Absolute Counter Values</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="120pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>10-second interval</P></TD><TD VALIGN="TOP"><P>5-minute interval</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Disk time</B></P></TD><TD VALIGN="TOP"><P>8.654 seconds</P></TD><TD VALIGN="TOP"><P>225.621 seconds</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Disk transfers</B></P></TD><TD VALIGN="TOP"><P>258 transfers</P></TD><TD VALIGN="TOP"><P>9024.8 transfers</P></TD></TR></TBODY></TABLE>
<P>|<P><BR></P><P>Looking at these two sets of data, it is actually a bit difficult to see which one has the busier disk. Look at the same situation in Table 2.2, expressed as rates and utilizations:</P>
<P>Table 2.2    Relative Counter Values</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="120pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>10-second interval</P></TD><TD VALIGN="TOP"><P>5-minute interval</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Disk time</B></P></TD><TD VALIGN="TOP"><P>86.54%</P></TD><TD VALIGN="TOP"><P>75.20%</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Disk transfers</B></P></TD><TD VALIGN="TOP"><P>25.800 Transfers/sec</P></TD><TD VALIGN="TOP"><P>30.080 Transfers/sec</P></TD></TR></TBODY></TABLE>
<P>|<P><BR></P><P>Now we can see that over the five minute interval the disk was slightly less busy, yet handled more transfers. How can this be? Either there was less seeking/rotation on each transfer, or fewer bytes per transfer. To determine which, see the Average Disk Bytes/IO counter for this disk. But we won't fuss with that now because the real point here is that Table 2.2 is directly relevant, and Table 2.1 is not. Now you can see why Performance Monitor will display nearly all of its data in the form shown in Table 2.2.</P></FONT></BODY></HTML>
