<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Distributed Applications and Windows NT</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Distributed Applications and Windows&nbsp;NT</H2><P>Any application you run on Windows&nbsp;NT can take advantage of networking resources because networking components are built into Windows&nbsp;NT. In addition, Windows&nbsp;NT includes several mechanisms that support and benefit distributed applications. </P>
<P>A <I>distributed application</I> is one that has two parts—a front-end to run on the client computer and a back-end to run on the server. In distributed computing, the goal is to divide the computing task into two sections. The front-end requires minimal resources and runs on the client's workstation. The back-end requires large amounts of data, number crunching, or specialized hardware and runs on the server. A connection between the client and the server at a process-to-process level allows data to flow in both directions between the client and server.</P>
<P>Microsoft Mail, Microsoft Schedule+, SQL Server, and SNA Server are examples of distributed applications.</P>
<P>As described in the next section, Windows&nbsp;NT includes NetBIOS and Windows Sockets interfaces for building distributed applications. In addition, Windows&nbsp;NT supports peer-to-peer named pipes, mailslots, and remote procedure calls (RPC). On Windows&nbsp;NT, for example, an electronic mail product could include a messaging service using named pipes and asynchronous communication that runs with any transport protocol or network card.</P>
<P>Of named pipes, mailslots, and RPC, RPC is the most portable mechanism. RPCs use other interprocess communication (IPC) mechanisms — including named pipes and the NetBIOS and Windows Sockets interfaces — to transfer functions and data between client and server computers. </P>
<P>Named pipes and mailslots are implemented to provide backward compatibility with existing LAN Manager installations and applications. </P>
<P>For more information about using distributed applications with Windows&nbsp;NT, see Chapter 8, "Client-Server Connectivity on Windows NT."</P></FONT></BODY></HTML>
