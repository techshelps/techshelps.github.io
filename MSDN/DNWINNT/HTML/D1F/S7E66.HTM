<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Specifying Remote Servers in LMHOSTS</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Specifying Remote Servers in LMHOSTS</H3><P>Computer names can be resolved outside the local broadcast area if computer name and IP address mappings are specified in the LMHOSTS file. For example, suppose the computer named ClientA wants to connect to the computer named ServerB, which is outside of its IP broadcast area. Both Windows&nbsp;NT computers are configured with Microsoft TCP/IP.</P>
<P>Under a strict b-node broadcast protocol, as defined in RFCs 1001 and 1002, ClientA's name query request for ServerB would fail (by timing out), because ServerB is located on a remote subnet and does not respond to ClientA's broadcast requests. So an alternate method is provided for name resolution. Windows&nbsp;NT maintains a limited cache of computer name and IP address mappings, which is initialized at system startup. When a workstation needs to resolve a name, the cache is examined first and, if there is no match in the cache, Windows&nbsp;NT uses b-node broadcast name resolution. If this fails, the LMHOSTS file is used. If this last method fails, the name is unresolved, and an error message appears.</P>
<P>This strategy allows the LMHOSTS file to contain a large number of mappings without requiring a large chunk of static memory to maintain an infrequently used cache. At system startup, the name cache is preloaded only with entries from LMHOSTS tagged with the #PRE keyword. For example, the LMHOSTS file could contain the following information:</P>
<P><BR></P>
<pre><code><BR>102.54.94.91   accounting         #accounting server
102.54.94.94   payroll            #payroll server
102.54.94.97   stockquote  #PRE   #stock quote server
102.54.94.102  printqueue         #print server in Bldg 10</code></pre>
<P>In this example, the server named <B>stockquote</B> is preloaded into the name cache, because it is tagged with the #PRE keyword. Entries in the LMHOSTS file can represent Windows&nbsp;NT Workstation computers, Windows&nbsp;NT Server computers, LAN Manager servers, or Windows for Workgroups 3.11 computers running Microsoft TCP/IP. There is no need to distinguish between different platforms in LMHOSTS.</P>
<P><B>Note    </B>The Windows&nbsp;NT tag #PRE allows backward compatibility with LAN Manager 2.<I>x</I> LMHOSTS files and offers added flexibility in Windows&nbsp;NT. Under LAN&nbsp;Manager, the pound sign (#) character identifies a comment, so all characters thereafter are ignored. But #PRE is a valid tag for Windows&nbsp;NT. </P>
<P>In the above example, the servers named <B>accounting</B>, <B>payroll</B>, and <B>printqueue</B> would be resolved only after the cache entries failed to match and after broadcast queries failed to locate them. After nonpreloaded entries are resolved, their mappings are cached for a period of time for reuse. </P>
<P>Windows&nbsp;NT limits the preload name cache to 100 entries by default. This limit only affects entries marked with the #PRE keyword. If you specify more than 100 entries, only the first 100 #PRE entries are preloaded. Any additional #PRE entries are ignored at startup but are resolved when the system parses the LMHOSTS file after dynamic resolution fails. </P>
<P>Finally, you can reprime the name cache by using the <B>nbtstat -R</B> command to purge and reload the name cache, reread the LMHOSTS file, and then insert entries tagged with the #PRE keyword. Use the <B>nbtstat</B> command to remove or correct preloaded entries that might have been mistyped or any names cached by successful broadcast resolution.</P></FONT></BODY></HTML>
