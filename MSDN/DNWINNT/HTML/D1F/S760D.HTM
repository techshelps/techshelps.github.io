<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using TCP/IP with Third-Party Software</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Using TCP/IP with Third-Party Software</H3><P>TCP/IP is a common denominator for heterogeneous networking, and Windows Sockets is a standard used by application developers. Together they provide a framework for cross-platform client-server development. TCP/IP-aware applications from vendors that comply with the Windows Sockets standards can run over virtually any TCP/IP implementation.</P>
<P>The Windows Sockets standard ensures compatibility with Windows-based TCP/IP utilities developed by more than 30 vendors. This includes third-party applications for the X Window System, sophisticated terminal emulation software, NFS, electronic mail packages, and more. Because Windows&nbsp;NT offers compatibility with 16-bit Windows Sockets, applications created for Windows 3.<I>x</I> Windows Sockets run over Windows&nbsp;NT without modification or recompilation.</P>
<P>For example, third-party applications for X Window provide strong connectivity solutions by means of X Window servers, database servers, and terminal emulation. With such applications, a Windows&nbsp;NT computer can work as an X Window server platform while retaining compatibility with applications created for Windows&nbsp;NT, Windows 3.1, and MS-DOS on the same system. Other third-party software includes X Window client libraries for Windows&nbsp;NT, which allow developers to write X Window client applications on Windows&nbsp;NT that can be run and displayed remotely on X Window server systems.</P>
<P>The Windows Sockets API is a networking API used by programmers creating applications for both the Microsoft Windows&nbsp;NT and Windows operating systems. Windows Sockets is an open standard that is part of the Microsoft Windows Open System Architecture (WOSA) initiative. It is a public specification based on Berkeley UNIX sockets, which means that UNIX applications can be quickly ported to Microsoft Windows and Windows&nbsp;NT. Windows Sockets provides a single standard programming interface supported by all the major vendors implementing TCP/IP for Windows systems. </P>
<P>The Windows&nbsp;NT TCP/IP utilities use Windows Sockets, as do 32-bit TCP/IP applications developed by third parties. Windows&nbsp;NT also uses the Windows Sockets interface to support Services for Macintosh and IPX/SPX in NWLink. Under Windows&nbsp;NT, 16-bit Windows-based applications created under the Windows Sockets standard will run without modification or recompilation. Most TCP/IP users will use programs that comply with the Windows Sockets standard, such as <B>ftp</B> or <B>telnet</B> or third-party applications. </P>
<P>The Windows Sockets standard allows a developer to create an application with a&nbsp;single common interface and a single executable that can run over many of the TCP/IP implementations provided by vendors. The goals for Windows Sockets are the following: </P>
<UL><LI>     Provide a familiar networking API to programmers using Windows&nbsp;NT, Windows for Workgroups, or UNIX</LI><LI>     Offer binary compatibility between vendors for heterogeneous Windows-based TCP/IP stacks and utilities</LI><LI>     Support both connection-oriented and connectionless protocols</LI></UL><P>Typical Windows Sockets applications include graphic connectivity utilities, terminal emulation software, Simple Mail Transfer Protocol (SMTP) and electronic mail clients, network printing utilities, SQL client applications, and corporate client-server applications. </P>
<P>If you are interested in developing a Windows Sockets application, specifications for Windows Sockets are available<I> </I>on the Internet from ftp.microsoft.com, on CompuServe&reg; in the MSL library, and in the Microsoft Win32 Software Developers Kit. </P>
<H4><A NAME="sec0"></A>To get a copy of the Windows Sockets specification via anonymous FTP</H4><OL><LI>    Make sure you have write permission in your current working directory.</LI><LI>    At the command prompt, start <B>ftp</B>, and then connect to <B>ftp.microsoft.com</B> (or <B>198.105.232.1</B>).</LI><LI>    Log on as <B>anonymous</B>.</LI><LI>    Type your electronic mail address for the <I>password</I>.</LI><LI>    Type <B>cd \advsys\winsock\spec11</B>, and then press ENTER.</LI><LI>    Use the <B>dir</B> command to see the list of available file types. If you want binary data such as in the Microsoft Word version, type <B>bin</B>, and then press ENTER.</LI><LI>    Determine the file with the format you want [for example, ASCII (.TXT), PostScript&reg; (.PS), or Microsoft Word (.DOC)], and then type <B>get winsock.</B><I>ext</I> where <I>ext</I> is the format that you want, such as <B>winsock.doc</B> for the Microsoft Word version.</LI></OL><H4><A NAME="sec1"></A>To get a copy of the Windows Sockets specification from CompuServe</H4><OL><LI>    At the command prompt, type <B>go msl</B>, and then press ENTER.</LI><LI>    Browse using the keywords <B>windows sockets</B>.</LI><LI>    Choose the file with the format you want [ASCII (.TXT), PostScript (.PS), or Microsoft Word for Windows (.DOC)], and then type <B>get winsock</B>.<I>ext</I>.</LI></OL><P>There is also an electronic mailing list designed for discussion of Windows Sockets programming. </P>
<H4><A NAME="sec2"></A>To subscribe to the Windows Sockets mailing list</H4><UL><LI>     Send electronic mail to listserv@sunsite.unc.edu with a message body that contains <B>subscribe winsock</B> <I>user's-email-address</I>.</LI></UL><P>You can use the same procedure to subscribe to two mailing lists called <B>winsock-hackers </B>and<B> winsock-users</B>.</P></FONT></BODY></HTML>
