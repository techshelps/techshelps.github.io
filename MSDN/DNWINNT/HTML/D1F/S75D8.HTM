<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Net-Library Architecture</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Net-Library Architecture</H2><P>Microsoft SQL&nbsp;Server Net-Library architecture for client-server applications is based on the Net-Library concept that abstracts the client and server applications from the underlying network protocols being used. Figure 8.2 shows how SQL&nbsp;Server and related products can be accessed from practically any network environment.</P>
<P><img src="XRGX02.gif"></P>
<P>Figure 8.2    Net-Library Architecture</P>
<P>The Net-Library architecture provides a method of sending TDS (used by Microsoft SQL&nbsp;Server, Open Data Services, and SYBASE) via an IPC across a physical network connection. The Net-Library architecture also provides a transparent interface to the DB-Library APIs and the SQL&nbsp;Server driver for ODBC.</P>
<P>Net-Libraries are linked dynamically at run time. With the Microsoft Windows&nbsp;NT, Windows, and OS/2 operating systems, Net-Libraries are implemented as DLLs, and multiple Net-Libraries can be loaded simultaneously. With MS-DOS, Net-Libraries are implemented as terminate-and-stay-resident (TSR) programs, and only one can be loaded at a time. </P>
<P>The Net-Library architecture can be divided into two components—server-side Net-Libraries and client-side Net-Libraries.</P>
<H3><A NAME="sec0"></A>Server-Side Net-Library Architecture</H3><P>Microsoft SQL Server uses the server-side Net-Library architecture that was first introduced with Microsoft SQL Bridge. It can accept client requests across multiple network protocols at the same time.</P>
<P>Figure 8.3 illustrates the integration of server-side Net-Libraries with the various SQL&nbsp;Server–based products on the Windows&nbsp;NT platform.</P>
<P><img src="XRGX03.gif"></P>
<P>Figure 8.3    Server-Side Net-Library Architecture on the Windows&nbsp;NT Platform</P>
<P>The default Net-Library is named pipes. </P>
<P>When a server-side Net-Library is loaded by an application such as SQL Server, the Net-Library implements a network-specific way of establishing communication with clients and, in some cases, registers its presence on the network. SQL Server looks at the Windows&nbsp;NT Registry to determine which Net-Library to load on startup and which parameters to pass to it. The SQL Server Monitor process also uses a server-side Net-Library to communicate with clients and to search the following Registry key for network-specific parameters:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SQLServer\Server</code></pre>
<P>At startup, SQL Server specifies a value for the <I>server_name</I> parameter in the SRV_CONFIG structure of Open Data Services. This value identifies which Registry key SQL Server will search for values of the <B>ListenOn </B>and <I>connection_string</I> Registry entries. (By default, SQL Server looks in HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SQLServer\Server.)</P>
<P>Each <I>connection_string</I> Registry value is read and passed on to the associated Net-Library (for example, named pipes) that is listed in the <B>ListenOn </B>field in the Server subkey. Each Net-Library acts upon the <I>connection_string</I> differently. </P>
<P>If there is no <I>connection_string</I> associated with the Net-Library, SQL Server does one of the following:</P>
<UL><LI>     If the Registry entry is under the SQL#Server\Server subkey, no connection string is passed as the default.</LI><LI>     If the Registry entry is not under SQL#Server\Server, <I>server_name</I> is passed as the default.</LI></UL><P>If the <I>server_name</I> subkey and the SQL#Server\Server subtree do not exist, or the Registry cannot be accessed, SQL Server assumes that the named pipes DLL (for the default Net-Library) is loaded, and no parameter is passed. (Named pipes access can be turned off by using the Registry Editor to explicitly delete the named pipes entry from the SQL#Server\Server subkey.) </P>
<P>Remote stored procedure calls and the Microsoft SQL Administrator tool also use the DB-Library/Net-Library architecture under Windows&nbsp;NT.</P>
<H3><A NAME="sec1"></A>Client-Side Net-Library Architecture</H3><P>When a call is made to open a connection to SQL&nbsp;Server, the API involved (DB-Library or the SQL&nbsp;Server driver for ODBC) determines which client-side Net-Library should be loaded to communicate with SQL&nbsp;Server or Open Data Services. (This process is described in more detail later in this chapter.) </P>
<P>Figure 8.4 shows client-side Net-Libraries used to communicate with SQL Server on the server side.</P>
<P><img src="XRGX04.gif"></P>
<P>Figure 8.4    Client-Side Net-Library Architecture</P></FONT></BODY></HTML>
