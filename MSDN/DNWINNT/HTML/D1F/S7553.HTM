<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NetBIOS and Windows Sockets</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>NetBIOS and Windows Sockets</H3><P>Besides redirectors, Windows&nbsp;NT includes two other components that provide links to remote computers—NetBIOS and Windows Sockets. Windows&nbsp;NT includes NetBIOS and Windows Sockets interfaces for building distributed applications. (Windows&nbsp;NT also includes three other interprocess communication mechanisms—named pipes, mailslots, and remote procedure calls—for use by distributed applications. These are described later in this chapter.)</P>
<P>The NetBIOS and Windows Sockets APIs are supplied by separate DLLs. These DLLs communicate with corresponding drivers in the Windows&nbsp;NT Executive. As shown by Figure 1.11, the NetBIOS and Windows Sockets drivers then bypass the Windows&nbsp;NT redirector and communicate with protocol drivers directly using the TDI. </P>
<P><img src="XRGJ09.gif"></P>
<P>Figure 1.11    NetBIOS and Windows Sockets Support</P>
<H4><A NAME="sec0"></A>NetBIOS</H4><P>NetBIOS is the Network Basic Input/Output System—a session-level interface used by applications to communicate with NetBIOS-compliant transports such as NetBEUI Frame (NBF). The network redirector is an example of a NetBIOS application. The NetBIOS interface is responsible for establishing logical names on the network, establishing sessions between two logical names on the network, and supporting reliable data transfer between computers that have established a session.</P>
<P>This Session-Layer interface was originally developed by Sytek, Inc., for IBM's broadband computer network. At that time, NetBIOS was included on a ROM chip on the network adapter card. Sytek also developed a NetBIOS for IBM's Token-Ring network, this time implemented as a device driver. Several other vendors have since produced versions of this interface.</P>
<P>In order to support the emerging network industry standard, Microsoft developed the NetBIOS interface for MS-Net and LAN Manager products, and also included this interface with the Windows for Workgroups product.</P>
<P>NetBIOS uses a unique logical name to identify a workstation for handling communications between nodes. A NetBIOS name is a unique alphanumeric name consisting of one to 15 characters. To carry on two-way communication between computers, NetBIOS establishes a logical connection, or <I>session</I>, between them. Once a logical connection is established, computers can then exchange data in the form of NetBIOS requests or in the form of a Server Message Block (SMB). </P>
<H4><A NAME="sec1"></A>Server Message Blocks</H4><P>The SMB protocol (developed jointly by Microsoft, Intel, and IBM) defines a series of commands used to pass information between networked computers and can be broken into four message types—session control, file, printer, and message. Session control consists of commands that start and end a redirector connection to a shared resource at the server. The file SMB messages are used by the redirector to gain access to files at the server. The printer SMB messages are used by the redirector to send data to a print queue at a server and to get status information about the print queue. The message SMB type allows an application to send messages to or receive messages from another workstation.</P>
<P>The redirector packages network control block (NCB) requests meant for remote computers in a structure known as a system message block (SMB). SMBs can be sent over the network to a remote device. The redirector also uses SMBs to make requests to the protocol stack of the local computer, such as "Create a session with the file server."</P>
<P>The provider DLL listens for SMB messages destined for it and removes the data portion of the SMB request so that it can be processed by a local device. </P>
<P>SMBs provide interoperability between different versions of the Microsoft family of networking products and other networks that use SMBs, including these:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="179pt" VALIGN="TOP"><COL WIDTH="179pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>MS OS/2 LAN Manager</P></TD><TD VALIGN="TOP"><P>DEC PATHWORKS&trade;</P></TD></TR><TR><TD VALIGN="TOP"><P>Microsoft Windows for Workgroups</P></TD><TD VALIGN="TOP"><P>Microsoft LAN Manager for UNIX</P></TD></TR><TR><TD VALIGN="TOP"><P>IBM LAN Server</P></TD><TD VALIGN="TOP"><P>3Com&reg; 3+Open&reg;</P></TD></TR><TR><TD VALIGN="TOP"><P>MS-DOS LAN Manager</P></TD><TD VALIGN="TOP"><P>MS-Net</P></TD></TR></TBODY></TABLE>
<P><BR></P><H4><A NAME="sec2"></A>Windows Sockets</H4><P>Windows Sockets is a Windows implementation of the widely used UC Berkeley Sockets API. Microsoft TCP/IP, NWLink, and AppleTalk protocols use this interface.</P>
<P>A <I>socket</I> provides an endpoint to a connection; two sockets form a complete path. A socket works as a bidirectional pipe for incoming and outgoing data between networked computers. The Windows Sockets API is a networking API tailored for use by programmers using the Microsoft Windows family of products. Windows Sockets is a public specification based on Berkeley UNIX Sockets and aims to do the following:</P>
<UL><LI>Provide a familiar networking API to programmers using Windows or UNIX</LI><LI>Offer binary compatibility between heterogeneous Windows-based TCP/IP stack and utilities vendors</LI><LI>Support both connection-oriented and connectionless protocols</LI></UL><P>Most users will use programs that comply with Windows Sockets, such as FTP or Telnet. (However, developers who are interested in developing a Windows Sockets application can find specifications for Windows Sockets on the Internet.)</P></FONT></BODY></HTML>
