<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows Internet Name Service and Broadcast Name Resolution</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Windows Internet Name Service and Broadcast Name Resolution</H3><P>WINS provides a distributed database for registering and querying dynamic computer name-to-IP address mappings in a routed network environment. If you are administering a routed network, WINS is your best first choice for name resolution, because it is designed to solve the problems that occur with name resolution in complex internetworks. </P>
<P>WINS reduces the use of local broadcasts for name resolution and allows users to easily locate systems on remote networks. Furthermore, when dynamic addressing through DHCP results in new IP addresses for computers that move between subnets, the changes are automatically updated in the WINS database. Neither the user nor the network administrator needs to make manual accommodations for name resolution in such a case.</P>
<P>The WINS protocol is based on and is compatible with the protocols defined for NBNS in RFCs 1001/1002, so it is interoperable with any other implementations of these RFCs.</P>
<P>This section provides an overview of how WINS and name query broadcasts provide name resolution on Windows networks. For information about setting up WINS servers, see Chapter&nbsp;14,&nbsp;"Installing and Configuring WINS Servers."</P>
<H4><A NAME="sec0"></A>WINS in a Routed Environment</H4><P>WINS consists of two components: the WINS server, which handles name queries and registrations, and the client software, which queries for computer name resolution.</P>
<P>Windows-based networking clients (WINS-enabled Windows&nbsp;NT or Windows for Workgroups 3.11 computers) can use WINS directly. Non-WINS computers on the internetwork that are b-node compatible as described in RFCs 1001 and 1002 can access WINS through proxies, which are WINS-enabled computers that listen to name query broadcasts and then respond for names that are not on the local subnet or are p-node computers. </P>
<P>On a Windows NT network, users can browse transparently across routers. To allow browsing without WINS, the network administrator must ensure that the users' primary domain has Windows NT Server or Windows NT Workstation computers on both sides of the router to act as master browsers. These computers need correctly configured LMHOSTS files with entries for the domain controllers across the subnet.</P>
<P>With WINS, such strategies are not necessary because the WINS servers and proxies transparently provide the support necessary for browsing across routers where domains span the routers. </P>
<P>The following figure shows a small internetwork, with three local area networks connected by a router. Two of the subnets include WINS name servers, which can be used by clients on both subnets. WINS-enabled computers, including proxies, access the WINS server directly, and the computers using broadcasts access the WINS server through proxies. Proxies only pass name query packets and verify that registrations do not duplicate existing systems in the WINS database. Proxies, however, do not register b-node systems in the WINS database.</P>
<P><img src="XTC03_05.gif"></P>
<P>Figure 12.5    Example of an Internetwork with WINS Servers</P>
<P>The proxy communicates with the WINS server to resolve names (rather than maintaining its own database) and then caches the names for a certain time. The proxy serves as an intermediary, by either communicating with the WINS server or supplying a name-to-IP address mapping from its cache. The following illustration shows the relationships among WINS servers and clients, including proxies for non-WINS computers and the replication between WINS servers. </P>
<P><img src="XTC03_06.gif"></P>
<P>Figure 12.6    Example of Clients and Servers Using WINS</P>
<P>In the above figure, ClientA can resolve names by first querying the WINS server and, if that fails, then using broadcast name queries. ClientB, which is not WINS-enabled, can only resolve names using broadcast name queries, but when ClientC receives the broadcast, it forwards the request to the WINS server and returns the address to ClientB.</P>
<P>However, a complex environment presents additional problems. For example, an internetwork might consist of two subnets, with all the computers belonging to DomainA attached to Subnet1, all the computers in DomainB attached to Subnet2, and computers from DomainC attached to either of the subnets. In this case, without WINS, DomainA computers can browse Subnet1, DomainB computers can browse Subnet2, and DomainC computers can browse both subnets as long as the primary domain controller for DomainC is available. With WINS, computers from all domains can browse all subnets if their WINS servers share databases.</P>
<P>If the Windows&nbsp;NT client computer is also DHCP-enabled and the administrator specifies WINS server information as part of the DHCP options, the computer usually will be automatically configured with WINS server information. You can manually configure WINS settings, as described in Chapter&nbsp;11, "Installing and Configuring Microsoft TCP/IP and SNMP":</P>
<UL><LI>     To enable WINS name resolution for a computer that does not use DHCP, specify WINS server addresses in the TCP/IP Configuration dialog box.</LI><LI>     To designate a proxy, check the Enable WINS Proxy Agent option in the Advanced Microsoft TCP/IP Configuration dialog box.</LI></UL><P>With WINS servers in place on the internetwork, names are resolved using two basic methods, depending on whether WINS resolution is available and enabled on the particular computer. Whatever name resolution method is used, the process is transparent to the user after the system is configured.</P>
<P><B>If WINS is not enabled   </B>The computer registers its name by broadcasting <I>name registration request</I> packets to the local subnet via UDP datagrams. To find a particular computer, the non-WINS computer broadcasts <I>name query request</I> packets on the local subnet, although this broadcast cannot be passed on through IP routers. If local name resolution fails, the local LMHOSTS file is consulted. These processes are followed whether the computer is a network server, a workstation, or other device.</P>
<P><B>If WINS is enabled   </B>The computer first queries the WINS server, and if that does not succeed, it broadcasts its name registration and query requests via UDP datagrams (h-node), in the following series of steps:</P>
<OL><LI>    During TCP/IP configuration, the computer's name is registered with the WINS server, and then the IP address of the WINS server is stored locally so the WINS server can be found on the internetwork. The WINS database is replicated among all WINS servers on the internetwork.</LI></OL><P><img src="XTC03_02.gif"></P>
<P><B>Figure 12.7    Name Registration in the WINS Database</B></P>
<OL start=2><LI>    A <I>name query request</I> is sent first to the WINS server, including requests from remote clients that are routed through an IP router. This request is a UDP datagram. If the name is found in the WINS database, the client can establish a session based on the address mapping received from WINS.</LI></OL><P><img src="XTC03_03.gif"></P>
<P><B>Figure 12.8    Processing a Name Query Request</B></P>
<OL start=3><LI>    If querying the WINS server does not succeed and if the client computer is configured as an h-node, the computer broadcasts <I>name query request </I>packets in the same manner as a non-WINS-enabled computer.</LI><LI>    Finally, if other methods fail, the local LMHOSTS file is checked. This also includes a search of any centralized LMHOSTS files referred to in #INCLUDE statements, as described in Chapter&nbsp;15, "Setting Up LMHOSTS."</LI></OL><P>WINS servers accept and respond to UDP name queries. Any name-to-IP address mapping registered with a WINS server can be provided reliably as a response to a name query. However, a mapping in the database does not ensure that the related device is currently running, only that a computer claimed the particular IP address and it is a currently valid mapping. </P>
<H4><A NAME="sec1"></A>WINS Name Registration</H4><P>Name registration ensures that the computer's name and IP address are unique for each device. </P>
<P><B>If WINS is enabled   </B>The name registration request is sent directly to the WINS server to be added to the database. A WINS server accepts or rejects a computer name registration depending on the current contents of its database. If the database contains a different address for that name, WINS challenges the current entry to determine whether that device still claims the name. If another device is using that name, WINS rejects the new name registration request. Otherwise, WINS accepts the entry and adds it to its local database together with a timestamp, an incremental unique version number, and other information.</P>
<P><B>If WINS is not enabled   </B>For a non-WINS computer to register its name, a <I>name registration request </I>packet is broadcast to the local network, stating its computer name and IP address. Any device on the network that previously claimed that name challenges the name registration with a <I>negative name registration response</I>, resulting in an error. If the registration request is not contested within a specific time period, the computer adopts that name and address.</P>
<P>Once a non-WINS computer has claimed a name, it must challenge duplicate name registration attempts and respond positively to name queries issued on its registered name by sending a <I>positive name query response</I>. This response contains the IP address of the computer so that the two systems can establish a session. </P>
<H4><A NAME="sec2"></A>WINS Name Release</H4><P>When a computer finishes with a particular name (such as when the Workstation service or Server service is stopped), it no longer challenges other registration requests for the name. This is referred to as <I>releasing a name</I>.</P>
<P><B>If WINS is enabled   </B>Whenever a computer is shut down properly, it releases its name to the WINS server, which marks the related database entry as <I>released</I>. If the entry remains released<I> </I>for a certain period of time, the WINS server marks it as <I>extinct</I>, and the version number is updated so that the database changes will be propagated among the WINS servers. <I>Extinct </I>entries remain in the database for a designated period of time to enable the change to be propagated to all WINS servers.</P>
<P>If a name is marked released at a WINS server and a new registration arrives using that name but a different address, the WINS server can immediately give that name to the requesting client because it knows that the old client is no longer using that name. (This might happen, for example, when a DHCP-enabled laptop changes subnets.) If that computer released its name during an orderly shutdown, the WINS server does not challenge the name. If the computer restarts because of a system reset, the name registration with a new address causes the WINS server to challenge the registration, but the challenge fails and the registration will succeed, because the computer no longer has the old address.</P>
<P><B>If WINS is not enabled   </B>When a non-WINS computer releases a name, a broadcast is made to allow any systems on the network that might have cached the name to remove it. Upon receiving name query packets specifying the deleted name, the computer simply ignores the request, allowing other computers on the network to acquire the name that it has released.</P>
<P>For non-WINS computers to be accessible from other subnets, their names must be added as static entries to the WINS database or in the LMHOSTS file(s) on the remote system(s), because they will only respond to name queries that originate on their local subnet.</P>
<H4><A NAME="sec3"></A>WINS Name Renewal</H4><P>A <I>renewal</I> is a timed reregistration of a computer's name with the WINS server. The timestamp for an entry indicates the entry's expiration date and time. If the entry is owned by the local WINS server, the name is released at the time specified unless the client has reregistered. An entry defined as static never expires. If the entry is owned by another WINS server, the entry is revalidated at the time specified. If it does not exist in the database of the WINS server that owns the entry, it is removed from the local WINS database. A request for name renewal is treated the same as a new name registration. </P>
<P>Renewal provides registration reliability through periodic reregistering of names with the WINS servers. The default renewal interval for entries in the WINS database is four days. WINS clients register and refresh every two days. Because this setting reduces network traffic and allows WINS to serve many more nodes than before, you should not lower it. The primary and backup WINS servers should have the same renewal interval.</P></FONT></BODY></HTML>
