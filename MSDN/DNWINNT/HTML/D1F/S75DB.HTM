<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Win32 DB-Library Architecture</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Win32 DB-Library Architecture</H3><P>Internally, a separate operating system thread is spawned for each connection that DB-Library makes with SQL&nbsp;Server. Each instance of the DB-Library DLL that is loaded&nbsp;by a calling process gets a private data area, while sharing code.</P>
<P>The Win32 DB-Library architecture differs from the implementation with Windows 3<I>.x</I>. In Windows&nbsp;3<I>.x</I>,&nbsp;the DB-Library DLL has a single data segment that is shared among all calling processes.&nbsp;W3DBLIB.DLL maintains DB-Library connections as a linked list of connections in a single&nbsp;data segment. This architecture is required, because in Windows 3<I>.x</I> DLLs have a&nbsp;single data segment that is shared among all calling processes. This necessitates the initialization and clean up of the DB-Library DLL data structures through calls to the <B>dbinit</B> and <B>dbwinexit</B> functions.</P>
<P>The DB-Library functions for Win32 are located in NTWDBLIB.DLL, and the named pipe Net-Library is located in DBNMPNTW.DLL. (Be sure to set the PATH environment variable to include the directory where the DLLs reside.)</P>
<P>Another file, NTWDBLIB.LIB, contains import definitions that your applications for the Win32 API use. Set the LIB environment variable to include the directory where NTWDBLIB.LIB resides.</P>
<P>DB-Library resolves server names differently depending on the client platform.</P>
<H4><A NAME="sec0"></A>Resolving Server Names for Clients Based on Windows, MS-DOS, OS/2, and Windows&nbsp;NT</H4><P>When <B>dbopen</B> (the DB-Library function that initiates a client conversation with SQL&nbsp;Server) is called with the name of a SQL&nbsp;Server to connect to, DB-Library uses configuration information to determine which client-side Net-Library to load. </P>
<P>The client-side Net-Library configuration is stored in the following locations:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="94pt" VALIGN="TOP"><COL WIDTH="255pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Client</P></TD><TD VALIGN="TOP"><P>Net-Library configuration is stored in</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Windows 3<I>.x</I></P></TD><TD VALIGN="TOP"><P>WIN.INI</P></TD></TR><TR><TD VALIGN="TOP"><P>MS-DOS</P></TD><TD VALIGN="TOP"><P>Environment variable</P></TD></TR><TR><TD VALIGN="TOP"><P>OS/2</P></TD><TD VALIGN="TOP"><P>OS2.INI</P></TD></TR><TR><TD VALIGN="TOP"><P>Windows&nbsp;NT</P></TD><TD VALIGN="TOP"><P>Windows&nbsp;NT Registry</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>DB-Library scans the <B>[SQLSERVER]</B> section of WIN.INI, OS2.INI, or the \SQLServer\Client\ConnectTo subtree of the Windows&nbsp;NT Registry looking for a logical name that matches the<I> servername</I> parameter specified in the call to <B>dbopen</B>. All items in the <B>[SQLSERVER]</B> section of the .INI file or in the Registry subtree have this format: </P>
<P><BR></P>
<pre><code>logical-name=Net-Lib-DLL-name[,network-specific-parameters]</code></pre>
<P><B>Note</B>   Although some Net-Libraries need values for <I>network-specific-parameters</I>, this is optional for others that instead use defaults or determine the network-specific information required themselves.</P>
<P>DB-Library uses the following logic to determine which Net-Library to load:</P>
<UL><LI>     If a matching logical name is found in the .INI file or in the Windows&nbsp;NT Registry, DB-Library loads the specified Net-Library DLL. If network-specific parameters are present in the .INI entry or the Windows&nbsp;NT Registry, these are passed unmodified by DB-Library to the Net-Library DLL.</LI><LI>     If no matching logical name is found in the .INI file or in the Windows&nbsp;NT Registry, the DLL name (and optionally, the network-specific parameters) of the entry named DSQUERY will be used to load the required Net-Library. So, if you don't have a specific server name but do have a DSQUERY entry, that entry will be used as the default.</LI><LI>     If there is neither a specific logical name nor a<I> </I>DSQUERY entry in the .INI file or in the Windows&nbsp;NT Registry, DB-Library loads the named pipes Net-Library (for example, DBNMPP3.DLL for the Windows operating system) and passes it the <I>servername</I> parameter from <B>dbopen</B>. With Microsoft SQL&nbsp;Server using named pipes, you typically never need to make a .INI entry. If you use any other Net-Library, you must make at least one entry.</LI></UL><P>The following examples illustrate this logic:</P>
<UL><LI>     <B>forecast=dbnmp3</B></LI></UL><P>The Windows named pipe Net-Library is used, and it connects to SQL&nbsp;Server \\Forecast using the standard named pipe, \pipe\sql\query.</P>
<UL><LI>     <B>sales=dbnmp3,\\server1\pipe\sql2\query</B> </LI></UL><P>The Windows named pipe Net-Library is used, and it connects to \\server1, where SQL&nbsp;Server has been started using an alternate named pipe, \pipe\sql2\query. </P>
<P><b>Note</b></P>
<P>SQL&nbsp;Server can be directed to use an alternate pipe by adding an entry to the ListenOn field in the Registry under the following tree:</P>
<P>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SQLServer\Server</P>
<P></P>
<UL><LI>     <B>dsquery=dbmsspx3</B></LI></UL><P>The SPX Net-Library is used, and the <I>servername</I> parameter from <B>dbopen</B> is used. This Net-Library requires no specific network connection information because it queries the NetWare Bindery to determine the location of the server running the Network Manager service specified in the <I>servername</I> parameter.</P>
<UL><LI>     <B>unixsrv=sybtcpw,131,107.005.21,3180</B></LI></UL><P>The SYBASE TCP/IP Net-Library is used, and DB-Library passes the IP address and port number contained in the initialization string to the Net-Library.</P>
<P><b>Note</b></P>
<P>The SQL&nbsp;Server ODBC driver uses the same Net-Libraries as DB-Library to communicate with SQL&nbsp;Server, Open Data Services, and SQL&nbsp;Bridge.</P>
<P></P>
<H4><A NAME="sec1"></A>Resolving Server Names for MS-DOS–Based Clients</H4><P>With MS-DOS, only one Net-Library TSR can be loaded, so there is no .INI configuration. Instead, MS-DOS environment variables are used to specify any network-specific connection information. Environment variables have the following format:</P>
<P><BR></P>
<pre><code>logical-name=network-specific-parameters</code></pre>
<P>The Net-Library used is the currently loaded TSR. If the <I>servername</I> parameter passed to <B>dbopen</B> corresponds to a currently set environment variable, DB-Library passes the information contained in the environment string to the currently loaded Net-Library. In turn, Net-Library uses this information to determine server location and network-specific information parameters, if present. If no environment variable matches the <I>servername</I> passed to <B>dbopen</B>, DB-Library passes the <I>servername</I> parameter from <B>dbopen</B> to the currently loaded Net-Library.</P>
<H4><A NAME="sec2"></A>New DB-Library Function Identifies SQL&nbsp;Servers</H4><P>DB-Library version 4.20.20 and later includes a new function (<B>dbserverenum</B>) that enables applications to identify SQL&nbsp;Servers available on the network, regardless of which network operating system is being used. For details on the <B>dbserverenum </B>function, see the <I>Microsoft SQL Server Programmer's Reference for C</I>.</P></FONT></BODY></HTML>
