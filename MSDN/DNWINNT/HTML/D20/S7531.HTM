<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using WinDbg for Local Kernel Debugging</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Using WinDbg for Local Kernel Debugging</H3><P>The WinDbg host computer can also be local to the target Windows&nbsp;NT computer. WinDbg runs on the Windows&nbsp;NT host computer and communicates through an industry-standard null-modem serial cable with the target Windows&nbsp;NT computer. For local Kernel debugging, the target computer has to be prepared in the same way as it is for remote Kernel debugging. </P>
<H4><A NAME="sec0"></A>Setting Up a System for Local Kernel Debugging </H4><P>To debug Windows&nbsp;NT Executive messages using a local debugging system, you need to prepare the host and target computers and then connect the two computers with an industry-standard null-modem serial cable. Be sure to start the host computer before restarting the target computer.</P>
<P>A standard, commercially available null-modem serial cable has the following configuration:</P>
<UL><LI>     Transmit Data connected to Receive Data </LI><LI>     Receive Data connected to Transmit Data</LI><LI>     Ground connected to Ground </LI></UL><P>For 9-pin and 25-pin D-subminiature connectors, the cable connects as follows:</P>
<UL><LI>     Pin 2 to pin 3 </LI><LI>     Pin 3 to pin 2</LI><LI>     Pin 7 to pin 7 </LI></UL><P>The WinDbg logic does not depend on any control pins (such as Data Terminal Ready, Data Set Ready, Request To Send, or Clear To Send). However, in the connectors on both ends of the cable, you may have to put a jumper from Data Terminal Ready to Data Set Ready and from Request To Send to Clear To Send. </P>
<UL><LI>     On a db9 connector, this would be a jumper from pin 4 to pin 6 and a jumper from pin 7 to pin 8. </LI><LI>     On a db25 connector, this would be a jumper from pin 20 to pin 6 and from pin 4 to pin 5. </LI></UL><P>Preparing the target computer for local Kernel debugging is the same as for remote Kernel debugging. The only difference is that instead of connecting a modem to one of the target computer's communications ports, you connect a null-modem serial cable. See "Configuring a System for Debugging," earlier in this chapter, for detailed procedures. </P>
<P>Which port you use (COM1 or COM2) depends on what you did to prepare your target and host computers. The default connection is from COM1 of the host computer to COM2 of the target computer. However, you may change that by editing the boot configuration on the target computer or by changing the command line parameters used when you start WinDbg.</P>
<P>The Windows&nbsp;NT Setup program does not install WinDbg as part of the Windows&nbsp;NT installation process. However, you can easily copy the WinDbg program directly onto the hard disk of the host computer. It is distributed on the Windows&nbsp;NT CD-ROM in an uncompressed format under the \SUPPORT\DEBUG directory.</P>
<P><B>Note</B>   If you do not have a CD-ROM drive, the WinDbg program is also available from Microsoft Support Network. You can request that they send you the software on a floppy disk, or ask for instructions on how to download it from CompuServe.</P>
<H4><A NAME="sec1"></A>To copy and start WinDbg on the host computer </H4><OL><LI>    Connect the null-modem serial cable to the communications port defined in the BOOT.INI file of the host computer. 
<P>Notice that the communications port can be different for the host and target computers.</P></LI><LI>    Create a subdirectory called \SYMBOLS on the host computer's hard disk under the directory in which you have installed Windows&nbsp;NT.</LI><LI>    Copy the debugging symbols from the \SUPPORT\DEBUG\&lt;<I>platform</I>&gt;\SYMBOLS directory on the CD-ROM to the \SYMBOLS directory on the host computer. <I>Platform</I> refers to the hardware platform of the host computer.</LI><LI>    Copy all the files from the \SUPPORT\DEBUG\&lt;<I>platform</I>&gt; directory on the CD-ROM to the \SYSTEM32 directory on the host computer. This can be done with the <B>xcopy</B> or <B>copy</B> command. Make sure that the following files are copied to the host computer:</LI></OL><P></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="135pt" VALIGN="TOP"><COL WIDTH="135pt" VALIGN="TOP"><COL WIDTH="135pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>EECXXALP.DLL</P></TD><TD VALIGN="TOP"><P>IMAGEHLP.DLL</P></TD><TD VALIGN="TOP"><P>TLLOC.DLL</P></TD></TR><TR><TD VALIGN="TOP"><P>EECXXMIP.DLL</P></TD><TD VALIGN="TOP"><P>KDEXTALP.DLL</P></TD><TD VALIGN="TOP"><P>TLPIPE.DLL</P></TD></TR><TR><TD VALIGN="TOP"><P>EECXXX86.DLL</P></TD><TD VALIGN="TOP"><P>KDEXTMIP.DLL</P></TD><TD VALIGN="TOP"><P>TLSER.DLL</P></TD></TR><TR><TD VALIGN="TOP"><P>EMALP.DLL</P></TD><TD VALIGN="TOP"><P>KDEXTX86.DLL</P></TD><TD VALIGN="TOP"><P>WINDBG.EXE</P></TD></TR><TR><TD VALIGN="TOP"><P>EMMIP.DLL</P></TD><TD VALIGN="TOP"><P>SHCV.DLL</P></TD><TD VALIGN="TOP"><P>WINDBG.HLP</P></TD></TR><TR><TD VALIGN="TOP"><P>EMX86.DLL</P></TD><TD VALIGN="TOP"><P>SYMCVT.DLL</P></TD><TD VALIGN="TOP"><P>WINDBGRM.EXE</P></TD></TR></TBODY></TABLE>
<P><BR></P><OL start=5><LI>    To start WinDbg in Kernel-debug mode from either the command line or the File Run dialog box in Program Manager, type:
<P><B>&lt;</B><I>path</I><B>&gt; windbg -k </B>&lt;<I>target platform</I>&gt; &lt;<I>com port</I>&gt; &lt;<I>speed</I>&gt;<B> -y </B>&lt;<I>symbol path</I>&gt; <B>-v</B></P>

<P>where: </P>

<P><I>Path</I> is the path to the WINDBG.EXE file.</P>

<P><B>-k</B> invokes the Kernel-debug mode.</P>

<P><I>Target platform </I>refers to the hardware platform of the target computer and corresponds to the name of the directory from which you obtained the WinDbg files, such as I386, MIPS, or ALPHA.</P>

<P><I>Com port</I> is the port to which you have connected the null-modem serial cable.</P>

<P><I>Speed</I> is the <B> </B>baud rate.</P>

<P><B>-y</B> indicates that the next parameter is the symbol path.</P>

<P><I>Symbol path</I> is the path to the \SYMBOLS directory created in step 2.</P>

<P>The following is an example of such a command:</P>

<P>c:\ windbg -k i386 com1 19200 -y c:\windows\symbols</P><ol start=6></LI><LI>    To create a log of the debugging session, from the Options menu, choose Debug. </LI><LI>    In the Logfile section of the Debugger Options dialog box, you can:

<UL><LI>     Select the Open Automatically check box to have WinDbg open a log file whenever it starts. If you want to specify a path and name for the log file, type one in the Name text box.</LI><LI>     Select the Append check box to append new data to an existing log file. Otherwise, the file will be overwritten.</LI></UL><P>For more information on WinDbg settings, see the online Help file.</P></LI></OL><H4><A NAME="sec2"></A>Running a Local Debugging Session</H4><P>Once you have prepared the two computers and connected them, you can start a debugging session. There can be many objectives for a debugging session; this chapter discusses the objective of collecting information (in the debug-session log file on the host computer) about the events leading up to a particular Windows&nbsp;NT Executive message on the target computer.</P>
<P><B>Note</B>   Once you are in the Kernel-debug mode of WinDbg, you can display a list of commands by typing <B>help</B> or <B>?</B> at the KD command prompt on the host computer. The Kernel-debug character-mode command-line interface has a vocabulary of about four dozen commands, plus it supports advanced debugging features such as watches and breakpoints. For more information on the commands and advanced features, see the online Help file.</P>
<H4><A NAME="sec3"></A>Quitting a Local Debugging Session</H4><P>Quitting WinDbg on the host computer at the end of a local debugging session will also save the debug-session log file.</P>
<H4><A NAME="sec4"></A>To quit WinDbg and save the log file on the host computer</H4><OL><LI>    From the Run menu, choose Stop Debugging.</LI><LI>    From the File menu, choose Exit.</LI><LI>3.    Restart the target computer.</LI></OL></FONT></BODY></HTML>
