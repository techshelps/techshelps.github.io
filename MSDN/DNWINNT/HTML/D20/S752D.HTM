<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows NT Debugger</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Windows&nbsp;NT Debugger</H2><P>The Windows&nbsp;NT debugger (WinDbg) is a 32-bit application that, along with a collection of DLLs, is used for debugging the Kernel, device drivers, and applications. This section, however, will only discuss how to use WinDbg for Kernel debugging. The same application can be used on all hardware platforms, although there is a different build of it for each platform. It is provided on the Windows&nbsp;NT CD-ROM under the \SUPPORT\DEBUG directory.</P>
<P>It can be used for either remote or local Kernel debugging and can also be used in conjunction with the Recovery option located under the System option in Control Panel. Both remote and local Kernel debugging require that WinDbg run on another Windows&nbsp;NT host computer that is connected to your Windows&nbsp;NT target computer. The two computers send debugging (troubleshooting) information back and forth through communications ports that must be running at the same baud rate on each computer.</P>
<P>With local Kernel debugging, the host computer is located within a few feet of the target computer, and the two computers communicate through a null-modem serial cable. With remote Kernel debugging, the host computer can be any distance from the target computer, since communication takes place through modems. </P>
<P>Using the Recovery option allows you to configure the target computer to write debugging information to a log file when a STOP error occurs. This file preserves the state of the computer at the time of the STOP error, and the log file can be used later by WinDbg to troubleshoot the problem. By using this option, you can run WinDbg on any computer after loading the log file, including the computer on which the STOP error occurred.</P>
<P>When you get a Windows&nbsp;NT Executive STOP or STATUS message on a Windows&nbsp;NT Workstation computer, you should restart the computer after recording the important information in the message. (On a Windows&nbsp;NT Server computer, the computer restarts by default after writing an event to the system log, alerting administrators, and dumping system memory to the log file called MEMORY.DMP. Therefore, to preserve log files, you should copy them to a new filename each time a STOP error occurs.) You may then want to continue running Windows&nbsp;NT until the message is redisplayed. </P>
<P>When that happens, you need to decide whether to debug the STOP error locally or remotely and then configure your system appropriately. If a trained technician is available, you could also ask him or her to do one of the preparatory procedures given in this section to set up your computer to run WinDbg remotely. Or you could call your technical support group and request assistance with the debugging.</P></FONT></BODY></HTML>
