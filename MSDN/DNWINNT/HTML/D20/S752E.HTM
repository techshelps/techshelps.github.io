<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Configuring a System for Debugging</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Configuring a System for Debugging</H3><P>Ordinarily, you will run Windows&nbsp;NT Workstation or Windows&nbsp;NT Server with the debug mode turned off, which is the default when Windows&nbsp;NT Setup installs the system. In that mode, an Executive STOP or STATUS message will not enable the debugger. To switch Windows&nbsp;NT into debug mode, you have to edit the Windows&nbsp;NT startup file, BOOT.INI, and include one of the two debug-mode switches: /<B>crashdebug</B> or /<B>debug</B>. If you include the /<B>crashdebug</B> switch in the BOOT.INI file, the debugger is loaded when you start but remains inactive unless a Kernel error occurs. This mode is useful if you are experiencing random, unpredictable Kernel errors. When you include the /<B>debug</B> switch, the debugger is loaded when you start and can be activated at any time by a debugger connected to the computer. This is the standard mode used when debugging problems that are regularly reproducible.</P>
<P>You can also change the default communications port and baud rate by editing the BOOT.INI file. Since the code that enables remote Kernel debugging resides in the hardware abstraction layer (HAL), the defaults for the communications port and baud rate may vary from one computer to another. On x86-based computers, if you have more than one communications port, the default debug port is set to COM2. However, if you have a serial mouse attached to COM2, the default debug port is set to COM1. If you do not set the baud rate, the default baud rate is 9600 if a modem is attached. If necessary, you can verify later what baud rate has been set. On RISC-based computers, the default debug port is set to COM1.</P>
<P>When you are finished debugging the computer, you should turn the debug mode off again. To do this, repeat the process of editing the BOOT.INI file or the OSLOADOPTIONS environmental variable, and delete any values you set to enable debugging. On a RISC-based computer, this may mean the OSLOADOPTIONS variable has no values, which is acceptable.</P>
<P>To specify settings, you can use the following procedure, which will prepare your computer for either remote or local Kernel debugging.  </P>
<H4><A NAME="sec0"></A>To prepare an x86-based target computer for remote or local debugging</H4><OL><LI>    For remote debugging, connect a modem to the communications port, turn the power on, and set the modem to auto-answer. This could also be done on a second computer and then the modem could be moved to the target computer after a Kernel error occurs.
<P>For local debugging, connect the null-modem serial cable to any available communications port.</P></LI><LI>    Restart the computer under MS-DOS or Windows&nbsp;NT.
<P>If you can restart under Windows&nbsp;NT, double-click the Command Prompt icon in the Main group to access the command line.</P></LI><LI>    To turn off the system, hidden, and read-only attributes of the BOOT.INI file, type: 
<P><B>attrib -s -h -r boot.ini</B></P>

<P>The BOOT.INI file is usually located in the root directory of the partition from which the Windows&nbsp;NT NTLDR program was loaded, which is ordinarily C:\.</P></LI><LI>    To use MS-DOS Editor to change the BOOT.INI file, type:
<P><B>edit boot.ini</B></P>

<P>The BOOT.INI file appears within the MS-DOS Editor window and normally looks something like the following example:</P>

<P>[boot loader]</P>

<P>timeout=30</P>

<P>default=multi(0)disk(0)rdisk(0)partition(1)\WINDOWS</P>

<P>[operating systems]</P>

<P>multi(0)disk(0)rdisk(0)partition(1)\WINDOWS="Windows&nbsp;NT" Version 3.5"</P>

<P>multi(0)disk(0)rdisk(0)partition(1)\WINDOWS="Windows&nbsp;NT" Version 3.5 [VGA mode]" /BASEVIDEO</P>

<P>C:\="MS-DOS"</P>

<P>Each entry in the [operating systems] section should correspond to the options listed in the boot menu during a normal system startup.</P></LI><LI>    Select the startup option that you normally use and add either the /<B>debug</B> or /<B>crashdebug</B> switch at the end of the line. 
<P>An alternative to using the /<B>debug</B> switch is to add switches at the end of the line that explicitly set the communications port and baud rate your computer will use to send debugging information.</P></LI><LI>    To specify the communications port, add the switch /<B>debugport=com</B><I>x</I>, where <I>x</I> is the communications port that you want to use.</LI><LI>    To specify the baud rate, add the switch /<B>baudrate=&lt;</B><I>baudrate</I><B>&gt;</B>.
<P>Valid speeds for the baud rate range from 75 to 115,200 baud. The hardware will determine the speed chosen. 9600 baud is the normal rate for remote debugging over a modem. Local debugging over a serial cable can run as fast as 57,600 baud or higher if both computers can support the speed.</P>

<P>The following is an example of a startup-option line specifying the communications port and baud rate:</P>

<P>multi(0)disk(0)rdisk(0)partition(1)\WINDOWS="Windows&nbsp;NT" Version 3.5" /debugport=com1 /baudrate=9600</P></LI><LI>    Save the file and quit MS-DOS Editor.</LI><LI>    Restart the computer to run under Windows&nbsp;NT.
<P>You may now contact your technical support group or a trained technician and have them call the modem to establish a remote debugging session.</P></LI></OL><P>Preparing a RISC-based computer for remote or local Kernel debugging also involves editing one line in a startup file, but you access that file in a different manner. </P>
<H4><A NAME="sec1"></A>To prepare a RISC-based target computer for remote or local debugging</H4><OL><LI>    For remote debugging, connect a modem to the communications port, turn the power on, and set the modem to auto-answer. This could also be done on a second computer and then the modem could be moved to the target computer after a Kernel error occurs.
<P>For local debugging, connect the null-modem serial cable to any available communications port.</P></LI><LI>    Restart the computer. 
<P>The ARC System screen appears, displaying the main menu from which you can select an action.</P></LI><LI>    On a MIPS RISC-based system, choose Run Setup to display the Setup menu and then choose Manage Startup to display a menu of the boot options.
<P>On a Digital Alpha AXP RISC-based system, choose Supplementary Menu, Set Up the System, and Manage Boot Selection Menu to display a menu of the boot options.</P></LI><LI>    Choose Change a Boot Selection to display a list of the operating systems that are installed on this computer. </LI><LI>    Choose the Windows&nbsp;NT operating system. If you have more than one version of Windows&nbsp;NT installed, select the one that you want to debug.
<P>A two-part screen appears for changing the current settings of the environment variables used to start the RISC-based computer. The environment variable that controls whether or not the RISC-based computer starts up in debug mode is the OSLOADOPTIONS variable. </P></LI><LI>    To edit the value for the OSLOADOPTIONS variable, use the arrow keys to select it from the list of variables. 
<P>Once selected, it appears in the Name box at the top of the screen. </P></LI><LI>    Press enter to display the Value box.</LI><LI>    Type <B>debug</B> or <B>crashdebug</B> in the Value box and press enter to save it and turn the debug mode on.
<P>You may also add a value that explicitly sets the communications port, as in the following example:</P>

<P>OSLOADOPTIONS  debug  debugport=com2</P>

<P>If you do not specify the debug port, the default debug port is set to COM1. Since RISC-based computers allow only a default baud rate of 19200, you do not need to specify the baud rate.</P></LI><LI>    Press Esc to stop editing.</LI><LI>    On a MIPS RISC-based system, choose Return To Main Menu and then Exit to return to the ARC System screen.
<P>On a Digital Alpha AXP RISC-based system, choose Supplementary Menu, save your changes, and then choose Boot Menu to return to the ARC System screen. </P>

<P>If this is the first time that you have debugged a Digital Alpha AXP RISC-based system, after connecting the local host computer, you now need to do the following:</P>


<UL><LI>     Shut down both computers</LI><LI>     Restart the host (debugger) computer</LI><LI>     Run WinDbg in Kernel-debug mode</LI><LI>     Restart the target (Digital Alpha AXP RISC-based) computer while WinDbg is running on the host computer to set up configuration information on the target computer and prepare it for either local or remote debugging.</LI></UL></LI><LI>    Restart the computer to run under Windows&nbsp;NT.
<P>You may now contact your technical support group or a trained technician and have them call the modem to establish a remote debugging session.</P></LI></OL></FONT></BODY></HTML>
