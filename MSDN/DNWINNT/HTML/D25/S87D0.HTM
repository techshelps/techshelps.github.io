<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Audit Record Format</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Audit Record Format</H3><P>The format and contents of the audit event records are based on the design of Event Viewer. Event Viewer uses information from the Registry to locate message files and to determine how to present the information in an event record.</P>
<P>Event Viewer expects a number of <I>event source modules</I> to be defined as part of the security audit log information in the Registry. At least one event source module must be provided by each product that generates audit event records. For example, if a mail product is installed, that product's installation procedure needs to add its event source module information to the security log information in the Registry. A special event source module shipped with Windows&nbsp;NT contains default information, so that information does not have to be replicated in other event source modules.</P>
<P>The information defined for event source modules includes:</P>
<UL><LI>    Event Message File. This file contains the displayable strings for each audit event record. It includes parameter substitution markers to be replaced at viewing time with Unicode strings logged in the event record.
<P CLASS="lt1">Only the event source module shipped with Windows&nbsp;NT should define an event message file. This single event message file serves as the default for other event source modules.</P></LI><LI>    Category Message File. Categories are discussed in "<B>Error! Reference source not found.</B>," later in this document. Only the security event source module shipped with Windows&nbsp;NT should define a category message file. This single category message file serves as the default for other event source modules. In Windows&nbsp;NT version 3.51, this file is not actually used for auditing.</LI><LI>    Parameter Message File. The parameter message file is used to provide object type-specific access names. Each security event source module should (but does not have to) provide a parameter message file. If object type-specific access names are not provided by an event source module, then default names will be used (such as "Specific Access Bit 0").</LI></UL><P></P>
<P>When Event Viewer is asked to display an audit record, it uses the event source module name and event ID from the record to retrieve a message string for that event. This string can include parameter substitution markers and other format characters that are interpreted and acted upon by a call to FormatMessage(). For example, the string for a successful logon audit might look like:</P>
<P><BR></P>
<pre><code>Successful Logon: \n\t\tUser Name:\t%1 \n\t\tDomain:\t%2
</code></pre>
<P>Notice that this message string includes two parameter substitution markers (%1 and %2). These parameter strings are obtained from the event record. So, if Administrator logged on to a computer named ACCTG, an event record containing those two strings would be recorded. The corresponding event record in Event Viewer would look like this:</P>
<P><BR></P>
<pre><code>Successful Logon:<BR>          User Name:     Administrator<BR>          Domain:     ACCTG<BR></code></pre>
<P>Before Event Viewer formats the entire message string, it must format the individual parameter strings received in the event record. In the preceding example, the parameter strings needed no formatting. In the case of an audit generated when a file is opened for WRITE_DATA and WRITE_DAC, however, the event message might be:</P>
<P><BR></P>
<pre><code>Object Open:\n\t\tObject Type:\t%1\n\t\tObject<BR>Name:\t%2\n\t\tAccesses:\t%3</code></pre>
<P></P>
<P>and parameter strings received in the audit record might be:</P>
<P>Parameter string 1:  "File"</P>
<P>Parameter string 2:  "C:\accounting\payroll\hours_worked.dat"</P>
<P>Parameter string 3:  "%%972\n\t\t\t\t%%1032"</P>
<P></P>
<P>The "%%" directive tells Event Viewer to look up and substitute the message specified by the number following the directive from the parameter message file for the event source module. Assuming message numbers 972 and 1032 in the message file are "Write DAC" and "Write Data" respectively, the third string will be changed to:</P>
<P><BR></P>
<pre><code>Write DAC\n\t\t\tWrite Data</code></pre>
<P></P>
<P>This would cause the resultant display by Event Viewer to look like:</P>
<P><BR></P>
<pre><code>Object Open:<BR>          Object Type:     File<BR>          Object Name:     C:\accounting\payroll\hours_worked.dat<BR>          Accesses:        Write Dac<BR>                           Write Data</code></pre>
<P></P>
<P>(This example is for illustrative purposes only and does not correspond to an actual event-record type.)</P></FONT></BODY></HTML>
