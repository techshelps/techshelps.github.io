<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mail Server Service</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Mail Server Service</H3><P>The Mail Server service is an implementation of the SendMail daemon and POP 2 and POP 3 protocols, for Windows&nbsp;NT Workstation and Windows&nbsp;NT Server.<B> </B>The Mail Server installation program adds Mail Server and the supporting services to the Service Controller and starts Mail Server. Mail Server supports Internet-based mail clients, and is completely separate from the MS-Mail program.</P>
<P></P>
<P CLASS="wh"><B>Caution</B></P>
<P>Mail Server only supports the cleartext password authentication of POP 3. It does not support the APOP command. Since the user's password travels over the network in the clear, administrators should use caution when installing a mail system such as this.</P>
<P></P>
<P>Because Mail Server is integrated with the local account database, an account must be created (via User Manager) for each user who is to receive mail at the computer where Mail Server is running. Mail Server automatically creates a mail folder for a user when mail is received for that user or when the user connects via POP.</P>
<P>The intermediate files required by Mail Server, and the mailboxes, are all spooled on the Windows&nbsp;NT server. They can then be accessed through PD or through commercial clients such as Eudoraä&trade; from Qualcomm.</P>
<P>Mail Server includes the following services: </P>
<UL><LI> <FONT FACE="symbol">•</FONT>    MtpSrv, which handles receiving SMTP mail</LI><LI> <FONT FACE="symbol">•</FONT>    Pop3Srv, which handles POP clients</LI><LI> <FONT FACE="symbol">•</FONT>    LocalMail, which handles delivery of local mail</LI><LI> <FONT FACE="symbol">•</FONT>    PasswdSrv, which handles Eudora password change requests. By default, PasswdSrv is not enabled, since it allows password changes based on unencrypted requests.</LI></UL><P></P>
<H4><A NAME="sec0"></A>Registry Entries for Mail Server</H4><P>The Registry entries look something like the following:</P>
<P><BR></P>
<pre><code>MACHINE\System\CurrentControlSet\Services\MailSrv
     Parameters
          MailDirectory
          LoggingLevel
          SMTP Retry
          Local Retry
          SmtpGateway
          Inbound Transforms
          Outbound Transforms
          Alias
          Alias...
</code></pre>
<P>where:</P>
<P CLASS="term1">MailDirectory</P>
<P CLASS="dt1">Is the top of the mail directory hierarchy.</P>
<P CLASS="term1">LoggingLevel</P>
<P CLASS="dt1">Specifies flags indicating how much to dump into the event log.</P>
<P CLASS="term1">SMTP Retry</P>
<P CLASS="dt1">Specifies the retry interval in seconds for outbound SMTP messages.</P>
<P CLASS="term1">Local Retry</P>
<P CLASS="dt1">Specifies the retry interval in seconds for local messages.</P>
<P CLASS="term1">SmtpGateway</P>
<P CLASS="dt1">Specifies the gateway to use for all SMTP mail. (No DNS resolving is done.)</P>
<P CLASS="term1">Inbound Transforms</P>
<P CLASS="dt1">Are rules applied to addresses coming in. See the following section for details.</P>
<P CLASS="term1">Outbound Transforms</P>
<P CLASS="dt1">Are rules applied to addresses going out. See the following section for details.</P>
<P CLASS="term1">Alias</P>
<P CLASS="dt1">Specifies one alias per line. They are completely dynamic. Two examples are placed there during installation, one for Postmaster, which is required and must not be deleted, and one for MAILER_DAEMON.</P>
<H4><A NAME="sec1"></A>Transforms</H4><P>The transforms are rules applied to addresses coming in and going out. Primarily they are there so that if you own a domain, you can mask out the computernames within the domain, and vice versa. </P>
<P>Inbound Transforms and Outbound Transforms are each of type REG_MULTI_SZ. Each line in the MULTI_SZ is a transform, and they are searched in the order they appear. If a rule matches, it is applied, and the search is completed. If no rules are matched, then the address is unchanged.</P>
<P>Each transform is in the following format:</P>
<P><BR></P>
<pre><code>pattern &gt; the transformed pattern
</code></pre>
<P>For example: </P>
<P><BR></P>
<pre><code>$1@$2.bitnet &gt; $1%$2.bitnet@cunyvm.cuny.edu
</code></pre>
<P>The following special tokens are recognized: </P>
<UL><LI> <FONT FACE="symbol">•</FONT>    <B>$(Me)</B>, which corresponds to <B>hostname.domain</B></LI><LI> <FONT FACE="symbol">•</FONT>    <B>$(Hostname)</B>, which corresponds to <B>hostname</B></LI><LI> <FONT FACE="symbol">•</FONT>    <B>$(Domain)</B>, which corresponds to <B>domain</B></LI></UL><P></P>
<P>For example, the address richardw@microsoft.com would be tokenized as follows:</P>
<P><BR></P>
<pre><code>$1@$2               richardw = 1, microsoft.com = 2
$1@microsoft.com          richardw = 1
</code></pre>
<P>The address rbw@williams.bitnet would be:</P>
<P><BR></P>
<pre><code>$1@$2.bitnet &gt; $1%$2.bitnet@cunyvm.cuny.edu
rbw = 1
williams = 2
final = rbw%williams.bitnet@cunyvm.cuny.edu
</code></pre></FONT></BODY></HTML>
