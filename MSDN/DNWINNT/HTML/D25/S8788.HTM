<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MIB Builder Tool (PERF2MIB.EXE)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>MIB Builder Tool (PERF2MIB.EXE)</H3><P>You can use the Performance Monitor MIB builder tool, PERF2MIB.EXE, to create new ASN.1 syntax MIBs to track performance using any system management program. This utility is available on the <I>Windows&nbsp;NT 3.51 Resource Kit</I> CD.</P>
<P>PERF2MIB.EXE creates a MIB file that can be used by an SNMP management console to perform SNMP requests for the performance data in question. This lets all performance data available through the HKEY_EPRFORMANCE_DATA Registry key be exposed through SNMP, allowing remote performance monitoring.</P>
<P>The syntax for PERF2MIB.EXE is as follows:</P>
<P CLASS="syn"><B>perf2mib</B> <I>MIBfilename INIfilename [ObjectName MIBIndex MIBPrefix [...]]</I></P>
<P>where</P>
<P CLASS="term1"><I>MIBfilename</I></P>
<P CLASS="dt1">Is the name of the MIB file to create.</P>
<P CLASS="term1"><I>INIfilename</I></P>
<P CLASS="dt1">Is the name of the generated configuration file. This file is used by the Windows&nbsp;NT SNMP extension agent to map performance counters to MIB variables.</P>
<P CLASS="term1"><I>ObjectName</I></P>
<P CLASS="dt1">Is the name of the performance object whose counters you want to expose (such as Processor or Memory).</P>
<P CLASS="term1"><I>MIBIndex</I></P>
<P CLASS="dt1">Is the numeric ID of the MIB branch where the particular object's data should be placed.</P>
<P CLASS="term1"><I>MIBPrefix</I></P>
<P CLASS="dt1">Is the abbreviation that should be placed before counter names belonging to this object (such as "mem" for Memory counters or "proc" for Processor counters).</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P>The last three parameters can be repeated to map multiple object types with one call. If multiple object types are specified, the resulting MIB and MIB agent configuration information is concatenated into one MIB file.</P>
<P></P>
<P>Example:</P>
<P><BR></P>
<pre><code>perf2mib test.mib test.ini Memory 1 mem Processor 2 proc System 3 sys
</code></pre>
<P CLASS="proch"><B>To create and compile a MIB for a new component</B></P>
<P CLASS="ls">    1.    Run PERF2MIB, specifying the object for which you want to create a MIB. A configuration file (INI) file will also be generated.</P>
<P CLASS="ls">    2.    Copy the MIB file to the console device.</P>
<P CLASS="ls">    3.    Run the MIB compiler to compile the management station with the MIB file.</P>
<P CLASS="lt1">For example, if you are using HP OpenView, to populate the map with a new object, run the HP OpenView MIB compiler with the MIB file and then associate the resulting icon with an object and place it on the map.</P>
<P CLASS="lt1">This step enables the management station to read the component's MIB via SNMP.</P>
<P></P></FONT></BODY></HTML>
