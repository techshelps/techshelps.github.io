<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding MIBs</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Understanding MIBs</H3><P>SNMP defines a set of variables that the host must keep, and specifies that all SNMP operations on the host are side effects of getting, putting, or setting the data variables. Because different network-management services are used for different types of devices or for different network-management protocols, each service has its own set of objects. The entire set of objects that any service or protocol uses is referred to as its Management Information Base (MIB).</P>
<P>Each MIB consists of a list of object identifiers describing a managed entity. The MIB handler retrieves object values from the managed entity and sends them to the SNMP console. When a network manager wants information about a device on the network, SNMP management software can determine object values that represent network status. For example, the management station might request an object called <B>SvStatOpens</B>, which would be the total number of files open on the Windows&nbsp;NT computer.</P>
<P>The Windows&nbsp;NT SNMP service includes MIB II (based on RFC 1213) and LAN&nbsp;Manager MIB II, plus Microsoft proprietary MIBs for DHCP and WINS servers. The section "MIB Object Types for Windows&nbsp;NT" in Appendix A contains information about each of the MIBs, including a description of each variable.</P>
<P>The SNMP service for Windows&nbsp;NT supports multiple MIBs through an agent Application Programming Interface (API) extension interface. At SNMP service startup time, the SNMP service loads all of the SNMP extension-agent dynamic-link libraries (DLLs) that are defined in the Windows&nbsp;NT Registry. There is a separate extension-agent DLL to access each of the MIBs that come with Windows&nbsp;NT. With this SNMP architecture, third parties can develop their own MIBs and DLLs and include them in Windows&nbsp;NT by updating the Registry. </P></FONT></BODY></HTML>
