<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Access Masks</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Access Masks</H3><P>Each ACE includes an <I>access mask</I>, which defines all possible actions for a particular object type. Permissions are granted or denied based on this access mask.</P>
<P>One way to think of an access mask is as a sort of menu from which granted and denied permissions are selected:</P>
<P><img src="XRGU09.gif"></P>
<P>Figure 2.6    Access Control Mask</P>
<P><I>Specific types</I> include access options that apply specifically to this object  type. Each object type can have up to 16 specific access types. Collectively, the specific access types for a particular object type are called the <I>specific access mask</I>. (These are defined when the object type is defined.) For example, Windows&nbsp;NT files have the following specific access types: </P>
<P>ReadData<BR>WriteData<BR>AppendData<BR>ReadEA (Extended Attribute)<BR>WriteEA (Extended Attribute)<BR>Execute<BR>ReadAttributes<BR>WriteAttributes</P>
<P><I>Standard types</I> apply to all objects and consist of these access permissions:</P>
<UL><LI>     SYNCHRONIZE, which is used to synchronize access and to allow a process to wait for an object to enter the signaled state</LI><LI>     WRITE_OWNER, which is used to assign write owner</LI><LI>     WRITE_DAC, which is used to grant or deny write access to the discretionary ACL</LI><LI>     READ_CONTROL, which is used to grant or deny read access to the security descriptor and owner</LI><LI>     DELETE, which is used to grant or deny delete access</LI></UL><P>The following table shows the generic types that are mapped from specific and standard types.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="151pt" VALIGN="TOP"><COL WIDTH="247pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Generic type</P></TD><TD VALIGN="TOP"><P>Mapped from these specific and standard types</P></TD></TR><TR><TD VALIGN="TOP"><P>FILE_GENERIC_READ</P></TD><TD VALIGN="TOP"><P>STANDARD_RIGHTS_READ<BR>FILE_READ_DATA<BR>FILE_READ_ATTRIBUTES <BR>FILE_READ_EA<BR>SYNCHRONIZE</P></TD></TR><TR><TD VALIGN="TOP"><P>FILE_GENERIC_WRITE</P></TD><TD VALIGN="TOP"><P>STANDARD_RIGHTS_WRITE<BR>FILE_WRITE_DATA<BR>FILE_WRITE_ATTRIBUTES<BR>FILE_WRITE_EA<BR>FILE_APPEND_DATA<BR>SYNCHRONIZE</P></TD></TR><TR><TD VALIGN="TOP"><P>FILE_GENERIC_EXECUTE</P></TD><TD VALIGN="TOP"><P>STANDARD_RIGHTS_EXECUTE<BR>FILE_READ_ATTRIBUTES<BR>FILE_EXECUTE<BR>SYNCHRONIZE</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>Specific and standard types appear in the details of the security log.</P>
<P><B>Note</B>   Generic types do not appear in the security log. Instead, the corresponding specific and standard types are listed. </P></FONT></BODY></HTML>
