<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hives and Files</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Hives and Files</H3><P>The Registry is divided into parts called <I>hives,</I> named by a Windows&nbsp;NT developer as an analogy for the cellular structure of a beehive. A hive is a discrete body of keys, subkeys, and values that is rooted at the top of the Registry hierarchy. A hive is backed by a single file and a .LOG file. These files are in the <I>%SystemRoot%</I>\system32\config directory.</P>
<P><img src="XRGF07.gif"></P>
<P>The following table shows the standard hives for a computer running Windows&nbsp;NT.</P>
<P>Table 10.3    Standard Hive Files</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="194pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Registry hive</P></TD><TD VALIGN="TOP"><P>Filenames</P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_LOCAL_MACHINE\SAM</P></TD><TD VALIGN="TOP"><P>SAM and SAM.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_LOCAL_MACHINE\SECURITY</P></TD><TD VALIGN="TOP"><P>SECURITY and SECURITY.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_LOCAL_MACHINE\SOFTWARE</P></TD><TD VALIGN="TOP"><P>SOFTWARE and SOFTWARE.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_LOCAL_MACHINE\SYSTEM</P></TD><TD VALIGN="TOP"><P>SYSTEM and SYSTEM.ALT</P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_CURRENT_USER</P></TD><TD VALIGN="TOP"><P><I>USER###</I> and <I>USER###.LOG</I> or<I><BR></I>ADMIN<I>###</I> and ADMIN<I>###.</I>LOG</P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_USERS\.DEFAULT</P></TD><TD VALIGN="TOP"><P>DEFAULT and DEFAULT.LOG</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>By default, all hives are stored in the <I>SystemRoot</I>\SYSTEM32\CONFIG subdirectory, which also includes SYSTEM.ALT and the .LOG files that are backup hive files. The hive files for user profiles can be stored in other locations.</P>
<H4><A NAME="sec0"></A>Atomicity and Hive Recovery in the Registry</H4><P>The Registry ensures <I>atomicity</I> of individual actions. This means that any single change made to a value to set, delete, or save either works or does not work—even if the system goes down because of power failure, hardware failure, or software problems. For example, if an application sets values for two entries (A and&nbsp;B), and the system crashes while this change is being made, one of the following situations results:</P>
<UL><LI>     You might get a new value for entry A or entry B.</LI><LI>     You might get new values for entries A and B.</LI><LI>     You might not get a new value for either entry.</LI></UL><P>Because of the atomicity of individual actions, you avoid the situation of getting a corrupted mix of old and new values for an entry. For example, you won't get a corrupted mix of old A and new A. In addition, the key containing entry A and entry&nbsp;B will have a size, time stamp, and other data that are consistent with what is actually there.</P>
<H5><A NAME="sec1"></A>Flushing Data</H5><P>In this version of Windows&nbsp;NT, data is only written to the Registry when a <I>flush</I> occurs, which happens after changed data ages past a few seconds, or when an application intentionally flushes the data to the hard disk.</P>
<P>The system performs the following flush process for all hives (except for the System hive):</P>
<OL><LI>    All changed data is written to the hive's .LOG file along with a map of where it is in the hive, and then a flush is performed on the .LOG file. It is now certain that all changed data is written in the .LOG file.</LI><LI>    The first sector of the hive file is marked to indicate that the file is in transition.</LI><LI>    The changed data is written to the hive file.</LI><LI>    The hive file is marked as completed.</LI></OL><P><B>Note</B>   If a system crash occurs between steps 2 and 4, when the hive is next loaded at startup (unless it's a Profile hive that is loaded at logon), the system sees the mark left in step 2, and proceeds to recover the hive using the changes contained in .LOG file. So, the .LOG files are not used if the hive is not in transition. If the hive is in transition, it cannot be loaded without the .LOG file.</P>
<P>A different flush process is used for the System hive because it is an important element during system startup and is used too early during startup to be recovered as described in the previous flush process.</P>
<P>The SYSTEM.ALT file contains a copy of the data contained in the SYSTEM file. During the flush process, changes are marked, written, and then marked as done, and then the same flush process is followed for the SYSTEM.ALT file. If there is a power failure, hardware failure, or software problems during any point in the process, either the SYSTEM or SYSTEM.ALT files will contain the correct information.</P>
<P>The SYSTEM.ALT file isn't that different from a .LOG file, except that at load time, rather than having to reapply the logged changes, the system just switches to SYSTEM.ALT. You don't need the SYSTEM.ALT file unless the System hive is in transition.</P>
<H5><A NAME="sec2"></A>User Profile Hives</H5><P>Each time a new user logs onto a computer, a new hive is created for that user. Because each user profile is a separate hive, each profile is also a separate file. Profile hives can be stored in other directories. The system administrator can copy a user profile as a file and view, repair, or copy entries using Registry Editor on another computer. For specific information about how to take advantage of this feature, see "Managing User Profiles Through the Registry" in Chapter 13, "Configuration Management and the Registry." For information about the hive for the default profile, see "HKEY_USERS" later in this chapter.</P>
<H4><A NAME="sec3"></A>Registry Size Limits </H4><P>The total amount of space that can be consumed by Registry data (the hives) is restricted by the Registry size limit, which is a kind of "global quota" for Registry space that prevents an application from filling the paged pool with Registry data. Registry size limits affect both the amount of paged pool the Registry can use and the amount of disk space.</P>
<P>You can view or set the value for <B>RegistrySizeLimit</B> under the following subkey:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control</code></pre>
<P><B>RegistrySizeLimit</B> must have a type of REG_DWORD and a data length of 4&nbsp;bytes, or it will be ignored. By default, the Registry size limit is 25 percent of the size of the paged pool, which is 32&nbsp;MB; so the default <B>RegistrySizeLimit</B> is 8&nbsp;MB (which is enough to support about 5000 user accounts). Setting the <B>PagedPoolSize</B> value under the CurrentControlSet\Control\Session Manager\Memory Management subkey also affects the Registry size limit. The system ensures that the value for <B>RegistrySizeLimit</B> will be at least 4&nbsp;MB and no greater than about 80 percent of the size of <B>PagedPoolSize</B>. </P>
<P>The <B>RegistrySizeLimit</B> limitations are approximate. The <B>PagedPoolSize</B> can be set to a maximum of 128&nbsp;MB, so <B>RegistrySizeLimit</B> can be no larger than about 102&nbsp;MB, supporting about 80,000 users (although other limits prevent a Registry this large from being very useful). Also, <B>RegistrySizeLimit</B> sets a maximum, not an allocation (unlike some similar limits in the system). Setting a large value for <B>RegistrySizeLimit</B> will not cause the system to use that much space unless it is actually needed by the Registry. A large value also does not guarantee that the maximum space will actually be available for use by the Registry. </P>
<P>The space controlled by <B>RegistrySizeLimit</B> includes the hive space, as well as some of the Registry's run-time structures. Other Registry run-time structures are protected by their own size limits or other means. </P>
<P>To ensure that a user can always at least start the system and edit the Registry if the <B>RegistrySizeLimit</B> is set wrong, quota checking is not turned on until after the first successful loading of a hive (that is, the loading of a user profile). For more details about <B>RegistrySizeLimit</B>, see its entry in Chapter 14, "Registry Value Entries."</P></FONT></BODY></HTML>
