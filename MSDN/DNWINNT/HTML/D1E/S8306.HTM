<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Process Manager</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Process Manager</H3><P>The <I>Process Manager</I> is the component that tracks two types of objects — process objects and thread objects. A <I>process </I>is defined as an address space, a set of objects (resources) visible to the process, and a set of threads that run in the context of the process. A <I>thread </I>is most the basic schedulable entity in the system. It has its own set of registers, its own Kernel stack, a thread environment block, and user stack in the address space of its process.</P>
<P>The Process Manager is the Windows&nbsp;NT component that manages the creation and deletion of processes. It provides a standard set of services for creating and using threads and processes in the context of a particular subsystem environment. Beyond that, the Process Manager does little to dictate rules about threads and processes. Instead, the Windows&nbsp;NT design allows for robust environment subsystems that can define specific rules about threads and processes.</P>
<P>The Process Manager does not impose any hierarchy or grouping rules for processes, nor does it enforce any parent/child relationships.</P>
<P>The Windows&nbsp;NT process model works in conjunction with the security model and the Virtual Memory Manager to provide interprocess protection. Each process is assigned a <I>security access token</I>, called the primary token of the process. This token is used by the Windows&nbsp;NT access-validation routines when threads in the process reference protected objects. For more information about how Windows&nbsp;NT uses security access tokens, see Chapter 2, "Windows&nbsp;NT Security Model."</P></FONT></BODY></HTML>
