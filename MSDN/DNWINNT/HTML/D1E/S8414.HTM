<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Custom Message Types</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Custom Message Types</H3><P>You can install up to 1000 custom message types in Mail. A custom message type is a special type (or class) of message for delivery between two or more Mail recipients or Mail-enabled applications. A custom message type can define a particular way to perform standard Mail operations such as composing, replying to, and forwarding messages. Custom message types can define a message's appearance and content, or the behavior of the forms displayed to the user when sending, reading, and replying to messages of that type.</P>
<P>Most custom message types are received in your Inbox just like standard mail messages. A second kind of custom message type doesn't appear in the Inbox when it arrives and yet is available to other Mail-enabled applications. This allows Mail-enabled applications to define their own message classes.</P>
<P>Custom message types have many similarities to custom commands. Like custom commands, a command for composing a custom message type can be added to a Mail menu. When the Mail user chooses this command, the custom message type DLL displays a dialog box or form that enables the user to compose a message of the corresponding type. These dialog boxes or forms can include features specific to the message type.</P>
<P>When a custom-type message arrives in a Mail folder, it can appear in the message list the same as other standard mail messages. But when read or replied to, the custom dialog boxes or forms associated with the message type can be displayed in place of the standard read or reply form. You can also design a custom message type that doesn't appear in Mail's Inbox when it arrives and yet is available to other Mail-enabled applications.</P>
<P><B>Note</B>   If a custom message type is delivered to a user who does not have that custom message type installed, the message is treated as a standard message type.</P>
<P>Custom message types can provide special messaging functionality such as the following:</P>
<UL><LI>     Messages that are composed or read using a special form.</LI><LI>     Messages accessed by the user through an application other than Mail.</LI><LI>     Messages that are preaddressed to a particular recipient.</LI><LI>     Messages that are used to order parts or services or to describe an event. The dialog boxes displayed when the user composes these types of messages can include special structured fields specific to the purpose of the message.</LI><LI>     Messages that help route workflow events.</LI><LI>     Messages that are specific to group scheduling.</LI><LI>     Messages that enable some type of game, such as chess, to be played between two Mail users.</LI></UL><P>Microsoft Schedule+ is an example of an application that defines its own custom message types. Schedule+ uses the following custom message types:</P>
<UL><LI>     IPM.Microsoft Schedule.MtgReq  is  used to generate the Meeting Request form.</LI><LI>     IPM.Microsoft Schedule.MtgRespP is used to generate the Positive Meeting Response form.</LI><LI>     IPM.Microsoft Schedule.MtgRespN  is used to generate the Negative Meeting Response form.</LI><LI>     IPM.Microsoft Schedule.MtgRespA  is used to generate the Tentative Meeting Response form.</LI><LI>     IPM.Microsoft Schedule.MtgCncl  is used to generate a Meeting Cancellation message.</LI></UL><P>For more information, see "Custom Message Types for Schedule+" in Chapter&nbsp;9, "Microsoft Schedule+."</P>
<H4><A NAME="sec0"></A>Installing Custom Message Types</H4><P>Installing a custom message type is similar to installing a custom command. Just like custom commands, you can install custom message types on an individual computer or on the postoffice as shared custom message types. Typically, though, you will install them as shared custom message types because you will want both sending and receiving parties to take advantage of the custom message type.</P>
<P>When you install custom message types on an individual computer, you must modify the Registry on that computer by adding a custom message type entry  in this key:</P>
<P><BR></P>
<pre><code>HKEY_CURRENT_USER\Software\Microsoft\Mail\Custom Messages</code></pre>
<P>For information about how to do this, see "Custom Messages Entries for Mail" in Chapter&nbsp;14, "Registry Value Entries."</P>
<P>For shared custom message types, you must add a custom message type entry  to the postoffice's SHARED32.INI file. Then, on each workstation using the shared custom message type, you must add a <B>SharedExtensionsDir</B> entry in the Microsoft Mail subkey Registry. As with custom commands, when Mail sees this entry in the Registry, it reads SHARED32.INI for custom message type entries before reading custom message type entries in the Registry.</P>
<H4><A NAME="sec1"></A>Installing Custom Message Types on the Postoffice</H4><P>To install a shared custom message type on the postoffice, follow these steps:</P>
<OL><LI>    Create a shared Mail extensions directory on the postoffice.</LI><LI>    Copy the SHARED32.INI file and custom message type DLL (and/or .EXE) to the shared extensions directory.</LI><LI>    Add custom message type declarations to the <B>[Custom&nbsp;Messages]</B> section of the SHARED32.INI file on the postoffice, using this syntax:
<P><B>MessageClassName=</B><I>Mail version</I><B><I>;</I></B><I> menu name</I><B><I>;</I></B><I> command name</I><B><I>;</I></B><I><BR>command position</I><B><I>;</I></B><I> ExtsDir DLL name</I><B><I>;</I></B><I> ExtsDir command string</I><B><I>;</I></B><I> <BR>operation map</I><B><I>;</I></B><I> status text</I><B><I>;</I></B><I> ExtsDir Help file name</I><B><I>;</I></B><I> Help context</I><B><I>;</I></B></P></LI></OL><P></P>
<P><B>Note   </B>The message type declarations should be a single command line in the SHARED32.INI file. Do not add any carriage returns even if line-wrapping occurs.</P>
<P>Values are defined in the following table.</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="79pt" VALIGN="TOP"><COL WIDTH="300pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Value</P></TD><TD VALIGN="TOP"><P>Definition</P></TD></TR><TR><TD VALIGN="TOP"><P><I>class</I></P></TD><TD VALIGN="TOP"><P>A string uniquely identifying the message type. Mail places this string in messages and calls custom message DLLs based on its value.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>Mail version</I></P></TD><TD VALIGN="TOP"><P>Identifies the version of Mail in which the custom message is compatible.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>menu name</I></P></TD><TD VALIGN="TOP"><P>Indicates the menu where the custom command for the message type is to be added, such as File or Mail.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>command name</I></P></TD><TD VALIGN="TOP"><P>The command name that is to appear on the menu. As usual, you may include an ampersand (&amp;) just before the letter that is to serve as an ALT+ key accelerator.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>command position</I></P></TD><TD VALIGN="TOP"><P>The zero-relative position within its menu at which the command is to appear. A value of <B>-1 </B>places the command at the end of the menu.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>ExtsDir DLL name</I></P></TD><TD VALIGN="TOP"><P>The name or path of the DLL in which the custom message resides.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>command string</I></P></TD><TD VALIGN="TOP"><P>The Command string passed as one of the parameters to the DLL entry point for the command.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>operation map</I></P></TD><TD VALIGN="TOP"><P>A sequence of up to 16 digits. Each can be <B>0</B>, <B>1</B>, or <B>2</B>. <B>0</B> indicates that Mail is to perform its standard operation on the custom message. <B>1</B> indicates that the DLL is to be called to handle the operation. <B>2</B> indicates that the operation is to be completely disabled. Currently, eight operations are defined; the rest are reserved and must be zero. In the following list, <B>0</B> is the leftmost digit:</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P><B>0    </B>Compose (menu command defined in this entry)</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P><B>1    </B>File.Open</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P><B>2    </B>Mail.Reply</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P><B>3    </B>Mail.Reply to All</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P><B>4    </B>Mail.Forward</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P><B>5    </B>File.Print</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P><B>6    </B>File.Save as</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P><B>7    </B>Arrival of new mail</P></TD></TR><TR><TD VALIGN="TOP"><P><I>status text</I></P></TD><TD VALIGN="TOP"><P>Text to be displayed in the Mail status bar when the user moves the cursor to the command in the menu.</P></TD></TR><TR><TD VALIGN="TOP"><P><I>ExtsDir Help file name</I></P></TD><TD VALIGN="TOP"><P>The Windows&nbsp;NT Help file to be invoked when the user presses F1 while the command is selected. The specified filename is passed to the Windows&nbsp;NT help program. (This value is optional.)</P></TD></TR><TR><TD VALIGN="TOP"><P><I>Help context</I></P></TD><TD VALIGN="TOP"><P>Passed to the Windows&nbsp;NT help program along with the Help file name. Use<B> -1</B> (Help file index) if there is no specific entry in the Help file for this command. (This value is optional.)</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>There is one special token that may appear within certain fields:</P></TD></TR><TR><TD VALIGN="TOP"><P><B>&lt;ExtsDir&gt;</B></P></TD><TD VALIGN="TOP"><P>Expands to the value of <B>SharedExtensionsDir</B> in the user's Registry. Used to refer to DLLs that are installed in a shared extensions directory on the network. Valid for the DLL name, command, and Help file subfields.</P></TD></TR></TBODY></TABLE>
<P><BR></P><OL start=4><LI>    In the Registry on your computer, add a <B>SharedExtensionsDir</B> entry to reference the shared extensions directory in the following key:
<P>HKEY_CURRENT_USER\Software\Microsoft\Mail\Microsoft Mail</P>

<P>For information about how to do this, see "Microsoft Mail Entries" in Chapter&nbsp;14, "Registry Value Entries."</P></LI><LI>    If you have chosen the manual connection method, make the necessary network connection using File Manager.</LI><LI>    Quit Mail if it is running, and then restart it. 
<P>Mail rereads your Registry and adds the shared custom message to the specified menu.</P></LI><LI>    Restart Mail and test the shared custom message type.</LI><LI>    When the custom message type works successfully on your computer, modify each user's Registry to have access to the shared extensions directory. (See step&nbsp;4.)</LI></OL></FONT></BODY></HTML>
