<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lazy-write File Systems</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Lazy-write File Systems</H3><P>A second kind of file system, such as FAT on Windows&nbsp;NT and most UNIX file systems, is called a <I>lazy-write file system</I>. This type was designed to speed up disk access. Assuming that disk crashes were not a regular occurrence, a lazy-write file system was designed to use an intelligent cache-management strategy and provide a way to recover data (such as the <B>chkdsk </B>utility) should something happen to the disk. </P>
<P>All data is accessed via the disk cache. While the user searches directories or reads files, data to be written to disk is allowed to accumulate in the cache. Thus, the user never has to wait while disk-writes are performed. Plus, the user is able to access all the file-system resources that might otherwise be allocated for disk writing. Data gets written to disk when the computer's resources are in low demand, rather than in serial fashion. </P>
<P>If the same data is modified several times, all those modifications are captured in the disk cache. The result is that the file system needs to write to disk only once to update the data. That is, the file system opens the file once and then performs all of the updates together before closing the file.</P>
<P>The disadvantage of a lazy-write file system is that, in the event of a disk crash, recovery could take much longer than with a careful-write file system. This is because a utility such as <B>chkdsk </B>must then scan the entire volume to recover, checking what should have been written to disk against what actually was written.</P></FONT></BODY></HTML>
