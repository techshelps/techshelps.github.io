<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Win32 Subsystem</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Win32 Subsystem</H3><P>The main environment subsystem is the Win32 subsystem. In addition to being able to run Win32 applications, this subsystem manages keyboard and mouse input and screen output for all subsystems.</P>
<P>The Win32 subsystem is responsible for collecting all user input (or messages, in this message-driven environment) and delivering it to the appropriate applications. The Win32 input model is optimized to take advantage of the Windows&nbsp;NT preemptive multitasking capabilities. Figure 1.14 shows how the Win32 subsystem handles input for Win32 and 16-bit Windows-based applications. </P>
<P><img src="XRGA15.gif"></P>
<P>Figure 1.14    Win16 (Synchronized) and Win32 (Desynchronized) Input</P>
<P>Win32 uses a desynchronized input model for Win32 applications and the synchronized input for 16-bit Windows-based applications.</P>
<P>For example, when the Win32 subsystem receives a message for a Win32 application, it stores the message in a single raw input queue. As soon as it can, the Win32 subsystem transfers the message to the input queue thread for the appropriate Win32 application. If the input queue thread stops retrieving its messages, no other Win32 applications are affected.</P>
<P>By contrast, all input messages for 16-bit Windows-based applications sit in a common queue. At any point in time, all applications except the one retrieving messages from the input queue are blocked. However, as with Windows 3.1, if the executing application has some problem with retrieving messages from the queue, or it does it very slowly, the remaining applications stay blocked.</P></FONT></BODY></HTML>
