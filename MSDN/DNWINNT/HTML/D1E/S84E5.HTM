<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mouse and Keyboard Driver Entries</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Mouse and Keyboard Driver Entries</H3><P>Parameters in this section are for the mouse and keyboard class and port drivers, including these drivers:</P>
<P>Busmouse<BR>Inport <BR>Mouclass<BR>i8042prt<BR>Kbdclass<BR>Sermouse</P>
<H4><A NAME="sec0"></A>Microsoft Bus Mouse Port Driver Entries</H4><P>The following value entries for the Microsoft bus mouse are found in this subkey:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Busmouse\Parameters</code></pre>
<P><B>MouseDataQueueSize     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of mouse events to be buffered internally by the driver, in nonpaged pool. The allocated size, in bytes, of the internal buffer is this value times the size of the MOUSE_INPUT_DATA structure (defined in NTDDMOU.H). Consider increasing the size if the System log in Event Viewer frequently contains this message from the Busmouse source:  "The ring buffer that stores incoming mouse data has overflowed (buffer size is configurable via the Registry)." </P>
<P>Default:  0x64 (100)</P>
<P><B>NumberOfButtons     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of buttons on the bus mouse. If the number of buttons detected at startup time and placed in the Registry is incorrect, this value can be used to override it.</P>
<P>Default:  0x2 (two buttons)</P>
<P><B>PointerDeviceBaseName     REG_SZ     </B><I>Base port device name</I></P>
<P>Specifies the base name for the device object(s) created by the bus mouse port device driver. The device driver also writes information about the device objects into HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap so that the pointer class driver can locate the pointer port device objects.</P>
<P>Default:  PointerPort</P>
<P><B>SampleRate     REG_DWORD     </B><I>Mouse sample rate in Hz</I></P>
<P>Specifies the sample rate for the bus mouse. Intended for future use. This value might have no effect in the first release of Windows&nbsp;NT.</P>
<P>Default:  0x32 (50 Hz) </P>
<H4><A NAME="sec1"></A>Intel 8042 Port Driver Entries</H4><P>The i8042prt driver handles the keyboard and mouse port mouse (also known as a PS/2-compatible mouse) for the Intel 8042 controller. These value entries are found in the following subkey:</P>
<P><BR></P>
<pre><code>   HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\i8042prt\Parameters</code></pre>
<P><B>KeyboardDataQueueSize     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of keyboard events to be buffered internally by the driver, in nonpaged pool. The allocated size, in bytes, of the internal buffer is this value times the size of the KEYBOARD_INPUT_DATA structure (defined in NTDDKBD.H). Consider increasing the size if the System log in Event Viewer contains the following message from the i8042prt source:  "The ring buffer that stores incoming keyboard data has overflowed (buffer size is configurable via the Registry)."  </P>
<P>Default:  0x64 (100)</P>
<P><B>KeyboardDeviceBaseName     REG_SZ     </B><I>Base keyboard port device name</I></P>
<P>Specifies the base name for the keyboard device object(s) created by the i8042prt device driver. The device driver also writes information about the device objects into HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap so that the keyboard class driver can locate the keyboard port device objects.</P>
<P>Default:  KeyboardPort</P>
<P><B>MouseDataQueueSize     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of mouse events to be buffered internally by the driver, in nonpaged pool. Consider increasing the size if the System log in Event Viewer contains the following message from the i8042prt source:  "The ring buffer that stores incoming mouse data has overflowed (buffer size is configurable via the Registry)." </P>
<P>Default:  0x64 (100)</P>
<P><B>MouseResolution     REG_DWORD     </B><I>Mouse resolution specifier</I></P>
<P>Used in specifying the mouse port mouse resolution, where 2 to the power of <B>MouseResolution</B> specifies counts-per-millimeter.</P>
<P>Default:  0x3</P>
<P><B>MouseSynchIn100ns      REG_DWORD     </B><I>Time, in 100 nanosecond units</I></P>
<P>Specifies the length of time after which the next mouse interrupt is assumed to indicate the start of a new mouse packet (partial packets are discarded). This allows the driver to synchronize its internal notion of the mouse packet state with the hardware state, in the event that a mouse interrupt has been lost. Consider modifying this value if the system behaves as if there are random mouse events occurring (for example, button clicks when no mouse button has been pressed).</P>
<P>Default:  10000000 (1 second)</P>
<P><B>NumberOfButtons     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of buttons on the mouse port mouse. If an incorrect number of buttons is detected at startup time and placed in the Registry, this value can be used to override it.</P>
<P>Default:  0x2</P>
<P><B>PointerDeviceBaseName     REG_SZ     </B><I>Base mouse port device name</I></P>
<P>Specifies the base name for the pointer device object(s) created by the mouse port mouse driver. The device driver also writes information about the device object into HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap so that the pointer class driver can locate the pointer port device objects.</P>
<P>Default:  PointerPort</P>
<P><B>PollStatusIterations     REG_DWORD     </B><I>Number</I></P>
<P>Specifies the maximum number of times to check the i8042 controller status register for interrupt verification before dismissing the interrupt as spurious. This value can be used to work around a problem experienced on some hardware (including the Olivetti MIPS computers) where the keyboard interrupt is raised before the Output Buffer Full bit is set in the i8042 status register.</P>
<P>Increase this value if the system seems to suddenly stop taking keyboard interrupts. This can happen if a keyboard interrupt is mistakenly dismissed as spurious, when instead it just took too long to set Output Buffer Full after raising the interrupt. Increasing the value of <B>PollStatusIterations</B> results in a longer execution time for the Interrupt Service Routine if the keyboard interrupt truly is spurious (there is a 1 microsecond delay following each check for Output Buffer Full).</P>
<P>To determine whether the driver is taking keyboard interrupts, press the NumLock key. If the NumLock light on the keyboard turns on or off, this indicates that the i8042prt driver handled the keyboard interrupt correctly. </P>
<P>Default:  1</P>
<P><B>OverrideKeyboardType     REG_DWORD     </B><I>&gt;= 0x0</I></P>
<P>This entry is not usually present. When present, it specifies the keyboard type (overriding the keyboard type detected during system initialization). Add this value entry if the detected keyboard type is incorrect in the Registry. Type values 0x2 and 0x4 indicate an enhanced 101-key or 102-key keyboard, or compatible; other values typically indicate an old-style AT keyboard (83, 84, or 86 keys), or compatible.</P>
<P>Default:  0x4 (Enhanced 101-key or 102-key keyboard)</P>
<P><B>OverrideKeyboardSubtype     REG_DWORD     </B><I>&gt;= 0x0</I></P>
<P>This entry is not usually present. When present, it specifies the OEM-dependent keyboard subtype (overriding the keyboard subtype detected during system initialization).</P>
<P>Default:  0x0 </P>
<P><B>PollingIterations     REG_DWORD     </B><I>&gt;= 0x400</I></P>
<P>Specifies the standard number of times to poll the hardware (in polling mode) before giving up and timing out the operation. Consider increasing this value if the driver fails to initialize or work correctly and the System log in Event Viewer contains the following message from the i8042prt source:  "The operation on ... timed out (time out is configurable via the Registry)."</P>
<P>Default:  0x400</P>
<P><B>PollingIterationsMaximum     REG_DWORD     </B><I>&gt;= 0x400</I></P>
<P>Specifies the maximum number of times to poll the hardware (in polling mode) before giving up and timing out the operation. This value is used instead of <B>PollingIterations</B> when an old-style AT keyboard is detected (see <B>OverrideKeyboardType</B>). </P>
<P>Consider increasing this value if the driver fails to initialize or work correctly and the System log in Event Viewer contains the following message from the i8042prt source:  "The operation on ... timed out (time out is configurable via the Registry)."</P>
<P>Default:  0x2EE0</P>
<P><B>ResendIterations     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the maximum number of times a hardware operation will be retried before timing out. Consider increasing this value if the driver fails to initialize or work correctly and the System log in Event Viewer contains the following message from the i8042prt source:  "Exceeded the allowable number of retries (configurable via the Registry) on device ..."</P>
<P>Default:  0x3</P>
<P><B>SampleRate     REG_DWORD     </B><I>Mouse sample rate in Hz</I></P>
<P>Specifies the sample rate for the mouse. Intended for future use. This value might have no effect in the first release of Windows&nbsp;NT.</P>
<P>Default:  0x3C (60 Hz) </P>
<H4><A NAME="sec2"></A>Microsoft InPort Bus Mouse Port Driver Entries</H4><P>The value entries for the Microsoft InPort bus mouse are found in the following subkey:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Inport\Parameters</code></pre>
<P><B>HzMode     REG_DWORD     </B><I>Mouse sample rate mode specifier</I></P>
<P>Specifies the value written to the Microsoft InPort mode register to set the mouse sample rate. Might be used in the first release of Windows&nbsp;NT, but should become obsolete.</P>
<P>Default:  0x2 (selects 50 Hz)</P>
<P><B>MouseDataQueueSize     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of mouse events to be buffered internally by the driver, in nonpaged pool. The allocated size, in bytes, of the internal buffer is this value times the size of the MOUSE_INPUT_DATA structure (defined in NTDDMOU.H). Consider increasing the size if the System log in Event Viewer contains the following message from the InPort source:  "The ring buffer that stores incoming mouse data has overflowed (buffer size is configurable via the Registry)." </P>
<P>Default:  0x64 (100)</P>
<P><B>NumberOfButtons     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of buttons on the Microsoft InPort bus mouse. If the number of buttons detected at startup time and placed in the Registry is incorrect, this value can be used to override it.</P>
<P>Default:  0x2</P>
<P><B>PointerDeviceBaseName     REG_SZ     </B><I>Base port device name</I></P>
<P>Specifies the base name for the device object(s) created by the Microsoft InPort bus mouse device driver. The device driver also writes information about the device objects into HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap so that the pointer class driver can locate the pointer port device objects.</P>
<P>Default:  PointerPort</P>
<P><B>SampleRate     REG_DWORD     </B><I>Mouse sample rate in Hz</I></P>
<P>Specifies the sample rate for the Microsoft InPort bus mouse. Intended for future use. This value might have no effect in the first release of Windows&nbsp;NT.</P>
<P>Default:  0x32 (50 Hz) </P>
<H4><A NAME="sec3"></A>Microsoft Serial Mouse Port Driver Entries</H4><P>The value entries for the Microsoft serial mouse are found in the following subkey:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Sermouse\Parameters</code></pre>
<P><B>MouseDataQueueSize     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of mouse events to be buffered internally by the driver, in nonpaged pool. The allocated size, in bytes, of the internal buffer is this value times the size of the MOUSE_INPUT_DATA structure (defined in NTDDMOU.H). Consider increasing the size if the System log in Event Viewer contains the following message from the Sermouse source:  "The ring buffer that stores incoming mouse data has overflowed (buffer size is configurable via the Registry)." </P>
<P>Default:  0x64 (100)</P>
<P><B>NumberOfButtons     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of buttons on the serial mouse. If the number of buttons detected at startup time and placed in the Registry is incorrect, this value can be used to override it.</P>
<P>Default:  0x2</P>
<P><B>OverrideHardwareBitstring     REG_DWORD     </B><I>0x1 or 0x2</I></P>
<P>This entry is not usually present. When present, it specifies that regardless of whether it was actually detected, a serial mouse is present on the system. Add this value to tell the driver to assume the serial mouse is on COM1 (specified by the value 0x1) or COM2 (specified by the value 0x2). This entry is useful if the serial mouse has not been automatically detected. </P>
<P><B>PointerDeviceBaseName     REG_SZ     </B><I>Base port device name</I></P>
<P>Specifies the base name for the device object(s) created by the serial mouse device driver. The device driver also writes information about the device objects into HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap so that the pointer class driver can locate the pointer port device objects.</P>
<P>Default:  PointerPort</P>
<P><B>SampleRate     REG_DWORD     </B><I>Mouse sample rate in Hz</I></P>
<P>Specifies the sample rate for the serial mouse. Intended for future use. This value might have no effect in the first release of Windows&nbsp;NT.</P>
<P>Default:  0x28 (1200 baud) </P>
<H4><A NAME="sec4"></A>Mouse Class Driver Entries</H4><P>The value entries for the mouse class driver are found in the following subkey:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Mouclass\Parameters</code></pre>
<P><B>ConnectMultiplePorts     REG_DWORD     </B><I>0x0 or 0x1</I></P>
<P>Specifies the type of connection between class and port device objects. This parameter is mainly of interest to device driver writers.</P>
<P>The value 0x0 specifies a 1:1 relationship between class device objects and port device objects. (That is, one class device object is created by the driver and connected to one port device object; the maximum number of objects created and connected to an associated port object is determined by the value of <B>MaximumPortsServiced</B>.) The value 0x1 specifies a 1:many relationship between a single class device object and multiple port device objects. (That is, one class device object is created by the driver and then connected to multiple port device objects, up to a maximum specified by <B>MaximumPortsServiced</B>.)</P>
<P>Default:  0x1 (The events generated by up to the <B>MaximumPortsServiced</B> number of pointing devices on the system will all be fed to the Windows subsystem in a single input stream.) </P>
<P><B>MaximumPortsServiced     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of port devices the mouse class device driver will connect to and service. The class device driver handles hardware-independent operations on a specific class of devices (in this case, the mouse and other pointing devices). The port drivers manage the hardware-specific operations.</P>
<P>Default:  0x3 (The class driver will service up to three pointing devices.)</P>
<P><B>MouseDataQueueSize     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of mouse events to be buffered internally by the driver, in nonpaged pool. The allocated size, in bytes, of the internal buffer is this value times the size of the MOUSE_INPUT_DATA structure (defined in NTDDMOU.H). Consider increasing the size if the System log in Event Viewer frequently contains the following message from the Mouclass source:  "The ring buffer that stores incoming mouse data has overflowed (buffer size is configurable via the Registry)." </P>
<P>Default:  0x64 (100)</P>
<P><B>PointerDeviceBaseName     REG_SZ     </B><I>Base class device name</I></P>
<P>Specifies the base name for the device object(s) created by the mouse class device driver. The device driver also writes information about the device object into HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap so that the pointer class device object(s) can be easily located.</P>
<P>Default:  PointerClass</P>
<H4><A NAME="sec5"></A>Keyboard Class Driver Entries</H4><P>The value entries for the keyboard class driver are found in the following subkey:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Kbdclass\Parameters</code></pre>
<P><B>ConnectMultiplePorts     REG_DWORD     </B><I>0x0 or 0x1</I></P>
<P>Specifies the type of connection between class and port device objects. This parameter is mainly of interest to device driver writers.</P>
<P>The value 0x0 specifies a 1:1 relationship between class device objects and port device objects. (That is, one class device object is created by the driver and connected to one port device object; the maximum number of objects created and connected to an associated port object is determined by the value of <B>MaximumPortsServiced</B>.) The value 0x1 specifies a 1:many relationship between a single class device object and multiple port device objects (That is, one class device object is created by the driver and then connected to multiple port device objects, up to a maximum specified by <B>MaximumPortsServiced</B>.)</P>
<P>Default:  0x0 (The events generated by up to the <B>MaximumPortsServiced</B> number of keyboard devices on the system will feed separate input streams. In the first release of Windows&nbsp;NT, the Windows subsystem only reads from a single keyboard input stream.)</P>
<P><B>KeyboardDataQueueSize     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of keyboard events to be buffered internally by the driver, in nonpaged pool. The allocated size, in bytes, of the internal buffer is this value times the size of the KEYBOARD_INPUT_DATA structure (defined in NTDDKBD.H). Consider increasing the size if the System log in Event Viewer contains the following message from the Kbdclass source:  "The ring buffer that stores incoming keyboard data has overflowed (buffer size is configurable via the Registry)." </P>
<P>Default:  0x64 (100)</P>
<P><B>KeyboardDeviceBaseName     REG_SZ    </B><I> Base class device name</I></P>
<P>Specifies the base name for the keyboard device object(s) created by the keyboard class device driver. The device driver also writes information about the device objects into HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap so that the keyboard class device objects are easily located.</P>
<P>Default:  KeyboardClass</P>
<P><B>MaximumPortsServiced     REG_DWORD     </B><I>&gt;= 0x1</I></P>
<P>Specifies the number of port devices the keyboard class device driver will connect to and service. The class device driver handles hardware-independent operations on a specific class of devices (in this case, keyboard devices). The port drivers manage the hardware-specific operations.</P>
<P>Default:  0x3 (The class driver will service up to three keyboard devices.)</P>
<H4><A NAME="sec6"></A>DeviceMap Entries for the Keyboard and Mouse </H4><P>The following DeviceMap descriptions are for informational purposes only, since the DeviceMap subkeys are volatile and are recreated each time you start Windows&nbsp;NT. Administrators cannot modify DeviceMap entries.</P>
<P>These DeviceMap entries are used by the Windows subsystem to locate the pointer and keyboard class devices, and by the pointer and keyboard class drivers to locate the associated pointer and keyboard port devices. Information is placed in the DeviceMap subkey by the keyboard and pointer class and port drivers. </P>
<P>The format for each of these entries is the following:</P>
<P><I>Name of class device object</I><B> : REG_SZ : </B><I>Registry path to driver's Services</I></P>
<P>The keyboard class information appears in the following Registry path:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap\KeyboardClass</code></pre>
<P>There can be one or more of these entries. Each entry specifies the name of a device object created by the keyboard class driver to represent the class device, followed by the Registry path to the driver's Services subkey. </P>
<P>Default: </P>
<P><BR></P>
<pre><code>   \Device\KeyboardClass0 : REG_SZ \Registry\Machine\System\ControlSet001\Services\Kbdclass</code></pre>
<P>The keyboard port information appears in the following Registry path:</P>
<P><BR></P>
<pre><code>   HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap\KeyboardPort</code></pre>
<P>There can be one or more of these entries. Each entry specifies the name of a device object created by the keyboard port driver(s) to represent the physical keyboard (port) device, followed by the Registry path to the driver's Services subkey. </P>
<P>Default: </P>
<P><BR></P>
<pre><code>   \Device\KeyboardPort0 : REG_SZ : \Registry\Machine\System\ControlSet001\Services\i8042prt</code></pre>
<P>The mouse class information appears in the following Registry path:</P>
<P><BR></P>
<pre><code>   HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap\PointerClass</code></pre>
<P>There can be one or more of these entries. Each entry specifies the name of a device object created by the pointer (mouse) class driver to represent the class device, followed by the Registry path to the driver's Services subkey. </P>
<P>Default: </P>
<P><BR></P>
<pre><code>   \Device\PointerClass0 : REG_SZ : \Registry\Machine\System\ControlSet001\Services\Mouclass</code></pre>
<P>The mouse port information appears in the following Registry path:</P>
<P><BR></P>
<pre><code>   HKEY_LOCAL_MACHINE\HARDWARE\DeviceMap\PointerPort</code></pre>
<P>There can be one or more of these entries. Each entry specifies the name of a device object created by the pointer port driver(s) to represent the physical pointing (port) device, followed by the Registry path to the driver's Services subkey. </P>
<P>Default (assumes mouse port, Microsoft InPort, and serial pointing devices are connected):</P>
<P><BR></P>
<pre><code>   \Device\PointerPort0 : REG_SZ : <BR>      \Registry\Machine\System\ControlSet001\Services\i8042prt<BR>   \Device\PointerPort1 : REG_SZ : <BR>      \Registry\Machine\System\ControlSet001\Services\Inport<BR>   \Device\PointerPort2 : REG_SZ : <BR>      \Registry\Machine\System\ControlSet001\Services\Sermouse </code></pre></FONT></BODY></HTML>
