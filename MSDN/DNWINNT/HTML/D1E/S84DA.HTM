<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Linkage Subkey Entries for Network Components</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Linkage Subkey Entries for Network Components</H3><P>Each network component that the system determines to be required can be given bindings, which establish the relationships between network software components, as described in "Bindings for Network Components" in Chapter&nbsp;11, "Overview of the Windows&nbsp;NT Registry." All bindings are created by the system and should not be changed by the user, except by choosing the Bindings button in the Network dialog box in Control Panel.</P>
<P>Whether the bindings actually appear in the Registry depends upon the <B>Bindform</B> value for the component in its NetRules subkey.</P>
<P>The binding information is stored in three value entries in the Linkage subkey for a component under the Services subkey. The Registry path for each Linkage subkey is the following:</P>
<P><BR></P>
<pre><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services<BR>    \<I>ServiceName</I>\Linkage</code></pre>
<P>If a binding is disabled, the settings are stored under a Disabled subkey under the Linkage subkey. These values are in exactly the same format as for active bindings.</P>
<P>For a network component, there might be more than one subkey under its Services subkey:  one for the driver and one for the network adapter card, plus additional subkeys for services that might be installed with the network adapter. Also, entries for adapter cards for AppleTalk, DLC (Data Link Control), NWLink, and TCP/IP are described in their respective sections in "Registry Entries for Network Services," later in this chapter.</P>
<P><B>Bind     REG_MULTI_SZ     </B><I>ObjectName ObjectName ...</I></P>
<P>Each string in this value entry is the name of a Windows&nbsp;NT object created by the underlying software. The names are based on the object names declared in the <B>Bindform</B> entry under the NetRules subkey.</P>
<P><B>Export     REG_MULTI_SZ     </B><I>ObjectName ObjectName ...</I></P>
<P>Each string in this value entry indicates the name that should be added in the system to allow access to the corresponding bound object. The names are based on the object names declared in the <B>Bindform</B> entry under the NetRules subkey.</P>
<P><B>Route     REG_MULTI_SZ     </B><I>"Name of service" "Name of service"...</I></P>
<P>Each string in this value entry indicates the exact path through the binding protocol represented by the binding. The names of services are used, surrounded by quotation marks.</P>
<P>Each element of these multistring values has a one-to-one correspondence with the others; that is, <B>Bind[1]</B> is to <B>Export[1]</B> and <B>Route[1]</B> as <B>Bind[2]</B> is to <B>Export[2]</B> and<B> Route[2]</B>.</P>
<P>In addition to generating binding information, the system determines each network component's complete set of dependencies, and stores them in the related subkey in the CurrentControlSet\Services subkey. For examples using these value entries, see "Bindings for Network Components" in Chapter&nbsp;11, "Overview of the Windows&nbsp;NT Registry."</P></FONT></BODY></HTML>
