<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Custom Startup Verification Program</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Creating a Custom Startup Verification Program</H3><P>System startup is usually declared good if the following two procedures are complete:</P>
<UL><LI>All startup drivers are loaded.
<P>When a service fails to load during startup, its ErrorControl value is checked, as defined in the CurrentControlSet\Services\<I>serviceName</I> subkeys. Whether the system startup process continues or halts depends on this value.</P></LI><LI>At least one user successfully logs on the computer by pressing CTRL+ALT+DEL and supplying a valid username, domain, and password. </LI></UL><P>This basic standard for verifying system startup will suit the needs for most situations; however, your site might require additional steps before considering a computer to be successfully started and ready to participate in the network.</P>
<P>For example, you might want to redefine startup validation for a server where, normally, no one logs on or where you want system startup to be validated as successful only after a particular process has started. </P>
<P>Or, for a server running Microsoft SQL Server, you might want a system startup to&nbsp;be marked as good only after the SQL server responds to a request. To do this, you might write a program that queries the SQL server and checks the response. If&nbsp;the response is not as expected, the program can call the NotifyBootConfigStatus() function with FALSE, causing the system to restart using the LastKnownGood control set. Or, the program might cause the system to run without saving the current configuration as the LastKnownGood control. Conversely, if the SQL server responds as expected, the program can call the NotifyBootConfigStatus() function with TRUE, causing the current configuration to be saved as the LastKnownGood control.</P>
<P>You can run such a verification program from the command prompt. Or, you can have the program run automatically during startup by specifying value entries under BootVerificationProgram in the Registry.</P>
<H4><A NAME="sec0"></A>To create a custom startup verification program</H4><OL><LI>Change the value of ReportBootOK to 0 under the following Registry path:
<P>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows&nbsp;NT\CurrentVersion<BR>     \WinLogon</P>

<P>The data type for ReportBootOK is REG_SZ. When this value is 0, it disables the automatic startup acceptance that happens after the first successful logon.</P></LI><LI>Create the executable program that you want to run as part of startup verification. Then specify its filename as a value for ImagePath in the BootVerificationProgram subkey under this Registry path:
<P>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet<BR>    \Control\BootVerificationProgram</P>

<P>The data type for ImagePath must be REG_SZ or REG_EXPAND_SZ.</P></LI></OL><P>As another example, a computer setup for a turnkey application is a candidate for a custom startup verification routine, where the computer doesn't usually interact directly with users and you therefore don't want a successful user logon to be part of the system startup. </P>
<P>If you want a good system startup to be accepted from a remote computer (either manually or automatically), you can use the service program, BOOTVRFY.EXE, that is supplied with Windows&nbsp;NT. In this case, the remote computer accepts the system startup by starting the BOOTVRFY.EXE service. You can also write your own verification service that can reject the system startup and revert to the LastKnownGood control set to restart the computer.</P>
<H4><A NAME="sec1"></A>To verify system startup from a remote computer</H4><OL><LI>For the local computer, add a BootVerification key under the following Registry path:
<P>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services</P></LI><LI>Add the following value entries under this new <B>BootVerification</B> key:
<P>Start : REG_DWORD : 0x00000003<BR>Type : REG_DWORD : 0x00000020<BR>ErrorControl : REG_DWORD : 0x00000001<BR>ImagePath : REG_EXPAND_SZ : bootvrfy.exe<BR>ObjectName : REG_SZ : LocalSystem</P>

<P>For more information about these entries, see "BootVerification Service Entries" in Chapter 14, "Registry Value Entries."</P></LI><LI>Change the value of ReportBootOK to 0 under the following Registry path:
<P>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows&nbsp;NT\CurrentVersion<BR>    \WinLogon</P></LI><LI>Start the BootVerification service from a remote computer.
<P>This service tells the service controller on the local computer to save the current startup configuration as the LastKnownGood configuration, and then the service terminates itself.</P></LI></OL><P><B>Important</B>   You cannot use the BootVerification service in conjunction with settings in the BootVerificationProgram key. These are mutually exclusive methods.</P>
<P>You might also want a good system startup to depend on whether a specific service or driver loads. For example, for a server you might want to cause the Boot Loader to choose the LastKnownGood control set if the Server service doesn't start on the computer. </P>
<H4><A NAME="sec2"></A>To change system startup to depend on a service or driver </H4><OL><LI>Select the subkey for the service under the following Registry path:
<P>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\ServiceName</P>

<P><I>ServiceName</I> can be any service upon which you want successful system startup to depend.</P></LI><LI>Double-click the service's ErrorControl entry, and then specify a new value of 2 (to switch to LastKnownGood if the service doesn't start).
<P>On a few rare occasions, you might want to specify a value of 3 (to fail the attempted startup if the service doesn't start); however, this ErrorControl value is usually reserved for critical services such as file system drivers.</P></LI><LI>For the new values to take effect, close Registry Editor, shut down the system, and restart the computer.</LI><LI>If you do not get the intended effect, restart the computer, and manually choose the LastKnownGood control set as described in "Starting a System with Configuration Problems," earlier in this chapter. All changes in the last session will be discarded.</LI></OL></FONT></BODY></HTML>
