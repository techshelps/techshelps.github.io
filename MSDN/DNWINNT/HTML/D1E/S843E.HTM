<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Value Entries in the Registry Keys</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Value Entries in the Registry Keys </H3><P>Registry data is maintained as value entries under the Registry keys. As shown in the following figure, Registry Editor displays data in two panes. The value entries in the right pane are associated with the selected key in the left pane.</P>
<P><img src="XRGF05.gif"></P>
<P>A value entry has three parts: the name of the value, the data type of the value, and the value itself, which can be data of any length. The three parts of value entries always appear in the following order:</P>
<P><img src="XRGF06.gif"></P>
<P>A value entry cannot be larger than about 1&nbsp;MB. Values from 0 to 0x7fffffff are reserved for definition by the system, and applications are encouraged to use these types. Values from 0x80000000 to 0xffffffff are reserved for use by applications.</P>
<P>The following table lists the data types currently defined and used by the system.</P>
<P>Table 10.2    Data Types for Registry Entries</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="136pt" VALIGN="TOP"><COL WIDTH="261pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Data type</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>REG_BINARY</P></TD><TD VALIGN="TOP"><P>Raw binary data. Most hardware component information is stored as binary data, and can be displayed in Registry Editor in hexadecimal format, or displayed via the Windows&nbsp;NT Diagnostics program (WINMSD.EXE) in an easy-to-read format. For example:</P>
<P>Component Information : REG_BINARY : 00 00 00...</P></TD></TR><TR><TD VALIGN="TOP"><P>REG_DWORD</P></TD><TD VALIGN="TOP"><P>Data represented by a number that is 4 bytes long. Many parameters for device driver and services are this type and can be displayed in Registry Editor in binary, hex, or decimal format. For example, entries for service error controls are this type:</P>
<P>ErrorControl : REG_DWORD : 0x1</P></TD></TR><TR><TD VALIGN="TOP"><P>REG_EXPAND_SZ</P></TD><TD VALIGN="TOP"><P>An expandable data string, which is text that contains a variable to be replaced when called by an application. For example, for the following value, the string <I>%SystemRoot%</I> will be replaced by the actual location of the directory containing the Windows&nbsp;NT system files:</P>
<P>File : REG_EXPAND_SZ : <I>%SystemRoot%</I>\file.exe</P></TD></TR><TR><TD VALIGN="TOP"><P>REG_MULTI_SZ</P></TD><TD VALIGN="TOP"><P>A multiple string. Values that contain lists or multiple values in human readable text are usually this type. Entries are separated by NULL characters. For example, the following value entry specifies the binding rules for a network transport:</P>
<P>bindable : REG_MULTI_SZ : dlcDriver dlcDriver non non 50</P></TD></TR><TR><TD VALIGN="TOP"><P>REG_SZ</P></TD><TD VALIGN="TOP"><P>A sequence of characters representing human readable text. For example, a component's description is usually this type:</P>
<P>DisplayName : REG_SZ : Messenger</P></TD></TR></TBODY></TABLE>
<P><BR></P></FONT></BODY></HTML>
