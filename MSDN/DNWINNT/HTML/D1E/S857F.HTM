<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multitasking</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Multitasking</H3><H4><A NAME="sec0"></A>Process</H4><P>The OS/2 subsystem uses OS/2 semantics to maintain the various OS/2 objects. Examples of this include process IDs, the process tree, handles, local and global <B>infosegs</B>, thread-1 semantics, exit-list processing, signals, and semaphores. Windows&nbsp;NT objects are used only when they are relevant; they are then embedded inside OS/2 objects (for example, file handles).</P>
<P>The process tree records the descendant processes of a given process. The subsystem uses the process tree in all related operations, such as ending a program by pressing Ctrl+C.</P>
<H4><A NAME="sec1"></A>Thread</H4><P>Every thread created by an OS/2 application is implemented with a Windows&nbsp;NT thread in the same process. The thread receives the priority and ID that are relevant in OS/2. The exact OS/2 semantics (such as contents of the register and the stack) are retained when the thread function starts.</P>
<H4><A NAME="sec2"></A>Scheduler</H4><P>The Windows&nbsp;NT scheduler handles the scheduling of OS/2 threads, with the OS/2 priorities 0–63 mapping to Windows&nbsp;NT variable priorities 0–15. (OS/2 priorities are changed only by the application; they are not changed by the scheduler). OS/2 threads never receive Windows&nbsp;NT real-time priorities 16–31.</P></FONT></BODY></HTML>
