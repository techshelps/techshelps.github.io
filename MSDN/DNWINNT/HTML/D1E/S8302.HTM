<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hardware Abstraction Layer</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Hardware Abstraction Layer</H2><P>The Hardware Abstraction Layer (HAL) is a thin layer of software provided by the hardware manufacturer that hides, or <I>abstracts</I>, hardware differences from higher layers of the operating system. Thus, through the filter provided by HAL, different types of hardware all look alike to the operating system, removing the need to specifically tailor the operating system to the hardware with which it communicates.</P>
<P>The goal for HAL was to provide routines that allow a single device driver to support the same device on all platforms. HAL allows a large number of variations in hardware platforms for a single processor architecture without requiring a separate version of the operating system for each one.</P>
<P>HAL routines are called from both the base operating system (including the Kernel component) and from device drivers. For drivers, HAL provides the ability to support a wide variety of input/output (I/O) architectures, instead of either being restricted to a single hardware model or needing extensive adaptation for each new hardware platform.</P>
<P>HAL is also responsible for hiding the details of symmetric multiprocessing hardware from the rest of the operating system.</P></FONT></BODY></HTML>
