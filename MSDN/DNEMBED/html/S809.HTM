<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging Embedded SQL Programs</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H2>Debugging Embedded SQL Programs</H2><P CLASS="t">You can use the Microsoft debuggers (including the integrated debugger in 16-bit Visual C++ and 32-bit Visual C++), CodeView&reg; window-oriented debugger for Windows, and WinDebug for Windows NT and Windows 95 to examine your Embedded SQL program while it is executing. A Microsoft debugger displays Embedded SQL source statements as lines of executable code. While debugging, you can set breakpoints on Embedded SQL statements to test host variables. To monitor SQLCA and SQLDA fields, you must monitor the SQLCA<I> </I>and SQLDA data structures and member variables. For example, you must monitor <I>sqlca-&gt;sqlcode</I> instead of the SQLCODE macro, and you must monitor <I>sqlca-&gt;sqlerrd</I>[0] instead of the SQLERRD1 macro.</P>
<P CLASS="t">When you use the integrated debugger in 16-bit Visual C++ or 32-bit Visual C++, you can set breakpoints on lines of source code in your .SQC file. However, to begin a debugging session, you must first open the .C file that is generated by <B>sqlprep</B> and make that window active. Then from the Debug menu, choose Go.</P>
<P CLASS="t">When you use CodeView for 16-bit Windows and step through the code, the cursor disappears until it reaches the next C statement.</P>
</FONT>
</BODY>
</HTML>
