<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Examples</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H3>Examples</H3><P CLASS="t">The examples, 1 through 8, describe Embedded SQL character-mode programs that are written using plain C, standard C libraries, and Embedded SQL statements. Each program connects to the specified SQL Server and executes a series of Embedded SQL statements.</P>
<P CLASS="t">Each program that is described in the following examples uses the appropriate EXAMPLE<I>n</I>.SQC, GCUTIL.C, GCUTIL.H, and QUICKWIN.DEF files. Some of these programs use the <I>author2</I> table, which you can create by using the AUTHOR2.SQL file.</P>
<P CLASS="t">You can build an example program for the following environments by using the associated commands.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="168pt" VALIGN="TOP"><COL WIDTH="180pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="thf"><B>Environment</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Command</B></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Windows NT and Windows 95</P></TD><TD VALIGN="TOP"><P CLASS="tt">makec example<I>n</I> nt, where <I>n</I> is the number of the example program</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">MS-DOS</P></TD><TD VALIGN="TOP"><P CLASS="tt">makec example<I>n</I> dos, where <I>n</I> is the number of the example program</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">QuickWin </P></TD><TD VALIGN="TOP"><P CLASS="tt">makec example<I>n</I> qwin, where <I>n</I> is the number of the example program</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H4><A NAME="sec0"></A>Example 1</H4><UL><LI> <FONT FACE="Symbol"></FONT>    Declares and opens a standard cursor by using a prepared SQL statement.</LI><LI> <FONT FACE="Symbol"></FONT>    Fetches rows from the <I>sysobjects</I> table in the specified database.</LI></UL><P></P>
<H4><A NAME="sec1"></A>Example 2</H4><UL><LI> <FONT FACE="Symbol"></FONT>    Declares and opens a browse cursor.</LI><LI> <FONT FACE="Symbol"></FONT>    Fetches rows from the <I>sales</I> table in the <I>pubs</I> database into a C structure.</LI></UL><P></P>
<H4><A NAME="sec2"></A>Example 3</H4><UL><LI> <FONT FACE="Symbol"></FONT>    Declares and opens a standard cursor.</LI><LI> <FONT FACE="Symbol"></FONT>    Fetches rows from the <I>author2</I> table in the <I>pubs</I> database.
<P CLASS="lt1">After each row is fetched, it:</P>

<P CLASS="ls2">    1.    Begins a transaction.</P>

<P CLASS="ls2">    2.    Performs a dummy update to lock that row.</P>

<P CLASS="ls2">    3.    Allows you to change the author's last name in that row. </P>

<P CLASS="ls2">    4.    Commits the transaction.</P></LI></UL><P></P>
<H4><A NAME="sec3"></A>Example 4</H4><UL><LI> <FONT FACE="Symbol"></FONT>    Connects to two SQL Servers, and declares and opens two standard cursors by using a prepared SQL statement.</LI><LI> <FONT FACE="Symbol"></FONT>    Fetches rows from the <I>author2</I> table in the <I>pubs</I> database of each SQL Server.</LI><LI> <FONT FACE="Symbol"></FONT>    Allows you to issue positioned updates of each author's last name as the rows are fetched.</LI></UL><P></P>
<H4><A NAME="sec4"></A>Example 5</H4><UL><LI> <FONT FACE="Symbol"></FONT>    Issues a singleton select statement to retrieve a row from the <I>titles</I> table in the <I>pubs</I> database into a C structure or into the individual fields of a C structure.</LI><LI> <FONT FACE="Symbol"></FONT>    Uses browse cursors with a SELECT statement and the <B>sp_who</B> stored procedure.</LI><LI> <FONT FACE="Symbol"></FONT>    Issues static and dynamic INSERT statements.</LI><LI> <FONT FACE="Symbol"></FONT>    Issues a SELECT statement of various date and time values.</LI></UL><P></P>
<H4><A NAME="sec5"></A>Example 6</H4><UL><LI> <FONT FACE="Symbol"></FONT>    Issues multiple static SQL statements within a transaction in a Transact-SQL batch.</LI><LI> <FONT FACE="Symbol"></FONT>    Executes the <B>sp_addtype</B> and <B>sp_droptype</B> stored procedures.</LI><LI> <FONT FACE="Symbol"></FONT>    Uses a browse cursor with the <B>sp_who</B> stored procedure.</LI><LI> <FONT FACE="Symbol"></FONT>    Issues a SELECT statement into a temporary table and retrieves a row from that temporary table by using the EXECUTE IMMEDIATE statement.</LI><LI> <FONT FACE="Symbol"></FONT>    Executes a static Transact-SQL batch that uses control-of-flow language.</LI></UL><P></P>
<H4><A NAME="sec6"></A>Example 7</H4><UL><LI> <FONT FACE="Symbol"></FONT>    Opens a standard cursor by using HOLDLOCK within a transaction; inserts the cursor.</LI><LI> <FONT FACE="Symbol"></FONT>    Updates and deletes rows from the <I>authors</I> table in the <I>pubs</I> database.</LI><LI> <FONT FACE="Symbol"></FONT>    Inserts rows into the <I>authors</I> table within a transaction and then rolls back that transaction.</LI><LI> <FONT FACE="Symbol"></FONT>    Demonstrates that triggers are enforced by attempting to delete a row from the <I>titles</I> table that fires the <I>deltitle</I> trigger.</LI><LI> <FONT FACE="Symbol"></FONT>    Uses a browse cursor with the <B>sp_who</B> stored procedure.</LI><LI> <FONT FACE="Symbol"></FONT>    Executes the <B>sp_addtype</B> and <B>sp_droptype</B> stored procedures.</LI></UL><H4><A NAME="sec7"></A>Example 8</H4><UL><LI> <FONT FACE="Symbol"></FONT>    Demonstrates behavior that is similar to that of <B>isql</B>.</LI></UL><P CLASS="t"></P>
<P CLASS="t"></P>
</FONT>
</BODY>
</HTML>
