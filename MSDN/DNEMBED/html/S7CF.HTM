<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declaring Host Variables</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H3>Declaring Host Variables</H3><P CLASS="t">Before you use a host variable in an Embedded SQL statement, you must declare the variable by using normal C-language syntax within an Embedded SQL host declare section. Host variable declarations start with the Embedded SQL statement BEGIN DECLARE SECTION and end with the END DECLARE SECTION statement. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="NEW COURIER" SIZE= "3">EXEC SQL BEGIN DECLARE SECTION;
int nID;
unsigned short usNumber;
char szName[30];
EXEC SQL END DECLARE SECTION;
</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">Embedded SQL limits the length of host variable names to 30 characters. Declaring host variables with longer names causes an error at precompile time when Embedded SQL processes the host variable.</P>
<P></P>
<P CLASS="t">Host variables can be declared wherever C variables can be declared. Because Embedded SQL does not attempt to parse complex C variables such as structures or arrays (other than simple character arrays), you cannot directly use structures or arrays to receive rows or columns of data. However, you can use a structure member as a host variable. You can also use a pointer to a single array element as a host variable and index that pointer as appropriate before each use.</P>
</FONT>
</BODY>
</HTML>
