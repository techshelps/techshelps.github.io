<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Concurrency Control</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H3>Concurrency Control</H3><P CLASS="t">Standard cursors control, through several options, <I>concurrent access</I> (when more than one user accesses and updates the same data at the same time). With concurrent access, data would soon become unreliable without some type of control. To activate the particular concurrency control desired, specify one of the options in the following table in a SET CONCURRENCY statement.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="104pt" VALIGN="TOP"><COL WIDTH="243pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="thf"><B>Option</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Result</B></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">READONLY</P></TD><TD VALIGN="TOP"><P CLASS="tt">Updates are not permitted.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">LOCKCC</P></TD><TD VALIGN="TOP"><P CLASS="tt">The rows are locked when they are fetched inside a user-initiated transaction. No other user can update these rows. Updates that are issued by the cursor owner are guaranteed to succeed.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt"></P></TD><TD VALIGN="TOP"><P CLASS="tt">Note that with Microsoft SQL Server, locks that are placed by LOCKCC prevent other users from reading and updating the locked data. Use the BEGIN TRANSACTION and COMMIT TRANSACTION statement to hold the locks. For more information about locking, see "Holding Locks," later in this chapter. </P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">OPTCC and OPTCCVAL</P></TD><TD VALIGN="TOP"><P CLASS="tt">Fetched rows are not locked; other users can update or read them.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">To detect collisions between updates that are issued by the cursor owner and those that are issued by other users, standard cursors save and compare timestamps or column values. Therefore, if you specify either of the optimistic concurrency control options (OPTCC or OPTCCVAL), you may want to design the application to retry updates that fail because of collisions with other updates.</P>
<P CLASS="t">The two optimistic concurrency control options differ in the way they detect collisions, as described in the following table.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="104pt" VALIGN="TOP"><COL WIDTH="243pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="thf"><B>Option</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Method of detection</B></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">OPTCC</P></TD><TD VALIGN="TOP"><P CLASS="tt">Compares timestamps if available; otherwise, saves and then compares the value of all non-text, non-image columns in the&nbsp;tables with their previous values.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">OPTCCVAL</P></TD><TD VALIGN="TOP"><P CLASS="tt">Compares all non-text, non-image values whether or not a timestamp is available.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
</FONT>
</BODY>
</HTML>
