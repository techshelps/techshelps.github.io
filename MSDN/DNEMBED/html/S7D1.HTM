<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Host Variables and Datatypes</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H3>Host Variables and Datatypes</H3><P CLASS="t">SQL&nbsp;Server uses different datatypes than does the C programming language. Embedded SQL must convert, or <I>map</I>, C datatypes to the appropriate SQL&nbsp;Server datatypes. The following Embedded SQL code fragment illustrates the mapping of three host variables that are declared as C datatypes to their corresponding SQL&nbsp;Server datatypes:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="NEW COURIER" SIZE= "3">EXEC SQL BEGIN DECLARE SECTION;
int hostvar1 = 39;
char *hostvar2 = "telescope";
float hostvar3 = 355.95;
EXEC SQL END DECLARE SECTION;

EXEC SQL UPDATE inventory
    SET department = :hostvar1
    WHERE part_num = "4572-3";

EXEC SQL UPDATE inventory
    SET prod_descrip = :hostvar2
    WHERE part_num = "4572-3";

EXEC SQL UPDATE inventory
    SET price = :hostvar3
    WHERE part_num = "4572-3";
</FONT></PRE>
<P CLASS="t">In the first UPDATE statement, the <I>department</I> column has the SQL Server <I>smallint</I> (integer) datatype, because the host variable <I>hostvar1</I> is declared as a C <I>int</I> (integer) datatype. Consequently, the datatypes from C map directly to SQL&nbsp;Server. </P>
<P CLASS="t">In the second UPDATE statement, the <I>prod_descrip</I> column has the SQL Server <I>varchar</I> (character) datatype. The <I>hostvar2</I> host variable is declared as an array of the C <I>char</I> (character) datatype, which maps to the SQL <I>varchar</I> datatype.</P>
<P CLASS="t">In the third UPDATE statement, the <I>price</I> column has previously been assigned the SQL Server <I>money</I> datatype. No datatype in C corresponds to the SQL&nbsp;Server <I>money</I> datatype. Host variables that are to be used with SQL&nbsp;Server <I>money</I> datatypes can be declared as C floating-point or character datatypes. Embedded SQL converts those host variables to and from <I>money</I> values.</P>
<P CLASS="t">Output host variables of datatype <I>char</I> are now blank padded to their full declared length which is an ANSI requirement.</P>
<P CLASS="t">Input host variables of type <I>char</I> that are used to input binary values must have an explicitly declared length. They cannot be pointer datatypes.</P>
<P CLASS="t">The following example is legal:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="NEW COURIER" SIZE= "3">    char vBinaryIn[100];
</FONT></PRE>
<P CLASS="t">The following example is not legal:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="NEW COURIER" SIZE= "3">    char *vBinaryIn="ff00";
</FONT></PRE>
<P CLASS="t">Be sure to carefully match the datatypes of your host variables to their corresponding use in Embedded SQL statements. For more information about mapping datatypes from the C environment to the SQL&nbsp;Server environment, see Appendix A, "Advanced Programming."  </P>
</FONT>
</BODY>
</HTML>
