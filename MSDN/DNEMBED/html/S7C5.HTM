<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Embedded SQL Steps</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H2>Embedded SQL Steps</H2><P CLASS="t">Embedded SQL programming operates as follows:</P>
<P CLASS="ls">    1.    From the command prompt, the name of the Embedded SQL source file and the appropriate build parameters are submitted to <B>sqlprep</B>, which is the Embedded SQL precompiler. The precompiler parses the submitted file, finds the Embedded SQL statements that are included in the code, and processes the statements.</P>
<P CLASS="ls">    2.    The precompiler produces a C source code file with the Embedded SQL statements removed and, if appropriate, a bind file. The Embedded SQL statements are replaced by calls to the run-time library. The run-time library calls DB-Library to access SQL&nbsp;Servers across a network. </P>
<P CLASS="lt1">During this step, you can specify that stored procedures be automatically created and stored on a specific SQL Server or saved in a bind file. Bind files are Transact-SQL scripts that have a .BND extension.</P>
<P CLASS="ls">    3.    The C source code file is compiled with a supported C compiler to produce an object code file.</P>
<P CLASS="ls">    4.    The object code file and library routines are linked together with a supported linker to produce an executable file.</P>
<P></P>
<P CLASS="t">For more information about building an Embedded SQL application, see Chapter 4, "Building Applications."</P>
</FONT>
</BODY>
</HTML>
