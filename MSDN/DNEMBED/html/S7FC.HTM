<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Steps for Building an Application</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H2>Steps for Building an Application</H2><P CLASS="t">The following steps apply to building all Embedded SQL applications:</P>
<P CLASS="ls">    1.    Run the appropriate <B>sqlprep</B> precompiler to prepare your Embedded SQL program for compiling with a C compiler. </P>
<P CLASS="lt1">The <B>sqlprep</B> precompiler finds SQL statements, parses the SQL statements, and if applicable, creates an access plan or bind file. The precompiler creates a C program that can be compiled with an appropriate C compiler. For more information about <B>sqlprep</B>, see "Running the <B>sqlprep</B> Precompiler" later in this chapter. </P>
<P CLASS="lt1">If your program contains static SQL statements, depending on the options used, <B>sqlprep</B> creates an access plan, or a bind file, or neither. Access plans and bind files consist of a set of definitions for SQL&nbsp;Server stored procedures.</P>
<P CLASS="ls">    2.    Compile the C program created by the precompiler by using an appropriate C compiler. The compiler creates object file(s).</P>
<P CLASS="ls">    3.    Link the object file(s), the Embedded SQL library files, and any other needed library files to create an executable file for the desired environment.</P>
<P></P>
</FONT>
</BODY>
</HTML>
