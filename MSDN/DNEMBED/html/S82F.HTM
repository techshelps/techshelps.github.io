<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cursors and Lock Conflicts</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H2>Cursors and Lock Conflicts</H2><P CLASS="t">Updates are issued through a single database connection including updates that reference a cursor (for example, in an UPDATE<B> </B>WHERE CURRENT OF<B> </B><I>cursor_name</I> statement). Because of this, locking conflicts do&nbsp;not occur between updates that are issued under the same CONNECT TO, SET CONNECT, or default connection.</P>
<P CLASS="t">Each cursor's retrieval operations are performed through a separate database connection. </P>
<P CLASS="t">The following situations block cursors:</P>
<UL><LI> <FONT FACE="Symbol"></FONT>    Cursors that are declared without FOR BROWSE place a read lock on the current page as they move through the results set. No changes can be made to that page by anyone, not even the cursor owner, until the cursor moves on.
<P CLASS="lt1">When the cursor attempts to read a page that contains an uncommitted change (made by anyone, including the cursor owner), the cursor waits until the change is committed.</P></LI><LI> <FONT FACE="Symbol"></FONT>    Cursors that are declared with FOR BROWSE must wait for uncommitted changes (made by anyone, including the cursor owner) only during the OPEN<B> </B>CURSOR operation. Once the cursor is opened, subsequent changes do not cause the cursor to wait. When a cursor is reopened, it can be blocked by uncommitted changes.</LI></UL><P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">SQL&nbsp;Server internally performs locking at the page level rather than at the row level. This means that a second operation can be locked out by the first cursor operation even though the operations are accessing different rows.</P>
<P></P>
<P CLASS="t"></P>
<P CLASS="t"></P>
</FONT>
</BODY>
</HTML>
