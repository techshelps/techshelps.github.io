<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Static and Dynamic Statements</TITLE><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGCOLOR="#FFFFFF" link=#003399 vlink=#996699>
<FONT FACE="Verdana, Arial, Helvetica"SIZE="2">

<H2>Using Static and Dynamic Statements</H2><P CLASS="t">Embedded SQL supports both static and dynamic SQL statements. Static SQL statements can be placed into stored procedures. Dynamic SQL statements are built and executed at run time.</P>
<P CLASS="t">A static SQL statement is a complete Transact-SQL statement that is embedded in the program source code. Static SQL statements can contain host variables.</P>
<P CLASS="t">A dynamic SQL statement is an incomplete Transact-SQL statement, some or all of which is supplied at run time. </P>
<P CLASS="t">With dynamic SQL statements, knowing the complete structure of an SQL statement before building the application is not necessary. Dynamic SQL statements allow run-time input to provide information about the database objects to query.</P>
<P CLASS="t">Dynamic SQL statements that are created by using the PREPARE and EXECUTE statements can contain parameter markers and host variables. Parameter markers are question marks (?) that act as placeholders for information that is supplied at run time. Dynamic SQL statements that are executed using the EXECUTE IMMEDIATE statement must conform to Transact-SQL language rules. They cannot contain parameter markers, host variables, or keywords that pertain exclusively to Embedded SQL.</P>
</FONT>
</BODY>
</HTML>
