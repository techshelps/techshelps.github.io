<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetupScanFileQueue</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_setupapi_setupscanfilequeue"></a>SetupScanFileQueue</h1>
<p>
The <b>SetupScanFileQueue</b> function scans a setup file queue, performing an operation on each node in its copy list. The operation is specified by a set of flags. This function can be called either before or after the queue has been committed</p>
<pre><code><b>BOOL SetupScanFileQueue(
  HSPFILEQ</b><i> FileQueue</i><b>,     </b>// handle to the file queue
<b>  DWORD</b><i> Flags</i><b>,            </b>// control scan operation
<b>  HWND</b><i> Window</i><b>,            </b>// optional, specifies a parent window
<b>  PSP_FILE_CALLBACK</b><i> CallbackRoutine</i><b>,</b>
<b>                          </b>// optional, callback routine to use
<b>  PVOID</b><i> CallbackContext</i><b>,  </b>// optional, callback routine context
<b>  PDWORD</b><i> Result           </i>// receives scan result
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>FileQueue</i></dt>
<dd>
Supplies a handle to the setup file queue whose copy list is to be scanned/iterated.</dd>
<dt>
<i>Flags</i></dt>
<dd>
Values that control how the scan operation is carried out. Flags can be a combination of the following values:
<dl>
<dt>
SPQ_SCAN_FILE_PRESENCE</dt>
<dd>
Determine whether all target files in the copy queue are already present on the target.</dd>
<dt>
SPQ_SCAN_USE_CALLBACK</dt>
<dd>
For each node of the queue, call the callback routine. If the callback routine returns non-0, queue processing stops and <b>SetupScanFileQueue</b> returns zero immediately.</dd>
</dl>

<p>
Either SPQ_SCAN_FILE_PRESENCE, or SPQ_SCAN_USE_CALLBACK must be specified.

<dl>
<dt>
SPQ_SCAN_INFORM_USER</dt>
<dd>
If this flag is specified and all the files in the queue pass the presence/validity check, <b>SetupScanFileQueue</b> informs the user that the operation being attempted requires files but they are already present on the target. This flag is ignored if SPQ_SCAN_FILE_PRESENCE is not specified.</dd>
</dl>
</dd>
<dt>
<i>Window</i></dt>
<dd>
This optional parameter specifies the window to own dialog boxes that are presented. The Window parameter is not used if the <i>Flags</i> parameter does not contain SPQ_SCAN_FILE_PRESENCE or if <i>Flags</i> does not contain SPQ_SCAN_INFORM_USER.</dd>
<dt>
<i>CallbackRoutine</i></dt>
<dd>
This optional parameter specifies a callback function to be called on each node of the copy queue. The notification code passed to the callback function is <a href="setupapi_3dbi.htm">SPFILENOTIFY_QUEUESCAN</a>. This parameter is required if <i>Flags</i> includes SPQ_SCAN_USE_CALLBACK.

<p>
<b>Note</b>  You must supply the callback routine specified by <i>CallbackRoutine</i>. The default queue callback routine does not support <b>SetupScanFileQueue</b>.

</dd>
<dt>
<i>CallbackContext</i></dt>
<dd>
This optional parameter points to a context that contains caller-defined data passed to the callback routine pointed to by <i>CallbackRoutine</i>.</dd>
<dt>
<i>Result</i></dt>
<dd>
Supplies a pointer to a caller-supplied variable in which this function returns the result of the scan operation.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The function returns a non-zero value if all nodes in the queue were processed. </p>
<p>
If the SPQ_SCAN_USE_CALLBACK flag was set, the value in <i>Result</i> is 0. The callback routine specified by <i>CallbackRoutine </i>is sent the notification SPFILENOTIFY_QUEUESCAN. <i>CallbackRoutine.Param1</i> specifies a pointer to an array that contains the target path information. The pointer has been cast to an unsigned integer and must be recast to an TCHAR array of MAX_PATH elements before a callback routine can access the information. <i>CallbackRoutine.Param2</i> is set to SPQ_DELAYED_COPY if the current queue node is in use and cannot be copied until the system is rebooted. Otherwise, <i>CallbackRoutine.Param2</i> takes the value 0. </p>
<p>
If SPQ_SCAN_USE_CALLBACK was not set, <i>Result</i> indicates whether the queue passed the presence/validity check as shown in the following table.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=22%>Result</th>
<th align=left width=78%>Meaning</th>
</tr>
<tr valign=top>
<td width=22%>0</td>
<td width=78%>The queue failed the check or it passed the check but SPQ_SCAN_INFORM_USER was specified and the user wants new copies of the files.</td>
</tr>
<tr valign=top>
<td width=22%>1</td>
<td width=78%>The queue passed the check and, if SPQ_SCAN_INFORM_USER was specified, the user indicated that copying is not required. The copy queue is empty and there are no elements on the delete or rename queues, so the caller can skip queue commit.</td>
</tr>
<tr valign=top>
<td width=22%>2</td>
<td width=78%>The queue passed the check and, if SPQ_SCAN_INFORM_USER was specified, the user indicated that copying is not required. The copy queue is empty but there are elements on the delete or rename queues, so the call cannot skip queue commit.</td>
</tr>
</table><br>
<p>
The function returns zero if an error occurred or the callback function returned non-0. If <i>Result</i> is non-0, it is the value returned by the callback function that stopped queue processing. If <i>Result</i> is 0, extended error information can be retrieved by a call to <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 4.0 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in setupapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with setupapi.lib.</p>
<h4>See Also</h4>
<p>
<a href="setupapi_6n1z.htm">Overview</a>, <a href="setupapi_0pv7.htm">Functions</a>, <a href="setupapi_5nz9.htm"><b>SetupCommitFileQueue</b></a>, <a href="setupapi_5x63.htm"><b>SetupDefaultQueueCallback</b></a></p>
<p>&nbsp;</p></body>
</HTML>
