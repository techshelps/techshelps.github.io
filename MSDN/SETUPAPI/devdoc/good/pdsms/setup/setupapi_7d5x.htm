<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening the INF File</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_setupapi_opening_the_inf_file"></a>Opening the INF File</h3>
<p>
You must use the <a href="setupapi_2vol.htm"><b>SetupOpenInfFile</b></a><b> </b>function to open the INF file before you can retrieve information from it, or append other INF files to it. </p>
<p>
The following example opens an INF file.</p>
<pre><code>HINF MyInf;                //variable to hold the INF handle
UINT ErrorLine;           //variable to hold errors returned
BOOL test;                 //variable to receive function success

MyInf = SetupOpenInfFile (
      szInfFileName,       //the filename of the inf file to open
      NULL,                //optional class information
      INF_STYLE_WIN4,      //the inf style
      &amp;ErrorLine           //line number of the syntax error
);
 </code></pre>
<p>
In the preceding example, <i>MyInf</i> is the handle returned by <b>SetupOpenInfFile</b> to the opened INF file. The parameter <i>szInfFileName</i> specifies the name of the INF file to open. The INF class is specified as NULL. This indicates that the <b>Class </b>key should be ignored. The INF_STYLE_WIN4 value specifies that the INF file is formatted in the INF format used with Windows 95 and Windows NT 4.0. The <i>ErrorLine </i>parameter is a pointer to a variable that receives the line number of an error that the <b>SetupOpenInfFile</b> function generates.</p>
<p>
After an INF file is opened, you can call the <a href="setupapi_6k85.htm"><b>SetupOpenAppendInfFile</b></a> function to append a file to the open INF file. To append several files, repeat this process.</p>
<p>
If you call the <b>SetupOpenAppendInfFile</b> function and the filename passed to it is NULL, then the function will search the <a href="setupapi_0xwu.htm"><b>Version</b></a><b> </b>section of the open INF file (and any appended INF files) for a <b>LayoutFile </b>key. If the function finds a key, it will append the file specified by that key (usually LAYOUT.INF). When multiple INF files have been combined, <b>SetupOpenAppendInfFile </b>starts with the last appended INF file when it searches for a <b>Version </b>section. </p>
<p>
The following example appends the <i>szSecondInfFileName </i>file to the open file, <i>szInfFileName</i>.</p>
<pre><code>test = SetupOpenAppendInfFile (
      szSecondInfFileName,    //name of the inf file to append 
                              //to the open inf file, if NULL, 
                              //the fn searches for the LayoutInf
                              //key in the version section, and 
                              //appends the file specified there.
      MyInf,                  //handle of the open inf file
      &amp;ErrorLine               //pointer to an unsigned integer that
                              //receives error information
);
 </code></pre>
<p>
In the example, <i>szSecondInfFileName</i> is the name of the file to append to the open INF file. <i>MyInf </i>is the handle to the open INF file returned by the previous call to the <b>SetupOpenInfFile </b>function. The parameter <i>ErrorLine </i> recieves any error information generated by the <b>SetupOpenAppendInfFile </b>function.</p>
<p>&nbsp;</p></body>
</HTML>
