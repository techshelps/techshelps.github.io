<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Operators for Scalars</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_idxs_operators_for_scalars"></a>Operators for Scalars</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> 
<dl>
<dt>
DBOP_scalar_parameter</dt>
<dd>
Scalar parameter, named by a string. The name must be unique within all parameters for the command, including the parameters of SQL commands in textual nodes in the same command tree. No inputs, scalar output.</dd>
<dt>
DBOP_scalar_function</dt>
<dd>
A scalar function identified by name, GUID, etc. similar to a column-name. The number of arguments (inputs) depends on the function. Scalar output.</dd>
<dt>
DBOP_plus, DBOP_minus, DBOP_times, DBOP_over, DBOP_div, DBOP_modulo, DBOP_power</dt>
<dd>
Standard arithmetic. "div" always returns an integer result, such that "(a div b) times b plus a modulo b==a" for all non-zero values for b. Two scalar inputs, scalar result.</dd>
<dt>
DBOP_like, DBOP_sounds_like</dt>
<dd>
Regular expression matching. Two string inputs. For DBOP_like, the operator node includes a GUID to indicate the language or system whose regular expression syntax is meant. Fixed GUIDs are assigned for  SQL, DOS, OFS, and MAPI. Boolean result. The DBOP_like node uses the DBLIKE structure to hold the GUID and a weight.
<pre><code>typedef struct  tagDBLIKE{
    LONG lWeight;        // weight of the node
    GUID guidDialect;    // dialect's guid
    }    DBLIKE;
 </code></pre>
</dd>
<dt>
DBOP_like_any, DBOP_like_all</dt>
<dd>
Regular expression matching. Take a scalar first input and a table-valued second input and produce a Boolean valued output.</dd>
<dt>
DBOP_is_INVALID, DBOP_is_TRUE, DBOP_is_FALSE</dt>
<dd>
SQL's tests on predicates. One scalar input, Boolean result.</dd>
<dt>
DBOP_overlaps, DBOP_case_condition, DBOP_case_value, DBOP_nullif, DBOP_cast, DBOP_coalesce, DBOP_position, DBOP_extract, DBOP_char_length, DBOP_octet_length, DBOP_bit_length, DBOP_substring, DBOP_upper, DBOP_lower, DBOP_trim, DBOP_translate, DBOP_convert, DBOP_string_concat, DBOP_current_date, DBOP_current_time, DBOP_current_timestamp</dt>
</dl>
<p>&nbsp;</p></body>
</HTML>
