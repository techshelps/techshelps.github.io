<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Text canonicalization</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_idxs_text_canonicalization"></a>Text canonicalization</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Generally the text output from a call to GetText should exactly match the actual text of the document, but in order to achieve maximum interoperability some canonicalization of common features is desirable. These features include paragraph breaks, line breaks, hyphens and spaces.</p>
<p>
The four flags controlling canonicalization of the output text are defined as follows:
<dl>
<dt>
IFILTER_INIT_CANON_PARAGRAPHS</dt>
<dd>
Paragraph breaks should be marked with the Unicode PARAGRAPH SEPARATOR (0x2029).</dd>
<dt>
IFILTER_INIT_HARD_LINE_BREAKS</dt>
<dd>
Soft line breaks (such as end of line in Microsoft® Word) should be replaced by hard line breaks, LINE SEPARATOR (0x2028). Existing hard line breaks may be doubled. Any of carriage return (0x000D), line feed (0x000A), or the carriage return and line feed combination should be considered a hard line break. The intent is to enable pattern-expression matchers that match against the observed line breaks.</dd>
<dt>
IFILTER_INIT_CANON_HYPHENS</dt>
<dd>
Various word processors have forms of hyphens that are not represented in the host character set, such as optional hyphens (appearing only at end of line) and non-breaking hyphens. This flag indicates that optional hyphens are to be nulled out, and non-breaking hyphens are to be converted to normal, plain hyphens (0x2010), or HYPHEN-MINUSES (0x002D).</dd>
<dt>
IFILTER_INIT_CANON_SPACES</dt>
<dd>
As the previous flag canonicalizes hyphens, this one canonicalizes spaces. All special space characters, such as non-breaking spaces, etc., are to be converted to the standard SPACE character (0x0020).
</dd>
</dl>
<p>
IFilter servers are also allowed to embed null characters in the text, which are typically ignored by clients. Unicode character 0x0000 are completely ignored, and 0x0001 is treated as a word break.</p>
<p>
The intent is to provide implementors of IFilter an efficient means to 'remove' embedded formatting from text without modifying positional information.  A scrap of HTML such as:</p>
<pre><code>&lt;p&gt;This is a paragraph with &lt;em&gt;emphasized&lt;/em&gt; text.&lt;/p&gt;
</code></pre>
<p>
could be filtered as:</p>
<pre><code>***This is a paragraph with ****emphasized**** text.****
</code></pre>
<p>
where the '*' represents Unicode 0x0000.</p>
<p>&nbsp;</p></body>
</HTML>
