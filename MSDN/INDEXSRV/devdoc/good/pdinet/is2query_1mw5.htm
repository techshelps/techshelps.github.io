<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CITextToFullTree</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_idxs_citexttofulltree"></a>CITextToFullTree</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
CITextToFullTree creates a complete DBCOMMANDTREE from a query string, output columns, sort columns, and a set of custom properties.</p>
<pre><code><b>STDAPI CITextToFullTree(
</b>  <b>WCHAR const *</b> <i>pwszRestriction</i><b>,</b>
  <b>WCHAR const *</b> <i>pwszColumns</i><b>,</b>
  <b>WCHAR const *</b> <i>pwszSortColumns</i><b>,</b>
  <b>WCHAR const *</b> <i>pwszReserved</i><b>,</b>
  <b>DBCOMMANDTREE * *</b> <i>ppTree</i><b>,</b>
  <b>ULONG</b> <i>cProperties</i><b>,</b>
  <b>CIPROPERTYDEF *</b> <i>pProperties</i><b>,</b>
  <b>LCID</b> <i>LocaleID</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pwszRestriction</i></dt>
<dd>
[in] Points to a null-terminated string that specifies an Index Server query. The syntax for queries is described in the Index Server documentation.</dd>
<dt>
<i>pwszColumns</i></dt>
<dd>
[in] Points to a null-terminated string that specifies a comma separated list of column names that are returned in the query results. These columns can be bound by OLE DB accessors.</dd>
<dt>
<i>pwszSortColumns</i></dt>
<dd>
[in] Points to a null-terminated string that contains a comma separated list of column names that specify the sort order for the query results. A sort direction can be appended to each column name. Use [d] for descending, and [a] for ascending. If no sort order is specified, ascending is the default. Can be 0 for no sort order.</dd>
<dt>
<i>pwszReserved</i></dt>
<dd>
[in] Must be 0.</dd>
<dt>
<i>ppTree</i></dt>
<dd>
[out] Address of output variable that receives the command tree built by the function.</dd>
<dt>
<i>cProperties</i></dt>
<dd>
[in] Count of properties in the pProperties array, or 0 if <i>pProperties</i> is 0.</dd>
<dt>
<i>pProperties</i></dt>
<dd>
[in] Address of an array of properties that can be referred to by friendly name in <i>pwszRestriction</i>. Column names in the <i>wcsFriendlyName</i> field of each CIPROPERTYDEF must be specified in uppercase. Can be 0 if no properties are being defined and <i>cProperties</i> is 0. Index Server's built-in properties do not need to be defined to be used. It is an error to define a property with the same friendly name as a built-in property.</dd>
<dt>
<i>LocaleID</i></dt>
<dd>
[in] The locale ID used for nodes in <i>ppTree</i> that contain an LCID field, including content restrictions, sort order, and others.
</dd>
</dl>
<h4>Return Values</h4>
<p>
An HRESULT, S_OK if successful.</p>
<h4>Remarks</h4>
<p>
The query tree allocated by CITextToSelectTree must be freed either with ICommandTree::FreeCommandTree or passed to ICommandTree::SetCommandTree with the fCopy parameter set to FALSE.</p>
<h4>Example</h4>
<p>
This sample code creates a command tree. The list of properties returned by the query include myproperty, path, and size. The sort order is first by rank descending, then by path ascending. The default system locale is used to create the command tree.</p>
<pre><code>CIPROPERTYDEF aProperties[1];
const GUID guidOffice = { 0xd5cdd505, 0x2e9c, 0x101b,
                          0x93, 0x97, 0x08, 0x00, 0x2b, 0x2c, 0xf9, 0xae }
                            };
aProperties[0].wcsFriendlyName = L"ISSUENUMBER";
aProperties[0].dbType = DBTYPE_R8;
aProperties[0].dbCol.uGuid.guid = guidOffice;
aProperties[0].dbCol.eKind = DBKIND_GUID_NAME;
aProperties[0].dbCol.pwszName.ulPropid = L"ISSUENUMBER";
DBCOMMANDTREE * pTree;
HRESULT hr = CiTextToFullTree( L"microsoft and @issuenumber=2",
                               L"size,path,issuenumber",
                               L"rank[d],path[a]",
                               &amp;pTree,
                               1,
                               aProperties,
                               GetSystemDefaultLCID() );
if ( SUCCEEDED( hr ) )
{
    hr = pICommand-&gt;SetCommandTree( pTree,
                                    DBCOMMANDREUSE_NONE,
                                    FALSE );
    if ( SUCCEEDED( hr ) )
    {
        // ...
        // execute a query
        // ...
    }
}
 </code></pre>
<p>
This is the DBCOMMANDTREE <i>pTree</i> created by the example code:</p>
<p>
<img src="images/dbcmdtr2.gif" border=0></p>
<p>
<b>DBCOMMANDTREE <i>pTree</i> Created by Example Code</b></p>
<p>&nbsp;</p></body>
</HTML>
