<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Command Line Parameters</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_idxs_command_line_parameters"></a>Command Line Parameters</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%>Parameter</th>
<th align=left width=75%>Meaning</th>
</tr>
<tr valign=top>
<td width=25%>/i  &lt;filename&gt;</td>
<td width=75%>The input file or directory to be filtered. The filename can contain the wildcard characters * and ?. </td>
</tr>
<tr valign=top>
<td width=25%>/l</td>
<td width=75%>Log messages are directed to a file, instead of the screen. Log messages describe the individual tests performed and the pass/fail result of the test. The log filename is the same as the input filename with a .log extension.</td>
</tr>
<tr valign=top>
<td width=25%>/d</td>
<td width=75%>Dump messages are directed to a file instead of the screen. Dump messages describe the contents of the chunks. The chunk structure is dumped when the verbosity level is 3. The dump filename is the same as the input filename with a .dmp extension.</td>
</tr>
<tr valign=top>
<td width=25%>/-l</td>
<td width=75%>Disable logging. This flag overrides /l</td>
</tr>
<tr valign=top>
<td width=25%>/-d</td>
<td width=75%>Disable dumping. This flag overrides /d</td>
</tr>
<tr valign=top>
<td width=25%>/v &lt;integer&gt;</td>
<td width=75%>The verbosity level. <p>
The test logs only messages concerning specific IFilter failures. The test dumps the chunk contents.</p>
<p>
The test logs warning messages.</p>
<p>
The test logs messages concerning tests which passed.</p>
<p>
The test logs informational messages. In addition, the test dumps the structure of the chunks.</p>
</td>
</tr>
<tr valign=top>
<td width=25%>/t &lt;integer&gt;</td>
<td width=75%>The number of threads to launch. One by default.</td>
</tr>
<tr valign=top>
<td width=25%>/r [&lt;integer&gt;]</td>
<td width=75%>Recursively filter subdirectories. The optional integer parameter specifies the depth to which to recurse. If no integer is specified, or if the integer is 0, full recursion is assumed. By default, the recursion depth is 1.</td>
</tr>
<tr valign=top>
<td width=25%>/c &lt;integer&gt;</td>
<td width=75%>The number of times to loop. If the integer is 0, the test loops infinitely. By default, the test loops only once.</td>
</tr>
</table><br>
<p>
<b>Note</b>  You must include a space between the command line switch and the value.</p>
<p>
You can invoke the IFilter Test Suite from the command line as follows:</p>
<p class=indent1>
ifilttst /i test.htm /l /d /v 1</p>
<p>
The above command line tells the program to filter the file "test.htm", redirect the log messages to "test.htm.log", redirect the dump messages to "test.htm.dmp" and to set the verbosity to 1. </p>
<p>
For the above command to work, three files must be located in the current working directory: ifilttst.exe, ifilttst.ini and test.htm. The significance of ifilttst.ini is described in the next section. </p>
<p>&nbsp;</p></body>
</HTML>
