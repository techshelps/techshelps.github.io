<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the IFilter Interface</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_idxs_using_the_ifilter_interface"></a>Using the IFilter Interface</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The IFilter interface is used to extract text from objects for placement in the Microsoft® Index Server content index.</p>
<p>
The primary purpose of the IFilter interface is to extract text, without formatting, from documents. IFilter is the foundation upon which higher level operations such as document indexing or application-independent viewers can be built.</p>
<p>
Although clients of IFilter may use the interface in any way they see fit, it was designed to meet the specific needs of full text search engines, such as Index Server. An implementation of the IFilter interface scans objects for plain text and properties (attributes). The search engine must break the results of IFilter::GetText into words, normalize them and store the results in an index. It may use the locale identifier specified with a text chunk to perform proper language-specific word breaking and normalization.</p>
<p>&nbsp;</p></body>
</HTML>
