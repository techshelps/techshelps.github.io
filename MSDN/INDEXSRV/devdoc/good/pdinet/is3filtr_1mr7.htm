<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Embedded and Linked Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_idxs_embedded_and_linked_objects"></a>Embedded and Linked Objects</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An object must enumerate the chunks of text in its embeddings. These nested chunks appear to the original caller as chunks of the outer object. There is no operating system support provided for this operation. IFilter implementations are responsible for binding to the IFilter interface of embedded objects. If the current chunk is within an embedding, all GetText and GetValue calls should be passed directly to the embedding's IFilter and the return values from the embedding should be returned to the client. Other calls require some additional work. GetChunk, for example, may require renumbering chunk identifiers to make them unique.</p>
<p>
An object can optionally be asked to enumerate the chunks of text 'contained' in its linked objects. As with embedded objects, IFilter implementations are responsible for binding to the IFilter interface of linked objects, then renumbering the chunks of the linked objects so they appear to the original caller as chunks of the outer object. The same rules that apply to an embedding's chunks apply to a link's chunks. </p>
<p>
The original source of a chunk (embedding, link, or top-level object) is not exposed by IFilter.</p>
<p>&nbsp;</p></body>
</HTML>
