<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lists of Arguments</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_idxs_lists_of_arguments"></a>Lists of Arguments</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An empty list is denoted by the corresponding anchor node with no element nodes.
<dl>
<dt>
DBOP_column_list_anchor, DBOP_column_list_element</dt>
<dd>
These operators are used to define a list of column aliases (see DBOP_alias). Each element represents the name alias as a string value in the pwszValue field of the command node. Elements take no inputs.</dd>
<dt>
DBOP_command_list_anchor, DBOP_command_list_element</dt>
<dd>
These operators are used to define a sequence of OLE DB commands. Each element takes one command tree input representing either a DML or DDL command.</dd>
<dt>
DBOP_from_list_anchor, DBOP_from_list_element</dt>
<dd>
The list of tables in a SQL "FROM" clause. Each element requires a table-valued expression as input, which can be represented by a table_name  or alias to serve as SQL "correlation name."</dd>
<dt>
DBOP_project_list_anchor, DBOP_project_list_element</dt>
<dd>
The anchor and an element in a list of columns for a projection. The anchor has an element as its first child, but no other information. Each element assigns a column name, which is stored in the string portion of the tree node, to a scalar expression, which is given as the element node's input tree. In addition, outall_name and qualifier_name must be in the project_list of a project node (as opposed to a project_list of an aggregate node). If a project list includes the member outall_name and a column_name that is a member of the columns implied by outall_name, then that column will appear twice in the result.</dd>
<dt>
DBOP_row_list_anchor, DBOP_row_list_element</dt>
<dd>
The anchor and element in a list of rows for constructing a table. Each element has one DBOP_row input. At least one row_list_element must be in each list.</dd>
<dt>
DBOP_scalar_list_anchor, DBOP_scalar_list_element</dt>
<dd>
The anchor and element in a list of scalar constants for constructing a row. Each element takes one DBOP_scalar_constant as input. At least one scalar list element must be in each list.</dd>
<dt>
DBOP_set_list_anchor, DBOP_set_list_element</dt>
<dd>
The anchor and element in a list of columns for updating. Each element has two inputs, one a column name and one an expression of the same type as the column. At least one set_list_element must be in each list.</dd>
<dt>
DBOP_sort_list_anchor, DBOP_sort_list_element</dt>
<dd>
The anchor and an element in a list of columns for sorting. This list is different from a projection list in that no new column name is assigned but a ascending/descending flag and an optional locale id are indicated. Each element includes a scalar input expression.
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
