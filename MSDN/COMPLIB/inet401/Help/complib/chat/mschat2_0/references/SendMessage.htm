<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SendMessage Method</TITLE>
<META NAME=MS-HKWD CONTENT="SendMessage Method">
<META NAME="Keywords" CONTENT="Component Library">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="SendMessage"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="SendMessage Method"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../../../art/headbare.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="SendMessage Method"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="../VB_ref.htm#ch_mschatpr_vb">Topic Contents</A>
</PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="SendInvitation_1.htm">SendInvitation Method</A>
<IMG SRC="../../../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="chancoll.htm">Channels Collection Object</A>
</PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>SendMessage Method<BR CLEAR=ALL>
<HR></H1>
<P>Sends text or data messages to the channel or members of the channel.

<P class=ref>Syntax
<BLOCKQUOTE>
<PRE><I>object</I><B>.SendMessage</B> <I>MessageType</I><B>,</B> <I>Message</I>[<B>,</B> <I>RecipientNicknames</I>][<B>,</B> <I>DataMessageTag</I>]<BR>
</PRE>
</BLOCKQUOTE>

<P class=ref>Parameters
<BLOCKQUOTE>
<TABLE WIDTH=87%>
<TR><TD><I>object</I></TD><TD>Required. An object expression that evaluates to a <A HREF="chanobj.htm#Channel">Channel</A> object.</TD></TR>
<TR><TD><I>MessageType</I></TD><TD>Required. A long integer that is a combination of some of the <A HREF="enumMessageType.htm#enumMessageType">enumMessageType</A> enumeration values. The valid <I>MessageType</I> values are:
<TABLE BORDER=0>
<TR><TD><A HREF="enumMessageType.htm#msgtNormal">msgtNormal</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtNotice">msgtNotice</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtData">msgtData</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtDataRequest">msgtDataRequest</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtDataReply">msgtDataReply</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtWhisper">msgtWhisper</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtData">msgtData</A> + <A HREF="enumMessageType.htm#msgtDataRaw">msgtDataRaw</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtDataRequest">msgtDataRequest</A> + <A HREF="enumMessageType.htm#msgtDataRaw">msgtDataRaw</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtAction">msgtAction</A> + <A HREF="enumMessageType.htm#msgtNormal">msgtNormal</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtSound">msgtSound</A> + <A HREF="enumMessageType.htm#msgtNormal">msgtNormal</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtCTCP">msgtCTCP</A> + <A HREF="enumMessageType.htm#msgtNormal">msgtNormal</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtAction">msgtAction</A> + <A HREF="enumMessageType.htm#msgtNotice">msgtNotice</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtSound">msgtSound</A> + <A HREF="enumMessageType.htm#msgtNotice">msgtNotice</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtCTCP">msgtCTCP</A> + <A HREF="enumMessageType.htm#msgtNotice">msgtNotice</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtAction">msgtAction</A> + <A HREF="enumMessageType.htm#msgtWhisper">msgtWhisper</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtSound">msgtSound</A> + <A HREF="enumMessageType.htm#msgtWhisper">msgtWhisper</A></TD></TR>
<TR><TD><A HREF="enumMessageType.htm#msgtCTCP">msgtCTCP</A> + <A HREF="enumMessageType.htm#msgtWhisper">msgtWhisper</A></TD></TABLE>
<P>The <A HREF="enumMessageType.htm#msgtNotice">msgtNotice</A>, <A HREF="enumMessageType.htm#msgtData">msgtData</A>, <A HREF="enumMessageType.htm#msgtDataRequest">msgtDataRequest</A>, <A HREF="enumMessageType.htm#msgtDataReply">msgtDataReply</A>, and <A HREF="enumMessageType.htm#msgtWhisper">msgtWhisper</A> values are mutually exclusive.
<P>The <A HREF="enumMessageType.htm#msgtData">msgtData</A>, <A HREF="enumMessageType.htm#msgtDataRequest">msgtDataRequest</A>, <A HREF="enumMessageType.htm#msgtDataReply">msgtDataReply</A>, <A HREF="enumMessageType.htm#msgtAction">msgtAction</A>, <A HREF="enumMessageType.htm#msgtSound">msgtSound</A>, and <A HREF="enumMessageType.htm#msgtCTCP">msgtCTCP</A> values are mutually exclusive.
<P>The <A HREF="enumMessageType.htm#msgtDataRaw">msgtDataRaw</A>, <A HREF="enumMessageType.htm#msgtAction">msgtAction</A>, <A HREF="enumMessageType.htm#msgtSound">msgtSound</A>, and <A HREF="enumMessageType.htm#msgtCTCP">msgtCTCP</A> values are mutually exclusive.
</TD></TR>
<TR><TD><I>Message</I></TD><TD>Required. A variant containing the actual message to send. It can be a string, a number, an array of strings, an array of numbers, or an array of variants that can be strings and numbers. The variant types allowed for those numbers are:
<TABLE BORDER=0>
<TR><TD>VT_UI1</TD></TR>
<TR><TD>VT_I2</TD></TR>
<TR><TD>VT_I4</TD></TR>
<TR><TD>VT_R4</TD></TR>
<TR><TD>VT_R8</TD></TR>
<TR><TD>VT_BOOL</TD></TR>
<TR><TD>VT_ERROR</TD></TR>
<TR><TD>VT_CY</TD></TR>
<TR><TD>VT_DATE</TD></TABLE>
<P>When sending data and the <A HREF="enumMessageType.htm#msgtDataRaw">msgtDataRaw</A> flag is <I>not</I> set, the control packages the <I>Message</I> variant into an array of bytes. An internal header is used to notify the recipient(s) that the message originates from an <A HREF="mschatpr.htm#MsChatPr">MsChatPr</A> control. 
<P>When the <A HREF="enumMessageType.htm#msgtDataRaw">msgtDataRaw</A> flag is <I>also</I> set, the <I>Message</I> variant can only be a postprocessed string, a byte, an array of bytes, or an array of variants that are bytes.
<P>A postprocessed string is a string that was modified using the regular conversion scheme, as shown in the following table.
<TABLE BORDER=0>
<TR><TD><B>Character&nbsp;&nbsp;&nbsp; </B></TD>
<TD><B>Becomes string
 </B></TD>
</TR>
<TR><TD>'\0'</TD>
<TD>"\0"</TD>
</TR>
<TR><TD>'\'</TD>
<TD>"\\"</TD>
</TR>
<TR><TD>'\n'</TD>
<TD>"\n"</TD>
</TR>
<TR><TD>'\r'</TD>
<TD>"\r"</TD>
</TR>
<TR><TD>'\t'</TD>
<TD>"\t"</TD>
</TR>
<TR><TD>' '</TD>
<TD>"\b"</TD>
</TR>
<TR><TD>','</TD>
<TD>"\c"</TD>
</TR>
</TABLE>
<P>When sending raw data, the control simply converts the <I>Message</I> parameter into a 
postprocessed string without using an internal header. This way all clients can handle the data message.</TD></TR>
<TR><TD><I>RecipientNicknames</I></TD><TD>Optional. A variant. Can be missing, an empty variant, or an empty string to send the message to the channel. Otherwise it can be a string, an array of strings, or an array of variants that are strings to send the message to designated channel members.
<P>On IRC servers, there is no method to send a message to specific channel members, so the <I>RecipientNicknames</I> parameter must always be empty or missing.
<P>On IRCX servers, the <I>RecipientNicknames</I> parameter can always specify one or more recipients, or it can be empty. 
<P>When <A HREF="enumMessageType.htm#msgtWhisper">msgtWhisper</A> is used, the parameter must specify one or more recipients. The recipient list is exposed to the recipients only when using the <B>msgtWhisper</B> type.</TD></TR>
<TR><TD><I>DataMessageTag</I></TD><TD>Optional. A variant. For IRCX servers only. This parameter is used only when sending data (that is, the <A HREF="enumMessageType.htm#msgtData">msgtData</A>, <A HREF="enumMessageType.htm#msgtDataRequest">msgtDataRequest</A>, or <A HREF="enumMessageType.htm#msgtDataReply">msgtDataReply</A> flag is set). If sending data, this parameter must be a non-empty string. In all other cases, this parameter must be empty or missing.</TD></TR>
</TABLE>
</BLOCKQUOTE>

<P class=ref>Examples
<BLOCKQUOTE>
<P>1. Send a regular string to the channel:
<PRE>MsChatPr1.Channels(4).SendMessage msgtNormal, "Hi there!"
</PRE>
<P>2. Send a notice to the channel:
<PRE>chan3.SendMessage msgtNotice, "Bye now!"
</PRE>
<P>3. Send an action to the channel (CTCP action):
<PRE>chanobj.SendMessage msgtAction, "is eating couscous...."
</PRE>
<P>4. Send a sound to the channel (CTCP sound):
<PRE>MsChatPr1.Channels.Item(2).SendMessage msgtSound, "couscous.wav Isn't that cool?"
</PRE>
<P>5. Send a CTCP message to the channel:
<PRE>MsChatPr1.Channels(3).SendMessage msgtCTCP, "FINGER"
</PRE>
<P>6. Send text to a channel member:
<PRE>chanobj.SendMessage msgtNormal, "I'm an alien spy, and U?", "SharonL"
</PRE>
<P>7. Send a notice to several channel members:
<PRE>Dim strRecipients(1 To 3) As String
strRecipients(1) = "ColeenS"
strRecipients(2) = "DerrickL"
strRecipients(3) = "EuniceM"
chanobj.SendMessage msgtNotice, "I'm a spy, too...", strRecipients
'or
Dim vRecipients(1 To 3) As Variant
vRecipients(1) = "ColeenS"
vRecipients(2) = "DerrickL"
vRecipients(3) = "EuniceM"
chanobj.SendMessage msgtNotice, "I'm a spy, too...", vRecipients
</PRE>
<P>8. Send an action to several channel members:
<PRE>Dim strRecipients(1 To 3) As String
strRecipients(1) = "ColeenS"
strRecipients(2) = "DerrickL"
strRecipients(3) = "EuniceM"
chanobj.SendMessage msgtAction, "is eating macaroni and cheese....", strRecipients
'or
Dim vRecipients(1 To 3) As Variant
vRecipients(1) = "ColeenS"
vRecipients(2) = "DerrickL"
vRecipients(3) = "EuniceM"
chanobj.SendMessage msgtAction, "is eating macaroni and cheese....", vRecipients
</PRE>
<P>9. Whisper text to a channel member:
<PRE>chanobj.SendMessage msgtWhisper, "I'm an alien spy, and U?", "SharonL"
</PRE>
<P>10. Whisper text to channel members:
<PRE>Dim strRecipients(1 To 3) As String
strRecipients(1) = "SteveL"
strRecipients(2) = "WadeR"
strRecipients(3) = "Eldon"
chanobj.SendMessage msgtWhisper, "I'm a spy, too...", strRecipients
'or
Dim vRecipients(1 To 3) As Variant
vRecipients(1) = "Charlotte"
vRecipients(2) = "Zorg"
vRecipients(3) = "Arthur"
chanobj.SendMessage msgtWhisper, "I'm a cook, too...", vRecipients
</PRE>
<P>11. Send a string as data to the channel:
<PRE>chanobj.SendMessage msgtData, "And a painter as well.", , "_FOO_"
</PRE>
<P>12. Send a number to channel members:
<PRE>Dim vRecipients(1 To 3) As Variant
vRecipients(1) = "Charlotte"
vRecipients(2) = "Zorg"
vRecipients(3) = "Arthur"
chanobj.SendMessage msgtData, 1156, vRecipients, "X"
</PRE>
<P>13. Send an array of numbers to the channel:
<PRE>Dim iValues(1 To 4) As Integer
iValues(1) = 10
iValues(2) = -22
iValues(3) = 123
iValues(4) = 0
chanobj.SendMessage msgtData, iValues, , "COORD"
'or 
Dim vValues(1 To 4) As Variant
vValues(1) = 10
vValues(2) = -22
vValues(3) = 123
vValues(4) = 0
chanobj.SendMessage msgtData, vValues, , "COORD"
</PRE>
<P>14. Send an array of strings to a channel member:
<PRE>Dim strValues(1 To 4) As String
strValues(1) = "Blue"
strValues(2) = "Green"
strValues(3) = "Red"
strValues(4) = "White"
chanobj.SendMessage msgtData, strValues, "Arthur", "COLORS"
'or 
Dim vValues(1 To 4) As Variant
vValues(1) = "Blue"
vValues(2) = "Green"
vValues(3) = "Red"
vValues(4) = "White"
chanobj.SendMessage msgtData, vValues, "Arthur", "COLORS"
</PRE>
<P>15. Send an array of variants to the channel:
<PRE>Dim vValues(5 To 10) As Variant
vVariant(5) = Now
vVariant(6) = "Your turn to play...."
vVariant(7) = -10
vVariant(8) = 5
vVariant(9) = -12.689
vVariant(10) = 9876582146
chanobj.SendMessage msgtData, vValues, , "TheHugeOne"
</PRE>
<P>16. Send raw data to the channel:
<PRE>'A postprocessed string
chanobj.SendMessage msgtData+msgtDataRaw,_
      "dhe\rotk\\nsk\0k45v\0zxa\\v", , "ProcessedString"
'One byte
Dim byt As Byte
byt = 56
chanobj.SendMessage msgtData+msgtDataRaw, byt, , "OneByte"
'An array of bytes
Dim rgBytes(1 To 3) As Byte
rgBytes(1) = 15
rgBytes(2) = 98
rgBytes(3) = 2
chanobj.SendMessage msgtData+msgtDataRaw,_
    rgBytes, , "ArrayOfBytes"
'An array of Variants that are bytes
Dim vByt(1 To 3) As Variant
vByt(1) = CByte(15)
vByt(2) = CByte(98)
vByt(3) = CByte(2)
chanobj.SendMessage msgtData+msgtDataRaw,_
      vByt, , "ArrayOfVariants"
</PRE>
</BLOCKQUOTE>

<P class=ref>See Also
<BLOCKQUOTE>
<P><A HREF="enumMessageType.htm#enumMessageType">enumMessageType</A>, <A HREF="OnMessage.htm#OnMessage">OnMessage</A> 
</BLOCKQUOTE><P>
<!-- * * * end of Channel object methods* * * * * --><!-- * * *start of channels collection object * * * * * -->
