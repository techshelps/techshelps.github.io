<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Concept: Computers Receive Broadcasts</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_concept_computers_receive_broadcasts"></a>Concept: Computers Receive Broadcasts</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Broadcast Architecture relies on <a href="glos_6k55.htm#_bpc_internet_protocol_gly"><i>Internet Protocol</i></a> (IP) <a href="glos_4xo9.htm#_bpc_multicast_gly"><i>multicast</i></a> and other standard technologies to let a personal computer receive unidirectional digital and analog transmissions over <i>any</i> kind of television or computer network. Broadcast Architecture is transport independent; in other words, Broadcast Architecture data can travel over any standard data-transfer system.</p>
<p>
Following a standard client/server computing model, broadcast-enhanced computers are equipped to act as "clients." In other words, they serve as data tuners that receive and process streams transmitted to them by broadcast "servers." </p>
<p>
The following diagram illustrates client computers receiving broadcast data over different kinds of television network. </p>
<p>
<img src="images/intro1.gif" border=0></p>
<p>
A broadcast client can easily be equipped with appropriate receiver cards and supporting software to receive broadcasts in virtually any format from almost any source. Whether the transmission travels by satellite, cable, conventional terrestrial antenna, or over a computer network, whether the signal is digital or analog, whether it is a video, audio, or binary data stream, broadcast clients are designed to accommodate it. Clients accommodate all these types of data in a standard way using the Microsoft® Windows® 98 operating system. In fact, the same broadcast client is designed to receive almost any combination of sources and data types. </p>
<p>
Almost all the technology and infrastructure needed to create broadcast clients is currently in place. In particular, broadcast clients rely on broadcast networks and a phone-line <a href="glos_9egp.htm#_bpc_back_channel_gly"><i>back channel</i></a> that are inexpensively and reliably available in virtually every home today.</p>
<p>
Broadcast clients provide a particularly flexible and cost-effective path to television of the future. Not only do they have a lot to offer immediately, but also they support low-cost incremental steps to higher television resolutions, growing back-channel bandwidth, increasing interactivity, and new multimedia forms of television. For viewers and content producers alike, broadcast clients provide painless interim solutions at every stage of the path. Rather than becoming obsolete when new technology becomes available, they are designed to incorporate technological advances smoothly. </p>
<p>
Broadcast client software has been designed so that some simple, impressive combinations of television and information content can immediately be delivered in the form of World Wide Web pages. Broadcasters can thus take advantage of standard Web design tools, scripts built in the Microsoft® Visual Basic® development system, and skills they already have to create multimedia television rapidly and easily. In the cases where Web functionality is insufficient, programmers can readily take advantage of the power of the operating-system software provided for the broadcast client to write special-purpose applications.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Satellite support is not enabled in version 1 of Broadcast Architecture.</p>
<p>&nbsp;</p></body>
</HTML>
