<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Video Control</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_using_the_video_control"></a>Using the Video Control</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The Microsoft® ActiveX® control for video (the Video control) is a dual-interface ActiveX control. This functionality means you can use the control from a variety of programming environments, such as World Wide Web pages, applications built in the Microsoft® Visual Basic® development system, Java applets and applications, and C++ applications.</p>
<p>
For details on working with the Video control to display video streams, manage devices, and interact with the Video Access server, see:
<ul>
<li>
<a href="vidrf_1dta.htm">Adding the Video Control to an Application</a> </li>
<li>
<a href="vidrf_823p.htm">Setting an Input Device</a> </li>
<li>
<a href="vidrf_5j51.htm">Setting an Output Device</a> </li>
<li>
<a href="vidrf_8hm4.htm">Setting an Input Channel</a> </li>
<li>
<a href="vidrf_0ysy.htm">Suspending the Video Server</a> </li>
<li>
<a href="vidrf_7lcx.htm">Tuning to Receive VBI Data</a> </li>
<li>
<a href="vidrf_4vag.htm">Reinitializing the Filter Graph</a> </li>
<li>
<a href="vidrf_9ppv.htm">Handling Power Management Events</a> </li>
</ul>
<p>
For additional information on the tasks involved in using the Video control, see <a href="vidts_865r.htm">Displaying Video</a>. In addition, Broadcast Architecture material includes sample applications that demonstrate use of the Video control. To locate these samples, see <a href="using_8i2b.htm">Broadcast Architecture Sample Applications</a>.</p>
<p>
<b>Note</b>&nbsp;&nbsp;If you are displaying the Video control in a window that does not set have the WS_CLIPCHILDREN style set, the Video display may not refresh properly. </p>
<p>
This is of concern to developers programming in C++ using the Microsoft® Foundation Classes (MFC). By default, MFC windows do not set the WS_CLIPCHILDREN style. To cause the Video control to refresh properly in these applications you can either override <b>CWnd::PreCreateWindow</b> to set this style, or paint the correct color key during the call to <b>CWnd::OnEraseBkgnd</b>. The correct color key value can be obtained from <a href="vidrf_4eux.htm"><b>BPCVid.ColorKey</b></a>. </p>
<p>
To locate more information about the WS_CLIPCHILDREN window style and the <b>CWnd::PreCreateWindow </b>and <b>CWnd::OnEraseBkgnd</b> methods, see <a href="abou1_0fzo.htm">Further Information on Streaming Video Services for the Client</a>.</p>
<p>&nbsp;</p></body>
</HTML>
