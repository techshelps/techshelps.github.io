<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Ambiguous Triggers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_ambiguous_triggers"></a>Ambiguous Triggers</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The Broadcast Architecture supports a custom implementation of the <b>ITaskTrigger</b> interface of Internet Client that enables an application to create ambiguous task trigger objects. An ambiguous trigger is one where the date or time parameters, or both, are not known at the time of the trigger's creation. You can also use the Broadcast Architecture implementation of <b>ITaskTrigger</b> to create a trigger where the time and date are fully specified. </p>
<p>
You can use ambiguous triggers to represent a range of shows. For example, if a show appears every weeknight at 7 p.m<small>.</small>, you can create a date-ambiguous trigger that represents all episodes of the show. For information on how to do this, see <a href="show_9e0i.htm">Creating an Ambiguous Trigger</a>.</p>
<p>
Once an ambiguous trigger is created, it can be passed to either the <a href="tssr_24md.htm"><b>ITelevisionServices::MakeLocalBroadcastSchedule</b></a> or <a href="tssr_3zvp.htm"><b>ITelevisionServices::MakeRemoteBroadcastSchedule</b></a> method to create a <a href="show_02lv.htm">show reference</a> that represents multiple episodes. You can then schedule a <a href="glos_2hyx.htm#_bpc_show_reminder_gly"><i>show reminder</i></a> for each episode by calling the <a href="tssr_2o6c.htm"><b>IScheduledItems::Add</b></a> method and passing this multiepisode show reference. </p>
<p>
The Broadcast Architecture implementation of <b>ITaskTrigger</b> implements both the <b>ITaskTrigger::SetTrigger</b> and the <b>ITaskTrigger::GetTrigger </b>methods. These are functionally equivalent to the methods implemented by the Task Scheduler. They differ only in that they support ambiguous triggers. </p>
<p>
However, the Broadcast Architecture implementation does not support the <b>ITaskTrigger::GetTriggerString</b> method. Calling this method produces an error.</p>
<p>
To locate more information about <b>ITaskTrigger</b>, see <a href="abou1_66t0.htm">Further Information on Television Services for the Client</a>. </p>
<p>&nbsp;</p></body>
</HTML>
