<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Retrieving Announcement Attributes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_retrieving_announcement_attributes"></a>Retrieving Announcement Attributes</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
A receiving application, when spawned, may need to access any number of attributes from the original announcement. For example, when a stock ticker application is launched in response to announcement, it should display an appropriate title, depending on an attribute in the announcement (such as <b>a = market:NYSE</b>).</p>
<p>
When the application is spawned, however, the original announcement is no longer available. Fortunately, the Task Scheduler stores the full text of the announcement, including all session attributes, in the user data for the task. The Task Scheduler supplies the name of the task that launched the receiving application in the command line passed to the receiving application. (For more information, see <a href="ann_7ilh.htm">Receiver Application Command Line</a>.)</p>
<p>
The most convenient way to access the attributes in the task is to create a new broadcast announcement and fill it with the stored information from the task. Calling the <b>ITask::GetUserData</b><i> </i>method in the Task Scheduler interface, and passing the result to the <b>IBroadcastAnnouncement::Load</b> method, fills an empty broadcast announcement with data from the Task Scheduler. The resulting announcement appears as though it had just been received by Announcement Listener over an announcement channel.</p>
<p>
The application is now able to access the attributes using the same announcement interface that announcement filters use.</p>
<p>&nbsp;</p></body>
</HTML>
