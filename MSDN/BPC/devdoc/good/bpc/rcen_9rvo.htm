<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enhancements at the Head End</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_enhancements_at_the_head_end"></a>Enhancements at the Head End</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Interactive shows are broadcast by the <a href="glos_8zuh.htm#_bpc_content_provider_gly"><i>content provider</i></a>. Producers at the <a href="glos_6yrd.htm#_bpc_head_end_gly"><i>head end</i></a> design and develop the enhancement stream for a show. This stream scripts the enhancement events (such as downloading HTML pages, displaying a new page, and so on) to synchronize to specific times during the show.</p>
<p>
The head end broadcasts the television show, with its accompanying enhancement stream, to the broadcast client. The client handles the enhancement stream events and displays the show's enhancements.</p>
<p>
The architecture of the enhancement head end is not defined by Broadcast Architecture. As long as the head end broadcasts the enhancement stream events using the correct formats, clients can display the enhancements. Typically, the head-end architecture consists of stream authoring tools and an application that broadcasts the enhancement stream over a <a href="srvov_4rle.htm">Microsoft Multicast Router</a>.</p>
<p>
Because of this flexibility in head-end design, the production staff at the head end can choose an authoring environment that suits their procedures. For example, if their process is to write the enhancement stream directly in stream compiler syntax, the authoring tool might simply be a text editor. On the other hand, a content provider can develop custom tools to automate the stream authoring process. Similarly, those setting up the head end can create an application to broadcast the enhancement stream.</p>
<p>
The <i>Design Kit for the Microsoft</i>®<i> Broadcast Architecture </i>compact disc provides several objects that you can use to build custom enhancement authoring and broadcasting tools. These objects are described in the following topics:
<ul>
<li>
<a href="rcen_6ik3.htm">Stream Compiler Objects</a>, which describes objects you can use to build custom stream authoring tools.</li>
<li>
<a href="rcen_399w.htm">Enhancement Sender Object</a>, which describes the object used to transmit enhancement events and files using <a href="glos_6k55.htm#_bpc_internet_protocol_gly"><i>Internet Protocol</i></a> (IP). This transmission can occur across a broadcast medium such as a Microsoft® Multicast Router or a local area network (LAN).</li>
</ul>
<p>
For more information about the required formats for transmitting enhancement stream events, see <a href="rcen_3hdg.htm">Enhancement Announcement Format</a>, <a href="rcen_7rhv.htm">Enhancement Triggers</a>, and the File Transfer Service (FTS) documentation. To locate the FTS documentation, see <a href="abou1_1uk4.htm">Further Information on Data Services for the Client</a>.</p>
<p>&nbsp;</p></body>
</HTML>
