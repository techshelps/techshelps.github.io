<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing a Custom Loader</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_writing_a_custom_loader"></a>Writing a Custom Loader</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Broadcast Architecture provides a sample loader framework that you can use to quickly develop a custom loader. This sample loader, Load.cpp, implements a class, <b>CLoadApp</b>, that contains all of the functionality of a database loader. The sample demonstrates the use of the <a href="pgsrv_3bhv.htm">Guide data objects</a> to create a new show and schedule it. The Guide data objects provide a programmatic interface to the data in the Guide database, using which your application can easily create records, delete records, retrieve field values, and set field values. To locate this sample loader, see <a href="using_8i2b.htm">Broadcast Architecture Sample Applications</a>. </p>
<p>
To make your own loader based on the sample, all you need to do is modify the <b>CLoadApp::Handle</b> method in the sample to load your data into the Guide database using the Guide data objects.</p>
<p>
Even if you do not use the provided loader framework, it is recommended that you use the Guide data objects. These objects are fully tested and debugged and save you from having to reimplement their functionality. </p>
<p>
For further information on writing a custom loader, see <a href="load_1tf6.htm">Writing a Custom Guide Database Loader</a>.</p>
<p>&nbsp;</p></body>
</HTML>
