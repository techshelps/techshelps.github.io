<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITelevisionServices::LoadEnhancementsFromFile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_itelevisionservices_loadenhancementsfromfile"></a>ITelevisionServices::LoadEnhancementsFromFile</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>LoadEnhancementsFromFile </b>method loads the enhancements listed in a text file into the Guide database.</p>
<pre><code><b>HRESULT LoadEnhancementsFromFile(
  Workspace *</b><i>piDAOWorkspace</i><b>, </b>
<b>  BSTR </b><i>bstrEnhancementsFile</i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>piDAOWorkspace</i></dt>
<dd>
Pointer to a DAO workspace. This workspace can be either preexisting or newly created.</dd>
<dt>
<i>bstrEnhancementsFile</i></dt>
<dd>
Name of the comma- or tab-delimited text file that lists the enhancements. Because this file is parsed using ISAM, part of the Jet installation, it cannot deviate from the following format:
<pre><code></code></pre>

<table cellspacing=4 cols=6>
<tr valign=top>
<td width=9%><code>GUID</code></td>
<td width=11%><code>Title</code></td>
<td width=22%><code>Show Reference</code></td>
<td width=19%><code>Preload URL</code></td>
<td width=14%><code>Address</code></td>
<td width=25%><code>Expiration Date</code></td>
</tr>
</table><br>


<p>
where each column contains the following data: 

<dl>
<dt>
<i>GUID</i></dt>
<dd>
GUID for the enhancement. If your application specifies the <i>GUID </i>field as an empty string (""), <b>LoadEnhancementsFromFile</b> automatically generates a GUID for the enhancement. Your application should only specify an empty string if it has no need to further reference the enhancement being loaded.</dd>
<dt>
<i>Title</i></dt>
<dd>
Title of the enhancement. WebTV for Windows displays this value when an episode has more than one enhancement available. When a user clicks the enhancement icon in the TV banner at the top of the screen, WebTV for Windows displays a list of the enhancement titles, from which the user can select the enhancement to display. For example: <b>InterNight Interactive</b></dd>
<dt>
<i>Show Reference</i></dt>
<dd>
Show reference for the broadcast that the enhancement applies to. Your application can obtain a show reference by calling either the <a href="tssr_24md.htm"><b>ITelevisionServices::MakeLocalBroadcastSchedule</b></a> or <a href="tssr_3zvp.htm"><b>ITelevisionServices::MakeRemoteBroadcastSchedule</b></a> method. 
<p>
If the <i>Show Reference</i> field contains an episode title, the enhancement is treated as an episode enhancement and is set for only the episode or episodes specified. 

<p>
If <i>Show Reference</i> contains an empty episode title (""), the enhancement is treated as a channel enhancement. In this case, <b>LoadEnhancementsFromFile</b> searches the tuning space for the union of the station, network, and channel parameters specified in <i>Show Reference</i>. The method then sets an enhancement for all matching channel records. For example: 

<pre><code>"1997/7/29!26673/7175/9690!0:30!0!0!0!0!9690!9690!4096!7040!''!'MSNBC'!3!54!InterNight".
 </code></pre>

<p>
For further description of show reference syntax, see <a href="show_7h6c.htm">Show Reference Format</a>.
</dd>
<dt>
<i>Preload URL</i> </dt>
<dd>
URL of the HTML file that contains the starting enhancement page. If your application does not specify a complete path, such as C:\MyEnhance\, the URL is resolved relative to C:\Program Files\TV Viewer\Layouts. 
<p>
For example, if you specify <code>"TVShow\TVShow.htm" </code>for the <i>PreloadURL</i> parameter, the URL resolves to <code>"C:\Program Files\TV Viewer\Layouts\TVShow\TVShow.htm"</code>.
</dd>
<dt>
<i>Address</i></dt>
<dd>
String that specifies the address for the network interface card, the multicast address, and multicast port information used to connect to the enhancement stream. This string must have the following format: "<i>NIC_address</i><b>\t</b><i>multicast_address</i><b>\t</b><i>multicast_port</i>". For example: 
<pre><code>"125.125.125.125\t225.225.225.255\t10024"
 </code></pre>
</dd>
<dt>
<i>Expiration Date</i></dt>
<dd>
Date and time at which the enhancement expires. All enhancements should have an expiration date and time. This functionality enables <a href="pgsrv_5ew2.htm">Loadstub</a> to delete obsolete enhancement data from the Guide database.
</dd>
</dl>
</dd>
</dl>
<p>
To locate more information about the Jet ISAM, see <a href="abou1_66t0.htm">Further Information on Television Services for the Client</a>. </p>
<h4>Return Values</h4>
<p>
Returns an <b>HRESULT</b> indicating success or failure. If the method succeeds, it returns S_OK. Otherwise, it returns an error code. For specific error codes, see the Winerror.h and Dbdaoerr.h header files. For more information about Winerror.h and Dbdaoerr.h, see Further Information on Television Services for the Client.</p>
<h4>Remarks</h4>
<p>
In addition to requiring you to create an enhancement text file with the proper format, ISAM also requires you to include a schema file in the same directory as that text file. The schema file must be named Schema.ini and specify the name of the text file in its first line, enclosed in brackets ([ ]). </p>
<p>
For example, if your application should load E:\Windows\Attach.txt, you must create a file named Schema.ini in the E:\Windows directory, with <code>[Attach.txt] </code>as the first line in the Schema.ini.</p>
<p>
The following schema file is valid for comma-delimited files. Replace <i>Attachments.txt</i> with the name of your enhancement text file.</p>
<pre><code>----------Schema.ini-----------
[<i>Attachments.txt</i>]
Format=CSVDelimited
ColNameHeader=False
CharacterSet=ANSI
Col1=ID Text
Col2=Title Text
Col3="Show Reference" Text
Col4="Preload URL" Text
Col5=Address Text
Col6="Expiration Date" DateTime
 </code></pre>
<p>
The following schema file is valid for tab-delimited files. Replace <i>Attachments.txt</i> with the name of your enhancement text file.</p>
<pre><code>-------Schema.ini--------
[<i>Attachments.txt</i>]
Format=TabDelimited
ColNameHeader=False
CharacterSet=ANSI
Col1=ID Text
Col2=Title Text
Col3="Show Reference" Text
Col4="Preload URL" Text
Col5=Address Text
Col6="Expiration Date" DateTime
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in tssadmin.odl.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in tssadmin.dll.<br>
<b>&nbsp;&nbsp;Unicode: </b>Yes.</p>
<h4>See Also</h4>
<p>
<a href="tssr_5a5g.htm"><b>ITelevisionServices::DeleteEnhancementFromID</b></a>, <a href="tssr_70j7.htm"><b>ITelevisionServices::DeleteOldEnhancements</b></a>, <a href="tssr_3pis.htm"><b>ITelevisionServices::LoadEnhancement</b></a>, <a href="tssr_5ecz.htm"><b>ITelevisionServices::RemapEnhancements</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
