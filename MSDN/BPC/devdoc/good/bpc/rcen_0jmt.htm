<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EnhEvents.FindHandle</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_enhevents.findhandle"></a>EnhEvents.FindHandle</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>FindHandle</b> property returns a reference to the event that has the specified handle. This property is read-only. </p>
<h4>Syntax</h4>
<pre><code><b>Set </b><i>oEvent </i><b>= </b><i>object</i><b>.FindHandle ( </b><i>lHandle</i><b> ) </b>
<b> </b></code></pre>
<h4>Parts</h4>
<dl>
<dt>
<i>object</i></dt>
<dd>
Object expression that resolves to an <a href="rcen_8s4z.htm"><b>EnhEvents</b></a> object.</dd>
<dt>
<i>lHandle</i></dt>
<dd>
<b>Long</b> that contains the event handle. This value will be compared to each event's <a href="rcen_5dd1.htm"><b>EnhEvent.Handle</b></a> property until a match is found. If a match is not found, <b>FindHandle</b> returns an error</dd>
<dt>
<i>oEvent</i></dt>
<dd>
<b>EnhEvent</b> that receives the event specified by <i>lHandle</i>.
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in stream.idl.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in stream.dll.<br>
<b>&nbsp;&nbsp;Unicode: </b>Yes.</p>
<h4>See Also</h4>
<p>
<a href="rcen_4syt.htm"><b>EnhEvents.FindTime</b></a> </p>
<h4>Examples</h4>
<p>
The following example saves a handle to an event in the enhancement stream, and then uses <b>FindHandle</b> to recall that event.</p>
<pre><code>'Declare variables
Dim Ev As IEnhEvents
Dim e As IEnhEvent
Dim lHandle As Long
 
'create the collection
Set Ev = New EnhEvents
 
'add an event to the collection
Ev.Add 15, "EventA"
 
'save a handle to EventA, 
'(which is currently the last-added event)
lHandle = Ev.LastAdd.Handle
 
... 
 
'recall EventA from the collection using the previously-saved handle
Set e = Ev.FindHandle(lHandle)
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
