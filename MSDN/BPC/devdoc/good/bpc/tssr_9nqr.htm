<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About the Enhancement Loader Methods</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_about_the_enhancement_loader_methods"></a>About the Enhancement Loader Methods</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The TSS object library, Tssadmin.dll, provides methods that you can use to load <a href="glos_86m1.htm#_bpc_enhancement_gly"><i>enhancement</i></a> information into the <a href="glos_7ddl.htm#_bpc_guide_database_gly"><i>Guide database</i></a> and to manipulate that information. The enhancement loader methods are as follows:
<ul>
<li>
<a href="tssr_3pis.htm"><b>ITelevisionServices::LoadEnhancement</b></a> </li>
<li>
<a href="tssr_32w5.htm"><b>ITelevisionServices::LoadEnhancementsFromFile</b></a> </li>
<li>
<a href="tssr_5a5g.htm"><b>ITelevisionServices::DeleteEnhancementFromID</b></a> </li>
<li>
<a href="tssr_70j7.htm"><b>ITelevisionServices::DeleteOldEnhancements</b></a> </li>
<li>
<a href="tssr_5ecz.htm"><b>ITelevisionServices::RemapEnhancements</b></a></li>
</ul>
<p>
The <b>ITelevisionServices::LoadEnhancement </b>and <b>LoadEnhancementsFromFile</b> methods are used to load information about enhancements into the Guide database. This information includes, for example, the file name and location of the starting page of the enhancement. Storing this information in the database enables <a href="glos_4xo9.htm#_bpc_microsoft_webtv_for_windows_gly"><i>Microsoft WebTV for Windows</i></a> to query the database to locate the enhancement files associated with a particular show. </p>
<p>
The <b>ITelevisionServices::LoadEnhancement </b>and <b>LoadEnhancementsFromFile</b> methods only store information. They do not download the Web files that constitute an enhancement page. Enhancement files can be loaded into the user's computer in ways such as: 
<ul>
<li>
Through digital data transmission means such as <a href="glos_6k55.htm#_bpc_internet_channel_broadcasting_gly"><i>Internet channel broadcasting</i></a> or encoding in the <a href="glos_1a49.htm#_bpc_vertical_blanking_interval_gly"><i>vertical blanking interval</i></a> (VBI) </li>
<li>
User-initiated downloads such as from a Web page.</li>
<li>
As part of loading current <a href="glos_3ptl.htm#_bpc_program_guide_gly"><i>Program Guide</i></a> information into the Guide database </li>
</ul>
<p>
Once the enhancement pages are downloaded onto the user's computer, information about them needs to be loaded into the Guide database. Doing this enables Microsoft® WebTV® for Windows® to locate and display the enhancement pages. If enhancement files are loaded onto the user's computer during an update of the Guide database, the Loadstub component of Broadcast Architecture loads information about enhancement files into the database. Loadstub does this by calling <b>LoadEnhancementsFromFile</b>. For more information about working with Loadstub, see <a href="pgsrv_8nj9.htm">Updating the Guide Database</a>.</p>
<p>
If enhancement files are loaded onto the user's computer through information encoded in the VBI, the broadcaster must also transmit an announcement <a href="rcen_9oqb.htm">trigger</a> to load information about the enhancements into the Guide database. Otherwise, WebTV for Windows does not have the information that the show is interactive. The <a href="rcen_1jjm.htm">enhancement filter</a> on the <a href="glos_9egp.htm#_bpc_broadcast_client_gly"><i>broadcast client</i></a> receives this announcement and calls <b>LoadEnhancement</b> to load this information into the Guide database. For more information about announcements, see <a href="ann_3707.htm">Announcements Overview</a>.</p>
<p>
If your application loads enhancement files onto users' computers without using Loadstub or the enhancement filter, it must load information about the enhancements into the Guide database by calling either the <b>LoadEnhancementsFromFile</b> or the <b>LoadEnhancement</b> method.</p>
<p>
TSS also provides the method <b>ITelevisionServices::DeleteEnhancementFromID</b>, which enables components such as <a href="barch_33cd.htm#_bpc_announcement_listener">Announcement Listener</a> to delete enhancement data from the Guide database. Typically, your application does not need to call this method. Instead, enhancement information is automatically deleted from the Guide database after the information expires. Obsolete enhancement data is periodically removed from the Guide database by Loadstub. </p>
<p>
To enable such cleanup, you must set an expiration date and time for any enhancement data that you load. You specify the enhancement data's expiration date and time in the <i>dateExpire</i> parameter of <b>LoadEnhancement</b> or in the Expiration Date column of the text file read by <b>LoadEnhancementsFromFile</b>. </p>
<p>
In addition to Loadstub's periodic deletion of expired enhancement data, your application can explicitly remove expired enhancement data by calling the <b>ITelevisionServices::DeleteOldEnhancements</b> method. Note that because Loadstub automatically deletes obsolete enhancement data, your application typically will not call <b>DeleteOldEnhancements</b> explicitly.</p>
<p>
The <b>ITelevisionServices::RemapEnhancements</b> method maps enhancements to the shows or episodes they enhance. </p>
<p>
For more information about using the enhancement methods, see <a href="tssr_27ji.htm">Loading Enhancement Information</a>. For general information about enhancements, see <a href="rcen_450z.htm">Video Enhancements</a>.</p>
<p>&nbsp;</p></body>
</HTML>
