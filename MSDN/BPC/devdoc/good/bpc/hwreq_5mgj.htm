<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Receiver Card Requirements</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_receiver_card_requirements"></a>Receiver Card Requirements</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The receiver card's interface with the computer should:
<ul>
<li>
Provide a mechanism for moving data into the computer and for specifying the destination for that data in computer memory, preferably through bus mastering.</li>
<li>
Control the tuner and retrieve tuner information.</li>
<li>
Control decoding of video, audio, and other data.</li>
<li>
Control the different Viterbi or other decoding rates used by the digital broadcast network.</li>
<li>
Control what packet identifiers (PIDs) are received and what data is routed to the computer.</li>
<li>
Retrieve status information about errors and control error correction. </li>
<li>
Satisfy the requirements for receiving MSBDN packets, which can require additional hardware beyond that required for audio and video. For more information on receiving MSBDN packets, see the MSBDN Receiver section of the Broadcast Architecture Device-Driver Kit (DDK), part of the Windows 98 DDK.</li>
<li>
Support of at least five PIDs simultaneously. Support of eight is recommended.</li>
<li>
Perform one of the two following tasks:<ul>
<li>
Present an advancing 27 megahertz register, a register containing the last-received system clock reference (SCR) or other reference time stamp, and a register containing the value of<b> </b>the 27 megahertz register when the last SCR was received. </li>
<li>
Generate an interrupt immediately upon receipt of each SCR and have that SCR read through the PCI bus.</li>
</ul>
</li>
<li>
Perform PCI bus mastering with support for scatter/gather memory access and unaligned, odd-byte memory transfers. This requirement includes support for time-critical <a href="glos_4xo9.htm#_bpc_mpeg_gly"><i>MPEG</i></a> packets of 127 bytes and less.</li>
</ul>
<p>
The following illustration shows the receiver card's internal and external data flow. In this illustration, bps is bits per second, QPSK is Quadrature Phase Shift Keying (a method of encoding digital data in an analog signal), DEMOD is demodulator, DES is <a href="glos_8l89.htm#_bpc_data_encryption_standard_gly"><i>Data Encryption Standard</i></a>, and Mbps is megabits per second.</p>
<p>
<img src="images/bnrecrd.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
