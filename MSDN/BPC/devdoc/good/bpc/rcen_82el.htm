<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Events to an Enhancement Stream</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_bpc_adding_events_to_an_enhancement_stream"></a>Adding Events to an Enhancement Stream</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An enhancement stream comprises a set of events that occur during the show that is interactive. You create or extend a stream by adding events to it. These events can be represented either by lines of stream compiler syntax or by <a href="rcen_7ohg.htm"><b>EnhEvent </b>objects</a>. </p>
<p>
If you are writing a stream authoring tool, you can use the stream compiler objects to create the stream. Using these objects, the enhancement stream is saved to a text file in the stream compiler language. An alternative to using the stream compiler objects is to create and edit a text file containing lines of stream compiler languages. Because the stream compiler objects already implement much of the functionality required to create and save an enhancement stream, it is recommended that you use them to build your authoring tools.</p>
<p>
Using the stream compiler objects, you can add events to the enhancement stream by calling either the <a href="rcen_8a2c.htm"><b>EnhEvents.AddText</b></a> or <a href="rcen_87l0.htm"><b>EnhEvents.Add</b></a> method. Both methods create a new <a href="rcen_0g6s.htm"><b>EnhEvent</b></a><b> </b>object and add it to the stream, as represented by an <a href="rcen_8s4z.htm"><b>EnhEvents</b></a><b> </b>collection. </p>
<p>
The methods differ, however, in how they initialize the new <b>EnhEvent </b>object. <b>EnhEvents.AddText</b> initializes the event using the stream compiler syntax specified when <b>AddText</b> is called, whereas <b>EnhEvents.Add</b> initializes the event using a specified starting time and <a href="rcen_5u05.htm"><b>EnhEvent.Name</b></a> property value.</p>
<p>
The following example demonstrates adding events to the stream using <b>EnhEvents.AddText</b> and <b>EnhEvents.Add</b>.</p>
<pre><code>Dim evs as IEnhEvents
Dim e As IEnhEvent
Set evs = New EnhEvents
 
'Use AddText to add an event that downloads File1.htm thirty seconds
'after the show starts.
evs.AddText("30.0 ""File1.htm"";")
 
'Use Add to add an event that downloads File2.htm sixty seconds after
'the show starts. 
evs.Add 60, "File2.htm"
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
