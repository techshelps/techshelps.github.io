<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Entering Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_entering_data"></a>Entering Data</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The sample loader Load enters data into the database by using the method <b>Handle</b> in its application object. As mentioned in <a href="load_8n78.htm">Getting Data to the Client</a>, Load uses hard-coded values. Your loader should replace this function with one that loads the data you require. </p>
<p>
Load creates objects, defined in the Dbsets library, for each record to add to the database, then uses the corresponding Guide data object to update the record. This is the recomended approach for manipulating the data in the guide database. Notice that several of the created objects require objects or identifiers from other objects. For example, when adding a channel you must supply the identifier of the station record. This requirement means that you must have a station record before you can create a channel record. The descriptions of the Guide database objects in the <a href="pgsrv_3bhv.htm">Guide Data Objects</a> section indicate which methods require identifiers and which methods supply the required identifier.</p>
<p>
Be careful when using dates and times. The database stores times in coordinated universal time (UTC). You must convert this to or from local time when appropriate. You can use the application member variable <i>m_odtsTimeZoneAdjust</i> to make the conversion.</p>
<p>
While the <b>Handle</b> method is running, the loader is not receiving system messages.This means that if the system tries to shut down the loader, the loader is not informed and thus cannot terminate gracefully. Loading may stop while files are open or other system resources are in use. Such termination may have disastrous results. </p>
<p>
To prevent this problem, your loader should call the function that <b>pfnForceQuit</b> points to within long processing loops to see if a shutdown message is in the message queue. If this function returns TRUE, your loader should perform whatever processing is required to safely terminate <b>Handle</b>. In Load and Download, the address for the function <b>pfnForceQuit</b> points to is stored in the application object's member variable<i><b> </b>m_pfnForceQuit.</i></p>
<p>&nbsp;</p></body>
</HTML>
