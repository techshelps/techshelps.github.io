<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Device Contention</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_device_contention"></a>Device Contention</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The Video control uses a cooperative mechanism to prevent device conflicts.  This prevents multiple instances of the Video control from attempting to control a particular device at the same time, which would cause unpredictable results. </p>
<p>
The <a href="vidrf_0o18.htm"><b>BPCVid.</b>GotControl</a> and <a href="vidrf_39yk.htm"><b>BPCVid.</b>LostControl</a> event notifications are used to inform an application that it has control or must relinquish control of a particular device. </p>
<p>
For example, if your application needs to use a particular device it must first request control of the device by setting the input or output property of the Video control equal to the device. Your application should then wait until it receives a GotControl notification before it uses the device. If the application attempts to access the device before it has control, unexpected behavior can occur. </p>
<p>
Similarly, if your application receives a LostControl notification, it should immediately stop using the device in question until it can regain control. Otherwise, unexpected behavior occurs when multiple applications access the device.</p>
<p>
Thus, in order to handle device contention, your application must implement GotControl and LostControl event handlers.</p>
<p>
The device contention protocol also implements priority levels for application access to devices. These priority levels are used when two applications are in contention for a device. In this case, control is given to the application with higher priority. If both applications have equal priority, the application that currently has control of the device retains control. You can set the priority for an instance of the Video control using the <a href="vidrf_59x5.htm"><b>BPCVid.Priority</b></a> property.</p>
<p>&nbsp;</p></body>
</HTML>
