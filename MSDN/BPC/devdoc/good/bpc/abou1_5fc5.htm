<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Type Libraries for Broadcast Architecture</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_creating_type_libraries_for_broadcast_architecture"></a>Creating Type Libraries for Broadcast Architecture</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Broadcast Architecture does not provide separate type library files for its components. Instead, type library information is included as a resource in the .dll or .ocx file for the component in question. Including type library information as a resource ensures that this information is always the correct version for the object library. To create a type library from a .dll or .ocx file, use the type library utilities provided by your compiler. </p>
<p>
If you are using Visual C++, the type library utility is the ClassWizard available from the <b>View </b>menu. In the Microsoft® Visual J++™ development system for Java, use the Java Type Library Wizard available from the <b>Tools</b> menu. In Visual Basic, simply create a reference to the object library or add the component to the project. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
