<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Receiver Application</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_creating_a_receiver_application"></a>Creating a Receiver Application</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
If the Generic File Receiver application proves insufficient for the needs of your application, you can create a custom receiver application.</p>
<p>
The application must be able to appropriate process the <b>/J</b>, <b>/IPD</b>, and <b>/IPL </b>options in the command line passed to it by the Task Scheduler, as described in <a href="ann_7ilh.htm">Receiver Application Command Line</a>.</p>
<p>
Typically, a receiver application may ignore the <b>/J </b>option. The application must open a Windows Sockets (WinSock) socket using the address specified by <b>/IPD </b>and bind it to the address specified by <b>/IPL</b>. The application can then receive data over the broadcast connection and process it any way that is desired.</p>
<p>
The receiving application may access various attributes that were included in the original announcement, as described in <a href="ann_1j1v.htm">Retrieving Announcement Attributes</a>. </p>
<p>&nbsp;</p></body>
</HTML>
