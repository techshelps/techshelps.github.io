<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tuning WebTV for Windows</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_tuning_webtv_for_windows"></a>Tuning WebTV for Windows</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Once your application has a reference to WebTV for Windows, as discussed in <a href="tvxrf_862b.htm">Getting a Pointer to WebTV for Windows</a>, it can call the <a href="tvxrf_1sh1.htm"><b>ITVViewer::Tune</b></a> method to cause WebTV for Windows to display a new channel. </p>
<p>
The following line of code tunes WebTV for Windows to the specified channel and tuning space. In this example, the audio and video subchannel values are each specified as –1, which causes WebTV for Windows to use default values.</p>
<pre><code>TVX-&gt;Tune(iTuningSpace, iChannel,-1,-1,NULL); 
 </code></pre>
<p>
The <b>ITVViewer</b> interface offers two other tuning-related methods, <a href="tvxrf_5d9r.htm"><b>ITVViewer::GetCurrentTuningInfo</b></a> and <a href="tvxrf_04mn.htm"><b>ITVViewer::GetPreviousTuningInfo</b></a>. <b>GetCurrentTuningInfo</b> returns information about the channel WebTV for Windows is currently tuned to, and <b>GetPreviousTuningInfo</b> returns information about the channel tuned to just previously. </p>
<p>
The following example uses <b>GetPreviousTuningInfo</b> and <b>Tune </b>methods to implement a back button, which when clicked tunes WebTV for Windows to the previous channel.</p>
<pre><code>void CMyApp::BackButton() 
{
  long lTuningSpacePrev;
  long lChannelNumberPrev;
  long lAudioStreamPrev;
  long lVideoStreamPrev;
  CComBSTR bstrIPAddressPrev;
 
  TVX-&gt;GetPreviousTuningInfo(&amp;lTuningSpacePrev, &amp;lChannelNumberPrev,
            &amp;lVideoStreamPrev, &amp;lAudioStreamPrev, &amp;bstrIPAddressPrev);
 
  TVX-&gt;Tune(lTuningSpacePrev, lChannelNumberPrev,
            lVideoStreamPrev, lAudioStreamPrev, bstrIPAddressPrev);
}
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
