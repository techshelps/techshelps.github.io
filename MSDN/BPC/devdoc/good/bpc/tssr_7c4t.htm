<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IScheduledItems::Item</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_ischeduleditems_item"></a>IScheduledItems::Item</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>Item</b> method returns for a show reminder the show reference, the application to start, the working directory, the interval before the show that advance notification should occur, and any optional command-line parameters. </p>
<pre><code><b>HRESULT Item(
  BSTR </b><i> Index</i><b>,           </b>// in
<b>  BSTR *</b><i> User</i><b>,           </b>// out
<b>  BSTR *</b><i> ShowReference</i><b>,  </b>// out
<b>  BSTR *</b><i> Application</i><b>,    </b>// out
<b>  BSTR *</b><i> Directory</i><b>,      </b>// out
<b>  long *</b><i> AdvanceMinutes</i><b>,  </b>// out
<b>  BSTR *</b><i> Parameters</i><b>,     </b>// out
<b>  VARIANT *</b><i> Task         </i>// out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Index</i></dt>
<dd>
Index of the show reminder for which to retrieve information.</dd>
<dt>
<i>User</i></dt>
<dd>
Pointer to a <b>BSTR </b>that receives the name of the owner of the DAO workspace used to schedule the reminder. </dd>
<dt>
<i>ShowReference</i></dt>
<dd>
Pointer to a <b>BSTR </b>where this method returns the show reference string. For more information about the format of this string, see <a href="show_7h6c.htm">Show Reference Format</a>. </dd>
<dt>
<i>Application</i></dt>
<dd>
Pointer to a <b>BSTR</b> that receives the name and path of the application used to display the reminder to the user. Typically, WebTV for Windows is used to display reminders, and this value is set to C:\Program Files\TV Viewer\Tvx.exe. 
<p>
Your application can get the path to the broadcast client's installation of WebTV for Windows by calling <a href="tssr_1izp.htm"><b>ITelevisionServices::get_DatabaseFile</b></a> and stripping Tss.mdb off the end of the returned string. This path is also stored in this registry entry:

<p>
<b>HKLM\Software\Microsoft\TV Services\ProductDir</b>
</dd>
<dt>
<i>Directory</i></dt>
<dd>
Pointer to a <b>BSTR </b>that receives the working directory that contains the reminder application.</dd>
<dt>
<i>AdvanceMinutes</i></dt>
<dd>
Pointer to a <b>long </b>that receives the interval, in minutes, before the show's start that the reminder should be displayed. </dd>
<dt>
<i>Parameters</i></dt>
<dd>
Additional command-line arguments for the application specified by the <i>Application </i>parameter. The format and number of these arguments depend on the application referred to by <i>Application</i>. <i>Parameters </i>is passed to <i>Application </i>as command-line arguments.
<p>
For example, if you are using a custom application to display the reminder to the user, and this application has three styles of reminder dialog boxes, <i>Parameters</i> could be used to specify the reminder style. 

<p>
For a list of the parameters used with the WebTV for Windows reminder application, Tvx.exe, see the description of <i>WebTVforWindowsParameters </i>in Show Reminder Format.
</dd>
<dt>
<i>Task</i></dt>
<dd>
Address where this method returns a <b>VARIANT </b>data type containing an <b>Task</b> object, from which you can obtain the <b>TaskTrigger</b> object. The <b>TaskTrigger</b> object contains additional information about when and how the scheduled reminder will run. To locate more information about <b>TaskTrigger</b> and its interface <b>ITaskTrigger</b>, see <a href="abou1_66t0.htm">Further Information on Television Services for the Client</a>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns an <b>HRESULT</b> indicating success or failure. If the method succeeds, it returns S_OK. Otherwise, it returns an error code. For specific error codes, see the Winerror.h and Dbdaoerr.h header files. To locate more information about Winerror.h and Dbdaoerr.h, see <a href="abou1_66t0.htm">Further Information on Television Services for the Client</a>.</p>
<h4>Remarks</h4>
<p>
The <i>Task</i> parameter is returned as a <b>VARIANT </b>instead of as a <b>Task </b>object to enable Visual Basic programmers to safely use the <b>IScheduledItems::Item</b> method. Visual Basic cannot access the <b>ITask</b> interface; if <b>Item </b>did not return the <b>Task </b>object as a <b>VARIANT</b>,<b> </b>Visual Basic programmers could not correctly release the object. </p>
<p>
If you are programming in C++, simply cast the <b>VARIANT </b>to an <b>ITask </b>interface variable.</p>
<p>
If you are programming in Visual Basic, you should create a variable of type <b>Variant </b>and pass it as the <i>Task</i> parameter. Do not use this variable after you call <b>Item</b>. When the variable goes out of scope, Visual Basic releases the <b>Task</b> object it references. It is recommended that you declare the <b>Variant </b>variable as local in a function that calls the <b>Item</b> method. Such a declaration causes the <b>Task</b> object to be released quickly.</p>
<p>
To locate more information on <b>ITask </b>and <b>VARIANT</b>, see <a href="abou1_66t0.htm">Further Information on Television Services for the Client</a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in tssadmin.odl.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in tssadmin.dll.<br>
<b>&nbsp;&nbsp;Unicode: </b>Yes.</p>
<h4>See Also</h4>
<p>
<a href="tssr_31gt.htm"><b>IScheduledItems::get__NewEnum</b></a>, <a href="tssr_7wj8.htm"><b>IScheduledItems::get_Count</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
