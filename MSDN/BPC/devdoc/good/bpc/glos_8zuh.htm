<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_c_gly"></a>C</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>

<dl>
<dt>
<a name="_bpc_cdf_gly"></a><b>CDF</b></dt>
<dd>
<i>See</i> <a href="#_bpc_channel_definition_format_gly">Channel Definition Format</a>.</dd>
<dt>
<a name="_bpc_cern_gly"></a><b>CERN</b></dt>
<dd>
(Conseil Europeen pour le Recherche Nucleaire, or European Laboratory for Particle Physics), a research laboratory with headquarters in Geneva, Switzerland. CERN pioneered work in developing the <a href="glos_0vi1.htm#_bpc_world_wide_web_gly">World Wide Web</a>. CERN intended the Web to help scientists share information. </dd>
<dt>
<a name="_bpc_channel_gly"></a><b>channel</b></dt>
<dd>
In general, a path or link through which information passes between two devices. For example, a television channel carries a specific sequence of television programming. In Microsoft® Internet Explorer version 4.0, a channel is a collection of World Wide Web pages defined by means of a <a href="#_bpc_channel_definition_format_gly">Channel Definition Format</a> (CDF) file. </dd>
<dt>
<a name="_bpc_channel_definition_format_gly"></a><b>Channel Definition Format</b></dt>
<dd>
(CDF) A specification for a format that defines a content <a href="#_bpc_channel_gly">channel</a>. Microsoft developed this specification and has presented it to the World Wide Web Consortium (W3C). Applications can use CDF files to offer users subscriptions to World Wide Web channels. Subscription applications automatically update the channel content on a user's computer when this content changes on the channel server. The <a href="glos_6k55.htm#_bpc_internet_channel_broadcasting_gly">Internet channel broadcasting</a> components of Broadcast Architecture use CDF files to define subscription content.  </dd>
<dt>
<a name="_bpc_chroma_gly"></a><b>chroma</b></dt>
<dd>
The color portion of the video signal that includes hue and saturation information. Hue refers to a tint or shade of color. Saturation indicates the degree to which the color is diluted by <a href="glos_5cah.htm#_bpc_luminance_gly">luminance</a> or illumination. <i>See also</i> <a href="glos_029l.htm#_bpc_yuv_gly">YUV</a>.</dd>
<dt>
<a name="_bpc_class_gly"></a><b>class</b></dt>
<dd>
In general terms, a category. In programming languages, a class is a means of defining the structure of one or more objects. <i>See also </i><a href="glos_8l89.htm#_bpc_device_class_gly">device class</a>. </dd>
<dt>
<a name="_bpc_class_driver_gly"></a><b>class driver</b></dt>
<dd>
A standard <a href="glos_8l89.htm#_bpc_device_driver_gly">driver</a> provided with the operating system that provides hardware-independent support for a given <a href="glos_8l89.htm#_bpc_device_class_gly">class of devices</a>. Such a driver communicates with a corresponding hardware-dependent <a href="glos_4xo9.htm#_bpc_minidriver_gly">minidriver</a> using a set of device control requests defined by the operating system. These requests are specific to the particular device class. A class driver can also define additional device control requests itself. A class driver provides an interface between a minidriver and the operating system. </dd>
<dt>
<a name="_bpc_client_gly"></a><b>client</b></dt>
<dd>
Generally, one of a group of computers that receive shared information sent by a computer called a <a href="glos_2hyx.htm#_bpc_server_gly">server</a> over a broadcast or point-to-point <a href="glos_4j21.htm#_bpc_network_gly">network</a>. The term client can also apply to a software process, such as an Automation client, that similarly requests information from a server process and that appears on the same computer as that server process, or even within the same application. </dd>
<dt>
<a name="_bpc_closed_captioning_gly"></a><b>closed captioning</b></dt>
<dd>
Real-time, written annotation of the currently displayed audio content. Closed captioning usually provides subtitle information to hearing-impaired viewers or to speakers of a language other than that on the audio track.</dd>
<dt>
<a name="_bpc_color_keying_gly"></a><b>color keying</b></dt>
<dd>
A display technique in which a selected <a href="glos_1a49.htm#_bpc_video_graphics_array_gly">Video Graphics Array</a> (VGA) color is replaced with video wherever that color appears on the screen. For example, television news programs commonly use color keying to replace a blue backdrop mounted behind a weather announcer with a video picture of a weather map. </dd>
<dt>
<a name="_bpc_com_gly"></a><b>COM</b></dt>
<dd>
<i>See </i><a href="#_bpc_component_object_model_gly">Component Object Model</a>.</dd>
<dt>
<a name="_bpc_commit_gly"></a><b>commit</b></dt>
<dd>
To allocate a device data stream and tune a specified connection to that device data stream. Such commitment is performed by a <a href="glos_4j21.htm#_bpc_nic_miniport_gly">NIC miniport</a>. </dd>
<dt>
<a name="_bpc_common_library_interface_functions_gly"></a><b>common library interface functions</b></dt>
<dd>
Software routines supplied by Broadcast Architecture that add network <a href="glos_8l89.htm#_bpc_device_driver_gly">driver</a> functionality to a <a href="glos_9egp.htm#_bpc_broadcast_receiver_card_gly">broadcast receiver card</a> and manage computer memory resources for hardware-specific code. To use these common library interface functions, a hardware vendor building a <a href="glos_4j21.htm#_bpc_nic_miniport_gly">NIC miniport</a> should link the miniport code to the common library. </dd>
<dt>
<a name="_bpc_component_object_model_gly"></a><b>Component Object Model</b></dt>
<dd>
(COM) An object-oriented programming model for building software <a href="glos_9t2x.htm#_bpc_application_gly">applications</a> made up of modular components. COM allows different software modules, written without information about each other, to work together as a single application. COM enables software components to access software services provided by other components, regardless of whether they involve local function calls, <a href="glos_44ft.htm#_bpc_operating_system_gly">operating system</a> calls, or network communications. </dd>
<dt>
<a name="_bpc_content_producer_gly"></a><b>content producer</b></dt>
<dd>
A person or company creating broadcast content. Content can include television programming, data, <a href="glos_0vi1.htm#_bpc_world_wide_web_gly">World Wide Web</a> sites, and software <a href="glos_9t2x.htm#_bpc_application_gly">applications</a>. </dd>
<dt>
<a name="_bpc_content_provider_gly"></a><b>content provider</b></dt>
<dd>
A person or company delivering broadcast content. Content can include television programming, data, <a href="glos_0vi1.htm#_bpc_world_wide_web_gly">World Wide Web</a> sites, and software <a href="glos_9t2x.htm#_bpc_application_gly">applications</a>. </dd>
<dt>
<a name="_bpc_content_server_application_gly"></a><b>content server application</b></dt>
<dd>
An <a href="glos_9t2x.htm#_bpc_application_gly">application</a> written by a content provider and running on a computer at the broadcast <a href="glos_6yrd.htm#_bpc_head_end_gly">head end</a> that gathers, schedules, and sends data to the appropriate <a href="glos_4xo9.htm#_bpc_microsoft_multicast_router_gly">Microsoft Multicast Router</a>. For more information, see the Writing Content Delivery Software section of the Broadcast Architecture Programmer's Reference. </dd>
<dt>
<a name="_bpc_content_subnet_gly"></a><b>content subnet</b></dt>
<dd>
A network located at a broadcast <a href="glos_6yrd.htm#_bpc_head_end_gly">head end</a> that connects one or more <a href="#_bpc_content_server_application_gly">content server applications</a> to one or more <a href="glos_4xo9.htm#_bpc_microsoft_multicast_router_gly">Microsoft Multicast Routers</a>.</dd>
<dt>
<a name="_bpc_cpu_gly"></a><b>CPU</b></dt>
<dd>
Central processing unit. The computational and control unit of a computer; this device, usually a single chip, interprets and executes instructions. Examples include the Intel Pentium processor.</dd>
<dt>
<a name="_bpc_crc_gly"></a><b>CRC</b></dt>
<dd>
<i>See </i><a href="#_bpc_cyclic_redundancy_check_gly">cyclic redundancy check</a>.</dd>
<dt>
<a name="_bpc_cryptoapi_gly"></a><b>CryptoAPI</b></dt>
<dd>
An <a href="glos_9t2x.htm#_bpc_application_programming_interface_gly">application programming interface</a> (API) that provides an abstraction layer for encryption and decryption services provided by a <a href="#_bpc_cryptographic_service_provider_gly">cryptographic service provider</a>. Because CryptoAPI furnishes this layer, applications can use different encryption methods without requiring information about the hardware or software involved. This API also provides a way of protecting sensitive key data. <i>See also </i><a href="glos_9egp.htm#_bpc_broadcast_cryptography_api_gly">Broadcast Cryptography API</a>.</dd>
<dt>
<a name="_bpc_cryptographic_service_provider_gly"></a><b>cryptographic service provider</b></dt>
<dd>
(CSP) An independent software module that contains cryptography algorithms or services that are integrated into <a href="#_bpc_cryptoapi_gly">CryptoAPI</a>. Many CSPs are Microsoft® Win32® <a href="glos_9t2x.htm#_bpc_application_programming_interface_gly">application programming interface</a> (API) service programs, managed by the Win32 service control manager. Some, such as a <a href="glos_2hyx.htm#_bpc_smart_card_gly">smart card</a> or secure coprocessor, reside in hardware. </dd>
<dt>
<a name="_bpc_csp_gly"></a><b>CSP</b></dt>
<dd>
<i>See </i><a href="#_bpc_cryptographic_service_provider_gly">cryptographic service provider</a>.</dd>
<dt>
<a name="_bpc_cyclic_redundancy_check_gly"></a><b>cyclic redundancy check</b></dt>
<dd>
(CRC) A common technique for detecting errors in data transmission. In CRC error checking, the sending device calculates a number based on the data transmitted. The receiving device repeats the same calculation after transmission. If both devices obtain the same result, it is assumed the transmission was error-free. The procedure is known as a redundancy check because each transmission includes not only data but additional, redundant values for error checking.</dd>
</dl>

<p>&nbsp;</p></body>
</HTML>
