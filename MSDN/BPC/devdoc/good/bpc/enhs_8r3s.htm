<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Convert the Stream to Low-Level Syntax</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_convert_the_stream_to_low_level_syntax"></a>Convert the Stream to Low-Level Syntax</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Converting the enhancement stream to low-level syntax causes compound events, such as those that contain repetition or dependencies, to be converted into multiple simple statements. This is a useful step if your tool needs to examine the stream in its simplest form, such as when your tool plays a stream, determines the required transmission bandwidth, and so on.</p>
<p>
<b>Note</b>&nbsp;&nbsp;If your application only adds low-level events to the stream conversion to low-level format is not necessary. Such an application, for example, would store the download of a file with three dependencies as four low-level events instead of a single compound event.</p>
<p>
If you use the <a href="rcen_399w.htm">enhancement sender object</a> to transmit the enhancement stream to clients you must convert the stream to low-level syntax before you broadcast it.</p>
<p>
If you are using the stream compiler objects, you can convert the stream to low-level format by calling <a href="rcen_7acu.htm"><b>EnhEvents.Flatten</b></a>. For more information, see <a href="rcen_2f5k.htm">Converting Events to Low-level Syntax</a>.</p>
<p>&nbsp;</p></body>
</HTML>
