<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Receiver Application Command Line</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_receiver_application_command_line"></a>Receiver Application Command Line</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
A receiver application is an executable application that is intended to be launched by the <a href="glos_9mic.htm#_bpc_task_scheduler_gly">Task Scheduler</a> at the appropriate time to receive the information previously announced. You can use the generic receiver application or write one of your own. For more information, see <a href="ann_0zn7.htm">Receiver Applications</a>.</p>
<p>
At the appropriate time, the Task Scheduler launches the receiver application. The Task Scheduler provides three command line arguments to the receiver application. These arguments are prepended to the <i>Parameters </i>string provided by the <a href="ann_729a.htm"><b>IBroadcastFilter::GetDisposition</b></a> or <a href="ann_42no.htm"><b>IDataListener::SubmitAnnouncement</b></a> method. These command-line arguments are:
<ul>
<li>
<b>/J </b><i>job_name</i> — the task name in the <b>IJobScheduler</b> interface that launched this process. For example:<pre><code>/J BFTP_JOB_234
 </code></pre>
</li>
<li>
<b>/IPD </b><i>destination_address_and_port_of_multicast.</i> For example:<pre><code>/IPD 224.45.38.92:3256
 </code></pre>
</li>
<li>
<b>/IPL </b><i>local_address_of_network_card_receiving_multicast. </i>For example:<pre><code>/IPL 192.78.38.92
 </code></pre>
</li>
</ul>
<p>
The destination address is the IP address to which the data is broadcast. The local address is the IP address of the network interface card that receives the data; this allows a distinction to be made between a satellite receiver card and any other type of network interface when more than one card is present.</p>
<p>
For example, suppose the arguments supplied by a filter to Announcement Listener by <a href="ann_729a.htm"><b>IBroadcastFilter::GetDisposition</b></a><i> </i>are as follows:</p>
<p>
<i>WorkingDirectory<b> = </b></i><b>C:\Games\</b><br>
<i>Application<b> = </b></i><b>GameRecv.exe</b><br>
<i>Parameters <b>= </b></i><b>/o</b><br>
<i>AdvanceMinutes <b>=</b></i><b> 2</b></p>
<p>
At the appointed time, Task Scheduler launches the specified receiver application with the following command line:</p>
<pre><code>GameRecv /J "BFTP_JOB_234" /IPD 224.45.38.92:3256 / IPL 192.78.38.92 3A45F /o
 </code></pre>
<p>
In this case, Gamerecv.exe is an application designed to receive multicast data on the specified address, and <code>/o </code>is an additional parameter that is being passed to the receiver application.</p>
<p>
The receiver application can be the final receiver of the data (as in the example preceding), or it can be a simple shell that launches the final receiver of the data (for more information, see <a href="ann_0be6.htm">Using the Generic File Receiver Application</a>).</p>
<p>&nbsp;</p></body>
</HTML>
