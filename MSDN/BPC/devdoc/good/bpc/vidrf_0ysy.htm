<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Suspending the Video Server</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_suspending_the_video_server"></a>Suspending the Video Server</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
You can use the <a href="vidrf_92ec.htm"><b>BPCSuspend</b></a> object to suspend background data capture and cause the video server to release its devices for use by other applications.</p>
<p>
To do this you create an instance of <b>BPCSuspend</b> and call its <a href="vidrf_849x.htm"><b>DeviceRelease</b></a> method. If the video server successfully releases all devices the method returns a valid <b>BPCSuspended</b> object. Otherwise, it returns <b>Nothing</b>. If <b>Nothing </b>is returned, it means that the video server was unable to release some devices because they are currently being used by client video applications. </p>
<p>
Your application should handle the case where <b>DeviceRelease </b>returns <b>Nothing </b>as it would a device busy or device open type of failure. Your application can wait and try again, or signal the user to shut down video applications.</p>
<p>
When your application is done using the devices, it should destroy the <b>BPCSuspended </b>object. This notifies the video server that it can resume using the devices and return to background data capture.</p>
<pre><code>'Note: for the following object creation to work, 
'you must add the Vid.ocx component into your project.
'For more information, see <a href="vidrf_1dta.htm">Adding the Video Control to an Application</a>
Dim susp As BPCSuspend
Set susp = New BPCSuspend
Dim suspended As BPCSuspended
 
'Attempt to suspend the video server
susp.DeviceRelease 0, suspended 
 
'Test whether the video server was suspended
If (suspended Is Nothing) Then
  'Handle the case where devices cannot be released
Else
  'Use the devices
End If
 
'Release suspended to enable the video server to use the devices
Set suspended = Nothing
 </code></pre>
<p>
<b>Note</b>&nbsp;&nbsp;If you are developing applications using C/C++, you can use the wrapper class implemented in Bpcsusp.h to provide suspend functionality.</p>
<p>&nbsp;</p></body>
</HTML>
