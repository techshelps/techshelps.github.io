<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Live Stream Authoring Tools</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_live_stream_authoring_tools"></a>Live Stream Authoring Tools</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Live stream authoring tools address the needs of users to develop streams "on the fly." For example, a live news show might need the flexibility to modify its enhancements to match late-breaking news items. </p>
<p>
When enhancements are added to the show as it is broadcast, there is little time to correct any authoring mistakes. As a consequence, a live-broadcast stream authoring tool should provide a simple and robust user interface. Wherever possible, the tool should automate the stream authoring process and attempt to correct any problems that arise. For example, a live stream authoring tool might automatically find and transmit dependency files for each enhancement page the user transmits.</p>
<p>
Other features that are useful for a live stream authoring tool are a dynamic time line that indicates the seconds remaining before a particular enhancement is broadcast, a list of enhancements previously broadcast, and a list of enhancements that are waiting to be broadcast.</p>
<p>&nbsp;</p></body>
</HTML>
