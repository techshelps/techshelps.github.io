<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing Arguments of the Command Line</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_processing_arguments_of_the_command_line"></a>Processing Arguments of the Command Line</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
One of the first operations your application must perform is to parse the arguments of the command line obtained from Tvwakeup.exe or from your own wake-up application. Your application requires parsing these arguments to process them. The best way to parse these arguments is when your application initializes. If you write your application in Microsoft® Foundation Classes (MFC), you should create a command-line class that inherits from the <b>CCommandLineInfo</b> class and override the <b>ParseParam</b> method. During your application's <b>InitInstance</b> method, your application should create an instance of the command-line object. Your application should then call the <b>ParseCommandLine</b> method of the <b>CWinApp</b> class from which your application inherits and pass the command-line object. The <b>ParseCommandLine</b> method then parses and passes each argument in the command line to the <b>ParseParam</b> method that you implement. After <b>ParseParam</b> fills the command-line object, your application passes the command-line object to the <b>ProcessShellCommand</b> method of the <b>CWinApp</b> class. <b>ProcessShellCommand</b> then handles the command-line arguments and flags to perform the indicated operation.</p>
<p>
The <b>ParseParam</b> method that you implement should evaluate the arguments of the command line and process them according to whether they are specific flags or functions or the final argument of the command line. Your <b>ParseParam</b> method should create static variables that will store the most recently passed flag argument and a boolean value indicating whether or not <b>ParseCommandLine</b> passed the command to begin recording. If your <b>ParseParam</b> method receives an argument and determines that the static flag variable holds a function flag, <b>ParseParam</b> should evaluate the argument according to the operation specified. If the argument specifies to start recording, <b>ParseParam</b> should set the static boolean value for recording. If the argument specifies to end recording, <b>ParseParam</b> should send a command to stop recording. If your <b>ParseParam</b> method receives an argument and determines that the static flag variable holds a channel flag, <b>ParseParam</b> should evaluate the argument and send commands to the remote control to tune the VCR. If your <b>ParseParam</b> method determines that it received the final argument and that its static boolean value was set for recording, <b>ParseParam</b> should send a command to start recording.</p>
<p>&nbsp;</p></body>
</HTML>
