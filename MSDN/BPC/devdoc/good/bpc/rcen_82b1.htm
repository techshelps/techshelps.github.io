<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating an Enhancement Stream</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_creating_an_enhancement_stream"></a>Creating an Enhancement Stream</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An <i>enhancement stream </i>is a script that synchronizes enhancement events with specific times in the interactive television show. An <i>enhancement event</i> causes the <a href="glos_9egp.htm#_bpc_broadcast_client_gly"><i>broadcast client</i></a> to perform an action such as receiving a file transmission or displaying new enhancement content to the user. The enhancement stream script is written in stream compiler syntax and stored as a text file. If you are planning to broadcast an interactive show, you need to create an enhancement stream.</p>
<p>
The enhancement stream coordinates enhancement actions with the video being broadcast. For example, your enhancement stream script can ensure that files are transmitted prior to their display, that <a href="rcen_9oqb.htm">triggers</a> occur at specific times during the show, and that important files are repeatedly transmitted so they are always available to the viewer.</p>
<p>
There are three methods that you can use to build an enhancement stream:
<ul>
<li>
Write the stream explicitly using stream compiler syntax and save it as a text file. This method requires fluency in stream compiler syntax and advanced knowledge of the broadcast client system. You may still want to use a tool to validate your syntax, convert the stream to low-level syntax, or both. For more information about working with stream compiler syntax, see <a href="rcen_2f5k.htm">Converting Events to Low-level Syntax</a>, which describes how to convert a stream to low-level format, or <a href="abou1_1uk4.htm">Further Information on Data Services for the Client</a>, which directs you to additional syntax documentation.</li>
<li>
Use the Enhancement Stream Editor to create an enhancement stream. This tool displays the enhancement stream as a time line and assists you in budgeting the available bandwidth for enhancement transmission. To locate more information on the Enhancement Stream Editor, see <a href="abou1_1uk4.htm">Further Information on Data Services for the Client</a>.</li>
<li>
Create a custom stream editor tailored to your needs, and use that to create an enhancement stream. For more information, see <a href="enhs_8q9f.htm">Building Enhancement Authoring Tools</a>. </li>
</ul>
<p>
The order and composition of your enhancement stream depends on the content and structure of your interactive show. However, you should keep in mind the following guidelines when composing an enhancement stream:
<ul>
<li>
Send an enhancement announcement for the interactive show before it begins and repeatedly during the show. Doing so loads the enhancement information into the <a href="glos_7ddl.htm#_bpc_guide_database_gly"><i>Guide database</i></a>, where it can be retrieved and used by <a href="glos_4xo9.htm#_bpc_microsoft_webtv_for_windows_gly"><i>WebTV for Windows</i></a> and by third-party applications that use Guide database information.</li>
<li>
Schedule <a href="rcen_950z.htm">dependencies</a> to be broadcast before the enhancement page that requires them. </li>
<li>
Ensure that your application broadcasts the files referred to by <a href="rcen_196a.htm">Nav triggers</a> to the client before it broadcasts the triggers themselves. Doing so ensures that you only redirect Microsoft® WebTV® for Windows® to display files that are available. </li>
<li>
Repeatedly transmit critical enhancement events. If users tune to an interactive show in the middle of the episode, they may miss events broadcast earlier in the show. Repeatedly broadcasting enhancement files and triggers enables WebTV for Windows to receive and display enhancements even when a user was tuned to another channel for part of the episode.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
