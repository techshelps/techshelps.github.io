<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sticking to Standard Technologies</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_sticking_to_standard_technologies"></a>Sticking to Standard Technologies</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Wherever possible, Broadcast Architecture software relies on standard solutions that are widely accepted, understood, and supported in the industry. These standards include:
<ul>
<li>
<i>The <a href="glos_9mic.htm#_bpc_transmission_control_protocol_internet_protocol_gly">Transmission Control Protocol/Internet Protocol</a> (TCP/IP) networking protocol</i>. This protocol is the one used by the Internet. By using TCP/IP as their primary networking protocol, broadcast clients make a standard way available to communicate with virtually any network in the world.</li>
<li>
<a href="glos_4xo9.htm#_bpc_mpeg_gly"><i>MPEG-2</i></a><i> compression</i>. This format is becoming the most widely accepted standard for delivering compressed video and audio and related data. </li>
<li>
<i>The Microsoft</i>®<i> Windows</i>®<i> 98 operating system</i>. In addition to being the successor to the most widely used and understood 32-bit operating system, Microsoft® Windows® 95, Windows 98 includes a number of components that are becoming or have become standards themselves:<ul>
<li>
Windows Sockets (WinSock) version 2.0. This application programming interface (API) provides a network abstraction layer that allows applications to receive and send network data without needing any information about the network involved. WinSock also provides access to TCP/IP.</li>
<li>
<a href="glos_4j21.htm#_bpc_network_driver_interface_specification_gly"><i>Network Driver Interface Specification</i></a> (NDIS) version 5.0 ports. The NDIS standard allows hardware device drivers to be written independently of the target operating system.</li>
<li>
CryptoAPI. This API provides an abstraction layer for encryption and decryption services, so that applications can use different encryption methods without requiring any information about the hardware or software involved.</li>
<li>
Microsoft® Internet Explorer. By incorporating Internet Explorer technology, the broadcast client can take advantage of all the latest Internet and Web enhancements.</li>
<li>
Component Object Model (COM). This open standard allows different software modules, written without information about each other, to work together as if they were part of the same program.</li>
<li>
<a href="glos_8l89.htm#_bpc_directshow_gly"><i>Microsoft DirectShow</i></a> (formerly called Microsoft® ActiveMovie™). This Microsoft® ActiveX® technology provides an extremely flexible and capable architecture for managing and playing interrelated multimedia streams, which the broadcast client relies on. The key concept of the Microsoft® DirectShow™ API is to connect many independent <a href="glos_8l89.htm#_bpc_directshow_filter_gly"><i>filter</i></a> programs together. Each filter handles a part of the process of receiving, decoding, transforming, scheduling, and displaying interdependent video, audio, and data streams. </li>
<li>
Key codes for television remote controls. The remote control buttons included on keyboards and other devices communicate with broadcast clients by using standard Windows key codes. Use of standard key codes makes integration of remote functions into hardware very simple for manufacturers.</li>
</ul>
</li>
</ul>
<p>
The DirectShow technology and the related stream class driver technology, part of the <a href="glos_0vi1.htm#_bpc_windows_driver_model_gly"><i>Windows Driver Model</i></a> (WDM), is sufficiently important for broadcast clients that its flexibility should be stressed. DirectShow filters are modular software components that work together to process a data stream. When one feature of the stream changes, only the filter dealing with that feature need be replaced. For example, if a stream's encoding changes, only its decoding filter is affected. This modularity makes it easy to use and support clients that work with virtually any kind of broadcast possible.</p>
<p>
To get the maximum performance, Broadcast Architecture supports DirectShow by using WDM stream class drivers. These drivers operate on data in <a href="glos_5qwp.htm#_bpc_kernel_mode_gly"><i>kernel mode</i></a>. DirectShow provides control of these drivers to applications through the use of proxy filters running in <a href="glos_1oqh.htm#_bpc_user_mode_gly"><i>user mode</i></a>. For example, an application can call a proxy filter in DirectShow to change channels on a <a href="glos_9t2x.htm#_bpc_analog_television_tuner_card_gly"><i>television tuner card</i></a>. Then the proxy filter calls the WDM stream class driver, which controls the television tuner card.</p>
<p>
To locate more information on how to create and use new DirectShow filters to handle changing technologies, and on WDM stream class drivers and filters, see <a href="abou1_9asr.htm">Further General Information</a>.</p>
<p>&nbsp;</p></body>
</HTML>
