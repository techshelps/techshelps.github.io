<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Guide Data Objects to Access the Database</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_using_guide_data_objects_to_access_the_database"></a>Using Guide Data Objects to Access the Database</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Your loader can access the Guide database directly through the <i>CdbDBEngine</i> variable passed to the loader in its entry-point function, as shown in <a href="load_2zqk.htm">Making a Loader DLL</a>. However, to avoid having to deal with the details of the database, your loader can use the Broadcast Architecture component library Dbsets.dll. This library provides objects that give access to each of the database tables, which contain the information required to manipulate how shows are displayed in the Program Guide. For more information on this library, see <a href="pgsrv_3bhv.htm">Guide Data Objects</a>. </p>
<p>
As an example of how to use Dbsets.dll, see the sample loader Load. The application object in Load includes pointers to each of the objects defined in Dbsets.dll. The Load member function <b>OpenTables</b> initializes these pointers. After calling <b>OpenTables</b>, Load can access any table in the database by using the appropriate object. To locate the source code for Load, see <a href="using_8i2b.htm">Broadcast Architecture Sample Applications</a>. </p>
<p>&nbsp;</p></body>
</HTML>
