<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transmitting Triggers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_bpc_transmitting_triggers"></a>Transmitting Triggers</h4>
<p>
Triggers change the display or operation of an enhancement on the client. For example, a trigger can display new content in a frame or a new base page. Triggers are also used to initialize data reception. For a list of the types of triggers you can transmit, see <a href="rcen_7rhv.htm">Enhancement Triggers</a>.</p>
<p>
The <b>ipsend</b> object provides three types of methods that you can use to transmit triggers. The first type, <a href="rcen_0dx0.htm"><b>ipsend.SendEvent</b></a> parses an event and transmits it. The second type, <a href="rcen_8kdu.htm"><b>ipsend.SendTrigger</b></a>, accepts a pre-formatted trigger string as the input parameter. You can use <b>SendTrigger</b> or <b>SendEvent</b> to transmit any of the trigger formats described in <a href="rcen_7rhv.htm">Enhancement Triggers</a>.</p>
<p>
The third type of method accepts trigger data and formats the string for you. This includes the methods: <a href="rcen_0rz6.htm"><b>ipsend.TriggerCAB</b></a>, <a href="rcen_12er.htm"><b>ipsend.TriggerFTS</b></a>, <a href="rcen_6gh1.htm"><b>ipsend.TriggerNavigate</b></a>, and <a href="rcen_3wc4.htm"><b>ipsend.TriggerScript</b></a>. Each of these methods transmits a particular type of trigger. </p>
<p>
You can use <b>SendEvent</b>, <b>SendTrigger, </b>or the <b>TriggerXxx</b> methods to transmit a trigger to the client. Choose whichever is most convenient for your application. Note that the <b>ipsend.TriggerXxx</b> methods cannot transmit TVCrossover triggers or user triggers. To transmit these types of triggers you must use <b>ipsend.SendTrigger</b> or <b>ipsend.SendEvent</b>.</p>
<p>
The following example illustrates how to use <b>ipsend.SendEvent</b> to transmit the event stored in the <b>EnhEvent</b> object, <code>e</code>.</p>
<pre><code>isend.SendEvent e
 </code></pre>
<p>
The following examples use <b>SendTrigger</b> to transmit a trigger.</p>
<pre><code>'Transmit the trigger stored in event e
'(For triggers, EnhEvent.Name contains the trigger data and 
' EnhEvent.Trigger contains the trigger key.)
isend.SendTrigger e.Trigger + e.Name
 
'Transmit triggers using hard-coded data.
isend.SendTrigger "1 &lt;CAB&gt;Show.cab"
isend.SendTrigger "1 &lt;FTS&gt;123.32.111.98:198&amp;MyShow&amp;60"
 </code></pre>
<p>
The next examples demonstrate how to transmit triggers using the TriggerXxx methods.</p>
<pre><code>isend.TriggerCAB "Show.cab"
isend.TriggerFTS "123.32.111.98", 198, "MyShow", 60
isend.TriggerNavigate "MyEnh.htm", "Left"
isend.TriggerScript "MsgBox ""Hello World!""", "VBScript"
 </code></pre>
<p>
When <b>ipsend </b>transmits a trigger, it automatically calculates the checksum value and adds this to the trigger string that it transmits. This value is used by the client to verify that the trigger is valid. If your application transmits the trigger by some means other than <b>ipsend</b>, it must calculate and add this value to the trigger string. For more information, see <a href="rcen_39ut.htm">Trigger Checksum Value</a>.</p>
<p>&nbsp;</p></body>
</HTML>
