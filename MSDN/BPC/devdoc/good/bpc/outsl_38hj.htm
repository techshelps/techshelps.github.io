<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Virtual Interface Overview</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_bpc_sample_virtual_interface_overview"></a>Sample Virtual Interface Overview</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The beta program for the Microsoft® Windows® 98 operating system and the Platform SDK provide the source code for two sample virtual interfaces described as follows.</p>
<p>
The source code for the Mc_out.dll sample demonstrates a virtual interface that broadcasts over a local area network (LAN). Such a virtual interface can be used to test broadcast server and client applications without using a <a href="glos_1a49.htm#_bpc_vertical_blanking_interval_gly"><i>vertical blanking interval</i></a> (VBI) transmitter. Instead of forwarding data packets from the Microsoft® Multicast Router (MMR) to particular head-end equipment, Mc_out.dll sends them over an Ethernet LAN in the form of <a href="glos_6k55.htm#_bpc_internet_protocol_gly"><i>Internet Protocol</i></a><i> </i>(IP) <a href="glos_4xo9.htm#_bpc_multicast_gly"><i>multicast</i></a> packets. The source code for the Mc_out.dll shows implementations for the optional functions that support dynamic configuration in addition to the required functions. The required and optional functions for a virtual interface are described in <a href="outsl_7ni1.htm">Sample Virtual Interface Anatomy</a>.</p>
<p>
The source code for the Nulloss.dll sample demonstrates a virtual interface that is useful for debugging purposes. Such a virtual interface can collect packets from the MMR, and rather than forwarding those packets to particular head-end equipment, periodically display the bandwidth of the packets. Because the Nulloss.dll sample does not have any configuration values, it does not export the optional functions that support dynamic configuration and its source code does not show implementations for those functions.</p>
<p>&nbsp;</p></body>
</HTML>
