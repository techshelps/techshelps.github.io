<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Controls for WebTV for Windows</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_creating_controls_for_webtv_for_windows"></a>Creating Controls for WebTV for Windows</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Microsoft® WebTV® for Windows, a component of the Microsoft® Windows® 98 operating system, is the user interface for Broadcast Architecture. WebTV for Windows hosts several controls, such as Internet Explorer and the Microsoft® ActiveX® control for video (the Video control), that it uses to present data such as live video, <a href="glos_3ptl.htm#_bpc_program_guide_gly"><i>Program Guide</i></a> information, and <a href="glos_86m1.htm#_bpc_enhancement_gly"><i>enhancements</i></a>. </p>
<p>
You can extend the Broadcast Architecture user interface by writing custom controls that are hosted by WebTV for Windows. Because Broadcast Architecture uses <a href="glos_6yrd.htm#_bpc_hypertext_markup_language_gly"><i>Hypertext Markup Language</i></a> (HTML) for its user interface, writing a control for WebTV for Windows is as simple as writing an signed ActiveX control. </p>
<p>
However, you need not stop there. WebTV for Windows exposes COM interfaces that enable your control to interact with it. You can query WebTV for Windows about its state, programmatically control it, and receive event notifications from it. You call the WebTV for Windows interfaces from any programming language that supports COM and the <b>GetActiveObject</b> Automation function.</p>
<p>
For example, you can write a control that queries the state of WebTV for Windows to monitor a user's viewing habits. This information might be used locally to build a user profile and then to recommend future broadcasts that the user might enjoy. The information might also be transmitted through the <a href="glos_9egp.htm#_bpc_back_channel_gly"><i>back channel</i></a> to advertisers and broadcast content providers, to enable them to compile information about which episodes are most successful.</p>
<p>
The following topics describe tasks your WebTV for Windows control can implement:
<ul>
<li>
<a href="tvxs_3m43.htm">Connecting to WebTV for Windows</a> </li>
<li>
<a href="tvxs_6soj.htm">Controlling WebTV for Windows</a> </li>
<li>
<a href="tvxs_4q7n.htm">Receiving Events from WebTV for Windows</a> </li>
</ul>
<p>
The software supporting Broadcast Architecture includes two sample applications that work with WebTV for Windows. To locate these samples, see <a href="using_8i2b.htm">Broadcast Architecture Sample Applications</a>.</p>
<p>
Note that all ActiveX controls hosted by WebTV for Windows must be signed. Otherwise the control is not displayed or run by WebTV for Windows. This additional security is to prevent unauthorized controls from being downloaded and run as enhancements. To locate information on how to sign an ActiveX control, see <a href="abou1_7g11.htm">Further Information on Development Tasks in Broadcast Architecture</a>.</p>
<p>
For more information about WebTV for Windows and the interfaces its exposes, see <a href="tvxrf_2yb7.htm">WebTV for Windows</a> and the <a href="tvxrf_88c2.htm"><b>ITVViewer</b></a> and <a href="tvxrf_0ujw.htm"><b>ITVControl</b></a> interfaces.</p>
<p>
<b>Note</b>&nbsp;&nbsp;WebTV for Windows controls that need to access information from the Guide database should link to the static library, dbsetst.lib, instead of dbsets.dll. This is because dbsets.dll is single-threaded and may already be in use by a loader when your application runs.</p>
<p>&nbsp;</p></body>
</HTML>
