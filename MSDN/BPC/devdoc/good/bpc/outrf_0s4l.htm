<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PacketBufferComplete</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_packetbuffercomplete"></a>PacketBufferComplete</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>PacketBufferComplete </b>function informs the MMR that the virtual interface is done processing a packet and provides status on the completed packet.</p>
<pre><code><b>void PacketBufferComplete(
  IN PACKET_BUFFER *</b><i>Packet</i><b>,  </b>
<b>  IN DWORD</b><i> dwStatus    </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Packet</i></dt>
<dd>
Address of a <a href="outrf_0xf6.htm"><b>PACKET_BUFFER</b></a> structure that describes a packet the virtual interface is finished with.</dd>
<dt>
<i>dwStatus</i></dt>
<dd>
Value specifying the status of the completed packet. The following table lists and describes the valid status values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>PACKET_COMPLETE_FAILURE</td>
<td width=46%>A failure occurred in processing the packet.</td>
</tr>
<tr valign=top>
<td width=54%>PACKET_COMPLETE_NO_ROUTE</td>
<td width=46%>The virtual interface was unable to route the packet.</td>
</tr>
<tr valign=top>
<td width=54%>PACKET_COMPLETE_OVERFLOW</td>
<td width=46%>The virtual interface cannot process the packet synchronously and lacks queue space to process the packet asynchronously. </td>
</tr>
<tr valign=top>
<td width=54%>PACKET_COMPLETE_SUCCESS</td>
<td width=46%>Processing of the packet completed successfully.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
None</p>
<h4>Remarks</h4>
<p>
The MMR implements <b>PacketBufferComplete</b> as an inline function in the Packet.h header file; the Bridge.h header file includes Packet.h. The <b>PacketBufferComplete</b> implementation calls the <b>CompletionFunc</b> member of the <b>PACKET_BUFFER </b>structure for the passed in packet.</p>
<p>
Virtual interface DLLs can be implemented for particular output systems that use first-in-first-out (FIFO) chips of a fixed-length in the range of 32 to 64 slots. If such a virtual interface fills the output system's FIFO before transmitting all the packet data, then the virtual interface must inform the MMR that it is done processing the packet with a status value of PACKET_COMPLETE_OVERFLOW.</p>
<h4>See Also</h4>
<p>
<a href="outrf_0xf6.htm"><b>PACKET_BUFFER</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
