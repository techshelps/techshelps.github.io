<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Virtual Interfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_about_virtual_interfaces"></a>About Virtual Interfaces</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
A virtual interface (VIF) is a user-mode dynamic-link library (DLL) that the Microsoft® Multicast Router (MMR) requires to route data packets to a specific output device. The virtual interface packages the data into network- and hardware-specific formatting. Because this packaging is performed by the virtual interface and not the MMR, the MMR software does not need to be rewritten if the network or hardware changes. You can configure new multicast routers simply by changing the MMR registry entries and the virtual interface .dll file.</p>
<p>
The following diagram illustrates how a data stream flows from the content server to a broadcast output system.</p>
<p>
<img src="images/insbr01.gif" border=0></p>
<p>
Each head-end server infrastructure requires a virtual interface specific to its system. During testing of the MMR, Microsoft has created the following virtual interfaces:
<ul>
<li>
<a href="outrf_7aln.htm">Local Area Network</a> </li>
<li>
<a href="outrf_0lwp.htm">Serial VBI</a> </li>
</ul>
<p>
For information on the specific functions that must be implemented in a virtual interface, see <a href="outrf_02ed.htm">Virtual Interface Reference</a>.</p>
<p>&nbsp;</p></body>
</HTML>
