<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Broadcast Data Characteristics</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_broadcast_data_characteristics"></a>Broadcast Data Characteristics</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Data suitable for broadcast falls into many different categories and can have a variety of formats. The following general characteristics of different data have important implications for the software needed to generate, transmit, and receive the corresponding broadcast streams: 
<ul>
<li>
<i>Value.</i> How much is the data worth? A very high value probably justifies better encryption, more error correction, and more frequent transmission. Low value may allow higher compression and less frequent transmission.</li>
<li>
<i>Precision</i>. How much of the data's value depends on its complete and accurate transmission? When a software program is transmitted, for example, every bit must be correctly received and verified, or the data is useless. When a bitmap graphic is transmitted, on the other hand, a good deal of data can usually be lost without compromising the value of the image. Note that because the client cannot notify the host of lost data in  Broadcast Architecture, incomplete and damaged data is always discarded. Partial data and data containing irrecoverable errors is simply not received. </li>
<li>
<i>Transience</i>. Some data loses its value soon after it is transmitted, for example stock prices or enhancements to a television show. Other data loses value very slowly, for example a software program or reference work.</li>
<li>
<i>Urgency</i>. How important is it that viewers receive the data within a given time-frame? Urgency can be understood as a function of value and transience, but it also has a psychological component deriving from viewers' perceptions. For example, a user purchasing a new software program expects it to come shortly after she pays for it. If, on the other hand, the user purchases regular updates to her encyclopedia articles, she does not expect an immediate response. </li>
<li>
<i>Expiration</i>. How long may a viewer keep the data? Transient data is usually used immediately upon reception and discarded, but other data may be kept indefinitely. The viewer's rights to store and use data are often limited by licensing agreements, as in the case of software rentals, pay-per-view programs, or limited subscriptions.</li>
<li>
<i>Segmentation</i>. How is the data divided up, particularly from a subscription standpoint? A viewer might sign up for a persistent stream of information, as in the case of a stock-price or news service; for individual files, as in the case of downloading software; or perhaps for filtered subsets of a complex data stream. </li>
<li>
<i>Homogeneity.</i> How homogeneous is the data? Stock price data, at one extreme, usually consists of small, uniform data objects that all have exactly the same size and format. A news stream, at the other extreme, might consist of many different types of data objects of radically different sizes and formats. </li>
</ul>
<p>
Analyzing a data service in terms of these characteristics is useful in determining what software is needed in the content provider's studio, at the broadcast head end, and on the home computer in order to manage the data most effectively.</p>
<p>&nbsp;</p></body>
</HTML>
