<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Outline of a Typical Enhancement Stream</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_bpc_outline_of_a_typical_enhancement_stream"></a>Outline of a Typical Enhancement Stream</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The following outline is an example of a "typical" enhancement stream. The enhancement stream for a any particular show may vary. In the following, a typical enhancement stream is defined as a stream that is <a href="enhs_2fjh.htm">well-formed</a>, and which contains one or more base pages.
<ol>
<li>
<a href="#_bpc_announce_the_show_repeatedly">Announce the enhanced show repeatedly</a> </li>
<li>
<a href="#_bpc_trigger_data_reception_repeatedly">Trigger data reception repeatedly</a> </li>
<li>
<a href="#_bpc_transmit_enhancement_files_repeatedly">Transmit enhancement files repeatedly</a> </li>
<li>
<a href="#_bpc_send_other_triggers_as_needed">Send other triggers as needed</a>.</li>
</ol>
<p>
The following topics describe the preceding steps in greater detail and provide example stream language statements for each step.</p>

<p>
<a name="_bpc_announce_the_show_repeatedly"></a><b>Announce the show repeatedly</b>, either:
<ul>
<li>
Before the show, as a future announcement<pre><code>-00:30:00.00 announce "MyFuture.ann" repeat 180 until 00:00:00.00;
 </code></pre>
</li>
<li>
During the show, as a current announcement<pre><code>00:00:10.00 announce "MyCurrent.ann" repeat 180;
 </code></pre>
</li>
<li>
Both before and during the show. (This is the most robust method.)<pre><code>-00:30:00.00 announce "MyFuture.ann" repeat 180 until 00:00:00.00;
00:00:10.00 announce "MyCurrent.ann" repeat 180;
 </code></pre>
</li>
</ul>

<p>
<a name="_bpc_trigger_data_reception_repeatedly"></a><b>Trigger data reception repeatedly</b>, by sending a Data trigger. This enables the client to receive enhancement files.</p>
<pre><code>00:00:20.00 trigger (1 "&lt;FTS&gt; 125.354.23.11:190&amp;MyShow") repeat 180;
 </code></pre>
<p>
Using the same repetition interval for both the announcement and data trigger keeps the two events consistently linked.</p>

<p>
<a name="_bpc_transmit_enhancement_files_repeatedly"></a><b>Transmit enhancement files repeatedly</b>, using cabinet files to ensure that all dependencies arrive with the files. You can do this either by:
<ul>
<li>
Using <b>onefile</b>, to automatically create the cabinet file.<pre><code>00:00:30.00 trigger(2 "&lt;EnhPage.htm&gt;") onefile repeat 270;
 </code></pre>
</li>
<li>
Transmitting a cabinet file explicitly.<pre><code>before 00:00:30.00-10 EnhCab.cab repeat 270; 
00:00:30.00-5 trigger(1 "&lt;CAB&gt; [bpc://MyShow/EnhCab.cab]") repeat 270;
00:00:30.00 trigger(3 "&lt;EnhPage.htm&gt;") only repeat 270;
 </code></pre>
</li>
</ul>

<p>
<a name="_bpc_send_other_triggers_as_needed"></a><b>Send other triggers</b> <b>as needed </b>throughout the show, repeating them as often as practical. Examples of additional triggers are: Nav triggers, script triggers, user triggers, etc.</p>
<pre><code>00:01:00.00 trigger (4 "&lt;JScript&gt; alert(\'Thanks for tuning in!\')");
00:02:00.00 trigger ("3001 Q:What is the square root of 25?_A:5") repeat 30 until 00:10:05.00;
00:03:00.0 trigger(3 "&lt;MyLeftPage.htm&gt;[targ:LeftSide]") onefile repeat 90;
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
