<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Connecting to WebTV for Windows</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_connecting_to_webtv_for_windows"></a>Connecting to WebTV for Windows</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Before your control can program Microsoft® WebTV® for Windows® or receive events from it, your control must connect to WebTV for Windows. It does so by calling the <b>GetActiveObject</b> Automation function. </p>
<p>
Typically, a control calls <b>GetActiveObject</b> during its initialization. Connecting to WebTV for Windows when the control first starts ensures that the control has a connection before it tries to access WebTV for Windows. Obtaining a connection before you access WebTV for Windows is important because if a connection cannot be obtained, attempting to call the methods of <b>ITVViewer</b> will return an error. For example if your control cannot connect to WebTV for Windows, because WebTV for Windows is not currently running, the control can gracefully exit or otherwise handle the error.</p>
<p>
For a detailed description of how to connect to WebTV for Windows, see <a href="tvxrf_862b.htm">Getting a Pointer to WebTV for Windows</a>. To locate more information about <b>GetActiveObject</b>, see <a href="abou1_7g11.htm">Further Information on Development Tasks in Broadcast Architecture</a>.</p>
<p>&nbsp;</p></body>
</HTML>
