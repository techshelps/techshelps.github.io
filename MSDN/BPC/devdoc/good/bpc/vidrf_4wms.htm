<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BPCVid.ReInit</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_bpc_bpcvid.reinit"></a>BPCVid.ReInit</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>ReInit </b>method requests that the video server reinitialize the filter graph. </p>
<h4>Syntax</h4>
<pre><code><i>object</i>.ReInit()</code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>object</i></dt>
<dd>
Object expression that resolves to a <a href="vidrf_36zo.htm"><b>BPCVid</b></a> object.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>ReInit </b>is typically called when an application or process changes the hardware configuration in such a way that the filter graph needs to be rebuilt. An example of an application that calls <b>ReInit </b>is a setup application that reconfigures auxiliary video input from composite to s-video.</p>
<p>
When you call the <b>ReInit </b>method, the video server sends a <a href="vidrf_3ew5.htm"><b>BPCVid.StateChange</b></a> event specifying BPC_STATE_REINIT_REQUEST to each video client. A video client is an application or component that receives a data stream from the filter graph through the video server. Applications that utilize the Video control are video clients.</p>
<p>
When a client receives a BPC_STATE_REINIT_REQUEST notification from the video server, the client must release any outstanding references to Vid.ocx objects such as <a href="vidrf_163p.htm"><b>BPCDeviceBase</b></a> or <a href="vidrf_0xwz.htm"><b>BPCDevices</b></a>. The one exception is that your application can retain references to <a href="vidrf_36zo.htm"><b>BPCVid</b></a> objects. If your video client does not release these objects, an error will result when these objects are used after the filter graph is reinitialized.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Note that Video controls automatically handle BPC_STATE_REINIT_REQUEST notifications, by releasing references to Vid.ocx objects. Therefore, if you are embedding the Video control in a Web page or application that does not contain any other references to Vid.ocx objects, you do not need to handle BPC_STATE_REINIT_REQUEST notifications. </p>
<p>
After all video clients have been notified the filter graph is about to be reinitialized, the video server fires a <a href="vidrf_3ew5.htm"><b>BPCVid.StateChange</b></a> event specifying BPC_STATE_REINIT_STARTED. It then destroys and recreates the filter graph. Once the filter graph has been successfully recreated, the video server sends a BPC_STATE_REINIT_COMPLETE notification. </p>
<p>
When video clients receive the BPC_STATE_REINIT_COMPLETE notification, they are able to reenumerate and reselect devices. Note that the device list may have changed as a consequence of the reinitialization. </p>
<p>
If a video client calls a method that requests an object from the video server during the reinitialization (between receiving the BPC_STATE_REINIT_STARTED and BPC_STATE_REINIT_COMPLETE notifications) the video server blocks the method call until the reinitialization is complete. When the filter graph has been recreated, the video server processes the blocked method calls.</p>
<h4>Examples</h4>
<p>
The following example implements an <a href="vidrf_3ew5.htm"><b>BPCVid.StateChange</b></a> event handler that responds to BPC_STATE_REINIT_XXX notifications. This illustrates the functionality you should implement if your application uses the Video control and contains references to other Vid.ocx objects.</p>
<pre><code>Private Sub MyApp_StateChange( lpdDevice As BPCDeviceBase, _
                               oldState As Long, newState As Long)
  Select Case (newState)
  Case(BPC_STATE_REINIT_REQUEST)
    'Release all references to Vid.ocx objects except BPCVid
    '(This example shows how to do this for an 
    'application that contains a reference to 
    'a BPCDevices member variable, m_devices and 
    'a BPCDeviceBase member variable, m_inputdevice)
    Set m_devices = Nothing
    Set m_inputdevice = Nothing
 
    'Optional - you can set a flag so that other subroutines in the
    'application can check the reinitialization state 
    'of the filter graph.
    m_lReinitState = BPC_STATE_REINIT_REQUEST
 
  Case(BPC_STATE_REINIT_STARTED)
    'Optional - you can set a flag so that other subroutines in the
    'application can check the reinitialization state 
    'of the filter graph.
    m_lReinitState = BPC_STATE_REINIT_STARTED
 
  Case(BPC_STATE_REINIT_COMPLETE)
    'Reenumerate the devices
    Set m_devices = vid.Devices
 
    'Reset any needed devices. 
    '(This example displays resetting the input device.)
    For Each Device In m_devices 
      If Device.HasChannel 
        Then m_inputdevice = Device 
        Exit For 
      End If
    Next
 
    'Optional - you can set a flag so that other subroutines in the
    'application can check the reinitialization state 
    'of the filter graph.
    m_lReinitState = BPC_STATE_REINIT_COMPLETE
 
  'Optional - you can handle cases other than those listed above
  'Case (...)
  Case Else
 
  End Select
End Sub
 </code></pre>
<p>
You can easily adapt the preceding example into an event handler for a Web page or application that uses the Video control but does not contain references to Vid.ocx objects. Simply remove the BPC_STATE_REINIT_REQUEST case statement. Because the Video control already implements this functionality, handling BPC_STATE_REINIT_REQUEST notifications is not necessary for such an application.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in vidsvr.odl.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in vid.ocx.<br>
<b>&nbsp;&nbsp;Unicode: </b>Yes.</p>
<h4>See Also</h4>
<p>
<a href="vidrf_4vag.htm">Reinitializing the Filter Graph</a>, <a href="vidrf_3ew5.htm"><b>BPCVid.StateChange</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
