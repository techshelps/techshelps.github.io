<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>“Cleaning” Records Before Synchronizing</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2_cleaning__records_before_synchronizing"></a>“Cleaning” Records Before Synchronizing</h3>
<p>
In some applications, a certain percentage of records are discarded because of bad or missing information. For example, in an application where information on hard copy forms is entered in a database, a certain percentage of these records must be discarded because they are incomplete. In other applications, some data might need “fixing” before it can be used. For example, a field in a table might be designed to hold a string of comma-separated numbers, but might instead contain non-comma separators, letters, or other mistakes.</p>
<p>
When data is synchronized, all updated data is dispersed, regardless of whether it is useful to a particular application. Bad data in one database becomes bad data in multiple databases when synchronization occurs. Therefore, when building a replication system for your application, you might want to consider writing procedures that either purge or fix data before it is replicated to other systems.</p>
</BODY>
</HTML>
