<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Checking for Errors with Page Locking</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2checking_for_errors_with_page_locking"></a>Checking for Errors with Page Locking</h4>
<p>
When using page locks, your code must check to see if the attempted lock succeeded before proceeding. As with the previous examples, use the four-step process of turning off error handling, attempting the operation that will initiate a lock, checking for errors, and finally, turning on error handling.</p>
<p>
The following table describes the most common page-locking multiuser errors your code will encounter.</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Error number and text</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Cause and suggested response</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>3186</b>  Couldn’t save; currently locked by user &lt;<i>name</i>&gt; on machine &lt;<i>name</i>&gt;.</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
This error occurs when a user attempts to update a page that contains a read lock placed by another user.<p>
To handle this error, wait for a short interval, and then try to save the record again. Optionally, you can inform users of the problem and allow them to indicate whether or not they want to retry the operation.</p>
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>3197</b>  The Microsoft Jet database engine stopped the process because you and another user are attempting to change the same data at the same time.</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
This error occurs when you use the <b>Edit</b> method or the <b>Update</b> method and another user has changed the current record since you opened the <b>Recordset</b> or last read data from the record.<p>
If this error occurs when you use the <b>Edit</b> method, you may want to refresh the user’s view of the data with the current data and then attempt the <b>Edit</b> method a second time.</p>
<p>
If this error occurs when you use the <b>Update</b> method, you’re using optimistic locking and the record has changed since you used the <b>Edit</b> method. Inform the user that someone else has changed the data. You may want to display the current data and give the user the choice of whether to overwrite the other user’s changes or cancel edits.</p>
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>3260</b>  Couldn’t update; currently locked by user &lt;<i>name</i>&gt; on machine &lt;<i>name</i>&gt;.</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
This error occurs when you use the <b>Edit</b> method and the page containing the current record is locked.<p>
This error also occurs when you use the <b>AddNew</b> method or the <b>Update</b> method to save a record on a locked page. This situation can occur when a user is trying to save a new record or when you’re using optimistic locking and another user locks the page.</p>
<p>
To handle this error, wait for a short interval, and then try to save the record again. Optionally, you can inform users of the problem and allow them to indicate whether or not they want to retry the operation.</p>
</font></td>
</tr>
</table><br>
<p>
<b>See Also   </b>For more information about Microsoft Jet error numbers, see Appendix&nbsp;D, “<a href="apd_body.htm">Error Reference</a>.”</p>
<p>
In the previous pessimistic locking example, the code checked to see if an error occurred and reacted regardless of the type of error. This example can be made more versatile by actually checking the error that occurs and responding to it. The following function modifies the pessimistic locking example to include better error handling:</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub EditARecord()
&#09;Const conMultiUserEdit As Integer = 3197
&#09;Const conRecordLocked As Integer = 3260
&#09;Dim dbs As Database, rst As Recordset
&#09;Dim intLockCount As Integer, intRndCount As Integer
&#09;Dim intChoice As Integer, intX As Integer
&#09;Dim strDbPath As String
  
&#09;On Error GoTo 0
&#09;strDbPath = &quot;C:\JetBook\Samples\NorthwindTables.mdb&quot;
&#09;' Open the database in shared mode.
&#09;Set dbs = OpenDatabase(strDbPath, False)
  
&#09;' Open the Orders table in shared mode.
&#09;Set rst = dbs.OpenRecordset(&quot;Orders&quot;, dbOpenDynaset, dbSeeChanges, dbPessimistic)
  
&#09;With rst
&#09;&#09;' Setting LockEdits to True tells Jet to use
&#09;&#09;' pessimistic locking.
&#09;&#09;.LockEdits = True
&#09;&#09;.FindFirst &quot;[OrderID]=10565&quot;
&#09;
&#09;&#09;' Try to edit the row. This will cause a lock attempt.
&#09;&#09;On Error GoTo Err_EditARecord
&#09;&#09;' If record is locked, edit will fail.
&#09;&#09;.Edit
&#09;
&#09;&#09;' Make changes and commit.
&#09;&#09;![ShipAddress] = &quot;New Address 3&quot;
&#09;&#09;.Update
&#09;End With

Exit_EditARecord:
&#09;On Error Resume Next
&#09;rst.Close
&#09;dbs.Close
&#09;Exit Sub
  
Err_EditARecord:
&#09;Select Case Err.Number
&#09;&#09;' Data has changed since last read.
&#09;&#09;Case conMultiUserEdit
&#09;&#09;&#09;Resume
&#09;&#09;Case conRecordLocked
&#09;&#09;&#09;' Row is locked.
&#09;&#09;&#09;intLockCount = intLockCount + 1
&#09;&#09;&#09;' Tried to get the lock twice already.
&#09;&#09;&#09;If intLockCount &gt; 2 Then
&#09;&#09;&#09;&#09;' Allow user to choose Cancel/Retry.
&#09;&#09;&#09;&#09;intChoice = MsgBox(Err.Description &amp; &quot; Retry?&quot;, _
&#09;&#09;&#09;&#09;&#09;vbYesNo + vbQuestion)
&#09;&#09;&#09;&#09;If intChoice = vbYes Then
&#09;&#09;&#09;&#09;&#09;intLockCount = 1
&#09;&#09;&#09;&#09;Else
&#09;&#09;&#09;&#09;&#09;Resume FailedEdit
&#09;&#09;&#09;&#09;End If
&#09;&#09;&#09;End If
&#09;&#09;
&#09;&#09;&#09;' Yield to Windows.
&#09;&#09;&#09;DoEvents
&#09;&#09;&#09;' Delay a short random interval,
&#09;&#09;&#09;' longer each time the lock fails.
&#09;&#09;&#09;intRndCount = intLockCount ^ 2 * Int(Rnd * 3000 + 1000)
&#09;&#09;&#09;For intX = 1 To intRndCount: Next intX
&#09;&#09;&#09;' Try the edit again.
&#09;&#09;&#09;Resume
&#09;&#09;Case Else
&#09;&#09;   ' Unanticipated error.
&#09;&#09;&#09;MsgBox (&quot;Error &quot; &amp; Err.Number &amp; &quot;: &quot; &amp; Err.Description)
&#09;&#09;&#09;Resume FailedEdit
&#09;End Select
  
FailedEdit: ' Begin contingency procedure if edit fails.
&#09;&#09;MsgBox &quot;This row could not be edited. Please try again later.&quot;
&#09;&#09;GoTo Exit_EditARecord
End Sub</font></pre>
<p>
This code works by moving the program’s execution to the Err_EditARecord section when an error occurs. The code in the Err_EditARecord section checks the specific error message and tries to correct the problem. It also allows the user to retry or cancel the operation. Note that it specifies a random interval for retrying the operation. This is an important technique for making sure two users vying for the same record don’t end up in a deadlock situation where code is trying to lock the record at the same time. By introducing a random element into the timing loop, you can minimize the chances of a deadlock.</p>
</BODY>
</HTML>
