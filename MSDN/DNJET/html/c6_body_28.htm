<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Pessimistic Locking</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2pessimistic_locking"></a>Pessimistic Locking</h4>
<p>
Using pessimistic locking, the engine locks the page that contains the record being edited as soon as the <b>Edit</b> method is issued, and doesn’t release the lock until the changes to the record are explicitly committed or canceled. Pessimistic locking is the default locking mode for recordsets.</p>
<p>
<b>Note   </b>Explicit transactions change the behavior regarding when a lock is released. For more information, see the Note at the end of the next section, “Optimistic Locking.”</p>
<p>
The primary advantage of pessimistic locking is that after you have obtained a lock, you know that you will not encounter any locking conflicts as long as the record is locked. Additionally, pessimistic locking is the only way to guarantee that your application reads the most current data, because one user can’t change a record after another has begun editing it.</p>
<p>
The disadvantage of pessimistic locking is that the entire page containing the record is locked for the duration of the procedure that has edited and locked the record. If you’re giving users access to data through a user interface, there is also the problem of a user starting an edit on a record, locking it, and leaving the computer for a period of time. This causes not only the record the user is editing to be locked, but possibly other records that reside within the locked page.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To use pessimistic locking in your code</b>
<ol>
<li>
Open a table- or dynaset-type <b>Recordset</b> on the data you want to edit.<br><br></li>
<li>
Enable pessimistic locking by setting the <b>LockEdits</b> property of the <b>Recordset</b> to <b>True</b>.<br><br></li>
<li>
Move to the record you’re interested in.<br><br></li>
<li>
Try to use the <b>Edit</b> method to see if the record can be locked. If not, prompt the user to retry or cancel.<br><br></li>
<li>
Once the record is locked, make changes to the record.<br><br></li>
<li>
Save the changes to the record by using the <b>Update</b> method. After your changes are saved, the lock is released.</li>
</ol>
<p>
The following code gives an example of how to implement pessimistic locking. In this example, <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database
Dim rst As Recordset
Dim blnEdit As Boolean

' Open the database in shared mode.
Set dbs = OpenDatabase(strDbPath, False)
  
' Open the Orders table in shared mode for pessimistic locking.
Set rst = dbs.OpenRecordset(&quot;Orders&quot;, dbOpenDynaset, dbSeeChanges, dbPessimistic)
  
With rst
&#09;' Setting LockEdits to True tells Jet to use
&#09;' pessimistic locking.
&#09;.LockEdits = True
&#09;' Search for record.
&#09;.FindFirst &quot;[OrderID]=10565&quot;
&#09;
&#09;' Try to edit the record. This causes a lock attempt.
&#09;blnEdit = True
&#09;Do While blnEdit = True
&#09;&#09;On Error Resume Next
&#09;&#09;.Edit
&#09;&#09;' If lock fails because another user is editing
&#09;&#09;' the record, allow the user to retry.
&#09;&#09;If Err.Number &lt;&gt; 0 Then
&#09;&#09;&#09;If MsgBox(&quot;Cannot edit: &quot; &amp; Err.Description &amp; &quot; Try again?&quot;, _
&#09;&#09;&#09;&#09;vbYesNo + vbQuestion) &lt;&gt; vbYes Then
&#09;&#09;&#09;&#09;blnEdit = False
&#09;&#09;&#09;End If
&#09;&#09;Else
&#09;&#09;&#09;Exit Do
&#09;&#09;End If
&#09;Loop
&#09;&#09;
&#09;' If lock attempt was successful, make changes and commit.
&#09;If blnEdit Then
&#09;&#09;![ShipAddress] = &quot;New Address 1&quot;
&#09;&#09;.Update
&#09;End If
End With
&#09;  
rst.Close
dbs.Close</font></pre>
<p>
<b>See Also   </b>For more information about working with recordsets, see Chapter&nbsp;5, “<a href="c5_body.htm">Working with Records and Fields</a>.” For more information about setting pessimistic or optimistic locking, search the DAO Help index for “LockEdits property.”</p>
</BODY>
</HTML>
