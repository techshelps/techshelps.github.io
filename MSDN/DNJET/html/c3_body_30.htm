<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Permanent QueryDef Object</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2creating_a_permanent_querydef_object"></a>Creating a Permanent QueryDef Object</h3>
<p>
A <b>QueryDef</b> object is based on an SQL statement. To create a new permanent <b>QueryDef</b> object, you must provide a value for the <i>name</i> argument of the <b>CreateQueryDef</b> method. You can specify the SQL statement in the <i>sqltext</i> argument of the <b>CreateQueryDef</b> method, or in the <b>SQL</b> property of the newly created <b>QueryDef</b> object.</p>
<p>
The following code creates a <b>QueryDef</b> object. In this example, <code>dbs</code> is a <b>Database</b> object, <code>strQueryName</code> is the name for the new <b>QueryDef</b> object, and <code>strSQL</code> is the SQL statement on which the <b>QueryDef</b> object is based:</p>
<pre><FONT FACE="Courier New" SIZE="3">Set qdf = dbs.CreateQueryDef(strQueryName)

' Set SQL property.
qdf.SQL = strSQL
</font></pre>
<p>
You may initialize the <code>strSQL</code> variable with an SQL statement such as the following, which returns a result set containing total sales for each employee for May 1996:</p>
<pre><FONT FACE="Courier New" SIZE="3">strSQL = &quot;SELECT Orders.EmployeeID, &quot; &amp; _
&#09;&quot;Sum((UnitPrice * Quantity) - Discount) AS ExtendedPrice &quot; &amp; _
&#09;&quot;FROM Orders INNER JOIN [Order Details] ON &quot; &amp; _
&#09;&quot;Orders.OrderID = [Order Details].OrderID &quot; &amp; _
&#09;&quot;WHERE (((Orders.OrderDate) &quot; &amp; _
&#09;&quot;Between #5/1/96# And #5/31/96#)) &quot; &amp; _
&#09;&quot;GROUP BY Orders.EmployeeID;&quot;</font></pre>
<p>
Note that unlike with other collections, such as <b>Properties</b>, <b>Fields</b>, or <b>Indexes</b>, it’s not necessary to explicitly append the <b>QueryDef</b> object to the <b>QueryDefs</b> collection of the database. Simply assigning values for the <i>name</i> argument and the <b>SQL</b> property immediately creates the <b>QueryDef</b> object.</p>
<p>
You can immediately use this new <b>QueryDef</b> object in your application. You can create a <b>Recordset</b> object from it, join it to another query or table, base a report on it, and so on.</p>
</BODY>
</HTML>
