<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Retrieving Properties</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2retrieving_properties"></a>Retrieving Properties</h4>
<p>
To identify the properties associated with an object, you write code to iterate through the object’s <b>Properties</b> collection, retrieving the information you want. Some special cases when referencing properties may be problematic:
<ul>
<li>
Some properties are not readable. The <b>Password</b> property of the <b>User</b> object is a good example. You can set the value of the property through code, but you can’t retrieve the value. (If you could, it would be an obvious hole in the Microsoft Jet security model.)<br><br></li>
<li>
Some properties are readable at some times, but not at others. For example, you can’t read the <b>Value</b> property of a <b>Field</b> object in a recordset if there is no current record in the recordset.<br><br></li>
<li>
Certain properties that you are explicitly looking for may not exist. For example, if you’re using Microsoft Access, you may have code that retrieves the <b>Description</b> property of a <b>TableDef</b> object. However, unless you explicitly add a description to the table through the Microsoft Access user interface or through DAO code, this user-defined property doesn’t exist, and a run-time error occurs when the code executes.</li>
</ul>
<p>
The following code displays each of the properties of each <b>User</b> object in the current <b>Workspace</b>. After it has tried to retrieve the property value, it checks to see if an error has occurred, and if so, checks the specific error number. If the error is anticipated, as in the case of trying to retrieve a write-only property (error 3251), error text is printed. If the error isn’t anticipated, the code displays a message to the user.</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim usr As User
Dim prp As Property
Dim varValue As Variant

For Each usr In Workspaces(0).Users
&#09;For Each prp In usr.Properties
&#09;&#09;' Disable error handling.
&#09;&#09;On Error Resume Next
&#09;&#09;varValue = prp.Value
&#09;&#09;' See if an error occurred.
&#09;&#09;Select Case Err
&#09;&#09;&#09;Case 3251&#09;&#09;&#09;&#09;' Operation not supported error.
&#09;&#09;&#09;&#09;Debug.Print prp.Name &amp; &quot;: &lt;Error &quot; &amp; Err _
&#09;&#09;&#09;&#09;&#09;&amp; &quot;: &quot; &amp; Err.Description &amp; &quot;&gt;&quot;
&#09;&#09;&#09;Case 0&#09;&#09;&#09;&#09;&#09;' No error.
&#09;&#09;&#09;&#09;Debug.Print prp.Name &amp; &quot;: &quot; &amp; varValue
&#09;&#09;&#09;Case Else&#09;&#09;&#09;&#09;' Unanticipated error.
&#09;&#09;&#09;&#09;MsgBox &quot;Error: &quot; &amp; Err &amp; vbCrLf &amp; Err.Description
&#09;&#09;End Select
&#09;&#09;Err.Clear
&#09;&#09;' Re-enable error handling.
&#09;&#09;On Error GoTo 0
&#09;Next prp 
&#09;Debug.Print
Next usr</font></pre>
</BODY>
</HTML>
