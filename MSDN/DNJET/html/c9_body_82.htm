<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Record Locking</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2record_locking"></a>Record Locking</h4>
<p>
When you open a <b>Recordset</b> object, you can also specify the type of record locking you want to use by setting the <i>lockedits</i> argument of the <b>OpenRecordset</b> method to the appropriate constant. The following table lists the five constants you can use for the <i>lockedits</i> argument of the <b>OpenRecordset</b> method, and describes the ODBC cursor lock type to which they correspond.</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Constant</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>ODBC cursor lock type</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbOptimistic</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Uses optimistic locking to determine how changes are made to the <b>Recordset</b> object in a multiuser environment. The page containing the record that is being edited is locked only while the record is being updated by the <b>Update</b> method.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbPessimistic</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Uses pessimistic locking to determine how changes are made to the <b>Recordset</b> object in a multiuser environment. The page containing the record that is being edited is locked as soon as you use the <b>Edit</b> method.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbOptimisticValue</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Uses optimistic concurrency based on record values. The cursor compares data values in old and new records to determine if changes have been made since the record was last accessed.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbOptimisticBatch</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Uses batch optimistic updating. For more information, see “Using Batch Optimistic Updating” earlier in this section.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbReadOnly</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Default for ODBCDirect workspaces. Prevents users from making changes to the data in the <b>Recordset</b> object.</font></td>
</tr>
</table><br>
<p>
When values or record versions are compared to test concurrency, the original record as it was prior to using the <b>Edit</b> or <b>AddNew</b> methods is compared with the record as it exists in the temporary buffer prior to being committed by the <b>Update</b> method. If the record data changed in this time frame, a trappable error results. At this point, your temporary record buffer is lost. To carry out the changes, you must refresh the current record by using <code>Move 0</code>, then use the <b>Edit</b> or <b>AddNew</b> method, fill in the new values, and try the <b>Update</b> method again.</p>
<p>
Some combinations of cursors and lock types will not work together. For example, with Microsoft SQL Server version&nbsp;6.0 cursors, if you specify the <b>dbOpenSnapshot</b> constant for the <i>type</i> argument of the <b>OpenRecordset</b> method, you must specify the <b>dbReadOnly</b> constant for the <i>lockedits</i> argument. Static cursors do not support the other types of record locking. Which combinations work together depends on the cursor driver. For specific information about compatible lock types, refer to your cursor driver documentation.</p>
<p>
Your cursor driver can handle different combinations of cursor types and lock types in different ways. In some cases, it may return an error if it does not handle a specific combination. In other cases, it may switch to the nearest possible combination that it supports. If an error occurs, DAO places the error information in the <b>Errors</b> collection.</p>
</BODY>
</HTML>
