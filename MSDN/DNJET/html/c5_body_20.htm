<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Modifying an Existing Record</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2modifying_an_existing_record"></a>Modifying an Existing Record</h3>
<p>
Changing an existing record in a <b>Recordset</b> object is a four-step process:
<ol>
<li>
Go to the record you want to change.<br><br></li>
<li>
Use the <b>Edit</b> method to prepare the current record for editing.<br><br></li>
<li>
Make the necessary changes to the record.<br><br></li>
<li>
Use the <b>Update</b> method to save the changes to the current record.</li>
</ol>
<p>
The following example illustrates how to change the job titles for all sales representatives in a table called Employees. In this example, <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database, rst As Recordset, strCriteria As String

Set dbs = OpenDatabase(strDbPath)
' Open dynaset-type recordset.
Set rst = dbs.OpenRecordset(&quot;Employees&quot;, dbOpenDynaset)
strCriteria = &quot;Title = &quot;&quot;Sales Representative&quot;&quot;&quot;
With rst
&#09;' Move to start of recordset.
&#09;.MoveFirst
&#09;' Find first matching record.
&#09;.FindFirst strCriteria
&#09;Do While Not .NoMatch
&#09;&#09;' Edit record and update.
&#09;&#09;.Edit
&#09;&#09;!Title = &quot;Account Executive&quot;
&#09;&#09;.Update
&#09;&#09;' Find next matching record.
&#09;&#09;.FindNext strCriteria
&#09;Loop
End With</font></pre>
<p>
If you don’t use the <b>Edit</b> method before you try to change a value in the current record, a run-time error occurs.</p>
<p>
<b>Important   </b>If you change the current record and then move to another record or close the <b>Recordset</b> object without first using the <b>Update</b> method, your changes are lost without warning. For example, omitting the <b>Update</b> method from the preceding example results in no changes being made to the Employees table.</p>
<p>
You can also terminate the <b>Edit</b> method and any pending transactions without saving changes by using the <b>CancelUpdate</b> method. While you can terminate the <b>Edit</b> method just by moving off the current record, this is not practical when the current record is the first or last record in the <b>Recordset</b> object, or is a new record. It’s therefore generally simpler to use the <b>CancelUpdate</b> method.</p>
<h5>Inconsistent Updates</h5>
<p>
Dynaset-type <b>Recordset</b> objects can be based on a multiple-table query, with the query often implementing a one-to-many relationship. For example, suppose you want to create a multiple-table query that combines fields from the Orders and Order Details tables. Generally speaking, you can’t change values in the Orders table because it’s on the “one” side of the relationship. Depending on your application, however, you may want to be able to make changes to the Orders table. To make it possible to freely change the values on the “one” side of a one-to-many relationship, use the <b>dbInconsistent</b> constant of the <b>OpenRecordset</b> method to create an <i>inconsistent</i> dynaset.</p>
<p>
<code>Set rst = dbs.OpenRecordset(&quot;Sales Totals&quot;,, dbInconsistent)</code></p>
<p>
When you update an inconsistent dynaset, you can easily destroy the relational integrity of the data in the dynaset. You must take care to understand how the data is related across the one-to-many relationship and update the values on both sides in a way that preserves data integrity.</p>
<p>
The <b>dbInconsistent</b> constant is available only for dynaset-type <b>Recordset</b> objects. It’s ignored for table-, snapshot-, and forward-only-types, but no compile or run-time error is returned if <b>dbInconsistent</b> is used with those types of <b>Recordset</b> objects.</p>
<p>
Even with an inconsistent <b>Recordset</b> object, some fields may not be updatable. For example, you can’t change the value of an AutoNumber field, and a <b>Recordset</b> object based on certain linked tables may not be updatable.</p>
<p>
<b>See Also   </b>For more information about consistent and inconsistent updates, see Chapter&nbsp;4, “<a href="c4_body.htm">Queries</a>.”</p>
</BODY>
</HTML>
