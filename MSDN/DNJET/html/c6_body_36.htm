<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing a Custom Locking Scheme</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2implementing_a_custom_locking_scheme"></a>Implementing a Custom Locking Scheme</h3>
<p>
You might encounter situations in your multiuser application where the behavior of page locking is not appropriate, and where the use of optimistic locking is not a suitable workaround. In this case, you may want to consider your own custom locking scheme. Implemented through a set of routines that you write, custom locking completely bypasses Microsoft Jet locking. Your code controls locking by identifying when a record should be locked and unlocked.</p>
<p>
The most common approach to this technique is to have a <i>semaphore</i>, or lock table, that identifies when a record is locked. The lock table typically identifies records by storing the key value of the record, the lock status (locked or unlocked), and the name of the user who has the record locked.</p>
<p>
Implementing a custom locking scheme requires a great deal of design, implementation, and testing time. In many cases, a custom locking scheme cannot duplicate the functionality that is built into Microsoft Jet. For example, even if you implement single-record locking, it would be very difficult to handle data in a recordset that is based on more than one table, because you would have to determine all the tables that contain records that have to be locked. Custom locking schemes are most suitable for situations where the data to be locked is stored in a few tables and where the application is not based on a data model with complex joins and relationships.</p>
</BODY>
</HTML>
