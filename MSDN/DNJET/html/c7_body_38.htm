<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Synchronizing the Ring Topology</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2synchronizing_the_ring_topology"></a>Synchronizing the Ring Topology</h3>
<p>
The following code provides a simple example of implementing synchronization by using a ring topology. The procedure opens one of the replicas in a ring topology and attempts to synchronize this replica with the next replica in the ring. In this procedure, each replica has only one synchronization partner and synchronizes with only that partner. This code runs in each replica, so that each replica can synchronize with its partner independent of the other replicas in the set. The last replica in the list has the first replica in the list as its synchronization partner.</p>
<p>
The example assumes that the list of replica paths and file names is stored in a table named PathsRing in each of the replicas in the ring. The PathsRing table contains the following key fields: PathID, which is the numeric identifier for each record and the primary key; and Path, which is a text field containing the path and file name of a replica.</p>
<p>
To try this code from the sample applications, run the RingSync function from the JetBook\Samples\JetSamples.mdb database, and pass in the name of one of the databases in the JetBook\Samples\Replicas subfolder&nbsp;— either SampleDesignMaster.mdb or SampleReplica.mdb. Or you can import the PathsRing table into your own replicable database, and run the code from there.</p>
<pre><FONT FACE="Courier New" SIZE="3">Function RingSync(strDbPath As String) As Boolean
&#09;Dim dbs As Database
&#09;Dim rst As Recordset

&#09;On Error GoTo Err_RingSync
&#09;
&#09;' Open a replica in the ring.
&#09;Set dbs = OpenDatabase(strDbPath)
&#09;
&#09;' Open recordset to access path information for replicas.
&#09;Set rst = dbs.OpenRecordset(&quot;PathsRing&quot;, dbOpenSnapshot)

&#09;On Error Resume Next
&#09;rst.FindFirst &quot;[Path] = &quot;&quot;&quot; &amp; dbs.Name &amp; &quot;&quot;&quot;&quot;
&#09;
&#09;With rst
&#09;&#09;' If passed-in database is not in the list, add it.
&#09;&#09;If .NoMatch Then
&#09;&#09;&#09;.AddNew
&#09;&#09;&#09;!Path = strDbPath
&#09;&#09;&#09;.Update
&#09;&#09;&#09;' Move to newly created record.
&#09;&#09;&#09;.Bookmark = .LastModified
&#09;&#09;End If
&#09;&#09;' Move to next record to find synchronization partner.
&#09;&#09;.MoveNext
&#09;&#09;' Check for end of recordset.
&#09;&#09;If .EOF Then
&#09;&#09;&#09;' If at end of recordset, move to first record.
&#09;&#09;&#09;.MoveFirst
&#09;&#09;End If
&#09;&#09;' Synchronize passed-in database with its partner.
&#09;&#09;dbs.Synchronize !Path
&#09;End With

&#09;RingSync = True

Exit_RingSync:
&#09;On Error Resume Next
&#09;rst.Close
&#09;dbs.Close
&#09;Exit Function

Err_RingSync:
&#09;MsgBox &quot;Error: &quot; &amp; Err.Number &amp; &quot; - &quot; &amp; Err.Description
&#09;RingSync = False
&#09;Resume Exit_RingSync
End Function</font></pre>
<p>
You could write this function so that if a replica’s synchronization partner cannot be found, the function opens one of the other replicas in the PathsRing table and synchronizes with it.</p>
</BODY>
</HTML>
