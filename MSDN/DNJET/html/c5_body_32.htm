<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Engine’s Two Modes</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2the_engine_s_two_modes"></a>The Engine’s Two Modes</h4>
<p>
Microsoft Jet has two modes of operation when it comes to transaction processing: synchronous and asynchronous. Synchronous processing was the only mode available in version 2.<i>x</i> of the engine.</p>
<p>
<i>Synchronous processing</i> allows nothing else to occur until the current operation is completed. This is the model that Microsoft Jet 2.<i>x</i> follows.</p>
<p>
<i>Asynchronous processing</i> involves the engine queuing up a series of changes to the database. For example, several recordset <b>Update</b> methods could be grouped together. At some point, these updates are written to disk and the engine begins grouping new changes. The updates occur when one the following happens:
<ul>
<li>
A specified period of time passes after the first stored change (controlled by either the FlushTransactionTimeout or the ExclusiveAsyncDelay and SharedAsyncDelay registry settings).<br><br></li>
<li>
The internal memory set aside for updates (as defined by the MaxBufferSize registry setting) is exceeded.</li>
</ul>
<p>
To better understand these modes, consider the following DAO code:</p>
<pre><FONT FACE="Courier New" SIZE="3">Set rst = dbs.OpenRecordset(&quot;SELECT * FROM Customers&quot;)
While Not rst.EOF
 &#09;rst.Edit
  &#09;'......
  &#09;rst.Update
  &#09;rst.MoveNext
Wend</font></pre>
<p>
With synchronous processing, Microsoft Jet would not continue the loop until <code>rst.Update</code> completed successfully.</p>
<p>
With asynchronous processing, Microsoft Jet would immediately process <code>rst.Update</code>, and while it was using a thread to do the work, would continue on another thread to process <code>rst.MoveNext</code>.</p>
<p>
Microsoft Jet places temporary files on disk according to the paths specified by the TEMP environment variable. The behavior is the same for Windows&nbsp;95 and Windows&nbsp;NT Workstation or Windows&nbsp;NT Server.</p>
</BODY>
</HTML>
