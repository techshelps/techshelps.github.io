<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Deleting Records from the Employee Database</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2deleting_records_from_the_employee_database"></a>Deleting Records from the Employee Database</h4>
<p>
The <b>OnEditDelete</b> member function deletes records from the Employee database:</p>
<pre><FONT FACE="Courier New" SIZE="3">void CDAOEMPDoc::OnEditDelete() 
{
&#09;//If table is empty, there is nothing to delete.
&#09;if(m_bEmptyTable)
&#09;&#09;return;

&#09;//Delete method depends on the current mode.
&#09;short nEditMode = m_cEmpRecordSet.GetEditMode();

&#09;try
&#09;&#09;{
&#09;&#09;switch (nEditMode)
&#09;&#09;&#09;{
&#09;&#09;&#09;case dbEditNone: // Just delete it.
&#09;&#09;&#09;&#09;{
&#09;&#09;&#09;&#09;m_cEmpRecordSet.Delete();
&#09;&#09;&#09;&#09;m_cEmpRecordSet.MoveFirst();
&#09;&#09;&#09;&#09;break;
&#09;&#09;&#09;&#09;}
&#09;
&#09;&#09;&#09;case dbEditInProgress: //Forget changes.
&#09;&#09;&#09;&#09;{
&#09;&#09;&#09;&#09;m_cEmpRecordSet.CancelUpdate();
&#09;&#09;&#09;&#09;m_cEmpRecordSet.Delete();
&#09;&#09;&#09;&#09;m_cEmpRecordSet.MoveFirst();
&#09;&#09;&#09;&#09;break;
&#09;&#09;&#09;&#09;}

&#09;&#09;&#09;case dbEditAdd: //If new record, go back to last known one.
&#09;&#09;&#09;&#09;{
&#09;&#09;&#09;&#09;m_cEmpRecordSet.CancelUpdate();
&#09;&#09;&#09;&#09;m_cEmpRecordSet.SetBookmark(m_cLastGoodRecord);
&#09;&#09;&#09;&#09;}
&#09;&#09;&#09;}

&#09;&#09;UpdateAllViews(NULL);
&#09;&#09;}

&#09;catch (CdbException e)
&#09;&#09;{
&#09;&#09;CdbLastOLEError exError;
&#09;&#09;TCHAR szBuf[256];

&#09;&#09;wsprintf(szBuf, _T(&quot;Error 0x%lx : %s\n&quot;), e.m_hr, (LPCTSTR) exError.GetDescription());
&#09;&#09;AfxMessageBox(szBuf);
&#09;&#09;}
}</font></pre>
<p>
The behavior of this member function depends on whether the current record is new or has been edited. The <b>OnEditDelete</b> function uses <b>case</b> statement logic based on the value returned by the <b>GetEditMode</b> method. Note that dbDAO conveniently defines the same data access constants as Visual Basic DAO, such as <b>dbEditNone</b>. Depending on this value, the <b>OnEditDelete</b> function behaves as follows:
<ul>
<li>
If the record has not been edited (<b>dbEditNone</b>), delete it and move to the first record in the table.<br><br></li>
<li>
If the record has been edited (<b>dbEditInProgress</b>), first cancel the update, then delete the record and move to the first record in the table.<br><br></li>
<li>
If the record is a newly added record (<b>dbEditAdd</b>), first cancel the update, and then move to the previous record using the saved bookmark. There is no need to call the <b>Delete</b> method, because newly added records are not part of the recordset until the <b>Update</b> method is called.</li>
</ul>
<p>
In all three cases, it is necessary to update the view by calling the <b>UpdateAllViews</b> function.</p>
</BODY>
</HTML>
