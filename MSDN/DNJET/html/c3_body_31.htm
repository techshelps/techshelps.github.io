<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting and Retrieving QueryDef Object Properties</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2setting_and_retrieving_querydef_object_properties"></a>Setting and Retrieving QueryDef Object Properties</h4>
<p>
Some properties of a <b>QueryDef</b> object can’t be set in code. For example, the <b>Type</b> property is a read-only property that indicates the type of SQL statement used to create the <b>QueryDef</b> object. The value of the <b>Type</b> property may be one of <b>dbQSelect</b>, <b>dbQCrosstab</b>, <b>dbQMakeTable</b>, and so on, depending on the value of the <b>SQL</b> property of the <b>QueryDef</b> object.</p>
<p>
The <b>ReturnsRecords</b> property is always created when you add a new <b>QueryDef</b> object to the database, but it has meaning only in the context of an SQL pass-through query. If you are creating a pass-through <b>QueryDef</b> object, you should specify whether the query performs an action (such as DELETE or INSERT), or whether it returns its result as a set of records. Microsoft Jet uses this setting to determine whether to create a <b>Recordset</b> object to contain the results of the pass-through query when it’s executed. It’s also used to indicate whether the <b>QueryDef</b> object can be used in an SQL SELECT statement to join to another table or <b>QueryDef</b> object.</p>
<p>
Chapter&nbsp;2, “Introducing Data Access Objects,” explained that a <b>QueryDef</b> object can be both a permanent object stored in the database and a temporary object created and executed within code. Certain properties, such as <b>RecordsAffected</b>, have a value only after the <b>QueryDef</b> object is executed. For example, the following code creates a permanent <b>QueryDef</b> object that deletes records from the Orders table, and then executes the <b>QueryDef</b> object. After the <b>QueryDef</b> object executes, the <b>RecordsAffected</b> property contains the number of records that were deleted. In this example, <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database
Dim qdf As QueryDef
Dim lngReturn As Long

Set dbs = OpenDatabase(strDbPath)

' Delete any existing QueryDef object with same name.
On Error Resume Next
dbs.QueryDefs.Delete &quot;DeleteOldOrders&quot;
On Error GoTo 0

Set qdf = dbs.CreateQueryDef(&quot;DeleteOldOrders&quot;)
qdf.SQL = &quot;DELETE FROM Orders WHERE OrderDate &lt; #9/1/94#;&quot;

' Execute query.
qdf.Execute

' Return number of affected records.
lngReturn = qdf.RecordsAffected</font></pre>
</BODY>
</HTML>
