<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the SetOption Method to Control Registry Settings</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2using_the_setoption_method_to_control_registry_settings"></a>Using the SetOption Method to Control Registry Settings</h4>
<p>
Although creating a user profile (a custom set of Microsoft Jet registry keys and settings specifically for your application) is more flexible than overwriting the Microsoft Jet default values, it still requires that you maintain those values in the registry. If you choose to change the default values of registry settings, you will have to edit the registry every time changes are required. In previous versions of Microsoft Jet, these were the only two strategies available.</p>
<p>
Microsoft Jet&nbsp;3.5 provides a new way to modify registry settings at run time with the <b>SetOption</b> method. This is the recommended way to fine-tune registry settings for your application. This method provides the most control over how the registry is changed. The following table lists the Microsoft Jet registry settings and the corresponding DAO constants that can be manipulated at run time.</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Registry setting</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>DAO constant</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
PageTimeout</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbPageTimeout</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
SharedAsyncDelay</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbSharedAsyncDelay</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
ExclusiveAsyncDelay</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbExclusiveAsyncDelay</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
LockRetry</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbLockRetry</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
UserCommitSync</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbUserCommitSync</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
ImplicitCommitSync</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbImplicitCommitSync</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
MaxBufferSize</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbMaxBufferSize</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
MaxLocksPerFile</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbMaxLocksPerFile</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
LockDelay</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbLockDelay</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
RecycleLVs</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbRecycleLVs</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
FlushTransactionTimeout</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>dbFlushTransactionTimeout</b></font></td>
</tr>
</table><br>
<p>
The <b>SetOption</b> method only affects the run-time values of the registry and does not physically change the values in the registry. Thus, once Microsoft Jet is restarted or is run by any other application, it will read the original values in the registry. This means that in order to control the Microsoft Jet registry settings, you must use the <b>SetOption</b> method in code that runs every time an application starts. In Visual Basic, you could call the <b>SetOption</b> method in a Sub Main() procedure. In Microsoft Access, you could call the <b>SetOption</b> method in the Load event of a form that’s automatically loaded when the database opens, or you could call a function in a macro named AutoExec, which automatically runs when the database opens.</p>
<p>
The following code samples illustrate how you might use the <b>SetOption</b> method to compare values for the MaxBufferSize setting. Note that these code examples use the <b>ISAMStats</b> function described in “Unsupported Tuning Functions” later in this chapter. The <b>ISAMStats</b> function returns information about the number of disk reads and writes that occur for the different registry values.</p>
<p>
The first procedure sets the MaxBufferSize setting to 128K, then opens a recordset. It calls other procedures to reset the <b>ISAMStats</b> values, update the recordset, begin and commit a null transaction to prevent other asynchronous activity, and print the values returned by the <b>ISAMStats</b> function. The procedure then sets the MaxBufferSize setting to 2048K and repeats the process.</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub CompareBufferSizes()
&#09;Dim dbs As Database, rst As Recordset, wrk As Workspace
&#09;Dim strSQL As String
&#09;Dim strDbPath As String

&#09;strDbPath = &quot;C:\JetBook\Samples\NorthwindTables.mdb&quot;
&#09;Set dbs = OpenDatabase(strDbPath)
&#09;strSQL = &quot;SELECT * FROM Customers;&quot;
&#09;
&#09;' Use SetOption to set MaxBufferSize to 128K.
&#09;DBEngine.SetOption dbMaxBufferSize, 128
&#09;' Open recordset.
&#09;Set rst = dbs.OpenRecordset(strSQL, dbOpenDynaset)
&#09;' Return default workspace.
&#09;Set wrk = Workspaces(0)
&#09;' Set ISAMStats counters to zero.
&#09;ResetISAMStats
&#09;' Run update on recordset.
&#09;UpdateRecordset rst
&#09;' Commit null transaction.
&#09;NullTransaction wrk
&#09;' Print ISAMStats values.
&#09;PrintISAMStats strSQL

&#09;' Set MaxBufferSize to 2048K and repeat all.
&#09;DBEngine.SetOption dbMaxBufferSize, 2048
&#09;Set rst = dbs.OpenRecordset(strSQL, dbOpenDynaset)
&#09;Set wrk = Workspaces(0)
&#09;ResetISAMStats
&#09;UpdateRecordset rst
&#09;NullTransaction wrk
&#09;PrintISAMStats strSQL
End Sub

' This procedure resets the values of ISAMStats.
Sub ResetISAMStats()
&#09;Dim intI As Integer
&#09;' Reset each value.
&#09;For intI = 0 To 5
&#09;&#09;DBEngine.ISAMStats intI, True
&#09;Next
End Sub

' This procedure runs an update on the recordset.
Sub UpdateRecordset(rst As Recordset)
&#09;Dim strCompanyName As String, strContactName As String

&#09;Do Until rst.EOF
&#09;&#09;rst.Edit
&#09;&#09;strCompanyName = rst!CompanyName
&#09;&#09;strContactName = rst!ContactName
&#09;&#09;rst!CompanyName = strCompanyName
&#09;&#09;rst!ContactName = strContactName
&#09;&#09;rst.Update
&#09;&#09;rst.MoveNext
&#09;Loop
End Sub

' This procedure begins and commits a null transaction.
Sub NullTransaction(wrk As Workspace)
&#09;' The null transaction ensures there will be
&#09;' no more asynchronous activity that could
&#09;' yield inaccurate statistics.
&#09;wrk.BeginTrans
&#09;wrk.CommitTrans
End Sub

' This procedure prints the values of ISAMStats 
' to the Debug window.
Sub PrintISAMStats(Optional strSQL As String)
&#09;Debug.Print &quot;Query: &quot;, strSQL
&#09;Debug.Print &quot;Number of disk reads: &quot;, DBEngine.ISAMStats(0)
&#09;Debug.Print &quot;Number of disk writes: &quot;, DBEngine.ISAMStats(1)
&#09;Debug.Print &quot;Number of reads from cache: &quot;, DBEngine.ISAMStats(2)
&#09;Debug.Print &quot;Number of reads from read-ahead cache: &quot;, DBEngine.ISAMStats(3)
&#09;Debug.Print &quot;Number of locks placed: &quot;, DBEngine.ISAMStats(4)
&#09;Debug.Print &quot;Number of release lock calls: &quot;, DBEngine.ISAMStats(5)
&#09;Debug.Print
End Sub</font></pre>
<p>
<b>Note   </b>When the <b>dbMaxBufferSize</b> constant is modified from 128 to 2048, the number of writes will decrease significantly. The low value used in this example is exaggerated to illustrate the point while using the NorthwindTables database. It is not recommended that you use a value this low for a real-world scenario.</p>
</BODY>
</HTML>
