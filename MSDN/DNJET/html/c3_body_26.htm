<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Index Properties</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2index_properties"></a>Index Properties</h3>
<p>
An <b>Index</b> object can have one or more combinations of several property settings that influence its behavior. For example, the <b>Unique</b> property can be set, which ensures that only one record with a particular value (or combination of values, if the index consists of multiple fields) can exist. You can set the <b>Primary</b> property to <b>True</b> to designate the index as the primary key of the table. Because a primary key must uniquely identify each record, setting an index’s <b>Primary</b> property to <b>True</b> automatically sets its <b>Unique</b> property to <b>True</b>.</p>
<p>
Because a primary key is by definition a unique index, here’s how the <b>Primary</b> property and the <b>Unique</b> property differ.</p>
<p>
The main differences are that the fields that make up the primary key of a table can’t contain <b>Null</b> values, and that only one primary key can be designated per table. These restrictions don’t apply to an index with the <b>Unique</b> property set to <b>True</b>. In addition to setting the <b>Unique</b> property of an index, you can set the <b>IgnoreNulls</b> property to <b>True</b>, which means <b>Null</b> values are not added to the index; consequently, using the <b>Seek</b> method to find a <b>Null</b> value always fails.</p>
<p>
The following code adds an SSN# field and then creates a unique index for SSN#. The index forces all non-<b>Null</b> values to be unique, but allows <b>Null</b> values when the value of the SSN# field isn’t known. In this example, <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database
Dim tdf As TableDef, idx As Index
Dim fld As Field

Set dbs = OpenDatabase(strDbPath)
Set tdf = dbs.TableDefs(&quot;Employees&quot;)
Set fld = tdf.CreateField(&quot;SSN#&quot;, dbText, 11)
tdf.Fields.Append fld

' Create index on SSN# field.
Set idx = tdf.CreateIndex(&quot;IX_SSN#&quot;)
Set fld = idx.CreateField(&quot;SSN#&quot;)
With idx
&#09;.Fields.Append fld
&#09;.Unique = True
&#09;.IgnoreNulls = True
End With
tdf.Indexes.Append idx</font></pre>
</BODY>
</HTML>
