<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Marking Record Positions with Bookmarks</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2marking_record_positions_with_bookmarks"></a>Marking Record Positions with Bookmarks</h3>
<p>
A <i>bookmark</i> is a system-generated <b>Byte</b> array that uniquely identifies each record. The <b>Bookmark</b> property of a <b>Recordset </b>object changes each time you move to a new record. To identify a record, move to that record and then assign the value of the <b>Bookmark</b> property to a variable of type <b>Variant</b>. To return to the record, set the <b>Bookmark</b> property to the value of the variable.</p>
<p>
The following example illustrates how you can use a bookmark to save the current record position and then quickly return to that record position if a Find or <b>Seek</b> method fails. Using a bookmark in this way is useful, because if the method fails, the current record position is undefined. In this example, <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database, rst As Recordset
Dim varOrigin As Variant

Set dbs = OpenDatabase(strDbPath)
' Open table-type recordset.
Set rst = dbs.OpenRecordset(&quot;Customers&quot;, dbOpenTable)
With rst
&#09;' Set recordset index.
&#09;.Index = &quot;CompanyName&quot;
&#09;MsgBox &quot;Current Record: CompanyName = &quot; &amp; !CompanyName
&#09;' Return bookmark.
&#09;varOrigin = .Bookmark
&#09;' Perform seek.
&#09;.Seek &quot;&gt;=&quot;, &quot;Z&quot;
&#09;' Check for match.
&#09;If .NoMatch Then
&#09;&#09;MsgBox &quot;Can't find a company name starting with 'Z'. &quot;, _
&#09;&#09;&#09;vbOKOnly, &quot;There is no current record!&quot;
&#09;&#09;' Set bookmark.
&#09;&#09;.Bookmark = varOrigin
&#09;End If
&#09;MsgBox &quot;Current Record: CompanyName = &quot; &amp; !CompanyName
&#09;.Close
End With</font></pre>
<p>
In this example, the <b>Bookmark</b> property for the current record is saved, and if the <b>Seek</b> method fails, the <b>Bookmark</b> property is reset to its previous value.</p>
<p>
The <b>LastModified</b> property of the <b>Recordset</b> object provides a good illustration of how to use a bookmark. The <b>LastModified</b> property is the bookmark of the last record in the <b>Recordset </b>object to be added or modified. To use it, set the <b>Recordset</b> object’s <b>Bookmark </b>property equal to the <b>LastModified</b> property as follows:</p>
<pre><FONT FACE="Courier New" SIZE="3">rst.Bookmark = rst.LastModified</font></pre>
<p>
This moves the current record position to the last record that was added or modified. This is particularly useful when you are adding new records, because by default, the current record position after you add a new record is the record you were on <i>before</i> using the <b>AddNew </b>method. With the <b>LastModified </b>property, you can easily make the newly added record the current record if that’s what your application expects.</p>
</BODY>
</HTML>
