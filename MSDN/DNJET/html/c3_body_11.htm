<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Field-Level Validation</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2field-level_validation"></a>Field-Level Validation</h4>
<p>
A field-level validation rule is enforced directly by Microsoft Jet. It doesn’t matter whether you attempt to update the field through Microsoft Access, a custom Visual Basic program, or an ODBC call from a third-party program such as PowerBuilder.</p>
<p>
The validation rule must be an expression that evaluates either to <b>True</b> or <b>False</b>. If the validation rule doesn’t evaluate to <b>True</b> for the data entered in a field, an error occurs and the contents of the <b>ValidationText</b> property of the field are made available to the calling program.</p>
<p>
How this message is conveyed to the user depends on the context of the calling program. For example, if the user attempts to enter an invalid value in the Microsoft Access Datasheet view of a table, Microsoft Access beeps, displays the validation text in a message box, and waits for the user to respond. If a Visual Basic or Visual Basic for Applications code routine violates the validation rule, a trappable run-time error occurs.</p>
<p>
Because Microsoft Jet is independent of its host applications, the validation rule may not refer to features that are available from a specific application. You can’t use a custom function in the validation rule expression. Nor can you make reference to objects in the user environment, such as to Microsoft Access forms or controls.</p>
<p>
It may seem reasonable to have a validation rule expression such as the following:</p>
<pre><FONT FACE="Courier New" SIZE="3">Between 10 And MyUpperLimit()</font></pre>
<p>
However, even if you defined a function called MyUpperLimit within a Microsoft Access module or within your Visual Basic code, the validation rule expression is still not valid.</p>
<p>
By default, field validation rules aren’t evaluated until the entire record is updated. However, in many situations you can improve your application’s performance by using DAO code that sets the <b>ValidateOnSet</b> property of a field to <b>True</b>, so that the field’s validation rule is evaluated when the field’s <b>Value</b> property (its data) is set. For more information about using the <b>ValidateOnSet</b> property, search the DAO Help index for “ValidateOnSet property.”</p>
</BODY>
</HTML>
