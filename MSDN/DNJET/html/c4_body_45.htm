<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lookup Join</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2lookup_join"></a>Lookup Join</h4>
<p>
A lookup join is similar to an index join. The only difference is that the lookup join reduces the number of fields in the inner relationship and performs a sort as part of the index creation on the inner table before performing the join. A lookup join is often used for static queries and ordered dynaset-type <b>Recordset</b> objects.</p>
<h5>Algorithm for Performing a Lookup Join</h5>
<ol>
<li>
Create a sorted and indexed temporary table, selecting the necessary fields from the inner table.<br><br></li>
<li>
Retrieve a value from the outer table.<br><br></li>
<li>
Create a primary key for the inner table.<br><br></li>
<li>
Search on the temporary table to find matches, based on the key created in step 3.<br><br></li>
<li>
Check the remaining restrictions for each match.</li>
</ol>
</BODY>
</HTML>
