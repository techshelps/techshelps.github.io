<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Finding a Record in a Table-Type Recordset Object</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2finding_a_record_in_a_table-type_recordset_object"></a>Finding a Record in a Table-Type Recordset Object</h3>
<p>
You use the <b>Seek</b> method to locate a record in a table-type <b>Recordset</b> object. To locate a record in a non-table-type <b>Recordset</b> object, use one of the Find methods described in the next section. When you use the <b>Seek</b> method to locate a record, Microsoft Jet uses the table’s current index, as defined by the <b>Index</b> property.</p>
<p>
The syntax for the <b>Seek</b> method is:</p>
<p>
<i>recordset</i><b>.Seek</b> <i>comparison, key1, key2 ... key13</i></p>
<p>
The <i>table</i> argument is the table-type <b>Recordset</b> object you’re searching. The <b>Seek</b> method accepts a number of arguments, the first of which is <i>comparison</i>, a string that determines the kind of comparison being performed. The following table lists the comparison strings you can use with the <b>Seek</b> method.</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Comparison string</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Description</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<code>&quot;=&quot;</code></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Equal to the specified key values</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<code>&quot;&gt;=&quot;</code></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Greater than or equal to the specified key values</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<code>&quot;&gt;&quot;</code></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Greater than the specified key values</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<code>&quot;&lt;=&quot;</code></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Less than or equal to the specified key values</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<code>&quot;&lt;&quot;</code></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Less than the specified key values</font></td>
</tr>
</table><br>
<p>
The <i>key</i> arguments are a series of one or more values (up to 13) that correspond to the field or fields that make up the current index of the <b>Recordset </b>object. Microsoft Jet compares these values to values in the corresponding fields of the <b>Recordset </b>object’s records.</p>
<p>
The following example opens a table-type <b>Recordset </b>object on the Suppliers table, and uses the <b>Seek</b> method to locate the first record whose SupplierID field matches the value of the <code>intID</code> variable. It then changes the value of the CompanyName field to the value of the <code>strNewName</code> variable and saves the change with the <b>Update</b> method. In this example, <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database, rst As Recordset

Set dbs = OpenDatabase(strDbPath)
Set rst = dbs.OpenRecordset(&quot;Suppliers&quot;, dbOpenTable)
With rst
&#09;' Define current index.
&#09;.Index = &quot;PrimaryKey&quot;
&#09;' Seek record.
&#09;.Seek &quot;=&quot;, intID
&#09;' If SupplierID is found, change company name.
&#09;If Not .NoMatch Then
&#09;&#09;.Edit
&#09;&#09;!CompanyName = strNewName
&#09;&#09;.Update
&#09;Else
&#09;&#09;MsgBox &quot;No record found for SupplierID: &quot; &amp; intID
&#09;End If
&#09;.Close
End With</font></pre>
<p>
If you use the <b>Seek</b> method on a table-type <b>Recordset </b>object without first setting the current index, a run-time error occurs.</p>
<p>
The next example illustrates how you can create a function that uses the <b>Seek</b> method to locate a record by using a multiple-field index. In this example, <code>strDbPath</code> is the path to the NorthwindTables database, <code>lngOrderID</code> is the value of a record’s OrderID field, and <code>lngProductID</code> is the value of a record’s ProductID field:</p>
<pre><FONT FACE="Courier New" SIZE="3">Function GetPrice(strDbPath As String, lngOrderID As Long, _
&#09;&#09;lngProductID As Long) As Variant
&#09;Dim dbs As Database, rst As Recordset

&#09;Set dbs = OpenDatabase(strDbPath)
&#09;' Open recordset on table.
&#09;Set rst = dbs.OpenRecordset(&quot;Order Details&quot;, dbOpenTable)
&#09;' Specify index for seek.
&#09;rst.Index = &quot;PrimaryKey&quot;
&#09;' Seek values for both fields in index.
&#09;rst.Seek &quot;=&quot;, lngOrderID, lngProductID
&#09;' Check for matching record.
&#09;If rst.NoMatch Then
&#09;&#09;GetPrice = Null
&#09;&#09;MsgBox &quot;Couldn't find order detail record.&quot;
&#09;Else
&#09;&#09;GetPrice = rst!UnitPrice
&#09;End If
&#09;rst.Close
&#09;dbs.Close
&#09;Set dbs = Nothing
End Function</font></pre>
<p>
In this example, the table’s primary key consists of two fields, OrderID and ProductID. When you call the <b>GetPrice</b> function with a valid (existing) combination of OrderID and ProductID field values, the function returns the unit price from the found record. If the combination of field values you want can’t be found in the table, the function returns a <b>Null </b>value.</p>
<p>
If the current index is a multiple-field index, trailing key values can be omitted and are treated as <b>Null </b>values. That is, you can leave off any number of key values from the end of a <b>Seek</b> method’s <i>key</i> argument, but not from the beginning or the middle. However, if you don’t specify all values in the index, you can use only the <code>&quot;&gt;&quot;</code> or <code>&quot;&lt;&quot;</code> comparison operator with the <b>Seek</b> method.</p>
</BODY>
</HTML>
