<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Recordset Object from a Table</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2creating_a_recordset_object_from_a_table"></a>Creating a Recordset Object from a Table</h4>
<p>
The method you use to create a <b>Recordset</b> object from a table depends on whether the table is local to the current database or is a linked table in another database. The following discussion explains the differences and provides examples for each type of table.</p>
<h5>From a Table in a Local Microsoft Jet Database</h5>
<p>
The following example uses the <b>OpenRecordset</b> method to create a table-type <b>Recordset</b> object from a table, where <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database, rst As Recordset

Set dbs = OpenDatabase(strDbPath, dbOpenTable)
Set rst = dbs.OpenRecordset(&quot;Customers&quot;)</font></pre>
<p>
Note that you don’t need to use the <b>dbOpenTable</b> constant to create a table-type <b>Recordset</b> object. If you omit the type constant, Microsoft Jet chooses the highest-functionality <b>Recordset</b> object type available, depending on the object the <b>Recordset</b> object is created from, and the type of data source being used. Because the table-type <b>Recordset</b> object is available when you open a <b>Recordset</b> object from a local table, Microsoft Jet uses it by default.</p>
<h5>From a Linked Table in a Different Database Format</h5>
<p>
The next example creates a dynaset-type <b>Recordset</b> object for a linked Paradox 3.<i>x</i> table. Because the table type is not available when you open a <b>Recordset</b> object from a linked table in a non-Microsoft Jet database, Microsoft Jet selects the next most efficient type, opening a dynaset-type <b>Recordset</b> object. In the following example, <code>strDbPath</code> is the path to the Microsoft Jet database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database
Dim tdf As TableDef, rst As Recordset

' Get current database.
Set dbs = OpenDatabase(strDbPath)
Set tdf = dbs.CreateTableDef(&quot;PDXAuthor&quot;)

' Connect to Paradox table Author in database C:\JetBook\Samples\pdx.
tdf.Connect = &quot;Paradox 3.X;DATABASE=C:\JetBook\Samples\pdx&quot;
tdf.SourceTableName = &quot;Author.db&quot;

' Link table.
dbs.TableDefs.Append tdf

' Create a dynaset-type Recordset object for the table.
Set rst = tdf.OpenRecordset()

' Print each author's first and last name.
With rst
&#09;Do While Not .EOF
&#09;&#09;Debug.Print !au_fname &amp; &quot; &quot; &amp; !au_lname
&#09;&#09;.MoveNext
&#09;Loop
End With</font></pre>
<p>
You can also open a Paradox table as a table-type <b>Recordset</b> object by first opening the Paradox database.</p>
<p>
<b>See Also   </b>For more information about connecting to data in external databases and improving performance by using the <b>OpenDatabase</b> method, see Chapter&nbsp;8, “<a href="c8_body.htm">Accessing External Data</a>.”</p>
<h5>Using an Index on a Table-Type Recordset Object</h5>
<p>
You can order records in a table-type <b>Recordset</b> object by setting its <b>Index</b> property. Any <b>Index</b> object in the <b>Indexes</b> collection of the <b>Recordset</b> object’s underlying table can be specified in the <b>Index</b> property.</p>
<p>
The following example illustrates how to create a table-type <b>Recordset</b> object based on the Customers table that uses using an existing index called City. Note how setting the <b>Index</b> property re-sorts the records in the <b>Recordset</b> object. In this example, <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database, rst As Recordset

Set dbs = OpenDatabase(strDbPath)
Set rst = dbs.OpenRecordset(&quot;Customers&quot;, dbOpenTable)

With rst
&#09;.MoveFirst&#09;&#09;&#09;&#09;' Move to first record.
&#09;MsgBox !CompanyName&#09;' Show first CompanyName field with no index set.
&#09;.Index = &quot;City&quot;&#09;&#09;&#09;' Select existing City index to reorder records.
&#09;.MoveFirst&#09;&#09;&#09;&#09;' Move to new first record.
&#09;MsgBox !CompanyName&#09;' Show new first CompanyName field.
End With</font></pre>
<p>
You can use the <b>Seek</b> method to locate a record in an indexed table-type <b>Recordset</b> object. You must set the <b>Index</b> property before using the <b>Seek</b> method. If you set the <b>Index</b> property to an index that doesn’t exist, a trappable run-time error occurs. If you want to sort records according to an index that doesn’t exist, either create the index first, or create a dynaset- or snapshot-type <b>Recordset</b> object using a query with an ORDER BY clause that returns records in a specified order.</p>
</BODY>
</HTML>
