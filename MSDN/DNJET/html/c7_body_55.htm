<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Advanced Design Considerations</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h2><a name="jb2advanced_design_considerations"></a>Advanced Design Considerations</h2>
<p>
Although Microsoft Jet makes database replication easy to implement through DAO programming or through Microsoft Access in combination with Microsoft Replication Manager and Briefcase, replication can be complicated by a number of special considerations. These considerations include:
<ul>
<li>
Moving the Design Master.<br><br></li>
<li>
Compacting your database before synchronizing.<br><br></li>
<li>
Synchronizing all members of the replica set before making design changes.<br><br></li>
<li>
Closing tables before synchronizing.<br><br></li>
<li>
Using list boxes tied to replicated tables.<br><br></li>
<li>
Distributing Microsoft Replication Manager with your applications.<br><br></li>
<li>
Making a database nonreplicable.</li>
</ul>
<p>
This section presents these additional factors that must be included in your planning, design, and implementation of database replication.</p>
<h5>Moving the Design Master</h5>
<p>
The Design Master is the most important member of a replica set because it is the only member in which you can make changes to the structure of the database. Under certain circumstances, you might have to transfer the Design Master status to a replica. For example, you might have the Design Master on your computer while another member of your development team has a replica on his or her computer. While you are on vacation, you want the other programmer to be able to make changes to the database. You can use the <b>DesignMasterID</b> property to accomplish the transfer and synchronize the old and new Design Masters, as shown in the following code:</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub SetNewDesignMaster(strOldDM As String, strNewDM As String)
&#09;Dim dbsOldDM As Database, dbsNewDM As Database

&#09;' Open current Design Master in exclusive mode.
&#09;Set dbsOldDM = OpenDatabase(strOldDM, True)
&#09;
&#09;' Open database that will become the new Design Master.
&#09;Set dbsNewDM = OpenDatabase(strNewDM, True)

&#09;dbsOldDM.DesignMasterID = dbsNewDM.ReplicaID
&#09;dbsOldDM.Synchronize strNewDM, dbRepImpExpChanges
&#09;dbsOldDM.Close
&#09;dbsNewDM.Close
End Sub</font></pre>
<p>
You must have the Design Master open in order to make another replica the new Design Master. The Design Master is, by definition, read-write. If you make a replica that is designated read-only into the Design Master, the target replica is made read-write; the old Design Master also remains read-write.</p>
<p>
If the Design Master is erased or corrupted, you can designate a replica to become the new Design Master. However, remember that you can have only one Design Master at a time.</p>
<p>
If you decide to make your own replica the new Design Master for the set, synchronize it with all the replicas in the replica set before setting the <b>DesignMasterID</b> property in your replica. You must have your replica open in exclusive mode to make it the Design Master.</p>
<p>
<b>Caution   </b>Avoid using Windows or MS-DOS to copy or move replicas because using them will modify the internal information of the replicas. Moving a Design Master with Windows or MS-DOS will cause the Design Master to become a simple replica and may result in the loss of the record of conflicts associated with the replica, if any. If you are using Microsoft Replication Manager, you can use the <b>Move Replica</b> command on the <b>File</b> menu to move a replica or Design Master to another location.</p>
<h5>Compacting Your Database Before Synchronizing</h5>
<p>
Each time you change the design of your replicable database, Microsoft Jet stores information about the change in the MSysSchemaChg system table. If you change the same object more than once before synchronizing, Microsoft Jet continues to store the newest design in preparation for the synchronization. Frequent compacting of the database after you make design changes helps to reduce the overhead required for storing changes and reduces the information sent to the replicas. You might find it most efficient to compact your database daily and again just before synchronization.</p>
<p>
<b>Important   </b>Before compacting a replicated database, see “Important Considerations When Compacting Replicated Databases” in Chapter&nbsp;13, “Optimizing Performance.”</p>
<h5>Synchronizing Before Making Design Changes</h5>
<p>
When two members of a replica set are synchronized, Microsoft Jet applies the design changes to each member before applying the data changes. You can reduce the amount of processing during synchronization and reduce the potential for conflicts if you synchronize all the replicas in the set before making design changes to the Design Master.</p>
<h5>Closing Tables Before Synchronizing</h5>
<p>
Microsoft Jet must open tables exclusively before design changes are applied to them. If you are using a table in a database at the time you want to synchronize, Microsoft Jet suggests that you first close the table. If you use a “Synchronize Now” button on a form so users can easily click the button whenever they need to synchronize, be sure the button does not have an associated table open&nbsp;— either directly or through a query&nbsp;— in the database that is being synchronized.</p>
<h5>Using List Boxes with Replicated Tables</h5>
<p>
If you tie list boxes to replicable tables, under certain circumstances the list box might display system fields in addition to your regular data fields. If the option to display system objects is turned on, the system fields in the replication system tables are also displayed. After they’re visible, they might appear in the related list box.</p>
<p>
To avoid displaying system tables, either clear the <b>System Objects</b> check box on the <b>View</b> tab of the Microsoft Access <b>Options</b> dialog box (<b>Tools</b> menu), or base the list box on a query that selects only the fields you want displayed.</p>
<h5>Distributing Microsoft Replication Manager with Your Application</h5>
<p>
You can distribute your Microsoft Access database application to others by including Replication Manager. Setting up replicated databases with Replication Manager is a cooperative effort involving the programmer and the site administrator. To prepare your database for replication and distribution, you need information from the site administrator, and you need to assist the administrator&nbsp;— preferably in person at the customer’s site.</p>
<p>
The recommended topology for using Replication Manager with your application is a star topology, shown in Figure&nbsp;7.4. You should place the Design Master on a satellite computer along with Replication Manager, but you should not have it on a synchronization schedule. (You, or the administrator at the site, can synchronize it with the hub replica when a structural change to the database is needed.) The replica on the hub becomes the synchronization partner for each of the other replicas in the organization. In addition to the Design Master and the hub replica, a base replica is used with the Setup program to copy subsequent replicas to users’ machines. After a copy is made on a user’s computer and it is synchronized with the hub, the copy becomes a true replica with its own unique identification.</p>
<p>
<b>Figure&nbsp;7.4   Star topology for distributing your application</b></p>
<p>
<img src="jet0704.gif" border=0></p>
<p>
<b>See Also   </b>For more information about distributing your applications with Replication Manager, see “Distributing Replicated Databases” in the Microsoft Replication Manager Help file.</p>
<h5>Making a Database Nonreplicable</h5>
<p>
After you’ve converted a database into a replicable database, you can’t convert it back to its former status as a nonreplicable database. However, if you no longer want to use replication and want to decrease the size of a replicated database, you can create a new, nonreplicable database that contains all of the objects and data in your replicated database without the additional system fields, tables, and properties associated with replication.</p>
<p>
<b>Note   </b>The Replica to Regular Database Wizard, which is located in the ReplWizard folder on the companion CD-ROM, enables you to convert a Design Master to its original, nonreplicated state.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To make a nonreplicable database from a replicable one by using Microsoft Access</b>
<ol>
<li>
Create and open a new database.<br><br></li>
<li>
On the <b>File</b> menu in the new database, point to <b>Get External Data</b>, and then click <b>Import</b>.<br><br></li>
<li>
Import the objects (except tables) that you want in the new database.<br><br></li>
<li>
Close the new database and open the replicated database.<br><br></li>
<li>
Create a query for each table in the replica that takes all the data in the old table and puts it in a new table.<p>
<b>Important   </b>If the s_GUID field is a primary key (and foreign keys in other tables refer to it), you’ll want the s_GUID field in the new table. If the s_GUID field is not used as a primary key, there is no reason to preserve it in the new table. The s_Lineage and s_Generation fields should not be copied over to the new table.</p>
<p>
To create the queries, open query Design view, and click <b>Make-Table Query</b> on the <b>Query</b> menu. In the <b>Table Name</b> box, select the current table. Click <b>Another Database</b>, and add the name of the database that you created in step 1. Run the query.</p>
</li>
<li>
For each table in the new database, create the same index used in the replica table and the relationships that existed for the replica table.<br><br></li>
<li>
Compact, repair, and save the new database.</li>
</ol>
</BODY>
</HTML>
