<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File-Server vs. Client/Server</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h2><a name="jb2file-server_vs._client_server"></a>File-Server vs. Client/Server</h2>
<p>
When discussing Microsoft Jet multiuser database systems, it’s important to note the differences in available technology. A multiuser database system, as implemented on personal computers, generally falls into one of two categories: a file-server system or a client/server system.</p>
<p>
In a file-server system, no intelligent process is active at the server level. All intelligence resides on the individual workstation. When your application needs data, it’s the workstation software’s responsibility to determine which files should be read and how to directly access the network drive. Because all data in the database file must be sent from the server to the workstation, network traffic is increased. Figure&nbsp;6.1 illustrates the file-server system.</p>
<p>
<b>Figure&nbsp;6.1   A typical file-server system</b></p>
<p>
<img src="jet0601.gif" border=0></p>
<p>
A multiuser database system within a file-server environment is made up of:
<ul>
<li>
A database that resides on a network file server running an operating system such as Microsoft Windows&nbsp;NT Server or Novell NetWare.<br><br></li>
<li>
One or more users accessing the database from a workstation’s application software.</li>
</ul>
<p>
In a client/server system, the server is responsible for intelligently processing requests for data. The workstation does not request data at the file level, but sends a high-level request to the server to execute a specific query and return its results. The primary advantage of this technique is that network traffic is reduced because only the result set of the query is returned to the workstation, as shown in Figure&nbsp;6.2.</p>
<p>
<b>Figure&nbsp;6.2   A typical client/server system</b></p>
<p>
<img src="jet0602.gif" border=0></p>
<p>
A client/server system is typified by:
<ul>
<li>
A back-end database residing on the server controlled and maintained by the server software, such as Microsoft SQL&nbsp;Server.<br><br></li>
<li>
One or more users running a local application that requests data from the server through an interface such as the Microsoft Open Database Connectivity (ODBC) standard.</li>
</ul>
<p>
This chapter covers the use of Microsoft Jet in a file-server configuration.<b> </b>For more information about using Microsoft Jet in a client/server configuration, see Chapter&nbsp;9, “<a href="c9_body.htm">Developing Client/Server Applications</a>.”</p>
</BODY>
</HTML>
