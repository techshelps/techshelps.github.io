<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Specifying a Password</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2specifying_a_password"></a>Specifying a Password</h4>
<p>
Microsoft Jet honors the security system in all external data sources that support security. When the external data source is secured by a password, your application must supply a password to establish a connection. You can do this by prompting the user for this information and building it into the connection string, or you can hard-code the password into your application.</p>
<p>
<b>Note   </b>If you store sensitive data in the external data source, you shouldn’t hard-code passwords in your Microsoft Jet application.</p>
<p>
Use the PWD argument to pass the password to the external data source, as in the following example. You must follow the password argument with a semicolon.</p>
<pre><FONT FACE="Courier New" SIZE="3">Set tdf = dbs.CreateTableDef(&quot;FirstQuarterSales1996&quot;, 0, &quot;Q1Sales&quot;, _
&#09;&quot;FoxPro&nbsp;3.0;DATABASE=C:\JetBook\Samples\FoxTables\Sales;PWD=RollsRoyce;&quot;)</font></pre>
<p>
<b>Note   </b>You can use the <i>password</i> argument to specify database passwords only; you cannot use the password to log on to a network. If your application requires network access, you must establish these connections before attempting to access the external data.</p>
<p>
You cannot use the PWD argument to decrypt Microsoft Excel worksheets or workbooks; you must unprotect and save the worksheet or workbook in Microsoft Excel before you can open it with the Microsoft Excel IISAM driver.</p>
<h5>Saving ODBC Passwords Between Sessions</h5>
<p>
If you don’t want to hard-code sensitive ODBC database passwords into your application or require your users to enter a password each time they start the application, you can set the <b>Attributes</b> property of the <b>TableDef</b> object to <b>dbAttachSavePWD</b>. This saves the ODBC password provided by the user as part of the table definition. Each time the user subsequently opens the remote table through the <b>TableDef</b> object, the password information is automatically applied. The following line of code sets the <b>Attributes</b> property to save a password with a <b>TableDef</b> object:</p>
<pre><FONT FACE="Courier New" SIZE="3">tdf.Attributes = dbAttachSavePWD</font></pre>
<p>
If your remote data is particularly sensitive, you may not want to allow users to save their passwords. To change this behavior, you must modify the MSysConf table in your remote database to disallow local storage of login IDs and passwords (by default, local storage is allowed). If your application has already been deployed with password saving enabled, you can still disallow local user ID and password saving with MSysConf; ODBC will automatically prompt users for any missing authentication information when they attempt to open the remote database.</p>
<p>
<b>See Also   </b>For more information about the MSysConf table, see Chapter&nbsp;9, “<a href="c9_body.htm">Developing Client/Server Applications</a>.”</p>
</BODY>
</HTML>
