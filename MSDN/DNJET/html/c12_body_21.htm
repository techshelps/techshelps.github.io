<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cursor Concurrency and Locking</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2cursor_concurrency_and_locking"></a>Cursor Concurrency and Locking</h4>
<p>
When an application calls the <b>SQLSetPos</b> function to add, update, or delete a record, the Desktop Database Drivers can make sure that a record will stay in the same locked or unlocked state as it was in before <b>SQLSetPos</b> was called. To do this, <b>SQLSetPos</b> is called with an <i>fLock</i> argument of SQL_LOCK_NO_CHANGE. This uses the locking enforced by Microsoft Jet. To guarantee locking by Microsoft Jet, an application must create a keyset-driven cursor and specify SQL_CONCUR_LOCK for the SQL_CONCURRENCY <i>fOption</i> argument in <b>SQLSetStmtOption</b>.</p>
<p>
Microsoft Jet does not support exclusive or explicit record-level locking. Therefore, the Desktop Database Drivers cannot lock the record specifically by using the SQL_LOCK_EXCLUSIVE <i>fLock</i> argument in <b>SQLSetPos</b> and then later unlock the record by using the SQL_LOCK_UNLOCK <i>fLock</i> argument. If a transaction is used (auto-commit mode off), setting the cursor-concurrency statement <i>fOption</i> argument to SQL_CONCUR_LOCK guarantees that the page-level locking supported by Microsoft Jet will be enforced for the duration of the transaction.</p>
<p>
In addition to using Microsoft Jet locking (SQL_CONCURRENCY set to SQL_CONCUR_LOCK), you can also set the concurrency of a keyset-driven cursor to read-only (SQL_CONCUR_READ_ONLY), or optimistic concurrency in which record values are compared (SQL_CONCUR_VALUES). The Desktop Database Drivers do not support optimistic concurrency in which record versions are compared (SQL_CONCUR_ROWVER).</p>
<p>
<b>See Also   </b>For more information about page-level locking, see Chapter&nbsp;10, “<a href="c10_body.htm">Managing Security</a>.”</p>
</BODY>
</HTML>
