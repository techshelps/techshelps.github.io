<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Workgroup Information File</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2the_workgroup_information_file"></a>The Workgroup Information File</h4>
<p>
As mentioned earlier, <b>User</b> and <b>Group</b> objects and their passwords are not stored in your database. They are stored in a Microsoft Jet database known as the <i>workgroup information file</i>, which is also referred to as the <i>system database</i>. The default name of this database is System.mdw, and it’s a standard database in that Microsoft Jet can open it. While it’s structurally no different from the databases you create, it does contain several system tables that the engine uses to store security information. You can’t make changes to the contents of those tables by opening a workgroup information file directly; the information stored in them is encrypted and protected. To define user accounts and security groups, you must use the <b>User</b> and <b>Group</b> objects in DAO code, or use the Microsoft Access security user interface.</p>
<p>
The workgroup information file stores information about each user and group in a workgroup. This information includes which users belong to which groups, encrypted passwords, and the SID for each user and group. When you use Microsoft Jet commands that affect user or group objects or their passwords, the engine reads and writes to the workgroup information file.</p>
<p>
<b>Figure&nbsp;10.3   The workgroup information file</b></p>
<p>
<img src="jet1005.gif" border=0></p>
<p>
You can use the same workgroup information file for more than database. As long as the user, group, and password information remains the same across databases, you can point Microsoft Jet to the same workgroup information file. When a user logs on to Microsoft Jet, the engine looks in the workgroup information file for the user’s name and password to authenticate the user. From then on, Microsoft Jet uses only the SID that it found for that user.</p>
<p>
Keep in mind that when you specify (“join”) a workgroup information file, the user and group accounts it contains remain in effect until you specify another workgroup information file. If you perform operations on other databases while that workgroup information file is current, you may see unexpected results. For this reason, you may want to create a separate workgroup information file for each database you secure.</p>
<p>
<b>See Also   </b>For more information, see Appendix&nbsp;C, “<u>Registry Settings</u> .”</p>
<p>
In Microsoft Jet versions prior to 3.0, the initialization file, usually MSAccess.ini or MSAcc20.ini, was used to store the path and name of the workgroup information file. In versions 3.0 and 3.5, the path and name of the workgroup information file are stored in the Windows Registry. In all versions, the keyword or registry value used to specify the path to the workgroup information file is SystemDB. You can set or return the path for the current location of the workgroup information file in Visual Basic by using the <b>SystemDB</b> property of the <b>DBEngine</b> object.</p>
<h5>Microsoft Access Startup Command-Line Options</h5>
<p>
You can start Microsoft Access with the following command-line options, which configure the security environment:
<ul>
<li>
<b>/user</b> <i>username</i>. Starts Microsoft Jet using the specified user name.<br><br></li>
<li>
<b>/pwd</b> <i>password</i>. Starts Microsoft Jet using the specified password.<br><br></li>
<li>
<b>/profile</b> <i>user profile</i>. Starts Microsoft Jet using the options in the specified user profile instead of the standard Windows Registry settings created when you installed Microsoft Jet. This replaces <b>/ini</b>, used in previous versions of Microsoft Jet to specify an initialization file.<br><br></li>
<li>
<b>/wrkgrp</b> <i>path of</i> <i>workgroup information file</i>. Starts Microsoft Jet using the specified workgroup information file.</li>
</ul>
<p>
These startup command-line options are particularly useful when creating a Windows shortcut to open a secured database. For example, instead of using the Workgroup Administrator to specify a workgroup information file before opening a secured database, you can create a shortcut that uses the <b>/wrkgrp</b> option to specify the file when the database is opened.</p>
<p>
Note that you must include the full path to the Microsoft Access executable file, as well as to the database. For example, the following command line starts Microsoft Access and opens the Northwind sample database using the MySystem.mdw workgroup information file:</p>
<p>
“C:\Program Files\Microsoft Office\Office\MSAccess.exe” “C:\Program Files\Microsoft Office\Office\Samples\Northwind.mdb” /wrkgrp “C:\Windows\System\MySystem.mdw”</p>
</BODY>
</HTML>
