<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Synchronizing the Star Topology</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2synchronizing_the_star_topology"></a>Synchronizing the Star Topology</h3>
<p>
As described in the “Replica Set Topology” section earlier in this chapter, you can implement a variety of topologies for synchronizing members of the replica set. The following code example shows how to synchronize the star topology.</p>
<p>
The following code provides a simple example of implementing synchronization by using a star topology. The procedure opens a replica and checks to see whether it is the hub. If the replica is the hub, it synchronizes with every other replica in the star. If it is not the hub, it synchronizes with the hub only.</p>
<p>
The example assumes that a list of replica paths and file names is stored in a table named PathsStar in each replica. The PathsStar table contains the following key fields: PathID, which is the numeric identifier for each record and the primary key; Path, which is a text field containing the path and file name of a replica; and Hub, a Boolean field that specifies the replica serving as the hub for the star.</p>
<p>
To try this code from the sample applications, run the StarSync function from the JetBook\Samples\JetSamples.mdb database, and pass in the name of one of the databases in the JetBook\Samples\Replicas subfolder&nbsp;— either SampleDesignMaster.mdb or SampleReplica.mdb. Or you can import the PathsStar table into your own replicable database, and run the code from there.</p>
<pre><FONT FACE="Courier New" SIZE="3">Function StarSync(strDbPath As String) As Boolean
&#09;Dim dbs As Database, dbsHub As Database
&#09;Dim rst As Recordset

&#09;On Error GoTo Err_StarSync
&#09;
&#09;' Open database.
&#09;Set dbs = OpenDatabase(strDbPath)
&#09;Set rst = dbs.OpenRecordset(&quot;PathsStar&quot;, dbOpenDynaset)
&#09;
&#09;With rst
&#09;&#09;' Check to see whether passed-in database is listed
&#09;&#09;' in list of replicas.
&#09;&#09;.FindFirst &quot;[Path] = &quot;&quot;&quot; &amp; strDbPath &amp; &quot;&quot;&quot;&quot;
&#09;&#09;' If it's not, then add it to list.
&#09;&#09;If .NoMatch Then
&#09;&#09;&#09;.AddNew
&#09;&#09;&#09;!Path = strDbPath
&#09;&#09;&#09;.Update
&#09;&#09;End If
&#09;&#09;
&#09;&#09;' Search table to find name of database marked as hub.
&#09;&#09;.FindFirst &quot;[Hub] = True&quot;
&#09;&#09;' If match is found, check which database is marked as hub.
&#09;&#09;If Not .NoMatch Then
&#09;&#09;&#09;' Open the original hub database.
&#09;&#09;&#09;Set dbsHub = OpenDatabase(!Path)
&#09;&#09;Else
&#09;&#09;&#09;' If there is no hub, display error and exit.
&#09;&#09;&#09;MsgBox &quot;Hub does not exist in replica set. &quot; &amp; _
&#09;&#09;&#09;&#09;&quot;Can't synchronize at this time.&quot;
&#09;&#09;End If
&#09;End With

&#09;' Check to see if passed-in database is the hub.
&#09;If dbsHub.Name = dbs.Name Then
&#09;&#09;' Synchronize all members of the replica set with the hub.
&#09;&#09;' Since error trapping is turned off, the program continues to
&#09;&#09;' synchronize with other replicas if the Synchronize method fails 
&#09;&#09;' for any replica.
&#09;&#09; rst.MoveFirst
&#09;&#09;Do Until rst.EOF
&#09;&#09;&#09;' Hub can't synchronize with itself.
&#09;&#09;&#09;If rst!Path &lt;&gt; dbs.Name Then
&#09;&#09;&#09;&#09;Debug.Print rst!Path
&#09;&#09;&#09;&#09;dbs.Synchronize rst!Path
&#09;&#09;&#09;End If
&#09;&#09;&#09;rst.MoveNext
&#09;&#09;Loop
&#09;Else
&#09;&#09;dbs.Synchronize dbsHub.Name
&#09;End If
&#09;
&#09;StarSync = True

Exit_StarSync:
&#09;On Error Resume Next
&#09;rst.Close
&#09;dbs.Close
&#09;dbsHub.Close
&#09;Exit Function

Err_StarSync:
&#09;' If an error occurred while synchronizing with the current
&#09;' replica, log an error that stores which replica failed to
&#09;' synchronize. The LogError function is a custom procedure
&#09;' for logging errors to a text file.
&#09;If Err.Number &lt;&gt; 0 Then
&#09;&#09;' If recordset is not open, error is not a synchronization error.
&#09;&#09;If rst Is Nothing Then
&#09;&#09;&#09;MsgBox &quot;Error: &quot; &amp; Err.Number &amp; &quot; - &quot; &amp; Err.Description
&#09;&#09;&#09;StarSync = False
&#09;&#09;&#09;Resume Exit_StarSync
&#09;&#09;Else
&#09;&#09;&#09;LogError Err, rst!Path
&#09;&#09;&#09;MsgBox (&quot;Synchronization failure at &quot; &amp; rst!Path)
&#09;&#09;&#09;Err.Clear
&#09;&#09;&#09;Resume Next
&#09;&#09;End If
&#09;End If
End Function </font></pre>
<p>
If an error occurs during synchronization, the following function is called to log the error:</p>
<pre><FONT FACE="Courier New" SIZE="3">Function LogError(errX As ErrObject, Optional strPath As String)
&#09;Dim intX As Integer
&#09;
&#09;intX = FreeFile(0)
&#09;Open &quot;ErrLog.txt&quot; For Append As #intX
&#09;Write #intX, strPath
&#09;Write #intX, errX.Number
&#09;Write #intX, errX.Description
&#09;Write #intX, Now
&#09;Write #intX,
&#09;Close #intX
End Function </font></pre>
</BODY>
</HTML>
