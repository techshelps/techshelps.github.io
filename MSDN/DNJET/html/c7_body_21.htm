<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Keeping Objects Local</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2keeping_objects_local"></a>Keeping Objects Local</h3>
<p>
When you create a Design Master, all of the objects in the database are converted to replicable objects. If you don’t want all the objects in your database dispersed throughout the replica set, you can append and set the <b>KeepLocal</b> property for any objects you don’t want replicated before you create the replica. For example, if your database has a table containing confidential salary information, initialization information, or names of users who log on to the database, you might want to keep that information only in the Design Master. You can set the table’s <b>KeepLocal</b> property to <b>“T”</b> to keep it local while all other objects are replicated when the database is converted to a Design Master.</p>
<p>
If you replicate an object with your database, you can still set that object’s <b>ReplicableBool</b> property to <b>False</b> so that the object will not be propagated to the replica set when you synchronize. The <b>KeepLocal</b> property is most useful when you want to make sure that an object is never made replicable at all. For example, when you replicate a table, new fields are added to the table, and any AutoNumber fields are no long simple linear sequences but instead become globally unique identifiers (GUIDs). To prevent these changes to a table, you can set its <b>KeepLocal</b> property before you make the database replicable.</p>
<p>
To set the <b>KeepLocal</b> property of an object, you must first create the property and append it to the object’s <b>Properties</b> collection if it does not already exist in the collection. For a <b>TableDef</b> or <b>QueryDef</b> object, you create the <b>KeepLocal</b> property in the <b>TableDef</b> or <b>QueryDef</b> object’s <b>Properties</b> collection. For a Microsoft Access form, report, macro, or module, you create the <b>KeepLocal</b> property in the <b>Properties</b> collection of the <b>Document</b> object that is associated with the object you want to keep local.</p>
<p>
The following code shows how to set the <b>KeepLocal</b> property for an object. If the <b>KeepLocal</b> property does not exist in the object’s <b>Properties</b> collection, the procedure creates the property, sets its value to <b>“T”</b>, and appends it to the object’s <b>Properties</b> collection. Note that the object passed in for the <i>obj</i> argument must be of the type <b>TableDef</b>, <b>QueryDef</b>, or <b>Document</b>:</p>
<pre><FONT FACE="Courier New" SIZE="3">Function MakeObjectLocal(obj As Object) As Boolean
&#09;Const conErrPropNotFound = 3270
&#09;
&#09;On Error GoTo Err_MakeObjectLocal
&#09;' Does the KeepLocal property exist for this object?
&#09;obj.Properties(&quot;KeepLocal&quot;).Value = &quot;T&quot;
&#09;MakeObjectLocal = True
&#09;
Exit_MakeObjectLocal:
&#09;Exit Function

Err_MakeObjectLocal:
&#09;' If KeepLocal property does not exist, create the KeepLocal property
&#09;' and set it to &quot;T&quot;.
&#09;If Err = conErrPropNotFound Then
&#09;&#09;' Add the KeepLocal property to the Properties collection by
&#09;&#09;' using the SetCustomProperty function defined in Chapter&nbsp;2.
&#09;&#09;If SetCustomProperty(obj, &quot;KeepLocal&quot;, dbText, &quot;T&quot;) = True Then
&#09;&#09;&#09;Resume Next
&#09;&#09;End If
&#09;Else
&#09;&#09;MsgBox &quot;Error: &quot; &amp; Err.Number &amp; &quot; - &quot; &amp; Err.Description
&#09;End If
&#09;MakeObjectLocal = False
&#09;Resume Exit_MakeObjectLocal
End Function</font></pre>
<p>
<b>Important   </b>If the object on which you are setting the <b>KeepLocal</b> property has already inherited that property from another object, the value set by the other object has no effect on the behavior of the object you want to keep local. You must directly set the property for each object.</p>
<p>
You cannot set the <b>KeepLocal</b> property for objects after they have been converted into a replicable form. However, to prevent an object from being propagated through the replica set, you can set its <b>ReplicableBool</b> property to <b>False</b>.</p>
<p>
If you have created a relationship between two tables in your database, you must set the <b>KeepLocal</b> property the same for both tables&nbsp;— both tables must be local or both must be replicable. If the property is not set the same for both tables, an error occurs. The <b>KeepLocal</b> property cannot be set while the relationship is in effect. Before creating and setting the <b>KeepLocal</b> property, delete the relationship between the tables. After setting the <b>KeepLocal</b> property, add the relationship back to the tables and proceed with converting the database.</p>
</BODY>
</HTML>
