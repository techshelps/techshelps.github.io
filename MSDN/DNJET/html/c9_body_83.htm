<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cursor Limitations</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2cursor_limitations"></a>Cursor Limitations</h4>
<p>
In an ODBCDirect workspace, the default <b>Recordset</b> object is a read-only, forward-only-type <b>Recordset</b> object. Therefore, if you create the default <b>Recordset</b> object by opening it without specifying a value for the <i>type</i> argument, you won’t be able to edit data on the server. If you want to edit data on the server, you need to explicitly specify a lock type other than <b>dbReadOnly</b> for the <i>lockedits</i> argument of the <b>OpenRecordset</b> method.</p>
<p>
When using an updatable ODBCDirect <b>Recordset</b> object, you can’t read or set the <b>Value</b> property of a field with a Memo (SQL_LONGVARCHAR) or OLE Object (SQL_LONGVARBINARY) data type more than once without refreshing the current record. If you try to do so, DAO will return error 3032. To work around this, you can use <code>Move 0</code> to refresh the current record after a reading or setting the <b>Value</b> property of the field once. For example, to read and then set the <b>Value</b> property of the field, first read the property, use <code>Move 0</code> to refresh the current record, then write the new value.</p>
<p>
When performing operations on an ODBCDirect <b>Recordset</b> object within a transaction, the cursor is closed when you commit the transaction. If you try to use a method that requires the cursor immediately after committing the transaction, such as the <b>RecordCount</b> method, an error will occur. To avoid this, use the <b>Requery</b> method on the <b>Recordset</b> object after committing the transaction to reopen the cursor. The cursor is closed after you commit or roll back a transaction because this is the default behavior of the Microsoft SQL Server ODBC Driver. It is possible to change this default to keep the cursor open, however to do so, you must use the ODBC API to call the <b>SQLSetConnectOption</b> function to change the <b>SQL_PRESERVE_CURSORS</b> option.</p>
<p>
<b>See Also   </b>For more information, see <i>Microsoft ODBC&nbsp;3.0 Software Development Kit and Programmer’s Reference</i>.</p>
<p>
Because you can’t open a table-type <b>Recordset</b> object in an ODBCDirect workspace, you can’t use the <b>Index</b> property or the <b>Seek</b> method to retrieve data. Also, <b>Recordset</b> objects opened against ODBC data sources do not support any of the Find methods: <b>FindFirst</b>, <b>FindNext</b>, <b>FindPrevious</b>, and <b>FindLast</b>. In a client/server environment, it’s more efficient to retrieve only the data that you need, rather than retrieving more records than you need and then searching through those records for the data that you want. Therefore, design your queries to return only the records that you need.</p>
</BODY>
</HTML>
