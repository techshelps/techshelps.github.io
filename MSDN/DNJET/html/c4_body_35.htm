<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Append Query (INSERT INTO)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2the_append_query__insert_into_"></a>The Append Query (INSERT INTO)</h4>
<p>
You can append new records to an existing table by using an INSERT INTO query. In the simplest case, literal values are assigned to a single record that’s inserted into the table:</p>
<pre><FONT FACE="Courier New" SIZE="3">INSERT INTO PerformanceGrade (PerformanceGradeKey, LowRange, HighRange)
VALUES (5, 500000.01, 600000);</font></pre>
<h5>INSERT INTO…VALUES</h5>
<p>
The INSERT INTO query lists the table to which the record will be added, the fields that will be populated with new values, and a corresponding VALUES clause with the literal values that will be assigned to those fields. The number and data types of the fields in the field list and the value list must match.</p>
<p>
It’s not necessary to specify every field in the table. Any fields not specified are filled with the value specified by the <b>DefaultValue</b> property for that particular field. However, all required fields must be assigned, including those fields participating in indexes or acting as part of the primary key.</p>
<p>
However, an INSERT INTO query can’t violate any referential integrity constraints or <b>ValidationRule</b> property clauses established at either the field level or the table level. If the <b>Required</b> property is set to <b>True</b> for a particular field, for example, and you don’t assign a value for this field, a trappable run-time error is generated when you attempt to run the INSERT INTO query.</p>
<p>
Similarly, if a referential integrity constraint has been established that requires a matching value in a foreign key field and that value doesn’t exist in the related table, the INSERT INTO query will fail.</p>
<h5>INSERT INTO…SELECT</h5>
<p>
An alternative form of this statement (and one likely to be created if you generate this query in Microsoft Access) is as follows:</p>
<pre><FONT FACE="Courier New" SIZE="3">INSERT INTO PerformanceGrade (PerformanceGradeKey, LowRange, HighRange)
SELECT 5 AS Expr1, 500000.01 AS Expr2, 600000 AS Expr3;</font></pre>
<p>
Rather than using the VALUES clause to assign field values, this form of the INSERT INTO statement takes its values from another SELECT statement. In this particular case, because the inner SELECT statement doesn’t contain a FROM clause, a single record is inserted into the new table, using the calculated fields Expr1, Expr2, and Expr3 as the source items.</p>
<p>
When the source SELECT statement does have a FROM clause, all records retrieved by the SELECT statement are inserted into the first table:</p>
<pre><FONT FACE="Courier New" SIZE="3">INSERT INTO Employees 
&#09;(EmployeeID, 
&#09;LastName, 
&#09;FirstName, 
&#09;Title, 
&#09;TitleOfCourtesy, 
&#09;BirthDate, 
&#09;HireDate, 
&#09;Address, 
&#09;City, 
&#09;Region, 
&#09;PostalCode, 
&#09;Country, 
&#09;HomePhone, 
&#09;Extension, 
&#09;Photo, 
&#09;Notes, 
&#09;ReportsTo)
SELECT 
&#09;TemporaryEmployees.EmployeeID, 
&#09;TemporaryEmployees.LastName, 
&#09;TemporaryEmployees.FirstName, 
&#09;TemporaryEmployees.Title, 
&#09;TemporaryEmployees.TitleOfCourtesy, 
&#09;TemporaryEmployees.BirthDate, 
&#09;TemporaryEmployees.HireDate, 
&#09;TemporaryEmployees.Address, 
&#09;TemporaryEmployees.City, 
&#09;TemporaryEmployees.Region, 
&#09;TemporaryEmployees.PostalCode, 
&#09;TemporaryEmployees.Country, 
&#09;TemporaryEmployees.HomePhone, 
&#09;TemporaryEmployees.Extension, 
&#09;TemporaryEmployees.Photo, 
&#09;TemporaryEmployees.Notes, 
&#09;TemporaryEmployees.ReportsTo
FROM TemporaryEmployees
WHERE TemporaryEmployees.Title = 'New Hire';</font></pre>
<p>
Instead of itemizing the fields in the source and target tables, you can use the shorthand form of this statement:</p>
<pre><FONT FACE="Courier New" SIZE="3">INSERT INTO Employees
SELECT TemporaryEmployees.*
FROM TemporaryEmployees
WHERE TemporaryEmployees.Title = 'New Hire';</font></pre>
<p>
This format requires that the field names in the source and the target tables match.</p>
</BODY>
</HTML>
