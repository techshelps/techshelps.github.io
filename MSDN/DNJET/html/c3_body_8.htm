<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Specifying Field Properties</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2specifying_field_properties"></a>Specifying Field Properties</h3>
<p>
The previous examples show a simple case of building a table with a single field by using default property values. Usually, you would specify many additional properties and override certain default values.</p>
<p>
This example, which uses DAO, creates a table with four fields and specifies various nondefault values for the fields (ID, Name, Response, and Class), where <code>strDbPath</code> is the path to the database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database, tdf As TableDef
Dim fldID As Field, fldName As Field
Dim fldResponse As Field, fldClass As Field

Set dbs = OpenDatabase(strDbPath)
Set tdf = dbs.CreateTableDef(&quot;MarketingSurvey&quot;)

' Create automatically incrementing field.
Set fldID = tdf.CreateField(&quot;ID&quot;, dbLong)
fldID.Attributes = dbAutoIncrField
fldID.Required = True

' Create text field.
Set fldName = tdf.CreateField(&quot;Name&quot;, dbText)
With fldName
&#09;.Required = True
&#09;.Size = 40
&#09;.AllowZeroLength = True
&#09;.DefaultValue = &quot;Unknown&quot;
End With

' Create memo field.
Set fldResponse = tdf.CreateField(&quot;Response&quot;, dbMemo)

' Create text field with validation rule.
Set fldClass = tdf.CreateField(&quot;Class&quot;, dbText, 10)
With fldClass
&#09;.Required = True
&#09;.ValidationRule = &quot;In('A','B','X')&quot;
&#09;.ValidationText = &quot;Enter one of A, B, or X.&quot;
End With

With tdf
&#09;.Fields.Append fldID
&#09;.Fields.Append fldName
&#09;.Fields.Append fldResponse
&#09;.Fields.Append fldClass
End With
dbs.TableDefs.Append tdf</font></pre>
<p>
When you use Microsoft Jet SQL DDL statements, you can specify only the field names and data types. Microsoft Jet SQL doesn’t support ANSI SQL constructs that set validation rules or default values (for example, field-level CHECK or DEFAULT clauses). You can’t use SQL DDL to fill in the <b>ValidationRule</b> and <b>DefaultValue</b> properties of a field, for example. The closest you can come to re-creating the previous table by using only SQL DDL statements is:</p>
<pre><FONT FACE="Courier New" SIZE="3">CREATE TABLE MarketingSurvey
&#09;(ID SHORT,
&#09;Name TEXT (40),
&#09;Response MEMO,
&#09;Class TEXT (10));</font></pre>
</BODY>
</HTML>
