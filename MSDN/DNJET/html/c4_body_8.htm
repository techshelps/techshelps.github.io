<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Aggregate Values and GROUP BY</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2aggregate_values_and_group_by"></a>Aggregate Values and GROUP BY</h4>
<p>
Aggregate values can be calculated at levels other than for the entire table. The SQL GROUP BY clause is used to create one output record per each group of unique values, and optionally, to produce summary values for selected fields. GROUP BY used alone creates an output record that specifies the unique values:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Products.CategoryID, 
&#09;Products.SupplierID
FROM Products
GROUP BY 
&#09;Products.CategoryID, 
&#09;Products.SupplierID;</font></pre>
<p>
The previous query lists the unique combinations of CategoryID and SupplierID, and produces the same results as:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT DISTINCT 
&#09;Products.CategoryID, 
&#09;Products.SupplierID
FROM Products;</font></pre>
<p>
As in other SQL dialects, any output fields in a GROUP BY query must be either part of an aggregate function or be in the GROUP BY clause.</p>
<p>
When an aggregate function is combined with a GROUP BY clause, one record of output is produced for each unique value in the GROUP BY clause. The aggregate totals are accumulated and output for each record, and then reset for the next group, as in this example, which finds the oldest birth date for each group of employees that have the same title:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Employees.Title, 
&#09;Min(Employees.BirthDate) AS MinOfBirthDate
FROM Employees
GROUP BY Employees.Title;</font></pre>
<p>
You can also sort the output of the GROUP BY query by adding an ORDER BY clause, as in this example, which finds the most recently hired employee in each country:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Employees.Country, 
&#09;Max(Employees.HireDate) AS MaxOfHireDate
FROM Employees
GROUP BY Employees.Country
ORDER BY Max(Employees.HireDate) DESC;</font></pre>
</BODY>
</HTML>
