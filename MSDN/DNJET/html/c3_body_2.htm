<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Database Owner</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2the_database_owner"></a>The Database Owner</h3>
<p>
If you don’t create and reference a new <b>Workspace</b> object when you are using the <b>CreateDatabase</b> method, the default <b>Workspace</b> object is used. The effect of using the default <b>Workspace</b> object depends on which host application is running the Visual Basic code. For example, in Microsoft Access, the default <b>Workspace</b> object is identical to the one used to log on to the application database that is executing the code. The new database is owned by the user account that is used to log on to Microsoft Access before the <b>CreateDatabase</b> method is used. If the <b>Logon</b> dialog box hasn’t been activated in Microsoft Access, the database owner is the default Admin user account.</p>
<p>
<b>See Also   </b>For information about using Microsoft Jet security, see Chapter&nbsp;10, “<a href="c10_body.htm">Managing Security</a>.”</p>
<p>
In Visual Basic version&nbsp;5.0, the <b>UserName</b> property of the default <b>Workspace</b> object is set to Admin and the <b>Name</b> property is set to #DefaultWorkspace#. Because the user doesn’t log on to the database independently of the code executed by a Visual Basic application, there is no user <b>Workspace</b> object for Visual Basic to inherit as there is with Microsoft Access. This situation also applies when you are using the <b>CreateDatabase</b> method in Visual Basic for Applications code with Microsoft Word, Microsoft Excel, or Microsoft PowerPoint.</p>
<p>
Additionally, for any application that is using DAO, you can set the <b>DefaultUser</b> and <b>DefaultPassword</b> properties of the <b>DBEngine</b> object to specify the default user account and password that will be used when a new <b>Workspace</b> object is created.</p>
<p>
<b>Note   </b>Microsoft Jet&nbsp;3.5 creates Microsoft Jet <b>Workspace</b> objects by default. However, if you specify the <b>DefaultType</b> property of the <b>DBEngine</b> object as <b>dbUseODBC</b>, or specify <b>dbUseODBC</b> when using the <b>CreateWorkspace</b> method, an ODBCDirect <b>Workspace</b> object is created. The <b>Name</b> and <b>UserName</b> property issues discussed in this section don’t apply to ODBCDirect <b>Workspace</b> objects. For more information about using ODBCDirect features, see Chapter&nbsp;9, “<a href="c9_body.htm">Developing Client/Server Applications</a>.”</p>
<p>
To create a secured <b>Workspace</b> object, provide a user name other than the default for the <i>user</i> argument of the <b>CreateWorkspace</b> method. You can then create a new database in the <b>Databases</b> collection for that <b>Workspace</b> object. The owner of the new database is the user specified when the workspace is created. Microsoft Jet security requires that the owner of a secured database create the database while logged on to the appropriate secured <b>Workspace</b> object. The owner of the database can be specified only when the database is first created.</p>
<p>
The owner of the new database can establish permissions on objects in the new database. To determine the owner of a database, check the value of the <b>Owner</b> property for the MSysModules <b>Document</b> object.</p>
<p>
<b>Important   </b>If you want to secure a database, don’t create the <b>Workspace</b> object by using “Admin” as the value of the <i>user </i>argument of the <b>CreateWorkspace</b> method. The Admin user is the default user, and if the Admin user is the owner of a database, any user can open the database and alter objects or permissions on objects. To create a secured database, you must always use a nondefault user account.</p>
<p>
The following example creates a secured workspace and then creates a database within that workspace. In this example, <code>strWrkName</code> is the name of the new secured workspace, <code>strUserName</code> is the name of the user account under which the workspace is created, <code>strPassword</code> is the user’s password, and <code>strDbName</code> is the name of the new database.</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim wrkSecured As Workspace
Dim dbs As Database

' Create secured workspace.
Set wrkSecured = _
&#09;DBEngine.CreateWorkspace(strWrkName, strUserName, strPassword)

' Create new secured database.
Set dbs = _
&#09;wrkSecured.CreateDatabase(strDbName, dbLangGeneral, dbVersion30)</font></pre>
<p>
If you specify a user account that doesn’t yet exist, Microsoft Jet returns an error when you attempt to create the new workspace. To create a new user account automatically when an unknown user name is passed to the <b>CreateWorkspace</b> method, you can handle the error by including the following code in the error handler. You create the new user account on the default <b>Workspace</b> object. In this example, <code>strGroupName</code> is the name of the group to which the new user is added. The code also adds the new user to the Users group.</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim wrk As Workspace, usr As User
Dim strPID As String, intC As Integer

' Return reference to default workspace.
Set wrk = DBEngine(0)
strPID = InputBox(&quot;Enter an alphanumeric PID between 4 and 20 &quot; _
&#09;&amp; &quot;characters. Be sure to write this PID down in a safe &quot; _
&#09;&amp; &quot;place, along with your user name and password.&quot;)

' Create user in Users collection of default workspace.
Set usr = wrk.CreateUser(strUserName, strPID, strPassword)
wrk.Users.Append usr

' Create user in Users collection of specified group.
Set usr = wrk.Groups(strGroupName).CreateUser(strUserName)
wrk.Groups(strGroupName).Users.Append usr</font></pre>
<p>
<b>Note   </b>The previous examples are taken from the CreateSecuredDatabase function, which is available on the companion CD-ROM.</p>
<p>
A new database can be created programmatically with DAO only; there is no SQL DDL method of creating a new database. A database, however, can’t be deleted programmatically through DAO. If you want to delete a database programmatically, use the Visual Basic for Applications <b>Kill</b> statement to remove the file at the file-system level of the operating system.</p>
</BODY>
</HTML>
