<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Support for Transactions</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2support_for_transactions"></a>Support for Transactions</h3>
<p>
Only the Microsoft Access driver supports the use of transactions. The default transaction mechanism is auto-commit, in which each statement that can be contained in a transaction is, in effect, in its own transaction. A transaction is implicitly started when such an SQL statement is executed; upon completion of the statement, it’s committed automatically.</p>
<p>
When a transaction is explicitly started (by calling <b>SQLSetConnectOption</b> with the SQL_AUTOCOMMIT <i>fOption</i> argument set to SQL_AUTOCOMMIT_OFF), the <b>SQLTransact</b> function is called to commit or roll back the transaction. The Microsoft Access driver supports multiple active statement handles on a single connection, so when <b>SQLTransact</b> is called, all statements on the connection are either committed or rolled back.</p>
<p>
All open cursors on all <i>hstmt</i> arguments associated with the <i>hdbc</i> argument are closed when the transaction is committed or rolled back. <b>SQLTransact</b> leaves any <i>hstmt</i> argument present in a prepared state if the statement was prepared, or in an allocated state if it was executed directly. Closing all cursors can have unforeseen consequences. For example, suppose an application has two active statements within an explicit transaction: one statement in which an UPDATE statement was executed, and another statement in which a SELECT statement was executed and then <b>SQLExtendedFetch</b> called to return a recordset. If <b>SQLTransact</b> is called to commit the update, all the operations performed by the UPDATE statement on the first statement handle are committed (as expected), but in addition, the recordset generated by <b>SQLExtendedFetch</b> is deleted, because the cursor on the second statement handle is closed.</p>
<p>
The Microsoft Access driver supports multiple active transactions. Because transactions are associated with a connection in ODBC, each transaction must be on a different connection (<i>hdbc </i>argument). Because nested transactions, which are supported natively by the Microsoft Jet engine, are not supported in ODBC, they are not available through the Desktop Database Drivers.</p>
<p>
The driver supports only the read-committed transaction isolation level. Transactions can contain data definition language (DDL) statements and data manipulation language (DML) statements in any order.</p>
</BODY>
</HTML>
