<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>System Tables</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2system_tables"></a>System Tables</h4>
<p>
In system tables, Microsoft Jet stores information about each of the objects. These tables are much like the tables you create in a database&nbsp;— with a few exceptions. First, they are identified internally as system objects so that you can differentiate your regular tables from system tables. Secondly, some system tables are inherently read-only. Microsoft Jet prevents you from updating the contents of some system tables to avoid breaches in security. The following table describes each of the system tables.</p>
<p>
<b>Warning   </b>The existence and structure of system tables are subject to change in every revision of Microsoft Jet. When their format changes or they disappear, applications that use system tables may no longer work. System tables are documented here solely for the purpose of giving you a better understanding of how Microsoft Jet works internally.</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>System table</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Description</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
MSysACES</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Stores each object’s permission information for each object for each user and group. As discussed in Chapter&nbsp;10, “Managing Security,” Microsoft Jet implements security by using a workgroup model. In this model, users are assigned access to specific objects through permission settings.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
MSysObjects</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Stores additional information about objects in the database, including tables and queries. The ID field in this table is used to identify objects within other system tables. This table extends the application-independent nature of Microsoft Jet by including binary fields that allow the host application (such as Microsoft Access) to store information about application-specific objects such as forms, reports, and modules.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
MSysQueries</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Stores information about the queries stored in the database. This table includes information about the type of query, the tables and fields it uses, and its criteria, sorting, and parameters.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
MSysRelationships</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Stores information about each of the relationships in the database, including information about the tables and fields used in the relationship.</font></td>
</tr>
</table><br>
<p>

<p>
<b>Microsoft Access Users   </b>Microsoft Access defines its own additional system tables to store application-specific information. These include MSysCmdbars, MSysIMEXColumns, MSysIMEXSpecs, MSysModules, and MSysModules2. When you create a Microsoft Jet database by using Microsoft Access, these system tables are automatically created.</p>
</BODY>
</HTML>
