<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Microsoft Excel Worksheets and Workbooks</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2working_with_microsoft_excel_worksheets_and_workbooks"></a>Working with Microsoft Excel Worksheets and Workbooks</h4>
<p>
The Microsoft Excel product line includes the following single-sheet worksheet and multiple-sheet workbook versions supported by the Microsoft Jet IISAM driver for Microsoft Excel: Microsoft Excel 3.0 and 4.0 (single-sheet) and Microsoft Excel&nbsp;5.0, 7.0, and 8.0 (multiple-sheet workbooks). There are a few operations that you cannot perform on Microsoft Excel worksheets or workbooks through the Microsoft Excel IISAM driver:
<ul>
<li>
You cannot delete rows from Microsoft Excel worksheets or workbooks.<br><br></li>
<li>
You can clear data from individual cells in a worksheet, but you cannot modify or clear cells that contain formulas.<br><br></li>
<li>
You cannot create indexes on Microsoft Excel worksheets or workbooks.<br><br></li>
<li>
You cannot read encrypted data through the Microsoft Excel IISAM driver. The PWD argument in the connection string cannot be used to open an encrypted worksheet or workbook, even if you supply the correct password. You must decrypt all Microsoft Excel worksheets or workbooks through the Microsoft Excel user interface if you plan to link or open them in your Microsoft Jet database.</li>
</ul>
<h5>Specifying Sheets and Ranges in Microsoft Excel Worksheet and Workbook Files</h5>
<p>
You can specify a subset of the available data when you open a Microsoft Excel worksheet or workbook. In worksheet files, you can open the entire sheet, a named range of cells, or an unnamed range of cells. In a workbook file, you can open a single worksheet, a named range anywhere in the workbook, or an unnamed range in a single worksheet. The following table lists the conventions for the DATABASE and <i>source</i> connection string arguments you must supply to access each of these objects.</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b><BR>To access this object</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>In this version of Microsoft&nbsp;Excel</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b><BR>Use this syntax</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Entire sheet in a worksheet file</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Microsoft Excel&nbsp;3.0 and 4.0</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Set the DATABASE argument to the fully qualified network or directory path to the worksheet file, without a file name. Set the <b>OpenRecordset</b> method’s <i>source</i> argument to <i>filename</i><b>#xls</b>, where <i>filename</i> is the name of the worksheet.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Entire worksheet in a workbook file</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Microsoft Excel&nbsp;5.0, 7.0, and 8.0</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Set the DATABASE argument to the fully qualified network or directory path to the workbook file, including the workbook’s file name. Set the <b>OpenRecordset</b> method’s <i>source</i> argument to <i>sheetname</i><b>$</b>, where <i>sheetname</i> is the name of the worksheet.<p>
<b>Important   </b>You must follow the worksheet name with a dollar sign ($).</p>
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Named range of cells in a worksheet or workbook file</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Microsoft Excel&nbsp;3.0, 4.0, 5.0, 7.0, and 8.0</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Set the DATABASE argument to the fully qualified network or directory path to the worksheet or workbook file, including the worksheet’s or workbook’s file name. Set the <b>OpenRecordset</b> method’s <i>source</i> argument to <i>namedrange</i>, where <i>namedrange</i> is the name previously assigned to the range in Microsoft Excel.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Unnamed range of cells in a worksheet file</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Microsoft Excel&nbsp;3.0 and 4.0</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Set the DATABASE argument to the fully qualified network or directory path to the worksheet file, including the worksheet’s file name. Set the <b>OpenRecordset</b> method’s <i>source</i> argument to the range of cells you want to access, such as <b>A1:D12</b>.</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Unnamed range of cells in a single worksheet in a workbook file</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Microsoft Excel&nbsp;5.0, 7.0, and 8.0</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Set the DATABASE argument to the fully qualified network or directory path to the workbook file, including the workbook’s file name. Set the <b>OpenRecordset</b> method’s <i>source</i> argument to the sheet you want to link or open as <i>sheetname</i><b>$</b><i>range</i>. For example, to access cells A1 through D12 in a worksheet named 1996 Sales, you would use the following in the <i>source</i> argument: <b>1996 Sales$A1:D12</b>.</font></td>
</tr>
</table><br>
<p>
<b>Note   </b>You cannot specify a value in a range that exceeds the maximum number of rows, columns, or sheets for the worksheet or workbook. See your Microsoft Excel documentation for these values.</p>
<h5>Microsoft Excel Sheet and Range Specification Examples</h5>
<p>
The following code examples illustrate how to specify an entire worksheet, a named range, and an unnamed range of cells in a Microsoft Excel&nbsp;4.0 worksheet and in a Microsoft Excel 8.0 workbook.</p>
<p>
This first example opens a Microsoft Excel&nbsp;4.0 worksheet from a Microsoft Jet database three times to demonstrate how to open an entire worksheet, how to open a named range in a worksheet, and how to open an unnamed range in a worksheet. The ranges are tested by counting the number of records that appear in the <b>Recordset</b> object.</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub Excel4SheetAndRangeTest()
&#09;Dim dbs As Database
&#09;Dim rst As Recordset

&#09;' Open the Microsoft Excel&nbsp;4.0 sample spreadsheet.
&#09;Set dbs = OpenDatabase(&quot;C:\JetBook\Samples\Excel\Supplier.xls&quot;, _
&#09;&#09;False, False, &quot;Excel&nbsp;4.0;HDR=NO;&quot;)
&#09;' Create a Recordset object for the worksheet Supplier.xls.
&#09;Set rst = dbs.OpenRecordset(&quot;Supplier$&quot;)
&#09;' Move to the last record and then count the records.
&#09;rst.MoveLast
&#09;MsgBox &quot;There are &quot; &amp; rst.RecordCount &amp; &quot; rows in this worksheet.&quot;
&#09;rst.Close

&#09;' Open an existing named range.
&#09;Set rst = dbs.OpenRecordset(&quot;FirstTenRows&quot;)
&#09;' Move to the last record and then count the records.
&#09;rst.MoveLast
&#09;MsgBox &quot;There are &quot; &amp; rst.RecordCount &amp; &quot; rows in named range FirstTenRows.&quot;
&#09;rst.Close

&#09;' Create a Recordset object for the range A1 through G5
&#09;' in the worksheet Supplier.xls.
&#09;Set rst = dbs.OpenRecordset(&quot;A1:G5&quot;)
&#09;' Move to the last record and then count the records.
&#09;rst.MoveLast
&#09;MsgBox &quot;There are &quot; &amp; rst.RecordCount &amp; &quot; rows in this range.&quot;

&#09;rst.Close
&#09;Set rst = Nothing
&#09;dbs.Close
&#09;Set dbs = Nothing
End Sub</font></pre>
<p>
This next example opens a worksheet in a Microsoft Excel 8.0 workbook from a Microsoft Jet database three times to demonstrate how to open a worksheet in a workbook, how to open a named range in a workbook, and how to open an unnamed range in a worksheet in the workbook. The ranges are tested by counting the number of records that appear in the <b>Recordset</b> object.</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub Excel8SheetAndRangeTest()
&#09;Dim dbs As Database
&#09;Dim rst As Recordset

&#09;' Open the Microsoft Excel&nbsp;97 sample spreadsheet.
&#09;Set dbs = OpenDatabase(&quot;C:\JetBook\Samples\Excel\Products97.xls&quot;, _
&#09;&#09; False, False, &quot;Excel 8.0;HDR=NO;&quot;)
&#09;' Create a Recordset object for the Products worksheet.
&#09;Set rst = dbs.OpenRecordset(&quot;Products$&quot;)
&#09;' Move to the last record and then count the records.
&#09;rst.MoveLast
&#09;MsgBox &quot;There are &quot; &amp; rst.RecordCount &amp; &quot; rows in this worksheet.&quot;
&#09;rst.Close

&#09;' Create a Recordset object for the named range &quot;SecondTenRows&quot;.
&#09;Set rst = dbs.OpenRecordset(&quot;SecondTenRows&quot;)
&#09;' Move to the last record and then count the records.
&#09;rst.MoveLast
&#09;MsgBox &quot;There are &quot; &amp; rst.RecordCount &amp; &quot; rows in this named range.&quot;
&#09;rstSales.Close

&#09;' Create a Recordset object for the range A1 through E5 in the
&#09;' Products worksheet. 
&#09;Set rst = dbs.OpenRecordset(&quot;Products$A1:E5&quot;)
&#09;' Move to the last record and then count the records.
&#09;rst.MoveLast
&#09;MsgBox &quot;There are &quot; &amp; rst.RecordCount &amp; &quot; rows in this range.&quot;

&#09;rst.Close
&#09;Set rst = Nothing
&#09;dbs.Close
&#09;Set dbs = Nothing
End Sub</font></pre>
</BODY>
</HTML>
