<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transaction Limitations</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2transaction_limitations"></a>Transaction Limitations</h4>
<p>
Although transactions can improve the functionality and performance of your client/server applications, they have several limitations, as described in the following sections.</p>
<h5>Transactions Cannot Be Nested</h5>
<p>
Although Microsoft Jet supports nesting transactions on its own native data sources, ODBC doesn’t support nesting transactions. Because of this, Microsoft Jet doesn’t support any transaction nesting against ODBC data and will ignore attempts to nest transactions. This is a common code change you need to make when converting code that runs against local data sources to work with ODBC data sources.</p>
<h5>Some Queries Are Not Allowed in Transactions</h5>
<p>
Some queries may not be allowed within a transaction. For example, SQL&nbsp;Server doesn’t allow data definition, permission, or backup-related statements within transactions. Check your server’s documentation to determine these limits.</p>
<h5>Server Transaction Commands Are Not Allowed</h5>
<p>
Microsoft Jet often conserves connections by sharing them between queries. If you use server-specific transaction commands in pass-through queries, they can confuse the internal tracking of server transactions performed by Microsoft Jet, as well as provide you with unexpected results. For example, on SQL Server, don’t use the SQL Server command BEGIN TRAN. Instead, use the <b>BeginTrans</b> method. Microsoft Jet translates DAO transaction methods into the equivalent server commands.</p>
<h5>Server Limits on Locks</h5>
<p>
Locks may be placed on the server for every operation you perform inside a transaction. Be aware of the number of locks you’re requesting and make sure your server is configured to handle them.</p>
<p>
<b>Note   </b>You can control the maximum number of locks Microsoft Jet places against a shared database using the MaxLocksPerFile registry setting. For more information, see “Setting the Maximum Number of Locks” in Chapter&nbsp;13, “Optimizing Performance.”</p>
<h5>Isolating Transactions</h5>
<p>
For efficiency reasons, remote data used within <b>Workspace</b> objects does not have an isolated transaction space. For example, if you use two <b>Workspace</b> objects to open a table attached to an ODBC data source, transaction methods on one <b>Workspace</b> object will affect transactions on the other. Because it’s unusual to have two different sets of transactions used concurrently, this isn’t likely to affect much code.</p>
<p>
If you want to have multiple concurrent transactions on your server, you can force each workspace to have a distinct remote transaction space by setting the <b>IsolateODBCTrans</b> property of the <b>Workspace</b> object to <b>True</b>. This prevents the workspace from sharing connections with other workspaces, which guarantees transaction isolation. The <b>IsolateODBCTrans</b> property can’t be used with an ODBCDirect <b>Workspace</b> object.</p>
</BODY>
</HTML>
