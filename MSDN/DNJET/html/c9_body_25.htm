<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Forward-Only-Type Recordsets</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2forward-only-type_recordsets"></a>Forward-Only-Type Recordsets</h4>
<p>
By default, when you request a dynaset- or snapshot-type <b>Recordset</b> object, you can scroll through the records in both directions. Forward-only-type <b>Recordset</b> objects have an additional feature that can conserve connection resources by allowing scrolling in only one direction. This is helpful when you only need to make a single pass through the <b>Recordset</b>.</p>
<p>
You can specify a forward-only-type <b>Recordset</b> object by specifying the <b>dbOpenForwardOnly</b> constant in the <i>type</i> argument the <b>OpenRecordset</b> method. This retrieves the result set and places it in a non-scrollable buffer, which conserves system memory. Because you can only scroll forward through the records, you cannot use the <b>MovePrevious</b> or <b>MoveFirst</b> methods, or the <b>Move</b> method with a negative value in the <i>rows</i> argument. Less obviously, you also cannot use the <b>MoveLast</b> method because it implies having a set of <i>records</i>&nbsp;— with forward-only-type <b>Recordset</b> object, only one record exists at any given time.</p>
<p>
A forward-only-type <b>Recordset</b> object does not save any data from previous records that you have retrieved. Thus, you avoid the in-memory copy and temporary database creation operations, often with considerable performance savings.</p>
</BODY>
</HTML>
