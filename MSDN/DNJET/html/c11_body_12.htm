<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Updating Records from the Employee Database</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2updating_records_from_the_employee_database"></a>Updating Records from the Employee Database</h4>
<p>
The <b>UpdateEmpRec</b> member function updates records from the Employee database:</p>
<pre><FONT FACE="Courier New" SIZE="3">void CDAOEMPDoc::UpdateEmpRec(long m_nEmpNum, LPCTSTR lpszFirstName, 
&#09;&#09;&#09;LPCTSTR lpszHomePhone, LPCTSTR lpszLastName,&#09;
&#09;&#09;&#09;LPCTSTR lpszNotes, DATE HireDate)
{
&#09;//Convert the date to a dbVariant.
&#09;COleVariant cdbHireDate;
&#09;cdbHireDate.date = HireDate;
&#09;cdbHireDate.vt = VT_DATE;

&#09;try
&#09;&#09;{
&#09;&#09;//The recordset must be in edit mode.
&#09;&#09;if(m_cEmpRecordSet.GetEditMode() == dbEditNone)
&#09;&#09;&#09;m_cEmpRecordSet.Edit();

&#09;&#09;m_cEmpRecordSet.SetField(EMP_FIRST_NAME, COleVariant(lpszFirstName, VT_BSTRT));
&#09;&#09;m_cEmpRecordSet.SetField(EMP_HOME_PHONE, COleVariant(lpszHomePhone, VT_BSTRT));
&#09;&#09;m_cEmpRecordSet.SetField(EMP_LAST_NAME, COleVariant(lpszLastName, VT_BSTRT));
&#09;&#09;m_cEmpRecordSet.SetField(EMP_NOTES, COleVariant(lpszNotes, VT_BSTRT));
&#09;&#09;m_cEmpRecordSet.SetField(EMP_HIRE_DATE, cdbHireDate);

&#09;&#09;//Commit the changes.
&#09;&#09;m_cEmpRecordSet.Update();

&#09;&#09;m_bEmptyTable = FALSE;

&#09;&#09;//Return to the edited record.
&#09;&#09;CdbBookmark cBookmark = m_cEmpRecordSet.GetLastModified();
&#09;&#09;m_cEmpRecordSet.SetBookmark(cBookmark);
&#09;&#09;}

&#09;catch (CdbException e)
&#09;&#09;{
&#09;&#09;CdbLastOLEError exError;
&#09;&#09;TCHAR szBuf[256];

&#09;&#09;wsprintf(szBuf, _T(&quot;Error 0x%lx : %s\n&quot;), e.m_hr, (LPCTSTR) exError.GetDescription());
&#09;&#09;AfxMessageBox(szBuf);
&#09;&#09;}
}</font></pre>
<p>
Because recordset manipulation functions live in the document, the application must pass the record’s field values from the view to the <b>UpdateEmpRec</b> member function. To update the values, this member function uses the dbDAO <b>SetField</b> method, which does not exist in Visual Basic DAO. You use the <b>SetField</b> method to bypass the <b>Fields</b> collection, resulting in more readable code and a performance gain.</p>
<p>
In terms of data conversion, the process of updating values is the reverse of reading values: Member variables must be converted to variants. The MFC <b>COleVariant</b> class handles most common data type conversions. However, there is no conversion for <b>DATE</b> types, so the <b>UpdateEmpRec</b> member function uses a temporary variable (<i>cdbHireDate</i>) to store the resulting variant.</p>
<p>
<b>Note   </b>You must make sure that the recordset is in Edit mode before attempting an update. This happens by default for an added record, but Edit mode must be turned on explicitly for an existing record. This is a result of the document/view split; actions in the view must be mapped to corresponding behavior in the document. Any edits entered into the form are not updated until the user issues a menu or toolbar command, resulting in a position change in the recordset.</p>
</BODY>
</HTML>
