<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limiting the Number of Fields Selected</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2limiting_the_number_of_fields_selected"></a>Limiting the Number of Fields Selected</h4>
<p>
To limit the amount of data traveling across a network, limit the number of fields you select from the database. Although <code>SELECT *</code> is quick and easy to type, it may not be quick and easy for the network to return all the data. For example, consider a table with fifteen fields, one being an integer key value, and the rest being Memo and Text fields. If you are interested only in the key value, select only that field. Otherwise, your application will be subject to a performance penalty caused by retrieving unnecessary fields.</p>
<p>
The BookSales and BookSalesOptimized sample applications don’t apply the technique of limiting fields because almost all the fields in the tables are necessary. Also, because there are no Memo or Long Binary (OLE Object) fields that could potentially slow down the application, there is no need to exclude such fields. However, if the tables used by your application have many fields, consider retrieving just the few you need to display. If the user needs to see more detailed information in a different context, your application can request additional fields using a separate query.</p>
</BODY>
</HTML>
