<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Large Value Fields</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2large_value_fields"></a>Large Value Fields</h4>
<p>
Long Binary (OLE Object) and Memo fields are collectively referred to as “large value” fields because they are typically much larger than fields of other data types. A record containing one or more large value fields usually exceeds the 2 KB size limit of a record. When this happens, each large value field is represented in the record by a pointer, which references one or more separate 2 KB memory pages on which the data is actually stored.</p>
<p>
When you query tables containing large value fields, don’t include those fields in the field list unless you absolutely need them, because returning large value fields takes time.</p>
<p>
A snapshot- or forward-only-type <b>Recordset </b>object opened against large value fields in an .mdb file does not actually contain the large value field data. Instead, the <b>Recordset</b> object maintains references to the data in the original tables, the same way a dynaset references all data.</p>
<h5>Handling Large Value Data</h5>
<p>
Sometimes you’ll need to read or copy data from a large value field when you don’t have sufficient memory to copy the entire field in a single statement. You instead have to break up the data into smaller units, or “chunks,” that will fit available memory. The <b>FieldSize</b> method tells you how large the field is, measured in bytes. Then you can use the <b>GetChunk</b> method to copy a specific number of bytes to a buffer, and use the <b>AppendChunk</b> method to copy the buffer to the final location. You then continue using the <b>GetChunk</b> and <b>AppendChunk</b> methods until the entire field is copied.</p>
</BODY>
</HTML>
