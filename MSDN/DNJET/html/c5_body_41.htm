<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Constraints</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2constraints"></a>Constraints</h4>
<p>
Any single field can impose a number of constraints on data in that field when records are added or updated. These constraints are defined by a handful of properties. The <b>AllowZeroLength</b> property on a Text or Memo field indicates whether the field will accept a zero-length string. The <b>Required</b> property indicates whether some value must be entered in the field, or if it instead can accept a <b>Null</b> value. For a <b>Field</b> object in a <b>Recordset</b> object, these properties are read-only; their state is determined by the underlying table.</p>
<p>
<b>See Also   </b>For more information about how to set these properties on the <b>Field</b> objects of a <b>TableDef</b> object, or how to set them by using SQL DDL statements, see Chapter&nbsp;3, “<a href="c1_body_7.htm">Data Definition and Integrity</a>.”</p>
<h5>Field-Level Data Validation</h5>
<p>
Validation is the process of determining whether data entered in a field’s <b>Value</b> property is within an acceptable range. A <b>Field</b> object in a <b>Recordset</b> object may have the <b>ValidationRule</b> and <b>ValidationText</b> properties set. The <b>ValidationRule</b> property is a criteria expression, similar to the criteria of an SQL WHERE clause, without the WHERE keyword. The <b>ValidationText</b> property is a string that’s displayed in an error message by Microsoft Access, or by the <b>Data</b> control in Visual Basic if you attempt to enter data in the field that is outside the limits of the <b>ValidationRule</b> property. If you’re coding from DAO directly, you can use the <b>ValidationText</b> property for a message you want to display to the user.</p>
<p>
<b>See Also   </b>For more information about setting table-level validation properties, see Chapter&nbsp;3, “<a href="c1_body_7.htm">Data Definition and Integrity</a>.”</p>
<p>
<b>Note   </b>The <b>ValidationRule</b> and <b>ValidationText</b> properties also exist at the <b>Recordset</b> object level. These are read-only properties, reflecting the table-level validation scheme established on the base table from which the current record is retrieved.</p>
<p>
A <b>Field </b>object in a <b>Recordset </b>object also features the <b>ValidateOnSet</b> property. When this property is set to <b>True</b>, validation is checked as soon as the field’s <b>Value</b> property is set. If this property is set to <b>False</b>, validation is checked only when the completed record is updated. The default value is <b>False</b>. For example, if you’re adding data to a record that contains a large Memo or Long Binary (OLE Object) field and has a setting for the <b>ValidationRule </b>property, you should determine whether the new data violates the validation rule before attempting to write the data, so that you don’t waste time attempting to write an invalid record to disk. (Note that you should write the data when the field’s value is set, not when the entire record is written to disk.) To check validation when the field’s value is set, set the <b>ValidateOnSet</b> property to <b>True</b>.</p>
</BODY>
</HTML>
