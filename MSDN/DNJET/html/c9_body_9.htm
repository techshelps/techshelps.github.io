<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing ODBC Data with an ODBCDirect Workspace</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2accessing_odbc_data_with_an_odbcdirect_workspace"></a>Accessing ODBC Data with an ODBCDirect Workspace</h3>
<p>
With ODBCDirect, you can access server data by using the existing DAO object model directly on top of the ODBC application programming interface (API). ODBCDirect implements a thin code layer over the ODBC API that establishes connections, creates cursors, and runs complex procedures using minimal workstation resources, without going through Microsoft Jet. ODBCDirect offers the following advantages:
<ul>
<li>
<b>Direct Access   </b>Your application can access ODBC data sources directly. You can improve performance, reduce network traffic, and take advantage of the server’s capabilities by processing more data on the server.<br><br></li>
<li>
<b>Reduced Resource Requirements   </b>You don’t have to go through Microsoft Jet, so your application requires fewer resources at the workstation. If you’re using ODBCDirect from Microsoft Access, keep in mind that Microsoft Access always loads Microsoft Jet, even though ODBCDirect operations don’t go through Microsoft Jet.<br><br></li>
<li>
<b>Improved Access to Server-Specific Functionality   </b>You can take advantage of features specific to the ODBC server that aren’t available if you’re using ODBC through Microsoft Jet. For example, in an ODBCDirect workspace, you can specify where cursors are located&nbsp;— on the client or on the server&nbsp;— for servers that support different types of cursors.<br><br></li>
<li>
<b>Asynchronous Queries   </b>You can run a query and perform other operations without waiting for the query to finish. You can then check properties to keep track of the query’s progress. You can enhance concurrency and optimize performance with asynchronous queries.<br><br></li>
<li>
<b>Batch Optimistic Updating   </b>With batch optimistic updating, you can cache recordset changes locally and then submit these changes to the server in a single batch.<br><br></li>
<li>
<b>Flexible Stored Procedure Execution   </b>You can specify input parameters and check return values from stored procedures&nbsp;— operations that are not possible in a Microsoft Jet workspace.</li>
</ul>
<p>
<b>Note   </b>In an ODBCDirect workspace, you can’t modify your database’s structure using DAO methods such as the <b>CreateTableDef</b> method, but you can run SQL data definition language (DDL) statements using the <b>Execute</b> method to modify the structure of the database.</p>
<p>
<b>See Also   </b>For more information about these ODBCDirect features, see “The Object Model for ODBCDirect Workspaces” and “Using ODBCDirect” later in this chapter.</p>
</BODY>
</HTML>
