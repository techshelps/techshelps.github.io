<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating and Deleting Indexes by Using DAO</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2creating_and_deleting_indexes_by_using_dao"></a>Creating and Deleting Indexes by Using DAO</h3>
<p>
As discussed in Chapter&nbsp;2, “Introducing Data Access Objects,” a <b>TableDef</b> object can have one or more <b>Index</b> objects in its <b>Indexes</b> collection. Each <b>Index</b> object is in turn made up of one or more <b>Field</b> objects in its <b>Fields</b> collection.</p>
<p>
Make sure you don’t confuse the <b>Fields</b> collection of the <b>TableDef</b> object itself with the <b>Fields</b> collection of any given <b>Index</b> object. All the <b>Field</b> objects in an <b>Index</b> object’s <b>Fields</b> collection must also be <b>Field</b> objects in the <b>Fields</b> collection of the <b>TableDef</b> object, but each <b>Index</b> object has its own <b>Fields</b> collection. These collections exist as a hierarchy of objects and collections.</p>
<p>
Unlike some database systems, such as FoxPro, with Microsoft Jet you can’t create an index on an expression, such as a subset of a field or a calculated field.</p>
<p>
It’s common to designate one field, or a combination of fields, as the primary key of a table at the time it’s created. The following function creates a primary key based on one or more fields in a table. The third argument to the function is a parameter array in which you can specify one or more field names to be included in the primary key:</p>
<pre><FONT FACE="Courier New" SIZE="3">Function AddPrimaryKeyToTable(tdf As TableDef, strPKName As String, _
&#09;ParamArray varFieldName() As Variant) As Boolean
&#09;' This procedure creates a table with a primary key.

&#09;Dim fld As Field
&#09;Dim idxPK As Index
&#09;Dim intC As Integer
&#09;Const conTableExists As Integer = 3010

&#09;On Error GoTo Err_AddPrimaryKeyToTable

&#09;' Create index.
&#09;Set idxPK = tdf.CreateIndex(strPKName)

&#09;For intC = 0 To UBound(varFieldName())
&#09;&#09;' Create field in index.
&#09;&#09;Set fld = idxPK.CreateField(varFieldName(intC))
&#09;&#09;idxPK.Fields.Append fld
&#09;Next

&#09;' Set Primary property of index.
&#09;idxPK.Primary = True

&#09;' Append index.
&#09;tdf.Indexes.Append idxPK
&#09;AddPrimaryKeyToTable = True

&#09;Exit_AddPrimaryKeyToTable:
&#09;&#09;Exit Function

&#09;Err_AddPrimaryKeyToTable:
&#09;&#09;MsgBox &quot;Error: &quot; &amp; Err &amp; vbCrLf &amp; Err.Description
&#09;&#09;AddPrimaryKeyToTable = False
&#09;&#09;Resume Exit_AddPrimaryKeyToTable
End Function</font></pre>
<p>
Note that you can use any valid Microsoft Jet name for the primary key. When you add a primary key to a table in the Microsoft Access user interface, the index is automatically named PrimaryKey, but you can change the name.</p>
<p>
<b>See Also   </b>For information about what constitutes a valid Microsoft Jet name, see “Guidelines for Naming DAO Objects” in Chapter&nbsp;2, “Introducing Data Access Objects.”</p>
<p>
In most cases, the name you give an index is not significant. However, if you are opening table-type <b>Recordset</b> objects in code and want to specify the <b>Index</b> property of the <b>Recordset</b> object, you must know and specify the actual index name.</p>
<p>
<b>See Also   </b>For information about the various types of <b>Recordset</b> objects and how to use them, see Chapter&nbsp;5, “<a href="c5_body.htm">Working with Records and Fields</a>.”</p>
<p>
You can delete an index from a table by using the <b>Delete</b> method on the <b>Indexes</b> collection of a <b>TableDef</b> object. In the following example, <code>strDbPath</code> is the path to the database, <code>strTableName</code> is the name of the table containing the index, and <code>strIndex</code> is the name of the index:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database
Dim tdf As TableDef

Set dbs = OpenDatabase(strDbPath)
Set tdf = dbs.TableDefs(strTableName)
tdf.Indexes.Delete strIndex</font></pre>
<p>
<b>Note   </b>For performance reasons, you can’t create more than thirty-two indexes on a table in a Microsoft Jet database.</p>
</BODY>
</HTML>
