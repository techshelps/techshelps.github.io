<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>User-Level and Share-Level Security</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2user-level_and_share-level_security"></a>User-Level and Share-Level Security</h3>
<p>
Microsoft Jet provides both <i>share-level</i> and <i>user-level security</i>. In share-level security systems, passwords are associated with specific objects, not with users. Any user who knows the password for an object can access that object. Microsoft Jet provides a simple form of share-level security: the ability to password-protect opening a database. Add a password to your database when all you want to do is prevent unauthorized users from opening your application, and you’re not concerned about what authorized users do once they’re inside.</p>
<p>
If you need more control, however, perhaps because you want to prevent users from modifying the design of your tables and queries, Microsoft Jet also provides user-level security. With user-level security, users are <i>authenticated</i> when they open a Microsoft Jet <b>Workspace</b> object. A user is authenticated by logging on to the system with a name and password, which are compared to a database of user account information that is called a <i>workgroup information file</i>. After the user is authenticated, the system determines the user’s level of access to an object by comparing the user’s identification to a set of object permissions that have been defined for that object by the application’s administrator. Different users can have different levels of permissions for the same objects.</p>
<p>
Microsoft Jet user-level security functions as follows: Administrators assign specific permissions for <b>Database</b> objects to users and groups. When a user starts up a session of the Microsoft Jet database engine in a secure environment, the user logs on, entering a user name and password. The password’s function is to authenticate the user, not to give access to any particular objects. Microsoft Jet then reads the current workgroup information file to determine all the groups the user belongs to, and stores that information internally. Every time the user tries to perform an action such as opening a database, browsing a table, or modifying a query, Microsoft Jet first checks to see if the user, or <i>any</i> of the groups to which the user belongs, has the necessary permissions to perform this action. If the user or groups the user belongs to have sufficient permissions, Microsoft Jet performs the action. If not, Microsoft Jet returns an error indicating that permission is denied, and the operation fails.</p>
</BODY>
</HTML>
