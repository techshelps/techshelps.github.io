<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Objects</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2objects"></a>Objects</h4>
<p>
The dbDAO classes have the same object names as in Visual Basic, except that all objects have a <b>Cdb</b> prefix. For example, <b>Recordset</b> becomes <b>CdbRecordset</b>, <b>DBEngine</b> becomes <b>CdbDBEngine</b>, and so on. New objects defined by the dbDAO classes that don’t exist in Visual Basic, such as <b>CdbBookmark</b>, <b>CdbLastOleError</b>, and <b>CdbException</b>, are described later in this chapter.</p>
<p>
Other objects used internally in the dbDAO classes are <b>CdbObject</b>, <b>CdbOleObject</b>, and <b>CdbGetRowsEx</b>. Because they are used internally, they exist in the dbDAO header file.</p>
</BODY>
</HTML>
