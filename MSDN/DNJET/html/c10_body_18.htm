<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Microsoft Access RunPermissions Property with User-Level Security</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2using_the_microsoft_access_runpermissions_property_with_user-level_security"></a>Using the Microsoft Access RunPermissions Property with User-Level Security</h3>
<p>
For Microsoft Access to display a table or query, it needs to read the design of that table or query. For example, it needs to read field names and other field properties, such as the <b>Format</b> and <b>InputMask</b> properties. As a result, for a user to read and display the data in a table or query, that user must also have permissions to read the design of the table or query. (This is why selecting the <b>Read Data</b> permission check box in the <b>User And Group Permissions</b> dialog box automatically selects the <b>Read Design</b> check box as well.) If you don’t want your users to see the design of your table or query, you can create a query and set its <b>RunPermissions</b> property to restrict their access to this information.</p>
<p>
The <b>RunPermissions</b> property determines whether Microsoft Access uses the query user’s permissions or the query owner’s permissions when checking the user-level security permissions for each of the underlying tables in a query. If the <b>RunPermissions</b> property is set to User’s, then the users of a query have only their own permissions to view data in underlying tables. However, if the owner of a query sets the <b>RunPermissions</b> property to Owner’s, anyone who uses that query will have the same level of permissions to view data in the underlying tables as the query’s owner.</p>
<p>
Using the <b>RunPermissions</b> property, you can create queries to display data to users who don’t have permission to access the underlying tables. You can build different views of your data, which will provide record-level and field-level security for a table. For example, suppose you have a secure database with an Employees table and a Salary table. Using the <b>RunPermissions</b> property, you can build several views of the two tables: one that allows a user or group to view but not update the Salary field; a second that allows a different user or group to view and update the Salary field; and a third that allows another user or group to view the Salary field only for a certain category of employees.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To prevent users from viewing the design of underlying tables or queries</b>
<ol>
<li>
For the users or groups whose access you want to restrict, remove all permissions for the tables or queries whose design you want to secure.<br><br></li>
<li>
Build a new query that includes all the fields you want to include from those tables or queries. You can exclude access to a field by omitting that field. You can also limit access to a certain range of values by defining criteria for your query.<br><br></li>
<li>
In the query’s property sheet, set the <b>RunPermissions</b> property of the new query to Owner’s.<p>
<b>Note   </b>You can also set the <b>RunPermissions</b> property for a query in SQL view by using the WITH OWNERACCESS OPTION declaration in the SQL statement.</p>
</li>
<li>
Grant appropriate data permissions for the new query to the users and groups that you want to be able to update data, but not view the design of the underlying table or query. This would typically be Read Design, Read Data, Update Data, Delete Data, and Insert Data permissions.</li>
</ol>
<p>
<b>Tip   </b>You can base forms and reports on the new query.</p>
<p>
Users can update data in the underlying tables or queries by using the new query or forms based on it. However, they won’t be able to view the design of the underlying tables or queries. If they try to view the design of the new query, they receive a message that they don’t have permissions to view the source tables or queries.</p>
<p>
<b>Important   </b>By default, the user who creates a query is its owner, and only the owner of a query can save changes to it if the <b>RunPermissions</b> property is set to Owner’s. Even members of the Admins group or users with Administer permission are prevented from saving changes to a query created by another user if the <b>RunPermissions</b> property is set to Owner’s. However, anyone with Modify Design permission for the query can set the <b>RunPermissions</b> property to User’s and then successfully save changes to the query.</p>
<p>
Because the creator of a query owns it by default, having the <b>RunPermissions</b> property set to Owner’s can create problems if you need to allow more than one user to work with the design of a query. To correct this, the ownership of the query can be transferred to a group. To do this, create a group, change the owner of the query to this group on the <b>Change Owner</b> tab of the <b>User And Group Permissions</b> dialog box, and then add the users who need to modify the query to the new group. Any member of the new group will be able to edit the query and save changes.</p>
<p>
Similarly, if a user is otherwise prevented from creating or adding to a table, you can create a make-table or append query and set its <b>RunPermissions</b> property to Owner’s.</p>
<p>
<b>See Also   </b>For information about using the WITH OWNERACCESS OPTION declaration in an SQL statement, see “Owner Access Queries” later in this chapter.</p>
</BODY>
</HTML>
