<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Optimistic Locking</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2optimistic_locking"></a>Optimistic Locking</h4>
<p>
With optimistic locking, the engine locks the page only when you try to commit the record changes using the <b>Update</b> method. Because the lock is applied only when your application attempts to commit changes, the time the lock is in place is minimized; this is optimistic locking’s main advantage.</p>
<p>
The disadvantage of optimistic locking is that when a user begins to edit a record, you can’t be sure that the update will succeed. An update that relies on optimistic locking will fail if another user has updated a record while the first user is still editing it.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To use optimistic locking in your code</b>
<ol>
<li>
Open a table- or dynaset-type <b>Recordset</b> object on the data you want to edit.<br><br></li>
<li>
Enable optimistic locking by setting the <b>LockEdits</b> property of the <b>Recordset</b> object to <b>False</b>.<br><br></li>
<li>
Move to the record you’re interested in.<br><br></li>
<li>
Use the <b>Edit</b> method to allow edits to the record (the record is not yet locked).<br><br></li>
<li>
Make changes to the record.<br><br></li>
<li>
Commit the record changes using the <b>Update</b> method (this attempts to lock the record).<br><br></li>
<li>
Check to see if the <b>Update</b> method succeeded. If it didn’t, try again.</li>
</ol>
<p>
The following code gives an example of how to implement optimistic locking. In this example, <code>strDbPath</code> is the path to the NorthwindTables database:</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub LockOptimistic()
&#09;Dim dbs As Database
&#09;Dim rst As Recordset
&#09;Dim blnEdit As Boolean
&#09;
&#09;' Open the database in shared mode.
&#09;Set dbs = OpenDatabase(strDbPath, False)
&#09;  
&#09;' Open the Orders table in shared mode.
&#09;Set rst = dbs.OpenRecordset(&quot;Orders&quot;, dbOpenDynaset, _
&#09;&#09;dbSeeChanges, dbOptimistic)
&#09;  
&#09;' Set the multiuser options for the recordset.
&#09;With rst
&#09;&#09;' Setting LockEdits to False tells Jet to use
&#09;&#09;' optimistic locking.
&#09;&#09;.LockEdits = False
&#09;&#09;' Find record to edit.
&#09;&#09;.FindFirst &quot;[OrderID]=10565&quot;
&#09;&#09;.Edit
&#09;&#09;![ShipAddress] = &quot;New Address 2&quot;
&#09;&#09;
&#09;&#09;' Check for errors when trying to commit the record.
&#09;&#09;Do While True
&#09;&#09;&#09;On Error Resume Next
&#09;&#09;&#09;' Attempt update.
&#09;&#09;&#09;.Update
&#09;&#09;&#09;' If error occurs, prompt user to try again.
&#09;&#09;&#09;If Err.Number &lt;&gt; 0 Then
&#09;&#09;&#09;&#09;If MsgBox(&quot;Cannot commit: &quot; &amp; Err.Description &amp; &quot; Try again?&quot;, _
&#09;&#09;&#09;&#09;&#09;&#09;vbYesNo + vbQuestion) &lt;&gt; vbYes Then
&#09;&#09;&#09;&#09;&#09;' Cancel the edit if user does not wish to try again.
&#09;&#09;&#09;&#09;&#09;.CancelUpdate
&#09;&#09;&#09;&#09;&#09;' Set flag to False to prevent another iteration.
&#09;&#09;&#09;&#09;&#09;blnEdit = False
&#09;&#09;&#09;&#09;End If
&#09;&#09;&#09;Else
&#09;&#09;&#09;&#09;' If no error, exit loop.
&#09;&#09;&#09;&#09;Exit Do
&#09;&#09;&#09;End If
&#09;&#09;Loop
&#09;End With
&#09;&#09;  
&#09;rst.Close
&#09;dbs.Close
End Sub</font></pre>
<p>
<b>Important   </b>Optimistic locking turns into pessimistic locking when transactions are used. Because a transaction holds a write lock until the transaction is committed, a pessimistic locking mode occurs even though the <b>LockEdits</b> property may have been set to <b>False</b>. Also, it’s possible for the <b>Update</b> method to fail in optimistic locking. Just because a write lock has not been placed by an <b>Edit</b> method, it does not mean that a write lock has not been placed by another user using the <b>Update</b> method. In other words, one user could have a recordset open with pessimistic locking and cause another user who has the recordset open with optimistic locking and who is trying to update the same data to fail.</p>
</BODY>
</HTML>
