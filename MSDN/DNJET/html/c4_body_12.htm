<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The INNER JOIN</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2the_inner_join"></a>The INNER JOIN</h4>
<p>
The SQL query produced by the query design grid in Microsoft Access uses the INNER JOIN clause to join two tables. Here is the same query as produced by Microsoft Access:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Products.ProductID, 
&#09;Products.ProductName, 
&#09;Categories.CategoryID, 
&#09;Categories.CategoryName
FROM Categories 
INNER JOIN Products 
ON Categories.CategoryID = Products.CategoryID;</font></pre>
<p>
The INNER JOIN names the linking criterion used to find matches between the two tables. This is the preferred format for specifying joins with Microsoft Jet, for two reasons. First, this format makes the join criteria explicit, rather than inferring it from the condition in the WHERE clause. Second, Microsoft Jet requires the use of this format in order for the results of this join to be updatable.</p>
<p>
<b>See Also   </b>For a full discussion of query updatability, see Chapter&nbsp;5, “<a href="c5_body.htm">Working with Records and Fields</a>.”</p>
<p>
Many people also prefer this format because it’s self-documenting, unlike the implicit join specified in the WHERE clause. The WHERE clause is then reserved for selection criteria, rather than doing dual-duty as a join specifier:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Products.ProductID, 
&#09;Products.ProductName, 
&#09;Categories.CategoryID, 
&#09;Categories.CategoryName
FROM Categories 
INNER JOIN Products 
ON Categories.CategoryID = Products.CategoryID
WHERE Products.CategoryID IN (1,3);</font></pre>
<p>
A join can specify more than one linking condition. The NorthwindTables sample database contains the saved query PreferredSuppliers, which includes all suppliers that provide a product that has sold more than $10,000 worth of inventory. The following query is based on the PreferredSuppliers query and the Products table:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;PreferredSuppliers.ProductID, 
&#09;PreferredSuppliers.SupplierID, 
&#09;Products.CategoryID, 
&#09;Products.ProductName
FROM PreferredSuppliers 
INNER JOIN Products 
ON (PreferredSuppliers.SupplierID = Products.SupplierID) 
AND (PreferredSuppliers.ProductID = Products.ProductID);</font></pre>
<p>
Complex join conditions can be specified. The following example joins six tables:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Orders.OrderID, 
&#09;Employees.EmployeeID, 
&#09;Customers.CompanyName, 
&#09;[Order Details].ProductID, 
&#09;Products.ProductName, 
&#09;Categories.CategoryName
FROM 
&#09;Categories INNER JOIN 
&#09; (Products INNER JOIN 
&#09;&#09;(Employees INNER JOIN 
&#09;&#09; (Customers INNER JOIN 
&#09;&#09;&#09;(Orders INNER JOIN [Order Details] 
&#09;&#09;&#09; ON Orders.OrderID = [Order Details].OrderID) 
&#09;&#09;&#09;ON Customers.CustomerID = Orders.CustomerID) 
&#09;&#09; ON Employees.EmployeeID = Orders.EmployeeID) 
&#09;&#09;ON Products.ProductID = [Order Details].ProductID) 
&#09; ON Categories.CategoryID = Products.CategoryID;</font></pre>
</BODY>
</HTML>
