<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Non-Equi-Joins</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2non-equi-joins"></a>Non-Equi-Joins</h4>
<p>
So far, our join conditions have been based on matching values in selected fields in two or more tables. However, with Microsoft Jet you can also create join conditions based on tests other than equality. For example, you can create joins based on a range of acceptable values.</p>
<p>
Suppose you have a table called PerformanceGrade that contains the following values. (This table exists in the NorthwindTables sample database.)</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>PerformanceGradeKey</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>LowRange</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>HighRange</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
0</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$           0.00</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$   100,000.00</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
1</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$100,000.01</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$   200,000.00</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
2</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$200,000.01</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$   300,000.00</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
3</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$300,000.01</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$   400,000.00</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
4</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$400,000.01</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$9,999,999.99</font></td>
</tr>
</table><br>
<p>
You want to assign a PerformanceGradeKey value to each employee’s sales. Employees with sales between 0 and $100,000 receive a 0, those with sales between $100,000.01 and $200,000 receive a 1, and so on.</p>
<p>
The first step is to create a <b>QueryDef</b> object that sums up the sales by employee. Call this <b>QueryDef</b> object SelectEmployeeSales:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Orders.EmployeeID, 
&#09;Sum((UnitPrice*Quantity) - Discount) AS ExtPrice
FROM Orders 
INNER JOIN [Order Details] 
ON Orders.OrderID = [Order Details].OrderID
GROUP BY Orders.EmployeeID;</font></pre>
<p>
Sample output from this query may be:</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Employee</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>ExtPrice</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Davolio, Nancy</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$202,126.72</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Fuller, Andrew</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$177,738.71</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Leverling, Janet</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$213,035.35</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Peacock, Margaret</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$250,161.70</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Buchanan, Steven</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$  75,559.95</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Suyama, Michael</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$  78,188.95</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
King, Robert</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$141,283.04</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Callahan, Laura</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$133,286.43</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Dodsworth, Anne</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$  82,956.70</font></td>
</tr>
</table><br>
<p>
Now this saved <b>QueryDef</b> object has to be joined to the PerformanceGrade table. The grade assigned is determined by the high and low ranges, and the actual sales of each employee. Here is the SQL statement that produces the desired result:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;SelectEmployeeSales.EmployeeID, 
&#09;SelectEmployeeSales.ExtPrice, 
&#09;PerformanceGrade.PerformanceGradeKey
FROM SelectEmployeeSales, PerformanceGrade
WHERE (SelectEmployeeSales.ExtPrice Between PerformanceGrade.LowRange
&#09;And PerformanceGrade.HighRange)
ORDER BY PerformanceGrade.PerformanceGradeKey;</font></pre>
<p>
As you can see from the sample output shown, Microsoft Jet is able to link values from the SelectEmployeeSales query to the PerformanceGrade table even though neither table has common fields or shares common values. The join is based entirely on the condition specified in the WHERE clause.</p>
<table>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>Employee</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>ExtPrice</b></font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<b>PerformanceGradeKey</b></font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Dodsworth, Anne</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$  82,956.70</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
0</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Suyama, Michael</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$  78,188.95</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
0</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Buchanan, Steven</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$  75,559.95</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
0</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Callahan, Laura</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$133,286.43</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
1</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
King, Robert</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$141,283.04</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
1</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Fuller, Andrew</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$177,738.71</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
1</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Peacock, Margaret</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$250,161.70</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
2</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Leverling, Janet</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$213,035.35</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
2</font></td>
</tr>
<tr valign=top>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
Davolio, Nancy</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
$202,126.72</font></td>
<td><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
2</font></td>
</tr>
</table><br>
<p>
Be aware that Microsoft Jet can’t perform its normal optimization techniques on non-equi-join queries.</p>
</BODY>
</HTML>
