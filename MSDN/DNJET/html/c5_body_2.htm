<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Recordset Variable</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2creating_a_recordset_variable"></a>Creating a Recordset Variable</h3>
<p>
The <b>OpenRecordset</b> method is the basic method of creating a <b>Recordset</b> object variable. To use it, you first declare a variable of type <b>Recordset</b> object, and then set the variable to the object returned by the <b>OpenRecordset</b> method.</p>
<p>
The <b>OpenRecordset</b> method is available from <b>Database</b>, <b>TableDef</b>, <b>QueryDef</b> and existing <b>Recordset</b> objects. For ODBCDirect workspaces, the <b>OpenRecordset</b> method is available from the <b>Connection</b>, <b>Database</b>, and <b>QueryDef</b> objects. The syntax of the <b>OpenRecordset</b> method for <b>Database</b> and <b>Connection</b> objects is:</p>
<p>
<b>Set</b> <i>recordset</i> <b>=</b> <i>object</i><b>.OpenRecordset</b> <b>(</b><i>source</i> [, <i>type</i> [, <i>options</i> [, <i>lockedits</i>]]]<b>)</b></p>
<p>
The syntax of the <b>OpenRecordset</b> method for all other types of objects is:</p>
<p>
<b>Set</b> <i>recordset</i> <b>=</b> <i>object</i><b>.OpenRecordset</b> <b>(</b>[<i>type</i> [, <i>options</i> [, <i>lockedits</i>]]]<b>)</b></p>
<p>
The <i>recordset</i> argument is the name of the new <b>Recordset</b> object.</p>
<p>
The <i>object</i> argument is the object from which you’re creating the new <b>Recordset</b> object. Microsoft Jet uses the <i>source</i> argument only for <b>Recordset</b> objects created from <b>Database</b> or <b>Connection</b> objects.</p>
<p>
The <i>source</i> argument is an existing <b>TableDef</b> or <b>QueryDef</b> object in the database or a valid record-returning SQL query or statement. For <b>TableDef</b>, <b>QueryDef</b>, and <b>Recordset</b> objects, the object itself is automatically used as the <i>source</i>.</p>
<p>
The <i>type</i> argument is an intrinsic constant that specifies the kind of <b>Recordset</b> object you want to create. The available <i>type</i> constants are:
<ul>
<li>
<b>dbOpenTable</b><br><br></li>
<li>
<b>dbOpenDynamic</b><br><br></li>
<li>
<b>dbOpenDynaset</b><br><br></li>
<li>
<b>dbOpenSnapshot</b><br><br></li>
<li>
<b>dbOpenForwardOnly</b></li>
</ul>
<p>
If you open a <b>Recordset</b> object in a Microsoft Jet workspace and you don’t specify a type, <b>OpenRecordset</b> creates a table-type <b>Recordset</b> object, if possible. If you specify a linked table or query, <b>OpenRecordset</b> creates a dynaset-type <b>Recordset</b> object. In an ODBCDirect workspace, the default setting is <b>dbOpenForwardOnly</b>.</p>
<p>
With the <i>options</i> argument of the <b>OpenRecordset</b> method, you can specify a number of other features for a <b>Recordset</b> object by using the following constants:
<ul>
<li>
<b>dbAppendOnly   </b>With this constant, you can only append new records to the <b>Recordset</b> object; you cannot edit or delete existing records. This is useful in applications that collect and archive data (dynaset only).<br><br></li>
<li>
<b>dbSeeChanges   </b>If another user changes data in a record on which this <b>Recordset</b> object has invoked the <b>Edit</b> method, but before it has invoked the <b>Update</b> method, a run-time error will occur. This is useful in applications where multiple users have simultaneous read/write access to the same data (dynaset only).<br><br></li>
<li>
<b>dbDenyWrite   </b>When used on a dynaset or snapshot, this constant prevents other users from opening a table or dynaset-type <b>Recordset</b> object, although they can still open snapshot- or forward-only-type <b>Recordset</b> objects (Microsoft Jet workspaces only).<br><br></li>
<li>
<b>dbDenyRead   </b>Prevents other users from reading data in the table (table only).<br><br></li>
<li>
<b>dbReadOnly   </b>Prevents your <b>Recordset</b> object from modifying data. This is useful where the <b>Recordset</b> object will be used to display data in a form that otherwise allows data entry. The <b>dbReadOnly</b> constant in the <i>lockedits</i> argument replaces this constant, which is provided only for backward compatibility (Microsoft Jet workspaces only).<br><br></li>
<li>
<b>dbForwardOnly   </b>Creates a forward-only snapshot. Note that <b>Recordset</b> objects created with this option cannot be cloned and only support the <b>Move</b> and <b>MoveNext</b> methods to move directly through the records (snapshot only). This constant is provided for backward compatibility only. To create a forward-only-type <b>Recordset</b> object, you should use the <b>dbOpenForwardOnly</b> constant in the <i>type</i> argument instead of in this argument.<br><br></li>
<li>
<b>dbSQLPassThrough   </b>Where the <i>source</i> argument is an SQL statement, use this constant to pass the SQL statement to an ODBC data source for processing. If used with a dynaset, data is not updatable (Microsoft Jet snapshot only).<br><br></li>
<li>
<b>dbConsistent   </b>(Default) Only consistent updates are allowed (Microsoft Jet dynaset and snapshot only).<br><br></li>
<li>
<b>dbInconsistent   </b>Inconsistent updates are allowed. Opposite of <b>dbConsistent</b> (Microsoft Jet dynaset and snapshot only).<p>
<b>See Also   </b>For more information about inconsistent updates, see “Inconsistent Updates” later in this chapter.</p>
</li>
<li>
<b>dbRunAsync   </b>Runs an asynchronous query (ODBCDirect workspaces only).<br><br></li>
<li>
<b>dbExecDirect   </b>Runs a query that skips <b>SQLPrepare</b> and directly calls <b>SQLExecDirect</b>. Use this constant only when you’re not opening a <b>Recordset</b> object based on a parameter query (ODBCDirect workspaces only).</li>
</ul>
<p>
<b>Note   </b>When you don’t use the <i>options</i> argument, you must specify 0 for it.</p>
<p>
With the <i>lockedits</i> argument of the <b>OpenRecordset</b> method, you can specify locking options for a <b>Recordset</b> object by using the following constants:
<ul>
<li>
<b>dbReadOnly   </b>Prevents users from making changes to the <b>Recordset</b> object. You can use this constant in either the <i>options</i> argument or the <i>lockedits</i> argument, but not both. If it is used in both arguments, an error occurs. This setting is the default in ODBCDirect workspaces.<br><br></li>
<li>
<b>dbPessimistic   </b>Uses pessimistic locking to determine how changes are made to a <b>Recordset</b> object in a multiuser environment. With pessimistic locking, the page that contains the record being edited is locked as soon as the <b>Recordset</b> object’s <b>Edit</b> method is invoked. This setting is the default in Microsoft Jet workspaces.<br><br></li>
<li>
<b>dbOptimistic   </b>Uses optimistic locking to determine how changes are made to a <b>Recordset</b> object in a multiuser environment. With optimistic locking, the page that contains the record being edited is not locked until the <b>Recordset</b> object’s <b>Update</b> method is invoked.<br><br></li>
<li>
<b>dbOptimisticValue   </b>Uses optimistic concurrency based on record values (ODBCDirect workspaces only).<br><br></li>
<li>
<b>dbOptimisticBatch   </b>Enables batch optimistic updating (ODBCDirect workspaces only).</li>
</ul>
<p>
<b>See Also   </b>For more information about the <b>dbOptimisticValue</b> and <b>dbOptimisticBatch</b> constants, see Chapter&nbsp;9, “<a href="c9_body.htm">Developing Client/Server Applications</a>.” For more information about ODBCDirect, see Chapter&nbsp;8, “<a href="c8_body.htm">Accessing External Data</a>,” and Chapter&nbsp;9, “<a href="c9_body.htm">Developing Client/Server Applications</a>.”</p>
</BODY>
</HTML>
