<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>UNION Queries</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2union_queries"></a>UNION Queries</h4>
<p>
You often have to treat the results of one or more queries, or the contents of one or more tables, as if they were in the same table. You may want to create a list of names and addresses that combines entries from both the Customers and the Suppliers tables. Microsoft Jet supports the UNION statement, which combines the results of two or more SELECT queries.</p>
<p>
For example, the combined Customer and Supplier list can be created with the following query:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Customers.CompanyName, 
&#09;Customers.Address, 
&#09;Customers.City, 
&#09;Customers.Region, 
&#09;Customers.PostalCode
FROM Customers
UNION
SELECT 
&#09;Suppliers.CompanyName, 
&#09;Suppliers.Address, 
&#09;Suppliers.City, 
&#09;Suppliers.Region, 
&#09;Suppliers.PostalCode
FROM Suppliers;</font></pre>
<p>
The individual SELECT queries are combined by the UNION statement. Each SELECT statement can be as complex as necessary, and can include multiple-table joins. Each SELECT statement can also use GROUP BY to sum values. To specify the order in which the results of all the individual SELECT statements are returned, you can add an optional ORDER BY clause after the last SELECT statement.</p>
<p>
The number of fields in each SELECT statement must match, but the names of the fields can differ. The data types of the matching fields don’t have to match exactly. For example, an integer field can be united with a floating-point field.</p>
<p>
When the output of the entire UNION query is referred to, the field names for the <i>first</i> SELECT statement are used.</p>
<p>
Usually, Microsoft Jet hides records that contain entirely duplicated data in a UNION query. If you want to include duplicate records in the output, use the UNION ALL clause instead of UNION.</p>
<p>
If you’re joining two tables or queries that have the same structure, you can use a special form of the UNION statement with which you can specify the tables you want to combine, rather than listing the fields you want to select. For example, instead of listing the fields as in the earlier example that combined values from the Customers and Suppliers tables, you could create one query called SelectCustomerNameAndAddress</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Customers.CompanyName, 
&#09;Customers.Address, 
&#09;Customers.City, 
&#09;Customers.Region, 
&#09;Customers.PostalCode
FROM Customers;</font></pre>
<p>
and another called SelectSupplierNameAndAddress:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Suppliers.CompanyName, 
&#09;Suppliers.Address, 
&#09;Suppliers.City, 
&#09;Suppliers.Region, 
&#09;Suppliers.PostalCode
FROM Suppliers;</font></pre>
<p>
The following UNION query combines the two queries above without explicitly specifying the names of the fields:</p>
<pre><FONT FACE="Courier New" SIZE="3">TABLE SelectSupplierNameAndAddress
UNION
TABLE SelectCustomerNameAndAddress;</font></pre>
<p>
You can’t explicitly include Memo or Long Binary (OLE Object) fields in the output SELECT statement of a UNION query. For example, the following query results in an error:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT Table1.Memo1
FROM Table1
UNION 
SELECT Table2.Memo2
FROM Table2;</font></pre>
<p>
If it’s sufficient for your purposes to include only the first 255 characters of the Memo field in the output, one alternative is to select an expression based on the Memo field:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT Left(Table1.Memo1,255) AS FirstPartOfMemo
FROM Table1
UNION SELECT Left(Table2.Memo2,255) AS FirstPartOfMemo
FROM Table2;</font></pre>
<p>
<b>Note   </b>The results of a UNION query are never updatable.</p>
</BODY>
</HTML>
