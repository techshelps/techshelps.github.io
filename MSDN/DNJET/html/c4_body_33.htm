<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The UPDATE Query</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2the_update_query"></a>The UPDATE Query</h4>
<p>
You can use the UPDATE query to specify a set of records from one or more tables and assign new values to one or more fields in that result set. The new value can be either a literal value assigned to each record to be updated, or an expression that uses existing values as part of the new value.</p>
<p>
The following example updates the Salary field for all sales managers:</p>
<pre><FONT FACE="Courier New" SIZE="3">UPDATE Employees 
SET Employees.Salary = 50000
WHERE Employees.Title = 'Sales Manager';</font></pre>
<p>
Every employee record that meets the selection criterion is assigned the same value of 50,000.</p>
<p>
The next example applies a formula that increases the employees’ salaries by 10 percent for all employees who aren’t sales managers:</p>
<pre><FONT FACE="Courier New" SIZE="3">UPDATE Employees 
SET Employees.Salary = Employees.Salary*1.1
WHERE Employees.Title &lt;&gt; 'Sales Manager';</font></pre>
<p>
The Salary field value for each record in the result set produced by applying the WHERE clause is multiplied by the constant value 1.1 and then stored in the same Salary field.</p>
<h5>Multiple-Table UPDATE Queries</h5>
<p>
In addition to simple single-table updates, with Microsoft Jet you can create an UPDATE query that’s the result of a multiple-table join. The following example joins the Orders and Order Details tables. It uses a selection criterion from the Orders table, but updates values in the Order Details table:</p>
<pre><FONT FACE="Courier New" SIZE="3">UPDATE Orders 
INNER JOIN [Order Details] 
ON Orders.OrderID = [Order Details].OrderID 
SET [Order Details].Discount = 0.25
WHERE Orders.CustomerID = 'FRANS';</font></pre>
<p>
In this case, the fields in the table on the “many” side of a one-to-many relationship are being updated. Fields on the “one” side of the join can also be updated, with certain limitations:</p>
<pre><FONT FACE="Courier New" SIZE="3">UPDATE Orders 
INNER JOIN [Order Details] 
ON Orders.OrderID = [Order Details].OrderID 
SET [Order Details].Discount = 0.25, 
&#09;Orders.OrderDate = #6/16/95#
WHERE Orders.CustomerID = 'FRANS';</font></pre>
<p>
You can’t create a multiple-table UPDATE query if one of the tables in the join is a summary query&nbsp;— a query that uses the GROUP BY clause, for example.</p>
<p>
<b>See Also   </b>For more information about UPDATE queries, see the “Selecting Unique Records” section earlier in this chapter.</p>
</BODY>
</HTML>
