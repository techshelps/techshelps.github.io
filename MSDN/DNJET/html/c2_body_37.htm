<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Error Object</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2using_the_error_object"></a>Using the Error Object</h3>
<p>
The <b>Errors</b> collection contains <b>Error</b> objects that represent the Microsoft Jet errors that have occurred. You can use these objects to determine if errors have occurred, and then to work around them. The following code attempts to open a database that doesn’t exist, and then displays the errors that result:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim dbs As Database
Dim errX As Error

' Disable error handling.
On Error Resume Next

' Try to open a nonexistent database.
Set dbs = OpenDatabase(&quot;XYZ123.456&quot;)

' Look at the errors generated.
For Each errX In DBEngine.Errors
&#09;Debug.Print errX.Description
&#09;Debug.Print errX.Number
&#09;Debug.Print errX.Source
Next errX</font></pre>
<p>
The <b>Error</b> object is unlike the error variables and functions in Visual Basic in that more than one error can be generated by a single operation. Also, objects in the <b>Errors</b> collection are appended in a manner different from the other DAO collections. The most detailed errors are placed at the end of the collection, and the most general errors are placed at the beginning.</p>
<p>
The set of <b>Error</b> objects in the <b>Errors</b> collection describes one error. The first <b>Error</b> object is the lowest-level error, the second the next-highest level, and so on. For example, if an ODBC error occurs while trying to open a <b>Recordset</b> object, the last <b>Error</b> object contains the DAO error indicating that the object can’t be opened. The first <b>Error</b> object contains the lowest-level ODBC error. Subsequent errors contain the ODBC errors returned by the various layers of ODBC.</p>
</BODY>
</HTML>
