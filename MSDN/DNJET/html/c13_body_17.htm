<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Programmatically Refreshing the Microsoft Jet Cache</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2programmatically_refreshing_the_microsoft_jet_cache"></a>Programmatically Refreshing the Microsoft Jet Cache</h4>
<p>
To improve performance in Microsoft Jet&nbsp;3.0, the behavior of the PageTimeout setting was altered. In Microsoft Jet&nbsp;2<i>.x</i>, if you set the PageTimeout setting to 2&nbsp;seconds, a shared cache is kept at least 2 seconds, and probably longer before Microsoft Jet refreshes data in its cache. In Microsoft Jet&nbsp;3.0, the cache is kept no more than 2&nbsp;seconds, providing more precise control over the currency of the data returned. The default value for the PageTimeout setting in both Microsoft Jet&nbsp;3.0 and 3.5 is 5000&nbsp;milliseconds. In addition, Microsoft Jet&nbsp;3.0 and 3.5 recognize when shared databases are not being updated, and suppress cache refreshing. In this way, performance of shared databases that are infrequently changed may approach the performance of databases that are open exclusively.</p>
<p>
Although these changes prove optimal for performance, a drawback is that almost ten seconds may elapse before a user in a shared database can see changes made by other users. One way to work around this problem is to set the PageTimeout registry setting to a lower value. However, doing this degrades the performance of Microsoft Jet by forcing it to read the database header more frequently, which results in increased I/O.</p>
<p>
Microsoft Jet&nbsp;3.5 addresses this problem by providing a way to force its cache to be refreshed regardless of the PageTimeout setting. The <b>Idle</b> method of the <b>DBEngine</b> object has a new argument, <b>dbRefreshCache</b>, that you can use to force Microsoft Jet to immediately read the database header to see if any changes have occurred. If they have, Microsoft Jet refreshes its cache and the user of the application that issued the command sees any changes made by other users. This change allows you to leave the PageTimeout setting at its default to provide optimal performance, but gives you the ability to force Microsoft Jet to check for other users’ changes. However, keep in mind that just as setting PageTimeout to a low value can degrade performance, using the <b>dbRefreshCache</b> argument of the <b>Idle</b> method repeatedly will increase disk and network I/O and degrade performance.</p>
</BODY>
</HTML>
