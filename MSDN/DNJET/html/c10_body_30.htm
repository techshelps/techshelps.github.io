<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Securing Users and Groups</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2securing_users_and_groups"></a>Securing Users and Groups</h3>
<p>
The <b>Users</b> collection contains all users defined in the current workgroup information file. Similarly, the <b>Groups</b> collection contains all groups. By manipulating these collections, you define and control the security accounts that Microsoft Jet uses. The <b>Groups</b> and <b>Users</b> collections are interesting in that they are self-referencing. You can see from the DAO hierarchy that the <b>Users</b> collection contains a <b>Groups</b> collection, and the <b>Groups</b> collection contains a <b>Users</b> collection. Using this structure, you can easily find which users belong to which groups, and which groups contain which users.</p>
<p>
There are a few things to keep in mind when you’re working with users and groups:
<ul>
<li>
When you add a new user or group, you create the user or group by using the <b>CreateUser</b> or <b>CreateGroup</b> method of a <b>Workspace</b> object. After you’ve appended the <b>User</b> or <b>Group</b> object to its respective collection under the <b>Workspace</b> object, you must also create and append the object to define the new user’s membership in groups, or to specify which users are in a new group. If you’ve created a new user, you add the new user to a group by using the <b>CreateUser</b> method of the group you want the user to belong to, then appending the <b>User</b> object to that group. Alternately, if you’ve created a new group, you can add users to that group by using the <b>CreateGroup</b> method of the <b>User</b> object and appending the <b>Group</b> object to the <b>Groups</b> collection for that user.<br><br></li>
<li>
If you add a user programmatically in Microsoft Access, you must add the user to the Users group. That is, you must append the new <b>User</b> object to the <b>Users</b> collection of the Users group, or append the Users group to the <b>Groups</b> collection of the new <b>User</b> object.<br><br></li>
<li>
You may need to refresh the <b>User</b> and <b>Group</b> collections after you’ve updated them.<br><br></li>
<li>
If you’re using DAO to manipulate users and groups in an application other than Microsoft Access, you must set the <b>SystemDB</b> property to the path and file name of the workgroup information file. Otherwise, Microsoft Jet will not know which workgroup information file you want to update. In Microsoft Access, you can set this property, but it will be ignored, as Microsoft Access uses whichever workgroup information file is currently active.</li>
</ul>
<p>
The following example illustrates these points. The procedure creates a new user, appends it to the Users group, then appends it to the Admins group.</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub AddUserToAdmins(strWorkgroup As String, strUser As String, _
&#09;&#09;strPID As String, strPwd As String)
&#09;Dim wrk As Workspace
&#09;Dim usr As User, grp As Group

&#09;' Specify which workgroup information file to use.
&#09;DBEngine.SystemDB = strWorkgroup

&#09;Set wrk = DBEngine(0)
&#09;' Create new user in Users collection of default Workspace object.
&#09;Set usr = wrk.CreateUser(strUser, strPID, strPwd)
&#09;wrk.Users.Append usr
&#09;
&#09;' Create user in Users collection of Users group.
&#09;Set grp = wrk.Groups(&quot;Users&quot;)
&#09;Set usr = wrk.CreateUser(strUser)
&#09;grp.Users.Append usr
&#09;
&#09;' Create user in Users collection of Admins group.
&#09;Set grp = wrk.Groups(&quot;Admins&quot;)
&#09;Set usr = grp.CreateUser(strUser)
&#09;grp.Users.Append usr
&#09;grp.Users.Refresh
End Sub</font></pre>
<p>
Keep the following additional points in mind when working with <b>User</b> and <b>Group</b> objects:
<ul>
<li>
If a user or group is deleted from the workgroup information file, any object that has specific permissions for that user or group retains those permissions. If that user or group is re-created using the same user name and PID, those permissions will become active again. This behavior is evidenced by the fact that the <b>Owner</b> property of objects from which the owner has been deleted returns “&lt;Unknown&gt;.”<br><br></li>
<li>
To determine all the users and groups that have permissions on an object, you should iterate through each user and group name, set the <b>UserName</b> property, and check the <b>Permissions</b> property. You can also use the <b>AllPermissions</b> property. Unlike the <b>Permissions</b> property, which returns only the permissions for the given user or group, the <b>AllPermissions</b> property returns all the permissions a user has for an object, including permissions implied through group membership.<br><br></li>
<li>
Not everyone has permissions to view user and group information. Generally, it’s best to be logged on as an administrator account&nbsp;— that is, a user who is a member of the Admins group&nbsp;— before attempting to retrieve this information. This is also true if you want to modify security settings: You must be logged on as user with sufficient permissions.<br><br></li>
<li>
If you’re using a workgroup information file that was created with Microsoft Access&nbsp;1.<i>x</i> using Microsoft Jet&nbsp;1.<i>x</i>, you cannot use the <b>Groups</b> collection of a <b>User</b> object. Instead, write a short program that looks at each of the groups and determines if the user is in that group. Of course, the best way to avoid this problem is to upgrade your workgroup information file to Microsoft Jet&nbsp;2.0 format.</li>
</ul>
</BODY>
</HTML>
