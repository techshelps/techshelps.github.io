<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Inserting Records</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2inserting_records"></a>Inserting Records</h4>
<p>
You can insert new records into a remote database table by opening a linked table and inserting the records with the <b>AddNew</b> and <b>Update</b> methods, as you would with any other Microsoft Jet table. Whenever you insert records using DAO operations, you should use the <b>dbAppendOnly</b> constant in the <i>options</i> argument of the <b>OpenRecordset</b> method. This causes the engine to optimize its operations for adding data.</p>
<p>
For example, the BookSales and BookSalesOptimized sample applications include a bulk data loader that creates the sample data used by the rest of the application. You can find this code in the DataAlterSales procedure of the Dataload.bas module. Using the <b>Recordset</b> approach, the code to add a single record is as follows. In this example, <code>dbs</code> is a <b>Database</b> object representing the remote data source, <code>rst</code> is a <b>Recordset</b> object, and <code>conSalesID</code> is a constant numeric value:</p>
<pre><FONT FACE="Courier New" SIZE="3">Set rst = dbs.OpenRecordset(&quot;Sales&quot;, dbOpenDynaset, dbAppendOnly)
With rst
&#09;.AddNew
&#09;!stor_id = &quot;6380&quot;&#09;&#09;' All linked to the first store.
&#09;!ord_num = conSalesID &amp; Format(intC, &quot;0000&quot;)
&#09;!ord_Date = Now
&#09;!qty = 5
&#09;!payterms = &quot;Net 60&quot;
&#09;!title_id = &quot;BU2075&quot;
&#09;.Update
&#09;.Close
 End With</font></pre>
<p>
Although this is a simple method, using a pass-through query with an SQL INSERT statement can be much faster in the client/server environment. The same code, implemented using a pass-through query, becomes:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim strInsert As String
strInsert = &quot;INSERT INTO Sales VALUES ('6380', '&quot; _
&#09;&amp; conSalesID &amp; Format(intC, &quot;0000&quot;) _
&#09;&amp; &quot;', '&quot; &amp; Now &amp; &quot;', 5, 'NET 60', 'BU2075')&quot;
dbs.Execute strInsert, dbSQLPassThrough </font></pre>
<p>
Building an INSERT statement from scratch like this can be tricky if your data has embedded quotation marks (&quot;). If you’re only doing single updates, the time saved is generally not worth the effort, especially if the update is tied to a form.</p>
</BODY>
</HTML>
