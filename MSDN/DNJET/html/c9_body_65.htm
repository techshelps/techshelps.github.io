<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening Connections Asynchronously</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2opening_connections_asynchronously"></a>Opening Connections Asynchronously</h4>
<p>
In some cases, opening connections to data sources can take a long time, making it necessary for users to wait until the connection completes or an error occurs. To reduce the amount of time users must wait, you can open a connection asynchronously. This means that your application can complete other tasks while the connection is being established. To open a connection asynchronously, specify the <b>dbRunAsync</b> constant for the <i>options</i> argument of the <b>OpenConnection</b> method, as shown in the following example.</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim wrk As Workspace, cnn As Connection, strConnect As String

Set wrk = DBEngine.CreateWorkspace(&quot;NewODBCDirect&quot;, &quot;Admin&quot;, &quot;&quot;, dbUseODBC)
strConnect = &quot;ODBC;DSN=Pubs;UID=SA;PWD=;DATABASE=Pubs&quot;
Set cnn = wrk.OpenConnection(&quot;&quot;, dbDriverNoPrompt + dbRunAsync, False, strConnect)</font></pre>
<p>
You can use the <b>StillExecuting</b> property of the <b>Connection</b> object to see if the connection has been established, or use the <b>Cancel</b> method of the <b>Connection</b> object to cancel the connection attempt if it takes too long.</p>
</BODY>
</HTML>
