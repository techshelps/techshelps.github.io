<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Closing Object Variables</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2closing_object_variables"></a>Closing Object Variables</h4>
<p>
Four of the DAO objects are considered <i>temporary </i>objects. That is, they exist only in memory and are never permanently saved as part of the database file. These are the <b>Workspace</b>, <b>Database</b>, <b>Connection</b>, and <b>Recordset</b> objects. <b>QueryDef</b> objects can be either permanent or temporary.</p>
<p>
<b>Note   QueryDef</b> objects are not typically temporary objects. As mentioned earlier, a <b>QueryDef</b> object represents a saved query in the database. However, unlike other permanent objects, if a <b>QueryDef</b> object is created by using DAO, the <b>QueryDef</b> object can be used without first appending it to the <b>QueryDefs</b> collection.</p>
<p>
Another slight exception is the <b>Database</b> object. Although it’s a temporary object, it does refer to the database file on disk, which is permanent.</p>
<p>
Because these objects exist in memory, you should close them <i>explicitly</i> when your code no longer needs them. To close an object explicitly, use the <b>Close</b> method and then set the object variable to <b>Nothing</b>.</p>
<h5>Closing Workspace Objects</h5>
<p>
Prior to Microsoft Jet version&nbsp;2.0, you couldn’t close a <b>Workspace</b> object that contained any open <b>Database</b> objects. In Microsoft Jet&nbsp;3.0 and 3.5, if you close a <b>Workspace</b> object, Microsoft Jet closes all the <b>Workspace</b> object’s <b>Database</b> objects and rolls back any pending transactions.</p>
<p>

<p>
<b>Microsoft Access Users   </b>In Microsoft Access, a <i>default workspace</i>, Workspaces(0), is automatically created when you open a database through the user interface. Microsoft Access ignores attempts to close this default <b>Workspace</b>.</p>
<h5>Closing Database Objects</h5>
<p>
If you open a database with the <b>OpenDatabase</b> method, you should close it explicitly when you are done using it. To close a database explicitly, first use the <b>Close</b> method to close the database, then set the <b>Database</b> object variable to <b>Nothing</b>.</p>
<p>
In DAO 3.0 and 3.5, if you explicitly close a <b>Database</b> object that has an open <b>Recordset</b> object with pending edits or uncommitted transactions, the edits are canceled, the transactions are rolled back, and the <b>Recordset</b> object is closed. If you implicitly close the same <b>Database</b> object (by exiting a procedure that has the <b>Database</b> object as a local object variable), the <b>Recordset</b> object stays open.</p>
<p>
<b>Note   </b>This behavior is different from the behavior of DAO version&nbsp;2.<i>x</i>. In DAO 2.<i>x</i>, if you explicitly close a <b>Database</b> object that has an open <b>Recordset</b> object, an error occurs. If you implicitly close the same <b>Database</b> object, the <b>Recordset</b> object is closed as well. DAO 2.<i>x</i> had <b>Dynaset</b> objects (replaced by dynaset-type<b> Recordset</b> objects in DAO 3.0). If you explicitly or implicitly close a <b>Database</b> object that has an open <b>Dynaset</b> object, the <b>Dynaset</b> object stays open.</p>
<h5>Closing Recordset Objects</h5>
<p>
You should always close a <b>Recordset</b> object after you finish using it. Close the <b>Recordset</b> object by using its <b>Close</b> method. Then set the <b>Recordset</b> object variable equal to <b>Nothing</b>.</p>
</BODY>
</HTML>
