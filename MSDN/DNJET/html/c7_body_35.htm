<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Synchronizing Replicas</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h2><a name="jb2synchronizing_replicas"></a>Synchronizing Replicas</h2>
<p>
For database replication to be useful, the members of the replica set must communicate with one another in order to remain up to date. Synchronization is the process of making the design and data in all the members identical. Changes made to the existing records in one member are periodically communicated to each of the other members that have that same record. Similarly, records added to or deleted from any one member are communicated to all the other members of the replica set.</p>
<p>
You can synchronize one member with another by using either Microsoft Access, Briefcase, Replication Manager, or DAO.</p>
<p>
You can keep the members of the replica set synchronized by using the <b>Synchronize</b> method. By specifying the target database’s file name, you can synchronize one user’s replica with another member of the set. You can also perform one-way or two-way synchronizations. For example, you might use the following code to perform a two-way synchronization between members:</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub SynchronizeDbs(strDbPath As String, strSyncTargetDb As String)
&#09;Dim dbs As Database
&#09;&#09;
&#09;Set dbs = OpenDatabase(strDbPath)
&#09;' Synchronize replicas (bidirectional exchange).
&#09;dbs.Synchronize strSyncTargetDb, dbRepImpExpChanges
&#09;dbs.Close
End Sub</font></pre>
<p>
If you do not provide a constant value for the <i>exchange</i> argument, the synchronization is bidirectional (import and export).</p>
<p>
When Microsoft Jet synchronizes two members of the replica set, it always synchronizes design changes before it synchronizes changes to data. The design of both members must be at the same design version level before data can be synchronized. For example, even if you use <b>dbRepExportChanges</b> to specify that data changes flow only from the current members to the designated target, design changes could be made to the current member if it has a lower design version number than the target member.</p>
<p>
If you want to prevent users from making changes to the design of your database, do not put the Design Master on the network server. Instead, keep the Design Master at a network location that is accessible only to you. As you make changes to your application, you can synchronize with a replica on the server and rely on it to pass these changes on to other replicas in the replica set.</p>
</BODY>
</HTML>
