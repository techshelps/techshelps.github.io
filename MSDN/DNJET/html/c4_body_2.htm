<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Communicating with Microsoft Jet</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2communicating_with_microsoft_jet"></a>Communicating with Microsoft Jet</h3>
<p>
Your SQL queries can be saved as permanent <b>QueryDef</b> objects in the database or created, analyzed, and executed on an ad-hoc basis.</p>
<p>
The saved <b>QueryDef</b> object is a particularly important object in a Microsoft Jet database. It’s a convenient way to store and reuse commonly asked questions. After you analyze your business problem and create a query that answers that question, you can save the “question” as a permanent query. From then on, you can ask the question again by rerunning the query.</p>
<p>
Each time you prepare a request for information, either by sending an SQL statement as an argument to the <b>OpenRecordset</b> method of a <b>Database</b> object or by saving a <b>QueryDef</b> object in your database, Microsoft Jet runs through a complex series of analysis and optimization steps. When you create a <b>QueryDef</b> object, Microsoft Jet performs a <i>parsing phase</i> (reading and interpreting your SQL statements) and an <i>optimization phase</i> (turning that SQL statement into a plan for the most efficient way to retrieve your answer). When you create a permanent <b>QueryDef</b> object, these steps are performed once. You can then execute the saved <b>QueryDef</b> object either to retrieve the answer you need, or to perform the action you requested. For a full discussion of how Microsoft Jet interprets and executes your queries, see “Query Optimization” later in this chapter.</p>
<p>
<b>See Also   </b>For a full discussion of how <b>QueryDef</b> objects are created and stored in a Microsoft Jet database file, see Chapter&nbsp;3, “<a href="c1_body_7.htm">Data Definition and Integrity</a>.”</p>
<p>
The <b>QueryDef</b> object is also important because it can be used, for the most part, as if it were a table in your database. You can prepare a complex, multiple-table join that brings together data from a variety of sources and then summarizes and analyzes that data. But because the query is saved as a permanent <b>QueryDef</b> object, that complexity can be hidden from your application. You only have to know the name of the <b>QueryDef</b> object in order to use it. Depending on the type of query created, the query can be updatable: Any changes made to the <b>Recordset</b> object built from an updatable <b>QueryDef</b> object are automatically reflected in the underlying tables.</p>
<p>
The examples in this chapter present only the text of the SQL statements that illustrate various Microsoft Jet query features under discussion. To execute these queries, you must save them as permanent <b>QueryDef</b> objects, or execute them in VBA code.</p>
<p>
<b>See Also   </b>For information about how to create <b>Recordset</b> objects based on these SQL statements, see Chapter&nbsp;5, “<a href="c5_body.htm">Working with Records and Fields</a>.”</p>
</BODY>
</HTML>
