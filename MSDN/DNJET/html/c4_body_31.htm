<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Updatability Restrictions for Multiple-Table Queries</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h4><a name="jb2updatability_restrictions_for_multiple-table_queries"></a>Updatability Restrictions for Multiple-Table Queries</h4>
<p>
To be fully updatable, a query must meet several requirements:
<ul>
<li>
You must specify an explicit inner or outer join between tables. Joins created implicitly in the WHERE clause of the SELECT statement aren’t updatable. For example, the following join isn’t updatable:<pre><FONT FACE="Courier New" SIZE="3">SELECT 
&#09;Products.ProductID, 
&#09;Products.ProductName, 
&#09;Categories.CategoryID, 
&#09;Categories.CategoryName
FROM Categories, Products
WHERE Products.CategoryID = Categories.CategoryID;</font></pre>
</li>
<li>
Summary (GROUP BY), UNION, DISTINCT, and crosstab queries are never updatable. Queries joined to one or more summary queries aren’t updatable, even if you don’t attempt to modify fields from an otherwise updatable table. However, a query may be updatable if it refers to a summary query in a sub-SELECT statement, as in the following example:<pre><FONT FACE="Courier New" SIZE="3">SELECT Orders.*
FROM Orders
WHERE Orders.Freight &gt;
&#09;(SELECT Avg(Orders.Freight) AS AvgOfFreight
&#09;FROM Orders;);</font></pre>
<p>
In this case, fields from the Orders table are updatable.</p>
</li>
<li>
To be able to insert new records into a table in any query, all primary key fields must be present.<br><br></li>
<li>
While you’re updating a single record in a query, changes to certain fields may render certain other fields nonupdatable until the edit to the record is either saved or canceled. As soon as the user edits data on the “one” side of a query, the join key on the “many” side can no longer be modified. Usually, the “many” side’s join key is updatable. However, because data on the “one” side was modified first, this field is temporarily rendered unmodifiable because row fix-up would discard changes to the “one” side’s data. As soon as the change to the “one” side of the query is saved or canceled, the “many” side’s join key becomes updatable again.<br><br></li>
<li>
A change to a multiple-table query must not create orphaned records. You can change the join key in the “many” table to a value already present in the “one” table, but you can’t specify a nonexistent value, except in the case of outer joins.</li>
</ul>
</BODY>
</HTML>
