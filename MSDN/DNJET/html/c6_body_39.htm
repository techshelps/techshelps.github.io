<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Requerying Data</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2requerying_data"></a>Requerying Data</h3>
<p>
If your multiuser application presents data to the user in a visual form, such as in a window or form, you may want to update the user’s view with the most current data. While this functionality is automatically available to applications using the Microsoft Access user interface, an application based on Visual Basic or some other language must explicitly requery data to get the most current view of other users’ changes.</p>
<p>
To obtain the most current view of data in a <b>Recordset</b> object, you must first determine if the <b>Recordset</b> object supports the <b>Requery</b> method. You can do this by checking the value of the <b>Restartable</b> property of the <b>Recordset</b> object. If the value is <b>True</b>, you can refresh the <b>Recordset</b> object’s contents by using the <b>Requery</b> method. This causes Microsoft Jet to repopulate the <b>Recordset</b> object with the most current data.</p>
<p>
If the <b>Recordset</b> object doesn’t support the <b>Requery</b> method, you must open the <b>Recordset</b> object again with the <b>OpenRecordset</b> method. The following code illustrates how to generically requery a <b>Recordset</b> object. The OpenRecordsetForRequery procedure opens a dynaset-type <b>Recordset</b> object on the Orders table. It then tries to refresh the <b>Recordset</b> object’s contents by calling the RequeryIfYouCan function. If this fails, it reopens the <b>Recordset</b> object.</p>
<pre><FONT FACE="Courier New" SIZE="3">Sub OpenRecordsetForRequery(strDbPath As String)
&#09;Dim dbs As Database
&#09;Dim rst As Recordset
&#09;
&#09;' Open database in shared mode.
&#09;Set dbs = OpenDatabase(strDbPath, False)
&#09;' Open dynaset-type recordset.
&#09;Set rst = dbs.OpenRecordset(&quot;Orders&quot;, dbOpenDynaset)
  
&#09;' Call RequeryIfYouCan function.
&#09;If RequeryIfYouCan(rst) Then
&#09;&#09;Debug.Print &quot;Recordset has been refreshed.&quot;
&#09;Else
&#09;&#09;' If recordset cannot be requeried, reopen it.
&#09;&#09;Set rst = dbs.OpenRecordset _
&#09;&#09;&#09;(&quot;Orders&quot;, dbOpenDynaset)
&#09;&#09;Debug.Print &quot;Recordset has been reopened.&quot;
&#09;End If
  
&#09;rst.Close
&#09;dbs.Close
End Sub

Function RequeryIfYouCan(rst As Recordset) As Boolean
&#09;' Check recordset's Restartable property.
&#09;If rst.Restartable Then
&#09;&#09;' Requery recordset.
&#09;&#09;rst.Requery
&#09;&#09;RequeryIfYouCan = True
&#09;Else
&#09;&#09;RequeryIfYouCan = False
&#09;End If
End Function</font></pre>
<p>
In general, most <b>Recordset</b> objects are restartable, which means they can be requeried. The exceptions are recordsets based on pass-through queries and on crosstab queries that contains variable-length fields. These types of recordsets cannot be requeried and must be reopened to get the most current state of the data.</p>
</BODY>
</HTML>
