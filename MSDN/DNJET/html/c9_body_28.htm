<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Criteria for Using the Find Methods</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2criteria_for_using_the_find_methods"></a>Criteria for Using the Find Methods</h3>
<p>
The Find methods (<b>FindFirst</b>, <b>FindLast</b>, <b>FindNext</b>, <b>FindPrevious</b>) locate the first, last, next, or previous record in a dynaset- or snapshot-type <b>Recordset</b> object that satisfies the specified criteria. A common error that developers make when converting code to work with an ODBC database is to try to replace <b>Seek</b> method calls with Find method calls. As a general rule, this code will be slow.</p>
<p>
When trying to find an individual record, the best approach is to create a new <b>Recordset</b> with a WHERE clause that contains the criteria for the records you want to find. This will return all records that match the criteria. Because this is a single operation on the server, this approach is much more efficient than using the Find methods, especially if the number of records returned is small.</p>
</BODY>
</HTML>
