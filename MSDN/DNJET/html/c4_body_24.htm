<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Single-Table Query Updatability</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2single-table_query_updatability"></a>Single-Table Query Updatability</h3>
<p>
A query based on a single table can select some or all records, and some or all fields, from that table. In the simplest case, the query returns all records and all fields. For example:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT * 
FROM Customers;</font></pre>
<p>
Every record retrieved, and every field in every record, is accessible and subject to change (except calculated fields based on expressions). Every record can be deleted and new records can be inserted.</p>
<p>
If you were to use Microsoft Access to open a datasheet based on this query, you would be able to freely browse forward and backward, making any changes you wanted (subject to security restrictions, validation rules, and referential integrity constraints). Any changes made to the <b>Recordset</b> object created by this <b>QueryDef</b> object would automatically be reflected in the underlying table.</p>
<p>
A query can also select and sort records from the original table and remain updatable:</p>
<pre><FONT FACE="Courier New" SIZE="3">SELECT *
FROM Customers
WHERE Customers.ContactTitle = 'Owner'
ORDER BY Customers.CompanyName;</font></pre>
<p>
An updatable single-table query such as this one can be useful in a data-entry situation in which you would like to present the records to the user in a certain order, or hide certain records based on the selection criteria.</p>
<p>
One thing to be aware of, however, is that Microsoft Jet doesn’t prevent the user from adding a new record through a <b>QueryDef</b> object that wouldn’t have met the original selection criteria. For example, the previous query selects only records in which the value of the ContactTitle field is “Owner.” The user can add a new record and specify a value other than “Owner” for the ContactTitle field, in which case the user would be adding a record that the query, if subsequently rerun, would no longer select. It’s up to your application to enforce insertion restrictions such as this.</p>
</BODY>
</HTML>
