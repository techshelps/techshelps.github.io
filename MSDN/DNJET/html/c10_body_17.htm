<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Securing Your Database Without Asking Users to Log On</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2securing_your_database_without_asking_users_to_log on"></a>Securing Your Database Without Asking Users to Log&nbsp;On</h3>
<p>
If you want to secure some objects in a database but you don’t need to grant various permissions to different groups of users, you might want to consider securing your application without asking users to log on. If you have secured your application properly, the Admin user should no longer be a member of the Admins group.</p>
<p>
<b><font face="Symbol"><span style="font-family:symbol">&#219;</span></font>&#09;To secure your application without asking users to log on</b>
<ol>
<li>
Follow the procedures to secure a database with the User-Level Security Wizard in the “Securing Your Database with Microsoft Access” section earlier in this chapter.<br><br></li>
<li>
While logged on as a member of the Admins group, assign the permissions to the Admin user for objects you want to be available to all users. Typical permissions may include Read Data and Update Data permissions for tables and queries, and Open/Run permission for forms and reports. Don’t give the default Admin user the permission to modify the design of tables and queries, or Administer permission for the database.<br><br></li>
<li>
Clear the default Admin user’s password.<p>
<b>Important   </b>This step disables the <b>Logon</b> dialog box for all databases using the same workgroup information file.</p>
</li>
</ol>
<p>
Users can now open your database without logging on&nbsp;— that is, they are automatically logged on as the Admin user. They will be able to perform all actions you gave the Admin user permissions to perform in step 2. This works for any workgroup because the Admin user account is the same in every workgroup information file. Only members of the Admins group of the workgroup information file that was in use when you ran the User-Level Security Wizard in step 1 have full permissions on the objects in your database.</p>
<p>
<b>Important   </b>Do not distribute copies of the workgroup information file in use when you secured the database in this procedure. If you need to allow a user to administer your database, give the copy of the workgroup information file to that user only.</p>
<p>
To perform administrative functions, you must use the workgroup information file that was in use when you secured the database. There are two ways you can log on as a member of the Admins group of that workgroup information file:
<ul>
<li>
You can temporarily define a password for the Admin user to reactivate the logon procedure, and then log on as a member of the Admins group.<br><br></li>
<li>
You can use the <b>/user</b> and <b>/pwd</b> command-line options to specify your user name and password when starting Microsoft Access. If you define a shortcut that uses the <b>/user</b> and <b>/pwd</b> command-line options to do this, either delete the shortcut when you’re done, or physically secure the computer that the shortcut is located on, to prevent unauthorized users from accessing this information. For more information about command-line options, see “Microsoft Access Startup Command-Line Options,” earlier in this chapter.</li>
</ul>
</BODY>
</HTML>
