<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Workspace Interaction with Security</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2workspace_interaction_with_security"></a>Workspace Interaction with Security</h3>
<p>
When performing programmatic security operations, you must be logged on as a user with sufficient permissions to do that work. The usual way to do this is to open a <b>Workspace</b> object with the user name and password of an administrator user account, that is, a member of the Admins group. This is accomplished using the <b>CreateWorkspace</b> method of the <b>DBEngine</b> object.</p>
<p>
For example, assume your workgroup has an administrator user account named “TopDog” with the password “AllPowerful.” You would use the following code to open a <b>Workspace</b> object from which to perform the remainder of your security operations:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim wrk As Workspace
Set wrk = DBEngine.CreateWorkspace(&quot;&quot;, &quot;TopDog&quot;, &quot;AllPowerful&quot;)</font></pre>
<p>
<b>Workspace</b> objects are often thought of as mere transaction spaces&nbsp;— a way to create multiple independent transactions. However, an equally important use is the ability they provide to programmatically log on to a workgroup as another user. An obvious disadvantage of this approach is that the user name and password of a powerful user are hard-coded into the program code. One way to avoid this is to programmatically prompt the person running the code for a user name and password, as shown in the following code fragment:</p>
<pre><FONT FACE="Courier New" SIZE="3">Dim wrk As Workspace
Dim strUser As String, strPwd As String

strUser = InputBox(&quot;Enter user account.&quot;)
strPwd = InputBox(&quot;Enter password.&quot;)
Set wrk = DBEngine.CreateWorkspace(&quot;&quot;, strUser, strPwd)</font></pre>
<p>
If you want to hard-code security information, you can also save your database as an MDE file (Microsoft Access&nbsp;97) or as an executable file (Visual Basic 4.0, 5.0), so that no one can view or modify a module.</p>
<p>
<b>Note   </b>When you open a secure <b>Workspace</b> object in Microsoft Access, you can use that <b>Workspace</b> object only to work with DAO objects. You cannot work directly with Microsoft Access forms, reports, macros, or modules, since they’re not DAO objects.</p>
</BODY>
</HTML>
