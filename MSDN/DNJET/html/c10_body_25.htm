<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Securing Objects</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END--><h3><a name="jb2securing_objects"></a>Securing Objects</h3>
<p>
All DAO access to users, groups, and permissions occurs through the <b>Container</b> and <b>Document</b> objects. DAO uses the <b>Containers</b> and <b>Documents</b> collections to expose the objects in a database to the database’s host, whether that host is an application using DAO code or an application such as Microsoft Access. The <b>Containers</b> and <b>Documents</b> collections differ from other collections and objects in that they allow Microsoft Jet to store and manage objects that are created by the database’s host application. For example, in a Microsoft Jet database created by Microsoft Access, there are <b>Document</b> objects to store Microsoft Access forms and reports. Even though Microsoft Access forms and reports aren’t native Microsoft Jet objects, the <b>Containers</b> and <b>Documents</b> collections allow Microsoft Jet to store these objects and maintain security on them. By locating programmatic security access at the <b>Containers</b> and <b>Documents</b> level, Microsoft Jet extends its security services to any application that requires it.</p>
<p>
<b>See Also   </b>You may find it useful to review the overview of the DAO object hierarchy in Chapter&nbsp;2, “Introducing Data Access Objects.”</p>
<p>
All Microsoft Jet databases contain at least three containers:
<ul>
<li>
Tables contain a <b>Document</b> object for each table and query in the database.<br><br></li>
<li>
Relationships contain a <b>Document</b> object for each relationship in the database.<br><br></li>
<li>
Databases contain a <b>Document</b> object for the database itself.</li>
</ul>
<p>
Microsoft Jet defines a set of permissions for the three containers it supports directly. Permissions for other containers must be defined by the application that defines the permissions. Only then can Microsoft Jet maintain security on these foreign objects. For example, Microsoft Access defines a set of permissions for <b>Form</b> objects that Microsoft Access stores in the <b>Forms</b> container it adds to the database. You can use the Object Browser in Microsoft Access to see these permissions constants, or you can read about them in Microsoft Access Help. The security constants for Microsoft Access objects begin with the prefix “acSec.”</p>
</BODY>
</HTML>
