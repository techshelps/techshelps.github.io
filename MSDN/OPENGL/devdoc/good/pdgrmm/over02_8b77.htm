<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Specifying Callbacks</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ogl_specifying_callbacks"></a>Specifying Callbacks</h2>
<p>
You can specify up to five callback functions for a tessellation. Any functions that you do not specify are not called during the tessellation, and you do not get any information they might have returned. You specify the callback functions with <a href="glufnc01_9bu3.htm"><b>gluTessCallback</b></a>.</p>
<p>
The <b>gluTessCallback</b> function associates the callback function <i>fn </i>with the tessellation object <i>tessobj</i>. The type of the callback is determined by the parameter <i>type</i>, which can be GLU_BEGIN, GLU_EDGE_FLAG, GLU_VERTEX, GLU_END, or GLU_ERROR. The five possible callback functions have the following prototypes.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=29%>Callback Function</th>
<th align=left width=71%>Prototype</th>
</tr>
<tr valign=top>
<td width=29%>GLU_BEGIN</td>
<td width=71%><b>void</b> <b>begin(GLenum</b> <i>type</i><b>);</b> </td>
</tr>
<tr valign=top>
<td width=29%>GLU_EDGE_FLAG</td>
<td width=71%><b>void</b> <b>edgeFlag(GLboolean</b> <i>flag</i><b>);</b> </td>
</tr>
<tr valign=top>
<td width=29%>GLU_VERTEX</td>
<td width=71%><b>void</b> <b>vertex(void</b> <b>*</b><i>data</i><b>);</b> </td>
</tr>
<tr valign=top>
<td width=29%>GLU_END</td>
<td width=71%><b>void</b> <b>end(</b><i>void</i><b>);</b> </td>
</tr>
<tr valign=top>
<td width=29%>GLU_ERROR</td>
<td width=71%><b>void</b> <b>error(GLenum</b> <i>errno</i><b>);</b></td>
</tr>
</table><br>
<p>
To change a callback function, call <a href="glufnc01_9bu3.htm"><b>gluTessCallback</b></a> with the new function. To eliminate a callback function without replacing it with a new one, pass <b>gluTessCallback</b> a null pointer for the appropriate function.</p>
<p>
As tessellation proceeds, the callback functions are called in a manner similar to the way you would use the OpenGL functions <a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_75lz.htm"><b>glEdgeFlag</b></a>, <a href="glfunc03_2kag.htm"><b>glVertex</b></a>, and <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>. </p>
<p>
The GLU_BEGIN callback function is invoked with one of three possible parameters:
<ul>
<li>
GL_TRIANGLE_FAN</li>
<li>
GL_TRIANGLE_STRIP</li>
<li>
GL_TRIANGLES </li>
</ul>
<p>
After calling the GLU_BEGIN callback function, and before calling the callback function associated with GLU_END, some combination of the GLU_EDGE_FLAG and GLU_VERTEX callbacks is invoked. The associated vertices and edge flags are interpreted exactly as they are in OpenGL between <b>glBegin(</b>GL_TRIANGLE_FAN<b>)</b>, <b>glBegin(</b>GL_TRIANGLE_STRIP<b>)</b>, or <b>glBegin(</b>GL_TRIANGLES<b>)</b> and the matching <b>glEnd</b>. </p>
<p>
Because edge flags make no sense in a triangle fan or triangle strip, if there is a callback function associated with GLU_EDGE_FLAG, the GLU_BEGIN callback is called only with GL_TRIANGLES. The GLU_EDGE_FLAG callback function works analogously to the OpenGL <a href="glfunc01_75lz.htm"><b>glEdgeFlag</b></a> function.</p>
<p>
If there is an error during the tessellation, the error callback function is invoked. The error callback function is passed a GLU error number. You can obtain a character string describing the error with the <a href="glufnc01_8von.htm"><b>gluErrorString</b></a> function. </p>
<p>&nbsp;</p></body>
</HTML>
