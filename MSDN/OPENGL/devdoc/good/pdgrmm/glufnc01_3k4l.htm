<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>gluScaleImage</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_gluscaleimage"></a>gluScaleImage</h1>
<p>
The <b>gluScaleImage</b> function scales an image to an arbitrary size.</p>
<pre><code><b>int gluScaleImage(
  GLenum</b><i> format</i><b>,</b>         
<b>  GLint</b><i> widthin</i><b>,</b>         
<b>  GLint</b><i> heightin</i><b>,</b>        
<b>  GLenum</b><i> typein</i><b>,</b>         
<b>  const void *</b><i> datain</i><b>,</b>   
<b>  GLint</b><i> widthout</i><b>,</b>        
<b>  GLint</b><i> heightout</i><b>,</b>       
<b>  GLenum</b><i> typeout</i><b>,</b>        
<b>  void *</b><i> dataout         </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>format</i></dt>
<dd>
The format of the pixel data. The following symbolic values are valid: GL_COLOR_INDEX, GL_STENCIL_INDEX, GL_DEPTH_COMPONENT, GL_RED, GL_GREEN, GL_BLUE, GL_ALPHA, GL_RGB, GL_RGBA, GL_BGR_EXT, GL_BGRA_EXT, GL_LUMINANCE, and GL_LUMINANCE_ALPHA.</dd>
<dt>
<i>widthin, heightin </i></dt>
<dd>
The width and height, respectively, of the source image that is scaled.</dd>
<dt>
<i>typein</i></dt>
<dd>
The data type for <i>datain</i>. Must be one of the following: GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, or GL_FLOAT.</dd>
<dt>
<i>datain</i></dt>
<dd>
A pointer to the source image.</dd>
<dt>
<i>widthout, heightout</i></dt>
<dd>
The width and height, respectively, of the destination image.</dd>
<dt>
<i>typeout</i></dt>
<dd>
The data type for <i>dataout</i>. Must be one of the following: GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, or GL_FLOAT.</dd>
<dt>
<i>dataout</i></dt>
<dd>
A pointer to the destination image.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is zero.</p>
<p>
If the function fails, the return value is a GLU error code (see <a href="glufnc01_8von.htm"><b>gluErrorString</b></a>). </p>
<h4>Remarks</h4>
<p>
The <b>gluScaleImage</b> function scales a pixel image using the appropriate pixel store modes to unpack data from the source image and pack data into the destination image.</p>
<p>
When shrinking an image, <b>gluScaleImage</b> uses a box filter to sample the source image and create pixels for the destination image. When magnifying an image, the pixels from the source image are linearly interpolated to create the destination image.</p>
<p>
For a description of the acceptable values for the <i>format</i>, <i>typein</i>, and <i>typeout</i> parameters, see <b>glReadPixels</b>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in glu.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with glu32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_6lbn.htm"><b>glDrawPixels</b></a>, <a href="glfunc03_8m7n.htm"><b>glReadPixels</b></a>, <a href="glufnc01_22cz.htm"><b>gluBuild1DMipmaps</b></a>, <a href="glufnc01_406r.htm"><b>gluBuild2DMipmaps</b></a>, <a href="glufnc01_8von.htm"><b>gluErrorString</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
