<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glGetString</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glgetstring"></a>glGetString</h1>
<p>
The <b>glGetString</b> function returns a string describing the current OpenGL connection.</p>
<pre><code><b>const GLubyte * glGetString(
  GLenum</b><i> name</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>name</i></dt>
<dd>
One of the following symbolic constants: 
<dl>
<dt>
GL_VENDOR</dt>
<dd>
Returns the company responsible for this OpenGL implementation. This name does not change from release to release. </dd>
<dt>
GL_RENDERER</dt>
<dd>
Returns the name of the renderer. This name is typically specific to a particular configuration of a hardware platform. It does not change from release to release. </dd>
<dt>
GL_VERSION</dt>
<dd>
Returns a version or release number. </dd>
<dt>
GL_EXTENSIONS</dt>
<dd>
Returns a space-separated list of supported extensions to OpenGL.
</dd>
</dl>
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glGetString</b> function returns a pointer to a static string describing some aspect of the current OpenGL connection. </p>
<p>
Because OpenGL does not include queries for the performance characteristics of an implementation, it is expected that some applications will be written to recognize known platforms and will modify their OpenGL usage based on known performance characteristics of these platforms. The strings GL_VENDOR and GL_RENDERER together uniquely specify a platform, and will not change from release to release. They should be used by such platform recognition algorithms.</p>
<p>
The format and contents of the string that <b>glGetString</b> returns depend on the implementation, except that:
<ul>
<li>
Extension names will not include space characters and will be separated by space characters in the GL_EXTENSIONS string.</li>
<li>
All strings are null-terminated.</li>
</ul>
<p>
If an error is generated, <b>glGetString</b> returns zero.</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>name</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glGetString</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
