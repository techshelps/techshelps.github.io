<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>R</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_r"></a>R</h1>

<dl>
<dt>
<a name="_ogl_gloss_ogl_rasterize"></a><b>rasterize</b></dt>
<dd>
To convert a projected point, line, or polygon, or the pixels of a bitmap or image, to fragments, each corresponding to a pixel in the frame buffer. Note that all primitives are rasterized, not just points, lines, and polygons.</dd>
<dt>
<a name="_ogl_gloss_ogl_rectangle"></a><b>rectangle</b></dt>
<dd>
A quadrilateral whose alternate edges are parallel to each other in object coordinates. Polygons specified with <b>glRect*(&nbsp;)</b> are always rectangles; other quadrilaterals might be rectangles.</dd>
<dt>
<a name="_ogl_gloss_ogl_rendering"></a><b>rendering</b></dt>
<dd>
Conversion of primitives specified in object coordinates to an image in the frame buffer. Rendering is the primary operation of OpenGL.</dd>
<dt>
<a name="_ogl_gloss_ogl_rgba"></a><b>RGBA</b></dt>
<dd>
The red, green, blue, and alpha color components of the RGBA mode.</dd>
<dt>
<a name="_ogl_gloss_ogl_rgba_mode"></a><b>RGBA mode</b></dt>
<dd>
An OpenGL context in which its color buffers store red, green, blue, and alpha color components, rather than color indexes.</dd>
</dl>

<p>&nbsp;</p></body>
</HTML>
