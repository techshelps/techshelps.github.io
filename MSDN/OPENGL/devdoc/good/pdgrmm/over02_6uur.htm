<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Saving and Restoring Sets of State Variables</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ogl_saving_and_restoring_sets_of_state_variables"></a>Saving and Restoring Sets of State Variables</h2>
<p>
You can save and restore the values of a collection of state variables on an attribute stack with the <a href="glfunc03_68iq.htm"><b>glPushAttrib</b></a> and <a href="glfunc03_68iq.htm"><b>glPopAttrib</b></a> functions. The attribute stack has a depth of at least 16. To obtain the actual depth, use GL_MAX_ATTRIB_STACK_DEPTH with <a href="glfunc02_5ub8.htm"><b>glGetIntegerv</b></a>. Pushing a full stack or popping an empty one generates an error.</p>
<p>
It's generally faster to use <b>glPushAttrib</b> and <b>glPopAttrib</b> than to get and restore the values yourself. Some values might be pushed and popped in the hardware, and saving and restoring them can be expensive. Also, if you're operating on a remote client, all the attribute data must be transferred across the network connection and back as it's saved and restored. However, your OpenGL implementation keeps the attribute stack on the server, avoiding unnecessary network delays.</p>
<p>
The prototype of <b>glPushAttrib</b> is:</p>
<p>
<b>void</b> <b>glPushAttrib(GLbitfield</b> <i>mask</i><b>);</b></p>
<p>
Using <a href="glfunc03_68iq.htm"><b>glPushAttrib</b></a> saves all the attributes indicated by bits in <i>mask</i> by pushing them onto the attribute stack. For a list of the possible mask bits you can logically OR together to save any combination of attributes, see <a href="apxb4_3rar.htm">Attribute Groups</a>. Each bit corresponds to a collection of individual state variables. For example, GL_LIGHTING_BIT refers to all the state variables related to lighting, which include the current material color; the ambient, diffuse, specular, and emitted light; a list of the lights that are enabled; and the directions of the spotlights. When you call <a href="glfunc03_68iq.htm"><b>glPopAttrib</b></a>, all those variables are restored. To find out exactly which attributes are saved for particular mask values, see <a href="over02_7goj.htm">OpenGL State Variables</a>.</p>
<p>&nbsp;</p></body>
</HTML>
