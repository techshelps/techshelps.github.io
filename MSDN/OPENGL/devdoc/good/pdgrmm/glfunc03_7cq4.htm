<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glMaterial</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glmaterial"></a>glMaterialf, glMateriali, glMaterialfv, glMaterialiv</h1>
<p>
These functions specify material parameters for the lighting model.</p>
<pre><code><b>void glMaterialf(
  GLenum</b><i> face</i><b>,</b>   
<b>  GLenum</b><i> pname</i><b>,</b>  
<b>  GLfloat</b><i> param</i>  
<b>);</b>
 
<b>void glMateriali(</b>
<b>  GLenum</b><i> face</i><b>,</b>   
<b>  GLenum</b><i> pname</i><b>,</b>  
<b>  GLint</b><i> param</i>    
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>face</i></dt>
<dd>
The face or faces that are being updated. Must be one of GL_FRONT, GL_BACK, or GL_FRONT_AND_BACK. </dd>
<dt>
<i>pname</i></dt>
<dd>
The single-valued material parameter of the face or faces being updated. Must be GL_SHININESS. </dd>
<dt>
<i>param</i></dt>
<dd>
The value that parameter GL_SHININESS will be set to.
</dd>
</dl>
<pre><code><b>void glMaterialfv(
  GLenum</b><i> face</i><b>,</b>            
<b>  GLenum</b><i> pname</i><b>,</b>           
<b>  const GLfloat</b><i> *params</i>   
<b>);</b>
 
<b>void glMaterialiv(</b>
<b>  GLenum</b><i> face</i><b>,</b>          
<b>  GLenum</b><i> pname</i><b>,</b>         
<b>  const GLint</b><i> *params</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>face</i></dt>
<dd>
The face or faces that are being updated. Must be one of GL_FRONT, GL_BACK, or GL_FRONT_AND_BACK. </dd>
<dt>
<i>pname</i></dt>
<dd>
The material parameter of the face or faces being updated. The parameters that can be specified using <b>glMaterial</b>, and their interpretations by the lighting equation, are as follows:
<dl>
<dt>
GL_AMBIENT</dt>
<dd>
The<i> params</i> parameter contains four integer or floating-point values that specify the ambient RGBA reflectance of the material. Integer values are mapped linearly such that the most positive representable value maps to 1.0, and the most negative representable value maps to –1.0. Floating-point values are mapped directly. Neither integer nor floating-point values are clamped. The default ambient reflectance for both front- and back-facing materials is (0.2, 0.2, 0.2, 1.0). </dd>
<dt>
GL_DIFFUSE</dt>
<dd>
The<i> params</i> parameter contains four integer or floating-point values that specify the diffuse RGBA reflectance of the material. Integer values are mapped linearly such that the most positive representable value maps to 1.0, and the most negative representable value maps to –1.0. Floating-point values are mapped directly. Neither integer nor floating-point values are clamped. The default diffuse reflectance for both front- and back-facing materials is (0.8, 0.8, 0.8, 1.0). </dd>
<dt>
GL_SPECULAR</dt>
<dd>
The<i> params</i> parameter contains four integer or floating-point values that specify the specular RGBA reflectance of the material. Integer values are mapped linearly such that the most positive representable value maps to 1.0, and the most negative representable value maps to –1.0. Floating-point values are mapped directly. Neither integer nor floating-point values are clamped. The default specular reflectance for both front- and back-facing materials is (0.0, 0.0, 0.0, 1.0). </dd>
<dt>
GL_EMISSION</dt>
<dd>
The<i> params</i> parameter contains four integer or floating-point values that specify the RGBA emitted light intensity of the material. Integer values are mapped linearly such that the most positive representable value maps to 1.0, and the most negative representable value maps to –1.0. Floating-point values are mapped directly. Neither integer nor floating-point values are clamped. The default emission intensity for both front- and back-facing materials is (0.0, 0.0, 0.0, 1.0). </dd>
<dt>
GL_SHININESS</dt>
<dd>
The<i> params</i> parameter is a single integer or floating-point value that specifies the RGBA specular exponent of the material. Integer and floating-point values are mapped directly. Only values in the range [0,128] are accepted. The default specular exponent for both front- and back-facing materials is 0. </dd>
<dt>
GL_AMBIENT_AND_DIFFUSE</dt>
<dd>
Equivalent to calling <b>glMaterial</b> twice with the same parameter values, once with GL_AMBIENT and once with GL_DIFFUSE. </dd>
<dt>
GL_COLOR_INDEXES</dt>
<dd>
The<i> params</i> parameter contains three integer or floating-point values specifying the color indexes for ambient, diffuse, and specular lighting. These three values, and GL_SHININESS, are the only material values used by the color-index mode lighting equation. Refer to <a href="glfunc03_3y5o.htm"><b>glLightModel</b></a> for a discussion of color-index lighting.</dd>
</dl>
</dd>
<dt>
<i>params</i></dt>
<dd>
A pointer to the value or values to which <i>pname</i> will be set.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glMaterial</b> function assigns values to material parameters. There are two matched sets of material parameters. One, the <i>front-facing</i> set, is used to shade points, lines, bitmaps, and all polygons (when two-sided lighting is disabled), or just front-facing polygons (when two-sided lighting is enabled). The other set, <i>back-facing</i>, is used to shade back-facing polygons only when two-sided lighting is enabled. Refer to <a href="glfunc03_3y5o.htm"><b>glLightModel</b></a> for details concerning one- and two-sided lighting calculations.</p>
<p>
The <b>glMaterial</b> function takes three arguments. The first, <i>face</i>, specifies whether the GL_FRONT materials, the GL_BACK materials, or both GL_FRONT_AND_BACK materials will be modified. The second, <i>pname</i>, specifies which of several parameters in one or both sets will be modified. The third, <i>params</i>, specifies what value or values will be assigned to the specified parameter.</p>
<p>
Material parameters are used in the lighting equation that is optionally applied to each vertex. The equation is discussed in <a href="glfunc03_3y5o.htm"><b>glLightModel</b></a>. </p>
<p>
The material parameters can be updated at any time. In particular, <b>glMaterial</b> can be called between a call to <a href="glfunc01_9u3y.htm"><b>glBegin</b></a> and the corresponding call to <b>glEnd</b>. If only a single material parameter is to be changed per vertex, however, <a href="glfunc01_58vg.htm"><b>glColorMaterial</b></a> is preferred over <b>glMaterial</b>.</p>
<p>
The following function retrieves information related to <b>glMaterial</b>:</p>
<p class=indent1>
<a href="glfunc02_8wj0.htm"><b>glGetMaterial</b></a></p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%>Either <i>face</i> or <i>pname</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_VALUE </td>
<td width=57%>A specular exponent outside the range [0,128] was specified.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_58vg.htm"><b>glColorMaterial</b></a>, <a href="glfunc03_88z8.htm"><b>glLight</b></a>, <a href="glfunc03_3y5o.htm"><b>glLightModel</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
