<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>wglCreateContext</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_wglcreatecontext"></a>wglCreateContext</h1>
<p>
The <b>wglCreateContext </b>function creates a new OpenGL rendering context, which is suitable for drawing on the device referenced by <i>hdc</i>. The rendering context has the same pixel format as the device context.</p>
<pre><code><b>HGLRC wglCreateContext(
  HDC </b><i> hdc</i>   // device context of device that the rendering context 
             // will be suitable for
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdc</i></dt>
<dd>
Handle to a device context for which the function creates a suitable OpenGL rendering context.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a valid handle to an OpenGL rendering context.</p>
<p>
If the function fails, the return value is NULL. To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
A rendering context is not the same as a device context. Set the pixel format of the device context before creating a rendering context. For more information on setting the device context's pixel format, see the <a href="ntopnglr_3q5w.htm"><b>SetPixelFormat</b></a> function.</p>
<p>
To use OpenGL, you create a rendering context, select it as a thread's current rendering context, and then call OpenGL functions. When you are finished with the rendering context, you dispose of it by calling the <a href="ntopnglr_0g6s.htm"><b>wglDeleteContext</b></a> function.</p>
<p>
The following code example shows <b>wglCreateContext</b> usage:</p>
<pre><code>HDC    hdc; 
HGLRC  hglrc; 
 
// create a rendering context 
hglrc = wglCreateContext (hdc); 
 
// make it the calling thread's current rendering context
wglMakeCurrent (hdc, hglrc);
 
// call OpenGL APIs as desired ...
 
// when the rendering context is no longer needed ...  
 
// make the rendering context not current 
wglMakeCurrent (NULL, NULL) ; 
 
// delete the rendering context 
wglDeleteContext (hglrc); 
 </code></pre>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in wingdi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="ntopnglo_3ab9.htm">OpenGL on Windows NT and Windows 95 Overview</a>, <a href="ntopnglo_4e7n.htm">WGL Functions</a>, <a href="ntopnglr_3q5w.htm"><b>SetPixelFormat</b></a>, <a href="ntopnglr_0g6s.htm"><b>wglDeleteContext</b></a>, <a href="ntopnglr_667o.htm"><b>wglGetCurrentContext</b></a>, <a href="ntopnglr_7psz.htm"><b>wglGetCurrentDC</b></a>, <a href="ntopnglr_2u0k.htm"><b>wglMakeCurrent</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
