<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rendering Simple Surfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ogl_rendering_simple_surfaces"></a>Rendering Simple Surfaces</h2>
<p>
The GLU library includes a set of functions for drawing various simple surfaces (spheres, cylinders, disks, and parts of disks) in a variety of styles and orientations. These functions are described in detail in the <i>OpenGL Reference Manual.</i></p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To render simple surfaces</h5>
<ol>
<li>
Create a quadric object with <a href="glufnc01_3n37.htm"><b>gluNewQuadric</b></a>. <p>
To destroy this object when you're finished with it, use <a href="glufnc01_24v7.htm"><b>gluDeleteQuadric</b></a>. 
</li>
<li>
Specify the desired rendering style, as listed below, with the appropriate function (unless you're satisfied with the default values):<ul>
<li>
Whether surface normals should be generated, and if so, whether there should be one normal per vertex or one normal per face: <a href="glufnc01_3zar.htm"><b>gluQuadricNormals</b></a> </li>
<li>
Whether texture coordinates should be generated: <a href="glufnc01_3rol.htm"><b>gluQuadricTexture</b></a> </li>
<li>
Which side of the quadric should be considered the outside and which the inside: <a href="glufnc01_1ani.htm"><b>gluQuadricOrientation</b></a> </li>
<li>
Whether the quadric should be drawn as a set of polygons, lines, or points: <a href="glufnc01_6w2t.htm"><b>gluQuadricDrawStyle</b></a> </li>
</ul>
</li>
<li>
After specifying the rendering style, invoke the rendering function for the desired type of quadric object: <a href="glufnc01_6rmt.htm"><b>gluSphere</b></a>, <a href="glufnc01_1036.htm"><b>gluCylinder</b></a>, <a href="glufnc01_6ox7.htm"><b>gluDisk</b></a>, or <a href="glufnc01_2hwr.htm"><b>gluPartialDisk</b></a>. <p>
If an error occurs during rendering, the error-handling function you've specified with <a href="glufnc01_7d7v.htm"><b>gluQuadricCallBack</b></a> is invoked.
</li>
</ol>
<p>
Use the <b>*</b><i>Radius</i>, <i>height</i>, and similar arguments, rather than the <a href="glfunc03_1691.htm"><b>glScale</b></a> function, to scale the quadrics, so that you don't have to renormalize any unit-length normals that are generated. To force lighting calculations at a finer granularity, especially if the material specularity is high, set the <i>loops </i>and <i>stacks </i>arguments to values other than 1. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
