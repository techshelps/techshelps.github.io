<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ChoosePixelFormat</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_choosepixelformat"></a>ChoosePixelFormat</h1>
<p>
The <b>ChoosePixelFormat</b> function attempts to match an appropriate pixel format supported by a device context to a given pixel format specification.</p>
<pre><code><b>int ChoosePixelFormat(
  HDC </b><i> hdc</i><b>,  </b>// device context to search for a best pixel format 
             // match
<b>  CONST PIXELFORMATDESCRIPTOR * </b><i> ppfd</i> 
             // pixel format for which a best match is sought
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdc</i></dt>
<dd>
Specifies the device context that the function examines to determine the best match for the pixel format descriptor pointed to by <i>ppfd</i>.</dd>
<dt>
<i>ppfd</i></dt>
<dd>
Pointer to a <a href="ntopnglr_73jm.htm"><b>PIXELFORMATDESCRIPTOR</b></a> structure that specifies the requested pixel format. In this context, the members of the <b>PIXELFORMATDESCRIPTOR </b>structure that <i>ppfd </i>points to are used as follows:
<dl>
<dt>
<b>nSize</b></dt>
<dd>
Specifies the size of the <b>PIXELFORMATDESCRIPTOR</b> data structure. Set this member to <b>sizeof(PIXELFORMATDESCRIPTOR)</b>.</dd>
<dt>
<b>nVersion</b></dt>
<dd>
Specifies the version number of the <b>PIXELFORMATDESCRIPTOR</b> data structure. Set this member to 1.</dd>
<dt>
<b>dwFlags</b></dt>
<dd>
A set of bit flags that specify properties of the pixel buffer. You can combine the following bit flag constants by using bitwise-OR.
<p>
If any of the following flags are set, the <b>ChoosePixelFormat</b> function attempts to match pixel formats that also have that flag or flags set. Otherwise, <b>ChoosePixelFormat</b> ignores that flag in the pixel formats:

<p>
PFD_DRAW_TO_WINDOW<br>
PFD_DRAW_TO_BITMAP<br>
PFD_SUPPORT_GDI<br>
PFD_SUPPORT_OPENGL

<p>
If any of the following flags are set, <b>ChoosePixelFormat</b> attempts to match pixel formats that also have that flag or flags set. Otherwise, it attempts to match pixel formats without that flag set:

<p>
PFD_DOUBLEBUFFER<br>
PFD_STEREO

<p>
If the following flag is set, the function ignores the PFD_DOUBLEBUFFER flag in the pixel formats:

<p>
PFD_DOUBLEBUFFER_DONTCARE

<p>
If the following flag is set, the function ignores the PFD_STEREO flag in the pixel formats:

<p>
PFD_STEREO_DONTCARE
</dd>
<dt>
<b>iPixelType</b></dt>
<dd>
Specifies the type of pixel format for the function to consider:
<p>
PFD_TYPE_RGBA<br>
PFD_TYPE_COLORINDEX
</dd>
<dt>
<b>cColorBits</b></dt>
<dd>
Zero or greater.</dd>
<dt>
<b>cRedBits</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cRedShift</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cGreenBits</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cGreenShift</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cBlueBits</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cBlueShift</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cAlphaBits</b></dt>
<dd>
Zero or greater.</dd>
<dt>
<b>cAlphaShift</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cAccumBits</b></dt>
<dd>
Zero or greater.</dd>
<dt>
<b>cAccumRedBits</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cAccumGreenBits</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cAccumBlueBits</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cAccumAlphaBits</b></dt>
<dd>
Not used.</dd>
<dt>
<b>cDepthBits</b></dt>
<dd>
Zero or greater.</dd>
<dt>
<b>cStencilBits</b></dt>
<dd>
Zero or greater.</dd>
<dt>
<b>cAuxBuffers</b></dt>
<dd>
Zero or greater.</dd>
<dt>
<b>iLayerType</b></dt>
<dd>
Specifies one of the following layer type values:
<p>
PFD_MAIN_PLANE<br>
PFD_OVERLAY_PLANE<br>
PFD_UNDERLAY_PLANE
</dd>
<dt>
<b>bReserved</b></dt>
<dd>
Not used.</dd>
<dt>
<b>dwLayerMask</b></dt>
<dd>
Not used.</dd>
<dt>
<b>dwVisibleMask</b></dt>
<dd>
Not used.</dd>
<dt>
<b>dwDamageMask</b></dt>
<dd>
Not used.
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a pixel format index (one-based) that is the closest match to the given pixel format descriptor.</p>
<p>
If the function fails, the return value is zero. To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
You must ensure that the pixel format matched by the <b>ChoosePixelFormat </b>function satisfies your requirements. For example, if you request a pixel format with a 24-bit RGB color buffer but the device context offers only 8-bit RGB color buffers, the function returns a pixel format with an 8-bit RGB color buffer.</p>
<p>
The following code sample shows how to use <b>ChoosePixelFormat</b> to match a specified pixel format:</p>
<pre><code>PIXELFORMATDESCRIPTOR pfd = { 
    sizeof(PIXELFORMATDESCRIPTOR),  //  size of this pfd 
    1,                     // version number 
    PFD_DRAW_TO_WINDOW |   // support window 
    PFD_SUPPORT_OPENGL |   // support OpenGL 
    PFD_DOUBLEBUFFER,      // double buffered 
    PFD_TYPE_RGBA,         // RGBA type 
    24,                    // 24-bit color depth 
    0, 0, 0, 0, 0, 0,      // color bits ignored 
    0,                     // no alpha buffer 
    0,                     // shift bit ignored 
    0,                     // no accumulation buffer 
    0, 0, 0, 0,            // accum bits ignored 
    32,                    // 32-bit z-buffer     
    0,                     // no stencil buffer 
    0,                     // no auxiliary buffer 
    PFD_MAIN_PLANE,        // main layer 
    0,                     // reserved 
    0, 0, 0                // layer masks ignored 
    }; 
    HDC  hdc;
    int  iPixelFormat; 
 
iPixelFormat = ChoosePixelFormat(hdc, &amp;pfd);
 </code></pre>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in wingdi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="ntopnglo_3ab9.htm">OpenGL on Windows NT and Windows 95 Overview</a>, <a href="ntopnglo_74ab.htm">Win32 Functions</a>, <a href="ntopnglr_9ygk.htm"><b>DescribePixelFormat</b></a>, <a href="ntopnglr_99kk.htm"><b>GetPixelFormat</b></a>, <a href="ntopnglr_3q5w.htm"><b>SetPixelFormat</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
