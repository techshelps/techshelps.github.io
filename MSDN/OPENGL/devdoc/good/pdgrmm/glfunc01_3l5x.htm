<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glEnable, glDisable</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glenable"></a>glEnable, glDisable</h1>
<p>
The <b>glEnable</b> and <b>glDisable</b> functions enable or disable OpenGL capabilities.</p>
<pre><code><b>void glEnable(
  GLenum</b><i> cap</i>   
<b>);</b>
 
<b>void glDisable(</b>
<b>  GLenum</b><i> cap</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cap</i></dt>
<dd>
A symbolic constant indicating an OpenGL capability.
<p>
For discussion of the values <i>cap </i>can take, see the following Remarks section.

</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glEnable</b> and <b>glDisable</b> functions enable and disable various capabilities. Use <a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a> or <a href="glfunc02_5ub8.htm"><b>glGet</b></a> to determine the current setting of any capability.</p>
<p>
Both <b>glEnable</b> and <b>glDisable</b> take a single argument, <i>cap</i>, which can assume one of the following values:
<dl>
<dt>
GL_ALPHA_TEST</dt>
<dd>
If enabled, do alpha testing. See <a href="glfunc01_5qhv.htm"><b>glAlphaFunc</b></a>. </dd>
<dt>
GL_AUTO_NORMAL</dt>
<dd>
If enabled, compute surface normal vectors analytically when either GL_MAP2_VERTEX_3 or GL_MAP2_VERTEX_4 has generated vertices. See <a href="glfunc03_78s2.htm"><b>glMap2</b></a>. </dd>
<dt>
GL_BLEND</dt>
<dd>
If enabled, blend the incoming RGBA color values with the values in the color buffers. See <a href="glfunc01_4vs3.htm"><b>glBlendFunc</b></a>. </dd>
<dt>
GL_CLIP_PLANE<i>i</i></dt>
<dd>
If enabled, clip geometry against user-defined clipping plane <i>i</i>. See <a href="glfunc01_9g11.htm"><b>glClipPlane</b></a>. </dd>
<dt>
GL_COLOR_MATERIAL</dt>
<dd>
If enabled, have one or more material parameters track the current color. See <a href="glfunc01_58vg.htm"><b>glColorMaterial</b></a>. </dd>
<dt>
GL_CULL_FACE</dt>
<dd>
If enabled, cull polygons based on their winding in window coordinates. See <a href="glfunc01_9yxx.htm"><b>glCullFace</b></a>. </dd>
<dt>
GL_DEPTH_TEST</dt>
<dd>
If enabled, do depth comparisons and update the depth buffer. See <a href="glfunc01_5kkj.htm"><b>glDepthFunc</b></a> and <a href="glfunc01_9bxh.htm"><b>glDepthRange</b></a>. </dd>
<dt>
GL_DITHER</dt>
<dd>
If enabled, dither color components or indexes before they are written to the color buffer. </dd>
<dt>
GL_FOG</dt>
<dd>
If enabled, blend a fog color into the post-texturing color. See <a href="glfunc02_5rmv.htm"><b>glFog</b></a>. </dd>
<dt>
GL_LIGHT<i>i</i></dt>
<dd>
If enabled, include light <i>i</i> in the evaluation of the lighting equation. See <a href="glfunc03_3y5o.htm"><b>glLightModel</b></a> and <a href="glfunc03_88z8.htm"><b>glLight</b></a>. </dd>
<dt>
GL_LIGHTING</dt>
<dd>
If enabled, use the current lighting parameters to compute the vertex color or index. If disabled, associate the current color or index with each vertex. See <a href="glfunc03_7cq4.htm"><b>glMaterial</b></a>, <b>glLightModel</b>, and <b>glLight</b>. </dd>
<dt>
GL_LINE_SMOOTH</dt>
<dd>
If enabled, draw lines with correct filtering. If disabled, draw aliased lines. See <a href="glfunc03_75k8.htm"><b>glLineWidth</b></a>. </dd>
<dt>
GL_LINE_STIPPLE</dt>
<dd>
If enabled, use the current line stipple pattern when drawing lines. See <a href="glfunc03_7sdh.htm"><b>glLineStipple</b></a>. </dd>
<dt>
GL_LOGIC_OP</dt>
<dd>
If enabled, apply the currently selected logical operation to the incoming and color-buffer indexes. See <a href="glfunc03_7wkw.htm"><b>glLogicOp</b></a>. </dd>
<dt>
GL_MAP1_COLOR_4</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord1</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh1</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint1</b></a> generate RGBA values. See also <a href="glfunc03_78s1.htm"><b>glMap1</b></a>. </dd>
<dt>
GL_MAP1_INDEX</dt>
<dd>
If enabled, calls to <b>glEvalCoord1</b>, <b>glEvalMesh1</b>, and <b>glEvalPoint1</b> generate color indexes. See also <b>glMap1</b>. </dd>
<dt>
GL_MAP1_NORMAL</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord1</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh1</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint1</b></a> generate normals. See also <a href="glfunc03_78s1.htm"><b>glMap1</b></a>. </dd>
<dt>
GL_MAP1_TEXTURE_COORD_1</dt>
<dd>
If enabled, calls to <b>glEvalCoord1</b>, <b>glEvalMesh1</b>, and <b>glEvalPoint1</b> generate <i>s</i> texture coordinates. See also <b>glMap1</b>. </dd>
<dt>
GL_MAP1_TEXTURE_COORD_2</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord1</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh1</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint1</b></a> generate <i>s</i> and <i>t</i> texture coordinates. See also <a href="glfunc03_78s1.htm"><b>glMap1</b></a>. </dd>
<dt>
GL_MAP1_TEXTURE_COORD_3</dt>
<dd>
If enabled, calls to <b>glEvalCoord1</b>, <b>glEvalMesh1</b>, and <b>glEvalPoint1</b> generate <i>s</i>, <i>t</i>, and <i>r</i> texture coordinates. See also <b>glMap1</b>. </dd>
<dt>
GL_MAP1_TEXTURE_COORD_4</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord1</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh1</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint1</b></a> generate <i>s</i>, <i>t</i>, <i>r</i>, and <i>q</i> texture coordinates. See also <a href="glfunc03_78s1.htm"><b>glMap1</b></a>. </dd>
<dt>
GL_MAP1_VERTEX_3</dt>
<dd>
If enabled, calls to <b>glEvalCoord1</b>, <b>glEvalMesh1</b>, and <b>glEvalPoint1</b> generate <i>x</i>, <i>y</i>, and <i>z</i> vertex coordinates. See also <b>glMap1</b>. </dd>
<dt>
GL_MAP1_VERTEX_4</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord1</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh1</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint1</b></a> generate homogeneous <i>x</i>, <i>y</i>, <i>z</i>, and <i>w</i> vertex coordinates. See also <a href="glfunc03_78s1.htm"><b>glMap1</b></a>. </dd>
<dt>
GL_MAP2_COLOR_4</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord2</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh2</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint2</b></a> generate RGBA values. See also <a href="glfunc03_78s2.htm"><b>glMap2</b></a>. </dd>
<dt>
GL_MAP2_INDEX</dt>
<dd>
If enabled, calls to <b>glEvalCoord2</b>, <b>glEvalMesh2</b>, and <b>glEvalPoint2</b> generate color indexes. See also <b>glMap2</b>. </dd>
<dt>
GL_MAP2_NORMAL</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord2</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh2</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint2</b></a> generate normals. See also <a href="glfunc03_78s2.htm"><b>glMap2</b></a>. </dd>
<dt>
GL_MAP2_TEXTURE_COORD_1</dt>
<dd>
If enabled, calls to <b>glEvalCoord2</b>, <b>glEvalMesh2</b>, and <b>glEvalPoint2</b> generate <i>s </i>texture coordinates. See also <b>glMap2</b>. </dd>
<dt>
GL_MAP2_TEXTURE_COORD_2</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord2</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh2</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint2</b></a> generate <i>s</i> and <i>t</i> texture coordinates. See also <a href="glfunc03_78s2.htm"><b>glMap2</b></a>. </dd>
<dt>
GL_MAP2_TEXTURE_COORD_3</dt>
<dd>
If enabled, calls to <b>glEvalCoord2</b>, <b>glEvalMesh2</b>, and <b>glEvalPoint2</b> generate <i>s</i>, <i>t</i>, and <i>r</i> texture coordinates. See also <b>glMap2</b>. </dd>
<dt>
GL_MAP2_TEXTURE_COORD_4</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord2</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh2</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint2</b></a> generate <i>s</i>, <i>t</i>, <i>r</i>, and <i>q</i> texture coordinates. See also <a href="glfunc03_78s2.htm"><b>glMap2</b></a>. </dd>
<dt>
GL_MAP2_VERTEX_3</dt>
<dd>
If enabled, calls to <b>glEvalCoord2</b>, <b>glEvalMesh2</b>, and <b>glEvalPoint2</b> generate <i>x</i>, <i>y</i>, and <i>z</i> vertex coordinates. See also <b>glMap2</b>. </dd>
<dt>
GL_MAP2_VERTEX_4</dt>
<dd>
If enabled, calls to <a href="glfunc01_7hb8.htm"><b>glEvalCoord2</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh2</b></a>, and <a href="glfunc02_1o50.htm"><b>glEvalPoint2</b></a> generate homogeneous <i>x</i>, <i>y</i>, <i>z</i>, and <i>w</i> vertex coordinates. See also <a href="glfunc03_78s2.htm"><b>glMap2</b></a>. </dd>
<dt>
GL_NORMALIZE</dt>
<dd>
If enabled, normal vectors specified with <b>glNormal</b> are scaled to unit length after transformation. See <a href="glfunc03_5ru4.htm"><b>glNormal</b></a>. </dd>
<dt>
GL_POINT_SMOOTH</dt>
<dd>
If enabled, draw points with proper filtering. If disabled, draw aliased points. See <a href="glfunc03_5m91.htm"><b>glPointSize</b></a>. </dd>
<dt>
GL_POLYGON_SMOOTH</dt>
<dd>
If enabled, draw polygons with proper filtering. If disabled, draw aliased polygons. See <a href="glfunc03_9zol.htm"><b>glPolygonMode</b></a>. </dd>
<dt>
GL_POLYGON_STIPPLE</dt>
<dd>
If enabled, use the current polygon stipple pattern when rendering polygons. See <a href="glfunc03_1tr9.htm"><b>glPolygonStipple</b></a>. </dd>
<dt>
GL_SCISSOR_TEST</dt>
<dd>
If enabled, discard fragments that are outside the scissor rectangle. See <a href="glfunc03_4nxu.htm"><b>glScissor</b></a>. </dd>
<dt>
GL_STENCIL_TEST</dt>
<dd>
If enabled, do stencil testing and update the stencil buffer. See <a href="glfunc03_9t9f.htm"><b>glStencilFunc</b></a> and <a href="glfunc03_5tm8.htm"><b>glStencilOp</b></a>. </dd>
<dt>
GL_TEXTURE_1D</dt>
<dd>
If enabled, one-dimensional texturing is performed (unless two-dimensional texturing is also enabled). See <a href="glfunc03_16hw.htm"><b>glTexImage1D</b></a>. </dd>
<dt>
GL_TEXTURE_2D</dt>
<dd>
If enabled, two-dimensional texturing is performed. See <a href="glfunc03_16jo.htm"><b>glTexImage2D</b></a>. </dd>
<dt>
GL_TEXTURE_GEN_Q</dt>
<dd>
If enabled, the <i>q</i> texture coordinate is computed using the texture-generation function defined with <a href="glfunc03_73u6.htm"><b>glTexGen</b></a>. Otherwise, the current <i>q</i> texture coordinate is used.  </dd>
<dt>
GL_TEXTURE_GEN_R</dt>
<dd>
If enabled, the <i>r</i> texture coordinate is computed using the texture generation function defined with <a href="glfunc03_73u6.htm"><b>glTexGen</b></a>. If disabled, the current <i>r</i> texture coordinate is used.  </dd>
<dt>
GL_TEXTURE_GEN_S</dt>
<dd>
If enabled, the <i>s</i> texture coordinate is computed using the texture generation function defined with <b>glTexGen</b>. If disabled, the current <i>s</i> texture coordinate is used.  </dd>
<dt>
GL_TEXTURE_GEN_T</dt>
<dd>
If enabled, the <i>t</i> texture coordinate is computed using the texture generation function defined with <a href="glfunc03_73u6.htm"><b>glTexGen</b></a>. If disabled, the current <i>t</i> texture coordinate is used.  
</dd>
</dl>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Error Code</th>
<th align=left width=52%>Condition</th>
</tr>
<tr valign=top>
<td width=48%>GL_INVALID_ENUM </td>
<td width=52%><i>cap</i> was not one of the values listed in the preceding Remarks section.</td>
</tr>
<tr valign=top>
<td width=48%>GL_INVALID_OPERATION </td>
<td width=52%><b>glEnable</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_5qhv.htm"><b>glAlphaFunc</b></a>, <a href="glfunc01_2q5w.htm"><b>glArrayElement</b></a>, <a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_4vs3.htm"><b>glBlendFunc</b></a>, <a href="glfunc01_9g11.htm"><b>glClipPlane</b></a>, <a href="glfunc01_58vg.htm"><b>glColorMaterial</b></a>, <a href="glfunc01_456a.htm"><b>glColorPointer</b></a>, <a href="glfunc01_9yxx.htm"><b>glCullFace</b></a>, <a href="glfunc01_5kkj.htm"><b>glDepthFunc</b></a>, <a href="glfunc01_9bxh.htm"><b>glDepthRange</b></a>, <a href="glfunc01_8oqb.htm"><b>glDrawArrays</b></a>, <a href="glfunc01_61pu.htm"><b>glEdgeFlagPointer</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc01_7hb8.htm"><b>glEvalCoord1</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh1</b></a>, <a href="glfunc02_1o50.htm"><b>glEvalPoint1</b></a>, <a href="glfunc02_5rmv.htm"><b>glFog</b></a>, <a href="glfunc02_5ub8.htm"><b>glGet</b></a>, <a href="glfunc03_36lu.htm"><b>glIndexPointer</b></a>, <a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a>, <a href="glfunc03_88z8.htm"><b>glLight</b></a>, <a href="glfunc03_3y5o.htm"><b>glLightModel</b></a>, <a href="glfunc03_75k8.htm"><b>glLineWidth</b></a>, <a href="glfunc03_7sdh.htm"><b>glLineStipple</b></a>, <a href="glfunc03_7wkw.htm"><b>glLogicOp</b></a>, <a href="glfunc03_78s1.htm"><b>glMap1</b></a>, <a href="glfunc03_78s2.htm"><b>glMap2</b></a>, <a href="glfunc03_7cq4.htm"><b>glMaterial</b></a>, <a href="glfunc03_5ru4.htm"><b>glNormal</b></a>, <a href="glfunc03_1tiq.htm"><b>glNormalPointer</b></a>, <a href="glfunc03_5m91.htm"><b>glPointSize</b></a>, <a href="glfunc03_9zol.htm"><b>glPolygonMode</b></a>, <a href="glfunc03_1tr9.htm"><b>glPolygonStipple</b></a>, <a href="glfunc03_4nxu.htm"><b>glScissor</b></a>, <a href="glfunc03_9t9f.htm"><b>glStencilFunc</b></a>, <a href="glfunc03_5tm8.htm"><b>glStencilOp</b></a>, <a href="glfunc03_64z6.htm"><b>glTexCoordPointer</b></a>, <a href="glfunc03_73u6.htm"><b>glTexGen</b></a>, <a href="glfunc03_16hw.htm"><b>glTexImage1D</b></a>, <a href="glfunc03_16jo.htm"><b>glTexImage2D</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
