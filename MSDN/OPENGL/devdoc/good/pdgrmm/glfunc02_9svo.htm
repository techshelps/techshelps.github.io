<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glGetColorTableParameterfvEXT, glGetColorTableParameterivEXT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glgetcolortableparameterfvext"></a>glGetColorTableParameterfvEXT, glGetColorTableParameterivEXT</h1>
<p>
The <b>glGetColorTableParameterfvEXT</b> and <b>glGetColorTableParameterivEXT</b> functions get palette parameters from color tables.</p>
<pre><code><b>void glGetColorTableParameterfvEXT(
  GLenum</b><i> target</i><b>,</b>  
<b>  GLenum</b><i> pname</i><b>,</b>   
<b>  GLint *</b><i> params</i>  
<b>);</b>
 
<b>void glGetColorTableParameterivEXT(</b>
<b>  GLenum</b><i> target</i><b>,</b>  
<b>  GLenum</b><i> pname</i><b>,</b>   
<b>  GLint *</b><i> params</i>  
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>target</i></dt>
<dd>
The target texture of the palette for which you want parameter data. Must be TEXTURE_1D, TEXTURE_2D, PROXY_TEXTURE_1D, or PROXY_TEXTURE_2D.</dd>
<dt>
<i>pname</i></dt>
<dd>
A symbolic constant for the type of palette parameter data pointed to by <i>params</i>.
<p>
The following table summarizes the meaning of the valid constants for the <i>pname</i> parameter.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Constant</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>GL_COLOR_TABLE_FORMAT_EXT</td>
<td width=46%>Return the internal format specified by the most recent call to <a href="glfunc01_83n8.htm"><b>glColorTableEXT</b></a> or the default value. </td>
</tr>
<tr valign=top>
<td width=54%>GL_COLOR_TABLE_WIDTH_EXT</td>
<td width=46%>Return the width of the current palette.</td>
</tr>
<tr valign=top>
<td width=54%>GL_COLOR_TABLE_RED_SIZE_EXT</td>
<td width=46%>Return the actual size used internally to store the red component of the palette data.</td>
</tr>
<tr valign=top>
<td width=54%>GL_COLOR_TABLE_GREEN_SIZE_EXT</td>
<td width=46%>Return the actual size used internally to store the green component of the palette data.</td>
</tr>
<tr valign=top>
<td width=54%>GL_COLOR_TABLE_BLUE_SIZE_EXT</td>
<td width=46%>Return the actual size used internally to store the blue component of the palette data.</td>
</tr>
<tr valign=top>
<td width=54%>GL_COLOR_TABLE_ALPHA_SIZE_EXT</td>
<td width=46%>Return the actual size used internally to store the alpha component of the palette data.</td>
</tr>
</table><br>

</dd>
<dt>
<i>params</i></dt>
<dd>
Points to the color table parameter data specified by the <i>pname</i> parameter.
</dd>
</dl>
<h4>Remarks</h4>
<p>
You use the <b>glGetColorTableParameterivEXT</b> and <b>glGetColorTableParameterfvEXT</b> functions to retrieve specific parameter data from color tables set with <a href="glfunc01_83n8.htm"><b>glColorTableEXT</b></a> for targeted texture palettes. Also you can use these functions to determine the number of color table entries that <b>glGetColorTableEXT</b> returns.</p>
<p>
When the <i>target</i> parameter is GL_PROXY_TEXTURE_1D or GL_PROXY_TEXTURE_2D, and the implementation does not support the values specified for either <i>format</i> or <i>width</i>, <b>glColorTableEXT</b> can fail to create the requested color table. In this case, the color table is empty and all parameters retrieved will be zero. You can determine whether OpenGL supports a particular color table format and size by calling <b>glColorTableEXT</b> with a proxy target, and then calling <b>glGetColorTableParameterivEXT</b> or <b>glGetColorTableParameterfvEXT</b> to determine whether the width parameter matches that set by <b>glColorTableEXT</b>. If the retrieved width is zero, the color table request by <b>glColorTable</b> failed. If the retrieved width is not zero, you can call <b>glColorTable</b> with the real target with TEXTURE_1D or TEXTURE_2D to set the color table.</p>
<p>
<b>Note</b>  The <b>glGetColorTableParameterivEXT</b> and <b>glGetColorTableParameterfvEXT</b> functions are extension functions that are not part of the standard OpenGL library but are part of the GL_EXT_paletted_texture extension. To check whether your implementation of OpenGL supports <b>glGetColorTableParameterivEXT</b> and <b>glGetColorTableParameterfvEXT</b>, call <a href="glfunc02_6dwn.htm"><b>glGetString</b></a><b>(</b>GL_EXTENSIONS<b>)</b>. If it returns GL_EXT_paletted_texture, <b>glGetColorTableParameterivEXT</b> and <b>glGetColorTableParameterfvEXT</b> are supported. To obtain the function address of an extension function, call <a href="ntopnglr_6yer.htm"><b>wglGetProcAddress</b></a>.</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>target</i> or <i>pname</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glGetColorTableParameterivEXT</b> or <b>glGetColorTableParameterfvEXT</b> was called between <b>glBegin</b> and <b>glEnd</b> pairs.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="glfunc01_425w.htm"><b>glColorSubTableEXT</b></a>, <a href="glfunc01_83n8.htm"><b>glColorTableEXT</b></a>, <a href="glfunc02_0584.htm"><b>glGetColorTableEXT</b></a>, <a href="ntopnglr_6yer.htm"><b>wglGetProcAddress</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
