<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glPolygonStipple</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glpolygonstipple"></a>glPolygonStipple</h1>
<p>
The <b>glPolygonStipple</b> function sets the polygon stippling pattern.</p>
<pre><code><b>void glPolygonStipple(
  const GLubyte</b><i> *mask</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>mask</i></dt>
<dd>
A pointer to a 32x32 stipple pattern that will be unpacked from memory in the same way that <a href="glfunc01_6lbn.htm"><b>glDrawPixels</b></a> unpacks pixels.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glPolygonStipple</b> function sets the polygon stippling pattern. Polygon stippling, like line stippling (see <a href="glfunc03_7sdh.htm"><b>glLineStipple</b></a>), masks out certain fragments produced by rasterization, creating a pattern. Stippling is independent of polygon antialiasing.</p>
<p>
The<i> mask</i> parameter is a pointer to a 32x32 stipple pattern that is stored in memory just like the pixel data supplied to <b>glDrawPixels</b> with <i>height </i>and<i> width</i> both equal to 32, a pixel<i> format </i>of GL_COLOR_INDEX, and data<i> type </i>of GL_BITMAP. That is, the stipple pattern is represented as a 32x32 array of 1-bit color indexes packed in unsigned bytes. The <b>glPixelStore</b> function parameters, such as GL_UNPACK_SWAP_BYTES and GL_UNPACK_LSB_FIRST, affect the assembling of the bits into a stipple pattern. Pixel transfer operations (shift, offset, and pixel map) are not applied to the stipple image, however.</p>
<p>
Polygon stippling is enabled and disabled with <a href="glfunc01_3l5x.htm"><b>glEnable</b></a> and <b>glDisable</b>, using argument GL_POLYGON_STIPPLE. If enabled, a rasterized polygon fragment with window coordinates <i>x (w) </i> and <i>y (w) </i> is sent to the next stage of OpenGL if and only if the (<i>x (w) </i> mod 32)th bit in the (<i>y (w) </i> mod 32)th row of the stipple pattern is one. When polygon stippling is disabled, it is as if the stipple pattern were all ones.</p>
<p>
The following functions retrieve information related to <b>glPolygonStipple</b>:</p>
<p class=indent1>
<a href="glfunc02_2mw5.htm"><b>glGetPolygonStipple</b></a></p>
<p class=indent1>
<a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a> with argument GL_POLYGON_STIPPLE</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glPolygonStipple</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_6lbn.htm"><b>glDrawPixels</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc03_7sdh.htm"><b>glLineStipple</b></a>, <a href="glfunc03_7kdh.htm"><b>glPixelStore</b></a>, <a href="glfunc03_881e.htm"><b>glPixelTransfer</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
