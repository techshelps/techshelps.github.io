<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Color-Index Mode and Windows Palette Management</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ogl_color_index_mode_and_windows_palette_management"></a>Color-Index Mode and Windows Palette Management</h3>
<p>
The color-index mode specifies colors in a logical palette with an index to a specific logical-palette entry. Most GDI programs use color-index palettes, but the RGBA mode works better for OpenGL for several effects, such as shading, lighting, fog, and texture mapping. If having the truest color isn't critical for your OpenGL application, you might choose to use the color-index mode (for example, for a topographic map that uses "false color" to emphasize the elevation gradient). </p>
<h4>Color-Index Mode Palette Sample</h4>
<p>
The following code sets up a <a href="ntopnglr_73jm.htm"><b>PIXELFORMATDESCRIPTOR</b></a> structure that sets the flag of the <b>iPixelType</b> member to PFD_TYPE_COLORINDEX. This specifies that the application use a color-index palette. </p>
<pre><code>BOOL bSetupPixelFormat(HDC hdc) 
{ 
    PIXELFORMATDESCRIPTOR pfd, *ppfd; 
    int pixelformat; 
 
    ppfd = &amp;pfd; 
 
    ppfd-&gt;nSize = sizeof(PIXELFORMATDESCRIPTOR); 
    ppfd-&gt;nVersion = 1; 
    ppfd-&gt;dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL |  
                        PFD_DOUBLEBUFFER; 
    ppfd-&gt;dwLayerMask = PFD_MAIN_PLANE; 
 
    /* Set to color-index mode and use the default color palette. */ 
    ppfd-&gt;iPixelType = PFD_TYPE_COLORINDEX;  
 
    ppfd-&gt;cColorBits = 8; 
    ppfd-&gt;cDepthBits = 16; 
    ppfd-&gt;cAccumBits = 0; 
    ppfd-&gt;cStencilBits = 0; 
 
    pixelformat = ChoosePixelFormat(hdc, ppfd); 
 
    if ( (pixelformat = ChoosePixelFormat(hdc, ppfd)) == 0 ) 
    { 
        MessageBox(NULL, "ChoosePixelFormat failed", "Error", MB_OK); 
        return FALSE; 
    } 
 
    if (SetPixelFormat(hdc, pixelformat, ppfd) == FALSE) 
    { 
        MessageBox(NULL, "SetPixelFormat failed", "Error", MB_OK); 
        return FALSE; 
    } 
 
    return TRUE; 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
