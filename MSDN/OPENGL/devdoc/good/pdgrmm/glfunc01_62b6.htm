<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glColor</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glcolor"></a>glColor</h1>
<pre><b><code>glColor3b, glColor3d, glColor3f, glColor3i, glColor3s, glColor3ub, glColor3ui, glColor3us, glColor4b, glColor4d, glColor4f, glColor4i, glColor4s, glColor4ub, glColor4ui, glColor4us, glColor3bv, glColor3dv, glColor3fv, glColor3iv, glColor3sv, glColor3ubv, glColor3uiv, glColor3usv, glColor4bv, glColor4dv, glColor4fv, glColor4iv, glColor4sv, glColor4ubv, glColor4uiv, glColor4usv</code></b></pre>
<p>
These functions set the current color.</p>
<pre><code><b>void glColor3b(
  GLbyte</b><i> red</i><b>,</b>     
<b>  GLbyte</b><i> green</i><b>,</b>   
<b>  GLbyte</b><i> blue</i>     
<b>);</b>
 
<b>void glColor3d(</b>
<b>  GLdouble</b><i> red</i><b>,</b>     
<b>  GLdouble</b><i> green</i><b>,</b>   
<b>  GLdouble</b><i> blue</i>     
<b>);</b>
 
<b>void glColor3f(</b>
<b>  GLfloat</b><i> red</i><b>,</b>     
<b>  GLfloat</b><i> green</i><b>,</b>   
<b>  GLfloat</b><i> blue</i>     
<b>);</b>
 
<b>void glColor3i(</b>
<b>  GLint</b><i> red</i><b>,</b>     
<b>  GLint</b><i> green</i><b>,</b>   
<b>  GLint</b><i> blue</i>     
<b>);</b>
 
<b>void glColor3s(</b>
<b>  GLshort</b><i> red</i><b>,</b>     
<b>  GLshort</b><i> green</i><b>,</b>   
<b>  GLshort</b><i> blue</i>     
<b>);</b>
 
<b>void glColor3ub(</b>
<b>  GLubyte</b><i> red</i><b>,</b>     
<b>  GLubyte</b><i> green</i><b>,</b>   
<b>  GLubyte</b><i> blue</i>     
<b>);</b>
 
<b>void glColor3ui(</b>
<b>  GLuint</b><i> red</i><b>,</b>     
<b>  GLuint</b><i> green</i><b>,</b>   
<b>  GLuint</b><i> blue</i>     
<b>);</b>
 
<b>void glColor3us(</b>
<b>  GLushort</b><i> red</i><b>,</b>     
<b>  GLushort</b><i> green</i><b>,</b>   
<b>  GLushort</b><i> blue</i>     
<b>);</b>
 
<b>void glColor4b(</b>
<b>  GLbyte</b><i> red</i><b>,</b>    
<b>  GLbyte</b><i> green</i><b>,</b>  
<b>  GLbyte</b><i> blue</i><b>,</b>   
<b>  GLbyte</b><i> alpha</i>   
<b>);</b>
 
<b>void glColor4d(</b>
<b>  GLdouble</b><i> red</i><b>,</b>    
<b>  GLdouble</b><i> green</i><b>,</b>  
<b>  GLdouble</b><i> blue</i><b>,</b>   
<b>  GLdouble</b><i> alpha</i>   
<b>);</b>
 
<b>void glColor4f(</b>
<b>  GLfloat</b><i> red</i><b>,</b>    
<b>  GLfloat</b><i> green</i><b>,</b>  
<b>  GLfloat</b><i> blue</i><b>,</b>   
<b>  GLfloat</b><i> alpha</i>   
<b>);</b>
 
<b>void glColor4i(</b>
<b>  GLint</b><i> red</i><b>,</b>    
<b>  GLint</b><i> green</i><b>,</b>  
<b>  GLint</b><i> blue</i><b>,</b>   
<b>  GLint</b><i> alpha</i>   
<b>);</b>
 
<b>void glColor4s(</b>
<b>  GLshort</b><i> red</i><b>,</b>    
<b>  GLshort</b><i> green</i><b>,</b>  
<b>  GLshort</b><i> blue</i><b>,</b>   
<b>  GLshort</b><i> alpha</i>   
<b>);</b>
 
<b>void glColor4ub(</b>
<b>  GLubyte</b><i> red</i><b>,</b>    
<b>  GLubyte</b><i> green</i><b>,</b>  
<b>  GLubyte</b><i> blue</i><b>,</b>   
<b>  GLubyte</b><i> alpha</i>   
<b>);</b>
 
<b>void glColor4ui(</b>
<b>  GLuint</b><i> red</i><b>,</b>    
<b>  GLuint</b><i> green</i><b>,</b>  
<b>  GLuint</b><i> blue</i><b>,</b>   
<b>  GLuint</b><i> alpha</i>   
<b>);</b>
 
<b>void glColor4us(</b>
<b>  GLushort</b><i> red</i><b>,</b>    
<b>  GLushort</b><i> green</i><b>,</b>  
<b>  GLushort</b><i> blue</i><b>,</b>   
<b>  GLushort</b><i> alpha</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>red, green, blue</i></dt>
<dd>
New red, green, and blue values for the current color. </dd>
<dt>
<i>alpha</i></dt>
<dd>
A new alpha value for the current color. Included only in the four-argument <b>glColor4</b> function.
</dd>
</dl>
<pre><code><b>void glColor3bv(
  const GLbyte</b><i> *v</i>   
<b>);</b>
 
<b>void glColor3dv(</b>
<b>  const GLdouble</b><i> *v</i>   
<b>);</b>
 
<b>void glColor3fv(</b>
<b>  const GLfloat</b><i> *v</i>   
<b>);</b>
 
<b>void glColor3iv(</b>
<b>  const GLint</b><i> *v</i>   
<b>);</b>
 
<b>void glColor3sv(</b>
<b>  const GLshort</b><i> *v</i>   
<b>);</b>
 
<b>void glColor3ubv(</b>
<b>  const GLubyte</b><i> *v</i>   
<b>);</b>
 
<b>void glColor3uiv(</b>
<b>  const GLuint</b><i> *v</i>   
<b>);</b>
 
<b>void glColor3usv(</b>
<b>  const GLushort</b><i> *v</i>   
<b>);</b>
 
<b>void glColor4bv(</b>
<b>  const GLbyte</b><i> *v</i>   
<b>);</b>
 
<b>void glColor4dv(</b>
<b>  const GLdouble</b><i> *v</i>   
<b>);</b>
 
<b>void glColor4fv(</b>
<b>  const GLfloat</b><i> *v</i>   
<b>);</b>
 
<b>void glColor4iv(</b>
<b>  const GLint</b><i> *v</i>   
<b>);</b>
 
<b>void glColor4sv(</b>
<b>  const GLshort</b><i> *v</i>   
<b>);</b>
 
<b>void glColor4ubv(</b>
<b>  const GLubyte</b><i> *v</i>   
<b>);</b>
 
<b>void glColor4uiv(</b>
<b>  const GLuint</b><i> *v</i>   
<b>);</b>
 
<b>void glColor4usv(</b>
<b>  const GLushort</b><i> *v</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>v</i></dt>
<dd>
A pointer to an array that contains red, green, blue, and (sometimes) alpha values.
</dd>
</dl>
<h4>Remarks</h4>
<p>
OpenGL stores both a current single-valued color index and a current four-valued RGBA color. The <b>glColor</b> function sets a new four-valued RGBA color. </p>
<p>
There are two major variants to <b>glColor</b>:
<ul>
<li>
The <b>glColor3</b> variants specify new red, green, and blue values explicitly, and set the current alpha value to 1.0 implicitly.</li>
<li>
The <b>glColor4</b> variants specify all four color components explicitly.</li>
</ul>
<p>
The <b>glColor3b</b>, <b>glColor4b</b>, <b>glColor3s</b>, <b>glColor4s</b>, <b>glColor3i</b>, and <b>glColor4i</b> functions take three or four signed byte, short, or long integers as arguments. When you append <i>v</i> to the name, the color functions can take a pointer to an array of such values.</p>
<p>
Current color values are stored in floating-point format, with unspecified mantissa and exponent sizes. Unsigned integer color components, when specified, are linearly mapped to floating-point values such that the largest representable value maps to 1.0 (full intensity), and zero maps to 0.0 (zero intensity). Signed integer color components, when specified, are linearly mapped to floating-point values such that the most positive representable value maps to 1.0, and the most negative representable value maps to –1.0. Floating-point values are mapped directly.</p>
<p>
Neither floating-point nor signed integer values are clamped to the range [0,1] before updating the current color. However, color components are clamped to this range before they are interpolated or written into a color buffer.</p>
<p>
You can update the current color at any time. In particular, you can call <b>glColor</b> between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</p>
<p>
The following functions retrieve information related to the <b>glColor</b> functions:</p>
<p class=indent1>
<b>glGet</b> with argument GL_CURRENT_COLOR</p>
<p class=indent1>
<b>glGet</b> with argument GL_RGBA_MODE</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc02_5ub8.htm"><b>glGet</b></a>, <a href="glfunc03_7ak8.htm"><b>glIndex</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
