<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glEvalCoord</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glevalcoord"></a>glEvalCoord</h1>
<pre><b><code>glEvalCoord1d, glEvalCoord1f, glEvalCoord2d, glEvalCoord2f, glEvalCoord1dv, glEvalCoord1fv, glEvalCoord2dv, glEvalCoord2fv</code></b></pre>
<p>
These functions evaluate enabled one- and two-dimensional maps.</p>
<pre><code><b>void glEvalCoord1d(
  GLdouble</b><i> u</i>   
<b>);</b>
 
<b>void glEvalCoord1f(</b>
<b>  GLfloat</b><i> u</i>   
<b>);</b>
 
<b>void glEvalCoord2d(</b>
<b>  GLdouble</b><i> u</i><b>,</b>  
<b>  GLdouble</b><i> v</i>   
<b>);</b>
 
<b>void glEvalCoord2f(</b>
<b>  GLfloat</b><i> u</i><b>,</b>  
<b>  GLfloat</b><i> v</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>u</i></dt>
<dd>
In <b>glEvalCoord1d</b>, <b>glEvalCoord1f</b>, <b>glEvalCoord2d</b>, and <b>glEvalCoord2f</b>, specifies a value that is the domain coordinate <i>u</i> to the basis function defined in a previous <a href="glfunc03_78s1.htm"><b>glMap1</b></a> or <a href="glfunc03_78s2.htm"><b>glMap2</b></a> function. </dd>
<dt>
<i>v</i></dt>
<dd>
A value that is the domain coordinate <i>v</i> to the basis function defined in a previous <b>glMap2</b> function. This argument is not present in a <b>glEvalCoord1</b> function.
</dd>
</dl>
<pre><code><b>void glEvalCoord1dv(
  const GLdouble *</b><i> u</i>   
<b>);</b>
 
<b>void glEvalCoord1fv(</b>
<b>  const GLfloat *</b><i> u</i>   
<b>);</b>
 
<b>void glEvalCoord2dv(</b>
<b>  const GLdouble *</b><i> u</i>   
<b>);</b>
 
<b>void glEvalCoord2fv(</b>
<b>  const GLfloat *</b><i> u</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>u</i></dt>
<dd>
In <b>glEvalCoord1dv</b>, <b>glEvalCoord1fv</b>, <b>glEvalCoord2dv</b>, and <b>glEvalCoord2fv</b>, specifies a pointer to an array containing either one or two domain coordinates. The first coordinate is <i>u</i>. The second coordinate is <i>v</i>, which is present only in <b>glEvalCoord2</b> versions.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glEvalCoord1</b> function evaluates enabled one-dimensional maps at argument <i>u</i>. The <b>glEvalCoord2</b> function does the same for two-dimensional maps using two domain values, <i>u</i> and <i>v</i>. Maps are defined with <a href="glfunc03_78s1.htm"><b>glMap1</b></a> and <a href="glfunc03_78s2.htm"><b>glMap2</b></a>, and are enabled and disabled with <a href="glfunc01_3l5x.htm"><b>glEnable</b></a> and <a href="glfunc01_3l5x.htm"><b>glDisable</b></a>.</p>
<p>
When one of the <b>glEvalCoord</b> functions is issued, all currently enabled maps of the indicated dimension are evaluated. Then, for each enabled map, it is as if the corresponding OpenGL function were issued with the computed value. That is, if GL_MAP1_INDEX or GL_MAP2_INDEX is enabled, a <a href="glfunc03_7ak8.htm"><b>glIndex</b></a> function is simulated. If GL_MAP1_COLOR_4 or GL_MAP2_COLOR_4 is enabled, a <a href="glfunc01_62b6.htm"><b>glColor</b></a> function is simulated. If GL_MAP1_NORMAL or GL_MAP2_NORMAL is enabled, a normal vector is produced, and if any of GL_MAP1_TEXTURE_COORD_1, GL_MAP1_TEXTURE_COORD_2, GL_MAP1_TEXTURE_COORD_3, GL_MAP1_TEXTURE_COORD_4, GL_MAP2_TEXTURE_COORD_1, GL_MAP2_TEXTURE_COORD_2, GL_MAP2_TEXTURE_COORD_3, and GL_MAP2_TEXTURE_COORD_4 is enabled, then an appropriate <a href="glfunc03_6qck.htm"><b>glTexCoord</b></a> function is simulated.</p>
<p>
OpenGL uses evaluated values instead of current values for those evaluations that are enabled, and current values otherwise, for color, color index, normal, and texture coordinates. However, the evaluated values do not update the current values. Thus, if <a href="glfunc03_2kag.htm"><b>glVertex</b></a> functions are interspersed with <b>glEvalCoord</b> functions, the color, normal, and texture coordinates associated with the <b>glVertex</b> functions are not affected by the values generated by the <b>glEvalCoord</b> functions, but only by the most recent <b>glColor</b>, <b>glIndex</b>, <a href="glfunc03_5ru4.htm"><b>glNormal</b></a>, and <b>glTexCoord</b> functions.</p>
<p>
No functions are issued for maps that are not enabled. If more than one texture evaluation is enabled for a particular dimension (for example, GL_MAP2_TEXTURE_COORD_1 and GL_MAP2_TEXTURE_COORD_2), then only the evaluation of the map that produces the larger number of coordinates (in this case, GL_MAP2_TEXTURE_COORD_2) is carried out. GL_MAP1_VERTEX_4 overrides GL_MAP1_VERTEX_3, and GL_MAP2_VERTEX_4 overrides GL_MAP2_VERTEX_3, in the same manner. If neither a three- nor four-component vertex map is enabled for the specified dimension, <b>glEvalCoord</b> is ignored.</p>
<p>
If automatic normal generation is enabled, <b>glEvalCoord2</b> calls <a href="glfunc01_3l5x.htm"><b>glEnable</b></a> with argument GL_AUTO_NORMAL to generate surface normals analytically, regardless of the contents or enabling of the GL_MAP2_NORMAL map. Let</p>
<p>
<img src="images/evlcrd01.gif" border=0></p>
<p>
The generated normal <b>n</b> is </p>
<p>
<img src="images/evlcrd02.gif" border=0></p>
<p>
If automatic normal generation is disabled, the corresponding normal map GL_MAP2_NORMAL, if enabled, is used to produce a normal. If neither automatic normal generation nor a normal map is enabled, no normal is generated for <b>glEvalCoord2</b> functions.</p>
<p>
The following functions retrieve information related to the <b>glEvalCoord</b> functions:</p>
<p class=indent1>
<a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a> with argument GL_MAP1_VERTEX_3</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_VERTEX_4</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_INDEX</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_COLOR_4</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_NORMAL</p>
<p class=indent1>
<b>glIsEnabled</b> with argument<b> </b>GL_MAP1_TEXTURE_COORD_1</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_TEXTURE_COORD_2</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_TEXTURE_COORD_3</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_TEXTURE_COORD_4</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_VERTEX_3</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_VERTEX_4</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_INDEX</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_COLOR_4</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_NORMAL</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_TEXTURE_COORD_1</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_TEXTURE_COORD_2</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_TEXTURE_COORD_3</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP2_TEXTURE_COORD_4</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_AUTO_NORMAL</p>
<p class=indent1>
<b>glGetMap</b> </p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_62b6.htm"><b>glColor</b></a>, <a href="glfunc01_3l5x.htm"><b>glDisable</b></a>, <a href="glfunc01_3l5x.htm"><b>glEnable</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh</b></a>, <a href="glfunc02_1o50.htm"><b>glEvalPoint</b></a>, <a href="glfunc02_2z3k.htm"><b>glGetMap</b></a>, <a href="glfunc03_7ak8.htm"><b>glIndex</b></a>, <a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a>, <a href="glfunc03_78s1.htm"><b>glMap1</b></a>, <a href="glfunc03_78s2.htm"><b>glMap2</b></a>, <a href="glfunc03_509w.htm"><b>glMapGrid</b></a>, <a href="glfunc03_5ru4.htm"><b>glNormal</b></a>, <a href="glfunc03_6qck.htm"><b>glTexCoord</b></a>, <a href="glfunc03_2kag.htm"><b>glVertex</b></a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
