<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glGetError</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glgeterror"></a>glGetError</h1>
<p>
The <b>glGetError</b> function returns error information.</p>
<pre><code><b>GLenum glGetError(
</b> <i> void</i>   
<b>);</b>
 </code></pre>
<h4>Remarks</h4>
<p>
The <b>glGetError</b> function returns the value of the error flag. Each detectable error is assigned a numeric code and symbolic name. When an error occurs, the error flag is set to the appropriate error code value. No other errors are recorded until <b>glGetError</b> is called, the error code is returned, and the flag is reset to GL_NO_ERROR. If a call to <b>glGetError</b> returns GL_NO_ERROR, there has been no detectable error since the last call to <b>glGetError</b>, or since OpenGL was initialized.</p>
<p>
To allow for distributed implementations, there may be several error flags. If any single error flag has recorded an error, the value of that flag is returned and that flag is reset to GL_NO_ERROR when <b>glGetError</b> is called. If more than one flag has recorded an error, <b>glGetError</b> returns and clears an arbitrary error flag value. If all error flags are to be reset, you should always call <b>glGetError</b> in a loop until it returns GL_NO_ERROR. </p>
<p>
Initially, all error flags are set to GL_NO_ERROR.</p>
<p>
The following are the currently defined errors:
<dl>
<dt>
GL_NO_ERROR</dt>
<dd>
No error has been recorded. The value of this symbolic constant is guaranteed to be zero. </dd>
<dt>
GL_INVALID_ENUM</dt>
<dd>
An unacceptable value is specified for an enumerated argument. The offending function is ignored, having no side effect other than to set the error flag. </dd>
<dt>
GL_INVALID_VALUE</dt>
<dd>
A numeric argument is out of range. The offending function is ignored, having no side effect other than to set the error flag. </dd>
<dt>
GL_INVALID_OPERATION</dt>
<dd>
The specified operation is not allowed in the current state. The offending function is ignored, having no side effect other than to set the error flag. </dd>
<dt>
GL_STACK_OVERFLOW</dt>
<dd>
This function would cause a stack overflow. The offending function is ignored, having no side effect other than to set the error flag. </dd>
<dt>
GL_STACK_UNDERFLOW</dt>
<dd>
This function would cause a stack underflow. The offending function is ignored, having no side effect other than to set the error flag. </dd>
<dt>
GL_OUT_OF_MEMORY</dt>
<dd>
There is not enough memory left to execute the function. The state of OpenGL is undefined, except for the state of the error flags, after this error is recorded.
</dd>
</dl>
<p>
When an error flag is set, results of an OpenGL operation are undefined only if GL_OUT_OF_MEMORY has occurred. In all other cases, the function generating the error is ignored and has no effect on the OpenGL state or frame buffer contents.</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glGetError</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
