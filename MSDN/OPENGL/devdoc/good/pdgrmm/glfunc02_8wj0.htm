<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glGetMaterial</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glgetmaterial"></a>glGetMaterialfv, glGetMaterialiv</h1>
<p>
The <b>glGetMaterialfv</b> and <b>glGetMaterialiv</b> functions return material parameters.</p>
<pre><code><b>void glGetMaterialfv(
  GLenum</b><i> face</i><b>,</b>       
<b>  GLenum</b><i> pname</i><b>,</b>      
<b>  GLfloat *</b><i> params</i>   
<b>);</b>
 
<b>void glGetMaterialiv(</b>
<b>  GLenum</b><i> face</i><b>,</b>    
<b>  GLenum</b><i> pname</i><b>,</b>   
<b>  GLint *</b><i> params</i>  
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>face</i></dt>
<dd>
Specifies which of the two materials is being queried. GL_FRONT or GL_BACK are accepted, representing the front and back materials, respectively. </dd>
<dt>
<i>pname</i></dt>
<dd>
The material parameter to return. The following values are accepted: 
<dl>
<dt>
GL_AMBIENT</dt>
<dd>
The<i> params</i> parameter returns four integer or floating-point values representing the ambient reflectance of the material. Integer values, when requested, are linearly mapped from the internal floating-point representation such that 1.0 maps to the most positive representable integer value, and –1.0 maps to the most negative representable integer value. If the internal value is outside the range [–1,1], the corresponding integer return value is undefined. </dd>
<dt>
GL_DIFFUSE</dt>
<dd>
The<i> params</i> parameter returns four integer or floating-point values representing the diffuse reflectance of the material. Integer values, when requested, are linearly mapped from the internal floating-point representation such that 1.0 maps to the most positive representable integer value, and –1.0 maps to the most negative representable integer value. If the internal value is outside the range [–1,1], the corresponding integer return value is undefined. </dd>
<dt>
GL_SPECULAR</dt>
<dd>
The<i> params</i> parameter returns four integer or floating-point values representing the specular reflectance of the material. Integer values, when requested, are linearly mapped from the internal floating-point representation such that 1.0 maps to the most positive representable integer value, and –1.0 maps to the most negative representable integer value. If the internal value is outside the range [–1,1], the corresponding integer return value is undefined. </dd>
<dt>
GL_EMISSION</dt>
<dd>
The<i> params</i> parameter returns four integer or floating-point values representing the emitted light intensity of the material. Integer values, when requested, are linearly mapped from the internal floating-point representation such that 1.0 maps to the most positive representable integer value, and –1.0 maps to the most negative representable integer value. If the internal value is outside the range [–1,1], the corresponding integer return value is undefined. </dd>
<dt>
GL_SHININESS</dt>
<dd>
The<i> params</i> parameter returns one integer or floating-point value representing the specular exponent of the material. Integer values, when requested, are computed by rounding the internal floating-point value to the nearest integer value. </dd>
<dt>
GL_COLOR_INDEXES</dt>
<dd>
The<i> params</i> parameter returns three integer or floating-point values representing the ambient, diffuse, and specular indexes of the material. Use these indexes only for color-index lighting. (The other parameters are all used only for RGBA lighting.) Integer values, when requested, are computed by rounding the internal floating-point values to the nearest integer values.</dd>
</dl>
</dd>
<dt>
<i>params</i></dt>
<dd>
Returns the requested data.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glGetMaterial</b> function returns in <i>params</i> the value or values of parameter <i>pname</i> of material <i>face</i>. </p>
<p>
If an error is generated, no change is made to the contents of <i>params</i>.</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Error Code</th>
<th align=left width=52%>Condition</th>
</tr>
<tr valign=top>
<td width=48%>GL_INVALID_ENUM </td>
<td width=52%><i>face</i> or <i>pname</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=48%>GL_INVALID_OPERATION </td>
<td width=52%><b>glGetMaterial</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc03_7cq4.htm"><b>glMaterial</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
