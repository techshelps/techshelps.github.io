<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glRasterPos</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glrasterpos"></a>glRasterPos</h1>
<pre><b><code>glRasterPos2d, glRasterPos2f, glRasterPos2i, glRasterPos2s, glRasterPos3d, glRasterPos3f, glRasterPos3i, glRasterPos3s, glRasterPos4d, glRasterPos4f, glRasterPos4i, glRasterPos4s, glRasterPos2dv, glRasterPos2fv, glRasterPos2iv, glRasterPos2sv, glRastePos3dv, glRasterPos3fv, glRasterPos3iv, glRasterPos3sv, glRasterPos4dv, glRasterPos4fv, glRasterPos4iv, glRasterPos4sv</code></b></pre>
<p>
These functions specify the raster position for pixel operations.</p>
<pre><code><b>void glRasterPos2d(
  GLdouble</b><i> x</i><b>,</b>  
<b>  GLdouble</b><i> y</i>   
<b>);</b>
 
<b>void glRasterPos2f(</b>
<b>  GLfloat</b><i> x</i><b>,</b>  
<b>  GLfloat</b><i> y</i>   
<b>);</b>
 
<b>void glRasterPos2i(</b>
<b>  GLint</b><i> x</i><b>,</b>  
<b>  GLint</b><i> y</i>   
<b>);</b>
 
<b>void glRasterPos2s(</b>
<b>  GLshort</b><i> x</i><b>,</b>  
<b>  GLshort</b><i> y</i>   
<b>);</b>
 
<b>void glRasterPos3d(</b>
<b>  GLdouble</b><i> x</i><b>,</b>  
<b>  GLdouble</b><i> y</i><b>,</b>  
<b>  GLdouble</b><i> z</i>   
<b>);</b>
 
<b>void glRasterPos3f(</b>
<b>  GLfloat</b><i> x</i><b>,</b>  
<b>  GLfloat</b><i> y</i><b>,</b>  
<b>  GLfloat</b><i> z</i>   
<b>);</b>
 
<b>void glRasterPos3i(</b>
<b>  GLint</b><i> x</i><b>,</b>  
<b>  GLint</b><i> y</i><b>,</b>  
<b>  GLint</b><i> z</i>   
<b>);</b>
 
<b>void glRasterPos3s(</b>
<b>  GLshort</b><i> x</i><b>,</b>  
<b>  GLshort</b><i> y</i><b>,</b>  
<b>  GLshort</b><i> z</i>   
<b>);</b>
 
<b>void glRasterPos4d(</b>
<b>  GLdouble</b><i> x</i><b>,</b>  
<b>  GLdouble</b><i> y</i><b>,</b>  
<b>  GLdouble</b><i> z</i><b>,</b>  
<b>  GLdouble</b><i> w</i>   
<b>);</b>
 
<b>void glRasterPos4f(</b>
<b>  GLfloat</b><i> x</i><b>,</b>  
<b>  GLfloat</b><i> y</i><b>,</b>  
<b>  GLfloat</b><i> z</i><b>,</b>  
<b>  GLfloat</b><i> w</i>   
<b>);</b>
 
<b>void glRasterPos4i(</b>
<b>  GLint</b><i> x</i><b>,</b>  
<b>  GLint</b><i> y</i><b>,</b>  
<b>  GLint</b><i> z</i><b>,</b>  
<b>  GLint</b><i> w</i>   
<b>);</b>
 
<b>void glRasterPos4s(</b>
<b>  GLshort</b><i> x</i><b>,</b>  
<b>  GLshort</b><i> y</i><b>,</b>  
<b>  GLshort</b><i> z</i><b>,</b>  
<b>  GLshort</b><i> w</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>x, y, z, w</i></dt>
<dd>
The <i>x</i>, <i>y</i>, <i>z</i>, and <i>w</i> object coordinates (if present) for the raster position.
</dd>
</dl>
<pre><code><b>void glRasterPos2dv(
  const GLdouble</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos2fv(</b>
<b>  const GLfloat</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos2iv(</b>
<b>  const GLint</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos2sv(</b>
<b>  const GLshort</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos3dv(</b>
<b>  const GLdouble</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos3fv(</b>
<b>  const GLfloat</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos3iv(</b>
<b>  const GLint</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos3sv(</b>
<b>  const GLshort</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos4dv(</b>
<b>  const GLdouble</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos4fv(</b>
<b>  const GLfloat</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos4iv(</b>
<b>  const GLint</b><i> *v</i>   
<b>);</b>
 
<b>void glRasterPos4sv(</b>
<b>  const GLshort</b><i> *v</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>v</i></dt>
<dd>
A pointer to an array of two, three, or four elements, specifying <i>x, y, z, </i>and <i>w</i> coordinates, respectively.
</dd>
</dl>
<h4>Remarks</h4>
<p>
OpenGL maintains a 3-D position in window coordinates. This position, called the raster position, is maintained with subpixel accuracy. It is used to position pixel and bitmap write operations. See <a href="glfunc01_1a5s.htm"><b>glBitmap</b></a>, <a href="glfunc01_6lbn.htm"><b>glDrawPixels</b></a>, and <a href="glfunc01_36ur.htm"><b>glCopyPixels</b></a>. </p>
<p>
The current raster position consists of three window coordinates (<i>x, y, z</i>), a clip coordinate <i>w</i> value, an eye coordinate distance, a valid bit, and associated color data and texture coordinates. The <i>w</i> coordinate is a clip coordinate, because <i>w</i> is not projected to window coordinates. The <b>glRasterPos4</b> function specifies object coordinates <i>x, y, z,</i> and <i>w</i> explicitly. The <b>glRasterPos3</b> function specifies object coordinates <i>x, y,</i> and <i>z</i> explicitly, while <i>w</i> is implicitly set to one. The <b>glRasterPos2</b> function uses the argument values for <i>x</i> and <i>y</i> while implicitly setting <i>z</i> and <i>w</i> to zero and one.</p>
<p>
The object coordinates presented by <b>glRasterPos</b> are treated just like those of a <a href="glfunc03_2kag.htm"><b>glVertex</b></a> command. They are transformed by the current modelview and projection matrices<b> </b>and passed to the clipping stage. If the vertex is not culled, then it is projected and scaled to window coordinates, which become the new current raster position, and the GL_CURRENT_RASTER_POSITION_VALID flag is set. If the vertex is culled, then the valid bit is cleared and the current raster position and associated color and texture coordinates are undefined.</p>
<p>
The current raster position also includes some associated color data and texture coordinates. If lighting is enabled, then GL_CURRENT_RASTER_COLOR, in RGBA mode, or the GL_CURRENT_RASTER_INDEX, in color-index mode, is set to the color produced by the lighting calculation (see <a href="glfunc03_88z8.htm"><b>glLight</b></a>, <a href="glfunc03_3y5o.htm"><b>glLightModel</b></a>, and <a href="glfunc03_24rw.htm"><b>glShadeModel</b></a>). If lighting is disabled, current color (in RGBA mode, state variable GL_CURRENT_COLOR) or color index (in color-index mode, state variable GL_CURRENT_INDEX) is used to update the current raster color.</p>
<p>
Likewise, GL_CURRENT_RASTER_TEXTURE_COORDS is updated as a function of GL_CURRENT_TEXTURE_COORDS, based on the texture matrix and the texture generation functions (see <a href="glfunc03_73u6.htm"><b>glTexGen</b></a>). Finally, the distance from the origin of the eye coordinate system to the vertex, as transformed by only the modelview matrix, replaces GL_CURRENT_RASTER_DISTANCE.</p>
<p>
Initially, the current raster position is (0,0,0,1), the current raster distance is 0, the valid bit is set, the associated RGBA color is (1,1,1,1), the associated color index is 1, and the associated texture coordinates are (0, 0, 0, 1). In RGBA mode, GL_CURRENT_RASTER_INDEX is always 1; in color-index mode, the current raster RGBA color always maintains its initial value.</p>
<p>
<b>Note</b>  The raster position is modified both by <b>glRasterPos</b> and by <a href="glfunc01_1a5s.htm"><b>glBitmap</b></a>. </p>
<p>
When the raster position coordinates are invalid, drawing commands that are based on the raster position are ignored (that is, they do not result in changes to the OpenGL state).</p>
<p>
The following functions retrieve information related to <b>glRasterPos</b>:</p>
<p class=indent1>
<a href="glfunc02_5ub8.htm"><b>glGet</b></a> with argument GL_CURRENT_RASTER_POSITION</p>
<p class=indent1>
<b>glGet</b> with argument GL_CURRENT_RASTER_POSITION_VALID</p>
<p class=indent1>
<b>glGet</b> with argument GL_CURRENT_RASTER_DISTANCE</p>
<p class=indent1>
<b>glGet</b> with argument GL_CURRENT_RASTER_COLOR</p>
<p class=indent1>
<b>glGet</b> with argument GL_CURRENT_RASTER_INDEX</p>
<p class=indent1>
<b>glGet</b> with argument GL_CURRENT_RASTER_TEXTURE_COORDS</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glRasterPos</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_1a5s.htm"><b>glBitmap</b></a>, <a href="glfunc01_36ur.htm"><b>glCopyPixels</b></a>, <a href="glfunc01_6lbn.htm"><b>glDrawPixels</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc03_88z8.htm"><b>glLight</b></a>, <a href="glfunc03_3y5o.htm"><b>glLightModel</b></a>, <a href="glfunc03_24rw.htm"><b>glShadeModel</b></a>, <a href="glfunc03_6qck.htm"><b>glTexCoord</b></a>, <a href="glfunc03_73u6.htm"><b>glTexGen</b></a>, <a href="glfunc03_2kag.htm"><b>glVertex</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
