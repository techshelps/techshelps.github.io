<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Deleting a Rendering Context</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ogl_deleting_a_rendering_context"></a>Deleting a Rendering Context</h3>
<p>
The following code sample shows how to delete an OpenGL rendering context when an OpenGL window is closed. It is a continuation of the scenario used in <a href="ntopnglo_4ygk.htm">Creating a Rendering Context and Making It Current</a>. </p>
<pre><code>// a window is about to be destroyed 
case WM_DESTROY: 
    { 
    // local variables 
    HGLRC    hglrc; 
    HDC      hdc ; 
 
    // if the thread has a current rendering context ... 
    if(hglrc = wglGetCurrentContext()) { 
 
        // obtain its associated device context 
        hdc = wglGetCurrentDC() ; 
 
        // make the rendering context not current 
        wglMakeCurrent(NULL, NULL) ; 
 
        // release the device context 
        ReleaseDC (hwnd, hdc) ; 
 
        // delete the rendering context 
        wglDeleteContext(hglrc); 
 
        } 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
