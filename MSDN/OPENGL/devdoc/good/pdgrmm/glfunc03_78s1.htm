<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glMap1</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glmap1"></a>glMap1d, glMap1f</h1>
<p>
The <b>glMap1d</b> and <b>glMap1f </b>functions define a one-dimensional evaluator.</p>
<pre><code><b>void glMap1d(
  GLenum</b><i> target</i><b>,</b>           
<b>  GLdouble</b><i> u1</i><b>,</b>             
<b>  GLdouble</b><i> u2</i><b>,</b>             
<b>  GLint</b><i> stride</i><b>,</b>            
<b>  GLint</b><i> order</i><b>,</b>             
<b>  const GLdouble</b><i> *points</i>   
<b>);</b>
 
<b>void glMap1f(</b>
<b>  GLenum</b><i> target</i><b>,</b>          
<b>  GLfloat</b><i> u1</i><b>,</b>             
<b>  GLfloat</b><i> u2</i><b>,</b>             
<b>  GLint</b><i> stride</i><b>,</b>           
<b>  GLint</b><i> order</i><b>,</b>            
<b>  const GLfloat</b><i> *points</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>target</i></dt>
<dd>
The kind of values that are generated by the evaluator. Symbolic constants. The<i> target</i> parameter is a symbolic constant that indicates what kind of control points are provided in <i>points</i>, and what output is generated when the map is evaluated. It can assume one of nine predefined values: 
<dl>
<dt>
GL_MAP1_VERTEX_3</dt>
<dd>
Each control point is three floating-point values representing <i>x, y,</i> and <i>z</i>. Internal <a href="glfunc03_2kag.htm"><b>glVertex3</b></a> commands are generated when the map is evaluated. </dd>
<dt>
GL_MAP1_VERTEX_4</dt>
<dd>
Each control point is four floating-point values representing<i> x, y, z,</i> and <i>w</i>. Internal <a href="glfunc03_2kag.htm"><b>glVertex4</b></a> commands are generated when the map is evaluated. </dd>
<dt>
GL_MAP1_INDEX</dt>
<dd>
Each control point is a single floating-point value representing a color index. Internal <a href="glfunc03_7ak8.htm"><b>glIndex</b></a> commands are generated when the map is evaluated. However, the current index is not updated with the value of these <b>glIndex</b> commands. </dd>
<dt>
GL_MAP1_COLOR_4</dt>
<dd>
Each control point is four floating-point values representing red, green, blue, and alpha. Internal <a href="glfunc01_62b6.htm"><b>glColor4</b></a> commands are generated when the map is evaluated. However, the current color is not updated with the value of these <b>glColor4</b> commands. </dd>
<dt>
GL_MAP1_NORMAL</dt>
<dd>
Each control point is three floating-point values representing the <i>x, y,</i> and <i>z</i> components of a normal vector. Internal <a href="glfunc03_5ru4.htm"><b>glNormal</b></a> commands are generated when the map is evaluated. However, the current normal is not updated with the value of these <b>glNormal</b> commands. </dd>
<dt>
GL_MAP1_TEXTURE_COORD_1</dt>
<dd>
Each control point is a single floating-point value representing the <i>s</i> texture coordinate. Internal <a href="glfunc03_6qck.htm"><b>glTexCoord1</b></a> commands are generated when the map is evaluated. However, the current texture coordinates are not updated with the value of these <b>glTexCoord</b> commands. </dd>
<dt>
GL_MAP1_TEXTURE_COORD_2</dt>
<dd>
Each control point is two floating-point values representing the <i>s</i> and <i>t</i> texture coordinates. Internal <a href="glfunc03_6qck.htm"><b>glTexCoord2</b></a> commands are generated when the map is evaluated. However, the current texture coordinates are not updated with the value of these <b>glTexCoord</b> commands. </dd>
<dt>
GL_MAP1_TEXTURE_COORD_3</dt>
<dd>
Each control point is three floating-point values representing the <i>s, t,</i> and <i>r</i> texture coordinates. Internal <a href="glfunc03_6qck.htm"><b>glTexCoord3</b></a> commands are generated when the map is evaluated. However, the current texture coordinates are not updated with the value of these <b>glTexCoord</b> commands. </dd>
<dt>
GL_MAP1_TEXTURE_COORD_4</dt>
<dd>
Each control point is four floating-point values representing the <i>s, t, r, </i>and <i>q</i> texture coordinates. Internal <a href="glfunc03_6qck.htm"><b>glTexCoord4</b></a> commands are generated when the map is evaluated. However, the current texture coordinates are not updated with the value of these <b>glTexCoord</b> commands.</dd>
</dl>
</dd>
<dt>
<i>u1, u2</i></dt>
<dd>
A linear mapping of <i>u</i>, as presented to <a href="glfunc01_7hb8.htm"><b>glEvalCoord1</b></a>, to <i>û</i>, the variable that is evaluated by the equations specified by this command. </dd>
<dt>
<i>stride</i></dt>
<dd>
The number of floats or doubles between the beginning of one control point and the beginning of the next one in the data structure referenced in <i>points</i>. This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations. </dd>
<dt>
<i>order</i></dt>
<dd>
The number of control points. Must be positive. </dd>
<dt>
<i>points</i></dt>
<dd>
A pointer to the array of control points.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Evaluators provide a way to use polynomial or rational polynomial mapping to produce vertices, normals, texture coordinates, and colors. The values produced by an evaluator are sent to further stages of OpenGL processing just as if they had been presented using <a href="glfunc03_2kag.htm"><b>glVertex</b></a>, <a href="glfunc03_5ru4.htm"><b>glNormal</b></a>, <a href="glfunc03_6qck.htm"><b>glTexCoord</b></a>, and <a href="glfunc01_62b6.htm"><b>glColor</b></a> commands, except that the generated values do not update the current normal, texture coordinates, or color.</p>
<p>
All polynomial or rational polynomial splines of any degree (up to the maximum degree supported by the OpenGL implementation) can be described using evaluators. These include almost all splines used in computer graphics, including B-splines, Bezier curves, Hermite splines, and so on. </p>
<p>
Evaluators define curves based on Bernstein polynomials. Define <b>p</b>(û) as</p>
<p>
<img src="images/map01.gif" border=0></p>
<p>
where <b>R</b> (i)  is a control point and (<i>û</i>) is the <i>i</i>th Bernstein polynomial of degree <i>n</i> (<i>order</i> = <i>n</i> + 1):</p>
<p>
<img src="images/map02.gif" border=0></p>
<p>
Recall that </p>
<p>
<img src="images/map03.gif" border=0></p>
<p>
The<b> glMap1</b> function is used to define the basis and to specify what kind of values are produced. Once defined, a map can be enabled and disabled by calling <a href="glfunc01_3l5x.htm"><b>glEnable</b></a> and <b>glDisable</b> with the map name, one of the nine predefined values for <i>target</i> described above. The <a href="glfunc01_7hb8.htm"><b>glEvalCoord1</b></a> function evaluates the one-dimensional maps that are enabled. When <b>glEvalCoord1</b> presents a value <i>u</i>, the Bernstein functions are evaluated using <i>û</i>, where</p>
<p>
<img src="images/map04.gif" border=0></p>
<p>
The <i>stride</i>, <i>order</i>, and <i>points</i> parameters define the array addressing for accessing the control points. The <i>points</i> parameter is the location of the first control point, which occupies one, two, three, or four contiguous memory locations, depending on which map is being defined. The <i>order</i> parameter is the number of control points in the array. The <i>stride</i> parameter tells how many float or double locations to advance the internal memory pointer to reach the next control point.</p>
<p>
As is the case with all OpenGL commands that accept pointers to data, it is as if the contents of <i>points</i> were copied by <b>glMap1</b> before it returned. Changes to the contents of <i>points</i> have no effect after <b>glMap1</b> is called.</p>
<p>
The following functions retrieve information related to <b>glMap1</b>:</p>
<p class=indent1>
<a href="glfunc02_5ub8.htm"><b>glGet</b></a> with argument GL_MAX_EVAL_ORDER</p>
<p class=indent1>
<a href="glfunc02_2z3k.htm"><b>glGetMap</b></a></p>
<p class=indent1>
<a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a> with argument GL_MAP1_VERTEX_3</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_VERTEX_4</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_INDEX</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_COLOR_4</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_NORMAL</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_TEXTURE_COORD_1</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_TEXTURE_COORD_2</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_TEXTURE_COORD_3</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_MAP1_TEXTURE_COORD_4</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>target</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_VALUE </td>
<td width=57%><i>u1</i> was equal to <i>u2</i>.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_VALUE </td>
<td width=57%><i>stride</i> was less than the number of values in a control point.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_VALUE </td>
<td width=57%><i>order</i> was less than one or greater than GL_MAX_EVAL_ORDER.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glMap1</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_62b6.htm"><b>glColor</b></a>, <a href="glfunc01_3l5x.htm"><b>glEnable</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc01_7hb8.htm"><b>glEvalCoord</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh</b></a>, <a href="glfunc02_1o50.htm"><b>glEvalPoint</b></a>, <a href="glfunc03_78s2.htm"><b>glMap2</b></a>, <a href="glfunc03_509w.htm"><b>glMapGrid</b></a>, <a href="glfunc03_5ru4.htm"><b>glNormal</b></a>, <a href="glfunc03_6qck.htm"><b>glTexCoord</b></a>, <a href="glfunc03_2kag.htm"><b>glVertex</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
