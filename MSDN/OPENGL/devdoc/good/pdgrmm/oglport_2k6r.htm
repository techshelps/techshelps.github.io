<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Porting Lines</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ogl_porting_lines"></a>Porting Lines</h3>
<p>
Porting IRIS GL code that draws lines is fairly straightforward, though you should note the differences in the way OpenGL stipples. The following table lists IRIS GL functions for drawing lines and their equivalent OpenGL functions.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=24%>IRIS GL Function</th>
<th align=left width=48%>OpenGL Function</th>
<th align=left width=28%>Meaning</th>
</tr>
<tr valign=top>
<td width=24%><b>bgnclosedline</b>,<p>
<b>endclosedline</b></p>
</td>
<td width=48%><a href="glfunc01_9u3y.htm"><b>glBegin</b></a><b>(</b>GL_LINE_LOOP<b>)</b><p>
<a href="glfunc01_9u3y.htm"><b>glEnd</b></a></p>
</td>
<td width=28%>Draw a closed line.</td>
</tr>
<tr valign=top>
<td width=24%><b>bgnline</b></td>
<td width=48%><b>glBegin(</b>GL_LINE_STRIP<b>)</b></td>
<td width=28%>Draw line segments.</td>
</tr>
<tr valign=top>
<td width=24%><b>linewidth</b></td>
<td width=48%><a href="glfunc03_75k8.htm"><b>glLineWidth</b></a></td>
<td width=28%>Set line width.</td>
</tr>
<tr valign=top>
<td width=24%><b>getlwidth</b></td>
<td width=48%><a href="glfunc02_5ub8.htm"><b>glGet</b></a><b>(</b>GL_LINE_WIDTH<b>)</b></td>
<td width=28%>Return current line width.</td>
</tr>
<tr valign=top>
<td width=24%><b>deflinestyle</b>,<p>
<b>setlinestyle</b></p>
</td>
<td width=48%><a href="glfunc03_7sdh.htm"><b>glLineStipple</b></a></td>
<td width=28%>Specify a line stipple pattern.</td>
</tr>
<tr valign=top>
<td width=24%><b>lsrepeat</b></td>
<td width=48%>factor argument of <b>glLineStipple</b></td>
<td width=28%>Set a repeat factor for the line style.</td>
</tr>
<tr valign=top>
<td width=24%><b>getlstyle</b></td>
<td width=48%><b>glGet(</b>GL_LINE_STIPPLE_PATTERN<b>)</b></td>
<td width=28%>Return line stipple pattern.</td>
</tr>
<tr valign=top>
<td width=24%><b>getlsrepeat</b></td>
<td width=48%><a href="glfunc02_5ub8.htm"><b>glGet</b></a><b>(</b>GL_LINE_STIPPLE_REPEAT<b>)</b></td>
<td width=28%>Return repeat factor.</td>
</tr>
<tr valign=top>
<td width=24%><b>linesmooth</b>, <b>smoothline</b></td>
<td width=48%><a href="glfunc01_3l5x.htm"><b>glEnable</b></a><b>(</b>GL_LINE_SMOOTH<b>)</b></td>
<td width=28%>Turn on line antialiasing (For more information on antialiasing, see <a href="oglport_89yr.htm">Porting Antialiasing Functions</a>.)</td>
</tr>
</table><br>
<p>
OpenGL doesn't use tables for line stipples; it maintains only one line-stipple pattern. You can use <a href="glfunc03_68iq.htm"><b>glPushAttrib</b></a> and <a href="glfunc03_68iq.htm"><b>glPopAttrib</b></a> to switch between different stipple patterns. </p>
<p>
Older IRIS GL line style functions (such as <b>draw</b>, <b>lsbackup</b>, <b>getlsbackup</b>, and so on) are not supported by OpenGL. </p>
<p>
For information on drawing antialiased lines, see <a href="oglport_89yr.htm">Porting Antialiasing Functions</a>. </p>
<p>&nbsp;</p></body>
</HTML>
