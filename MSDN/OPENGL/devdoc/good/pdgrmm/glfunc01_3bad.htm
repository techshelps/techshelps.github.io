<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glBindTexture</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glbindtexture"></a>glBindTexture</h1>
<p>
The <b>glBindTexture</b> function enables the creation of a named texture that is bound to a texture target.</p>
<pre><code><b>void glBindTexture(
  GLenum</b><i> target</i><b>,</b>   
<b>  GLuint</b><i> texture</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>target</i></dt>
<dd>
The target to which the texture is bound. Must have the value GL_TEXTURE_1D or GL_TEXTURE_2D.</dd>
<dt>
<i>texture</i></dt>
<dd>
The name of a texture; the texture name cannot currently be in use.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glBindTexture</b> function enables you to create a named texture. Calling <b>glBindTexture</b> with <i>target</i> set to GL_TEXTURE_1D or GL_TEXTURE_2D, and <i>texture</i> set to the name of the new texture you have created binds the texture name to the appropriate texture target. When a texture is bound to a target, the previous binding for that target is no longer in effect.</p>
<p>
Texture names are unsigned integers with the value zero reserved to represent the default texture for each texture target. Texture names and the corresponding texture contents are local to the shared display-list space of the current OpenGL rendering context; two rendering contexts share texture names only if they also share display lists. You can generate a set of new texture names using <a href="glfunc02_3p6b.htm"><b>glGenTextures</b></a>. </p>
<p>
When a texture is first bound, it assumes the dimensionality of its texture target; a texture bound to GL_TEXTURE_1D becomes one-dimensional and a texture bound to GL_TEXTURE_2D becomes two-dimensional. Operations you perform on a texture target also affect a texture bound to the target. When you query a texture target, the return value is the state of the texture bound to it. Texture targets become aliases for textures currently bound to them.  </p>
<p>
When you bind a texture with <b>glBindTexture</b>, the binding remains active until a different texture is bound to the same target or you delete the bound texture with the <a href="glfunc01_6vqr.htm"><b>glDeleteTextures</b></a> function. Once you create a named texture you can bind it to a texture target that has the same dimensionality as often as needed.</p>
<p>
It is usually much faster to use <b>glBindTexture</b> to bind an existing named texture to one of the texture targets than it is to reload the texture image using <a href="glfunc03_16hw.htm"><b>glTexImage1D</b></a> or <a href="glfunc03_16jo.htm"><b>glTexImage2D</b></a>. For additional control of texturing performance, use <a href="glfunc03_748j.htm"><b>glPrioritizeTextures</b></a>.</p>
<p>
You can include calls to <b>glBindTexture</b> in display lists.</p>
<p>
<b>Note</b>  The <b>glBindTexture</b> function is only available in OpenGL version 1.1 or later.</p>
<p>
The following functions retrieve information related to <b>glBindTexture</b>:</p>
<p>
<b>glGet</b> with argument GL_TEXTURE_1D_BINDING</p>
<p>
<b>glGet</b> with argument GL_TEXTURE_2D_BINDING</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Error Code</th>
<th align=left width=55%>Condition</th>
</tr>
<tr valign=top>
<td width=45%>GL_INVALID_ENUM </td>
<td width=55%><i>target</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=45%>GL_INVALID_OPERATION </td>
<td width=55%><i>texture</i> did not have the same dimensionality as <i>target</i>.</td>
</tr>
<tr valign=top>
<td width=45%>GL_INVALID_OPERATION </td>
<td width=55%><b>glBindTexture</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="glfunc01_5o1g.htm"><b>glAreTexturesResident</b></a>, <a href="glfunc01_6vqr.htm"><b>glDeleteTextures</b></a>, <a href="glfunc02_3p6b.htm"><b>glGenTextures</b></a>, <a href="glfunc02_5ub8.htm"><b>glGet</b></a>, <a href="glfunc02_5cqa.htm"><b>glGetTexParameter</b></a>, <a href="glfunc03_7cv9.htm"><b>glIsTexture</b></a>, <a href="glfunc03_748j.htm"><b>glPrioritizeTextures</b></a>, <a href="glfunc03_16hw.htm"><b>glTexImage1D</b></a>, <a href="glfunc03_16jo.htm"><b>glTexImage2D</b></a>, <a href="glfunc03_9upe.htm"><b>glTexParameter</b></a></p>
<p>&nbsp;</p></body>
</HTML>
