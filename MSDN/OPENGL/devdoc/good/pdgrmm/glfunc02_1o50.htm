<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glEvalPoint</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glevalpoint"></a>glEvalPoint1, glEvalPoint2</h1>
<p>
The <b>glEvalPoint1</b> and <b>glEvalPoint2</b> functions generate and evaluate a single point in a mesh.</p>
<pre><code><b>void glEvalPoint1(
  GLint</b><i> i</i>   
<b>);</b>
 
<b>void glEvalPoint2(</b>
<b>  GLint</b><i> i</i><b>,</b>  
<b>  GLint</b><i> j</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>i</i></dt>
<dd>
The integer value for grid domain variable <i>i</i>. </dd>
<dt>
<i>j</i></dt>
<dd>
The integer value for grid domain variable <i>j</i> (<b>glEvalPoint2</b> only).
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <a href="glfunc03_509w.htm"><b>glMapGrid</b></a> and <a href="glfunc02_2rvs.htm"><b>glEvalMesh</b></a> functions are used in tandem to efficiently generate and evaluate a series of evenly spaced map domain values. You can use <b>glEvalPoint</b> to evaluate a single grid point in the same gridspace that is traversed by <b>glEvalMesh</b>. Calling <b>glEvalPoint1</b> is equivalent to calling</p>
<p>
<b>glEvalCoord1</b>(i·&Delta;<i>u</i> + <i>u</i> (1) );</p>
<p>
where </p>
<p>
&Delta;<i>u</i> = (<i>u</i> (2)  – <i>u</i> (1) ) / <i>n</i> </p>
<p>
and <i>n</i>, <i>u</i> (1) , and <i>u</i> (2)  are the arguments to the most recent <b>glMapGrid1</b> function. The one absolute numeric requirement is that if <i>i</i> =<i> n</i>, then the value computed from <i>i·</i>&Delta; <i>u</i> + <i>u</i> (1)  is exactly<i> u</i> (2) .</p>
<p>
In the two-dimensional case, <b>glEvalPoint2</b>, let</p>
<p>
&Delta;<i>u</i> = (<i>u</i> (2)  – <i>u</i> (1) )/<i>n</i></p>
<p>
&Delta;<i>v</i> = (<i>v</i> (2)  – <i>v</i> (1) )/<i>m</i></p>
<p>
where <i>n</i>, <i>u</i> (1) , <i>u</i> (2) , <i>m</i>, <i>v</i> (1) , and <i>v</i> (2)  are the arguments to the most recent <b>glMapGrid2</b> function. Then the <b>glEvalPoint2</b> function is equivalent to calling</p>
<p>
<b>glEvalCoord2</b>(i·&Delta;<i>u</i> + <i>u</i> (1) , j·&Delta;<i>v</i> + <i>v</i> (1) ); </p>
<p>
The only absolute numeric requirements are that if <i>i</i> = <i>n</i>, then the value computed from <i>i</i>·&Delta;<i>u</i> + <i>u</i> (1)  is exactly <i>u</i> (2) , and if <i>j</i> = <i>m</i>, then the value computed from<i> j</i>·&Delta;<i>v</i>&nbsp;+&nbsp;<i>v</i> (1)  is exactly <i>v</i> (2) .</p>
<p>
The following functions retrieve information relating to <b>glEvalPoint1</b> and <b>glEvalPoint2</b>: </p>
<p class=indent1>
<b>glGet</b> with argument GL_MAP1_GRID_DOMAIN</p>
<p class=indent1>
<b>glGet</b> with argument GL_MAP2_GRID_DOMAIN</p>
<p class=indent1>
<b>glGet</b> with argument GL_MAP1_GRID_SEGMENTS</p>
<p class=indent1>
<b>glGet</b> with argument GL_MAP2_GRID_SEGMENTS</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_7hb8.htm"><b>glEvalCoord</b></a>, <a href="glfunc02_2rvs.htm"><b>glEvalMesh</b></a>, <a href="glfunc02_5ub8.htm"><b>glGet</b></a>, <a href="glfunc03_78s1.htm"><b>glMap1</b></a>, <a href="glfunc03_78s2.htm"><b>glMap2</b></a>, <a href="glfunc03_509w.htm"><b>glMapGrid</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
