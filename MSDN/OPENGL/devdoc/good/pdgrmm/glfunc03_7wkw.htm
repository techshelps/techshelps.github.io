<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glLogicOp</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_gllogicop"></a>glLogicOp</h1>
<p>
The <b>glLogicOp</b> function specifies a logical pixel operation for color index rendering.</p>
<pre><code><b>void glLogicOp(
  GLenum</b><i> opcode</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>opcode</i></dt>
<dd>
A symbolic constant that selects a logical operation. The following symbols are accepted:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Opcode</th>
<th align=left width=52%>Resulting Value</th>
</tr>
<tr valign=top>
<td width=48%>GL_CLEAR</td>
<td width=52%>0 </td>
</tr>
<tr valign=top>
<td width=48%>GL_SET</td>
<td width=52%>1 </td>
</tr>
<tr valign=top>
<td width=48%>GL_COPY</td>
<td width=52%>s </td>
</tr>
<tr valign=top>
<td width=48%>GL_COPY_INVERTED</td>
<td width=52%>!s </td>
</tr>
<tr valign=top>
<td width=48%>GL_NOOP</td>
<td width=52%>d </td>
</tr>
<tr valign=top>
<td width=48%>GL_INVERT</td>
<td width=52%>!d </td>
</tr>
<tr valign=top>
<td width=48%>GL_AND</td>
<td width=52%>s &amp; d </td>
</tr>
<tr valign=top>
<td width=48%>GL_NAND</td>
<td width=52%>!(s &amp; d) </td>
</tr>
<tr valign=top>
<td width=48%>GL_OR</td>
<td width=52%>s | d </td>
</tr>
<tr valign=top>
<td width=48%>GL_NOR</td>
<td width=52%>!(s | d) </td>
</tr>
<tr valign=top>
<td width=48%>GL_XOR</td>
<td width=52%>s ^ d </td>
</tr>
<tr valign=top>
<td width=48%>GL_EQUIV</td>
<td width=52%>!(s ^ d) </td>
</tr>
<tr valign=top>
<td width=48%>GL_AND_REVERSE</td>
<td width=52%>s &amp; !d </td>
</tr>
<tr valign=top>
<td width=48%>GL_AND_INVERTED</td>
<td width=52%>!s &amp; d </td>
</tr>
<tr valign=top>
<td width=48%>GL_OR_REVERSE</td>
<td width=52%>s | !d </td>
</tr>
<tr valign=top>
<td width=48%>GL_OR_INVERTED</td>
<td width=52%>!s | d </td>
</tr>
</table><br>

</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glLogicOp</b> function specifies a logical operation that, when enabled, is applied between the incoming color index and the color index at the corresponding location in the frame buffer. The logical operation is enabled or disabled with <a href="glfunc01_3l5x.htm"><b>glEnable</b></a> and <b>glDisable</b> using the symbolic constant GL_LOGIC_OP.</p>
<p>
The<i> opcode</i> parameter is a symbolic constant chosen from the list below. In the explanation of the logical operations, <i>s</i> represents the incoming color index and <i>d</i> represents the index in the frame buffer. Standard C-language operators are used. As these bitwise operators suggest, the logical operation is applied independently to each bit pair of the source and destination indexes.</p>
<p>
Logical pixel operations are not applied to RGBA color buffers.</p>
<p>
When more than one color-index buffer is enabled for drawing, logical operations are done separately for each enabled buffer, using the contents of that buffer for the destination index (see <a href="glfunc01_4gxe.htm"><b>glDrawBuffer</b></a>).</p>
<p>
The<i> opcode</i> parameter must be one of the 16 accepted values. Other values result in an error.</p>
<p>
The following functions retrieve information related to <b>glLogicOp</b>:</p>
<p class=indent1>
<a href="glfunc02_5ub8.htm"><b>glGet</b></a> with argument GL_LOGIC_OP_MODE</p>
<p class=indent1>
<a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a> with argument GL_LOGIC_OP</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>opcode</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glLogicOp</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_5qhv.htm"><b>glAlphaFunc</b></a>, <a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_4vs3.htm"><b>glBlendFunc</b></a>, <a href="glfunc01_4gxe.htm"><b>glDrawBuffer</b></a>, <a href="glfunc01_3l5x.htm"><b>glEnable</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a>, <a href="glfunc03_5tm8.htm"><b>glStencilOp</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
