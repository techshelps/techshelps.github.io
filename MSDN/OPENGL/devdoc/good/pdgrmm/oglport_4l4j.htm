<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Porting NURBS Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ogl_porting_nurbs_objects"></a>Porting NURBS Objects</h3>
<p>
OpenGL treats NURBS as objects, similar to the way it treats quadrics: you create a NURBS object and then specify how it should be rendered. The following table lists the OpenGL GLU functions for managing NURBS objects.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>OpenGL GLU Function</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%><a href="glufnc01_8jle.htm"><b>gluNewNurbsRenderer</b></a></td>
<td width=52%>Create a new NURBS object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="glufnc01_3pde.htm"><b>gluDeleteNurbsRenderer</b></a></td>
<td width=52%>Delete a NURBS object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="glufnc01_0iwb.htm"><b>gluNurbsCallback</b></a></td>
<td width=52%>Associate a callback with a NURBS object, for error handling.</td>
</tr>
</table><br>
<p>
When porting IRIS GL NURBS code to OpenGL, keep the following points in mind:
<ul>
<li>
NURBS control points are floats, not doubles.</li>
<li>
The stride parameter is counted in floats, not bytes.</li>
<li>
If you're using lighting and you're not specifying normals, call <a href="glfunc01_3l5x.htm"><b>glEnable</b></a> with GL_AUTO_NORMAL as the parameter to generate normals automatically.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
