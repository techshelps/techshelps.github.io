<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Porting Applications from IRIS GL</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_porting_applications_from_iris_gl"></a>Porting Applications from IRIS GL</h1>
<p>
This section lists important differences between IRIS GL and OpenGL and describes the basic steps for porting code from IRIS GL to OpenGL. For a complete list of the differences between IRIS GL and Open GL, see <a href="appenb_5wkz.htm">IRIS GL and OpenGL Differences</a>. </p>
<p>
Porting IRIS GL programs to OpenGL for Windows NT and Windows 95 requires considerably more work than converting OpenGL programs from the X Window System. While IRIS GL programs are designed to run with specific hardware and software, OpenGL was designed for portability among various systems. </p>
<p>
The following table lists some of the key differences between OpenGL and IRIS GL programs.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>OpenGL Code</th>
<th align=left width=52%>IRIS GL Code</th>
</tr>
<tr valign=top>
<td width=48%>Operating system independent; contains no functions for windowing, event handling, buffer allocation/management, and so on.</td>
<td width=52%>Dependent on operating system; windowing-system functions are mixed with rendering functions. There is no windows manager in IRIS GL.</td>
</tr>
<tr valign=top>
<td width=48%>Uses a standard, common naming convention. OpenGL functions and defined types begin with a "gl" prefix to prevent conflicts with other libraries.</td>
<td width=52%>Does not use a common naming convention for functions and defined types.</td>
</tr>
<tr valign=top>
<td width=48%>Manages state variables (such as color, fog, texture, lighting, and so on) directly and consistently. Does not use tables to load state-variable values.</td>
<td width=52%>Uses tables to manage state variables and must bind variables to table values.</td>
</tr>
<tr valign=top>
<td width=48%>Display lists cannot be edited.</td>
<td width=52%>Display lists can be edited.</td>
</tr>
<tr valign=top>
<td width=48%>Does not provide a file format for fonts.</td>
<td width=52%>Provides functions to handle fonts and text strings and a file format for fonts.</td>
</tr>
<tr valign=top>
<td width=48%>Includes a GL Utility (GLU) library that contains additional functions and routines (such as NURBS and quadratic rendering routines).</td>
<td width=52%>Does not support the GLU library.</td>
</tr>
</table><br>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;Use the following general procedure to port your IRIS GL programs to OpenGL</h5>
<ol>
<li>
Rewrite any code that makes calls to a window manager, window configuration, device, or event, or where you load a color map to equivalent Win32 code. Rewriting an application from one operating system to another can be complex and difficult. This subject is beyond the scope of this section. </li>
<li>
Locate any code that uses IRIS GL functions and routines. Translate these functions to their equivalent OpenGL functions. For a complete listing of IRIS GL functions and routines and their equivalent OpenGL counterparts, see <a href="appenda1_3soj.htm">OpenGL Functions and Their IRIS GL Equivalents</a>.</li>
<li>
Change IRIS GL code as described in <a href="oglport_9xkj.htm">Special IRIS GL Porting Issues</a>. </li>
</ol>
<p>&nbsp;</p></body>
</HTML>
