<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glGetLight</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glgetlight"></a>glGetLightfv, glGetLightiv</h1>
<p>
The <b>glGetLightfv</b> and <b>glGetLightiv</b> functions return light source parameter values.</p>
<pre><code><b>void glGetLightfv(
  GLenum</b><i> light</i><b>,</b>      
<b>  GLenum</b><i> pname</i><b>,</b>      
<b>  GLfloat *</b><i> params</i>   
<b>);</b>
 
<b>void glGetLightiv(</b>
<b>  GLenum</b><i> light</i><b>,</b>   
<b>  GLenum</b><i> pname</i><b>,</b>   
<b>  GLint *</b><i> params</i>  
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>light</i></dt>
<dd>
A light source. The number of possible lights depends on the implementation, but at least eight lights are supported. They are identified by symbolic names of the form GL_LIGHT<i>i</i> where 0 &le; <i>i</i> &lt; GL_MAX_LIGHTS. </dd>
<dt>
<i>pname</i></dt>
<dd>
A light source parameter for <i>light</i>. The following symbolic names are accepted: 
<dl>
<dt>
GL_AMBIENT</dt>
<dd>
The<i> params</i> parameter returns four integer or floating-point values representing the ambient intensity of the light source. Integer values, when requested, are linearly mapped from the internal floating-point representation such that 1.0 maps to the most positive representable integer value, and –1.0 maps to the most negative representable integer value. If the internal value is outside the range [–1,1], the corresponding integer return value is undefined. </dd>
<dt>
GL_DIFFUSE</dt>
<dd>
The<i> params</i> parameter returns four integer or floating-point values representing the diffuse intensity of the light source. Integer values, when requested, are linearly mapped from the internal floating-point representation such that 1.0 maps to the most positive representable integer value, and –1.0 maps to the most negative representable integer value. If the internal value is outside the range [–1,1], the corresponding integer return value is undefined. </dd>
<dt>
GL_SPECULAR</dt>
<dd>
The<i> params</i> parameter returns four integer or floating-point values representing the specular intensity of the light source. Integer values, when requested, are linearly mapped from the internal floating-point representation such that 1.0 maps to the most positive representable integer value, and –1.0 maps to the most negative representable integer value. If the internal value is outside the range [–1,1], the corresponding integer return value is undefined. </dd>
<dt>
GL_POSITION</dt>
<dd>
The<i> params</i> parameter returns four integer or floating-point values representing the position of the light source. Integer values, when requested, are computed by rounding the internal floating-point values to the nearest integer value. The returned values are those maintained in eye coordinates. They will not be equal to the values specified using <a href="glfunc03_88z8.htm"><b>glLight</b></a>, unless the modelview matrix was identified at the time <b>glLight</b> was called. </dd>
<dt>
GL_SPOT_DIRECTION</dt>
<dd>
The<i> params</i> parameter returns three integer or floating-point values representing the direction of the light source. Integer values, when requested, are computed by rounding the internal floating-point values to the nearest integer value. The returned values are those maintained in eye coordinates. They will not be equal to the values specified using <b>glLight</b>, unless the modelview matrix was identified at the time <b>glLight</b> was called. Although spot direction is normalized before being used in the lighting equation, the returned values are the transformed versions of the specified values prior to normalization. </dd>
<dt>
GL_SPOT_EXPONENT</dt>
<dd>
The<i> params</i> parameter returns a single integer or floating-point value representing the spot exponent of the light. An integer value, when requested, is computed by rounding the internal floating-point representation to the nearest integer. </dd>
<dt>
GL_SPOT_CUTOFF</dt>
<dd>
The<i> params</i> parameter returns a single integer or floating-point value representing the spot cutoff angle of the light. An integer value, when requested, is computed by rounding the internal floating-point representation to the nearest integer. </dd>
<dt>
GL_CONSTANT_ATTENUATION</dt>
<dd>
The<i> params</i> parameter returns a single integer or floating-point value representing the constant (not distance-related) attenuation of the light. An integer value, when requested, is computed by rounding the internal floating-point representation to the nearest integer. </dd>
<dt>
GL_LINEAR_ATTENUATION </dt>
<dd>
The<i> params</i> parameter returns a single integer or floating-point value representing the linear attenuation of the light. An integer value, when requested, is computed by rounding the internal floating-point representation to the nearest integer. </dd>
<dt>
GL_QUADRATIC_ATTENUATION</dt>
<dd>
The<i> params</i> parameter returns a single integer or floating-point value representing the quadratic attenuation of the light. An integer value, when requested, is computed by rounding the internal floating-point representation to the nearest integer.</dd>
</dl>
</dd>
<dt>
<i>params</i></dt>
<dd>
Returns the requested data.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>glGetLight</b> function returns in <i>params</i> the value or values of a light source parameter. The <i>light</i> parameter names the light and is a symbolic name of the form GL_LIGHT<i>i</i> for 0 &le; <i>i </i>&lt; GL_MAX_LIGHTS, where GL_MAX_LIGHTS is an implementation-dependent constant that is greater than or equal to eight. The <i>pname</i> parameter specifies one of ten light source parameters, again by symbolic name.</p>
<p>
It is always the case that GL_LIGHT<i>i </i>= GL_LIGHT0&nbsp;+&nbsp;<i>i</i>.</p>
<p>
If an error is generated, no change is made to the contents of <i>params</i>.</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>light</i> or <i>pname</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glGetLight</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc03_88z8.htm"><b>glLight</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
