<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glIndexPointer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glindexpointer"></a>glIndexPointer</h1>
<p>
The <b>glIndexPointer</b> function defines an array of color indexes.</p>
<pre><code><b>void glIndexPointer(
  GLenum</b><i> type</i><b>,</b>            
<b>  GLsizei</b><i> stride</i><b>,</b>         
<b>  GLsizei</b><i> count</i><b>,</b>          
<b>  const GLvoid</b><i> *pointer</i>   
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>type</i></dt>
<dd>
The data type of each color index in the array using the following symbolic constants: GL_SHORT, GL_INT, GL_FLOAT, GL_DOUBLE.</dd>
<dt>
<i>stride</i></dt>
<dd>
The byte offset between consecutive color indexes. When <i>stride</i> is zero, the color indexes are tightly packed in the array.</dd>
<dt>
<i>count</i></dt>
<dd>
The number of color indexes, counting from the first, that are static.</dd>
<dt>
<i>pointer</i></dt>
<dd>
A pointer to the first color index in the array.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The<b> glIndexPointer</b> function specifies the location and data of an array of color indexes to use when rendering. The <i>type</i> parameter specifies the data type of each color index and <i>stride</i> determines the byte offset from one color index to the next, enabling the packing of vertices and attributes in a single array or storage in separate arrays. In some implementations storing the vertices and attributes in a single array can be more efficient than using separate arrays. Starting from the first color-index element, <i>count</i> indicates the total number of static elements. Your application can modify static elements, but once the elements are modified, the application must explicitly specify the array again before using the array for any rendering. Non-static array elements are not accessed until you call <a href="glfunc01_8oqb.htm"><b>glDrawArrays</b></a> or <a href="glfunc01_2q5w.htm"><b>glArrayElement</b></a>.</p>
<p>
A color-index array is enabled when you specify the<b> </b>GL_INDEX_ARRAY<b> </b>constant with <a href="glfunc01_72at.htm"><b>glEnableClientState</b></a>. When enabled, <b>glDrawArrays</b> and <b>glArrayElement</b> use the color-index array. By default the color-index array is disabled.</p>
<p>
You cannot include <b>glIndexPointer</b> in display lists.</p>
<p>
When you specify a color-index array using <b>glIndexPointer</b>, the values of all the function's color-index array parameters are saved in a client-side state and static array elements can be cached. Because the color-index array parameters are client-side state, their values are not saved or restored by <a href="glfunc03_68iq.htm"><b>glPushAttrib</b></a> and <b>glPopAttrib</b>.</p>
<p>
Although no error is generated when you call <b>glIndexPointer</b> within <a href="glfunc01_9u3y.htm"><b>glBegin</b></a> and <b>glEnd</b> pairs, the results are undefined.</p>
<p>
The following functions retrieve information related to <b>glIndexPointer</b>:</p>
<p class=indent1>
<a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a> with argument GL_INDEX_ARRAY </p>
<p class=indent1>
<a href="glfunc02_5ub8.htm"><b>glGet</b></a> with argument GL_INDEX_ARRAY_STRIDE<b> </b></p>
<p class=indent1>
<b>glGet</b> with argument GL_INDEX_ARRAY_COUNT </p>
<p class=indent1>
<b>glGet</b> with argument GL_INDEX_ARRAY_TYPE </p>
<p class=indent1>
<b>glGet</b> with argument GL_INDEX_ARRAY_SIZE<b> </b></p>
<p class=indent1>
<a href="glfunc02_8uwm.htm"><b>glGetPointerv</b></a> with argument GL_INDEX_ARRAY_POINTER </p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>type</i> was not an accepted value.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_VALUE </td>
<td width=57%><i>stride</i> or <i>count</i> was negative.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="glfunc01_2q5w.htm"><b>glArrayElement</b></a>, <a href="glfunc01_456a.htm"><b>glColorPointer</b></a>, <a href="glfunc01_8oqb.htm"><b>glDrawArrays</b></a>, <a href="glfunc01_61pu.htm"><b>glEdgeFlagPointer</b></a>, <a href="glfunc02_8uwm.htm"><b>glGetPointerv</b></a>, <a href="glfunc02_6dwn.htm"><b>glGetString</b></a>, <a href="glfunc03_1tiq.htm"><b>glNormalPointer</b></a>, <a href="glfunc03_68iq.htm"><b>glPushAttrib</b></a>, <a href="glfunc03_64z6.htm"><b>glTexCoordPointer</b></a>, <a href="glfunc03_5ak2.htm"><b>glVertexPointer</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
