<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glTexEnv</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_gltexenv"></a>glTexEnvf, glTexEnvi, glTexEnvfv, glTexEnviv</h1>
<p>
These functions set texture environment parameters.</p>
<pre><code><b>void glTexEnvf(
  GLenum</b><i> target</i><b>, </b>
<b>  GLenum</b><i> pname</i><b>,  </b>
<b>  GLfloat</b><i> param  </i>
<b>);</b>
 
<b>void glTexEnvi(</b>
<b>  GLenum</b><i> target</i><b>, </b>
<b>  GLenum</b><i> pname</i><b>,  </b>
<b>  GLint</b><i> param    </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>target</i></dt>
<dd>
A texture environment. Must be GL_TEXTURE_ENV. </dd>
<dt>
<i>pname</i></dt>
<dd>
The symbolic name of a single-valued texture environment parameter. Must be GL_TEXTURE_ENV_MODE. </dd>
<dt>
<i>param</i></dt>
<dd>
A single symbolic constant, one of GL_MODULATE, GL_DECAL, or GL_BLEND.
</dd>
</dl>
<pre><code><b>void glTexEnvfv(
  GLenum</b><i> target</i><b>,         </b>
<b>  GLenum</b><i> pname</i><b>,          </b>
<b>  const GLfloat</b><i> *params  </i>
<b>);</b>
 
<b>void glTexEnviv(</b>
<b>  GLenum</b><i> target</i><b>,       </b>
<b>  GLenum</b><i> pname</i><b>,        </b>
<b>  const GLint</b><i> *params  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>target</i></dt>
<dd>
A texture environment. Must be GL_TEXTURE_ENV.</dd>
<dt>
<i>pname</i></dt>
<dd>
The symbolic name of a texture environment parameter. Accepted values are GL_TEXTURE_ENV_MODE and GL_TEXTURE_ENV_COLOR. </dd>
<dt>
<i>params</i></dt>
<dd>
A pointer to an array of parameters: either a single symbolic constant or an RGBA color.
</dd>
</dl>
<h4>Remarks</h4>
<p>
A texture environment specifies how texture values are interpreted when a fragment is textured. The <i>target</i> parameter must be GL_TEXTURE_ENV. The <i>pname</i> parameter can be either GL_TEXTURE_ENV_MODE or GL_TEXTURE_ENV_COLOR.</p>
<p>
If <i>pname</i> is GL_TEXTURE_ENV_MODE, then <i>params</i> is (or points to) the symbolic name of a texture function. Three texture functions are defined: GL_MODULATE, GL_DECAL, and GL_BLEND.</p>
<p>
A texture function acts on the fragment to be textured using the texture image value that applies to the fragment (see <a href="glfunc03_9upe.htm"><b>glTexParameter</b></a>) and produces an RGBA color for that fragment. The following table shows how the RGBA color is produced for each of the three texture functions that can be chosen. <i>C</i> is a triple of color values (RGB) and <i>A</i> is the associated alpha value. RGBA values extracted from a texture image are in the range [0,1]. The subscript <i>f</i> refers to the incoming fragment, the subscript <i>t</i> to the texture image, the subscript <i>c</i> to the texture environment color, and subscript <i>v</i> indicates a value produced by the texture function.</p>
<p>
A texture image can have up to four components per texture element (see <a href="glfunc03_16hw.htm"><b>glTexImage1D</b></a> and <a href="glfunc03_16jo.htm"><b>glTexImage2D</b></a>). In a one-component image, <i>L (t)  </i>indicates that single component. A two-component image uses<i> L (t) </i> and <i>A (t) </i>. A three-component image has only a color value, <i>C (t) </i>. A four-component image has both a color value <i>C (t) </i> and an alpha value <i>A (t) </i>.</p>
<p>
<img src="images/text01.gif" border=0></p>
<p>
If <i>pname</i> is GL_TEXTURE_ENV_COLOR, <i>params</i> is a pointer to an array that holds an RGBA color consisting of four values. Integer color components are interpreted linearly such that the most positive integer maps to 1.0, and the most negative integer maps to –1.0. The values are clamped to the range [0,1] when they are specified. <i>C (c) </i> takes these four values.</p>
<p>
GL_TEXTURE_ENV_MODE defaults to GL_MODULATE and GL_TEXTURE_ENV_COLOR defaults to (0,0,0,0).</p>
<p>
The following function retrieves information related to <b>glTexEnv</b>:</p>
<p class=indent1>
<a href="glfunc02_9unq.htm"><b>glGetTexEnv</b></a> </p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>target</i> or <i>pname</i> was not one of the accepted defined values, or when <i>params</i> should have had a defined constant value (based on the value of <i>pname</i>) and did not.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glTexEnv</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.5 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 and later.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in gl.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with opengl32.lib.</p>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc03_16hw.htm"><b>glTexImage1D</b></a>, <a href="glfunc03_16jo.htm"><b>glTexImage2D</b></a>, <a href="glfunc03_9upe.htm"><b>glTexParameter</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
