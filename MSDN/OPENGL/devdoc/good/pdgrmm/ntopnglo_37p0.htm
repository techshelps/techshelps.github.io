<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Choosing and Setting a Best-Match Pixel Format</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ogl_choosing_and_setting_a_best_match_pixel_format"></a>Choosing and Setting a Best-Match Pixel Format</h3>
<p>
This topic explains the procedure for matching a device context to a pixel format.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To obtain a device context's best match to a pixel format</h5>
<ol>
<li>
Specify the desired pixel format in a <a href="ntopnglr_73jm.htm"><b>PIXELFORMATDESCRIPTOR</b></a> structure. </li>
<li>
Call <a href="ntopnglr_2qb8.htm"><b>ChoosePixelFormat</b></a>. <p>
The <b>ChoosePixelFormat</b> function returns a pixel format index, which you can then pass to <a href="ntopnglr_3q5w.htm"><b>SetPixelFormat</b></a> to set the best pixel format match as the device context's current pixel format. 
</li>
</ol>
<p>
The following code sample shows how to carry out the above steps:</p>
<pre><code>PIXELFORMATDESCRIPTOR pfd = { 
    sizeof(PIXELFORMATDESCRIPTOR),    // size of this pfd 
    1,                                // version number 
    PFD_DRAW_TO_WINDOW |              // support window 
    PFD_SUPPORT_OPENGL |              // support OpenGL 
    PFD_DOUBLEBUFFER,                 // double buffered 
    PFD_TYPE_RGBA,                    // RGBA type 
    24,                               // 24-bit color depth 
    0, 0, 0, 0, 0, 0,                 // color bits ignored 
    0,                                // no alpha buffer 
    0,                                // shift bit ignored 
    0,                                // no accumulation buffer 
    0, 0, 0, 0,                       // accum bits ignored 
    32,                               // 32-bit z-buffer     
    0,                                // no stencil buffer 
    0,                                // no auxiliary buffer 
    PFD_MAIN_PLANE,                   // main layer 
    0,                                // reserved 
    0, 0, 0                           // layer masks ignored 
}; 
HDC  hdc; 
int  iPixelFormat; 
 
// get the device context's best, available pixel format match 
iPixelFormat = ChoosePixelFormat(hdc, &amp;pfd); 
 
// make that match the device context's current pixel format 
SetPixelFormat(hdc, iPixelFormat, &amp;pfd); 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
