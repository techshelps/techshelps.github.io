<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Callback Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ogl_using_callback_functions"></a>Using Callback Functions</h2>
<p>
The GLU callback functions, <a href="glufnc01_1qni.htm"><b>gluBeginPolygon</b></a>, <a href="glufnc01_2p14.htm"><b>gluTessVertex</b></a>, <a href="glufnc01_5nzm.htm"><b>gluNextContour</b></a>, and <a href="glufnc01_1qni.htm"><b>gluEndPolygon</b></a>, are similar to the OpenGL polygon functions. </p>
<p>
They typically save the data for the triangles, triangle meshes, and triangle fans in user-defined data structures or in OpenGL display lists. To render the polygons, other code traverses the data structures or calls the display lists. Although the callback functions could call OpenGL functions to display polygons directly, this is usually not done, as tessellation can be computationally expensive. It's a good idea to save the data if there is any chance that you want to display it again. The GLU tessellation functions are guaranteed never to return any new vertices, so interpolation of vertices, texture coordinates, or colors is never required. </p>
<p>&nbsp;</p></body>
</HTML>
