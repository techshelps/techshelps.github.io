<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glPushClientAttrib, glPopClientAttrib</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_glpushclientattrib"></a>glPushClientAttrib, glPopClientAttrib</h1>
<p>
The <b>glPushClientAttrib</b> and <b>glPopClientAttrib</b> functions save and restore groups of client-state variables on the client-attribute stack.</p>
<pre><code><b>void glPushClientAttrib(
  GLbitfield</b><i> mask  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>mask</i></dt>
<dd>
A mask that indicates which attributes to save. The following are the symbolic mask constants and their associated OpenGL client state:
<dl>
<dt>
GL_CLIENT_PIXEL_STORE_BIT</dt>
<dd>
Pixel storage mode attributes. </dd>
<dt>
GL_CLIENT_VERTEX_ARRAY_BIT</dt>
<dd>
Vertex array attributes. </dd>
<dt>
GL_CLIENT_ALL_ATTRIB_BITS</dt>
<dd>
All stackable client-state attributes.
</dd>
</dl>
</dd>
</dl>
<pre><code><b>void glPopClientAttrib(
  void</b><i> void  </i>
<b>);</b>
 </code></pre>
<h4>Remarks</h4>
<p>
The <b>glPushClientAttrib</b> function uses its <i>mask</i> parameter to determine which groups of client-state variables are saved on the client-attribute stack. You can <b>OR</b> together accepted symbolic constants to set bits and construct a <i>mask</i>. </p>
<p>
The <b>glPopClientAttrib</b> function restores the values of the client-state variables last saved with <b>glPushClientAttrib</b>. Client-state variables not previously saved are left unchanged. Pushing attributes onto a full client-attribute stack or popping attributes off an empty stack sets an error flag and no other change is made to the OpenGL state. By default the client attribute stack is empty.</p>
<p>
Some OpenGL client-state values cannot be saved on the client-attribute stack. For example, you cannot save the select or feedback states on the client-attribute stack. The depth of the client-attribute stack is at least 16.</p>
<p>
The <b>glPushClientAttrib</b> and <b>glPopClientAttrib</b> functions are not compiled into display lists, but are executed immediately.</p>
<p>
The <b>glPushClientAttrib</b> and <b>glPopClientAttrib</b> functions can only push and pop pixel storage modes and vertex array client states. You must use <b>glPushAttrib</b> and <b>glPopAttrib</b> to push and pop states that are kept on the server.</p>
<p>
<b>Note</b>  The <b>glPushClientAttrib</b> and <b>glPopClientAttrib</b> functions are only available in OpenGL version 1.1 or later.</p>
<p>
The following functions retrieve information related to <b>glPushClientAttrib</b> and <b>glPopClientAttrib</b>:</p>
<p class=indent1>
<a href="glfunc02_5ub8.htm"><b>glGet</b></a> with argument GL_CLIENT_ATTRIB_STACK_DEPTH </p>
<p class=indent1>
<b>glGet</b> with argument GL_MAX_CLIENT_ATTRIB_STACK_DEPTH </p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=43%>GL_STACK_OVERFLOW</td>
<td width=57%><b>glPushClientAttrib</b> was called while the client-attribute stack was full.</td>
</tr>
<tr valign=top>
<td width=43%>GL_STACK_UNDERFLOW </td>
<td width=57%><b>glPopClientAttrib</b> was called while the client-attribute stack was empty.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="glfunc01_456a.htm"><b>glColorPointer</b></a>, <a href="glfunc01_72at.htm"><b>glDisableClientState</b></a>, <a href="glfunc01_61pu.htm"><b>glEdgeFlagPointer</b></a>, <a href="glfunc01_72at.htm"><b>glEnableClientState</b></a>, <a href="glfunc02_5ub8.htm"><b>glGet</b></a>, <a href="glfunc02_4jzm.htm"><b>glGetError</b></a>, <a href="glfunc03_36lu.htm"><b>glIndexPointer</b></a>, <a href="glfunc03_1tiq.htm"><b>glNormalPointer</b></a>, <a href="glfunc03_2eyc.htm"><b>glNewList</b></a>, <a href="glfunc03_7kdh.htm"><b>glPixelStore</b></a>, <a href="glfunc03_68iq.htm"><b>glPushAttrib</b></a>, <a href="glfunc03_64z6.htm"><b>glTexCoordPointer</b></a>, <a href="glfunc03_5ak2.htm"><b>glVertexPointer</b></a></p>
<p>&nbsp;</p></body>
</HTML>
