<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenGL Color Modes and Windows Palette Management</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ogl_opengl_color_modes_and_windows_palette_management"></a>OpenGL Color Modes and Windows Palette Management</h2>
<p>
Microsoft's implementation of OpenGL in Windows NT and Windows 95 supports two color pixel data modes: RGBA and color-index modes. Windows NT and Windows 95 provide two analogous ways of handling color: true color and palette management. </p>
<p>
True-color devices, able to accept 16, 24, or more bits of color information per pixel, can display tens of thousands, tens of millions, or more colors simultaneously. Complexities arise, however, when an application has to manage RGBA or color-index mode on a palette-type device. Palette-type devices, such as a 256-color VGA display, are limited in the number of colors they can display simultaneously. Applications must handle a number of tricky details to successfully use palette-type devices. Because color-index mode programs don't use a hardware palette, they are more difficult to use with true-color devices than programs using the RGBA mode.</p>
<p>
If you are unfamiliar with true-color devices or the Palette Manager, refer to the articles "Palette Awareness," "The Palette Manager: How and Why," and "Using True-Color devices" on the Microsoft Developer Network Development Library compact discs for an introduction to the essentials of Windows NT and Windows 95 color management.</p>
<p>&nbsp;</p></body>
</HTML>
