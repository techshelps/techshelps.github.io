<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>glTexGen</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_gltexgen"></a>glTexGend, glTexGenf, glTexGeni, glTexGendv, glTexGenfv, glTexGeniv</h1>
<p>
These functions control the generation of texture coordinates.</p>
<pre><code><b>void glTexGend(
  GLenum</b><i> coord</i><b>,  </b>
<b>  GLenum</b><i> pname</i><b>,  </b>
<b>  GLdouble</b><i> param </i>
<b>);</b>
 
<b>void glTexGenf(</b>
<b>  GLenum</b><i> coord</i><b>,  </b>
<b>  GLenum</b><i> pname</i><b>,  </b>
<b>  GLfloat</b><i> param  </i>
<b>);</b>
 
<b>void glTexGeni(</b>
<b>  GLenum</b><i> coord</i><b>,  </b>
<b>  GLenum</b><i> pname</i><b>,  </b>
<b>  GLint</b><i> param    </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>coord</i></dt>
<dd>
A texture coordinate. Must be one of the following: GL_S, GL_T, GL_R, or GL_Q.</dd>
<dt>
<i>pname</i> </dt>
<dd>
The symbolic name of the texture-coordinate generation function. Must be GL_TEXTURE_GEN_MODE.</dd>
<dt>
<i>param</i></dt>
<dd>
A single-valued texture generation parameter, one of GL_OBJECT_LINEAR, GL_EYE_LINEAR, or GL_SPHERE_MAP.
</dd>
</dl>
<pre><code><b>void glTexGendv(
  GLenum</b><i> coord</i><b>,           </b>
<b>  GLenum</b><i> pname</i><b>,           </b>
<b>  const GLdouble</b><i> *params  </i>
<b>);</b>
 
<b>void glTexGenfv(</b>
<b>  GLenum</b><i> coord</i><b>,          </b>
<b>  GLenum</b><i> pname</i><b>,          </b>
<b>  const GLfloat</b><i> *params  </i>
<b>);</b>
 
<b>void glTexGeniv(</b>
<b>  GLenum</b><i> coord</i><b>,        </b>
<b>  GLenum</b><i> pname</i><b>,        </b>
<b>  const GLint</b><i> *params  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>coord</i></dt>
<dd>
A texture coordinate. Must be one of the following: GL_S, GL_T, GL_R, or GL_Q.</dd>
<dt>
<i>pname </i></dt>
<dd>
The symbolic name of the texture-coordinate generation function or function parameters. Must be GL_TEXTURE_GEN_MODE, GL_OBJECT_PLANE, or GL_EYE_PLANE. </dd>
<dt>
<i>params</i></dt>
<dd>
A pointer to an array of texture generation parameters. If <i>pname</i> is GL_TEXTURE_GEN_MODE, then the array must contain a single symbolic constant, one of GL_OBJECT_LINEAR, GL_EYE_LINEAR, or GL_SPHERE_MAP. Otherwise, <i>params</i> holds the coefficients for the texture-coordinate generation function specified by <i>pname</i>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The<b> glTexGen</b> function selects a texture-coordinate generation function or supplies coefficients for one of the functions. The <i>coord</i> parameter names one of the (<i>s</i>,<i>t</i>,<i>r</i>,<i>q</i>) texture coordinates, and it must be one of these symbols: GL_S, GL_T, GL_R, or GL_Q. The <i>pname</i> parameter must be one of three symbolic constants: GL_TEXTURE_GEN_MODE, GL_OBJECT_PLANE, or GL_EYE_PLANE. If <i>pname</i> is GL_TEXTURE_GEN_MODE, then <i>params</i> chooses a mode, one of GL_OBJECT_LINEAR, GL_EYE_LINEAR, or GL_SPHERE_MAP. If <i>pname</i> is either GL_OBJECT_PLANE or GL_EYE_PLANE, <i>params</i> contains coefficients for the corresponding texture generation function.</p>
<p>
If the texture generation function is GL_OBJECT_LINEAR, the function</p>
<p>
<img src="images/tex02.gif" border=0></p>
<p>
is used, where <i>g</i> is the value computed for the coordinate named in <i>coord</i>; <i>p</i> (1) , <i>p</i> (2) , <i>p</i> (3) , and <i>p</i> (4)  are the four values supplied in <i>params</i>; and <i>x</i> (o) , <i>y</i> (o) , <i>z</i> (o) , and <i>w</i> (o)  are the object coordinates of the vertex. This function can be used to texture-map terrain using sea level as a reference plane (defined by <i>p</i> (1) , <i>p</i> (2) , <i>p</i> (3) , and <i>p</i> (4) ). The altitude of a terrain vertex is computed by the GL_OBJECT_LINEAR coordinate generation function as its distance from sea level; that altitude is used to index the texture image to map white snow onto peaks and green grass onto foothills, for example.</p>
<p>
If the texture generation function is GL_EYE_LINEAR, the function</p>
<p>
<img src="images/tex03.gif" border=0></p>
<p>
is used, where</p>
<p>
<img src="images/tex04.gif" border=0></p>
<p>
and <i>x (e) , y (e) , z (e) ,</i> and <i>w (e) </i> are the eye coordinates of the vertex, <i>p</i> (1) , <i>p</i> (2) , <i>p</i> (3) , and <i>p</i> (4)  are the values supplied in <i>params</i>, and <i>M</i> is the modelview matrix when <b>glTexGen</b> is invoked. If <i>M</i> is poorly conditioned or singular, texture coordinates generated by the resulting function may be inaccurate or undefined.</p>
<p>
Note that the values in <i>params</i> define a reference plane in eye coordinates. The modelview matrix that is applied to them may not be the same one in effect when the polygon vertices are transformed. This function establishes a field of texture coordinates that can produce dynamic contour lines on moving objects.</p>
<p>
If <i>pname</i> is GL_SPHERE_MAP and <i>coord</i> is either GL_S or GL_T, <i>s</i> and <i>t</i> texture coordinates are generated as follows. Let <b>u</b> be the unit vector pointing from the origin to the polygon vertex (in eye coordinates). Let <b>n</b>&acute; be the current normal, after transformation to eye coordinates. Let <i>f</i> = (<i>f (x&nbsp;) f (y&nbsp;) f (z) </i>)<i>T</i> be the reflection vector such that</p>
<p>
<img src="images/tex05.gif" border=0></p>
<p>
Finally, let<b> </b></p>
<p>
<img src="images/tex07.gif" border=0></p>
<p>
Then the values assigned to the <i>i</i> and <i>t</i> texture coordinates are</p>
<p>
<img src="images/tex06.gif" border=0></p>
<p>
A texture-coordinate generation function is enabled or disabled using <a href="glfunc01_3l5x.htm"><b>glEnable</b></a> or <b>glDisable</b> with one of the symbolic texture-coordinate names (GL_TEXTURE_GEN_S, GL_TEXTURE_GEN_T, GL_TEXTURE_GEN_R, or GL_TEXTURE_GEN_Q) as the argument. When enabled, the specified texture coordinate is computed according to the generating function associated with that coordinate. When disabled, subsequent vertices take the specified texture coordinate from the current set of texture coordinates. Initially, all texture generation functions are set to GL_EYE_LINEAR and are disabled. Both <i>s</i> plane equations are (1,0,0,0); both <i>t</i> plane equations are (0,1,0,0); and all <i>r</i> and <i>q</i> plane equations are (0,0,0,0).</p>
<p>
The following functions retrieve information related to <b>glTexGen</b>:</p>
<p class=indent1>
<a href="glfunc02_00j2.htm"><b>glGetTexGen</b></a> </p>
<p class=indent1>
<a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a> with argument GL_TEXTURE_GEN_S</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_TEXTURE_GEN_T</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_TEXTURE_GEN_R</p>
<p class=indent1>
<b>glIsEnabled</b> with argument GL_TEXTURE_GEN_Q</p>
<h4>Error Codes</h4>
<p>
The following are the error codes generated and their conditions.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Error Code</th>
<th align=left width=57%>Condition</th>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>coord</i> or <i>pname</i> was not an accepted defined value, or when <i>pname</i> was GL_TEXTURE_GEN_MODE and <i>params</i> was not an accepted defined value.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_ENUM </td>
<td width=57%><i>pname</i> was GL_TEXTURE_GEN_MODE, <i>params</i> was GL_SPHERE_MAP, and <i>coord</i> was either GL_R or GL_Q.</td>
</tr>
<tr valign=top>
<td width=43%>GL_INVALID_OPERATION </td>
<td width=57%><b>glTexGen</b> was called between a call to <b>glBegin</b> and the corresponding call to <b>glEnd</b>.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="glfunc01_9u3y.htm"><b>glBegin</b></a>, <a href="glfunc01_9u3y.htm"><b>glEnd</b></a>, <a href="glfunc02_00j2.htm"><b>glGetTexGen</b></a>, <a href="glfunc03_7pgk.htm"><b>glIsEnabled</b></a>, <a href="glfunc03_6xyu.htm"><b>glTexEnv</b></a>, <a href="glfunc03_16hw.htm"><b>glTexImage1D</b></a>, <a href="glfunc03_16jo.htm"><b>glTexImage2D</b></a>, <a href="glfunc03_9upe.htm"><b>glTexParameter</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
