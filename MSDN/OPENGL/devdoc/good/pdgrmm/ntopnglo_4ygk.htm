<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Rendering Context and Making It Current</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ogl_creating_a_rendering_context_and_making_it_current"></a>Creating a Rendering Context and Making It Current</h3>
<p>
The following code sample shows how to create an OpenGL rendering context in response to a WM_CREATE message. Notice that you set up the pixel format before creating the rendering context. Also notice that in this scenario the device context is not released locally; you release it when the window is closed, after making the rendering context not current. For more information, see <a href="ntopnglo_2ik4.htm">Deleting a Rendering Context</a>. Finally, notice that you can use local variables for the device context and rendering context handles, because with the <a href="ntopnglr_667o.htm"><b>wglGetCurrentContext</b></a> and <a href="ntopnglr_7psz.htm"><b>wglGetCurrentDC</b></a> functions you can obtain handles to those contexts as needed.</p>
<pre><code>// a window has been created, but is not yet visible 
case WM_CREATE: 
    { 
    // local variables 
    HDC      hdc ; 
    HGLRC    hglrc ; 
 
    // obtain a device context for the window 
    hdc = GetDC(hWnd); 
     
    // set an appropriate pixel format  
    myPixelFormatSetupFunction(hdc); 
 
    // if we can create a rendering context ...  
    if (hglrc = wglCreateContext( hdc ) ) { 
 
        // try to make it the thread's current rendering context 
        bHaveCurrentRC = wglMakeCurrent(hdc, hglrc) ; 
 
        } 
 
    // perform miscellaneous other WM_CREATE chores ... 
 
    }  
    break ; 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
