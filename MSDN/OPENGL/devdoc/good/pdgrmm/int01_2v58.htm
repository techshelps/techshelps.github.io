<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction to OpenGL</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ogl_introduction_to_opengl"></a>Introduction to OpenGL</h1>
<p>
As a software interface for graphics hardware, OpenGL's main purpose is to render two- and three-dimensional objects into a frame buffer. These objects are described as sequences of vertices (which define geometric objects) or pixels (which define images). OpenGL performs several processing steps on this data to convert it to pixels to form the final desired image in the frame buffer. </p>
<p>
The following topics present a global view of how OpenGL works:
<ul>
<li>
<a href="int01_1ur7.htm">Primitives and Commands</a> discusses points, line segments, and polygons as the basic units of drawing; and the processing of commands.</li>
<li>
<a href="int01_3jxo.htm">OpenGL Graphic Control</a> describes which graphic operations OpenGL controls and which it does not control.</li>
<li>
<a href="int01_3qcs.htm">Execution Model</a> discusses the client/server model for interpreting OpenGL commands.</li>
<li>
<a href="int01_02su.htm">Basic OpenGL Operation</a> gives a high-level description of how OpenGL processes data and produces a corresponding image in the frame buffer.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
