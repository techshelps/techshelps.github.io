<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SELECT.H</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5"></a>SELECT.H</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/* These defines determine the meaning of the fFlags variable.  The low byte <br> * is used for the various types of "boxes" to draw.  The high byte is <br> * available for special commands. <br> */ <br> <br>#define SL_BOX    1             /* Draw a solid border around the rectangle  */ <br>#define SL_BLOCK  2             /* Draw a solid rectangle                    */ <br> <br>#define SL_EXTEND 256           /* Extend the current pattern                */ <br> <br>#define SL_TYPE    0x00FF       /* Mask out everything but the type flags    */ <br>#define SL_SPECIAL 0xFF00       /* Mask out everything but the special flags */ <br> <br>// Temporary porting macros <br> <br>#define INT2DWORD               DWORD <br>typedef POINTS MPOINT; <br>#define MAKEMPOINT(l)           (*((MPOINT *)&amp;(l))) <br>#define MPOINT2POINT(mpt, pt)   ((pt).x = (mpt).x, (pt).y = (mpt).y) <br>#define POINT2MPOINT(pt, mpt)   ((mpt).x = (SHORT)(pt).x, (mpt).y = (SHORT)(pt).y) <br> <br> <br>int APIENTRY StartSelection(HWND, MPOINT, LPRECT, int); <br>int APIENTRY UpdateSelection(HWND, MPOINT, LPRECT, int); <br>int APIENTRY EndSelection(MPOINT, LPRECT); <br>int APIENTRY ClearSelection(HWND, LPRECT, int); <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
