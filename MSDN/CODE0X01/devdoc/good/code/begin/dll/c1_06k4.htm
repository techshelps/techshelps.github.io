<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SELECT.C</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4"></a>SELECT.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>/**************************************************************************** <br> <br>    PROGRAM: Select.c <br> <br>    PURPOSE: Contains library routines for selecting a region <br> <br>    FUNCTIONS: <br> <br>        StartSelection(HWND, POINT, LPRECT, int) - begin selection area <br>        UpdateSelection(HWND, POINT, LPRECT, int) - update selection area <br>        EndSelection(POINT, LPRECT) - end selection area <br>        ClearSelection(HWND, LPRECT, int) - clear selection area <br> <br>*******************************************************************************/ <br> <br>#include "windows.h" <br>#include "select.h" <br> <br>/**************************************************************************** <br>   FUNCTION: DllMain(HANDLE, DWORD, LPVOID) <br> <br>   PURPOSE:  DllMain is called by Windows when <br>             the DLL is initialized, Thread Attached, and other times. <br>             Refer to SDK documentation, as to the different ways this <br>             may be called. <br>              <br>             The DllMain function should perform additional initialization <br>             tasks required by the DLL.  In this example, no initialization <br>             tasks are required.  DllMain should return a value of 1 if <br>             the initialization is successful. <br>            <br>*******************************************************************************/ <br>BOOL APIENTRY DllMain(HANDLE hInst, DWORD ul_reason_being_called, LPVOID lpReserved) <br>{ <br>    return 1; <br>        UNREFERENCED_PARAMETER(hInst); <br>        UNREFERENCED_PARAMETER(ul_reason_being_called); <br>        UNREFERENCED_PARAMETER(lpReserved); <br>} <br> <br> <br>/**************************************************************************** <br> <br>    FUNCTION: StartSelection(HWND, POINT, LPRECT, int) <br> <br>    PURPOSE: Begin selection of region <br> <br>****************************************************************************/ <br> <br>INT APIENTRY StartSelection( <br>    HWND hWnd, <br>    MPOINT ptCurrent, <br>    LPRECT lpSelectRect, <br>    INT fFlags) <br>{ <br>    if (lpSelectRect-&gt;left != lpSelectRect-&gt;right || <br>            lpSelectRect-&gt;top != lpSelectRect-&gt;bottom) <br>        ClearSelection(hWnd, lpSelectRect, fFlags); <br> <br>    lpSelectRect-&gt;right = ptCurrent.x; <br>    lpSelectRect-&gt;bottom = ptCurrent.y; <br> <br>    /* If you are extending the box, then invert the current rectangle */ <br> <br>    if ((fFlags &amp; SL_SPECIAL) == SL_EXTEND) <br>        ClearSelection(hWnd, lpSelectRect, fFlags); <br> <br>    /* Otherwise, set origin to current location */ <br> <br>    else { <br>        lpSelectRect-&gt;left = ptCurrent.x; <br>        lpSelectRect-&gt;top = ptCurrent.y; <br>    } <br>    SetCapture(hWnd); <br>    return 1; <br>} <br> <br>/**************************************************************************** <br> <br>    FUNCTION: UpdateSelection(HWND, POINT, LPRECT, int) - update selection area <br> <br>    PURPOSE: Update selection <br> <br>****************************************************************************/ <br> <br>INT APIENTRY UpdateSelection( <br>    HWND hWnd, <br>    MPOINT ptCurrent, <br>    LPRECT lpSelectRect, <br>    INT fFlags) <br>{ <br>    HDC hDC; <br>    SHORT OldROP; <br> <br>    hDC = GetDC(hWnd); <br> <br>    switch (fFlags &amp; SL_TYPE) { <br> <br>        case SL_BOX: <br>            OldROP = (SHORT)SetROP2(hDC, R2_NOTXORPEN); <br>            MoveToEx(hDC, lpSelectRect-&gt;left, lpSelectRect-&gt;top, NULL); <br>            LineTo(hDC, lpSelectRect-&gt;right, lpSelectRect-&gt;top); <br>            LineTo(hDC, lpSelectRect-&gt;right, lpSelectRect-&gt;bottom); <br>            LineTo(hDC, lpSelectRect-&gt;left, lpSelectRect-&gt;bottom); <br>            LineTo(hDC, lpSelectRect-&gt;left, lpSelectRect-&gt;top); <br>            LineTo(hDC, ptCurrent.x, lpSelectRect-&gt;top); <br>            LineTo(hDC, ptCurrent.x, ptCurrent.y); <br>            LineTo(hDC, lpSelectRect-&gt;left, ptCurrent.y); <br>            LineTo(hDC, lpSelectRect-&gt;left, lpSelectRect-&gt;top); <br>            SetROP2(hDC, OldROP); <br>            break; <br>     <br>        case SL_BLOCK: <br>            PatBlt(hDC, <br>                lpSelectRect-&gt;left, <br>                lpSelectRect-&gt;bottom, <br>                lpSelectRect-&gt;right - lpSelectRect-&gt;left, <br>                ptCurrent.y - lpSelectRect-&gt;bottom, <br>                DSTINVERT); <br>            PatBlt(hDC, <br>                lpSelectRect-&gt;right, <br>                lpSelectRect-&gt;top, <br>                ptCurrent.x - lpSelectRect-&gt;right, <br>                ptCurrent.y - lpSelectRect-&gt;top, <br>                DSTINVERT); <br>            break; <br>    } <br>    lpSelectRect-&gt;right = ptCurrent.x; <br>    lpSelectRect-&gt;bottom = ptCurrent.y; <br>    ReleaseDC(hWnd, hDC); <br>    return 1; <br>} <br> <br>/**************************************************************************** <br> <br>    FUNCTION: EndSelection(POINT, LPRECT) <br> <br>    PURPOSE: End selection of region, release capture of mouse movement <br> <br>****************************************************************************/ <br> <br>INT APIENTRY EndSelection( <br>    MPOINT ptCurrent, <br>    LPRECT lpSelectRect) <br>{ <br>    lpSelectRect-&gt;right = ptCurrent.x; <br>    lpSelectRect-&gt;bottom = ptCurrent.y; <br>    ReleaseCapture(); <br>    return 1; <br>} <br> <br>/**************************************************************************** <br> <br>    FUNCTION: ClearSelection(HWND, LPRECT, int) - clear selection area <br> <br>    PURPOSE: Clear the current selection <br> <br>****************************************************************************/ <br> <br>INT APIENTRY ClearSelection( <br>    HWND hWnd, <br>    LPRECT lpSelectRect, <br>    INT fFlags) <br>{ <br>    HDC hDC; <br>    INT2DWORD OldROP; <br> <br>    hDC = GetDC(hWnd); <br>    switch (fFlags &amp; SL_TYPE) { <br> <br>        case SL_BOX: <br>            OldROP = SetROP2(hDC, R2_NOTXORPEN); <br>            MoveToEx(hDC, lpSelectRect-&gt;left, lpSelectRect-&gt;top, NULL); <br>            LineTo(hDC, lpSelectRect-&gt;right, lpSelectRect-&gt;top); <br>            LineTo(hDC, lpSelectRect-&gt;right, lpSelectRect-&gt;bottom); <br>            LineTo(hDC, lpSelectRect-&gt;left, lpSelectRect-&gt;bottom); <br>            LineTo(hDC, lpSelectRect-&gt;left, lpSelectRect-&gt;top); <br>            SetROP2(hDC, OldROP); <br>            break; <br> <br>        case SL_BLOCK: <br>            PatBlt(hDC, <br>                lpSelectRect-&gt;left, <br>                lpSelectRect-&gt;top, <br>                lpSelectRect-&gt;right - lpSelectRect-&gt;left, <br>                lpSelectRect-&gt;bottom - lpSelectRect-&gt;top, <br>                DSTINVERT); <br>            break; <br>    } <br>    ReleaseDC(hWnd, hDC); <br>    return 1; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
