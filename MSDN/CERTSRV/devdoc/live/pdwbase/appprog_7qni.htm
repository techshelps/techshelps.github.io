<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICertView::OpenConnection</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_icertview_openconnection"></a>ICertView::OpenConnection</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>OpenConnection </b>method establishes a connection with a Certificate Server.</p>
<pre><code><b>[VB] OpenConnection(
  String </b><i>strConfig</i>
<b>);</b>
 
<b>[JAVA] OpenConnection(</b>
<b>  java.lang.String </b><i>strConfig</i>
<b>);</b>
 
<b>[C++] HRESULT OpenConnection(</b>
<b>  BSTR const </b><i>strConfig</i>  // in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>strConfig</i></dt>
<dd>
Value representing the Certificate Server that is being opened by the <b>ICertView</b> interface. The text in <i>strConfig</i> is of the form <i>machine_name</i>\<i>common_name</i>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>[C++]</b>The return value is an HRESULT. A value of S_OK indicates success.</p>
<h4>Remarks</h4>
<p>
Upon successful completion of this function, the <b>ICertView</b> object will have a connection to the Certificate Server referenced by <i>strConfig</i>.</p>
<p>
<b>[C++] </b>To close the connection, call <b>ICertView::Release</b>.</p>
<h4>Example</h4>
<pre><code>ICertView *   pCertView = NULL;
BSTR          strCertServ = NULL;
HRESULT       hr;

// initialize COM
hr = CoInitializeEx( NULL, COINIT_APARTMENTTHREADED );

if ( FAILED( hr ) )
{
    printf("Failed CoInitializeEx\n");
    goto error;
}
// get pointer to the ICertView interface
hr = CoCreateInstance( CLSID_CCertView,
                       NULL,
                       CLSCTX_INPROC_SERVER,
                       IID_ICertView,
                       (void **)&amp;pCertView);
if ( FAILED( hr ) )
{
    printf("Failed CoCreateInstance\n");
    goto error;
}
// the use of '\\' is necessary to represent a single backslash
strCertServ = SysAllocString(TEXT("Server01\\ABCCertServ"));
// open the connection to the certificate server
hr = pCertView-&gt;OpenConnection( strCertServ );
if ( FAILED( hr ) )
{
    printf("Failed OpenConnection!\n");
    goto error;
}else
    // established successful connection; use view as appropriate
    …
// done using objects; free resources
error: 
if ( NULL != pCertView )
    pCertView-&gt;Release();
if ( NULL != strCertServ )
    SysFreeString( strCertServ );
// free COM resources
CoUninitialize();
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certview.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<h4>See Also</h4>
<p>
<a href="appprog_6zlj.htm">ICertView::OpenView</a> </p>
<p>&nbsp;</p></body>
</HTML>
