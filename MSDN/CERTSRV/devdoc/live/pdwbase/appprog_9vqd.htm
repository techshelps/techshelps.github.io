<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICertRequest::GetCACertificate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_icertrequest_getcacertificate"></a>ICertRequest::GetCACertificate</h1>
<p>
The <b>GetCACertificate</b> method returns the root certificate for the certificate server.</p>
<pre><code><b>[VB] BSTR GetCACertificate(
  long</b><i> fExchangeCertificate</i><b>,  </b>
<b>  BSTR</b><i> strConfig</i><b>,             </b>
<b>  long</b><i> Flags                  </i>
<b>);</b>
 
<b>[JAVA] java.lang.String GetCACertificate(</b>
<b>  int</b><i> fExchangeCertificate</i><b>,  </b>
<b>  java.lang.String</b><i> strConfig</i><b>,  </b>
<b>  int</b><i> Flags                  </i>
<b>);</b>
 
<b>[C++] HRESULT GetCACertificate(</b>
<b>  LONG</b><i> fExchangeCertificate</i><b>,  </b>// in
<b>  BSTR const</b><i> strConfig</i><b>,       </b>// in
<b>  LONG</b><i> Flags</i><b>,                 </b>// in
<b>  BSTR </b><i>*strCertificate        </i>// out, return value
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<b>[VB][JAVA][C++] </b><i>fExchangeCertificate</i></dt>
<dd>
A boolean value specifying which CA certificate to return. If set to TRUE, the CA's Exchange certificate will be returned. The CA's Exchange certificate can be used to encrypt requests sent to the CA. If set to FALSE, the CA's Signature certificate will be returned. The CA's Signature certificate can be used to verify signatures on certificates issued by the CA.</dd>
<dt>
<b>[VB][JAVA][C++] </b><i>strConfig</i></dt>
<dd>
Points to a valid configuration string for the certificate server. See <a href="appprog_8i3r.htm"><b>ICertConfig::GetConfig</b></a>.</dd>
<dt>
<b>[VB][JAVA][C++] </b><i>Flags</i></dt>
<dd>
The following flags can be used to specify the format of the returned certificate.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Certificate Format Flag</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>CR_OUT_BASE64HEADER</td>
<td width=52%>BASE64 format with begin/end.</td>
</tr>
<tr valign=top>
<td width=48%>CR_OUT_BASE64</td>
<td width=52%>BASE64 format without begin/end.</td>
</tr>
<tr valign=top>
<td width=48%>CR_OUT_BINARY</td>
<td width=52%>Binary format.</td>
</tr>
</table><br>


<p>
The following flag can be used to specify that the complete certificate chain should be included with the requested CA certificate. Otherwise, just the requested CA certificate is returned.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Certificate Flag</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>CR_OUT_CHAIN</td>
<td width=52%>Include complete certificate chain.</td>
</tr>
</table><br>


<p>
For example, to retrieve a binary CA certificate with complete certificate chain, in C++ you would write:
</dd>
</dl>
<pre><code>hResult = GetCACertificate(CR_OUT_BINARY | CR_OUT_CHAIN, &amp;pstrCert);
 </code></pre>
<dl>
<dt>
<b>[C++] </b><i>strCertificate</i></dt>
<dd>
Points to the return value. See Return Values.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns the root certificate for the certificate server, in the specified format.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later (or version 4.0 with the Windows NT 4.0 Option Pack).<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certcli.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<p>&nbsp;</p></body>
</HTML>
