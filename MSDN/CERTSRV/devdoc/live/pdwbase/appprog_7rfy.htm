<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICertView::SetResultColumn</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_icertview_setresultcolumn"></a>ICertView::SetResultColumn</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>SetResultColumn </b>method specifies a column for use in a customized view of the Certificate Server database.</p>
<pre><code><b>[VB] SetResultColumn(
  Long </b><i>iCol</i>
<b>);</b>
<b> </b>
<b>[JAVA] SetResultColumn(</b>
<b>  int </b><i>iCol</i>
<b>);</b>
<b> </b>
<b>[C++] HRESULT SetResultColumn(</b>
<b>  LONG </b><i>iCol</i>   // in
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>iCol</i></dt>
<dd>
Zero-based index of a column to include in the view's result set. Prior to calling the <b>ICertView SetResultColumn</b> method, it is necessary to call the <b>ICertView SetResultColumnCount</b> method in order to specify the number of columns in the result set.
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>[C++] </b>The return value is an HRESULT. A value of S_OK indicates success.</p>
<h4>Remarks</h4>
<p>
Upon successful completion of this function, the column specified by <i>iCol</i> will be included in the view's result set.</p>
<p>
The<b> ICertView SetResultColumnCount </b>method must be called<b> </b>prior to calling <b>SetResultColumn.</b> After the caller has specified which columns are included in the result set via calls to <b>SetResultColumn</b>, the <b>ICertView OpenView</b> method can be called to retrieve a row enumerator for the result set. (Optionally, before calling <b>OpenView</b>, the caller can specify sorting/qualifying criteria through calls to the <b>ICertView SetRestriction </b>method.)</p>
<p>
This function will fail if the <b>ICertView SetResultColumnCount</b> method has been called with a parameter value of CV_COLUMN_LOG_DEFAULT or CV_COLUMN_QUEUE_DEFAULT. This function will fail if the caller attempts to include more columns in the result set than has been specified in the call to the <b>ICertView SetResultColumnCount </b>method.</p>
<h4>Example</h4>
<pre><code>// pCertView is pointer to ICertView
HRESULT    hr;
LONG       nIndex;
LONG       i;

// determine number of columns in the entire database
hr = pCertView-&gt;GetColumnCount( FALSE, &amp;nIndex );
if (FAILED( hr ) )
{
    printf("Failed GetColumnCount - %x\n", hr);
    goto error;
}
hr = pCertView-&gt;SetResultColumnCount( nIndex );
if (FAILED( hr ) )
{
    printf("Failed SetResultColumnCount - %x\n", hr);
    goto error;
}
// place each column in the view
for ( i = 0; i &lt; nIndex; i++)
{
    hr = pCertView-&gt;SetResultColumn(i);
    if ( FAILED(hr ) )
    {
        printf("Failed SetResultColumn (%d) - %x\n", i, hr );
        goto error;
    }
}
// call ICertView::OpenView, etc
// ...

error:
// clean up resources, etc
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certview.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<h4>See Also</h4>
<p>
<a href="appprog_3rsk.htm">ICertView::SetResultColumnCount</a> </p>
<p>&nbsp;</p></body>
</HTML>
