<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing Policy Modules in Visual Basic</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_certsrv_writing_policy_modules_in_visual_basic"></a>Writing Policy Modules in Visual Basic</h2>
<p>
To build a policy module in Microsoft® Visual Basic® version 5.0, build a class module called CertificateAuthority.Policy. This naming convention must be followed in order for RegSvr32 to store the GUID in the correct location in the system registry when it is run on the policy module DLL. To be sure of this, complete the following steps:
<ol>
<li>
Tools.Options.Project.ProjectName must be set to CertificateAuthority.</li>
<li>
Tools.Options.Project.Startup Form must be set to Sub Main.</li>
<li>
Tools.Options.Project.StartMode must be set to OLE Server.</li>
<li>
You must have a creatable class module named Policy. To create the module you must insert a class module, select <b>View.Properties</b> and edit all three fields: set Name to Policy, set Public to True and set Instancing to 2 (Creatable MultiUse.)</li>
<li>
Check the Tools.Options.Project.Advanced.OLE DLL.Use OLE DLL Restrictions check box</li>
<li>
If you call the Set/Get Property routines, you must run RegSvr32 Certif.dll prior to compiling the Visual Basic module, and you must also find Certif.dll in the <b>Tools.References</b> list box and make sure Certif.dll's "Certif 1.0 Type Library" check box is checked.</li>
<li>
Then use File.Make OLE DLL File to build the DLL.</li>
</ol>
<p>
The Class Module must have one method, named <b>VerifyRequest</b>. The <b>VerifyRequest</b> method will receive a request from the server and authorize or deny the request.</p>
<p>
<b>Note</b>&nbsp;&nbsp;<b>VerifyRequest</b> is free to spawn off other processes or access an external database to do the request verification. If the verification requires out-of-band processing or human intervention, <b>VerifyRequest</b> can notify another process or leave any notice of the incoming request required. After the out-of-band processing is complete, a call to the Administration API can be made, or the provided administration utility can be used to resubmit the request to the policy module. The policy module can examine the request again, access any necessary external data and return a value to indicate the certificate should be issued or denied.</p>
<p>&nbsp;</p></body>
</HTML>
