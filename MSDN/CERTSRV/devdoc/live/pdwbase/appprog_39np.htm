<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumCERTVIEWEXTENSION::GetValue</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_ienumcertviewextension_getvalue"></a>IEnumCERTVIEWEXTENSION::GetValue</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>GetValue</b> method retrieves the extension value.</p>
<pre><code><b>[VB] Variant GetValue(
  Long </b><i>Type</i><b>,</b>
<b>  Long </b><i>Flags</i>
<b>);</b>
<b> </b>
<b>[JAVA] com.ms.Variant GetValue(</b>
<b>  int </b><i>Type</i><b>,</b>
<b>  int </b><i>Flags</i>
<b>);</b>
<b> </b>
<b>[C++] HRESULT GetValue(</b>
<b>  LONG </b><i>Type</i><b>,      </b>    // in
<b>  LONG </b><i>Flags</i><b>,</b>         // in
<b>  VARIANT </b><i>*pvarValue</i>  // out
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Type</i></dt>
<dd>
Data type identifier for the returned data in <i>pvarValue</i>. Use of this flag allows the caller to specify that the extension data be decoded prior to being returned in <i>pvarValue</i>. <i>Type</i> can be one of the following values. (If PROPTYPE_BINARY is specified, the data is not decoded but instead returned in its raw format.).
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Data type</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>PROPTYPE_BINARY</td>
<td width=52%>Binary data</td>
</tr>
<tr valign=top>
<td width=48%>PROPTYPE_DATE</td>
<td width=52%>Date+Time</td>
</tr>
<tr valign=top>
<td width=48%>PROPTYPE_LONG</td>
<td width=52%>Signed long</td>
</tr>
<tr valign=top>
<td width=48%>PROPTYPE_STRING</td>
<td width=52%>Unicode String</td>
</tr>
</table><br>

</dd>
<dt>
<i>Flags</i></dt>
<dd>
Identifier that denotes the output format for the data stored in <i>pvarValue</i>. This can be one of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Flag</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>CV_OUT_BASE64HEADER</td>
<td width=52%>BASE64 with begin/end</td>
</tr>
<tr valign=top>
<td width=48%>CV_OUT_BASE64</td>
<td width=52%>BASE64 without begin/end</td>
</tr>
<tr valign=top>
<td width=48%>CV_OUT_BINARY</td>
<td width=52%>binary</td>
</tr>
<tr valign=top>
<td width=48%>CV_OUT_BASE64REQUESTHEADER</td>
<td width=52%>BASE64 with begin/end</td>
</tr>
<tr valign=top>
<td width=48%>CV_OUT_HEX</td>
<td width=52%>hex string</td>
</tr>
<tr valign=top>
<td width=48%>CV_OUT_HEXASCII</td>
<td width=52%>hex string with Ascii+address</td>
</tr>
</table><br>

</dd>
<dt>
<b>[C++] </b><i>pvarValue</i></dt>
<dd>
Pointer to value of <b>VARIANT</b> type that will receive the data for the currently referenced extension. This function will fail if <i>pvarValue</i> is NULL.Upon successful completion of this function, <i>pvarValue</i> will point to a value of VARIANT type that will contain the extension data currently referenced by the <b>IEnumCERTVIEWEXTENSION</b> object. <b>GetValue</b> calls <b>VariantClear</b> on <i>pvarValue</i>, so in loop conditions the caller need not call <b>VariantClear</b> prior to calling <b>GetValue</b>. The caller is responsible for calling <b>VariantInit</b> before <i>pvarValue</i> is first used as a parameter by <b>GetValue</b>; the caller is also responsible for calling <b>VariantClear</b> when done with <i>pvarValue</i>.

</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>[VB][JAVA] </b>The return value is a Variant representing the data in the extension.</p>
<p>
<b>[C++] </b>The return value is an HRESULT. A value of S_OK indicates success.</p>
<h4>Remarks</h4>
<p>
This function is used to retrieve the data in the extension currently being referenced by the <b>IEnumCERTVIEWEXTENSION</b> object.</p>
<p>
If the <b>IEnumCERTVIEWEXTENSION </b>object is not referencing a valid extension, <b>GetValue </b>will fail. Use the<b> IEnumCERTVIEWEXTENSION Next</b> method to reference a valid extension.</p>
<h4>Example</h4>
<pre><code>VARIANT         var;
LONG            Index;
HRESULT         hr;
SYSTEMTIME      systime;

VariantInit( &amp;var );

// Enumerate each extension
// pEnumExt is previously instantiated IEnumCERTVIEWEXTENSION object
while ( S_FALSE != pEnumExt-&gt;Next( &amp;Index ) )
{
    hr = pEnumExt-&gt;GetValue( CV_OUT_HEX, &amp;var );
    if ( FAILED( hr ))
    {
        printf("Failed GetValue - %x\n", hr );
        break;
    }
    switch( var.vt ) 
    {
        case VT_EMPTY:
            printf( "VT_EMPTY\n" );
            break;
        case VT_BSTR:
            printf("BSTR:%S\n", var.bstrVal );
            break;
        case VT_DATE:
            VariantTimeToSystemTime( var.date, &amp;systime );
            printf("%d.%d.%d %02d:%02d:%02d\n",
                   systime.wMonth,
                   systime.wDay,
                   systime.wYear,
                   systime.wHour,
                   systime.wMinute,
                   systime.wSecond );
            break;
        case VT_I2:
            printf("%d\n", var.iVal );
            break;
        case VT_I4:
            printf("%d\n", var.lVal );
            break;
        default:
            printf("type is:%i\n", var.vt );
            break;
    }
}
// free resources
VariantClear( &amp;var );
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certview.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<h4>See Also</h4>
<p>
<a href="appprog_0l2r.htm">IEnumCERTVIEWEXTENSION::GetFlags</a>, <a href="appprog_0q79.htm">IEnumCERTVIEWEXTENSION::GetName</a> </p>
<p>&nbsp;</p></body>
</HTML>
