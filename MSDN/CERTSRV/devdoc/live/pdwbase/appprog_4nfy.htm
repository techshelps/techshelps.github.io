<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICertServerPolicy::GetCertificateExtension</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_icertserverpolicy_getcertificateextension"></a>ICertServerPolicy::GetCertificateExtension</h1>
<p>
The <b>GetCertificateExtension</b> method gets a specified certificate extension. Note that certificate extensions are distinct from certificate properties. Properties are generic data attached to the request object. Some of these properties are encoded into the certificate (example: <i>BeginDate</i>), while others are just used to mark requests in the queue and log. Extensions are always encoded into the certificate, are always marked with an object ID, and always have a critical/non-critical flag.</p>
<pre><code><b>[VB] VARIANT GetCertificateExtension(
  BSTR</b><i> strExtensionName</i><b>,  </b>
<b>  long</b><i> Type               </i>
<b>);</b>
 
<b>[JAVA] com.ms.Variant GetCertificateExtension(</b>
<b>  java.lang.String</b><i> strExtensionName</i><b>,  </b>
<b>  int</b><i> Type                            </i>
<b>);</b>
 
<b>[C++] HRESULT GetCertificateExtension(</b>
<b>  BSTR const</b><i> strExtensionName</i><b>,  </b>// in
  <b>LONG</b> <b>Type,</b>                    // in
<b>  VARIANT </b><i>*pvarValue            </i>// out, return value
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<b>[VB][JAVA][C++] </b><i>strExtensionName</i></dt>
<dd>
A string specifying the name of the extension.</dd>
<dt>
<b>[VB][JAVA][C++] </b><i>T</i>y<i>pe</i> </dt>
<dd>
Specifies the type of the extension. The type can be one of the following types.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=58%>Type</th>
<th align=left width=42%>Description</th>
</tr>
<tr valign=top>
<td width=58%>PROPTYPE_LONG</td>
<td width=42%>Signed long data</td>
</tr>
<tr valign=top>
<td width=58%>PROPTYPE_DATE</td>
<td width=42%>Date / Time</td>
</tr>
<tr valign=top>
<td width=58%>PROPTYPE_BINARY</td>
<td width=42%>Binary data</td>
</tr>
<tr valign=top>
<td width=58%>PROPTYPE_STRING</td>
<td width=42%>String data</td>
</tr>
</table><br>

</dd>
<dt>
<b>[C++]</b> <i>pvarValue</i></dt>
<dd>
Points to the return value. See Return Value.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns the requested extension value.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later (or version 4.0 with the Windows NT 4.0 Option Pack).<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certif.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<p>&nbsp;</p></body>
</HTML>
