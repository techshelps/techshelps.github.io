<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting Certificate Extensions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_certsrv_setting_certificate_extensions"></a>Setting Certificate Extensions</h2>
<p>
Extensions that have the default data types DATE, long, and BSTR can be set by the policy module without having to call the default extension handler or a custom handler. The policy module simply calls <a href="appprog_6g1a.htm"><b>ICertServerPolicy::SetCertificateExtension</b></a> with the <i>Type</i> parameter set to the corresponding property type of PROPTYPE_DATE, PROPTYPE_LONG, or PROPTYPE_STRING, and passes the extension to the Server Engine. The Server Engine then performs the ASN encoding before storing the extension in the certificate.</p>
<p>
Extensions that have data types other than the default types must be ASN encoded by an extension handler before being passed by the policy module to the Server Engine. When the policy module calls <b>ICertServerPolicy::SetCertificateExtension</b> to pass an ASN encoded extension to the Server Engine, the <i>Type</i> parameter must be set to PROPTYPE_BINARY. The Server Engine then stores the pre-encoded extension in the certificate.</p>
<p>&nbsp;</p></body>
</HTML>
