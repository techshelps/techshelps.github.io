<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICertView::SetResultColumnCount</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_icertview_setresultcolumncount"></a>ICertView::SetResultColumnCount</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>SetResultColumnCount</b> method sets the number of columns in a customized view of the Certificate Server database.</p>
<pre><code><b>[VB] SetResultColumnCount(
  Long </b><i>cCol</i>
<b>);</b>
<b> </b>
<b>[JAVA] SetResultColumnCount(</b>
<b>  int </b><i>cCol</i>
<b>);</b>
<b> </b>
<b>[C++]HRESULT SetResultColumnCount(</b>
<b>  LONG </b><i>cCol</i>   // in
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cCol</i></dt>
<dd>
Value representing how many columns will be in the view's result set. This value must not be negative, with the following exceptions:
<ul>
<li>
<i>cCol</i> is CV_COLUMN_LOG_DEFAULT. In this case the number of columns in the result set will be the number of columns in the Certificate Server's default result set for requests that have been resolved. A request is resolved if it has resulted in an issued certificate or a failed request; revoked certificates are considered resolved.</li>
<li>
<i>cCol</i> is CV_COLUMN_LOG_FAILED_DEFAULT. In this case the number of columns in the result set will be the number of columns in the Certificate Server's default result set for requests that have failed.</li>
<li>
<i>cCol</i> is CV_COLUMN_QUEUE_DEFAULT. In this case the number of columns in the result set will be the number of columns in the Certificate Server's default result set for requests that have not been resolved.</li>
</ul>

<p>
This function will fail for any other negative values for <i>cCol</i>. If <i>cCol</i> is not negative, the <b>ICertView SetResultColumn</b> method must be called to specify the columns to include in the view's result set.

</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>[C++]</b> The return value is an HRESULT. A value of S_OK indicates success.</p>
<h4>Remarks</h4>
<p>
Upon successful completion of this function, the number of columns in the view's result set will be<i> cCol </i>if <i>cCol</i> is positive. If <i>cCol</i> is a valid negative number, the number of columns in the view's result set will correspond to a predefined result set (see the Parameters section for <i>cCol</i>).</p>
<p>
The <b>ICertView OpenConnection</b> method must be called prior to calling <b>SetResultColumnCount</b>. This function will fail if called more than once on an open connection</p>
<h4>Example</h4>
<pre><code>// pCertView is pointer to ICertView (which has an Open Connection)
HRESULT    hr;
// specify the result set for logged requests
hr = pCertView-&gt;SetResultColumnCount( CV_COLUMN_LOG_DEFAULT );
if ( S_OK != hr )
    printf("Failed ICertView::SetResultColumnCount - %x\n", hr);
else
    // retrieve data rows via ICertView::OpenView
    …
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certview.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<h4>See Also</h4>
<p>
<a href="appprog_7rfy.htm">ICertView::SetResultColumn</a>, <a href="appprog_7ooe.htm">ICertView::SetRestriction</a> </p>
<p>&nbsp;</p></body>
</HTML>
