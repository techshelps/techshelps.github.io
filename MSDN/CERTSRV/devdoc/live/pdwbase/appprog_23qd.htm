<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumCERTVIEWCOLUMN::GetType</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_ienumcertviewcolumn_gettype"></a>IEnumCERTVIEWCOLUMN::GetType</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>GetType</b> method retrieves the data type of the column.</p>
<pre><code><b>[VB] Long GetType();
 
[JAVA] int GetType();
 
[C++] HRESULT GetType(
  LONG </b><i>*pIndexed</i>  // out
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<b>[C++] </b><i>pIndexed</i></dt>
<dd>
Pointer to <b>LONG </b>type that will denote the data type of the referenced view column. This function will fail if <i>pIndexed </i>is NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>[VB][JAVA]</b> The return value represents the data type of the column.</p>
<p>
<b>[C++] </b>The return value is an HRESULT. A value of S_OK indicates success.</p>
<h4>Remarks</h4>
<p>
This function is used to determine the data type of the Certificate Server view column currently referenced by the <b>IEnumCERTVIEWCOLUMN</b> object. The valid data types are listed in the following table.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Data type</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>PROPTYPE_BINARY</td>
<td width=52%>Binary data</td>
</tr>
<tr valign=top>
<td width=48%>PROPTYPE_DATE</td>
<td width=52%>Date+Time</td>
</tr>
<tr valign=top>
<td width=48%>PROPTYPE_LONG</td>
<td width=52%>Signed long</td>
</tr>
<tr valign=top>
<td width=48%>PROPTYPE_STRING</td>
<td width=52%>Unicode String</td>
</tr>
</table><br>
<p>
If the <b>IEnumCERTVIEWCOLUMN</b> object is not referencing a valid column, <b>GetType</b> will fail. Use the <b>IEnumCERTVIEWCOLUMN Next</b> method to reference a valid column.</p>
<h4>Example</h4>
<pre><code>LONG                     nType;
HRESULT                  hr;

// pEnumCol is previously instantiated IEnumCERTVIEWColumn object
hr = pEnumCol-&gt;GetType( &amp;nType );
if ( S_OK ==  hr )
{
    switch ( nType )
    {
        case PROPTYPE_BINARY:
            printf("Type is Binary\n");
            break;
        case PROPTYPE_DATE:
            printf("Type is Date+Time\n");
            break;
        case PROPTYPE_LONG:
            printf("Type is Signed long\n");
            break;
        case PROPTYPE_STRING:
            printf("Type is Unicode String\n");
            break;
        default:
            printf("Type is unknown\n");
            break;
    }
}
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certview.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<h4>See Also</h4>
<p>
<a href="appprog_6a3p.htm">IEnumCERTVIEWCOLUMN::GetName</a>,<a href="appprog_8nc5.htm"> IEnumCERTVIEWCOLUMN::GetValue</a> </p>
<p>&nbsp;</p></body>
</HTML>
