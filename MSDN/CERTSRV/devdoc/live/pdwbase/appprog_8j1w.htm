<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumCERTVIEWCOLUMN::Next</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_ienumcertviewcolumn_next"></a>IEnumCERTVIEWCOLUMN::Next</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>Next</b> method positions the <b>IEnumCERTVIEWCOLUMN</b> object to the next column.</p>
<pre><code><b>[VB] Long Next();
 
[JAVA] int Next();
 
[C++] HRESULT Next(
  LONG </b><i>*pIndex</i>  // out
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<b>[C++] </b><i>pIndex</i></dt>
<dd>
Pointer to variable that will contain the index value of the next column referenced by the <b>IEnumCERTVIEWCOLUMN</b> object. If there are no more columns to enumerate, this variable will be set to – 1. This function will fail if <i>pIndex</i> is NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>[VB][JAVA] </b>The return value is the index value of the next column that will be referenced by the <b>IEnumCERTVIEWCOLUMN</b> object. If there are no more rows to enumerate, the return value will be – 1.</p>
<p>
<b>[C++] </b>The return value is an HRESULT. A value of S_OK indicates success and that the next column is now being referenced by the <b>IEnumCERTVIEWCOLUMN</b> object. If there are no more columns to enumerate, S_FALSE is returned, and <i>pIndex</i> will point to a value of – 1.</p>
<h4>Remarks</h4>
<p>
Upon successful completion of this function, the Certificate Server view's <b>IEnumCERTVIEWCOLUMN</b> object will be referencing the next column. When the <b>IEnumCERTVIEWCOLUMN</b> is referencing a column, the column information can be retrieved through the <b>IEnumCERTVIEWCOLUMN </b>methods <b>GetName</b>, <b>GetType</b>, and <b>GetValue</b>.</p>
<h4>Example</h4>
<pre><code>LONG       nLength;
LONG       nType;
LONG       bIsindexed;
LONG       Index;

HRESULT    hr;

BSTR       bstrColName = NULL;

// pEnumCol is previously instantiated IEnumCERTVIEWColumn object
// examine each column
while ( S_FALSE != pEnumCol-&gt;Next( &amp;Index ) )
{
    // determine database length
    hr = pEnumCol-&gt;GetMaxLength( &amp;nLength );
    if ( FAILED( hr ) )
    {
        printf("Failed GetMaxLength %x\n", hr);
        goto error;
    }

    // determine data type
    hr = pEnumCol-&gt;GetType( &amp;nType );
    if ( FAILED( hr ) )
    {
        printf("Failed GetType %x\n", hr);
        goto error;
    }

    // determine if column is indexed
    hr = pEnumCol-&gt;IsIndexed( &amp;bIsindexed );
    if ( FAILED( hr ) )
    {
        printf("Failed IsIndexed %x\n", hr);
        goto error;
    }

    // retrieve column name
    hr = pEnumCol-&gt;GetName( &amp;bstrColName );
    if ( FAILED( hr ) )
    {
        printf("Failed GetName %x\n", hr);
        goto error;
    }

    // print this column's info on one line
    // print name and length
    printf("Column %S has max length %d",
            bstrColName,
            nLength ); 

    // print data type
    switch ( nType )
    {
        case PROPTYPE_BINARY:
            printf(" Type is Binary");
            break;
        case PROPTYPE_DATE:
            printf(" Type is Date+Time");
            break;
        case PROPTYPE_LONG:
            printf(" Type is Signed long");
            break;
        case PROPTYPE_STRING:
            printf(" Type is Unicode String");
            break;
        default:
            printf(" Type is unknown");
            break;
    }

    // print index status
    printf( bIsindexed ? " Indexed" : " Not indexed");
    // print new line marker
    printf("\n");

}

error:

// done processing, clear resources
if ( NULL != bstrColName )
    SysFreeString( bstrColName );
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certview.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<h4>See Also</h4>
<p>
<a href="appprog_6a3p.htm">IEnumCERTVIEWCOLUMN::GetName</a>, <a href="appprog_23qd.htm">IEnumCERTVIEWCOLUMN::GetType</a>, <a href="appprog_8nc5.htm">IEnumCERTVIEWCOLUMN::GetValue</a> </p>
<p>&nbsp;</p></body>
</HTML>
