<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Digital Certification</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_certsrv_digital_certification"></a>Digital Certification</h2>
<p>
A primary goal of a digital certificate is to confirm that the public key contained in a certificate is the public key belonging to the person or entity to whom the certificate is issued. For example, a Certificate Authority (CA) may digitally sign a special message (known as certificate information) containing the name of a user (in this case "Alice,"), as well as her public key in such a way that anyone can verify that the certificate information message was signed by no one other than the CA. Thereby, trust in the public key designated for "Alice" is confirmed.</p>
<p>
The typical implementation of digital certification involves a signature algorithm for signing the certificate. The process follows these steps:
<ol>
<li>
Alice sends a certificate request containing her name and public key to a CA.</li>
<li>
The CA creates a special message <i>m</i> from this request, which constitutes most of the certificate data. The CA signs the message with its private key and obtains a separate signature <i>sig</i>. The CA then returns the message <i>m</i> and the signature <i>sig</i> to Alice. Together, the two parts form a certificate.</li>
<li>
Alice sends the certificate to Bob which conveys trust in her public key.</li>
<li>
Bob verifies the signature <i>sig</i> using the CA public key. If the signature is verified, the public key designated for Alice is accepted.</li>
</ol>
<p>
As with any digital signature, anyone can verify, at any time, that the certificate was signed by the Certificate Authority (CA), without access to privileged information.</p>
<p>
This scenario assumes that Bob knows the specific CA public key. The public key could be obtained from a copy of the CA certificate, which contains the public key.</p>
<p>
Since certificates have a valid time duration, it is possible for the certificate to expire and no longer be valid. A certificate is valid only for the period of time specified by the CA that issued the certificate. The certificate contains information about the beginning and expiration dates. If a user attempts to obtain access to a secured server by using an expired certificate, server authentication software will automatically reject the access request. Users can renew certificates before the expiration date to avoid this situation.</p>
<p>
It is also possible for certificates to be revoked by the CA for other reasons. To handle this situation, the CA maintains a list of revoked certificates. This list is called a certificate revocation list (CRL), and is available to network users to determine validity of any given certificate.</p>
<p>&nbsp;</p></body>
</HTML>
