<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICertView::SetRestriction</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_certsrv_icertview_setrestriction"></a>ICertView::SetRestriction</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>SetRestriction</b> method sets sorting and qualifying restrictions on a column.</p>
<pre><code><b>[VB] SetRestriction(
  Long </b><i>ColumnIndex</i><b>, </b>
<b>  Long </b><i>SeekOperator</i><b>,</b>
<b>  Long </b><i>SortOrder</i><b>,</b>
<b>  Variant </b>p<i>varValue</i>
<b>);</b>
<b> </b>
<b>[JAVA] SetRestriction(</b>
<b>  int </b><i>ColumnIndex</i><b>, </b>
<b>  int </b><i>SeekOperator</i><b>,</b>
<b>  int </b><i>SortOrder</i><b>,</b>
<b>  Variant </b><i>pvarValue</i>
<b>);</b>
<b> </b>
<b>[C++] HRESULT SetRestriction(</b>
<b>  LONG </b><i>ColumnIndex</i><b>, </b>         // in
<b>  LONG </b><i>SeekOperator</i><b>,</b>         // in
<b>  LONG </b><i>SortOrder</i><b>,</b>            // in
<b>  VARIANT const </b><i>*pvarValue</i>   // in
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ColumnIndex</i></dt>
<dd>
Must be a valid column index number for the view or a predefined column specifier. If <i>ColumnIndex</i> is not negative, this value represents the zero-based index of the column that is receiving the restriction.
<p>
If <i>ColumnIndex</i> is negative, it must be one of the values listed in the following table.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value for <i>ColumnIndex</i></th>
<th align=left width=52%>Action</th>
</tr>
<tr valign=top>
<td width=48%>CV_COLUMN_LOG_DEFAULT</td>
<td width=52%>Restricts view to requests that have been resolved. A request is resolved if it has resulted in an issued certificate or a failed request; revoked certificates are considered resolved.</td>
</tr>
<tr valign=top>
<td width=48%>CV_COLUMN_LOG_FAILED_DEFAULT</td>
<td width=52%>Restricts view to requests that have failed.</td>
</tr>
<tr valign=top>
<td width=48%>CV_COLUMN_QUEUE_DEFAULT</td>
<td width=52%>Restricts view to requests that have not been resolved; if a request has resulted in either an issued certificate or a failed request, it will not be part of the view.</td>
</tr>
</table><br>

</dd>
<dt>
<i>SeekOperator</i></dt>
<dd>
This value is used with <i>pvarValue</i> and is used to define the data-query qualifier for the column. This value must be one of the values listed in the following table.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>CVR_SEEK_EQ</td>
<td width=52%>Equal to</td>
</tr>
<tr valign=top>
<td width=48%>CVR_SEEK_LE</td>
<td width=52%>Less than or equal to</td>
</tr>
<tr valign=top>
<td width=48%>CVR_SEEK_LT</td>
<td width=52%>Less than</td>
</tr>
<tr valign=top>
<td width=48%>CVR_SEEK_GE</td>
<td width=52%>Greater than or equal to</td>
</tr>
<tr valign=top>
<td width=48%>CVR_SEEK_GT</td>
<td width=52%>Greater than</td>
</tr>
</table><br>

</dd>
<dt>
<i>SortOrder</i></dt>
<dd>
Specifies the sort order for this column, as defined in the following table. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>CVR_SORT_ASCEND</td>
<td width=52%>Ascending</td>
</tr>
<tr valign=top>
<td width=48%>CVR_SORT_DESCEND</td>
<td width=52%>Descending</td>
</tr>
<tr valign=top>
<td width=48%>CVR_SORT_NONE</td>
<td width=52%>No sort order</td>
</tr>
</table><br>

</dd>
<dt>
<i>pvarValue</i></dt>
<dd>
Variant for the data query qualifier applied to this column. This value, along with the value of SeekOperator, determines which data is returned to the Certificate Server view.
</dd>
</dl>
<h4>Return Values</h4>
<p>
<b>[C++] </b>The return value is an HRESULT. A value of S_OK indicates success.</p>
<h4>Remarks</h4>
<p>
The<b> ICertView</b> object maintains an array of restrictions, allowing multiple columns to contain restrictions. A column can contain more than one restriction. After the column restrictions are established, a call to the <b>ICertView OpenView</b> method will retrieve the data, with each column's restrictions used as part of the database query.</p>
<p>
Before the <b>ICertView SetRestriction</b> method is called, it is necessary to call the <b>ICertView OpenConnection </b>method.</p>
<h4>Example</h4>
<pre><code>// this example restricts the data,
// to rows that have RequestIDs greater than 5
// pCertView is pointer to ICertView
HRESULT    hr;
VARIANT    varRest;
LONG       nIndex;
BSTR       bstrCol = NULL;

// use one column in the result set
hr = pCertView-&gt;SetResultColumnCount( 1 );
if ( FAILED( hr ) )
{
    printf("Failed SetResultColumnCount - %x\n", hr );
    goto error;
}
// determine the column index for RequestID column
bstrCol = SysAllocString(TEXT("RequestID"));
hr = pCertView-&gt;GetColumnIndex( FALSE, bstrCol, &amp;nIndex );
if ( FAILED( hr ) )
{
    printf("Failed GetColumnIndex - %x\n", hr );
    goto error;
}
// place this column into the result set
pCertView-&gt;SetResultColumn( nIndex );
// set a restriction on this index
VariantInit( &amp;varRest);
varRest.vt = VT_I4;
varRest.lVal = 5;
// restrict view to requests with ID greater than 5
hr = pCertView-&gt;SetRestriction(nIndex,
                               CVR_SEEK_GT,
                               CVR_SORT_NONE,
                               &amp;varRest);
if ( S_OK != hr )
    printf("Failed ICertView::SetRestriction - %x\n", hr);
else
    // Call OpenView, process rows, release resources, etc.
    // …
error:
// done processing, clear resources
VariantClear( &amp;varRest );
if ( NULL != bstrCol )
    SysFreeString( bstrCol );
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in certview.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use certidl.lib.</p>
<h4>See Also</h4>
<p>
<a href="appprog_1xgk.htm">IEnumCertViewColumn::IsIndexed</a>, <a href="appprog_7rfy.htm">ICertView::SetResultColumn</a> </p>
<p>&nbsp;</p></body>
</HTML>
