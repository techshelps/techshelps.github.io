<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About the Microsoft Certificate Enrollment Control</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_xen_about_the_microsoft_certificate_enrollment_control"></a>About the Microsoft Certificate Enrollment Control</h1>
<p>
The Microsoft® Certificate Enrollment Control (CEC)<i> </i>is provided for corporate developers and independent software vendors (ISVs) who want to write custom modules and applications that must request a certificate be issued to the named user (subject). This guide documents the CEC's design and explains how to write applications incorporating it.</p>
<p>
Portions of the following material assume that the reader has a basic familiarity with public-key cryptography, digital certificates, PKCS #7 and PKCS #10 standards, and how certificate stores are used in the Microsoft CryptoAPI. Readers who are new to these topics should read the PKCS standards that are available at http://www.rsa.com, and the CryptoAPI Programmers Guide and Reference, available in the Microsoft Platform SDK, before proceeding.</p>
<p>&nbsp;</p></body>
</HTML>
