<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Certificate Enrollment Control Architecture</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_xen_certificate_enrollment_control_architecture"></a>Certificate Enrollment Control Architecture</h2>
<p>
The CEC is designed to make it easier to develop an application that must request that a certificate be issued to a named subject. It is designed to accept data, in the form of a binary string (BSTR), from a web page, or from either a Microsoft® Visual Basic® or C++ user interface. The output from the CEC is a PKCS #10 certificate request, that can be sent on to a Certification Authority (CA) or a certificate server as shown in the following illustration.</p>
<p>
<img src="images/xen_arch.gif" border=0></p>
<p>
Necessary information about the user (certificate subject) is collected by the User Interface (application), and is provided as a BSTR input to the CEC. The CEC generates the appropriate (signature or key exchange) key pair, and then generates and signs a PKCS #10 certificate request, using the generated private key. The CEC then stores the keys with the certificate request for later use. Next, the application sends the PKCS #10 to a certificate server or certification authority.</p>
<p>
When the requested certificate is returned from the certificate server, the application passes the PKCS #7 message back to the CEC, where the certificate (or chain of certificates) is pulled from the PKCS #7 message. The user's public key (previously stored with the certificate request) is added to the newly received certificate, and the certificate is stored in a certificate store, as are any other certificates in the chain of trust. Any certificate-aware application can now access this certificate from the store.</p>
<p>&nbsp;</p></body>
</HTML>
