<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Receiving the Returned Certificate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_xen_receiving_the_returned_certificate"></a>Receiving the Returned Certificate</h2>
<p>
When the certifying authority has verified the information and is satisfied that the requester is the owner of the private key, and that the data about that requester is accurate, the CA constructs an x.509 certificate, signs it, packages it, along with any other needed certificates (such as the CA's own certificate) in a PKCS # 7 message, and sends the message to the requester.</p>
<p>
The receiving application passes the PKCS # 7 message to the CEC. The CEC opens the message and extracts the certificates, putting any self-signed certificates in the "Root" store. The rest (except for the requester's certificate) are placed in the "CA" store. The CEC then adds the requester's public key to the requester's certificate, and places the requester's certificate in the certificate store specified by the requester in the <b>MyStoreName</b> property of the CEC.</p>
<p>
The following code is a simple example of how to use Visual Basic Script and HTML in a Web page to receive and store the returned certificates, and to display the content of the requester's certificate:</p>
<pre><code>&lt;BODY&gt;

&lt;OBJECT
    classid="clsid:43F8F289-7A20-11D0-8F06-00C04FC295E1"
    CODEBASE="xenroll.dll"
    id=Enroll
    &gt;
&lt;/OBJECT&gt;

&lt;OBJECT
    classid="clsid:41046D4F-AA27-11D0-8C5F-00C04FC29D45"
    CODEBASE="xformat.dll"
    id=Format
    &gt;
&lt;/OBJECT&gt;

'---------------------------------------------------------------------
' Name the form and data element.
'---------------------------------------------------------------------
&lt;FORM NAME="result"&gt;
    &lt;INPUT TYPE="HIDDEN" NAME="result"&gt;
&lt;/FORM&gt;

&lt;CENTER&gt;
&lt;SCRIPT LANGUAGE="VBSCRIPT"&gt;

    '-----------------------------------------------------------------
    'Accept the certificate sub-routine.
    '-----------------------------------------------------------------
    Sub AcceptCertSub

    On Error Resume Next

    Call Enroll.AcceptPKCS7(document.result.result.value)

    If err.Number = 0 Then
        navigate "..\done.htm"
    Else
        Alert "Error: " &amp; Hex(err)
    End If

    End sub

    '-----------------------------------------------------------------
    ' Decline the certificate sub-routine.
    '-----------------------------------------------------------------
    Sub NoAcceptCertSub
    navigate "..\notdone.htm"
    End sub

    On Error Resume Next

    '--------------------------------------------------------------
    ' Get the issued certificate and display some of its parameters.
    ' The following value, "PKCS7", represents the received message. 
    ' Actually, this value must be supplied through the design of
    ' the receiving application.
    ' -------------------------------------------------------------
    document.result.result.value = "PKCS7"

    X509Cert = Enroll.getCertFromPKCS7(document.result.result.value)

    If err.Number = 0 Then
        Call Format.init(X509Cert)
    End If

    ' &amp;H20 is Issuer
    If err.Number = 0 Then
        szIssuer = Format.formatIssuer("COMMON NAME")
    End If

    ' &amp;H40 is Subject
    If err.Number = 0 Then
        szSubject = Format.formatSubject("COMMON NAME")
    End If

    If err.Number = 0 Then
        szSerialNbr = Format.SerialNumber
    End If

    ' Not Before Date
    If err.Number = 0 Then
        szFrom    = Format.NotBefore
    End If

    ' Not After Date
    If err.Number = 0 Then
        szTo    = Format.NotAfter
    End If

    If err.Number = 0 Then

    '-----------------------------------------------------------------
    ' Display the data
    '-----------------------------------------------------------------
    document.write "&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;"
    document.write "&lt;FONT COLOR=Maroon SIZE=5&gt;&lt;CENTER&gt;"
    document.write "&lt;I&gt;&lt;B&gt;Certificate Acceptance&lt;/B&gt;&lt;/I&gt;"
    document.write "&lt;HR ALIGN=CENTER WIDTH=75% COLOR=Maroon&gt;"
    document.write "&lt;TABLE&gt;&lt;TR&gt;&lt;TD&gt;Would you like to accept
        Certificate: &lt;TD&gt;&lt;I&gt;"
    document.write szSubject
    document.write "&lt;/I&gt;&lt;TR&gt;&lt;TD&gt;Issued by: &lt;TD&gt;&lt;I&gt;"
    document.write szIssuer
    document.write "&lt;/I&gt;&lt;TR&gt;&lt;TD&gt;Serial Number: &lt;TD&gt;&lt;I&gt;"
    document.write szSerialNbr
    document.write "&lt;/I&gt;&lt;TR&gt;&lt;TD&gt;Effective From: &lt;TD&gt;&lt;I&gt;"
    document.write szFrom
    document.write "&lt;/I&gt;&lt;TR&gt;&lt;TD&gt;Effective To: &lt;TD&gt;&lt;I&gt;"
    document.write szTo
    document.write "&lt;/I&gt;&lt;TR&gt;&lt;TD ALIGN=center&gt;&lt;INPUT TYPE=""BUTTON"" 
        NAME=""Accept"" value=""Accept"" onClick=""AcceptCertSub"" 
        language=""VBScript""&gt;"
    document.write "&lt;TD ALIGN=center&gt;&lt;INPUT TYPE=""BUTTON"" 
        NAME=""No"" value=""No"" onClick=""NoAcceptCertSub"" 
        language=""VBScript""&gt;"
    document.write "&lt;/TABLE&gt;&lt;/CENTER&gt;&lt;FONT&gt;&lt;BR&gt;"
    document.write "&lt;HR ALIGN=CENTER WIDTH=75% COLOR=Maroon&gt;"

    End If

    If err.Number &lt;&gt; 0 Then
        Alert "Error: " &amp; Hex(err)
    End If

&lt;/SCRIPT&gt;

&lt;/CENTER&gt;

&lt;/BODY&gt;
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
