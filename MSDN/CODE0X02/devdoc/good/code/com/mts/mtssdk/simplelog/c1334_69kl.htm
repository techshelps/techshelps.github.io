<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SIMPLELOG.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1335"></a>SIMPLELOG.CPP</h2>
<pre><code><br>/******************************************************************************\ <br>******************************************************************************** <br>* Filename: SimpleLog.cpp <br>* <br>* Description: Implementation of DLL Exports <br>* <br>* This file is provided as part of the Microsoft Transaction Server <br>* Software Development Kit <br>* <br>*THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT  <br>*WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,  <br>*INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES  <br>*OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR  <br>*PURPOSE. <br>* <br>* Copyright (C) 1997 Microsoft Corporation, All rights reserved <br>******************************************************************************** <br>\******************************************************************************/ <br> <br> <br> <br> <br>#include "stdafx.h" <br>#include "resource.h" <br>#include "SimpleLog.h" <br> <br>#include "SimpleLog_i.c" <br>#include "SimpleLogObj.h" <br> <br>#ifdef _MERGE_PROXYSTUB <br>extern "C" HINSTANCE hProxyDll; <br>#endif <br> <br>CComModule _Module; <br> <br>BEGIN_OBJECT_MAP(ObjectMap) <br>OBJECT_ENTRY(CLSID_CoSimpleLog, CSimpleLogObj) <br>END_OBJECT_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// DLL Entry Point <br> <br>extern "C" <br>BOOL WINAPI DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpReserved) <br>{ <br>lpReserved; <br>#ifdef _MERGE_PROXYSTUB <br>if (!PrxDllMain(hInstance, dwReason, lpReserved)) <br>return FALSE; <br>#endif <br>if (dwReason == DLL_PROCESS_ATTACH) <br>{ <br>_Module.Init(ObjectMap, hInstance); <br>DisableThreadLibraryCalls(hInstance); <br>} <br>else if (dwReason == DLL_PROCESS_DETACH) <br>_Module.Term(); <br>return TRUE;    // ok <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Used to determine whether the DLL can be unloaded by OLE <br> <br>STDAPI DllCanUnloadNow(void) <br>{ <br>#ifdef _MERGE_PROXYSTUB <br>if (PrxDllCanUnloadNow() != S_OK) <br>return S_FALSE; <br>#endif <br>return (_Module.GetLockCount()==0) ? S_OK : S_FALSE; <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Returns a class factory to create an object of the requested type <br> <br>STDAPI DllGetClassObject(REFCLSID rclsid, REFIID riid, LPVOID* ppv) <br>{ <br>#ifdef _MERGE_PROXYSTUB <br>if (PrxDllGetClassObject(rclsid, riid, ppv) == S_OK) <br>return S_OK; <br>#endif <br>return _Module.GetClassObject(rclsid, riid, ppv); <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// DllRegisterServer - Adds entries to the system registry <br> <br>STDAPI DllRegisterServer(void) <br>{ <br>#ifdef _MERGE_PROXYSTUB <br>HRESULT hRes = PrxDllRegisterServer(); <br>if (FAILED(hRes)) <br>return hRes; <br>#endif <br>// registers object, typelib and all interfaces in typelib <br>return _Module.RegisterServer(TRUE); <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// DllUnregisterServer - Removes entries from the system registry <br> <br>STDAPI DllUnregisterServer(void) <br>{ <br>#ifdef _MERGE_PROXYSTUB <br>PrxDllUnregisterServer(); <br>#endif <br>_Module.UnregisterServer(); <br>#if _WIN32_WINNT &gt;= 0x0400 <br>UnRegisterTypeLib(LIBID_SIMPLELOGLib, 1, 0, LOCALE_USER_DEFAULT, SYS_WIN32); <br>#endif <br>return S_OK; <br>} <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
