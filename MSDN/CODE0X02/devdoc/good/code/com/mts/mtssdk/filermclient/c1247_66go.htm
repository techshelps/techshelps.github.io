<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CPICTURECTL1.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1248"></a>CPICTURECTL1.H</h2>
<pre><code><br>/******************************************************************************\ <br>******************************************************************************** <br>* Filename: cpicturectl1.h <br>* <br>* Description: <br> <br> Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++ <br> NOTE: Do not modify the contents of this file.  If this class is regenerated by <br> Microsoft Visual C++, your modifications will be overwritten. <br> <br>* <br>* This file is provided as part of the Microsoft Transaction Server <br>* Software Development Kit <br>* <br>*THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT  <br>*WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,  <br>*INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES  <br>*OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR  <br>*PURPOSE. <br>* <br>* Copyright (C) 1997 Microsoft Corporation, All rights reserved <br>******************************************************************************** <br>\******************************************************************************/ <br>#ifndef __CPICTURECTL1_H__ <br>#define __CPICTURECTL1_H__ <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CNewPictureCtl wrapper class <br> <br>class CNewPictureCtl : public CWnd <br>{ <br>protected: <br>DECLARE_DYNCREATE(CNewPictureCtl) <br>public: <br>CLSID const&amp; GetClsid() <br>{ <br> <br>// <br>//vb will change this CLSID every time it recompiles, so  <br>//we need to get it from the registry  <br>// <br>static CLSID clsid; <br>HRESULT hr; <br>hr = CLSIDFromProgID(L"Picture.PictureCtl", &amp;clsid); <br>if (FAILED(hr)) <br>{ <br>AfxMessageBox(_T("PictureCtl.OCX is not properly registerd!"), MB_ICONSTOP); <br>} <br>return clsid; <br>} <br>virtual BOOL Create(LPCTSTR lpszClassName, <br>LPCTSTR lpszWindowName, DWORD dwStyle, <br>const RECT&amp; rect, <br>CWnd* pParentWnd, UINT nID, <br>CCreateContext* pContext = NULL) <br>{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); } <br> <br>    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, <br>const RECT&amp; rect, CWnd* pParentWnd, UINT nID, <br>CFile* pPersist = NULL, BOOL bStorage = FALSE, <br>BSTR bstrLicKey = NULL) <br>{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID, <br>pPersist, bStorage, bstrLicKey); } <br> <br>// Attributes <br>public: <br> <br>// Operations <br>public: <br>// method 'QueryInterface' not emitted because of invalid return type or parameter type <br>unsigned long AddRef(); <br>unsigned long Release(); <br>// method 'GetTypeInfoCount' not emitted because of invalid return type or parameter type <br>// method 'GetTypeInfo' not emitted because of invalid return type or parameter type <br>// method 'GetIDsOfNames' not emitted because of invalid return type or parameter type <br>// method 'Invoke' not emitted because of invalid return type or parameter type <br>CString GetPictureFileName(); <br>void SetPictureFileName(LPCTSTR lpszNewValue); <br>}; <br> <br>#endif // __CPICTURECTL1_H__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
