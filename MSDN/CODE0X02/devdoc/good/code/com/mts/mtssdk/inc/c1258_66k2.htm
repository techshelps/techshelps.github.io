<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MTSEVENTS.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1262"></a>MTSEVENTS.H</h2>
<pre><code>/* this ALWAYS GENERATED file contains the definitions for the interfaces */ <br> <br> <br>/* File created by MIDL compiler version 3.01.75 */ <br>/* at Fri Nov 14 05:07:24 1997 <br> */ <br>/* Compiler settings for mtsevents.idl: <br>    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext <br>    error checks: none <br>*/ <br>//@@MIDL_FILE_HEADING(  ) <br>#include "rpc.h" <br>#include "rpcndr.h" <br>#ifndef COM_NO_WINDOWS_H <br>#include "windows.h" <br>#include "ole2.h" <br>#endif /*COM_NO_WINDOWS_H*/ <br> <br>#ifndef __mtsevents_h__ <br>#define __mtsevents_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __IMtsEvents_FWD_DEFINED__ <br>#define __IMtsEvents_FWD_DEFINED__ <br>typedef interface IMtsEvents IMtsEvents; <br>#endif /* __IMtsEvents_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IMtsEventInfo_FWD_DEFINED__ <br>#define __IMtsEventInfo_FWD_DEFINED__ <br>typedef interface IMtsEventInfo IMtsEventInfo; <br>#endif /* __IMtsEventInfo_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IEventMoniker_FWD_DEFINED__ <br>#define __IEventMoniker_FWD_DEFINED__ <br>typedef interface IEventMoniker IEventMoniker; <br>#endif /* __IEventMoniker_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IMTSLocater_FWD_DEFINED__ <br>#define __IMTSLocater_FWD_DEFINED__ <br>typedef interface IMTSLocater IMTSLocater; <br>#endif /* __IMTSLocater_FWD_DEFINED__ */ <br> <br> <br>#ifndef __CoMTSEvents_FWD_DEFINED__ <br>#define __CoMTSEvents_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class CoMTSEvents CoMTSEvents; <br>#else <br>typedef struct CoMTSEvents CoMTSEvents; <br>#endif /* __cplusplus */ <br> <br>#endif /* __CoMTSEvents_FWD_DEFINED__ */ <br> <br> <br>#ifndef __EventMoniker_FWD_DEFINED__ <br>#define __EventMoniker_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class EventMoniker EventMoniker; <br>#else <br>typedef struct EventMoniker EventMoniker; <br>#endif /* __cplusplus */ <br> <br>#endif /* __EventMoniker_FWD_DEFINED__ */ <br> <br> <br>#ifndef __CoMTSLocater_FWD_DEFINED__ <br>#define __CoMTSLocater_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class CoMTSLocater CoMTSLocater; <br>#else <br>typedef struct CoMTSLocater CoMTSLocater; <br>#endif /* __cplusplus */ <br> <br>#endif /* __CoMTSLocater_FWD_DEFINED__ */ <br> <br> <br>/* header files for imported files */ <br>#include "oaidl.h" <br>#include "eventcpts.h" <br> <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>#ifndef __IMtsEvents_INTERFACE_DEFINED__ <br>#define __IMtsEvents_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IMtsEvents <br> * at Fri Nov 14 05:07:24 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IMtsEvents; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("BACEDF4D-74AB-11D0-B162-00AA00BA3258") <br>    IMtsEvents : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageName(  <br>            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_PackageGuid(  <br>            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PostEvent(  <br>            /* [in] */ VARIANT __RPC_FAR *vEvent) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_FireEvents(  <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetProcessID(  <br>            /* [retval][out] */ long __RPC_FAR *id) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IMtsEventsVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IMtsEvents __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IMtsEvents __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PackageName )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [retval][out] */ BSTR __RPC_FAR *pVal); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PackageGuid )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [retval][out] */ BSTR __RPC_FAR *pVal); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PostEvent )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [in] */ VARIANT __RPC_FAR *vEvent); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_FireEvents )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetProcessID )(  <br>            IMtsEvents __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *id); <br>         <br>        END_INTERFACE <br>    } IMtsEventsVtbl; <br> <br>    interface IMtsEvents <br>    { <br>        CONST_VTBL struct IMtsEventsVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IMtsEvents_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IMtsEvents_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IMtsEvents_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IMtsEvents_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define IMtsEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define IMtsEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define IMtsEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define IMtsEvents_get_PackageName(This,pVal)\ <br>    (This)-&gt;lpVtbl -&gt; get_PackageName(This,pVal) <br> <br>#define IMtsEvents_get_PackageGuid(This,pVal)\ <br>    (This)-&gt;lpVtbl -&gt; get_PackageGuid(This,pVal) <br> <br>#define IMtsEvents_PostEvent(This,vEvent)\ <br>    (This)-&gt;lpVtbl -&gt; PostEvent(This,vEvent) <br> <br>#define IMtsEvents_get_FireEvents(This,pVal)\ <br>    (This)-&gt;lpVtbl -&gt; get_FireEvents(This,pVal) <br> <br>#define IMtsEvents_GetProcessID(This,id)\ <br>    (This)-&gt;lpVtbl -&gt; GetProcessID(This,id) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMtsEvents_get_PackageName_Proxy(  <br>    IMtsEvents __RPC_FAR * This, <br>    /* [retval][out] */ BSTR __RPC_FAR *pVal); <br> <br> <br>void __RPC_STUB IMtsEvents_get_PackageName_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMtsEvents_get_PackageGuid_Proxy(  <br>    IMtsEvents __RPC_FAR * This, <br>    /* [retval][out] */ BSTR __RPC_FAR *pVal); <br> <br> <br>void __RPC_STUB IMtsEvents_get_PackageGuid_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMtsEvents_PostEvent_Proxy(  <br>    IMtsEvents __RPC_FAR * This, <br>    /* [in] */ VARIANT __RPC_FAR *vEvent); <br> <br> <br>void __RPC_STUB IMtsEvents_PostEvent_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMtsEvents_get_FireEvents_Proxy(  <br>    IMtsEvents __RPC_FAR * This, <br>    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pVal); <br> <br> <br>void __RPC_STUB IMtsEvents_get_FireEvents_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMtsEvents_GetProcessID_Proxy(  <br>    IMtsEvents __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *id); <br> <br> <br>void __RPC_STUB IMtsEvents_GetProcessID_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IMtsEvents_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IMtsEventInfo_INTERFACE_DEFINED__ <br>#define __IMtsEventInfo_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IMtsEventInfo <br> * at Fri Nov 14 05:07:24 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IMtsEventInfo; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("D56C3DC1-8482-11d0-B170-00AA00BA3258") <br>    IMtsEventInfo : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Names(  <br>            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pUnk) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DisplayName(  <br>            /* [retval][out] */ BSTR __RPC_FAR *sDisplayName) = 0; <br>         <br>        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_EventID(  <br>            /* [retval][out] */ BSTR __RPC_FAR *sGuidEventID) = 0; <br>         <br>        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count(  <br>            /* [retval][out] */ long __RPC_FAR *lCount) = 0; <br>         <br>        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Value(  <br>            /* [in] */ BSTR sKey, <br>            /* [retval][out] */ VARIANT __RPC_FAR *pVal) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IMtsEventInfoVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IMtsEventInfo __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IMtsEventInfo __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Names )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pUnk); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DisplayName )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [retval][out] */ BSTR __RPC_FAR *sDisplayName); <br>         <br>        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_EventID )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [retval][out] */ BSTR __RPC_FAR *sGuidEventID); <br>         <br>        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *lCount); <br>         <br>        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Value )(  <br>            IMtsEventInfo __RPC_FAR * This, <br>            /* [in] */ BSTR sKey, <br>            /* [retval][out] */ VARIANT __RPC_FAR *pVal); <br>         <br>        END_INTERFACE <br>    } IMtsEventInfoVtbl; <br> <br>    interface IMtsEventInfo <br>    { <br>        CONST_VTBL struct IMtsEventInfoVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IMtsEventInfo_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IMtsEventInfo_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IMtsEventInfo_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IMtsEventInfo_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define IMtsEventInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define IMtsEventInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define IMtsEventInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define IMtsEventInfo_get_Names(This,pUnk)\ <br>    (This)-&gt;lpVtbl -&gt; get_Names(This,pUnk) <br> <br>#define IMtsEventInfo_get_DisplayName(This,sDisplayName)\ <br>    (This)-&gt;lpVtbl -&gt; get_DisplayName(This,sDisplayName) <br> <br>#define IMtsEventInfo_get_EventID(This,sGuidEventID)\ <br>    (This)-&gt;lpVtbl -&gt; get_EventID(This,sGuidEventID) <br> <br>#define IMtsEventInfo_get_Count(This,lCount)\ <br>    (This)-&gt;lpVtbl -&gt; get_Count(This,lCount) <br> <br>#define IMtsEventInfo_get_Value(This,sKey,pVal)\ <br>    (This)-&gt;lpVtbl -&gt; get_Value(This,sKey,pVal) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMtsEventInfo_get_Names_Proxy(  <br>    IMtsEventInfo __RPC_FAR * This, <br>    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pUnk); <br> <br> <br>void __RPC_STUB IMtsEventInfo_get_Names_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE IMtsEventInfo_get_DisplayName_Proxy(  <br>    IMtsEventInfo __RPC_FAR * This, <br>    /* [retval][out] */ BSTR __RPC_FAR *sDisplayName); <br> <br> <br>void __RPC_STUB IMtsEventInfo_get_DisplayName_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMtsEventInfo_get_EventID_Proxy(  <br>    IMtsEventInfo __RPC_FAR * This, <br>    /* [retval][out] */ BSTR __RPC_FAR *sGuidEventID); <br> <br> <br>void __RPC_STUB IMtsEventInfo_get_EventID_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMtsEventInfo_get_Count_Proxy(  <br>    IMtsEventInfo __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *lCount); <br> <br> <br>void __RPC_STUB IMtsEventInfo_get_Count_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IMtsEventInfo_get_Value_Proxy(  <br>    IMtsEventInfo __RPC_FAR * This, <br>    /* [in] */ BSTR sKey, <br>    /* [retval][out] */ VARIANT __RPC_FAR *pVal); <br> <br> <br>void __RPC_STUB IMtsEventInfo_get_Value_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IMtsEventInfo_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IEventMoniker_INTERFACE_DEFINED__ <br>#define __IEventMoniker_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IEventMoniker <br> * at Fri Nov 14 05:07:24 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [object][unique][helpstring][hidden][uuid] */  <br> <br> <br> <br>EXTERN_C const IID IID_IEventMoniker; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("C8CF32B3-7885-11D0-B169-00AA00BA3258") <br>    IEventMoniker : public IUnknown <br>    { <br>    public: <br>        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Name(  <br>            /* [retval][out] */ BSTR __RPC_FAR *pVal) = 0; <br>         <br>        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_Name(  <br>            /* [in] */ BSTR newVal) = 0; <br>         <br>        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_ID(  <br>            /* [retval][out] */ long __RPC_FAR *pVal) = 0; <br>         <br>        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_ID(  <br>            /* [in] */ long newVal) = 0; <br>         <br>        virtual /* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE put_EventObj(  <br>            /* [in] */ IUnknown __RPC_FAR *newVal) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IEventMonikerVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IEventMoniker __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IEventMoniker __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IEventMoniker __RPC_FAR * This); <br>         <br>        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )(  <br>            IEventMoniker __RPC_FAR * This, <br>            /* [retval][out] */ BSTR __RPC_FAR *pVal); <br>         <br>        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Name )(  <br>            IEventMoniker __RPC_FAR * This, <br>            /* [in] */ BSTR newVal); <br>         <br>        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ID )(  <br>            IEventMoniker __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *pVal); <br>         <br>        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ID )(  <br>            IEventMoniker __RPC_FAR * This, <br>            /* [in] */ long newVal); <br>         <br>        /* [helpstring][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_EventObj )(  <br>            IEventMoniker __RPC_FAR * This, <br>            /* [in] */ IUnknown __RPC_FAR *newVal); <br>         <br>        END_INTERFACE <br>    } IEventMonikerVtbl; <br> <br>    interface IEventMoniker <br>    { <br>        CONST_VTBL struct IEventMonikerVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IEventMoniker_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IEventMoniker_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IEventMoniker_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IEventMoniker_get_Name(This,pVal)\ <br>    (This)-&gt;lpVtbl -&gt; get_Name(This,pVal) <br> <br>#define IEventMoniker_put_Name(This,newVal)\ <br>    (This)-&gt;lpVtbl -&gt; put_Name(This,newVal) <br> <br>#define IEventMoniker_get_ID(This,pVal)\ <br>    (This)-&gt;lpVtbl -&gt; get_ID(This,pVal) <br> <br>#define IEventMoniker_put_ID(This,newVal)\ <br>    (This)-&gt;lpVtbl -&gt; put_ID(This,newVal) <br> <br>#define IEventMoniker_put_EventObj(This,newVal)\ <br>    (This)-&gt;lpVtbl -&gt; put_EventObj(This,newVal) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IEventMoniker_get_Name_Proxy(  <br>    IEventMoniker __RPC_FAR * This, <br>    /* [retval][out] */ BSTR __RPC_FAR *pVal); <br> <br> <br>void __RPC_STUB IEventMoniker_get_Name_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IEventMoniker_put_Name_Proxy(  <br>    IEventMoniker __RPC_FAR * This, <br>    /* [in] */ BSTR newVal); <br> <br> <br>void __RPC_STUB IEventMoniker_put_Name_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE IEventMoniker_get_ID_Proxy(  <br>    IEventMoniker __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *pVal); <br> <br> <br>void __RPC_STUB IEventMoniker_get_ID_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IEventMoniker_put_ID_Proxy(  <br>    IEventMoniker __RPC_FAR * This, <br>    /* [in] */ long newVal); <br> <br> <br>void __RPC_STUB IEventMoniker_put_ID_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][propput] */ HRESULT STDMETHODCALLTYPE IEventMoniker_put_EventObj_Proxy(  <br>    IEventMoniker __RPC_FAR * This, <br>    /* [in] */ IUnknown __RPC_FAR *newVal); <br> <br> <br>void __RPC_STUB IEventMoniker_put_EventObj_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IEventMoniker_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IMTSLocater_INTERFACE_DEFINED__ <br>#define __IMTSLocater_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IMTSLocater <br> * at Fri Nov 14 05:07:24 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IMTSLocater; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("D19B8BFD-7F88-11D0-B16E-00AA00BA3258") <br>    IMTSLocater : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetEventDispatcher(  <br>            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pUnk) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IMTSLocaterVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IMTSLocater __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IMTSLocater __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IMTSLocater __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            IMTSLocater __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            IMTSLocater __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            IMTSLocater __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            IMTSLocater __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetEventDispatcher )(  <br>            IMTSLocater __RPC_FAR * This, <br>            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pUnk); <br>         <br>        END_INTERFACE <br>    } IMTSLocaterVtbl; <br> <br>    interface IMTSLocater <br>    { <br>        CONST_VTBL struct IMTSLocaterVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IMTSLocater_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IMTSLocater_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IMTSLocater_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IMTSLocater_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define IMTSLocater_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define IMTSLocater_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define IMTSLocater_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define IMTSLocater_GetEventDispatcher(This,pUnk)\ <br>    (This)-&gt;lpVtbl -&gt; GetEventDispatcher(This,pUnk) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IMTSLocater_GetEventDispatcher_Proxy(  <br>    IMTSLocater __RPC_FAR * This, <br>    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *pUnk); <br> <br> <br>void __RPC_STUB IMTSLocater_GetEventDispatcher_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IMTSLocater_INTERFACE_DEFINED__ */ <br> <br> <br> <br>#ifndef __MTSEVENTSLib_LIBRARY_DEFINED__ <br>#define __MTSEVENTSLib_LIBRARY_DEFINED__ <br> <br>/**************************************** <br> * Generated header for library: MTSEVENTSLib <br> * at Fri Nov 14 05:07:24 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [helpstring][version][uuid] */  <br> <br> <br> <br>EXTERN_C const IID LIBID_MTSEVENTSLib; <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_CoMTSEvents; <br> <br>class DECLSPEC_UUID("BACEDF4E-74AB-11D0-B162-00AA00BA3258") <br>CoMTSEvents; <br>#endif <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_EventMoniker; <br> <br>class DECLSPEC_UUID("C8CF32B4-7885-11D0-B169-00AA00BA3258") <br>EventMoniker; <br>#endif <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_CoMTSLocater; <br> <br>class DECLSPEC_UUID("D19B8BFE-7F88-11D0-B16E-00AA00BA3258") <br>CoMTSLocater; <br>#endif <br>#endif /* __MTSEVENTSLib_LIBRARY_DEFINED__ */ <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br>unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * );  </code></pre>
<p>
</p>
<pre><code>unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * );  <br>void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * );  <br> <br>unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * );  <br>void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * );  <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
