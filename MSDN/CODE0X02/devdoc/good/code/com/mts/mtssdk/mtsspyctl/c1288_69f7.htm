<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RESOURCESINK.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1303"></a>RESOURCESINK.H</h2>
<pre><code><br>/******************************************************************************\ <br>******************************************************************************** <br>* Filename: ResourceSink.h <br>* <br>* Description: defininition of sink for resource events. <br>* <br>* This file is provided as part of the Microsoft Transaction Server <br>* Software Development Kit <br>* <br>*THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT  <br>*WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,  <br>*INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES  <br>*OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR  <br>*PURPOSE. <br>* <br>* Copyright (C) 1997 Microsoft Corporation, All rights reserved <br>******************************************************************************** <br>\******************************************************************************/ <br> <br>#ifndef __RESOURCESINK_H_ <br>#define __RESOURCESINK_H_ <br> <br>#include "resource.h"       // main symbols <br> <br>class CMtsSpy; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CResourceSink <br>class ATL_NO_VTABLE CResourceSink :  <br>public CMtsSink,  <br>public IMtsResourceEvents <br> <br>{ <br>public: <br>CResourceSink(CMtsSpy * pSpy) <br>{ <br>m_pSpy = pSpy; <br>} <br>CResourceSink() <br>{ <br>m_pSpy = NULL; <br>} <br> <br>DECLARE_REGISTRY_RESOURCEID(IDR_RESOURCESINK) <br>DECLARE_NOT_AGGREGATABLE(CResourceSink) <br>DECLARE_GET_CONTROLLING_UNKNOWN() <br> <br>BEGIN_COM_MAP(CResourceSink) <br>COM_INTERFACE_ENTRY(IMtsResourceEvents) <br>COM_INTERFACE_ENTRY_CHAIN(CMtsSink) <br>END_COM_MAP() <br> <br>virtual REFIID GetIID(){return IID_IMtsResourceEvents;} <br>// IResourceSink <br>public: <br>    STDMETHOD(OnResourceCreate)(LONGLONG perfCount, REFGUID guidActivity, MTS_OBJID ObjectID, LPCOLESTR pszType,MTS_RESID resId); <br>STDMETHOD(OnResourceAllocate)(LONGLONG perfCount, REFGUID guidActivity, MTS_OBJID ObjectID, LPCOLESTR pszType,MTS_RESID resId); <br>STDMETHOD(OnResourceRecycle)(LONGLONG perfCount, MTS_OBJID ObjectID, LPCOLESTR pszType,MTS_RESID resId); <br>STDMETHOD(OnResourceDestroy)(LONGLONG perfCount, MTS_OBJID ObjectID, LPCOLESTR pszType,MTS_RESID resId); <br> <br>STDMETHODIMP GetSinkType(EventEnum * e){*e = Resource;return S_OK;} <br> <br> <br>}; <br> <br>#endif //__RESOURCESINK_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
