<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FORM1.FRM</title>
<link disabled rel=stylesheet href=../../../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1216"></a>FORM1.FRM</h2>
<pre><code>VERSION 5.00 <br>Begin VB.Form Explorer  <br>   Caption         =   "MTS Admin SDK Sample" <br>   ClientHeight    =   6360 <br>   ClientLeft      =   60 <br>   ClientTop       =   345 <br>   ClientWidth     =   7950 <br>   LinkTopic       =   "Form1" <br>   ScaleHeight     =   6360 <br>   ScaleWidth      =   7950 <br>   StartUpPosition =   3  'Windows Default <br>   Begin VB.CommandButton Connect  <br>      Caption         =   "Connect..." <br>      Height          =   375 <br>      Left            =   5520 <br>      TabIndex        =   18 <br>      Top             =   240 <br>      Width           =   1575 <br>   End <br>   Begin VB.CommandButton ExportBtn  <br>      Caption         =   "Export..." <br>      Height          =   375 <br>      Left            =   1440 <br>      TabIndex        =   17 <br>      Top             =   2640 <br>      Width           =   1455 <br>   End <br>   Begin VB.CommandButton Install  <br>      Caption         =   "Install..." <br>      Height          =   375 <br>      Left            =   120 <br>      TabIndex        =   16 <br>      Top             =   2640 <br>      Width           =   1095 <br>   End <br>   Begin VB.ListBox CollList  <br>      Height          =   1230 <br>      Left            =   120 <br>      TabIndex        =   10 <br>      Top             =   3840 <br>      Width           =   2295 <br>   End <br>   Begin VB.ListBox ObjList  <br>      Height          =   2985 <br>      Left            =   3480 <br>      TabIndex        =   9 <br>      Top             =   1320 <br>      Width           =   2055 <br>   End <br>   Begin VB.CommandButton Back  <br>      Caption         =   "Back" <br>      Height          =   495 <br>      Left            =   120 <br>      TabIndex        =   8 <br>      Top             =   5160 <br>      Width           =   855 <br>   End <br>   Begin VB.ListBox PropList  <br>      Height          =   2985 <br>      Left            =   5880 <br>      TabIndex        =   7 <br>      Top             =   1320 <br>      Width           =   1935 <br>   End <br>   Begin VB.TextBox Value  <br>      Height          =   375 <br>      Left            =   3480 <br>      TabIndex        =   6 <br>      Text            =   "Text1" <br>      Top             =   5160 <br>      Width           =   3495 <br>   End <br>   Begin VB.CommandButton SetBtn  <br>      Caption         =   "Set" <br>      Height          =   375 <br>      Left            =   7080 <br>      TabIndex        =   5 <br>      Top             =   5160 <br>      Width           =   735 <br>   End <br>   Begin VB.CommandButton SaveBtn  <br>      Caption         =   "SaveChanges" <br>      Height          =   495 <br>      Left            =   1440 <br>      TabIndex        =   4 <br>      Top             =   1560 <br>      Width           =   1455 <br>   End <br>   Begin VB.CommandButton AddBtn  <br>      Caption         =   "Add" <br>      Height          =   375 <br>      Left            =   120 <br>      TabIndex        =   3 <br>      Top             =   2160 <br>      Width           =   1095 <br>   End <br>   Begin VB.CommandButton RemoveBtn  <br>      Caption         =   "Remove" <br>      Height          =   375 <br>      Left            =   1440 <br>      TabIndex        =   2 <br>      Top             =   2160 <br>      Width           =   1455 <br>   End <br>   Begin VB.CommandButton Populate  <br>      Caption         =   "Populate" <br>      Height          =   495 <br>      Left            =   120 <br>      TabIndex        =   1 <br>      Top             =   1560 <br>      Width           =   1095 <br>   End <br>   Begin VB.CommandButton GoToBtn  <br>      Caption         =   "GetCollection" <br>      Height          =   495 <br>      Left            =   1200 <br>      TabIndex        =   0 <br>      Top             =   5160 <br>      Width           =   1695 <br>   End <br>   Begin VB.Frame Frame1  <br>      Caption         =   "Collection" <br>      Height          =   4935 <br>      Left            =   0 <br>      TabIndex        =   19 <br>      Top             =   840 <br>      Width           =   3015 <br>      Begin VB.CommandButton Associate  <br>         Caption         =   "Associate Role..." <br>         Height          =   375 <br>         Left            =   1440 <br>         TabIndex        =   28 <br>         Top             =   2280 <br>         Width           =   1455 <br>      End <br>      Begin VB.Label Label7  <br>         Caption         =   "Related collections:" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   22 <br>         Top             =   2760 <br>         Width           =   2295 <br>      End <br>      Begin VB.Label CurCollName  <br>         BorderStyle     =   1  'Fixed Single <br>         BeginProperty Font  <br>            Name            =   "MS Sans Serif" <br>            Size            =   8.25 <br>            Charset         =   0 <br>            Weight          =   700 <br>            Underline       =   0   'False <br>            Italic          =   0   'False <br>            Strikethrough   =   0   'False <br>         EndProperty <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   20 <br>         Top             =   360 <br>         Width           =   2775 <br>      End <br>   End <br>   Begin VB.Frame Frame2  <br>      Caption         =   "Objects" <br>      Height          =   4935 <br>      Left            =   3240 <br>      TabIndex        =   21 <br>      Top             =   840 <br>      Width           =   4695 <br>      Begin VB.Label Label9  <br>         Caption         =   "Property value:" <br>         Height          =   255 <br>         Left            =   240 <br>         TabIndex        =   24 <br>         Top             =   3960 <br>         Width           =   2295 <br>      End <br>      Begin VB.Label Label8  <br>         Caption         =   "Propeties:" <br>         Height          =   255 <br>         Left            =   2640 <br>         TabIndex        =   23 <br>         Top             =   240 <br>         Width           =   1335 <br>      End <br>   End <br>   Begin VB.Frame Frame3  <br>      Caption         =   "Catalog" <br>      Height          =   735 <br>      Left            =   0 <br>      TabIndex        =   25 <br>      Top             =   0 <br>      Width           =   7935 <br>      Begin VB.Label Label6  <br>         Caption         =   "Computer:" <br>         Height          =   255 <br>         Left            =   240 <br>         TabIndex        =   27 <br>         Top             =   360 <br>         Width           =   975 <br>      End <br>      Begin VB.Label ServerName  <br>         BorderStyle     =   1  'Fixed Single <br>         Height          =   255 <br>         Left            =   1200 <br>         TabIndex        =   26 <br>         Top             =   360 <br>         Width           =   3975 <br>      End <br>   End <br>   Begin VB.Label Label2  <br>      Caption         =   "Related collections:" <br>      Height          =   255 <br>      Left            =   120 <br>      TabIndex        =   15 <br>      Top             =   3360 <br>      Width           =   1935 <br>   End <br>   Begin VB.Label Label3  <br>      Caption         =   "Objects:" <br>      Height          =   255 <br>      Left            =   3480 <br>      TabIndex        =   14 <br>      Top             =   960 <br>      Width           =   1095 <br>   End <br>   Begin VB.Label Label4  <br>      Caption         =   "Properties" <br>      Height          =   255 <br>      Left            =   6000 <br>      TabIndex        =   13 <br>      Top             =   960 <br>      Width           =   1215 <br>   End <br>   Begin VB.Label Label5  <br>      Caption         =   "Property Value:" <br>      Height          =   255 <br>      Left            =   3480 <br>      TabIndex        =   12 <br>      Top             =   4920 <br>      Width           =   1095 <br>   End <br>   Begin VB.Label status  <br>      BorderStyle     =   1  'Fixed Single <br>      Height          =   255 <br>      Left            =   0 <br>      TabIndex        =   11 <br>      Top             =   5880 <br>      Width           =   7935 <br>   End <br>End <br>Attribute VB_Name = "Explorer" <br>Attribute VB_GlobalNameSpace = False <br>Attribute VB_Creatable = False <br>Attribute VB_PredeclaredId = True <br>Attribute VB_Exposed = False <br>'/******************************************************************************\ <br>'******************************************************************************** <br>' Explore Sample <br>' <br>'* This file is provided as part of the Microsoft Transaction Server <br>'* Software Development Kit <br>'* <br>'*THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT <br>'*WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, <br>'*INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES <br>'*OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR <br>'*PURPOSE. <br>'* <br>'* Copyright (C) 1997 Microsoft Corporation, All rights reserved <br>'******************************************************************************** <br>'\******************************************************************************/ <br> <br>Public catalog As Object <br>Public currentColl As Object <br>Public related As Object <br>Public propNames As Object <br>Private stack(10) As Object <br>Private stackTop As Integer <br>Public Server As String <br> <br> <br>Private Sub AddBtn_Click() <br>    currentColl.Add <br>    displayObjects currentColl <br>End Sub <br> <br>Private Sub Associate_Click() <br>    AssociateRole.Show 1, Me <br> <br>End Sub <br> <br>Private Sub CollList_Click() <br>    If CollList.ListIndex = -1 Then <br>        GoToBtn.Enabled = False <br>    Else <br>        GoToBtn.Enabled = True <br>    End If <br>         <br>End Sub <br> <br>Private Sub Connect_Click() <br>    ServerDlg.Show 1, Me <br>    <br>End Sub <br> <br>Private Sub ExportBtn_Click() <br>    PackageExport.Show 1, Me <br> <br>End Sub <br> <br>Private Sub GoToBtn_Click() <br>    status.Caption = "" <br>    nColl = CollList.ListIndex <br>    nObj = ObjList.ListIndex <br>    If nColl &gt; -1 Then <br>     <br>        MousePointer = 11 <br> <br>        ' if navigating from the root then apply the <br>        ' current server to the catalog and re-get the <br>        ' root <br>        If currentColl.Name = "Root" Then <br>            Set currentColl = catalog.GetCollection("Root") <br>        End If <br>        Dim key As String <br>        key = "" <br>        If nObj &gt; -1 Then <br>            key = currentColl.Item(nObj).key <br>        End If <br>        Dim coll As Object <br>        Set coll = currentColl.GetCollection(CollList.List(nColl), (key)) <br>        push currentColl <br>        Set currentColl = coll <br>        navigateTo currentColl <br>        MousePointer = 0 <br>         <br>    End If <br>    <br>             <br>End Sub <br> <br>Private Sub Form_Load() <br>    Set catalog = CreateObject("MTSAdmin.Catalog.1") <br>    stackTop = -1 <br>     <br>    status.Caption = "" <br>    Set currentColl = catalog.GetCollection("Root") <br>    push currentColl <br>    navigateTo currentColl <br>    ServerName.Caption = "local" <br>     <br>End Sub <br> <br>Public Sub navigateTo(coll As Object) <br> <br>    MousePointer = 11 <br>    CurCollName.Caption = coll.Name <br>    ' populate related collections list <br>    CollList.Clear <br>    PropList.Clear <br>    GoToBtn.Enabled = False <br>     <br>    Set related = coll.GetCollection("RelatedCollectionInfo", "") <br>    related.Populate <br>    Dim relColl As Object <br> <br>    For Each relColl In related <br>        CollList.AddItem (relColl.Name) <br>    Next <br> <br> <br>    ' populate property names <br>    Set propNames = coll.GetCollection("PropertyInfo", "") <br>    Dim propName As Object <br>    propNames.Populate <br>    For Each propName In propNames <br>       PropList.AddItem (propName.Name) <br>    Next <br>     <br>    ' populate objects <br>    On Error GoTo err <br>    coll.Populate <br>    On Error GoTo 0 <br>    displayObjects coll <br>     <br>    MousePointer = 0 <br>    AddBtn.Enabled = coll.AddEnabled <br>    RemoveBtn.Enabled = coll.RemoveEnabled <br>    SaveBtn.Enabled = False <br>    If coll.Name = "Root" Then <br>        Back.Enabled = False <br>    Else <br>        Back.Enabled = True <br>    End If <br>    If coll.Name = "Packages" Or coll.Name = "ComponentsInPackage" Or coll.Name = "RemoteComponents" Then <br>        Install.Enabled = True <br>    Else <br>        Install.Enabled = False <br>    End If <br>    If coll.Name = "Packages" Then <br>        ExportBtn.Enabled = True <br>    Else <br>        ExportBtn.Enabled = False <br>    End If <br>    If coll.Name = "RolesForPackageComponent" Or coll.Name = "RolesForPackageComponentInterface" Then <br>        Associate.Enabled = True <br>    Else <br>        Associate.Enabled = False <br>    End If <br>    Exit Sub <br>err: <br>    MsgBox "Collection populate failed with error code " + mapError(err.Number) <br>    Resume Next <br> <br>End Sub <br> <br>Private Sub displayObjects(coll As Object) <br>    Dim obj As Object <br>    ObjList.Clear <br>    For Each obj In coll <br>        ObjList.AddItem (obj.Name) <br>    Next <br>    Value.Text = "" <br> <br>    ' display property value if possible <br>    If PropList.ListCount &gt; 0 Then <br>        PropList.Selected(0) = True <br>    End If <br>    If ObjList.ListCount &gt; 0 Then <br>        ObjList.Selected(0) = True <br>        PropList_Click <br>    End If <br> <br>End Sub <br> <br>Private Sub Install_Click() <br>    If currentColl.Name = "Packages" Then <br>        PackInstall.Show 1, Me <br>    End If <br>    If currentColl.Name = "ComponentsInPackage" Then <br>        MainCompInstall.Show 1, Me <br>    End If <br>    If currentColl.Name = "RemoteComponents" Then <br>        RemoteComp.Show 1, Me <br>    End If <br>         <br>End Sub <br> <br> <br> <br>Private Sub ObjList_Click() <br>    status.Caption = "" <br>    DisplayValue <br>End Sub <br> <br>Private Sub Populate_Click() <br>    MousePointer = 11 <br>    status.Caption = "" <br>    navigateTo currentColl <br>    MousePointer = 0 <br>End Sub <br> <br>Private Sub DisplayValue() <br>    ' display property value and disable control if readOnly <br>    Dim val As Variant <br>    nObj = ObjList.ListIndex <br>    If nObj &gt; -1 Then <br>        nProp = PropList.ListIndex <br>        If nProp = -1 Then <br>            Value.Text = "" <br>            Value.Locked = True <br>        Else <br>            ' check for write-only property <br>            If currentColl.Item(nObj).IsPropertyWriteOnly(PropList.List(nProp)) Then <br>                Value.Text = "" <br>            Else <br>                s = PropList.List(nProp) <br>                ' get property value <br>                val = currentColl.Item(nObj).Value(PropList.List(nProp)) <br>                ' if this is an error code then map to a string form <br>                If currentColl.Name = "ErrorInfo" And nProp = 1 Then <br>                    Value.Text = Explorer.mapError((val)) <br>                Else <br>                    Value.Text = val <br>                End If <br>            End If <br>     <br>            If currentColl.Item(nObj).IsPropertyReadOnly(PropList.List(nProp)) Then <br>                Value.Locked = True <br>            Else <br>                Value.Locked = False <br>            End If <br>        End If <br>        SetBtn.Enabled = Not Value.Locked <br>             <br>    End If <br> <br>End Sub <br> <br>Private Sub PropList_Click() <br>    status.Caption = "" <br>    DisplayValue <br>End Sub <br> <br>Private Sub RemoveBtn_Click() <br>    nObj = ObjList.ListIndex <br>    If nObj &gt; -1 Then <br>        currentColl.Remove nObj <br>        displayObjects currentColl <br>        SaveBtn.Enabled = True <br>         <br>    End If <br> <br>End Sub <br> <br>Private Sub Back_Click() <br>    status.Caption = "" <br>    MousePointer = 11 <br>    Set currentColl = pop <br>     <br>    navigateTo currentColl <br>    If currentColl.Name = "Root" Then <br>        Connect.Enabled = True <br>    End If <br>    MousePointer = 0 <br>End Sub <br> <br>Private Sub SaveBtn_Click() <br>    status.Caption = "" <br>    MousePointer = 11 <br>    On Error GoTo err <br>    currentColl.SaveChanges <br>    MousePointer = 0 <br>    Exit Sub <br>err: <br>    MsgBox "Save changes failed with error code " + mapError(err.Number) <br>    MousePointer = 0 <br>End Sub <br> <br>Private Sub SetBtn_Click() <br>    status.Caption = "" <br>    On Error GoTo errorHandler <br>    nObj = ObjList.ListIndex <br>    If nObj &gt; -1 Then <br>        nProp = PropList.ListIndex <br>        If nProp &gt; -1 Then <br>            currentColl.Item(nObj).Value(PropList.List(nProp)) = Value.Text <br>            SaveBtn.Enabled = True <br>        End If <br>    End If <br>    Exit Sub <br>errorHandler: <br>    Beep <br>    status.Caption = "Invalid value" <br>    ' reset the value box contents <br>    DisplayValue <br>     <br> <br>End Sub <br> <br> <br>Private Sub push(obj As Object) <br>    ' live on the edge - no overflow check <br>    stackTop = stackTop + 1 <br>    Set stack(stackTop) = obj <br>End Sub <br> <br>Function pop() As Object <br>    Set pop = Nothing <br>    If stackTop &lt; 0 Then Return <br>    Set pop = stack(stackTop) <br>    Set stack(stackTop) = Nothing <br>    stackTop = stackTop - 1 <br>End Function <br> <br>Public Function mapError(errorCode As Long) As String <br>    Select Case errorCode <br>     <br>    Case mtsErrObjectErrors <br>        mapError = "mtsErrObjectErrors - see ErrorInfo collection" <br>         <br>    Case mtsErrObjectErrors <br>        mapError = "mtsErrObjectErrors" <br> <br>    Case mtsErrObjectInvalid <br>        mapError = "mtsErrObjectInvalid" <br> <br>    Case mtsErrKeyMissing <br>        mapError = "mtsErrKeyMissing" <br> <br>    Case mtsErrAlreadyInstalled <br>        mapError = "mtsErrAlreadyInstalled" <br> <br>    Case mtsErrCoReqCompInstalled <br>        mapError = "mtsErrCoReqCompInstalled" <br> <br>    Case mtsErrBadPath <br>        mapError = "mtsErrBadPath" <br> <br>    Case mtsErrPackageExists <br>        mapError = "mtsErrPackageExists" <br> <br>    Case mtsErrRemoteInterface <br>        mapError = "mtsErrRemoteInterface" <br> <br>    Case mtsErrCantCopyFile <br>        mapError = "mtsErrCantCopyFile" <br> <br>    Case mtsErrNoTypeLib <br>        mapError = "mtsErrNoTypeLib" <br>     <br>    Case mtsErrNoUser <br>        mapError = "mtsErrNoUser" <br> <br>    Case mtsErrInvalidUserids <br>        mapError = "mtsErrInvalidUserids" <br> <br>    Case mtsErrUserPasswdNotValid <br>        mapError = "mtsErrUserPasswdNotValid" <br>     <br>    Case mtsErrNoServerShare <br>        mapError = "mtsErrNoServerShare" <br> <br>    Case mtsErrPackDirNotFound <br>        mapError = "mtsErrPackDirNotFound" <br>         <br>    Case mtsErrCompFileNotInstallable <br>        mapError = "mtsCompFileNotInstallable" <br>         <br>    Case mtsErrCompFileNoRegistrar <br>        mapError = "mtsErrCompFileNoRegistrar" <br>         <br>         <br>    Case Else <br>        mapError = errorCode <br>    End Select <br>   <br>End Function </code></pre>
<p>&nbsp;</p></body>
</HTML>
