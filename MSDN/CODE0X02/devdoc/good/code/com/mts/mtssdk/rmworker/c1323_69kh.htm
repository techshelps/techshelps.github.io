<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RMWORKEROBJ.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1331"></a>RMWORKEROBJ.H</h2>
<pre><code><br>/******************************************************************************\ <br>******************************************************************************** <br>* Filename: RmWorkerObj.h <br>* <br>* Description: Declaration of the CRmWorkerObj <br>* <br>* This file is provided as part of the Microsoft Transaction Server <br>* Software Development Kit <br>* <br>*THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT  <br>*WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,  <br>*INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES  <br>*OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR  <br>*PURPOSE. <br>* <br>* Copyright (C) 1997 Microsoft Corporation, All rights reserved <br>******************************************************************************** <br>\******************************************************************************/ <br> <br>#include "resource.h"       // main symbols <br> <br>typedef struct tagFILECPY <br>{ <br> CComBSTR sSource; <br> CComBSTR sDest; <br>} FILECPY, FAR * LPFILECPY; <br> <br> <br>//extern ULONG RM_STATUS_BASE = 0x81000000; <br> <br> <br>typedef struct tagRECOVERY_RECORD <br>{ <br>GUIDguidTxn;// Transaction identifier. <br>RECOVERY_STATEeRecState;// Recovery state of transaction <br>CActionList*actionList;// Action list for  <br>// transaction. <br>} RECOVERY_RECORD; <br> <br>typedef list &lt;FILECPY *&gt; FILECPYLIST; <br>typedef list &lt;RECOVERY_RECORD *&gt; RECOVERY_LIST; <br>///////////////////////////////////////////////////////////////////////////// <br>// CRmWorkerObj <br>class CRmWorkerObj :  <br>public CActionList, <br>public CComObjectRoot, <br>public IRmWorkerPriv, <br>public ITransactionResourceAsync, // DTC Callback <br>public CComCoClass&lt;CRmWorkerObj, &amp;CLSID_CRmWorkerObj&gt;, <br>public IRmWorker <br>{ <br> <br>private: <br> <br>ISimpleLog * m_pLog; <br>HANDLE m_hFinishedTxEvent; <br>CComBSTR m_sRecoverDir; <br>CComBSTR m_sAppName; <br> <br>public: <br>HRESULT WriteLog(GUID guidTx, LOG_RM_COMMAND eOp, FILE_OPERATION fOp, BSTR sFromFile, BSTR sToFile); <br>HRESULT WriteLog(GUID txID, CAction * pAction); <br>HRESULT GetTempFile(TCHAR * pFileName); <br>ITransactionEnlistmentAsync*m_pEnlist; <br>CRmWorkerObj(); <br>~CRmWorkerObj(); <br> <br> <br>DECLARE_REGISTRY_RESOURCEID(IDR_RmWorkerObj) <br> <br>BEGIN_COM_MAP(CRmWorkerObj) <br>COM_INTERFACE_ENTRY(IRmWorker) <br>COM_INTERFACE_ENTRY(IRmWorkerPriv) <br>COM_INTERFACE_ENTRY(ITransactionResourceAsync) <br>END_COM_MAP() <br> <br>FILECPYLIST m_lstFiles; <br> <br> <br>STDMETHOD(WaitTxDone)(void); <br> <br>// IRmWorker <br> <br>// misc functions <br>STDMETHOD(Init)(IUnknown * pUnkLog, IUnknown * pUnkDtcResMgr, IUnknown *pUnkDtc, BSTR sRecDir); <br>STDMETHOD(Recover)(IStorage * pStorage); <br>STDMETHOD(Reset)(); <br> <br>// file manipulation <br>STDMETHOD(FileCopyTx)(BSTR sFromFile, BSTR sToFile, BOOL bFailIfExists); <br>STDMETHOD(FileRenameTx)(BSTR sFromFile, BSTR sToFile); <br>STDMETHOD(FileMoveTxt)(BSTR sSource, BSTR sDestination); <br>STDMETHOD(FileDeleteTx)(BSTR sFileName); <br> <br>// list manipulation <br>STDMETHOD(AddFile)(BSTR sSource, BSTR sDestination); <br>STDMETHOD(CopyListTx)(); <br> <br> <br>// DTC related functions <br>STDMETHOD(ExportTx)(ULONG cbTranCookie, BYTE *rgbTranCookie); <br>STDMETHOD(GetDTCUnknown)(IUnknown ** pUnk); <br> <br>// Tx related functions <br>STDMETHOD(GetTransactionId)(BSTR * guidTx); <br> <br> <br>public: <br>// IRmWorkerPriv -- used by CITransactionResourceAsync <br>STDMETHOD(PrepareTx) (void); <br>STDMETHOD(CommitTx) (void); <br>STDMETHOD(AbortTx) (void); <br>STDMETHOD(GetState)(TXSTATE *eState); <br>STDMETHOD(SetState)(TXSTATE eState); <br>STDMETHOD(CleanupTx) (void); <br> <br>// ITransactionResourceAsync <br>STDMETHODIMPPrepareRequest(BOOL fRetaining,  <br>   DWORD grfRM, <br>   BOOL fWantMoniker, <br>   BOOL fSinglePhase); <br>STDMETHODIMPCommitRequest(DWORD grfRM, XACTUOW *pNewUOW); <br>STDMETHODIMPAbortRequest(BOID *pboidReason, <br> BOOL fRetaining, <br> XACTUOW *pNewUOW); <br>STDMETHODIMPTMDown(void); <br> <br>private: <br> <br> <br>HRESULTEnlistTx(void); <br>void SetStatus (RMSTATUS ermStatus); <br>RMSTATUS GetStatus (void); <br> <br>HRESULTUndoCopy(TCHAR *sFromFile, TCHAR *sToFile); <br>HRESULTUndoMove(TCHAR *sFromFile, TCHAR *sToFile); <br>HRESULTUndoDelete(TCHAR *sFileName, TCHAR *sTmpFile); <br>HRESULTUndoRename(TCHAR *sFromFile, TCHAR *sToFile); <br> <br>// Private methods on the resource manager object. <br>RECOVERYRCRecoverTx (IStream * pStream);// Restart recovery. <br>RECOVERYRCRecMapTransactions (IStream * pStream);// Scan log a remap transactions. <br>RECOVERY_RECORD *RecGetTransaction (GUID&amp; guidTxn); <br>// Get recovery record for transaction. <br>voidRecDiscardTransaction (GUID&amp; guidTxn); <br>// Discard transaction recovery record. <br>voidRecoverCleanup (void);// Cleanup recovery data structures. <br>HRESULTRollbackTx (void);// Undo the current transaction. <br> <br>// Private member variables <br>RMSTATUSm_eStatus;// Status of the last unsuccessful operation. <br>TXSTATEm_eTxState;// Transaction state. <br>IUnknown*m_punkDTC;// Pointer to MS DTC IUnknown. <br>ITransaction*m_pITx;// ITransaction interface pointer. <br>IResourceManager*m_pIResMgr; <br>GUIDm_guidTx;// Global unique id for transaction. <br>LONGm_isoLevel;// Isolation level of transaction. <br>RECOVERY_LIST *m_restartList;// List of transactions to be restarted. <br> <br> <br> <br>public: <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
