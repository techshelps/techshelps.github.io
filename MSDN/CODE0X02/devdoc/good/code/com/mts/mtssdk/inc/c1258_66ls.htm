<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MTXDM.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1270"></a>MTXDM.H</h2>
<pre><code>/* this ALWAYS GENERATED file contains the definitions for the interfaces */ <br> <br> <br>/* File created by MIDL compiler version 3.01.75 */ <br>/* at Fri Nov 14 05:07:23 1997 <br> */ <br>/* Compiler settings for mtxdm.idl: <br>    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext <br>    error checks: none <br>*/ <br>//@@MIDL_FILE_HEADING(  ) <br>#include "rpc.h" <br>#include "rpcndr.h" <br>#ifndef COM_NO_WINDOWS_H <br>#include "windows.h" <br>#include "ole2.h" <br>#endif /*COM_NO_WINDOWS_H*/ <br> <br>#ifndef __mtxdm_h__ <br>#define __mtxdm_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __IDispenserManager_FWD_DEFINED__ <br>#define __IDispenserManager_FWD_DEFINED__ <br>typedef interface IDispenserManager IDispenserManager; <br>#endif /* __IDispenserManager_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IHolder_FWD_DEFINED__ <br>#define __IHolder_FWD_DEFINED__ <br>typedef interface IHolder IHolder; <br>#endif /* __IHolder_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IDispenserDriver_FWD_DEFINED__ <br>#define __IDispenserDriver_FWD_DEFINED__ <br>typedef interface IDispenserDriver IDispenserDriver; <br>#endif /* __IDispenserDriver_FWD_DEFINED__ */ <br> <br> <br>/* header files for imported files */ <br>#include "oaidl.h" <br> <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>/**************************************** <br> * Generated header for interface: __MIDL_itf_mtxdm_0000 <br> * at Fri Nov 14 05:07:23 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>// ----------------------------------------------------------------------- <br>// mtxdm.h  -- Microsoft Transaction Server Resource Dispenser Interfaces <br>// <br>// This file provides the prototypes for the APIs and COM interfaces <br>// used by Microsoft Transaction Server Resource Dispensers. <br>// <br>// Microsoft Transaction Server 2.0 <br>// Copyright (c) 1996-1997 Microsoft Corporation.  All Rights Reserved. <br>// ----------------------------------------------------------------------- <br>  <br>#ifndef DECLSPEC_UUID <br>#if _MSC_VER &gt;= 1100 <br>#define DECLSPEC_UUID(x)    __declspec(uuid(x)) <br>#else <br>#define DECLSPEC_UUID(x) <br>#endif <br>#endif <br>typedef DWORD RESTYPID; <br> <br>typedef DWORD RESID; <br> <br>typedef LPOLESTR SRESID; <br> <br>typedef LPCOLESTR constSRESID; <br> <br>typedef DWORD RESOURCERATING; <br> <br>typedef long TIMEINSECS; <br> <br>typedef DWORD INSTID; <br> <br>typedef DWORD TRANSID; <br> <br> <br> <br>// <br>// Error Codes <br>// <br>#define MTXDM_E_ENLISTRESOURCEFAILED 0x8004E100 // return from EnlistResource, is then returned by AllocResource <br>  <br>// <br>// GetDispenserManager <br>// A Dispenser calls this API to get a reference to DispenserManager. <br>// <br>__declspec(dllimport) HRESULT __cdecl GetDispenserManager(IDispenserManager**); <br>  <br>// <br>// IDispenserManager <br>// Implemented by Dispenser Manager, called by all Dispensers. <br>// <br> <br> <br>extern RPC_IF_HANDLE __MIDL_itf_mtxdm_0000_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL_itf_mtxdm_0000_v0_0_s_ifspec; <br> <br>#ifndef __IDispenserManager_INTERFACE_DEFINED__ <br>#define __IDispenserManager_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IDispenserManager <br> * at Fri Nov 14 05:07:23 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IDispenserManager; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("5cb31e10-2b5f-11cf-be10-00aa00a2fa25") <br>    IDispenserManager : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT STDMETHODCALLTYPE RegisterDispenser(  <br>            /* [in] */ IDispenserDriver __RPC_FAR *__MIDL_0015, <br>            /* [in] */ LPCOLESTR szDispenserName, <br>            /* [out] */ IHolder __RPC_FAR *__RPC_FAR *__MIDL_0016) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE GetContext(  <br>            /* [out] */ INSTID __RPC_FAR *__MIDL_0017, <br>            /* [out] */ TRANSID __RPC_FAR *__MIDL_0018) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IDispenserManagerVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IDispenserManager __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IDispenserManager __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IDispenserManager __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RegisterDispenser )(  <br>            IDispenserManager __RPC_FAR * This, <br>            /* [in] */ IDispenserDriver __RPC_FAR *__MIDL_0015, <br>            /* [in] */ LPCOLESTR szDispenserName, <br>            /* [out] */ IHolder __RPC_FAR *__RPC_FAR *__MIDL_0016); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetContext )(  <br>            IDispenserManager __RPC_FAR * This, <br>            /* [out] */ INSTID __RPC_FAR *__MIDL_0017, <br>            /* [out] */ TRANSID __RPC_FAR *__MIDL_0018); <br>         <br>        END_INTERFACE <br>    } IDispenserManagerVtbl; <br> <br>    interface IDispenserManager <br>    { <br>        CONST_VTBL struct IDispenserManagerVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IDispenserManager_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IDispenserManager_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IDispenserManager_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IDispenserManager_RegisterDispenser(This,__MIDL_0015,szDispenserName,__MIDL_0016)\ <br>    (This)-&gt;lpVtbl -&gt; RegisterDispenser(This,__MIDL_0015,szDispenserName,__MIDL_0016) <br> <br>#define IDispenserManager_GetContext(This,__MIDL_0017,__MIDL_0018)\ <br>    (This)-&gt;lpVtbl -&gt; GetContext(This,__MIDL_0017,__MIDL_0018) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT STDMETHODCALLTYPE IDispenserManager_RegisterDispenser_Proxy(  <br>    IDispenserManager __RPC_FAR * This, <br>    /* [in] */ IDispenserDriver __RPC_FAR *__MIDL_0015, <br>    /* [in] */ LPCOLESTR szDispenserName, <br>    /* [out] */ IHolder __RPC_FAR *__RPC_FAR *__MIDL_0016); <br> <br> <br>void __RPC_STUB IDispenserManager_RegisterDispenser_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IDispenserManager_GetContext_Proxy(  <br>    IDispenserManager __RPC_FAR * This, <br>    /* [out] */ INSTID __RPC_FAR *__MIDL_0017, <br>    /* [out] */ TRANSID __RPC_FAR *__MIDL_0018); <br> <br> <br>void __RPC_STUB IDispenserManager_GetContext_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IDispenserManager_INTERFACE_DEFINED__ */ <br> <br> <br>/**************************************** <br> * Generated header for interface: __MIDL_itf_mtxdm_0094 <br> * at Fri Nov 14 05:07:23 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>// <br>// IHolder <br>// Implemented by Dispenser Manager, called by one Dispenser. <br>// <br> <br> <br>extern RPC_IF_HANDLE __MIDL_itf_mtxdm_0094_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL_itf_mtxdm_0094_v0_0_s_ifspec; <br> <br>#ifndef __IHolder_INTERFACE_DEFINED__ <br>#define __IHolder_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IHolder <br> * at Fri Nov 14 05:07:23 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IHolder; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("bf6a1850-2b45-11cf-be10-00aa00a2fa25") <br>    IHolder : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT STDMETHODCALLTYPE AllocResource(  <br>            /* [in] */ const RESTYPID __MIDL_0019, <br>            /* [out] */ RESID __RPC_FAR *__MIDL_0020) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE FreeResource(  <br>            /* [in] */ const RESID __MIDL_0021) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE TrackResource(  <br>            /* [in] */ const RESID __MIDL_0022) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE TrackResourceS(  <br>            /* [in] */ constSRESID __MIDL_0023) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE UntrackResource(  <br>            /* [in] */ const RESID __MIDL_0024, <br>            /* [in] */ const BOOL __MIDL_0025) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE UntrackResourceS(  <br>            /* [in] */ constSRESID __MIDL_0026, <br>            /* [in] */ const BOOL __MIDL_0027) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE Close( void) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE RequestDestroyResource(  <br>            /* [in] */ const RESID __MIDL_0028) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IHolderVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IHolder __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IHolder __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IHolder __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AllocResource )(  <br>            IHolder __RPC_FAR * This, <br>            /* [in] */ const RESTYPID __MIDL_0019, <br>            /* [out] */ RESID __RPC_FAR *__MIDL_0020); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *FreeResource )(  <br>            IHolder __RPC_FAR * This, <br>            /* [in] */ const RESID __MIDL_0021); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TrackResource )(  <br>            IHolder __RPC_FAR * This, <br>            /* [in] */ const RESID __MIDL_0022); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *TrackResourceS )(  <br>            IHolder __RPC_FAR * This, <br>            /* [in] */ constSRESID __MIDL_0023); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UntrackResource )(  <br>            IHolder __RPC_FAR * This, <br>            /* [in] */ const RESID __MIDL_0024, <br>            /* [in] */ const BOOL __MIDL_0025); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *UntrackResourceS )(  <br>            IHolder __RPC_FAR * This, <br>            /* [in] */ constSRESID __MIDL_0026, <br>            /* [in] */ const BOOL __MIDL_0027); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Close )(  <br>            IHolder __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RequestDestroyResource )(  <br>            IHolder __RPC_FAR * This, <br>            /* [in] */ const RESID __MIDL_0028); <br>         <br>        END_INTERFACE <br>    } IHolderVtbl; <br> <br>    interface IHolder <br>    { <br>        CONST_VTBL struct IHolderVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IHolder_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IHolder_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IHolder_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IHolder_AllocResource(This,__MIDL_0019,__MIDL_0020)\ <br>    (This)-&gt;lpVtbl -&gt; AllocResource(This,__MIDL_0019,__MIDL_0020) <br> <br>#define IHolder_FreeResource(This,__MIDL_0021)\ <br>    (This)-&gt;lpVtbl -&gt; FreeResource(This,__MIDL_0021) <br> <br>#define IHolder_TrackResource(This,__MIDL_0022)\ <br>    (This)-&gt;lpVtbl -&gt; TrackResource(This,__MIDL_0022) <br> <br>#define IHolder_TrackResourceS(This,__MIDL_0023)\ <br>    (This)-&gt;lpVtbl -&gt; TrackResourceS(This,__MIDL_0023) <br> <br>#define IHolder_UntrackResource(This,__MIDL_0024,__MIDL_0025)\ <br>    (This)-&gt;lpVtbl -&gt; UntrackResource(This,__MIDL_0024,__MIDL_0025) <br> <br>#define IHolder_UntrackResourceS(This,__MIDL_0026,__MIDL_0027)\ <br>    (This)-&gt;lpVtbl -&gt; UntrackResourceS(This,__MIDL_0026,__MIDL_0027) <br> <br>#define IHolder_Close(This)\ <br>    (This)-&gt;lpVtbl -&gt; Close(This) <br> <br>#define IHolder_RequestDestroyResource(This,__MIDL_0028)\ <br>    (This)-&gt;lpVtbl -&gt; RequestDestroyResource(This,__MIDL_0028) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT STDMETHODCALLTYPE IHolder_AllocResource_Proxy(  <br>    IHolder __RPC_FAR * This, <br>    /* [in] */ const RESTYPID __MIDL_0019, <br>    /* [out] */ RESID __RPC_FAR *__MIDL_0020); <br> <br> <br>void __RPC_STUB IHolder_AllocResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IHolder_FreeResource_Proxy(  <br>    IHolder __RPC_FAR * This, <br>    /* [in] */ const RESID __MIDL_0021); <br> <br> <br>void __RPC_STUB IHolder_FreeResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IHolder_TrackResource_Proxy(  <br>    IHolder __RPC_FAR * This, <br>    /* [in] */ const RESID __MIDL_0022); <br> <br> <br>void __RPC_STUB IHolder_TrackResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IHolder_TrackResourceS_Proxy(  <br>    IHolder __RPC_FAR * This, <br>    /* [in] */ constSRESID __MIDL_0023); <br> <br> <br>void __RPC_STUB IHolder_TrackResourceS_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IHolder_UntrackResource_Proxy(  <br>    IHolder __RPC_FAR * This, <br>    /* [in] */ const RESID __MIDL_0024, <br>    /* [in] */ const BOOL __MIDL_0025); <br> <br> <br>void __RPC_STUB IHolder_UntrackResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IHolder_UntrackResourceS_Proxy(  <br>    IHolder __RPC_FAR * This, <br>    /* [in] */ constSRESID __MIDL_0026, <br>    /* [in] */ const BOOL __MIDL_0027); <br> <br> <br>void __RPC_STUB IHolder_UntrackResourceS_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IHolder_Close_Proxy(  <br>    IHolder __RPC_FAR * This); <br> <br> <br>void __RPC_STUB IHolder_Close_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IHolder_RequestDestroyResource_Proxy(  <br>    IHolder __RPC_FAR * This, <br>    /* [in] */ const RESID __MIDL_0028); <br> <br> <br>void __RPC_STUB IHolder_RequestDestroyResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IHolder_INTERFACE_DEFINED__ */ <br> <br> <br>/**************************************** <br> * Generated header for interface: __MIDL_itf_mtxdm_0095 <br> * at Fri Nov 14 05:07:23 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>// <br>// IDispenserDriver <br>// Implemented by a Dispenser, called by Dispenser Manager. <br>// <br> <br> <br>extern RPC_IF_HANDLE __MIDL_itf_mtxdm_0095_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL_itf_mtxdm_0095_v0_0_s_ifspec; <br> <br>#ifndef __IDispenserDriver_INTERFACE_DEFINED__ <br>#define __IDispenserDriver_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IDispenserDriver <br> * at Fri Nov 14 05:07:23 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IDispenserDriver; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("208b3651-2b48-11cf-be10-00aa00a2fa25") <br>    IDispenserDriver : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT STDMETHODCALLTYPE CreateResource(  <br>            /* [in] */ const RESTYPID ResTypId, <br>            /* [out] */ RESID __RPC_FAR *pResId, <br>            /* [out] */ TIMEINSECS __RPC_FAR *pSecsFreeBeforeDestroy) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE RateResource(  <br>            /* [in] */ const RESTYPID ResTypId, <br>            /* [in] */ const RESID ResId, <br>            /* [in] */ const BOOL fRequiresTransactionEnlistment, <br>            /* [out] */ RESOURCERATING __RPC_FAR *pRating) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE EnlistResource(  <br>            /* [in] */ const RESID ResId, <br>            /* [in] */ const TRANSID TransId) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE ResetResource(  <br>            /* [in] */ const RESID ResId) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE DestroyResource(  <br>            /* [in] */ const RESID ResId) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE DestroyResourceS(  <br>            /* [in] */ constSRESID ResId) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IDispenserDriverVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IDispenserDriver __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IDispenserDriver __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IDispenserDriver __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateResource )(  <br>            IDispenserDriver __RPC_FAR * This, <br>            /* [in] */ const RESTYPID ResTypId, <br>            /* [out] */ RESID __RPC_FAR *pResId, <br>            /* [out] */ TIMEINSECS __RPC_FAR *pSecsFreeBeforeDestroy); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RateResource )(  <br>            IDispenserDriver __RPC_FAR * This, <br>            /* [in] */ const RESTYPID ResTypId, <br>            /* [in] */ const RESID ResId, <br>            /* [in] */ const BOOL fRequiresTransactionEnlistment, <br>            /* [out] */ RESOURCERATING __RPC_FAR *pRating); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *EnlistResource )(  <br>            IDispenserDriver __RPC_FAR * This, <br>            /* [in] */ const RESID ResId, <br>            /* [in] */ const TRANSID TransId); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ResetResource )(  <br>            IDispenserDriver __RPC_FAR * This, <br>            /* [in] */ const RESID ResId); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DestroyResource )(  <br>            IDispenserDriver __RPC_FAR * This, <br>            /* [in] */ const RESID ResId); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DestroyResourceS )(  <br>            IDispenserDriver __RPC_FAR * This, <br>            /* [in] */ constSRESID ResId); <br>         <br>        END_INTERFACE <br>    } IDispenserDriverVtbl; <br> <br>    interface IDispenserDriver <br>    { <br>        CONST_VTBL struct IDispenserDriverVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IDispenserDriver_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IDispenserDriver_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IDispenserDriver_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IDispenserDriver_CreateResource(This,ResTypId,pResId,pSecsFreeBeforeDestroy)\ <br>    (This)-&gt;lpVtbl -&gt; CreateResource(This,ResTypId,pResId,pSecsFreeBeforeDestroy) <br> <br>#define IDispenserDriver_RateResource(This,ResTypId,ResId,fRequiresTransactionEnlistment,pRating)\ <br>    (This)-&gt;lpVtbl -&gt; RateResource(This,ResTypId,ResId,fRequiresTransactionEnlistment,pRating) <br> <br>#define IDispenserDriver_EnlistResource(This,ResId,TransId)\ <br>    (This)-&gt;lpVtbl -&gt; EnlistResource(This,ResId,TransId) <br> <br>#define IDispenserDriver_ResetResource(This,ResId)\ <br>    (This)-&gt;lpVtbl -&gt; ResetResource(This,ResId) <br> <br>#define IDispenserDriver_DestroyResource(This,ResId)\ <br>    (This)-&gt;lpVtbl -&gt; DestroyResource(This,ResId) <br> <br>#define IDispenserDriver_DestroyResourceS(This,ResId)\ <br>    (This)-&gt;lpVtbl -&gt; DestroyResourceS(This,ResId) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT STDMETHODCALLTYPE IDispenserDriver_CreateResource_Proxy(  <br>    IDispenserDriver __RPC_FAR * This, <br>    /* [in] */ const RESTYPID ResTypId, <br>    /* [out] */ RESID __RPC_FAR *pResId, <br>    /* [out] */ TIMEINSECS __RPC_FAR *pSecsFreeBeforeDestroy); <br> <br> <br>void __RPC_STUB IDispenserDriver_CreateResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IDispenserDriver_RateResource_Proxy(  <br>    IDispenserDriver __RPC_FAR * This, <br>    /* [in] */ const RESTYPID ResTypId, <br>    /* [in] */ const RESID ResId, <br>    /* [in] */ const BOOL fRequiresTransactionEnlistment, <br>    /* [out] */ RESOURCERATING __RPC_FAR *pRating); <br> <br> <br>void __RPC_STUB IDispenserDriver_RateResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IDispenserDriver_EnlistResource_Proxy(  <br>    IDispenserDriver __RPC_FAR * This, <br>    /* [in] */ const RESID ResId, <br>    /* [in] */ const TRANSID TransId); <br> <br> <br>void __RPC_STUB IDispenserDriver_EnlistResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IDispenserDriver_ResetResource_Proxy(  <br>    IDispenserDriver __RPC_FAR * This, <br>    /* [in] */ const RESID ResId); <br> <br> <br>void __RPC_STUB IDispenserDriver_ResetResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IDispenserDriver_DestroyResource_Proxy(  <br>    IDispenserDriver __RPC_FAR * This, <br>    /* [in] */ const RESID ResId); <br> <br> <br>void __RPC_STUB IDispenserDriver_DestroyResource_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IDispenserDriver_DestroyResourceS_Proxy(  <br>    IDispenserDriver __RPC_FAR * This, <br>    /* [in] */ constSRESID ResId); <br> <br> <br>void __RPC_STUB IDispenserDriver_DestroyResourceS_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IDispenserDriver_INTERFACE_DEFINED__ */ <br> <br> <br>/**************************************** <br> * Generated header for interface: __MIDL_itf_mtxdm_0096 <br> * at Fri Nov 14 05:07:23 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>#ifdef USE_UUIDOF_FOR_IID_ <br>#define  IID_IHolder             __uuidof(IIHolder) <br>#define  IID_IDispenserManager   __uuidof(IDispenserManager) <br>#define  IID_IDispenserDriver    __uuidof(IDispenserDriver) <br>#endif <br> <br> <br>extern RPC_IF_HANDLE __MIDL_itf_mtxdm_0096_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL_itf_mtxdm_0096_v0_0_s_ifspec; <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
