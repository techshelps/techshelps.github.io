<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RMDLG.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1233"></a>RMDLG.CPP</h2>
<pre><code><br>/******************************************************************************\ <br>******************************************************************************** <br>* Filename: RmDlg.cpp <br>* <br>* Description: Implementation of CRmDlg <br>* <br>* This file is provided as part of the Microsoft Transaction Server <br>* Software Development Kit <br>* <br>*THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT  <br>*WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,  <br>*INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES  <br>*OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR  <br>*PURPOSE. <br>* <br>* Copyright (C) 1997 Microsoft Corporation, All rights reserved <br>******************************************************************************** <br>\******************************************************************************/ <br>#include "stdafx.h" <br>#include "RmDlg.h" <br>#include "rmoptions.h" <br>#include "RmOptionsDlg.h" <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CRmDlg <br> <br>CRmDlg::CRmDlg() <br>{ <br>m_pOptions = NULL; <br>} <br> <br>CRmDlg::~CRmDlg() <br>{ <br>} <br> <br>LRESULT CRmDlg::OnInitDialog(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL&amp; bHandled) <br>{ <br> <br>_ASSERTE(m_pOptions); <br>SetDlgItemText(IDC_LOGDIR, m_pOptions -&gt; GetLogDir()); <br>SetDlgItemText(IDC_RECOVERDIR, m_pOptions -&gt; GetRecDir()); <br> <br>return 1;  // Let the system set the focus <br>} <br> <br>LRESULT CRmDlg::OnOK(WORD wNotifyCode, WORD wID, HWND hWndCtl, BOOL&amp; bHandled) <br>{ <br>return OnExit(wNotifyCode, wID, hWndCtl, bHandled); <br> <br>} <br> <br>LRESULT CRmDlg::OnCancel(WORD wNotifyCode, WORD wID, HWND hWndCtl, BOOL&amp; bHandled) <br>{ <br>return OnExit(wNotifyCode, wID, hWndCtl, bHandled); <br>} <br> <br>void CRmDlg::SetUsageCount(long lCount) <br>{ <br>if (!m_hWnd) <br>return; <br> <br>TCHAR sz[16]; <br>wsprintf((TCHAR *)sz,L"%ld", lCount); <br>SetDlgItemText(IDC_USAGE, sz); <br>UpdateWindow(); <br>} <br> <br>LRESULT CRmDlg::OnExit(WORD wNotify, WORD wID, HWND hWnd, BOOL&amp; bHandled) <br>{ <br> <br>long lLockCount = _Module.GetLockCount(); <br>if (lLockCount &gt; 1) <br>{ <br> <br>TCHAR sz[128]; <br>wsprintf((TCHAR *)sz,L"There are outstanding references on this object!\n\nLockCount is: %ld\nClosing it will probably cause a GP Fault!\nDo you wish to close the RM?", lLockCount - 1); <br>if (::MessageBox(NULL, sz,L"File Resource Manager", MB_ICONSTOP|MB_YESNO) == IDNO) <br>return 0; <br> <br>try <br>{ <br>while (_Module.Unlock() &gt; 1) <br>; <br>} <br>catch(...) <br>{ <br> <br> <br>} <br> <br>} <br>else <br>{ <br> <br> <br>if (::MessageBox(NULL, L"Do you wish to close the RM?",L"File Resource Manager", MB_ICONQUESTION|MB_YESNO) == IDNO) <br>return 0; <br> <br>} <br> <br> <br>bHandled = TRUE; <br>DWORD dwThreadID = GetCurrentThreadId(); <br>PostThreadMessage(dwThreadID, WM_QUIT, 0, 0); <br>return 0; <br>} <br> <br>void CRmDlg::SetLockCount(long lCount) <br>{ <br> <br>if (!m_hWnd) <br>return; <br> <br>TCHAR sz[16]; <br>wsprintf((TCHAR *)sz,L"%ld", lCount); <br>SetDlgItemText(IDC_LOCKS, sz); <br>UpdateWindow(); <br>} <br>LRESULT CRmDlg::OnOptions(WORD wNotify, WORD wID, HWND hWnd, BOOL&amp; bHandled) <br>{ <br>_ASSERTE(m_pOptions); <br>CRmOptionsDlg dlg(m_pOptions); <br>if (dlg.DoModal() == IDOK) <br>{ <br>SetDlgItemText(IDC_LOGDIR, dlg.GetLogDir()); <br>SetDlgItemText(IDC_RECOVERDIR, dlg.GetRecoverDir()); <br> <br>} <br>return 1;  // Let the system set the focus <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
