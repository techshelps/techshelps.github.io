<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MTXADMIN.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1268"></a>MTXADMIN.H</h2>
<pre><code>/* this ALWAYS GENERATED file contains the definitions for the interfaces */ <br> <br> <br>/* File created by MIDL compiler version 3.01.75 */ <br>/* at Fri Nov 14 05:07:21 1997 <br> */ <br>/* Compiler settings for mtxadmin.idl: <br>    Oicf (OptLev=i2), W1, Zp8, env=Win32, ms_ext, c_ext <br>    error checks: none <br>*/ <br>//@@MIDL_FILE_HEADING(  ) <br>#include "rpc.h" <br>#include "rpcndr.h" <br>#ifndef COM_NO_WINDOWS_H <br>#include "windows.h" <br>#include "ole2.h" <br>#endif /*COM_NO_WINDOWS_H*/ <br> <br>#ifndef __mtxadmin_h__ <br>#define __mtxadmin_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __ICatalog_FWD_DEFINED__ <br>#define __ICatalog_FWD_DEFINED__ <br>typedef interface ICatalog ICatalog; <br>#endif /* __ICatalog_FWD_DEFINED__ */ <br> <br> <br>#ifndef __ICatalogObject_FWD_DEFINED__ <br>#define __ICatalogObject_FWD_DEFINED__ <br>typedef interface ICatalogObject ICatalogObject; <br>#endif /* __ICatalogObject_FWD_DEFINED__ */ <br> <br> <br>#ifndef __ICatalogCollection_FWD_DEFINED__ <br>#define __ICatalogCollection_FWD_DEFINED__ <br>typedef interface ICatalogCollection ICatalogCollection; <br>#endif /* __ICatalogCollection_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IComponentUtil_FWD_DEFINED__ <br>#define __IComponentUtil_FWD_DEFINED__ <br>typedef interface IComponentUtil IComponentUtil; <br>#endif /* __IComponentUtil_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IPackageUtil_FWD_DEFINED__ <br>#define __IPackageUtil_FWD_DEFINED__ <br>typedef interface IPackageUtil IPackageUtil; <br>#endif /* __IPackageUtil_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IRemoteComponentUtil_FWD_DEFINED__ <br>#define __IRemoteComponentUtil_FWD_DEFINED__ <br>typedef interface IRemoteComponentUtil IRemoteComponentUtil; <br>#endif /* __IRemoteComponentUtil_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IRoleAssociationUtil_FWD_DEFINED__ <br>#define __IRoleAssociationUtil_FWD_DEFINED__ <br>typedef interface IRoleAssociationUtil IRoleAssociationUtil; <br>#endif /* __IRoleAssociationUtil_FWD_DEFINED__ */ <br> <br> <br>#ifndef __Catalog_FWD_DEFINED__ <br>#define __Catalog_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class Catalog Catalog; <br>#else <br>typedef struct Catalog Catalog; <br>#endif /* __cplusplus */ <br> <br>#endif /* __Catalog_FWD_DEFINED__ */ <br> <br> <br>#ifndef __CatalogObject_FWD_DEFINED__ <br>#define __CatalogObject_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class CatalogObject CatalogObject; <br>#else <br>typedef struct CatalogObject CatalogObject; <br>#endif /* __cplusplus */ <br> <br>#endif /* __CatalogObject_FWD_DEFINED__ */ <br> <br> <br>#ifndef __CatalogCollection_FWD_DEFINED__ <br>#define __CatalogCollection_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class CatalogCollection CatalogCollection; <br>#else <br>typedef struct CatalogCollection CatalogCollection; <br>#endif /* __cplusplus */ <br> <br>#endif /* __CatalogCollection_FWD_DEFINED__ */ <br> <br> <br>#ifndef __ComponentUtil_FWD_DEFINED__ <br>#define __ComponentUtil_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class ComponentUtil ComponentUtil; <br>#else <br>typedef struct ComponentUtil ComponentUtil; <br>#endif /* __cplusplus */ <br> <br>#endif /* __ComponentUtil_FWD_DEFINED__ */ <br> <br> <br>#ifndef __PackageUtil_FWD_DEFINED__ <br>#define __PackageUtil_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class PackageUtil PackageUtil; <br>#else <br>typedef struct PackageUtil PackageUtil; <br>#endif /* __cplusplus */ <br> <br>#endif /* __PackageUtil_FWD_DEFINED__ */ <br> <br> <br>#ifndef __RemoteComponentUtil_FWD_DEFINED__ <br>#define __RemoteComponentUtil_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class RemoteComponentUtil RemoteComponentUtil; <br>#else <br>typedef struct RemoteComponentUtil RemoteComponentUtil; <br>#endif /* __cplusplus */ <br> <br>#endif /* __RemoteComponentUtil_FWD_DEFINED__ */ <br> <br> <br>#ifndef __RoleAssociationUtil_FWD_DEFINED__ <br>#define __RoleAssociationUtil_FWD_DEFINED__ <br> <br>#ifdef __cplusplus <br>typedef class RoleAssociationUtil RoleAssociationUtil; <br>#else <br>typedef struct RoleAssociationUtil RoleAssociationUtil; <br>#endif /* __cplusplus */ <br> <br>#endif /* __RoleAssociationUtil_FWD_DEFINED__ */ <br> <br> <br>/* header files for imported files */ <br>#include "unknwn.h" <br>#include "oaidl.h" <br> <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>/**************************************** <br> * Generated header for interface: __MIDL_itf_mtxadmin_0000 <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>// ----------------------------------------------------------------------- <br>// mtxadmin.h  -- Microsoft Transaction Server Programming Interfaces <br>// <br>// This file provides the prototypes for the APIs and COM interfaces <br>// used by Microsoft Transaction Server applications. <br>// <br>// Microsoft Transaction Server SDK <br>// Copyright (c) 1997 Microsoft Corporation.  All Rights Reserved. <br>// ----------------------------------------------------------------------- <br>#include &lt;objbase.h&gt; <br>#ifndef DECLSPEC_UUID <br>#if _MSC_VER &gt;= 1100 <br>#define DECLSPEC_UUID(x)    __declspec(uuid(x)) <br>#else <br>#define DECLSPEC_UUID(x) <br>#endif <br>#endif <br> <br> <br>extern RPC_IF_HANDLE __MIDL_itf_mtxadmin_0000_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL_itf_mtxadmin_0000_v0_0_s_ifspec; <br> <br>#ifndef __ICatalog_INTERFACE_DEFINED__ <br>#define __ICatalog_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: ICatalog <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_ICatalog; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("6eb22870-8a19-11d0-81b6-00a0c9231c29") <br>    ICatalog : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCollection(  <br>            /* [in] */ BSTR bstrCollName, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Connect(  <br>            /* [in] */ BSTR bstrConnectString, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MajorVersion(  <br>            /* [retval][out] */ long __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_MinorVersion(  <br>            /* [retval][out] */ long __RPC_FAR *retval) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct ICatalogVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            ICatalog __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            ICatalog __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCollection )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [in] */ BSTR bstrCollName, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Connect )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [in] */ BSTR bstrConnectString, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MajorVersion )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *retval); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_MinorVersion )(  <br>            ICatalog __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *retval); <br>         <br>        END_INTERFACE <br>    } ICatalogVtbl; <br> <br>    interface ICatalog <br>    { <br>        CONST_VTBL struct ICatalogVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define ICatalog_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define ICatalog_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define ICatalog_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define ICatalog_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define ICatalog_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define ICatalog_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define ICatalog_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define ICatalog_GetCollection(This,bstrCollName,ppCatalogCollection)\ <br>    (This)-&gt;lpVtbl -&gt; GetCollection(This,bstrCollName,ppCatalogCollection) <br> <br>#define ICatalog_Connect(This,bstrConnectString,ppCatalogCollection)\ <br>    (This)-&gt;lpVtbl -&gt; Connect(This,bstrConnectString,ppCatalogCollection) <br> <br>#define ICatalog_get_MajorVersion(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_MajorVersion(This,retval) <br> <br>#define ICatalog_get_MinorVersion(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_MinorVersion(This,retval) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalog_GetCollection_Proxy(  <br>    ICatalog __RPC_FAR * This, <br>    /* [in] */ BSTR bstrCollName, <br>    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection); <br> <br> <br>void __RPC_STUB ICatalog_GetCollection_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalog_Connect_Proxy(  <br>    ICatalog __RPC_FAR * This, <br>    /* [in] */ BSTR bstrConnectString, <br>    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection); <br> <br> <br>void __RPC_STUB ICatalog_Connect_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalog_get_MajorVersion_Proxy(  <br>    ICatalog __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalog_get_MajorVersion_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalog_get_MinorVersion_Proxy(  <br>    ICatalog __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalog_get_MinorVersion_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __ICatalog_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __ICatalogObject_INTERFACE_DEFINED__ <br>#define __ICatalogObject_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: ICatalogObject <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_ICatalogObject; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("6eb22871-8a19-11d0-81b6-00a0c9231c29") <br>    ICatalogObject : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Value(  <br>            /* [in] */ BSTR bstrPropName, <br>            /* [retval][out] */ VARIANT __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE put_Value(  <br>            /* [in] */ BSTR bstrPropName, <br>            /* [in] */ VARIANT val) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Key(  <br>            /* [retval][out] */ VARIANT __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name(  <br>            /* [retval][out] */ VARIANT __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsPropertyReadOnly(  <br>            /* [in] */ BSTR bstrPropName, <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Valid(  <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IsPropertyWriteOnly(  <br>            /* [in] */ BSTR bstrPropName, <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct ICatalogObjectVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            ICatalogObject __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            ICatalogObject __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Value )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [in] */ BSTR bstrPropName, <br>            /* [retval][out] */ VARIANT __RPC_FAR *retval); <br>         <br>        /* [helpstring][id][propput] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Value )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [in] */ BSTR bstrPropName, <br>            /* [in] */ VARIANT val); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Key )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [retval][out] */ VARIANT __RPC_FAR *retval); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [retval][out] */ VARIANT __RPC_FAR *retval); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsPropertyReadOnly )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [in] */ BSTR bstrPropName, <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Valid )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *IsPropertyWriteOnly )(  <br>            ICatalogObject __RPC_FAR * This, <br>            /* [in] */ BSTR bstrPropName, <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br>         <br>        END_INTERFACE <br>    } ICatalogObjectVtbl; <br> <br>    interface ICatalogObject <br>    { <br>        CONST_VTBL struct ICatalogObjectVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define ICatalogObject_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define ICatalogObject_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define ICatalogObject_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define ICatalogObject_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define ICatalogObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define ICatalogObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define ICatalogObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define ICatalogObject_get_Value(This,bstrPropName,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_Value(This,bstrPropName,retval) <br> <br>#define ICatalogObject_put_Value(This,bstrPropName,val)\ <br>    (This)-&gt;lpVtbl -&gt; put_Value(This,bstrPropName,val) <br> <br>#define ICatalogObject_get_Key(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_Key(This,retval) <br> <br>#define ICatalogObject_get_Name(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_Name(This,retval) <br> <br>#define ICatalogObject_IsPropertyReadOnly(This,bstrPropName,retval)\ <br>    (This)-&gt;lpVtbl -&gt; IsPropertyReadOnly(This,bstrPropName,retval) <br> <br>#define ICatalogObject_get_Valid(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_Valid(This,retval) <br> <br>#define ICatalogObject_IsPropertyWriteOnly(This,bstrPropName,retval)\ <br>    (This)-&gt;lpVtbl -&gt; IsPropertyWriteOnly(This,bstrPropName,retval) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogObject_get_Value_Proxy(  <br>    ICatalogObject __RPC_FAR * This, <br>    /* [in] */ BSTR bstrPropName, <br>    /* [retval][out] */ VARIANT __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogObject_get_Value_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propput] */ HRESULT STDMETHODCALLTYPE ICatalogObject_put_Value_Proxy(  <br>    ICatalogObject __RPC_FAR * This, <br>    /* [in] */ BSTR bstrPropName, <br>    /* [in] */ VARIANT val); <br> <br> <br>void __RPC_STUB ICatalogObject_put_Value_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogObject_get_Key_Proxy(  <br>    ICatalogObject __RPC_FAR * This, <br>    /* [retval][out] */ VARIANT __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogObject_get_Key_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogObject_get_Name_Proxy(  <br>    ICatalogObject __RPC_FAR * This, <br>    /* [retval][out] */ VARIANT __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogObject_get_Name_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalogObject_IsPropertyReadOnly_Proxy(  <br>    ICatalogObject __RPC_FAR * This, <br>    /* [in] */ BSTR bstrPropName, <br>    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogObject_IsPropertyReadOnly_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogObject_get_Valid_Proxy(  <br>    ICatalogObject __RPC_FAR * This, <br>    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogObject_get_Valid_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalogObject_IsPropertyWriteOnly_Proxy(  <br>    ICatalogObject __RPC_FAR * This, <br>    /* [in] */ BSTR bstrPropName, <br>    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogObject_IsPropertyWriteOnly_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __ICatalogObject_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __ICatalogCollection_INTERFACE_DEFINED__ <br>#define __ICatalogCollection_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: ICatalogCollection <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_ICatalogCollection; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("6eb22872-8a19-11d0-81b6-00a0c9231c29") <br>    ICatalogCollection : public IDispatch <br>    { <br>    public: <br>        virtual /* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum(  <br>            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumVariant) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Item(  <br>            /* [in] */ long lIndex, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogObject) = 0; <br>         <br>        virtual /* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE get_Count(  <br>            /* [retval][out] */ long __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Remove(  <br>            /* [in] */ long lIndex) = 0; <br>         <br>        virtual /* [helpstring] */ HRESULT STDMETHODCALLTYPE Add(  <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogObject) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE Populate( void) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE SaveChanges(  <br>            /* [retval][out] */ long __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCollection(  <br>            /* [in] */ BSTR bstrCollName, <br>            /* [in] */ VARIANT varObjectKey, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_Name(  <br>            /* [retval][out] */ VARIANT __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_AddEnabled(  <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_RemoveEnabled(  <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetUtilInterface(  <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppUtil) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataStoreMajorVersion(  <br>            /* [retval][out] */ long __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE get_DataStoreMinorVersion(  <br>            /* [retval][out] */ long __RPC_FAR *retval) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PopulateByKey(  <br>            /* [in] */ SAFEARRAY __RPC_FAR * aKeys) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE PopulateByQuery(  <br>            /* [in] */ BSTR bstrQueryString, <br>            /* [in] */ long lQueryType) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct ICatalogCollectionVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            ICatalogCollection __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            ICatalogCollection __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [id][restricted][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get__NewEnum )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumVariant); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Item )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ long lIndex, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogObject); <br>         <br>        /* [helpstring][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *retval); <br>         <br>        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Remove )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ long lIndex); <br>         <br>        /* [helpstring] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Add )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogObject); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Populate )(  <br>            ICatalogCollection __RPC_FAR * This); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SaveChanges )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *retval); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCollection )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ BSTR bstrCollName, </code></pre>
<p>
</p>
<pre><code>/* [in] */ VARIANT varObjectKey, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ VARIANT __RPC_FAR *retval); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_AddEnabled )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_RemoveEnabled )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetUtilInterface )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppUtil); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DataStoreMajorVersion )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *retval); <br>         <br>        /* [helpstring][id][propget] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_DataStoreMinorVersion )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [retval][out] */ long __RPC_FAR *retval); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PopulateByKey )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ SAFEARRAY __RPC_FAR * aKeys); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *PopulateByQuery )(  <br>            ICatalogCollection __RPC_FAR * This, <br>            /* [in] */ BSTR bstrQueryString, <br>            /* [in] */ long lQueryType); <br>         <br>        END_INTERFACE <br>    } ICatalogCollectionVtbl; <br> <br>    interface ICatalogCollection <br>    { <br>        CONST_VTBL struct ICatalogCollectionVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define ICatalogCollection_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define ICatalogCollection_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define ICatalogCollection_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define ICatalogCollection_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define ICatalogCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define ICatalogCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define ICatalogCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define ICatalogCollection_get__NewEnum(This,ppEnumVariant)\ <br>    (This)-&gt;lpVtbl -&gt; get__NewEnum(This,ppEnumVariant) <br> <br>#define ICatalogCollection_get_Item(This,lIndex,ppCatalogObject)\ <br>    (This)-&gt;lpVtbl -&gt; get_Item(This,lIndex,ppCatalogObject) <br> <br>#define ICatalogCollection_get_Count(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_Count(This,retval) <br> <br>#define ICatalogCollection_Remove(This,lIndex)\ <br>    (This)-&gt;lpVtbl -&gt; Remove(This,lIndex) <br> <br>#define ICatalogCollection_Add(This,ppCatalogObject)\ <br>    (This)-&gt;lpVtbl -&gt; Add(This,ppCatalogObject) <br> <br>#define ICatalogCollection_Populate(This)\ <br>    (This)-&gt;lpVtbl -&gt; Populate(This) <br> <br>#define ICatalogCollection_SaveChanges(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; SaveChanges(This,retval) <br> <br>#define ICatalogCollection_GetCollection(This,bstrCollName,varObjectKey,ppCatalogCollection)\ <br>    (This)-&gt;lpVtbl -&gt; GetCollection(This,bstrCollName,varObjectKey,ppCatalogCollection) <br> <br>#define ICatalogCollection_get_Name(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_Name(This,retval) <br> <br>#define ICatalogCollection_get_AddEnabled(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_AddEnabled(This,retval) <br> <br>#define ICatalogCollection_get_RemoveEnabled(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_RemoveEnabled(This,retval) <br> <br>#define ICatalogCollection_GetUtilInterface(This,ppUtil)\ <br>    (This)-&gt;lpVtbl -&gt; GetUtilInterface(This,ppUtil) <br> <br>#define ICatalogCollection_get_DataStoreMajorVersion(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_DataStoreMajorVersion(This,retval) <br> <br>#define ICatalogCollection_get_DataStoreMinorVersion(This,retval)\ <br>    (This)-&gt;lpVtbl -&gt; get_DataStoreMinorVersion(This,retval) <br> <br>#define ICatalogCollection_PopulateByKey(This,aKeys)\ <br>    (This)-&gt;lpVtbl -&gt; PopulateByKey(This,aKeys) <br> <br>#define ICatalogCollection_PopulateByQuery(This,bstrQueryString,lQueryType)\ <br>    (This)-&gt;lpVtbl -&gt; PopulateByQuery(This,bstrQueryString,lQueryType) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [id][restricted][propget] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_get__NewEnum_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppEnumVariant); <br> <br> <br>void __RPC_STUB ICatalogCollection_get__NewEnum_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_get_Item_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [in] */ long lIndex, <br>    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogObject); <br> <br> <br>void __RPC_STUB ICatalogCollection_get_Item_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][propget] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_get_Count_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogCollection_get_Count_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_Remove_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [in] */ long lIndex); <br> <br> <br>void __RPC_STUB ICatalogCollection_Remove_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_Add_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogObject); <br> <br> <br>void __RPC_STUB ICatalogCollection_Add_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_Populate_Proxy(  <br>    ICatalogCollection __RPC_FAR * This); <br> <br> <br>void __RPC_STUB ICatalogCollection_Populate_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_SaveChanges_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogCollection_SaveChanges_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_GetCollection_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [in] */ BSTR bstrCollName, <br>    /* [in] */ VARIANT varObjectKey, <br>    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppCatalogCollection); <br> <br> <br>void __RPC_STUB ICatalogCollection_GetCollection_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_get_Name_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ VARIANT __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogCollection_get_Name_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_get_AddEnabled_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogCollection_get_AddEnabled_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_get_RemoveEnabled_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogCollection_get_RemoveEnabled_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_GetUtilInterface_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppUtil); <br> <br> <br>void __RPC_STUB ICatalogCollection_GetUtilInterface_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_get_DataStoreMajorVersion_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogCollection_get_DataStoreMajorVersion_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id][propget] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_get_DataStoreMinorVersion_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [retval][out] */ long __RPC_FAR *retval); <br> <br> <br>void __RPC_STUB ICatalogCollection_get_DataStoreMinorVersion_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_PopulateByKey_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [in] */ SAFEARRAY __RPC_FAR * aKeys); <br> <br> <br>void __RPC_STUB ICatalogCollection_PopulateByKey_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ICatalogCollection_PopulateByQuery_Proxy(  <br>    ICatalogCollection __RPC_FAR * This, <br>    /* [in] */ BSTR bstrQueryString, <br>    /* [in] */ long lQueryType); <br> <br> <br>void __RPC_STUB ICatalogCollection_PopulateByQuery_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __ICatalogCollection_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IComponentUtil_INTERFACE_DEFINED__ <br>#define __IComponentUtil_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IComponentUtil <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IComponentUtil; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("6eb22873-8a19-11d0-81b6-00a0c9231c29") <br>    IComponentUtil : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InstallComponent(  <br>            /* [in] */ BSTR bstrDLLFile, <br>            /* [in] */ BSTR bstrTypelibFile, <br>            /* [in] */ BSTR bstrProxyStubDLLFile) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ImportComponent(  <br>            /* [in] */ BSTR bstrCLSID) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ImportComponentByName(  <br>            /* [in] */ BSTR bstrProgID) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetCLSIDs(  <br>            /* [in] */ BSTR bstrDLLFile, <br>            /* [in] */ BSTR bstrTypelibFile, <br>            /* [out] */ SAFEARRAY __RPC_FAR * __RPC_FAR *aCLSIDs) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IComponentUtilVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IComponentUtil __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IComponentUtil __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InstallComponent )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrDLLFile, <br>            /* [in] */ BSTR bstrTypelibFile, <br>            /* [in] */ BSTR bstrProxyStubDLLFile); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ImportComponent )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrCLSID); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ImportComponentByName )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrProgID); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetCLSIDs )(  <br>            IComponentUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrDLLFile, <br>            /* [in] */ BSTR bstrTypelibFile, <br>            /* [out] */ SAFEARRAY __RPC_FAR * __RPC_FAR *aCLSIDs); <br>         <br>        END_INTERFACE <br>    } IComponentUtilVtbl; <br> <br>    interface IComponentUtil <br>    { <br>        CONST_VTBL struct IComponentUtilVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IComponentUtil_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IComponentUtil_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IComponentUtil_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IComponentUtil_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define IComponentUtil_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define IComponentUtil_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define IComponentUtil_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define IComponentUtil_InstallComponent(This,bstrDLLFile,bstrTypelibFile,bstrProxyStubDLLFile)\ <br>    (This)-&gt;lpVtbl -&gt; InstallComponent(This,bstrDLLFile,bstrTypelibFile,bstrProxyStubDLLFile) <br> <br>#define IComponentUtil_ImportComponent(This,bstrCLSID)\ <br>    (This)-&gt;lpVtbl -&gt; ImportComponent(This,bstrCLSID) <br> <br>#define IComponentUtil_ImportComponentByName(This,bstrProgID)\ <br>    (This)-&gt;lpVtbl -&gt; ImportComponentByName(This,bstrProgID) <br> <br>#define IComponentUtil_GetCLSIDs(This,bstrDLLFile,bstrTypelibFile,aCLSIDs)\ <br>    (This)-&gt;lpVtbl -&gt; GetCLSIDs(This,bstrDLLFile,bstrTypelibFile,aCLSIDs) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IComponentUtil_InstallComponent_Proxy(  <br>    IComponentUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrDLLFile, <br>    /* [in] */ BSTR bstrTypelibFile, <br>    /* [in] */ BSTR bstrProxyStubDLLFile); <br> <br> <br>void __RPC_STUB IComponentUtil_InstallComponent_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IComponentUtil_ImportComponent_Proxy(  <br>    IComponentUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrCLSID); <br> <br> <br>void __RPC_STUB IComponentUtil_ImportComponent_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IComponentUtil_ImportComponentByName_Proxy(  <br>    IComponentUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrProgID); <br> <br> <br>void __RPC_STUB IComponentUtil_ImportComponentByName_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IComponentUtil_GetCLSIDs_Proxy(  <br>    IComponentUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrDLLFile, <br>    /* [in] */ BSTR bstrTypelibFile, <br>    /* [out] */ SAFEARRAY __RPC_FAR * __RPC_FAR *aCLSIDs); <br> <br> <br>void __RPC_STUB IComponentUtil_GetCLSIDs_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IComponentUtil_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IPackageUtil_INTERFACE_DEFINED__ <br>#define __IPackageUtil_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IPackageUtil <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IPackageUtil; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("6eb22874-8a19-11d0-81b6-00a0c9231c29") <br>    IPackageUtil : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InstallPackage(  <br>            /* [in] */ BSTR bstrPackageFile, <br>            /* [in] */ BSTR bstrInstallPath, <br>            /* [in] */ long lOptions) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ExportPackage(  <br>            /* [in] */ BSTR bstrPackageID, <br>            /* [in] */ BSTR bstrPackageFile, <br>            /* [in] */ long lOptions) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ShutdownPackage(  <br>            /* [in] */ BSTR bstrPackageID) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IPackageUtilVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IPackageUtil __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IPackageUtil __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IPackageUtil __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            IPackageUtil __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            IPackageUtil __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            IPackageUtil __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            IPackageUtil __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InstallPackage )(  <br>            IPackageUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrPackageFile, <br>            /* [in] */ BSTR bstrInstallPath, <br>            /* [in] */ long lOptions); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ExportPackage )(  <br>            IPackageUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrPackageID, <br>            /* [in] */ BSTR bstrPackageFile, <br>            /* [in] */ long lOptions); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *ShutdownPackage )(  <br>            IPackageUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrPackageID); <br>         <br>        END_INTERFACE <br>    } IPackageUtilVtbl; <br> <br>    interface IPackageUtil <br>    { <br>        CONST_VTBL struct IPackageUtilVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IPackageUtil_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IPackageUtil_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IPackageUtil_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IPackageUtil_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define IPackageUtil_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define IPackageUtil_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define IPackageUtil_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define IPackageUtil_InstallPackage(This,bstrPackageFile,bstrInstallPath,lOptions)\ <br>    (This)-&gt;lpVtbl -&gt; InstallPackage(This,bstrPackageFile,bstrInstallPath,lOptions) <br> <br>#define IPackageUtil_ExportPackage(This,bstrPackageID,bstrPackageFile,lOptions)\ <br>    (This)-&gt;lpVtbl -&gt; ExportPackage(This,bstrPackageID,bstrPackageFile,lOptions) <br> <br>#define IPackageUtil_ShutdownPackage(This,bstrPackageID)\ <br>    (This)-&gt;lpVtbl -&gt; ShutdownPackage(This,bstrPackageID) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IPackageUtil_InstallPackage_Proxy(  <br>    IPackageUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrPackageFile, <br>    /* [in] */ BSTR bstrInstallPath, <br>    /* [in] */ long lOptions); <br> <br> <br>void __RPC_STUB IPackageUtil_InstallPackage_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IPackageUtil_ExportPackage_Proxy(  <br>    IPackageUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrPackageID, <br>    /* [in] */ BSTR bstrPackageFile, <br>    /* [in] */ long lOptions); <br> <br> <br>void __RPC_STUB IPackageUtil_ExportPackage_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IPackageUtil_ShutdownPackage_Proxy(  <br>    IPackageUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrPackageID); <br> <br> <br>void __RPC_STUB IPackageUtil_ShutdownPackage_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IPackageUtil_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IRemoteComponentUtil_INTERFACE_DEFINED__ <br>#define __IRemoteComponentUtil_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IRemoteComponentUtil <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IRemoteComponentUtil; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("6eb22875-8a19-11d0-81b6-00a0c9231c29") <br>    IRemoteComponentUtil : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InstallRemoteComponent(  <br>            /* [in] */ BSTR bstrServer, <br>            /* [in] */ BSTR bstrPackageID, <br>            /* [in] */ BSTR bstrCLSID) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE InstallRemoteComponentByName(  <br>            /* [in] */ BSTR bstrServer, <br>            /* [in] */ BSTR bstrPackageName, <br>            /* [in] */ BSTR bstrProgID) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IRemoteComponentUtilVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IRemoteComponentUtil __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IRemoteComponentUtil __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IRemoteComponentUtil __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            IRemoteComponentUtil __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            IRemoteComponentUtil __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            IRemoteComponentUtil __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            IRemoteComponentUtil __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InstallRemoteComponent )(  <br>            IRemoteComponentUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrServer, <br>            /* [in] */ BSTR bstrPackageID, <br>            /* [in] */ BSTR bstrCLSID); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *InstallRemoteComponentByName )(  <br>            IRemoteComponentUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrServer, <br>            /* [in] */ BSTR bstrPackageName, <br>            /* [in] */ BSTR bstrProgID); <br>         <br>        END_INTERFACE <br>    } IRemoteComponentUtilVtbl; <br> <br>    interface IRemoteComponentUtil <br>    { <br>        CONST_VTBL struct IRemoteComponentUtilVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS </code></pre>
<p>
</p>
<pre><code><br> <br>#define IRemoteComponentUtil_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IRemoteComponentUtil_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IRemoteComponentUtil_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IRemoteComponentUtil_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define IRemoteComponentUtil_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define IRemoteComponentUtil_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define IRemoteComponentUtil_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define IRemoteComponentUtil_InstallRemoteComponent(This,bstrServer,bstrPackageID,bstrCLSID)\ <br>    (This)-&gt;lpVtbl -&gt; InstallRemoteComponent(This,bstrServer,bstrPackageID,bstrCLSID) <br> <br>#define IRemoteComponentUtil_InstallRemoteComponentByName(This,bstrServer,bstrPackageName,bstrProgID)\ <br>    (This)-&gt;lpVtbl -&gt; InstallRemoteComponentByName(This,bstrServer,bstrPackageName,bstrProgID) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IRemoteComponentUtil_InstallRemoteComponent_Proxy(  <br>    IRemoteComponentUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrServer, <br>    /* [in] */ BSTR bstrPackageID, <br>    /* [in] */ BSTR bstrCLSID); <br> <br> <br>void __RPC_STUB IRemoteComponentUtil_InstallRemoteComponent_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IRemoteComponentUtil_InstallRemoteComponentByName_Proxy(  <br>    IRemoteComponentUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrServer, <br>    /* [in] */ BSTR bstrPackageName, <br>    /* [in] */ BSTR bstrProgID); <br> <br> <br>void __RPC_STUB IRemoteComponentUtil_InstallRemoteComponentByName_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IRemoteComponentUtil_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IRoleAssociationUtil_INTERFACE_DEFINED__ <br>#define __IRoleAssociationUtil_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IRoleAssociationUtil <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][dual][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IRoleAssociationUtil; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("6eb22876-8a19-11d0-81b6-00a0c9231c29") <br>    IRoleAssociationUtil : public IDispatch <br>    { <br>    public: <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AssociateRole(  <br>            /* [in] */ BSTR bstrRoleID) = 0; <br>         <br>        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE AssociateRoleByName(  <br>            /* [in] */ BSTR bstrRoleName) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IRoleAssociationUtilVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IRoleAssociationUtil __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IRoleAssociationUtil __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IRoleAssociationUtil __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(  <br>            IRoleAssociationUtil __RPC_FAR * This, <br>            /* [out] */ UINT __RPC_FAR *pctinfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(  <br>            IRoleAssociationUtil __RPC_FAR * This, <br>            /* [in] */ UINT iTInfo, <br>            /* [in] */ LCID lcid, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(  <br>            IRoleAssociationUtil __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames, <br>            /* [in] */ UINT cNames, <br>            /* [in] */ LCID lcid, <br>            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(  <br>            IRoleAssociationUtil __RPC_FAR * This, <br>            /* [in] */ DISPID dispIdMember, <br>            /* [in] */ REFIID riid, <br>            /* [in] */ LCID lcid, <br>            /* [in] */ WORD wFlags, <br>            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams, <br>            /* [out] */ VARIANT __RPC_FAR *pVarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo, <br>            /* [out] */ UINT __RPC_FAR *puArgErr); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AssociateRole )(  <br>            IRoleAssociationUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrRoleID); <br>         <br>        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AssociateRoleByName )(  <br>            IRoleAssociationUtil __RPC_FAR * This, <br>            /* [in] */ BSTR bstrRoleName); <br>         <br>        END_INTERFACE <br>    } IRoleAssociationUtilVtbl; <br> <br>    interface IRoleAssociationUtil <br>    { <br>        CONST_VTBL struct IRoleAssociationUtilVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IRoleAssociationUtil_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IRoleAssociationUtil_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IRoleAssociationUtil_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IRoleAssociationUtil_GetTypeInfoCount(This,pctinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfoCount(This,pctinfo) <br> <br>#define IRoleAssociationUtil_GetTypeInfo(This,iTInfo,lcid,ppTInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTypeInfo(This,iTInfo,lcid,ppTInfo) <br> <br>#define IRoleAssociationUtil_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)\ <br>    (This)-&gt;lpVtbl -&gt; GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) <br> <br>#define IRoleAssociationUtil_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)\ <br>    (This)-&gt;lpVtbl -&gt; Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) <br> <br> <br>#define IRoleAssociationUtil_AssociateRole(This,bstrRoleID)\ <br>    (This)-&gt;lpVtbl -&gt; AssociateRole(This,bstrRoleID) <br> <br>#define IRoleAssociationUtil_AssociateRoleByName(This,bstrRoleName)\ <br>    (This)-&gt;lpVtbl -&gt; AssociateRoleByName(This,bstrRoleName) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IRoleAssociationUtil_AssociateRole_Proxy(  <br>    IRoleAssociationUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrRoleID); <br> <br> <br>void __RPC_STUB IRoleAssociationUtil_AssociateRole_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE IRoleAssociationUtil_AssociateRoleByName_Proxy(  <br>    IRoleAssociationUtil __RPC_FAR * This, <br>    /* [in] */ BSTR bstrRoleName); <br> <br> <br>void __RPC_STUB IRoleAssociationUtil_AssociateRoleByName_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IRoleAssociationUtil_INTERFACE_DEFINED__ */ <br> <br> <br> <br>#ifndef __MTSAdmin_LIBRARY_DEFINED__ <br>#define __MTSAdmin_LIBRARY_DEFINED__ <br> <br>/**************************************** <br> * Generated header for library: MTSAdmin <br> * at Fri Nov 14 05:07:21 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [helpstring][version][uuid] */  <br> <br> <br>typedef /* [public][helpstring] */  <br>enum __MIDL___MIDL_itf_mtxadmin_0107_0001 <br>    {mtsInstallUsers= 1 <br>    }MTSPackageInstallOptions; <br> <br>typedef /* [public][helpstring] */  <br>enum __MIDL___MIDL_itf_mtxadmin_0107_0002 <br>    {mtsExportUsers= 1 <br>    }MTSPackageExportOptions; <br> <br>typedef /* [public][helpstring] */  <br>enum __MIDL___MIDL_itf_mtxadmin_0107_0003 <br>    {mtsErrObjectErrors= 0x80110401, <br>mtsErrObjectInvalid= 0x80110402, <br>mtsErrKeyMissing= 0x80110403, <br>mtsErrAlreadyInstalled= 0x80110404, <br>mtsErrDownloadFailed= 0x80110405, <br>mtsErrPDFWriteFail= 0x80110407, <br>mtsErrPDFReadFail= 0x80110408, <br>mtsErrPDFVersion= 0x80110409, <br>mtsErrCoReqCompInstalled= 0x80110410, <br>mtsErrBadPath= 0x8011040a, <br>mtsErrPackageExists= 0x8011040b, <br>mtsErrRoleExists= 0x8011040c, <br>mtsErrCantCopyFile= 0x8011040d, <br>mtsErrNoTypeLib= 0x8011040e, <br>mtsErrNoUser= 0x8011040f, <br>mtsErrInvalidUserids= 0x80110410, <br>mtsErrNoRegistryCLSID= 0x80110411, <br>mtsErrBadRegistryProgID= 0x80110412, <br>mtsErrAuthenticationLevel= 0x80110413, <br>mtsErrUserPasswdNotValid= 0x80110414, <br>mtsErrNoRegistryRead= 0x80110415, <br>mtsErrNoRegistryWrite= 0x80110416, <br>mtsErrNoRegistryRepair= 0x80110417, <br>mtsErrCLSIDOrIIDMismatch= 0x80110418, <br>mtsErrRemoteInterface= 0x80110419, <br>mtsErrDllRegisterServer= 0x8011041a, <br>mtsErrNoServerShare= 0x8011041b, <br>mtsErrNoAccessToUNC= 0x8011041c, <br>mtsErrDllLoadFailed= 0x8011041d, <br>mtsErrBadRegistryLibID= 0x8011041e, <br>mtsErrPackDirNotFound= 0x8011041f, <br>mtsErrTreatAs= 0x80110420, <br>mtsErrBadForward= 0x80110421, <br>mtsErrBadIID= 0x80110422, <br>mtsErrRegistrarFailed= 0x80110423, <br>mtsErrCompFileDoesNotExist= 0x80110424, <br>mtsErrCompFileLoadDLLFail= 0x80110425, <br>mtsErrCompFileGetClassObj= 0x80110426, <br>mtsErrCompFileClassNotAvail= 0x80110427, <br>mtsErrCompFileBadTLB= 0x80110428, <br>mtsErrCompFileNotInstallable= 0x80110429, <br>mtsErrNotChangeable= 0x8011042a, <br>mtsErrNotDeletable= 0x8011042b, <br>mtsErrSession= 0x8011042c, <br>mtsErrCompFileNoRegistrar= 0x80110434 <br>    }MTSAdminErrorCodes; <br> <br>#define E_MTS_OBJECTERRORS mtsErrObjectErrors <br>#define E_MTS_OBJECTINVALIDmtsErrObjectInvalid <br>#define E_MTS_KEYMISSINGmtsErrKeyMissing <br>#define E_MTS_ALREADYINSTALLEDmtsErrAlreadyInstalled <br>#define E_MTS_DOWNLOADFAILEDmtsErrDownloadFailed <br>#define E_MTS_PDFWRITEFAILmtsErrPDFWriteFail <br>#define E_MTS_PDFREADFAILmtsErrPDFReadFail <br>#define E_MTS_PDFVERSIONmtsErrPDFVersion <br>#define E_MTS_COREQCOMPINSTALLEDmtsErrCoReqCompInstalled <br>#define E_MTS_BADPATHmtsErrBadPath <br>#define E_MTS_PACKAGEEXISTSmtsErrPackageExists <br>#define E_MTS_ROLEEXISTSmtsErrRoleExists <br>#define E_MTS_CANTCOPYFILEmtsErrCantCopyFile <br>#define E_MTS_NOTYPELIBmtsErrNoTypeLib <br>#define E_MTS_NOUSERmtsErrNoUser <br>#define E_MTS_INVALIDUSERIDSmtsErrInvalidUserids <br>#define E_MTS_NOREGISTRYCLSIDmtsErrNoRegistryCLSID <br>#define E_MTS_BADREGISTRYPROGIDmtsErrBadRegistryProgID <br>#define E_MTS_AUTHENTICATIONLEVELmtsErrAuthenticationLevel <br>#define E_MTS_USERPASSWDNOTVALIDmtsErrUserPasswdNotValid <br>#define E_MTS_NOREGISTRYREADmtsErrNoRegistryRead <br>#define E_MTS_NOREGISTRYWRITEmtsErrNoRegistryWrite <br>#define E_MTS_NOREGISTRYREPAIRmtsErrNoRegistryRepair <br>#define E_MTS_CLSIDORIIDMISMATCHmtsErrCLSIDOrIIDMismatch <br>#define E_MTS_REMOTEINTERFACEmtsErrRemoteInterface <br>#define E_MTS_DLLREGISTERSERVERmtsErrDllRegisterServer <br>#define E_MTS_NOSERVERSHAREmtsErrNoServerShare <br>#define E_MTS_NOACCESSTOUNCmtsErrNoAccessToUNC <br>#define E_MTS_DLLLOADFAILEDmtsErrDllLoadFailed <br>#define E_MTS_BADREGISTRYLIBIDmtsErrBadRegistryLibID <br>#define E_MTS_PACKDIRNOTFOUNDmtsErrPackDirNotFound <br>#define E_MTS_TREATASmtsErrTreatAs <br>#define E_MTS_BADFORWARDmtsErrBadForward <br>#define E_MTS_BADIIDmtsErrBadIID <br>#define E_MTS_REGISTRARFAILEDmtsErrRegistrarFailed <br>#define E_MTS_COMPFILE_DOESNOTEXISTmtsErrCompFileDoesNotExist <br>#define E_MTS_COMPFILE_LOADDLLFAILmtsErrCompFileLoadDLLFail <br>#define E_MTS_COMPFILE_GETCLASSOBJmtsErrCompFileGetClassObj <br>#define E_MTS_COMPFILE_CLASSNOTAVAILmtsErrCompFileClassNotAvail <br>#define E_MTS_COMPFILE_BADTLBmtsErrCompFileBadTLB <br>#define E_MTS_COMPFILE_NOTINSTALLABLEmtsErrCompFileNotInstallable <br>#define E_MTS_NOTCHANGEABLEmtsErrNotChangeable <br>#define E_MTS_NOTDELETEABLEmtsErrNotDeleteable <br>#define E_MTS_SESSIONmtsErrSession <br>#define E_MTS_COMPFILE_NOREGISTRARmtsErrCompFileNoRegistrar <br> <br>EXTERN_C const IID LIBID_MTSAdmin; <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_Catalog; <br> <br>class DECLSPEC_UUID("6eb22881-8a19-11d0-81b6-00a0c9231c29") <br>Catalog; <br>#endif <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_CatalogObject; <br> <br>class DECLSPEC_UUID("6eb22882-8a19-11d0-81b6-00a0c9231c29") <br>CatalogObject; <br>#endif <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_CatalogCollection; <br> <br>class DECLSPEC_UUID("6eb22883-8a19-11d0-81b6-00a0c9231c29") <br>CatalogCollection; <br>#endif <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_ComponentUtil; <br> <br>class DECLSPEC_UUID("6eb22884-8a19-11d0-81b6-00a0c9231c29") <br>ComponentUtil; <br>#endif <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_PackageUtil; <br> <br>class DECLSPEC_UUID("6eb22885-8a19-11d0-81b6-00a0c9231c29") <br>PackageUtil; <br>#endif <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_RemoteComponentUtil; <br> <br>class DECLSPEC_UUID("6eb22886-8a19-11d0-81b6-00a0c9231c29") <br>RemoteComponentUtil; <br>#endif <br> <br>#ifdef __cplusplus <br>EXTERN_C const CLSID CLSID_RoleAssociationUtil; <br> <br>class DECLSPEC_UUID("6eb22887-8a19-11d0-81b6-00a0c9231c29") <br>RoleAssociationUtil; <br>#endif <br>#endif /* __MTSAdmin_LIBRARY_DEFINED__ */ <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br>unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * );  <br>void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * );  <br> <br>unsigned long             __RPC_USER  LPSAFEARRAY_UserSize(     unsigned long __RPC_FAR *, unsigned long            , LPSAFEARRAY __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  LPSAFEARRAY_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, LPSAFEARRAY __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  LPSAFEARRAY_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, LPSAFEARRAY __RPC_FAR * );  <br>void                      __RPC_USER  LPSAFEARRAY_UserFree(     unsigned long __RPC_FAR *, LPSAFEARRAY __RPC_FAR * );  <br> <br>unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * );  <br>unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * );  <br>void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * );  <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
