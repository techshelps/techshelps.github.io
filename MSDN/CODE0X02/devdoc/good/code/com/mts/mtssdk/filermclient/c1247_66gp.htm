<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILERMCLIENT.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1249"></a>FILERMCLIENT.CPP</h2>
<pre><code><br>/******************************************************************************\ <br>******************************************************************************** <br>* Filename: FileRmClient.cpp <br>* <br>* Description: Defines the class behaviors for the application. <br>* <br>* This file is provided as part of the Microsoft Transaction Server <br>* Software Development Kit <br>* <br>*THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT  <br>*WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,  <br>*INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES  <br>*OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR  <br>*PURPOSE. <br>* <br>* Copyright (C) 1997 Microsoft Corporation, All rights reserved <br>******************************************************************************** <br>\******************************************************************************/ <br>#include "stdafx.h" <br>#include "FileRmClient.h" <br>#include "FileRmClientDlg.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CFileRmClientApp <br> <br>BEGIN_MESSAGE_MAP(CFileRmClientApp, CWinApp) <br>//{{AFX_MSG_MAP(CFileRmClientApp) <br>// NOTE - the ClassWizard will add and remove mapping macros here. <br>//    DO NOT EDIT what you see in these blocks of generated code! <br>//}}AFX_MSG <br>ON_COMMAND(ID_HELP, CWinApp::OnHelp) <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CFileRmClientApp construction <br> <br>CFileRmClientApp::CFileRmClientApp() <br>{ <br>// TODO: add construction code here, <br>// Place all significant initialization in InitInstance <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// The one and only CFileRmClientApp object <br> <br>CFileRmClientApp theApp; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CFileRmClientApp initialization <br> <br>BOOL CFileRmClientApp::InitInstance() <br>{ <br>// Initialize OLE libraries <br>if (!AfxOleInit()) <br>{ <br>AfxMessageBox(IDP_OLE_INIT_FAILED); <br>return FALSE; <br>} <br> <br>AfxEnableControlContainer(); <br> <br>// Standard initialization <br>// If you are not using these features and wish to reduce the size <br>//  of your final executable, you should remove from the following <br>//  the specific initialization routines you do not need. <br> <br>#ifdef _AFXDLL <br>Enable3dControls();// Call this when using MFC in a shared DLL <br>#else <br>Enable3dControlsStatic();// Call this when linking to MFC statically <br>#endif <br> <br>// Parse the command line to see if launched as OLE server <br>if (RunEmbedded() || RunAutomated()) <br>{ <br>// Register all OLE server (factories) as running.  This enables the <br>//  OLE libraries to create objects from other applications. <br>COleTemplateServer::RegisterAll(); <br> <br>// Application was run with /Embedding or /Automation.  Don't show the <br>//  main window in this case. <br>return TRUE; <br>} <br> <br>// When a server application is launched stand-alone, it is a good idea <br>//  to update the system registry in case it has been damaged. <br>COleObjectFactory::UpdateRegistryAll(); <br> <br>CFileRmClientDlg dlg; <br>m_pMainWnd = &amp;dlg; <br>int nResponse = dlg.DoModal(); <br>if (nResponse == IDOK) <br>{ <br>// TODO: Place code here to handle when the dialog is <br>//  dismissed with OK <br>} <br>else if (nResponse == IDCANCEL) <br>{ <br>// TODO: Place code here to handle when the dialog is <br>//  dismissed with Cancel <br>} <br> <br>// Since the dialog has been closed, return FALSE so that we exit the <br>//  application, rather than start the application's message pump. <br>return FALSE; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
