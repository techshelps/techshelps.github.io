<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STDAFX.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1208"></a>STDAFX.H</h2>
<pre><code>// Filename: stdafx.h <br>// <br>// Description: include file for standard system include files, <br>//or project specific include files that are used frequently, <br>//but are changed infrequently <br>// <br>// This file is provided as part of the Microsoft Transaction Server <br>// Software Development Kit <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT  <br>// WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,  <br>// INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES  <br>// OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR  <br>// PURPOSE. <br>// <br>// Copyright (C) 1997 Microsoft Corporation, All rights reserved <br> <br>#define _ATL_STATIC_REGISTRY <br> <br>#include &lt;atlbase.h&gt; <br>//You may derive a class from CComModule and use it if you want to override <br>//something, but do not change the name of _Module <br>extern CComModule _Module; <br>#include &lt;atlcom.h&gt; <br> <br>#define THROW_ERR(exp,str) {if (FAILED (hr = (exp))) {lErrFlag = 0; pErrMsg = _T(str); throw hr;}} <br>#define THROW_STR(str) { hr = APP_ERROR; lErrFlag = 1; pErrMsg = str; throw hr;} <br>#define RETHROW_ERR(exp) { if (FAILED(hr = (exp))) {lErrFlag = 2; throw hr;}} <br> <br>#define APP_ERROR 0x80004100 <br> <br> <br>inline BSTR TCHAR2BSTR (TCHAR* szBuf) { <br> <br>WCHAR* wszBuf; <br> <br>#ifndef UNICODE <br>wszBuf = new WCHAR [512]; <br>MultiByteToWideChar( CP_ACP, 0, szBuf, -1, wszBuf, 512 ); <br>#else <br>wszBuf = szBuf; <br>#endif <br> <br>BSTR bstrNew = ::SysAllocString (wszBuf); <br> <br>#ifndef UNICODE <br>delete [] wszBuf; <br>#endif <br> <br>return bstrNew; <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
