<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COMPUTER.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1349"></a>COMPUTER.H</h2>
<pre><code>// Filename: Computer.h <br>// <br>// Description:  Definition of CComputer <br>// <br>// This file is provided as part of the Microsoft Transaction Server Samples <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT  <br>// WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,  <br>// INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES  <br>// OF MERCHANTABILITY AND/OR FITNESS FOR A  PARTICULAR  <br>// PURPOSE. <br>// <br>// Copyright (C) 1997 Microsoft Corporation, All rights reserved <br> <br>#if !defined(AFX_COMPUTER_H__AA22C9A7_FD72_11D0_B5DC_00C04FB957D8__INCLUDED_) <br>#define AFX_COMPUTER_H__AA22C9A7_FD72_11D0_B5DC_00C04FB957D8__INCLUDED_ <br> <br>#if _MSC_VER &gt;= 1000 <br>#pragma once <br>#endif // _MSC_VER &gt;= 1000 <br> <br>#include "resource.h"       // main symbols <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CComputer <br> <br>class CComputer :  <br>public CComDualImpl&lt;IComputer, &amp;IID_IComputer, &amp;LIBID_TSERVERLib&gt;,  <br>public ISupportErrorInfo, <br>public CComObjectRoot, <br>public CComCoClass&lt;CComputer,&amp;CLSID_Computer&gt; <br>{ <br>public: <br>CComputer() {} <br> <br>private: <br>long plField [3][3]; <br> <br>float CComputer::Evaluate (long lX, long lY); <br>long CComputer::LineScan (long lPlayer, long&amp; lX, long&amp; lY); <br>bool CComputer::IsWin (long lPlayer); <br>long CComputer::HowManyTurns (); <br>void CComputer::GetMove (long lGameID, VARIANT_BOOL bEasy, long&amp; lX, long&amp; lY); <br>HRESULT CComputer::LoadArray (long lGameID); <br>HRESULT CComputer::SaveArray (long lGameID);  <br>void inline CComputer::InitArray () { <br>for (int i = 0; i &lt; 3; i ++) <br>for (int j = 0; j &lt; 3; j ++) <br>plField[i][j] = 0; <br>} <br> <br>BEGIN_COM_MAP(CComputer) <br>COM_INTERFACE_ENTRY(IDispatch) <br>COM_INTERFACE_ENTRY(IComputer) <br>COM_INTERFACE_ENTRY(ISupportErrorInfo) <br>END_COM_MAP() <br>//DECLARE_NOT_AGGREGATABLE(CComputer)  <br>// Remove the comment from the line above if you don't want your object to  <br>// support aggregation.  <br> <br>DECLARE_REGISTRY_RESOURCEID(IDR_Computer) <br>// ISupportsErrorInfo <br>STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid); <br> <br>// IComputer <br>public: <br>STDMETHODIMP AddNewGame (IN VARIANT_BOOL bEasy, OUT VARIANT* pvGameID, OUT VARIANT* pvOrder, OUT VARIANT* pvX, OUT VARIANT* pvY); <br>STDMETHODIMP NewMove (IN long lGameID, IN VARIANT_BOOL bEasy, IN long lX, IN long lY, OUT VARIANT* pvMyX, OUT VARIANT* pvMyY, OUT VARIANT* pvWin); <br> <br>}; <br> <br>#endif // !defined(AFX_COMPUTER_H__AA22C9A7_FD72_11D0_B5DC_00C04FB957D8__INCLUDED_) </code></pre>
<p>&nbsp;</p></body>
</HTML>
