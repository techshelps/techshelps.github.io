<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DIBCLS.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context140"></a>DIBCLS.H</h2>
<pre><code>///////////////////////////////////////////////////////////////////////////// <br>// DibCls.h <br>///////////////////////////////////////////////////////////////////////////// <br>// Copyright 1995 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>///////////////////////////////////////////////////////////////////////////// <br>// <br>// contains the prototypes for the CDibFIle and CDibSection classes <br>// <br> <br>#ifndef __DIBCLASSES_H <br>#define __DIBCLASSES_H <br> <br> <br>// <br>//class CDibFile <br>// <br>class CDibFile  <br>{ <br>public: <br>CDibFile(); <br>~CDibFile(); <br> <br>HRESULTGetFileHeader(IStream *); <br>HRESULTGetInfoHeader(IStream *); <br> <br>DWORDHeaderSize(){ return(m_headerSize); } <br>DWORDCalcImageSize(); <br> <br>operator BITMAPINFO * (){ return(m_bmi.p); } <br>operator BITMAPINFOHEADER * (){ return(&amp;m_bmi.p-&gt;bmiHeader); } <br> <br>private: <br> <br>DWORDm_headerSize; <br>union  <br>{ <br>BITMAPINFO *p; <br>unsigned char *bytes; <br>} m_bmi; <br>}; <br> <br>class CDibSection <br>{ <br>public: <br>CDibSection(); <br>~CDibSection(); <br> <br>HRESULT Create( CDibFile&amp; ); <br>HRESULTSetup( HDC basedOnThisDC); <br>HRESULT ReadFrom( IStream * strm, DWORD amount ); <br>HRESULTPaintTo( HDC hdc, int x = 0, int y = 0 ); <br>HRESULTGetSize( SIZEL &amp;sz); <br> <br>DWORDImageSize() { return(m_imageSize); } <br>voidImageSize(DWORD dw) { m_imageSize = dw; } <br> <br>operator HANDLE() { return m_handle; } <br> <br>unsigned char * Base() { return(m_bitsBase); } <br> <br>private: <br>unsigned char *m_bitsBase; <br>unsigned char *m_current; <br>HDCm_memDC; <br>HBITMAPm_handle; <br>HBITMAPm_oldBitmap; <br>LONGm_h; <br>LONGm_w; <br>DWORDm_imageSize; <br>}; <br> <br> <br> <br>#endif __DIBCLASSES_H </code></pre>
<p>&nbsp;</p></body>
</HTML>
