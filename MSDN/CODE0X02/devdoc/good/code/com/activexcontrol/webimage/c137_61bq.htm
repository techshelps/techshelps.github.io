<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CATHELP.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context146"></a>CATHELP.CPP</h2>
<pre><code>//=--------------------------------------------------------------------------= <br>// CatHelp.Cpp <br>//=--------------------------------------------------------------------------= <br>// Copyright 1995 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//=--------------------------------------------------------------------------= <br>// <br>// contains the Component Category helper functions. <br>// <br> <br>#include "comcat.h" <br> <br>// Helper function to create a component category and associated description <br>HRESULT CreateComponentCategory(CATID catid, WCHAR* catDescription) <br>{ <br> <br>    ICatRegister* pcr = NULL ; <br>    HRESULT hr = S_OK ; <br> <br>    hr = CoCreateInstance(CLSID_StdComponentCategoriesMgr,  <br>NULL, CLSCTX_INPROC_SERVER, IID_ICatRegister, (void**)&amp;pcr); <br>if (FAILED(hr)) <br>return hr; <br> <br>    // Make sure the HKCR\Component Categories\{..catid...} <br>    // key is registered <br>    CATEGORYINFO catinfo; <br>    catinfo.catid = catid; <br>    catinfo.lcid = 0x0409 ; // english <br> <br>// Make sure the provided description is not too long. <br>// Only copy the first 127 characters if it is <br>int len = wcslen(catDescription); <br>if (len&gt;127) <br>len = 127; <br>    wcsncpy(catinfo.szDescription, catDescription, len); <br>// Make sure the description is null terminated <br>catinfo.szDescription[len] = '\0'; <br> <br>    hr = pcr-&gt;RegisterCategories(1, &amp;catinfo); <br>pcr-&gt;Release(); <br> <br>return hr; <br>} <br> <br>// Helper function to register a CLSID as belonging to a component category <br>HRESULT RegisterCLSIDInCategory(REFCLSID clsid, CATID catid) <br>{ <br>// Register your component categories information. <br>    ICatRegister* pcr = NULL ; <br>    HRESULT hr = S_OK ; <br>    hr = CoCreateInstance(CLSID_StdComponentCategoriesMgr,  <br>NULL, CLSCTX_INPROC_SERVER, IID_ICatRegister, (void**)&amp;pcr); <br>    if (SUCCEEDED(hr)) <br>    { <br>       // Register this category as being "implemented" by <br>       // the class. <br>       CATID rgcatid[1] ; <br>       rgcatid[0] = catid; <br>       hr = pcr-&gt;RegisterClassImplCategories(clsid, 1, rgcatid); <br>    } <br> <br>    if (pcr != NULL) <br>        pcr-&gt;Release(); <br>   <br>return hr; <br>} <br> <br>// Helper function to unregister a CLSID as belonging to a component category <br>HRESULT UnRegisterCLSIDInCategory(REFCLSID clsid, CATID catid) <br>{ <br>    ICatRegister* pcr = NULL ; <br>    HRESULT hr = S_OK ; <br>    hr = CoCreateInstance(CLSID_StdComponentCategoriesMgr,  <br>NULL, CLSCTX_INPROC_SERVER, IID_ICatRegister, (void**)&amp;pcr); <br>    if (SUCCEEDED(hr)) <br>    { <br>       // Unregister this category as being "implemented" by <br>       // the class. <br>       CATID rgcatid[1] ; <br>       rgcatid[0] = catid; <br>       hr = pcr-&gt;UnRegisterClassImplCategories(clsid, 1, rgcatid); <br>    } <br> <br>    if (pcr != NULL) <br>        pcr-&gt;Release(); <br>   <br>return hr; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
