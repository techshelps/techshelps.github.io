<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TODOCTL.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context133"></a>TODOCTL.H</h2>
<pre><code>//=--------------------------------------------------------------------------= <br>// ToDoCtl.H <br>//=--------------------------------------------------------------------------= <br>// Copyright 1995 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//=--------------------------------------------------------------------------= <br>// <br>// class declaration for the ToDo control. <br>// <br>#ifndef _TODOCTL_H_ <br> <br>#include "IPServer.H" <br> <br>// DOCOBJ: include CDocObj.H for DocObjects instead of CCtrlObj. <br>#include "CDocObj.H"                 <br> <br>#include "ToDoSvrIfc.H" <br>#include "Dispids.H" <br> <br>typedef struct tagTODOCTLSTATE { <br> <br>    // TODO: put state variables here, and probably get rid of fGarbage, unless <br>    // you have a real need for it <br>    // <br>    VARIANT_BOOL fGarbage; <br> <br>} TODOCTLSTATE; <br> <br>//=--------------------------------------------------------------------------= <br>// CToDoControl <br>//=--------------------------------------------------------------------------= <br>// our control. <br>// <br>// DOCOBJ: use CDocumentObject as the base class instead of COleControl or  <br>//         CInternetControl <br>// <br>class CToDoControl : public CDocumentObject, public IToDo, public ISupportErrorInfo { <br> <br>  public: <br>    // IUnknown methods <br>    // <br>    DECLARE_STANDARD_UNKNOWN(); <br> <br>    // IDispatch methods <br>    // <br>    DECLARE_STANDARD_DISPATCH(); <br> <br>    // ISupportErrorInfo methods <br>    // <br>    DECLARE_STANDARD_SUPPORTERRORINFO(); <br> <br>    // IToDo methods <br>    // <br>    // TODO: copy over the method declarations from ToDoInterfaces.H <br>    //       don't forget to remove the PURE from them. <br>    // <br>    STDMETHOD_(void, AboutBox)(THIS); <br> <br>    // OLE Control stuff follows: <br>    // <br>    CToDoControl(IUnknown *pUnkOuter); <br>    virtual ~CToDoControl(); <br> <br>    // static creation function.  all controls must have one of these! <br>    // <br>    static IUnknown *Create(IUnknown *); <br> <br>  private: <br>    // overridables that the control must implement. <br>    // <br>    STDMETHOD(LoadBinaryState)(IStream *pStream); <br>    STDMETHOD(SaveBinaryState)(IStream *pStream); <br>    STDMETHOD(LoadTextState)(IPropertyBag *pPropertyBag, IErrorLog *pErrorLog); <br>    STDMETHOD(SaveTextState)(IPropertyBag *pPropertyBag, BOOL fWriteDefault); <br>    STDMETHOD(OnDraw)(DWORD dvAspect, HDC hdcDraw, LPCRECTL prcBounds, LPCRECTL prcWBounds, HDC hicTargetDev, BOOL fOptimize); <br>    virtual LRESULT WindowProc(UINT msg, WPARAM wParam, LPARAM lParam); <br>    virtual BOOL    RegisterClassData(void); <br> <br>    virtual HRESULT InternalQueryInterface(REFIID, void **); <br>    virtual BOOL    BeforeCreateWindow(DWORD *pdwWindowStyle, DWORD *pdwExWindowStyle, LPSTR pszWindowTitle); <br> <br>    // private state information. <br>    // <br>    TODOCTLSTATE m_state; <br>}; <br> <br> <br>// TODO: if you have an array of verbs, then add an extern here with the name <br>//       of it, so that you can include it in the DEFINE_DOCOBJECT. <br>//       ie.  extern VERBINFO m_ToDoCustomVerbs []; <br>// <br>extern const GUID    *rgToDoPropPages []; <br> <br>// DOCOBJ: Use DEFINE_DOCOBJECT macro instead of DEFIND_CONTROL macro to  <br>//         set up information about the DocObject. The last 4 items are  <br>//         specific to DocObjects. <br>// <br>DEFINE_DOCOBJECT(ToDo, <br>    &amp;CLSID_ToDo, <br>    "ToDoCtl", <br>    CToDoControl::Create, <br>    1, <br>    &amp;IID_IToDo, <br>    "ToDo.HLP", <br>    &amp;DIID_DToDoEvents, <br>    OLEMISC_SETCLIENTSITEFIRST|OLEMISC_ACTIVATEWHENVISIBLE|OLEMISC_RECOMPOSEONRESIZE|OLEMISC_CANTLINKINSIDE|OLEMISC_INSIDEOUT, <br>    0, <br>    RESID_TOOLBOX_BITMAP, <br>    "ToDoWndClass", <br>    1, <br>    rgToDoPropPages, <br>    0, <br>    NULL, <br>    DOCMISC_CANTOPENEDIT|DOCMISC_NOFILESUPPORT,     // dwDocMiscStatus <br>    FALSE,                                          // no IPrint support <br>    IDS_DEFAULTEXT,                                 // resource ID of default file extension <br>    IDS_FILEDESCRIPTION,                            // resource ID of file description <br>    ); <br> <br>#define _TODOCTL_H_ <br>#endif // _TODOCTL_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
