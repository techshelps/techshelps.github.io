<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DEBUG.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context94"></a>DEBUG.CPP</h2>
<pre><code>//=--------------------------------------------------------------------------= <br>// Debug.Cpp <br>//=--------------------------------------------------------------------------= <br>// Copyright 1995 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//=--------------------------------------------------------------------------= <br>// <br>// contains various methods that will only really see any use in DEBUG builds <br>// <br>#ifdef DEBUG <br> <br> <br>#include "IPServer.H" <br>#include &lt;stdlib.h&gt; <br> <br> <br>//=--------------------------------------------------------------------------= <br>// Private Constants <br>//---------------------------------------------------------------------------= <br>// <br>static const char szFormat[]  = "%s\nFile %s, Line %d"; <br>static const char szFormat2[] = "%s\n%s\nFile %s, Line %d"; <br> <br>#define _SERVERNAME_ "ActiveX Framework" <br> <br>static const char szTitle[]  = _SERVERNAME_ " Assertion  (Abort = UAE, Retry = INT 3, Ignore = Continue)"; <br> <br> <br>//=--------------------------------------------------------------------------= <br>// Local functions <br>//=--------------------------------------------------------------------------= <br>int NEAR _IdMsgBox(LPSTR pszText, LPCSTR pszTitle, UINT mbFlags); <br> <br>//=--------------------------------------------------------------------------= <br>// DisplayAssert <br>//=--------------------------------------------------------------------------= <br>// Display an assert message box with the given pszMsg, pszAssert, source <br>// file name, and line number. The resulting message box has Abort, Retry, <br>// Ignore buttons with Abort as the default.  Abort does a FatalAppExit; <br>// Retry does an int 3 then returns; Ignore just returns. <br>// <br>VOID DisplayAssert <br>( <br>    LPSTR pszMsg, <br>    LPSTR pszAssert, <br>    LPSTR pszFile, <br>    UINT line <br>) <br>{ <br>    charszMsg[250]; <br>    LPSTRlpszText; <br> <br>    lpszText = pszMsg;// Assume no file &amp; line # info <br> <br>    // If C file assert, where you've got a file name and a line # <br>    // <br>    if (pszFile) { <br> <br>        // Then format the assert nicely <br>        // <br>        wsprintf(szMsg, szFormat, (pszMsg&amp;&amp;*pszMsg) ? pszMsg : pszAssert, pszFile, line); <br>        lpszText = szMsg; <br>    } <br> <br>    // Put up a dialog box <br>    // <br>    switch (_IdMsgBox(lpszText, szTitle, MB_ICONHAND|MB_ABORTRETRYIGNORE|MB_SYSTEMMODAL)) { <br>        case IDABORT: <br>            FatalAppExit(0, lpszText); <br>            return; <br> <br>        case IDRETRY: <br>            // call the win32 api to break us. <br>            // <br>            DebugBreak(); <br>            return; <br>    } <br> <br>    return; <br>} <br> <br> <br>//=---------------------------------------------------------------------------= <br>// Beefed-up version of WinMessageBox. <br>//=---------------------------------------------------------------------------= <br>// <br>int NEAR _IdMsgBox <br>( <br>    LPSTRpszText, <br>    LPCSTRpszTitle, <br>    UINTmbFlags <br>) <br>{ <br>    HWND hwndActive; <br>    int  id; <br> <br>    hwndActive = GetActiveWindow(); <br> <br>    id = MessageBox(hwndActive, pszText, pszTitle, mbFlags); <br> <br>    return id; <br>} <br> <br> <br>#endif // DEBUG </code></pre>
<p>&nbsp;</p></body>
</HTML>
