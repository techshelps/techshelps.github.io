<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context67"></a>README.TXT</h2>
<pre><code><br>Playing Card Sample Control <br>=========================== <br>This sample ActiveX Control implements a standard playing card, with the <br>ability to show the standard 52 card deck, two jokers, and 13 different <br>card backs.  This control is a Windowless control, which uses transparency  <br>to create the missing card corner effect.   <br> <br>Building <br>-------- <br>To build card.ocx, the FrameWrk sample must first be built. First run  <br>\inetsdk\setenv.bat to be sure the ActiveX SDK include, bin, and lib <br>directories are included (first) in your environment. Run the 'nmake' <br>to build a debug version (built to the Debug subdirectory) or <br>'nmake nodebug=1' to build a retail (nodebug) directory into the <br>Retail subdirectory. <br> <br>After building the FrameWrk library you can build the Card <br>control by running 'nmake' or 'nmake nodebug=1'. <br> <br>Sample: ActiveX Video Poker <br>--------------------------- <br>Included is a sample application which uses card.ocx: ActiveX <br>Video Poker.  To run this application, open poker\poker.htm. <br>This application also depends on the ielabel control and  <br>ietimer control. <br> <br>To debug and work with this example, open poker\main.htm.  This <br>file can be used outside of the framesets provided by poker.htm. <br> <br>Sample: ActiveX Solitaire <br>------------------------- <br>Included is a sample application which uses card.ocx: ActiveX <br>Solitaire.  To run this application, open solitair\sol.htm. <br>This application also depends on the ietimer control and the <br>HTML Layout Control. <br> <br>Using the Card Control <br>---------------------- <br>The Card control is itself controlled through 3 properties: <br> <br>Suite-- Enum:  0 = Invisible (card not drawn) <br>  1 = Clubs <br>  2 = Spades <br>  3 = Hearts <br>  4 = Diamonds <br>  -1 to -13 = Card Backs <br> <br>Number-- Enum:  1 = Ace <br>  2 to 10 = Number Cards <br>  11 = Jack <br>  12 = Queen <br>  13 = King <br>  14 = Joker <br> <br>Invert-- Boolean: controls drawing the card inverted, <br>      to indicate selection <br> <br>CardAlignment   -- Enum:  0 = Top Left <br>  1 = Top Center <br>  2 = Top Right <br>  3 = Center Left <br>  4 = Center <br>  5 = Center Right <br>  6 = Bottom Left <br>  7 = Bottom Center <br>  8 = Bottom Right <br>  9 = Stretch <br> <br>By default the card starts in the transparent state.  Setting the  <br>Suite to any value other than zero will draw the card. <br> <br>A property page is also included with the control, which can simply  <br>picking the right property values. <br> <br>The card control will also fire the following events: <br> <br>Click-- Mouse Click <br>DblClick-- Mouse Double Click <br>MouseDown-- Mouse down <br>MouseUp-- Mouse up <br>MouseMove-- Mouse move <br> <br>How it Works <br>------------ <br>To keep the size of the control to a minimum, to minimize internet download <br>time, each card is created from the ground up.  The only resources included <br>in the control are the basic symbols needed to create the cards, one half <br>of each face cards center, and the card backs.  Where possible, monochrome <br>and compressed bitmaps are used. <br> <br>The card control caches all card images after they have been created the <br>first time.  For games such as Solitaire in which the cards move <br>across one another, and most of the cards in a deck are displayed on the  <br>screen at the same time, caching all the cards of course yields the best  <br>animations.  To keep memory usage low, 4-bit DIB bitmaps are used to <br>store the cached images. <br> <br>This control is a Windowless control, which uses transparency to create the  <br>missing card corner effect.  When used with Internet Explorer, the control <br>is Windowed, and the ambient background color is used to fill in the corners. <br>When used in the HTML Layout Control, or another Windowless control host, <br>the corners are transparent and the card or background beneath can be seen. <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
