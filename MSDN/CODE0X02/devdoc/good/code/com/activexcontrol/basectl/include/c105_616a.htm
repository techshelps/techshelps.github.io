<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LOCALSRV.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context112"></a>LOCALSRV.H</h2>
<pre><code>//=--------------------------------------------------------------------------= <br>// LocalSrv.H <br>//=--------------------------------------------------------------------------= <br>// Copyright 1995 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//=--------------------------------------------------------------------------= <br>// <br>// global routines that are specific to the inproc server itself, such as <br>// registration, object creation, object specification, etc... <br>// <br>#ifndef _LOCALSRV_H_ <br> <br>void      WINAPI InitializeLibrary(void); <br>void      WINAPI UninitializeLibrary(void); <br>BOOL      WINAPI RegisterData(void); <br>BOOL      WINAPI UnregisterData(void); <br>BOOL      WINAPI CheckForLicense(); <br>BOOL      WINAPI CheckLicenseKey(LPWSTR wszCheckme); <br>BSTR      WINAPI GetLicenseKey(void); <br> <br>// global variables that various people use to get information about the control. <br>// <br>extern const char g_szLibName []; <br>extern const CLSID *g_pLibid; <br> <br>//=--------------------------------------------------------------------------= <br>// Global object information table <br>//=--------------------------------------------------------------------------= <br>// for each object in your application, you have an entry in this table.  they <br>// do not necessarily have to be CoCreatable, but if they are used, then they <br>// should reside here.  use the macros to fill in this table. <br>// <br>typedef struct tagOBJECTINFO { <br> <br>    unsigned short usType; <br>    void          *pInfo; <br> <br>} OBJECTINFO; <br> <br>extern OBJECTINFO g_ObjectInfo[]; <br> <br>//=--------------------------------------------------------------------------= <br>// these things are used to set up our objects in our global object table <br>// <br>#define OI_UNKNOWN       0 <br>#define OI_AUTOMATION    1 <br>#define OI_CONTROL       2 <br>#define OI_PROPERTYPAGE  3 <br>#define OI_BOGUS         0xffff <br> <br>#define OBJECTISCREATABLE(index)  (((UNKNOWNOBJECTINFO *)(g_ObjectInfo[(index)]).pInfo)-&gt;rclsid != NULL) <br>#define ISEMPTYOBJECT(index)      (g_ObjectInfo[index].usType == OI_BOGUS) <br> <br>// these are the macros you should use to fill in the table.  Note that the name <br>// must be exactly the same as that used in the global structure you created <br>// for this object. <br>// <br>#define UNKNOWNOBJECT(name)    { OI_UNKNOWN,      (void *)&amp;(name##Object) } <br>#define AUTOMATIONOBJECT(name) { OI_AUTOMATION,   (void *)&amp;(name##Object) } <br>#define CONTROLOBJECT(name)    { OI_CONTROL,      (void *)&amp;(name##Control) } <br>#define PROPERTYPAGE(name)     { OI_PROPERTYPAGE, (void *)&amp;(name##Page) } <br>#define EMPTYOBJECT            { OI_BOGUS, NULL } <br> <br>#define _LOCALSRV_H_ <br>#endif // _LOCALSRV_H_ <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
