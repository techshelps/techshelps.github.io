<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INTERNET.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context110"></a>INTERNET.H</h2>
<pre><code>//=--------------------------------------------------------------------------= <br>// Internet.H <br>//=--------------------------------------------------------------------------= <br>// Copyright 1995 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//=--------------------------------------------------------------------------= <br>// <br>// class declaration for the URLDib2 control. <br>// <br>#ifndef _INTERNET_H <br>#define _INTERNET_H <br> <br>#define DISPID_PROGRESS 1958 <br> <br>#ifndef __MKTYPLIB__ <br> <br>#include "urlmon.H" <br>#include "ocidl.h" <br>#include "docobj.h"   // for IServiceProvider <br> <br>#include "IPServer.H" <br>#include "CtrlObj.H" <br> <br> <br> <br>class CInternetControl : public COleControl <br>{ <br>public: <br>CInternetControl(IUnknown *     pUnkOuter,  <br>int                     iPrimaryDispatch,  <br>void *          pMainInterface); <br> <br>virtual ~CInternetControl(); <br> <br>    // IUnknown methods <br>    // <br>    DECLARE_STANDARD_UNKNOWN(); <br> <br>// Call this method to start the download of a URL. 'propId' will  <br>//      be passed back to you OnData below. <br>HRESULT SetupDownload( LPOLESTR url, DISPID propId); <br> <br> <br>//      Derived classes implement this method. It will be called when <br>//      data has arrived for a given dispid. <br>virtual HRESULT OnData( DISPID id, DWORD grfBSCF, <br>IStream * bitstrm, DWORD amount ); <br> <br> <br>//      Derived classes can implement this method. It will be <br>//      called at various times during the download. <br>virtual HRESULT OnProgress( DISPID id, ULONG ulProgress, <br>ULONG ulProgressMax, <br>ULONG ulStatusCode, <br>LPCWSTR pwzStatusText); <br> <br>//      Call this method to turn a URL into a Moniker. <br>HRESULT GetAMoniker( LPOLESTR   url, IMoniker ** ); <br> <br> <br>    HRESULT FireReadyStateChange( long newState ); <br>HRESULT FireProgress( ULONG dwAmount ); <br> <br> <br>// Override base class implementation... <br> <br>    virtual HRESULT InternalQueryInterface(REFIID, void **); <br> <br>protected: <br>HRESULT GetBindHost(); <br> <br>    IBindHost *             m_host; <br>    long                    m_readyState; <br> <br>    // BUGBUG: We should track all the downloads <br> <br>}; <br> <br>#endif __MKTYPLIB__ <br> <br>#endif _INTERNET_H </code></pre>
<p>&nbsp;</p></body>
</HTML>
