<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context119"></a>README.TXT</h2>
<pre><code>Before building the ToDoSvr sample, you must run setenv.bat to make  <br>sure the Platform SDK include, bin, and lib directories are included <br>first in your environment. <br> <br>ToDoSvr depends on the FrameWrk sample, which must be built first. To  <br>build a debug version of the framework library, use the command line <br>   nmake  <br>from the FrameWrk directory. To build a retail version of the framework,  <br>use the command line <br>   nmake nodebug=1 <br>from the FrameWrk directory. Libraries are placed in the ..\Lib directory. <br> <br>After building the FrameWrk library, you can build the ToDoSvr control  <br>by moving to the ToDoSvr directory and entering the command <br>   nmake <br>to build a debug version, or  <br>   nmake nodebug=1 <br>to build a retail version. <br> <br>The ToDoSvr sample will be automatically registered as part of the  <br>build process. <br> <br> <br>ToDoSvr is a simple example of a combination OLE Control and Document Object  <br>server based on the OLE Controls Framework sample code. Generic extensions  <br>to the framework which would apply to any Document Object server are  <br>contained in the class CDocumentObject, which is defined in cdocobj.h. Any  <br>code which is specific to making ToDoSvr act as a Document Object is marked  <br>with a comment containing the word DOCOBJ.  <br> <br>In its current state, ToDoSvr shows nothing more than the minimal amount of  <br>code required to act as a Document Object from within Office Binder. It does  <br>not manage any data and it doesn't display anything. <br> <br>In its completed form, ToDoSvr will be a simple to-do list manager that can  <br>act as a Document Object within any Document Object container. ToDoSvr will  <br>expose a simple object model which lets you manage to-do information via OLE  <br>automation. In addition to providing hyperlinks to documents you are working  <br>on, ToDoSvr objects will act as hyperlink targets, so that you can easily  <br>jump to particular tasks. <br> <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
