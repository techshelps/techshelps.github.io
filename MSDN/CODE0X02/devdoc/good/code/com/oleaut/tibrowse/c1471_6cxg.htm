<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TIBROWSE.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1474"></a>TIBROWSE.H</h2>
<pre><code>/***  <br>*tibrowse.h <br>* <br>*  This is a part of the Microsoft Source Code Samples. <br>* <br>*  Copyright 1992 - 1998 Microsoft Corporation. All rights reserved. <br>* <br>*  This source code is only intended as a supplement to Microsoft Development <br>*  Tools and/or WinHelp documentation.  See these sources for detailed <br>*  information regarding the Microsoft samples programs. <br>* <br>*Purpose: <br>* <br>*Implementation Notes: <br>* <br>*****************************************************************************/ <br> <br>#if defined(_MAC) <br> <br>#if defined(_MSC_VER) <br> <br># include &lt;values.h&gt; <br># include &lt;types.h&gt; <br># include &lt;string.h&gt; <br># include &lt;quickdra.h&gt; <br># include &lt;fonts.h&gt; <br># include &lt;events.h&gt; <br># include &lt;resource.h&gt; <br># include &lt;menus.h&gt; <br># include &lt;lists.h&gt; <br># include &lt;textedit.h&gt; <br># include &lt;dialogs.h&gt; <br># include &lt;desk.h&gt; <br># include &lt;toolutil.h&gt; <br># include &lt;memory.h&gt; <br># include &lt;files.h&gt; <br># include &lt;osutils.h&gt; <br># include &lt;osevents.h&gt; <br># include &lt;diskinit.h&gt; <br># include &lt;packages.h&gt; <br># include &lt;traps.h&gt; <br># include &lt;AppleEve.h&gt; <br># include &lt;standard.h&gt; <br> <br>#else //_MSC_VER <br> <br># include &lt;values.h&gt; <br># include &lt;types.h&gt; <br># include &lt;strings.h&gt; <br># include &lt;quickdraw.h&gt; <br># include &lt;fonts.h&gt; <br># include &lt;events.h&gt; <br># include &lt;resources.h&gt; <br># include &lt;windows.h&gt; <br># include &lt;menus.h&gt; <br># include &lt;lists.h&gt; <br># include &lt;textedit.h&gt; <br># include &lt;dialogs.h&gt; <br># include &lt;desk.h&gt; <br># include &lt;toolutils.h&gt; <br># include &lt;memory.h&gt; <br># include &lt;files.h&gt; <br># include &lt;osutils.h&gt; <br># include &lt;osevents.h&gt; <br># include &lt;diskinit.h&gt; <br># include &lt;packages.h&gt; <br># include &lt;traps.h&gt; <br># include &lt;AppleEvents.h&gt; <br># include &lt;StandardFile.h&gt; <br> <br>#endif //_MSC_VER <br> <br># include &lt;ole2.h&gt; <br># include &lt;olenls.h&gt; <br># include &lt;dispatch.h&gt; <br> <br>#elif defined(WIN32) <br> <br># include &lt;windows.h&gt; <br># include &lt;commdlg.h&gt; <br> <br>#else /* WIN16 */ <br> <br># include &lt;windows.h&gt; <br># include &lt;commdlg.h&gt; <br># include &lt;ole2.h&gt; <br># include &lt;olenls.h&gt; <br># include &lt;dispatch.h&gt; <br> <br>#endif <br> <br>#include "resource.h" <br> <br>#ifdef WIN32 <br># define EXPORT <br>#else <br># define EXPORT _export <br>#endif <br> <br>#ifdef _MAC <br># define UNUSED(X) ((void)(void*)&amp;(X)) <br>#else <br># define UNUSED(X) (X) <br>#endif <br> <br>#define DIM(X) (sizeof(X) / sizeof(X[0])) <br> <br>void AssertFail(char FAR*, int); <br>#define ASSERT(X) if (!(X)) { AssertFail(__FILE__, __LINE__); } else {} <br> <br>#defineCHECKRESULT(X) \ <br>  {HRESULT hresult = (X); \ <br>    if(hresult != NOERROR &amp;&amp; FAILED(GetScode(hresult))) MethodError(hresult); } <br> <br> <br>HRESULT OpenFile(BSTR FAR* pbstrFileName); <br>void    OpenTypeLib(char FAR*); <br>void    SetSelectedType(unsigned long); <br>void    FillMemberList(ITypeInfo FAR *, TYPEATTR FAR *, int cltid); <br>void    SetSelectedMember(unsigned long);  <br>void    SetSelectedParam(unsigned long dwIndex); <br>void    UpdateMemberInfo(MEMBERID memid);                    <br>void    AssertFail(char FAR*, int); <br>void    MethodError(HRESULT hresult);                    <br>void    Cleanup(void);                    <br>void    MemFree(void FAR*); <br> <br>#ifdef _PPCMAC <br>#define ROUTINE_DESC(proc)              g_rd##proc <br>#define DECLARE_ROUTINE_DESC(type,proc) static type ROUTINE_DESC(proc)=0 <br>#define INIT_ROUTINE_DESC(init,proc)    { if (!ROUTINE_DESC(proc)) ROUTINE_DESC(proc)=init(proc); } <br> <br>#else  // _PPCMAC <br>#define ROUTINE_DESC(proc)              proc <br>#define INIT_ROUTINE_DESC(init,proc) <br>#define DECLARE_ROUTINE_DESC(type,proc) <br>#endif // _PPCMAC <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
