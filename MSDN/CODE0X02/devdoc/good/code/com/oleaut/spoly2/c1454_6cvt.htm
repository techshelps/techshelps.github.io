<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TDATA.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1469"></a>TDATA.CPP</h2>
<pre><code>/***  <br>*tdata.cpp <br>* <br>*  This is a part of the Microsoft Source Code Samples. <br>* <br>*  Copyright 1991-1998 Microsoft Corporation. All rights reserved. <br>* <br>*  This source code is only intended as a supplement to Microsoft Development <br>*  Tools and/or WinHelp documentation.  See these sources for detailed <br>*  information regarding the Microsoft samples programs. <br>* <br>*Purpose: <br>*  CPoly and CPoint type data descriptions. <br>* <br>*  These data descriptions are used to construct TypeInfos for these <br>*  objects at runtime. <br>* <br>*****************************************************************************/ <br> <br>#include "spoly.h" <br>#include "cpoint.h" <br>#include "cpoly.h" <br> <br> <br>//--------------------------------------------------------------------- <br>//                      CPoint type data definitions  <br>//--------------------------------------------------------------------- <br> <br> <br>static PARAMDATA NEAR rgpdataCPointSetX[] =  <br>{ <br>    { OLESTR("X"), VT_I2 } <br>}; <br> <br>static PARAMDATA NEAR rgpdataCPointSetY[] =  <br>{ <br>    { OLESTR("Y"), VT_I2 } <br>}; <br> <br>static METHODDATA NEAR rgmdataCPoint[] =  <br>{ <br>    // CPoint::GetX() <br>    { <br>OLESTR("GetX"), <br>NULL, <br>IDMEMBER_CPOINT_GETX, <br>IMETH_CPOINT_GETX, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_I2 <br>    }, <br> <br>    // CPoint::SetX() <br>    { <br>OLESTR("SetX"), <br>rgpdataCPointSetX, <br>IDMEMBER_CPOINT_SETX, <br>IMETH_CPOINT_SETX, <br>CC_CALL, <br>DIM(rgpdataCPointSetX), <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // CPoint::GetY() <br>    { <br>OLESTR("GetY"), <br>NULL, <br>IDMEMBER_CPOINT_GETY, <br>IMETH_CPOINT_GETY, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_I2 <br>    }, <br> <br>    // CPoint::SetY() <br>    { <br>OLESTR("SetY"), <br>rgpdataCPointSetY, <br>IDMEMBER_CPOINT_SETY, <br>IMETH_CPOINT_SETY, <br>CC_CALL, <br>DIM(rgpdataCPointSetY), <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    } <br>}; <br> <br>INTERFACEDATA NEAR g_idataCPoint =  <br>{ <br>    rgmdataCPoint, DIM(rgmdataCPoint) <br>}; <br> <br> <br>//--------------------------------------------------------------------- <br>//                   CPoly type data definitions <br>//--------------------------------------------------------------------- <br> <br> <br>static PARAMDATA NEAR rgpdataCPolyAddPoint[] =  <br>{ <br>    { OLESTR("x"),VT_I2 }, <br>    { OLESTR("y"),VT_I2 } <br>}; <br> <br>static PARAMDATA NEAR rgpdataCPolySetXOrigin[] = <br>{ <br>    { OLESTR("x"),VT_I2 } <br>}; <br> <br>static PARAMDATA NEAR rgpdataCPolySetYOrigin[] =  <br>{ <br>    { OLESTR("y"),VT_I2 } <br>}; <br> <br>static PARAMDATA NEAR rgpdataCPolySetWidth[] =  <br>{ <br>    { OLESTR("width"),VT_I2 } <br>}; <br> <br>static PARAMDATA NEAR rgpdataCPolySetRed[] =  <br>{ <br>    { OLESTR("red"),VT_I2 } <br>}; <br> <br>static PARAMDATA NEAR rgpdataCPolySetGreen[] =  <br>{ <br>    { OLESTR("green"),VT_I2 } <br>}; <br> <br>static PARAMDATA NEAR rgpdataCPolySetBlue[] =  <br>{ <br>    { OLESTR("blue"),VT_I2 } <br>}; <br> <br>static METHODDATA NEAR rgmdataCPoly[] =  <br>{ <br>    // void CPoly::Draw(void) <br>    { <br>OLESTR("Draw"), <br>NULL, <br>IDMEMBER_CPOLY_DRAW, <br>IMETH_CPOLY_DRAW, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // void CPoly::Reset(void) <br>    { <br>OLESTR("Reset"), <br>NULL, <br>IDMEMBER_CPOLY_RESET, <br>IMETH_CPOLY_RESET, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // HRESULT CPoly::AddPoint(short x, short y) <br>    { <br>OLESTR("AddPoint"), <br>rgpdataCPolyAddPoint, <br>IDMEMBER_CPOLY_ADDPOINT, <br>IMETH_CPOLY_ADDPOINT, <br>CC_CALL, <br>DIM(rgpdataCPolyAddPoint), <br>DISPATCH_METHOD, <br>VT_ERROR <br>    }, <br> <br>    // IUnknown FAR* CPoly::EnumPoints(void) <br>    { <br>OLESTR("EnumPoints"), <br>NULL, <br>IDMEMBER_CPOLY_ENUMPOINTS, <br>IMETH_CPOLY_ENUMPOINTS, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_UNKNOWN <br>    }, <br> <br>    // short CPoly::GetXOrigin(void) <br>    { <br>OLESTR("GetXOrigin"), <br>NULL, <br>IDMEMBER_CPOLY_GETXORIGIN, <br>IMETH_CPOLY_GETXORIGIN, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_I2 <br>    }, <br> <br>    // void CPoly::SetXOrigin(short x) <br>    { <br>OLESTR("SetXOrigin"), <br>rgpdataCPolySetXOrigin, <br>IDMEMBER_CPOLY_SETXORIGIN, <br>IMETH_CPOLY_SETXORIGIN, <br>CC_CALL, <br>DIM(rgpdataCPolySetXOrigin), <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // short CPoly::GetYOrigin(void) <br>    { <br>OLESTR("GetYOrigin"), <br>NULL, <br>IDMEMBER_CPOLY_GETYORIGIN, <br>IMETH_CPOLY_GETYORIGIN, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_I2 <br>    }, <br> <br>    // void CPoly::SetYOrigin(short y) <br>    { <br>OLESTR("SetYOrigin"), <br>rgpdataCPolySetYOrigin, <br>IDMEMBER_CPOLY_SETYORIGIN, <br>IMETH_CPOLY_SETYORIGIN, <br>CC_CALL, <br>DIM(rgpdataCPolySetYOrigin), <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // short CPoly::GetWidth(void) <br>    { <br>OLESTR("GetWidth"), <br>NULL, <br>IDMEMBER_CPOLY_GETWIDTH, <br>IMETH_CPOLY_GETWIDTH, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_I2 <br>    }, <br> <br>    // void CPoly::SetWidth(short width) <br>    { <br>OLESTR("SetWidth"), <br>rgpdataCPolySetWidth, <br>IDMEMBER_CPOLY_SETWIDTH, <br>IMETH_CPOLY_SETWIDTH, <br>CC_CALL, <br>DIM(rgpdataCPolySetWidth), <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // short CPoly::get_red(void) <br>    { <br>OLESTR("get_red"), <br>NULL, <br>IDMEMBER_CPOLY_GETRED, <br>IMETH_CPOLY_GETRED, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_I2 <br>    }, <br> <br>    // void CPoly::set_red(short red) <br>    { <br>OLESTR("set_red"), <br>rgpdataCPolySetRed, <br>IDMEMBER_CPOLY_SETRED, <br>IMETH_CPOLY_SETRED, <br>CC_CALL, <br>DIM(rgpdataCPolySetRed), <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // short CPoly::get_green(void) <br>    { <br>OLESTR("get_green"), <br>NULL, <br>IDMEMBER_CPOLY_GETGREEN, <br>IMETH_CPOLY_GETGREEN, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_I2 <br>    }, <br> <br>    // void CPoly::set_green(short green) <br>    { <br>OLESTR("set_green"), <br>rgpdataCPolySetGreen, <br>IDMEMBER_CPOLY_SETGREEN, <br>IMETH_CPOLY_SETGREEN, <br>CC_CALL, <br>DIM(rgpdataCPolySetGreen), <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // short CPoly::get_blue(void) <br>    { <br>OLESTR("get_blue"), <br>NULL, <br>IDMEMBER_CPOLY_GETBLUE, <br>IMETH_CPOLY_GETBLUE, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_I2 <br>    }, <br> <br>    // void CPoly::set_blue(short blue) <br>    { <br>OLESTR("set_blue"), <br>rgpdataCPolySetBlue, <br>IDMEMBER_CPOLY_SETBLUE, <br>IMETH_CPOLY_SETBLUE, <br>CC_CALL, <br>DIM(rgpdataCPolySetBlue), <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // void CPoly::Dump(void) <br>    { <br>OLESTR("Dump"), <br>NULL, <br>IDMEMBER_CPOLY_DUMP, <br>IMETH_CPOLY_DUMP, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>    // void CPoly::Quit(void) <br>    { <br>OLESTR("Quit"), <br>NULL, <br>IDMEMBER_CPOLY_QUIT, <br>IMETH_CPOLY_QUIT, <br>CC_CALL, <br>0, <br>DISPATCH_METHOD, <br>VT_EMPTY <br>    }, <br> <br>}; <br> <br>INTERFACEDATA NEAR g_idataCPoly = <br>{ <br>    rgmdataCPoly, DIM(rgmdataCPoly) <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
