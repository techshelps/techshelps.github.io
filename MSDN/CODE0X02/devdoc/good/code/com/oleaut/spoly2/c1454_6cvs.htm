<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STATBAR.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1468"></a>STATBAR.H</h2>
<pre><code>/***  <br>*statbar.h <br>* <br>*  This is a part of the Microsoft Source Code Samples. <br>* <br>*  Copyright 1992 - 1998 Microsoft Corporation. All rights reserved. <br>* <br>*  This source code is only intended as a supplement to Microsoft Development <br>*  Tools and/or WinHelp documentation.  See these sources for detailed <br>*  information regarding the Microsoft samples programs. <br>* <br>*Purpose: <br>* <br>*Implementation Notes: <br>*  This file requires windows.h and ole2.h <br>* <br>*****************************************************************************/ <br> <br>class CStatBar : public IUnknown { <br>public: <br>    static CStatBar FAR* Create(HINSTANCE hinst, HWND hwndFrame); <br> <br>    // IUnknown methods <br>    // <br>    STDMETHOD(QueryInterface)(REFIID riid, void FAR* FAR* ppv); <br>    STDMETHOD_(unsigned long, AddRef)(void); <br>    STDMETHOD_(unsigned long, Release)(void); <br> <br>    // Introduced methods <br>    // <br>    void Show(void); <br>    inline void Move(void); <br>    inline void Update(void); <br> <br>    inline int GetX(void); <br>    inline void SetX(int x); <br> <br>    inline int GetY(void); <br>    inline void SetY(int y); <br> <br>    inline int GetHeight(void); <br>    inline void SetHeight(int height); <br> <br>    inline int GetWidth(void); <br>    inline void SetWidth(int width); <br> <br>    //inline HFONT GetFont(void); <br>    void SetFont(HFONT hfont); <br> <br>    //char FAR* GetText(void); <br>    inline void SetText(OLECHAR FAR* sz); <br> <br>    void WMPaint(void); <br>    BOOL Register(HINSTANCE); <br> <br>private: <br>    CStatBar(); <br>    ~CStatBar(); <br> <br>    unsigned longm_refs; <br> <br>    HWNDm_hwnd;// the status bar window handle <br> <br>    intm_x;// x coordinate of upper left corner <br>    intm_y;// y coordinate of upper left corner <br>    intm_height; <br>    intm_width; <br> <br>    HFONTm_hfont; <br>    intm_dyFont;// font height <br>    intm_dxFont;// font width <br> <br>    BSTRm_bstrMsg;// the status bar text <br> <br>    static TCHAR FAR* m_szWndClass; <br>}; <br> <br>inline void <br>CStatBar::Move() <br>{ <br>    MoveWindow(m_hwnd, m_x, m_y, m_width, m_height, TRUE); <br>} <br> <br>inline void <br>CStatBar::Update() <br>{ <br>    InvalidateRect(m_hwnd, NULL, TRUE); <br>    UpdateWindow(m_hwnd); <br>} <br> <br>inline int <br>CStatBar::GetX() <br>{ <br>    return m_x; <br>} <br> <br>inline void <br>CStatBar::SetX(int x) <br>{ <br>    m_x = x; <br>} <br> <br>inline int <br>CStatBar::GetY(void) <br>{ <br>    return m_y; <br>} <br> <br>inline void <br>CStatBar::SetY(int y) <br>{ <br>    m_y = y; <br>} <br> <br>inline int <br>CStatBar::GetHeight(void) <br>{ <br>    return m_height; <br>} <br> <br>inline void <br>CStatBar::SetHeight(int height) <br>{ <br>    m_height = height; <br>} <br> <br>inline int <br>CStatBar::GetWidth(void) <br>{ <br>    return m_width; <br>} <br> <br>inline void <br>CStatBar::SetWidth(int width) <br>{ <br>    m_width = width; <br>} <br> <br>inline void <br>CStatBar::SetText(OLECHAR FAR* sz) <br>{ <br>    SysFreeString(m_bstrMsg); <br>    m_bstrMsg = SysAllocString(sz); <br>} <br> <br>extern "C" void <br>SBprintf(CStatBar FAR* psb, TCHAR FAR* szFmt, ...); </code></pre>
<p>&nbsp;</p></body>
</HTML>
