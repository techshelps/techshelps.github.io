<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CREMPOLY.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1400"></a>CREMPOLY.H</h2>
<pre><code>/***  <br>*crempoly.h <br>* <br>*  This is a part of the Microsoft Source Code Samples. <br>* <br>*  Copyright 1992 - 1998 Microsoft Corporation. All rights reserved. <br>* <br>*  This source code is only intended as a supplement to Microsoft Development <br>*  Tools and/or WinHelp documentation.  See these sources for detailed <br>*  information regarding the Microsoft samples programs. <br>* <br>*Purpose: <br>*  This file defines the CRemPoly remote polygon object. <br>* <br>*Implementation Notes: <br>* <br>*****************************************************************************/ <br> <br>class CRemPoly : public IUnknown { <br>public: <br>    static HRESULT Create(CLSID clsid, CRemPoly FAR* FAR*); <br> <br>    // IUnknown methods <br>    // <br>    STDMETHOD(QueryInterface)(REFIID riid, void FAR* FAR* ppvObj); <br>    STDMETHOD_(unsigned long, AddRef)(void); <br>    STDMETHOD_(unsigned long, Release)(void); <br> <br>    // Introduced methods <br>    // <br>    HRESULT Draw(void); <br>    HRESULT Dump(void); <br>    HRESULT Reset(void); <br>    HRESULT AddPoint(short x, short y); <br>    HRESULT EnumPoints(IEnumVARIANT FAR* FAR* ppenum); <br>    HRESULT GetXOrigin(short FAR* pxorg); <br>    HRESULT SetXOrigin(short xorg); <br>    HRESULT GetYOrigin(short FAR* pyorg); <br>    HRESULT SetYOrigin(short yorg); <br>    HRESULT GetWidth(short FAR* pwidth); <br>    HRESULT SetWidth(short width); <br> <br>    HRESULT get_red(short FAR* psRed); <br>    HRESULT set_red(short sRed); <br>    HRESULT get_green(short FAR* psGreen); <br>    HRESULT set_green(short sGreen); <br>    HRESULT get_blue(short FAR* psBlue); <br>    HRESULT set_blue(short sBlue); <br> <br>private: <br>    CRemPoly(); <br> <br>    HRESULT get_i2(DISPID dispid, short FAR* ps); <br>    HRESULT set_i2(DISPID dispid, short s); <br> <br>    unsigned long m_refs; <br>    IDispatch FAR* m_pdisp; <br> <br>    // NOTE: this enumeration exists simply to allow us to symbolicly <br>    // index the member name and id arrays (m_rgid and m_rgszMethods). <br>    // This doesn't (necessarrily) have any connection to the vtable <br>    // indices, it *only* needs to correspond correctly to the m_rgid <br>    // and m_rgszMethods arrays. <br>    // <br>    enum CREMPOLY_METHODS { <br>IMETH_CREMPOLY_DRAW = 0, <br>IMETH_CREMPOLY_DUMP, <br>IMETH_CREMPOLY_RESET, <br>IMETH_CREMPOLY_ADDPOINT, <br>IMETH_CREMPOLY_ENUMPOINTS, <br>IMETH_CREMPOLY_GETXORIGIN, <br>IMETH_CREMPOLY_SETXORIGIN, <br>IMETH_CREMPOLY_GETYORIGIN, <br>IMETH_CREMPOLY_SETYORIGIN, <br>IMETH_CREMPOLY_GETWIDTH, <br>IMETH_CREMPOLY_SETWIDTH, <br>IMETH_CREMPOLY_GETRED, <br>IMETH_CREMPOLY_SETRED, <br>IMETH_CREMPOLY_GETGREEN, <br>IMETH_CREMPOLY_SETGREEN, <br>IMETH_CREMPOLY_GETBLUE, <br>IMETH_CREMPOLY_SETBLUE, <br>IMETH_CREMPOLY_MAX <br>    }; <br> <br>    // member IDs - these are used by IDispatch::Invoke to identify the <br>    // method or property on the remote object we accessing. <br>    // <br>    DISPID m_rgdispid[IMETH_CREMPOLY_MAX]; <br> <br>    // member names - these are used to learn the member IDs when we <br>    // connect to the remote object. <br>    // <br>    static OLECHAR FAR* m_rgszMethods[IMETH_CREMPOLY_MAX]; <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
