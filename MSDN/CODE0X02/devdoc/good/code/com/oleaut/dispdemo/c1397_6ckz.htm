<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MISC.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1403"></a>MISC.CPP</h2>
<pre><code>/***  <br>*misc.cpp <br>* <br>*  This is a part of the Microsoft Source Code Samples. <br>* <br>*  Copyright 1992 - 1998 Microsoft Corporation. All rights reserved. <br>* <br>*  This source code is only intended as a supplement to Microsoft Development <br>*  Tools and/or WinHelp documentation.  See these sources for detailed <br>*  information regarding the Microsoft samples programs. <br>* <br>*Purpose: <br>* <br>*Implementation Notes: <br>* <br>*****************************************************************************/ <br> <br>// Use ANSI strings for assertions <br>#ifdef UNICODE <br>#  undef UNICODE <br>#endif <br> <br>#include "dispdemo.h" <br> <br>#include &lt;stdio.h&gt; <br>#include &lt;stdarg.h&gt; <br> <br> <br>int g_fTrace = 0; <br> <br>STDAPI <br>InitOle(void) <br>{ <br>    HRESULT hresult; <br> <br>    if((hresult = OleInitialize(NULL)) != NOERROR) <br>      return hresult; <br> <br>// UNDONE: temporary to try to get symbols for the DLL <br>    VARIANT var; <br>    VariantInit(&amp;var); <br> <br>    return NOERROR; <br>} <br> <br>STDAPI <br>UninitOle() <br>{ <br>    OleUninitialize(); <br> <br>    return NOERROR; <br>} <br> <br>extern "C" void <br>Assert(int fCond, char FAR* file, int line) <br>{ <br>    char buf[128]; <br> <br>    if(fCond) <br>      return; <br> <br>    sprintf(buf, "Assertion failed: %s(%d)\n", file, line); <br> <br>#ifdef _MAC <br>    DebugStr(c2pstr(buf)); <br>#else <br>    OutputDebugString(buf); <br>    DebugBreak(); <br>#endif <br>} <br> <br>#ifdef _MAC <br> <br>extern "C" { <br>extern WindowPtr g_pwndDebug; <br> <br>void <br>DbPrintf(char *sz, ...) <br>{ <br>    va_list args; <br>    WindowPtr pwndSaved; <br>static char rgchOut[256]; <br> <br>    if(g_pwndDebug == nil) <br>      return; <br> <br>    GetPort(&amp;pwndSaved); <br>    SetPort(g_pwndDebug); <br> <br>    va_start(args, sz); <br>    vsprintf(rgchOut, sz, args); <br>    rgchOut[79] = '\0'; <br> <br>    EraseRect(&amp;g_pwndDebug-&gt;portRect); <br>    TextFont(systemFont); <br>    MoveTo(10,20); <br>    DrawString(c2pstr(rgchOut)); <br> <br>    SetPort(pwndSaved); <br>} <br> <br>} <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
