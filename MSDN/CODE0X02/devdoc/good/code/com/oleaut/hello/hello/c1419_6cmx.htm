<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1419"></a>README.TXT</h2>
<pre><code>Simple OLE Automation Server <br> <br> <br>SUMMARY <br>======= <br> <br>The HELLO sample is a simple OLE Automation server. This is a good sample <br>to use to learn to create your first OLE Automation server. This sample has <br>a Hello Object that supports the HelloMessage Property and the SayHello  <br>method. <br> <br>MORE INFORMATION <br>================ <br> <br>This sample implements the following features: <br> <br>  - Dual interfaces which allow access of automation properties and methods  <br>   through vtable binding and through IDispatch.  <br> <br>  - Rich Error information for vtable-binding controllers. This is done by <br>    implementing ISupportErrorInfo and using IErrorInfo. <br> <br>  - Active object registration, using RegisterActiveObject and <br>    RevokeActiveObject.  <br> <br>  - Correct shut-down behavior. <br> <br>  - A registry file containing Hello.Application and Hello.Application.2 <br>    as progIDs. <br> <br>  - Initial invisibility. <br> <br>To compile: <br>----------- <br> <br>To compile an ANSI debug version of the sample for Windows NT and Windows 95, <br>use the following command: <br> <br>   nmake <br> <br>To compile a Unicode debug version of the sample for Windows NT only, use the <br>following command: <br> <br>   nmake dev=win32 HOST=NT <br> <br>To compile a 16-bit debug version of the sample and if your development <br>environment is Win 3.x, use the following command. If your development <br>environment is Win95 or NT, change the HOST appropriately. <br> <br>   nmake dev=win16 HOST=DOS <br> <br>Also modify the .REG file to use 16 bit version of the keys. For example <br>use LocalServer instead of LocalServer32. <br> <br>To clean up between builds which use different options, use one of the <br>following commands: <br> <br>   nmake clean <br>   nmake dev=win16 clean <br> <br>See the makefile header comments for other make options. <br> <br>If one of the tools cannot find SDKUTIL.LIB, use the SAMPLES\COM\COMMON sample <br>to build SDKUTIL.LIB. <br> <br>Visual C++ 2.x and above can use makefile as an external makefile  <br>after making the following replacement in the makefile: <br> <br>   !include &lt;$(MSTOOLS)\samples\com\include\olesampl.mak&gt; <br> <br>with <br> <br>   !include &lt;win32.mak&gt; <br> <br> <br>To run: <br>------- <br> <br>Change hello.reg to provide the full path of hello.exe and hello.tlb. <br>Register hello.reg in the registration database by double-clicking it. <br>The HELLCTRL directory contains a controller that will control HELLO using <br>vtable-binding. <br> <br>The following VB 4.0 script can also be used to control HELLO: <br> <br>'Use the Tools/References menu to select the Hello type library before <br>'running this code. <br> <br>Dim HelloObj As New Hello.Hello 'Hello.Hello is the libraryname.coclassname. If <br>                                'the coclass name was not the same as the library name <br>                                'Dim HelloObj As New Hello could have been used. <br>                                'The type of HelloObj is declared as the default <br>                                'interface in the coclass (IHello). The properties/methods of <br>                                'the IHello interface can be invoked using HelloObj. <br>                                                                 <br>                                'You can also use <br>                                'Dim HelloObj As IHello <br>                                'Set HelloObj = New Hello.Hello <br>Private Sub SetVisible_Click() <br>    HelloObj.Visible = True                   'Set the visible property <br>End Sub <br>Private Sub Get_HelloMsg_Property_Click() <br>       Debug.Print HelloObj.HelloMessage     'Get the HelloMessage property <br>End Sub <br>Private Sub Set_HelloMsg_Property_Click() <br>       HelloObj.HelloMessage = "Hello Universe" 'Set the HelloMessage property <br>End Sub <br>Private Sub Invoke_SayHello_Method_Click() <br>       HelloObj.SayHello                     'Invoke the Hello method <br>End Sub <br> <br> <br>Files <br>----- <br> <br>HELLO.ODL  Object description language that describes the property and  <br>method that HELLO exposes. <br> <br>TLB.H  Header file generated by mktyplib.exe. <br> <br>MAKEFILE  Makefile for project. <br> <br>Other files implement the HELLO automation server. </code></pre>
<p>&nbsp;</p></body>
</HTML>
