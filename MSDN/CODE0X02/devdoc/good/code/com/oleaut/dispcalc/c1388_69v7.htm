<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDATA.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1393"></a>IDATA.CPP</h2>
<pre><code>/***  <br>*idata.cpp <br>* <br>*  This is a part of the Microsoft Source Code Samples. <br>* <br>*  Copyright 1992 - 1998 Microsoft Corporation. All rights reserved. <br>* <br>*  This source code is only intended as a supplement to Microsoft Development <br>*  Tools and/or WinHelp documentation.  See these sources for detailed <br>*  information regarding the Microsoft samples programs. <br>* <br>*Purpose: <br>*  This file contains the INTERFACEDATA definitions for the methods <br>*  and properties on the CCalc object that are exposed for external <br>*  programmability via IDispatch. <br>* <br>* <br>*Implementation Notes: <br>* <br>*****************************************************************************/ <br> <br>#include "dispcalc.h" <br> <br> <br>//--------------------------------------------------------------------- <br>//                   INTERFACEDATA definitions  <br>//--------------------------------------------------------------------- <br> <br>/* The INTERFACEDATA table describes the methods and properties that <br> * are being exposed for external programmability via IDispatch. <br> * This table is used to construct a CDispTypeInfo for this interface, <br> * and that TypeInfo is in turn used to initialize and drive the <br> * default implementation of IDispatch. <br> */ <br> <br> <br>// PDATA1() declares the PARAMDATA for a methods that takes a single param <br>// <br>#define PDATA1(NAME, TYPE) \ <br>    static PARAMDATA NEARDATA rgpdata ## NAME = {OLESTR(#NAME), TYPE} <br> <br>// MDATA() declares a single METHODDATA entry <br>// <br>#define MDATA(NAME, PDATA, IDMEMBER, IMETH, CARGS, KIND, TYPE) \ <br>    { OLESTR(#NAME), PDATA, IDMEMBER, IMETH, CC_CDECL, CARGS, KIND, TYPE } <br> <br>// The following macro defines the METHODDATA entries for a  <br>// property Put/Get method pair. <br>// <br>// Note: this macro *assumes* that the Put/Get pair are adjacent <br>// in the vtable, and that the Put method comes first. <br>// <br>#define PROPERTY(NAME, IMETH, ID, TYPE) \ <br>    MDATA(NAME, &amp;rgpdata ## NAME, ID, IMETH, 1,DISPATCH_PROPERTYPUT,VT_EMPTY), \ <br>    MDATA(NAME, NULL, ID, IMETH+1, 0, DISPATCH_PROPERTYGET, TYPE) <br> <br>// The following macro is used to define a METHODDATA entry for <br>// a method that takes zero parameters. <br>// <br>#define METHOD0(NAME, IMETH, ID, TYPE) \ <br>    MDATA(NAME, NULL, ID, IMETH, 0, DISPATCH_METHOD, TYPE) <br> <br>// and for one param <br>#define METHOD1(NAME, IMETH, ID, TYPE) \ <br>    MDATA(NAME, &amp;rgpdata ## NAME, ID, IMETH, 1, DISPATCH_METHOD, TYPE) <br> <br> <br>PDATA1(VALUE,  VT_I4); <br>PDATA1(ACCUM,  VT_I4); <br>PDATA1(OPND,   VT_I4); <br>PDATA1(OP,     VT_I2); <br>PDATA1(BUTTON, VT_BSTR); <br> <br>static METHODDATA NEARDATA rgmdataCCalc[] =  <br>{ <br>      PROPERTY(VALUE,   IMETH_ACCUM,    IDMEMBER_ACCUM,    VT_I4)  <br>    , PROPERTY(ACCUM,   IMETH_ACCUM,    IDMEMBER_ACCUM,    VT_I4)  <br>    , PROPERTY(OPND,    IMETH_OPERAND,  IDMEMBER_OPERAND,  VT_I4)  <br>    , PROPERTY(OP,      IMETH_OPERATOR, IDMEMBER_OPERATOR, VT_I2)  <br>    ,  METHOD0(EVAL,    IMETH_EVAL,     IDMEMBER_EVAL,     VT_BOOL)  <br>    ,  METHOD0(DCCLEAR, IMETH_CLEAR,    IDMEMBER_CLEAR,    VT_EMPTY) <br>    ,  METHOD0(DISPLAY, IMETH_DISPLAY,  IDMEMBER_DISPLAY,  VT_EMPTY) <br>    ,  METHOD0(QUIT,    IMETH_QUIT,     IDMEMBER_QUIT,     VT_EMPTY) <br>    ,  METHOD1(BUTTON,  IMETH_BUTTON,   IDMEMBER_BUTTON,   VT_BOOL) <br>}; <br> <br>INTERFACEDATA NEARDATA g_idataCCalc =  <br>{ <br>    rgmdataCCalc, DIM(rgmdataCCalc) <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
