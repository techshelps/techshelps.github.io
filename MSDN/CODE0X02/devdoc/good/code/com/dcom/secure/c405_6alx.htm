<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context405"></a>README.TXT</h2>
<pre><code>Secure Network OLE <br> <br>DCOM is implemented only on Windows NT 4.0 and later versions.  This sample <br>will not work correctly on Windows 95 or on earlier versions of Windows NT. <br> <br>The SECURE sample consists of a client portion and a server portion. Its <br>purpose is to demonstrate client-side and server-side security in a Network <br>OLE application. <br> <br>The server application, SECSVR.EXE, demonstrates the packaging options <br>available to server writers and the call-security capabilities. It implements <br>the following server capabilities: <br> <br> - A free-threaded server implemented as a service. The application implements <br>   the class "LocalService" (CLSID_SecureObjectService). <br> - A free-threaded server implemented as a standard executable. The application <br>   implements the class "LocalServer32" (CLSID_SecureObject). <br> - An apartment-threaded server implemented as a standard executable. The <br>   application implements the class "LocalServer32" (CLSID_SecureObject). <br> <br>The client application, SECCLNT.EXE, allows you to select security settings <br>for the client application's connections to the server application. <br> <br>This sample also include PSMYPROP.DLL, which supplies the remoting proxies <br>and stubs for the custom interface used between the client and the server. <br> <br>To compile <br>---------- <br> <br>Build the client and the server by running NMAKE.  <br> <br>To run <br>------ <br> <br>The run the client and server, use the following steps: <br> <br> - Install the server by running INSTALL.BAT. Note that SECSVR.EXE and <br>   PSMYPROP.DLL must be in the same directory as INSTALL.BAT. <br> <br> - To run the apartment-threaded server, use the command "SECSVR -Interactive".  <br>   Choose options to initialize security and view objects used by the clients. <br> <br> - Run SECCLNT.EXE. The user interface has three different sections. <br>    - In section one, choose the security parameters to CoInitializeSecurity <br>      from the two drop-down lists. Click the Initialize button. <br>    - In section two, choose a machine name to instantiate the object on or <br>      leave blank to use the current machine. In addition, choose between the <br>      LocalServer32 or LocalService objects. Click the Create Now button to <br>      create an instance. <br>    - In section three, set the color and the name of the object. This results <br>      in changes to the IMyProperties interface. <br>   Click the Release button in section two to release the object and connect to <br>   a different object. Click the Exit button in section one at any time to exit. <br> <br> - Once a client has created an instance of the "LocalServer32" class, the <br>   object will be listed in the interface of the server. Select the object to <br>   be viewed from the list. Use the Lock button to prevent the client from <br>   setting the color or name of the object. The client will display an <br>   access-denied message if it fails to set the color or name of the object. </code></pre>
<p>&nbsp;</p></body>
</HTML>
