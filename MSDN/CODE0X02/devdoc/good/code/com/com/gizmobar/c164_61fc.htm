<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GIZMOINT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context168"></a>GIZMOINT.H</h2>
<pre><code>/* <br> * GIZMOINT.H <br> * GizmoBar Version 1.01 <br> * <br> * Internal definitions for the GizmoBar DLL <br> * <br> * Copyright (c)1993-1996 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Software Design Engineer <br> * Microsoft Systems Developer Relations <br> * <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _GIZMOINT_H_ <br>#define _GIZMOINT_H_ <br> <br>#include "gizmobar.h" <br>#include "win1632.h" <br>#include "gizmo.h" <br> <br>#ifdef __cplusplus <br>extern "C" <br>    { <br>#endif <br> <br> <br>/* <br> * The main gizmobar structure itself.  There's only one of these, <br> * but it references the first GIZMO in the list. <br> */ <br> <br>typedef struct tagGIZMOBAR <br>    { <br>    PGIZMO      pGizmos;            //List of gizmos we own. <br>    HWND        hWnd;               //Window handle of ourselves. <br>    HINSTANCE   hInst; <br>    HWND        hWndAssociate;      //Associate who gets messages. <br>    DWORD       dwStyle;            //Copy of GWL_STYLE <br>    UINT        uState;             //State flags <br>    UINT        uID;                //Control ID. <br> <br>    HBRUSH      hBrFace;            //Static control background color <br>    COLORREF    crFace;             //Color of hBrFace <br>    HFONT       hFont;              //Font in use <br>    BOOL        fEnabled;           //Are we enabled? <br> <br>    PGIZMO      pGizmoTrack;        //Current pressed button. <br>    BOOL        fTracking; <br>    BOOL        fMouseOut; <br>    } GIZMOBAR, * PGIZMOBAR; <br> <br>#define CBGIZMOBAR sizeof(GIZMOBAR) <br> <br> <br>//Extra bytes for the window if the size of a local handle. <br>#define CBWINDOWEXTRA       sizeof(PGIZMOBAR) <br> <br>#define GBWL_STRUCTURE      0 <br> <br> <br>//Structure for passing paint info to a gizmo enumeration callback. <br>typedef struct <br>    { <br>    HDC     hDC; <br>    BOOL    fPaint; <br>    } PAINTGIZMO, * PPAINTGIZMO; <br> <br> <br> <br>//Private functions specific to the control. <br> <br>//INIT.C <br>BOOL              FRegisterControl(HINSTANCE); <br>PGIZMOBAR         GizmoBarPAllocate(int *, HWND, HINSTANCE, HWND <br>                      , DWORD, UINT, UINT); <br>PGIZMOBAR         GizmoBarPFree(PGIZMOBAR); <br> <br> <br>//PAINT.C <br>void              GizmoBarPaint(HWND, PGIZMOBAR); <br>BOOL WINAPI       FEnumPaintGizmos(PGIZMO, UINT, DWORD); <br> <br> <br>//GIZMOBAR.C <br>LRESULT WINAPI    GizmoBarWndProc(HWND, UINT, WPARAM, LPARAM); <br>BOOL    WINAPI    FEnumChangeFont(PGIZMO, UINT, DWORD); <br>BOOL    WINAPI    FEnumEnable(PGIZMO, UINT, DWORD); <br>BOOL    WINAPI    FEnumHitTest(PGIZMO, UINT, DWORD); <br> <br> <br>//API.C  Also see GIZMOBAR.H for others <br>LRESULT    GBMessageHandler(HWND, UINT, WPARAM, LPARAM, PGIZMOBAR); <br>PGIZMO     PGizmoFromHwndID(HWND, UINT); <br> <br> <br>#endif //_GIZMOINT_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
