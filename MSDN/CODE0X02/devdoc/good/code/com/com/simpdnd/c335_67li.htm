<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>APP.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context336"></a>APP.H</h2>
<pre><code>//********************************************************************** <br>// File name: app.h <br>// <br>//      Definition of CSimpleApp <br>// <br>// Copyright 1992 - 1998 Microsoft Corporation. All rights reserved. <br>//********************************************************************** <br> <br>#if !defined( _APP_H_) <br>#define _APP_H_ <br> <br>#include &lt;ole2.h&gt; <br>#include &lt;stablize.h&gt; <br> <br>class CSimpleDoc; <br> <br>class CSimpleApp : public IUnknown, public CSafeRefCount <br>{ <br>public: <br> <br>        HWND m_hAppWnd;         // main window handle <br>        HINSTANCE m_hInst;      // application instance <br>        CSimpleDoc FAR * m_lpDoc;   // pointer to document object <br>        BOOL m_fInitialized;    // OLE initialization flag <br>        BOOL m_fOleStdInit;     // OleStd library initialization flag <br>        HMENU           m_hMainMenu; <br>        HMENU           m_hFileMenu; <br>        HMENU           m_hEditMenu; <br>        HMENU           m_hHelpMenu; <br>        HMENU           m_hCascadeMenu;     // OLE object's verb <br> <br> <br>        // Drag/Drop related fields <br>        int m_nDragDelay;       // time delay (in msec) before drag should start <br>        int m_nDragMinDist;     // min. distance (radius) before drag should start <br>        int m_nScrollDelay;     // time delay (in msec) before scroll should start <br>        int m_nScrollInset;     // Border inset distance to start drag scroll <br>        int m_nScrollInterval;  // scroll interval time (in msec) <br> <br>        CSimpleApp();           // Constructor <br>        ~CSimpleApp();          // Destructor <br> <br>        // IUnknown Interfaces <br>        STDMETHODIMP QueryInterface(REFIID riid, LPVOID FAR* ppvObj); <br>        STDMETHODIMP_(ULONG) AddRef(); <br>        STDMETHODIMP_(ULONG) Release(); <br> <br>        // Initialization methods <br> <br>        BOOL fInitApplication (HANDLE hInstance); <br>        BOOL fInitInstance (HANDLE hInstance, int nCmdShow); <br> <br>        // Message handling methods <br> <br>        long lCommandHandler (HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam); <br>        long lSizeHandler (HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>        long lCreateDoc (HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>        BOOL HandleAccelerators (LPMSG lpMsg); <br>        void PaintApp(HDC hDC); <br>        void DestroyDocs(); <br>}; <br> <br>#endif  // _APP_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
