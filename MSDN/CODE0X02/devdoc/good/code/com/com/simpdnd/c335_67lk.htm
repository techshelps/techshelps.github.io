<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOC.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context338"></a>DOC.H</h2>
<pre><code>//********************************************************************** <br>// File name: doc.h <br>// <br>//      Definition of CSimpleDoc <br>// <br>// Copyright 1992 - 1998 Microsoft Corporation. All rights reserved. <br>//********************************************************************** <br> <br>#if !defined( _DOC_H_ ) <br>#define _DOC_H_ <br> <br>#include "idt.h" <br>#include "ids.h" <br>#include &lt;stablize.h&gt; <br> <br>class CSimpleSite; <br>class CSimpleApp; <br> <br>class CSimpleDoc : public IUnknown, public CSafeRefCount <br>{ <br>public: <br>        LPSTORAGE       m_lpStorage;        // IStorage* pointer for Doc <br>        BOOL            m_fModifiedMenu;    // is object's verb menu on menu <br> <br>        // Drag/Drop related fields <br>        BOOL            m_fRegDragDrop;     // is doc registered as drop target? <br>        BOOL            m_fLocalDrag;       // is doc source of the drag <br>        BOOL            m_fLocalDrop;       // was doc target of the drop <br>        BOOL            m_fCanDropCopy;     // is Drag/Drop copy/move possible? <br>        BOOL            m_fCanDropLink;     // is Drag/Drop link possible? <br>        BOOL            m_fDragLeave;       // has drag left <br>        BOOL            m_fPendingDrag;     // LButtonDown--possible drag pending <br>        POINT           m_ptButDown;        // LButtonDown coordinates <br> <br>        CSimpleSite FAR * m_lpSite; <br>        CSimpleApp FAR * m_lpApp; <br> <br>        HWND m_hDocWnd; <br> <br>        CDropTarget m_DropTarget; <br>        CDropSource m_DropSource; <br> <br>        static CSimpleDoc FAR* Create(CSimpleApp FAR *lpApp, LPRECT lpRect, <br>                        HWND hWnd); <br> <br>        void Close(void); <br> <br>        CSimpleDoc(); <br>        CSimpleDoc(CSimpleApp FAR *lpApp, HWND hWnd); <br>        ~CSimpleDoc(); <br> <br>        // IUnknown Interface <br>        STDMETHODIMP QueryInterface(REFIID riid, LPVOID FAR* ppvObj); <br>        STDMETHODIMP_(ULONG) AddRef(); <br>        STDMETHODIMP_(ULONG) Release(); <br> <br>        void InsertObject(void); <br>        void DisableInsertObject(void); <br>        long lResizeDoc(LPRECT lpRect); <br>        long lAddVerbs(void); <br>        void PaintDoc(HDC hDC); <br> <br>        // Drag/Drop and clipboard support methods <br>        void CopyObjectToClip(void); <br>        BOOL QueryDrag(POINT pt); <br>        DWORD DoDragDrop(void); <br>        void Scroll(DWORD dwScrollDir) { /*...scroll Doc here...*/ } <br>}; <br> <br>#endif  // _DOC_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
