<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WN_DOS.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context269"></a>WN_DOS.H</h2>
<pre><code>/************************************************************************* <br>** <br>**    OLE 2.0 Property Set Utilities <br>** <br>**    wn_dos.h <br>** <br>**    This file contains file contains data structure defintions, <br>**    function prototypes, constants, etc. for Windows 3.x form of <br>**    DOS calls. This is used by the SUMINFO OLE 2.0 Property Set <br>**    utilities used to manage the Summary Info property set. <br>** <br>**    (c) Copyright Microsoft Corp. 1990 - 1996 All Rights Reserved <br>** <br>*************************************************************************/ <br> <br>#ifndef WN_DOS_H <br>#define WN_DOS_H <br> <br>#include &lt;dos.h&gt; <br> <br>#define WIN 1 <br> <br>#define cbMaxFile 146 //from inc\path.h <br>#define SEEK_FROM_BEGINNING 0 <br>#define SEEK_FROM_END 2 <br>#define chDOSPath ('\\')        // FUTURE: not used all places it could be <br>#define chDOSWildAll    '*'     /* DOS File name wild card. */ <br>#define chDOSWildSingle '?' <br> <br> <br> <br>// Close, seek, delete, rename, flush, get attributes, read, write <br>/* RPC TEMP <br>int  FCloseOsfnWin(WORD); <br>#define FCloseOsfn(osfn)    FCloseOsfnWin(osfn) <br>long DwSeekDwWin(WORD,LONG,WORD); <br>#define DwSeekDw(osfn, dwSeek, bSeekFrom)   DwSeekDwWin(osfn, dwSeek, bSeekFrom) <br>EC  EcDeleteSzFfnameWin(char *); <br>#define EcDeleteSzFfname(szFile) EcDeleteSzFfnameWin(szFile) <br>EC  EcRenameSzFfnameWin(char *,char *); <br>#define EcRenameSzFfname(szFileCur,szFileNew) EcRenameSzFfnameWin(szFileCur,szFileNew) <br>int FFlushOsfnWin(int); <br>#define FFlushOsfn(osfn)    FFlushOsfnWin(osfn) <br>WORD DaGetFileModeSzWin(char *); <br>#define DaGetFileModeSz(szFile) DaGetFileModeSzWin(szFile) <br>int  CbReadOsfnWin(int, void far *, UINT); <br>int  CbWriteOsfnWin(int, void far *, UINT); <br>#define CbWriteOsfn(osfn,lpch,cbWrite)  CbWriteOsfnWin(osfn,lpch,cbWrite) <br>*/ <br>#define WinOpenFile(sz,ofs,n)   OpenFile(sz,ofs,n) <br>#define SeekHfile(f,off,kind) _llseek(f,off,kind) <br>#define CbReadOsfn(osfn,lpch,cbRead)    CbReadOsfnWin(osfn,lpch,cbRead) <br>#define CbReadHfile(f,buf,n) _lread(f,buf,n) <br>#define CbReadOsfnWin(f,buf,n) CbReadHfile(f,buf,n) <br>#define EcFindFirst4dm(a,b,c) _dos_findfirst((const char *)(b),c,(struct find_t*)a) <br>#define EcFindNext4dm(a) _dos_findnext((struct find_t*)a) <br>#define FHfileToSffsDate(handle,date,time) _dos_getftime(handle, (unsigned *)(date), (unsigned *)(time)) <br>#define SeekHfile(f, off, kind) _llseek(f,off,kind) <br> <br>/* buffer structure to be used with EcFindFirst() and EcFindNext() */ <br>typedef struct _SFFS <br>{ /* Search Find File Structure */ <br>uchar buff[21]; // dos search info <br>uchar wAttr; <br>union <br>{ <br>unsigned short timeVariable;    /*RPC47*/ <br>BF time:16; <br>struct <br>{ <br>BF sec : 5; <br>BF mint: 6; <br>BF hr  : 5; <br>}; <br>}; <br>union <br>{ <br>unsigned short dateVariable; <br>BF date:16; <br>struct <br>{ <br>BF dom : 5; <br>BF mon : 4; <br>BF yr  : 7; <br>}; <br>}; <br>ulong cbFile; <br>uchar szFileName[13]; <br>} SFFS; <br> <br>// find first file/find next file <br>#define PszFromPsffs(psffs)     ((psffs)-&gt;szFileName) <br>#define CopySzFilePsffs(psffs,sz)   OemToAnsi((char HUGE *)&amp;((psffs)-&gt;szFileName[0]),(char HUGE *)(sz)) <br>#define CbSzFilePsffs(psffs)    CbSz((psffs)-&gt;szFileName) <br>#define CbFileSizePsffs(psffs)  (psffs)-&gt;cbFile <br>#define AttribPsffs(psffs)      (psffs)-&gt;wAttr <br>#define EcFindFirstCore(psffs, sz, wAttr) EcFindFirst(psffs, sz, wAttr)   /*RPC22*/ <br>#define FDotPsffs(psffs) ((psffs)-&gt;szFileName[0]=='.')   /*RPC23*/ <br>#define AppendSzWild(sz) {int i=_fstrlen((char FAR *)(sz)); sz[i]='*'; sz[i+1]='.'; sz[i+2]='*'; sz[i+3]='\0';} <br>// disk free space <br> <br>unsigned long LcbDiskFreeSpaceWin(int); <br>#define LcbDiskFreeSpace(chDrive) LcbDiskFreeSpaceWin(chDrive) <br> <br>// date and time    /*RPC39*/ <br>/* <br>typedef struct _TIM {                    // Time structure returned by OsTime <br>CHAR minutes, hour, hsec, sec; <br>} TIM; <br> <br>typedef struct _DAT {                    // Date structure returned by OsDate <br>int  year; <br>CHAR month, day, dayOfWeek; <br>} DAT; <br>*/ <br>#define TIM dostime_t    /*RPC39*/ <br>#define DAT dosdate_t <br>#define OsTimeWin(TIM) _dos_gettime(TIM) <br>#define OsDateWin(DAT) _dos_getdate(DAT) <br> <br> <br>/* DOS File Attributes */ <br>#define DA_NORMAL       0x00 <br>#define DA_READONLY     0x01 <br>#define DA_HIDDEN       0x02 <br>#define DA_SYSTEM       0x04 <br>#define DA_VOLUME       0x08 <br>#define DA_SUBDIR       0x10 <br>#define DA_ARCHIVE      0x20 <br>#define DA_NIL          0xFFFF  /* Error DA */ <br>#define dosxSharing     32      /* Extended error code for sharing viol. */ <br>#define nErrNoAcc       5       /* OpenFile error code for Access Denied */ <br>#define nErrFnf         2       /* OpenFile error code for File Not Found */ <br> <br>/* Components of the Open mode for OpenSzFfname (DOS FUNC 3DH) */ <br>#define MASK_fINH       0x80 <br>#define MASK_bSHARE     0x70 <br>#define MASK_bACCESS    0x07 <br> <br>#define bSHARE_DENYRDWR 0x10 <br>#define bSHARE_DENYWR   0x20 <br>#define bSHARE_DENYNONE 0x40 <br> <br>/* Seek-from type codes passed to DOS function 42H */ <br> <br>#define SF_BEGINNING    0       /* Seek from beginning of file */ <br>#define SF_CURRENT      1       /* Seek from current file pointer */ <br>#define SF_END          2       /* Seek from end of file */ <br> <br> <br>typedef struct _DOSDTTM /* DOS DaTe TiMe */ <br>{ <br>union <br>{ <br>long lDOSDttm; <br>struct <br>{ <br>BF day: 5; <br>BF month:   4; <br>BF year:    7; <br>BF sec: 5; <br>BF mint:    6; <br>BF hours:   5; <br>} S1; <br>} U1; <br>} DOSDTTM; <br> <br>int  FOsfnIsFile(int); <br> <br>void DateStamp(int, LONG *,  int); <br>int  DosxError(void); <br>int  ShellExec(int, int); <br> <br>#endif //WN_DOS_H <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
