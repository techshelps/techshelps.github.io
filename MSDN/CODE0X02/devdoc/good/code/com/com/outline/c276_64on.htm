<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HEADING.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context287"></a>HEADING.H</h2>
<pre><code>/************************************************************************* <br>** <br>**    OLE 2 Sample Code <br>** <br>**    heading.c <br>** <br>**    This file contains definitions used by OutlineDoc's row and <br>**    column headings. <br>** <br>**    (c) Copyright Microsoft Corp. 1992 - 1996 All Rights Reserved <br>** <br>*************************************************************************/ <br> <br>#define COLUMN  10 <br> <br>#define IDC_ROWHEADING  2000 <br>#define IDC_COLHEADING  2001 <br>#define IDC_BUTTON      2002 <br> <br>#define HEADING_FONT    "Arial" <br> <br>#define COLUMN_LETTER   'A' <br> <br> <br>typedef struct tagCOLHEADING { <br>HWND m_hWnd; <br>UINT m_uHeight; <br>} COLHEADING, FAR* LPCOLHEADING; <br> <br>typedef struct tagROWHEADING { <br>HWND m_hWnd; <br>UINT m_uWidth; <br>FARPROC    m_WndProc; <br>} ROWHEADING, FAR* LPROWHEADING; <br> <br>typedef struct tagHEADING { <br>COLHEADING m_colhead; <br>ROWHEADING m_rowhead; <br>HWND       m_hwndButton; <br>BOOL       m_fShow; <br>HFONT      m_hfont; <br>} HEADING, FAR* LPHEADING; <br> <br>BOOL Heading_Create(LPHEADING lphead, HWND hWndParent, HINSTANCE hInst); <br>void Heading_Destroy(LPHEADING lphead); <br>void Heading_Move(LPHEADING lphead, HWND hwndListBox, LPSCALEFACTOR lpscale); <br>void Heading_Show(LPHEADING lphead, BOOL fShow); <br>void Heading_ReScale(LPHEADING lphead, LPSCALEFACTOR lpscale); <br>void Heading_CH_Draw(LPHEADING lphead, LPDRAWITEMSTRUCT lpdis, LPRECT lprcScreen, LPRECT lprcObject); <br>void Heading_CH_SetHorizontalExtent(LPHEADING lphead, HWND hwndListBox); <br>UINT Heading_CH_GetHeight(LPHEADING lphead, LPSCALEFACTOR lpscale); <br>LRESULT Heading_CH_SendMessage(LPHEADING lphead, UINT msg, WPARAM wParam, LPARAM lParam); <br>void Heading_CH_ForceRedraw(LPHEADING lphead, BOOL fErase); <br>void Heading_RH_ForceRedraw(LPHEADING lphead, BOOL fErase); <br>void Heading_RH_Draw(LPHEADING lphead, LPDRAWITEMSTRUCT lpdis); <br>LRESULT Heading_RH_SendMessage(LPHEADING lphead, UINT msg, WPARAM wParam, LPARAM lParam); <br>UINT Heading_RH_GetWidth(LPHEADING lphead, LPSCALEFACTOR lpscale); <br>void Heading_RH_Scroll(LPHEADING lphead, HWND hwndListBox); <br>LRESULT FAR PASCAL RowHeadWndProc(HWND hWnd, UINT Message, WPARAM wParam, LPARAM lParam); </code></pre>
<p>&nbsp;</p></body>
</HTML>
