<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OUTLNAME.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context303"></a>OUTLNAME.C</h2>
<pre><code>/************************************************************************* <br>** <br>**    OLE 2 Sample Code <br>** <br>**    outlname.c <br>** <br>**    This file contains OutlineName functions. <br>** <br>**    (c) Copyright Microsoft Corp. 1992 - 1996 All Rights Reserved <br>** <br>*************************************************************************/ <br> <br> <br>#include "outline.h" <br> <br>OLEDBGDATA <br> <br> <br>/* OutlineName_SetName <br> * ------------------- <br> * <br> *      Change the string of a name. <br> */ <br>void OutlineName_SetName(LPOUTLINENAME lpOutlineName, LPOLESTR lpszName) <br>{ <br>   OLESTRCPY(lpOutlineName-&gt;m_szName, lpszName); <br>} <br> <br> <br>/* OutlineName_SetSel <br> * ------------------ <br> * <br> *      Change the line range of a  name. <br> */ <br>void OutlineName_SetSel(LPOUTLINENAME lpOutlineName, LPLINERANGE lplrSel, BOOL fRangeModified) <br>{ <br>#if defined( OLE_SERVER ) <br>   // Call OLE server specific function instead <br>   ServerName_SetSel((LPSERVERNAME)lpOutlineName, lplrSel, fRangeModified); <br>#else <br> <br>   lpOutlineName-&gt;m_nStartLine = lplrSel-&gt;m_nStartLine; <br>   lpOutlineName-&gt;m_nEndLine = lplrSel-&gt;m_nEndLine; <br>#endif <br>} <br> <br> <br>/* OutlineName_GetSel <br> * ------------------ <br> * <br> *      Retrieve the line range of a name. <br> */ <br>void OutlineName_GetSel(LPOUTLINENAME lpOutlineName, LPLINERANGE lplrSel) <br>{ <br>   lplrSel-&gt;m_nStartLine = lpOutlineName-&gt;m_nStartLine; <br>   lplrSel-&gt;m_nEndLine = lpOutlineName-&gt;m_nEndLine; <br>} <br> <br> <br>/* OutlineName_SaveToStg <br> * --------------------- <br> * <br> *      Save a name into a storage <br> */ <br>BOOL OutlineName_SaveToStg(LPOUTLINENAME lpOutlineName, LPLINERANGE lplrSel, UINT uFormat, LPSTREAM lpNTStm, BOOL FAR* lpfNameSaved) <br>{ <br>   HRESULT hrErr = NOERROR; <br>   ULONG nWritten; <br> <br>   *lpfNameSaved = FALSE; <br> <br>   /* if no range given or if the name is completely within the range, <br>   **      write it out. <br>   */ <br>   if (!lplrSel || <br>      ((lplrSel-&gt;m_nStartLine &lt;= lpOutlineName-&gt;m_nStartLine) &amp;&amp; <br>      (lplrSel-&gt;m_nEndLine &gt;= lpOutlineName-&gt;m_nEndLine))) { <br> <br>      hrErr = lpNTStm-&gt;lpVtbl-&gt;Write( <br>            lpNTStm, <br>            lpOutlineName, <br>            sizeof(OUTLINENAME), <br>            &amp;nWritten <br>      ); <br>      *lpfNameSaved = TRUE; <br>   } <br>   return ((hrErr == NOERROR) ? TRUE : FALSE); <br>} <br> <br> <br>/* OutlineName_LoadFromStg <br> * ----------------------- <br> * <br> *      Load names from an open stream of a storage. if the name already <br> * exits in the OutlineNameTable, it is NOT modified. <br> * <br> *      Returns TRUE is all ok, else FALSE. <br> */ <br>BOOL OutlineName_LoadFromStg(LPOUTLINENAME lpOutlineName, LPSTREAM lpNTStm) <br>{ <br>   HRESULT hrErr = NOERROR; <br>   ULONG nRead; <br> <br>   hrErr = lpNTStm-&gt;lpVtbl-&gt;Read( <br>         lpNTStm, <br>         lpOutlineName, <br>         sizeof(OUTLINENAME), <br>         &amp;nRead <br>   ); <br> <br>   return ((hrErr == NOERROR) ? TRUE : FALSE); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
