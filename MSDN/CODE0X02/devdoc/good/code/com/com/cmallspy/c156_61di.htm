<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context156"></a>README.TXT</h2>
<pre><code>IMallocSpy Interface <br> <br>Copyright 1994 - 1998 Microsoft Corporation <br> <br>SUMMARY <br>======= <br> <br>The CMALLSPY sample demonstrates a simple implementation of the IMallocSpy  <br>interface. When the capability for replaceable memory allocators was  <br>removed from 32-bit OLE, the ability for applications to provide their own  <br>debug allocators for OLE was also removed. OLE disallows caller-provided  <br>allocators for multithread safety and general robustness. To provide a way  <br>for applications to monitor memory allocation, detect memory leaks, and  <br>simulate memory failure, OLE now provides support for a simple wrapper for  <br>the IMalloc interface called the IMallocSpy interface. <br> <br>MORE INFORMATION <br>================ <br> <br>See the OLE programmer's documentation for a complete description of the  <br>IMallocSpy interface and the CoRegisterMallocSpy and CoRevokeMallocSpy  <br>functions. <br> <br>You can also find a more complete implementation of IMallocSpy in the  <br>OLESTD sample library in the MALSPY.C and MALSPY.H files. </code></pre>
<p>&nbsp;</p></body>
</HTML>
