<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FCLASS.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context189"></a>FCLASS.H</h2>
<pre><code>//+--------------------------------------------------------------------------- <br>// <br>//  Microsoft Windows <br>//  Copyright 1992 - 1998 Microsoft Corporation. <br>// <br>//  File:       fclass.h <br>// <br>//  Contents:   definition for the CFractalWindow class <br>// <br>//  Classes:    CFractalWindow <br>// <br>//  Functions: <br>// <br>//  History:    4-11-94   stevebl   Created <br>// <br>//---------------------------------------------------------------------------- <br> <br>#ifndef __WFCLASS_H__ <br>#define __WFCLASS_H__ <br> <br>#include "cwindow.h" <br>#include &lt;commdlg.h&gt; <br>#include &lt;frhost.h&gt; <br>#include &lt;frcngn.h&gt; <br>#include "engnlist.h" <br>#include &lt;palsize.h&gt; <br>#ifdef __cplusplus <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Class:      CFractalWindow <br>// <br>//  Purpose:    implements MFract's main window <br>// <br>//  Interface:  CFractalWindow       -- constructor <br>//              ~CFractalWindow      -- destructor <br>//              InitInstance         -- initializes an instance of the class <br>//              WindowProc           -- main window procedure <br>//              DoMenu               -- menu command handler <br>//              OnCreate             -- called when the window is created <br>//              NewWindowSize        -- called when window size changes <br>//              SetUpColorTable      -- initializes the color table <br>//              SetDefaultColors     -- selects the default color set <br>//              Wash                 -- creats a wash over a range of colors <br>//              ToggleTitle          -- toggles full screen mode on/off <br>//              ChangeFractalEngines -- changes fractal engines <br>//              CycleStop            -- stops color cycling <br>//              Faster               -- alters speed of color cycling <br>//              LoadPalette          -- loads a color palette from a file <br>//              SavePalette          -- saves a color palette to a file <br>//              SaveBitmap           -- saves the graph as a bitmap <br>//              LoadFile             -- loads the graph from a docfile <br>//              SaveFile             -- saves the graph to a docfile <br>//              OnStart              -- starts the graph <br>//              OnStop               -- stops the graph <br>//              GetHwnd              -- gets the main window handle <br>//              DrawRect             -- draws the zoom rectangle <br>//              EraseRect            -- erases the zoom rectangle <br>//              ClipLine             -- clips a line to the graph dimensions <br>// <br>//              IUnknown methods: <br>//              QueryInterface       -- retreives interface pointers <br>//              AddRef               -- increments ref-count <br>//              Release              -- decrements ref-count <br>// <br>//              IFractalHost methods: <br>//              SetGraphSize         -- changes the size of the graph <br>//              GetGraphSize         -- returns the size of the graph <br>//              GetPoint             -- returns the color at a point <br>//              Rect                 -- draws a rectangle <br>//              Line                 -- draws a line <br>//              Point                -- plots a point <br>//              DoneDrawingGraph     -- signals when the graph is complete <br>// <br>//  History:    4-11-94   stevebl   Created <br>//              7-07-94   stevebl   changed definition of GetPoint <br>// <br>//---------------------------------------------------------------------------- <br> <br>class CFractalWindow: public CHlprWindow, public IFractalHost <br>{ <br>public: <br>    CFractalWindow(); <br>    ~CFractalWindow(); <br>    BOOL InitInstance(HINSTANCE, int); <br>    LRESULT WindowProc(UINT uMsg, WPARAM wParam, LPARAM lParam); <br>    LRESULT DoMenu(WPARAM wParam, LPARAM lParam); <br>    void OnCreate(void); <br>    void NewWindowSize(unsigned uWidth, unsigned uHeight); <br>    void SetUpColorTable(void); <br>    void SetDefaultColors(void); <br>    void Wash(int i, PALETTEENTRY rgColors[]); <br>    void ToggleTitle(void); <br>    void ChangeFractalEngines(void); <br>    void CycleStop(void); <br>    void Faster(int); <br>    void LoadPalette(void); <br>    void SavePalette(void); <br>    void SaveBitmap(void); <br>    void LoadFile(void); <br>    void SaveFile(void); <br>    void OnStart(void); <br>    void OnStop(void); <br>    HWND GetHwnd(void); <br>    BOOL DrawRect(HDC, const RECT *); <br>    BOOL EraseRect(HDC, const RECT *); <br>    BOOL ClipLine(int &amp; x1, int &amp; y1, int &amp; x2, int &amp; y2); <br> <br>    // IUnknown members <br>    STDMETHOD(QueryInterface) (THIS_ REFIID, void **); <br>    STDMETHOD_(ULONG, AddRef) (THIS); <br>    STDMETHOD_(ULONG, Release) (THIS); <br> <br>    // IFractalHost members <br>    STDMETHOD(SetGraphSize) (THIS_ unsigned uWidth, unsigned uHeight); <br>    STDMETHOD(GetGraphSize) (THIS_ unsigned * puWidth, unsigned * puHeight); <br>    STDMETHOD(GetPoint) (THIS_ unsigned * puValue, int x, int y); <br>    STDMETHOD(Rect) <br>        (THIS_ <br>        int iLeft, <br>        int iTop, <br>        int iRight, <br>        int iBottom, <br>        unsigned uColor); <br>    STDMETHOD(Line) <br>        (THIS_ <br>        int x1, <br>        int y1, <br>        int x2, <br>        int y2, <br>        unsigned uColor); <br>    STDMETHOD(Point) <br>        (THIS_ <br>        int x, <br>        int y, <br>        unsigned uColor); <br>    STDMETHOD(DoneDrawingGraph)(THIS_ void); <br> <br>private: <br>    HDC         _hdcMem; <br>    ULONG       _uRefreshRate; <br>    HANDLE      _hTitleEvent; <br>    HANDLE      _hGraphStartedEvent; <br>    HPALETTE    _hpal; <br>    HBITMAP     _hbmSavedBitmap; <br>    HBITMAP     _hbmMainWindow; <br>    unsigned    _uScreenWidth; <br>    unsigned    _uScreenHeight; <br>    unsigned    _uImageWidth; <br>    unsigned    _uImageHeight; <br>    unsigned    _uWindowWidth; <br>    unsigned    _uWindowHeight; <br>    unsigned    _uScrollPosX; <br>    unsigned    _uScrollPosY; <br>    int         _iCycleVelocity; <br>    int         _iCurrentDirection; <br>    double      _dLeft, _dRight, _dTop, _dBottom; <br>    PALETTEENTRY * _pEntry1, * _pEntry2; <br>    LOGPALETTE * _pLogPal; <br>    LOGPALETTE * _pSecondLogPal; <br>    ULONG       _uRefCount; <br>    CEngineList * _pEngineList; <br>    unsigned    _uFractalType; <br>    IFractalEngine * _pFractalEngine; <br>    RECT        _rectZoom; <br>    BOOL        _fZooming; <br>    BOOL        _fRButtonDown; <br>    OPENFILENAME _ofnPalette; <br>    OPENFILENAME _ofnBitmap; <br>    OPENFILENAME _ofnFile; <br>    TCHAR       _szPalFileName[MAX_PATH]; <br>    TCHAR       _szPalFileTitle[MAX_PATH]; <br>    TCHAR       _szBmpFileName[MAX_PATH]; <br>    TCHAR       _szBmpFileTitle[MAX_PATH]; <br>    TCHAR       _szFileName[MAX_PATH]; <br>    TCHAR       _szFileTitle[MAX_PATH]; <br>    TCHAR       _szHelpFile[MAX_PATH]; <br>    RECT        _rectPainted; <br>    IStorage  * _pstg; <br>    char      * _rgPixels; <br>    BOOL        _fReRealizePalette; <br>    BOOL        _fCanAnimate; <br>    CRITICAL_SECTION _csGraph; <br>}; <br> <br>#endif // __cplusplus <br> <br>#define REFRESH_TIMER 1 <br>#define CYCLE_TIMER 2 <br>#define CYCLE_RATE 50 <br> <br>#define QUICKWIDTH 160 <br>#define QUICKHEIGHT 120 <br> <br>#endif // __WFCLASS_H__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
