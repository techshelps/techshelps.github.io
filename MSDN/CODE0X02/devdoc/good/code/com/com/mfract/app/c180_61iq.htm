<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CHNGDIM.CXX</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context182"></a>CHNGDIM.CXX</h2>
<pre><code>//+--------------------------------------------------------------------------- <br>// <br>//  Microsoft Windows <br>//  Copyright 1992 - 1998 Microsoft Corporation. <br>// <br>//  File:       chngdim.cxx <br>// <br>//  Contents:   implementation for the Change Graph Dimension dialog box <br>// <br>//  Classes:    CChangeDim <br>// <br>//  Functions: <br>// <br>//  History:    4-20-94   stevebl   Created <br>// <br>//---------------------------------------------------------------------------- <br> <br>#include &lt;windows.h&gt; <br>#include "chngdim.h" <br> <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Member:     CChangeDim::DialogProc <br>// <br>//  Synopsis:   dialog proc for the change dimensions dialog box <br>// <br>//  Arguments:  [hwndDlg] - dialog's window handle <br>//              [uMsg]    - message <br>//              [wParam]  - first message parameter <br>//              [lParam]  - second message parameter <br>// <br>//  History:    4-20-94   stevebl   Created <br>// <br>//---------------------------------------------------------------------------- <br> <br>BOOL CChangeDim::DialogProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) <br>{ <br>    unsigned uImageWidth, uImageHeight; <br>    switch (uMsg) <br>    { <br>    case WM_INITDIALOG: <br>        _pwf-&gt;GetGraphSize(&amp;uImageWidth, &amp;uImageHeight); <br>        SetDlgItemInt(hwndDlg, IDC_HEIGHT, uImageHeight, FALSE); <br>        SetDlgItemInt(hwndDlg, IDC_WIDTH, uImageWidth, FALSE); <br>        CheckButtons(hwndDlg, uImageHeight, uImageWidth); <br>        return (TRUE); <br>    case WM_COMMAND: <br>        switch(LOWORD(wParam)) <br>        { <br>        case IDC_VGA: <br>            SetDlgItemInt(hwndDlg, IDC_WIDTH, 640, FALSE); <br>            SetDlgItemInt(hwndDlg, IDC_HEIGHT, 480, FALSE); <br>            break; <br>        case IDC_SVGA: <br>            SetDlgItemInt(hwndDlg, IDC_WIDTH, 800, FALSE); <br>            SetDlgItemInt(hwndDlg, IDC_HEIGHT, 600, FALSE); <br>            break; <br>        case IDC_1024: <br>            SetDlgItemInt(hwndDlg, IDC_WIDTH, 1024, FALSE); <br>            SetDlgItemInt(hwndDlg, IDC_HEIGHT, 768, FALSE); <br>            break; <br>        case IDC_1280: <br>            SetDlgItemInt(hwndDlg, IDC_WIDTH, 1280, FALSE); <br>            SetDlgItemInt(hwndDlg, IDC_HEIGHT, 1024, FALSE); <br>            break; <br>        case IDC_QUICKDRAW: <br>            SetDlgItemInt(hwndDlg, IDC_WIDTH, QUICKWIDTH, FALSE); <br>            SetDlgItemInt(hwndDlg, IDC_HEIGHT, QUICKHEIGHT, FALSE); <br>            break; <br>        case IDC_HEIGHT: <br>        case IDC_WIDTH: <br>            CheckButtons( <br>                hwndDlg, <br>                GetDlgItemInt(hwndDlg, IDC_WIDTH, NULL, FALSE), <br>                GetDlgItemInt(hwndDlg, IDC_HEIGHT, NULL, FALSE)); <br>            break; <br>        case IDC_RESET: <br>            uImageHeight = GetDlgItemInt(hwndDlg, IDC_HEIGHT, NULL, FALSE); <br>            uImageWidth = GetDlgItemInt(hwndDlg, IDC_WIDTH, NULL, FALSE); <br>            _pwf-&gt;SetGraphSize(uImageWidth, uImageHeight); <br>            EndDialog(hwndDlg,TRUE); <br>            return(TRUE); <br>        case IDC_RESIZE: <br>            uImageHeight = GetDlgItemInt(hwndDlg, IDC_HEIGHT, NULL, FALSE); <br>            uImageWidth = GetDlgItemInt(hwndDlg, IDC_WIDTH, NULL, FALSE); <br>            _pwf-&gt;SetGraphSize(uImageWidth, uImageHeight); <br>            EndDialog(hwndDlg,FALSE); <br>            return(TRUE); <br>        case IDCANCEL: <br>            EndDialog(hwndDlg,FALSE); <br>            return(TRUE); <br>        } <br>        break; <br>    } <br>    return (FALSE); <br>} <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Member:     CChangeDim::CheckButtons <br>// <br>//  Synopsis:   checks to correct check box in the dialog box for a given <br>//              set of dimensions <br>// <br>//  Arguments:  [hwndDlg] - dialog handle <br>//              [iWidth]   - width of the graph <br>//              [iHeight]  - height of the graph <br>// <br>//  History:    4-20-94   stevebl   Created <br>// <br>//---------------------------------------------------------------------------- <br> <br>void CChangeDim::CheckButtons(HWND hwndDlg, int iWidth, int iHeight) <br>{ <br>    if (iWidth == 640 &amp;&amp; iHeight == 480) <br>    { <br>        CheckRadioButton(hwndDlg, IDC_QUICKDRAW, IDC_CUSTOM, IDC_VGA); <br>    } <br>    else if (iWidth == 800 &amp;&amp; iHeight == 600) <br>    { <br>        CheckRadioButton(hwndDlg, IDC_QUICKDRAW, IDC_CUSTOM, IDC_SVGA); <br>    } <br>    else if (iWidth == 1024 &amp;&amp; iHeight == 768) <br>    { <br>        CheckRadioButton(hwndDlg, IDC_QUICKDRAW, IDC_CUSTOM, IDC_1024); <br>    } <br>    else if (iWidth == 1280 &amp;&amp; iHeight == 1024) <br>    { <br>        CheckRadioButton(hwndDlg, IDC_QUICKDRAW, IDC_CUSTOM, IDC_1280); <br>    } <br>    else if (iWidth == QUICKWIDTH &amp;&amp; iHeight == QUICKHEIGHT) <br>    { <br>        CheckRadioButton(hwndDlg, IDC_QUICKDRAW, IDC_CUSTOM, IDC_QUICKDRAW); <br>    } <br>    else <br>    { <br>        CheckRadioButton(hwndDlg, IDC_QUICKDRAW, IDC_CUSTOM, IDC_CUSTOM); <br>    } <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
