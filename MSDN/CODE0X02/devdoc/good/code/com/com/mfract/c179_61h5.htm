<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context179"></a>README.TXT</h2>
<pre><code>OLE COM Sample <br> <br> <br>The MFract sample uses OLE2's Component Object Model (COM) to provide a  <br>mechanism for implementing modular fractal engines.  <br> <br>Each of MFract's fractal engines are implemented as inproc servers that  <br>provide a custom interface called IFractalEngine. This allows new fractal  <br>engines to be created for MFract without having to modify or recompile the  <br>application. In fact, creating a new fractal engine doesn't require that the  <br>programmer know anything about Mfract beyond the custom interfaces that it  <br>uses. <br> <br>To compile <br>---------- <br> <br>MFract can be compiled as either a Unicode or ANSI application. Type  <br>"nmake unicode" to build a Unicode version. Type "nmake" or "nmake ansi" to  <br>build an ANSI version. Type "nmake clean" to remove any target files from  <br>the build. <br> <br>To run <br>------ <br> <br>Run regedit MFract.Reg to register Mfract. <br>Run MFract.Exe. <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
