<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MANDEL.H</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context198"></a>MANDEL.H</h2>
<pre><code>//+--------------------------------------------------------------------------- <br>// <br>//  Microsoft Windows <br>//  Copyright 1992 - 1998 Microsoft Corporation. <br>// <br>//  File:       mandel.h <br>// <br>//  Contents:   class definitions for the Mandelbrot Fractal engine <br>// <br>//  Classes:    CMandelbrotCF <br>//              CMandelbrot <br>// <br>//  Functions: <br>// <br>//  History:    4-14-94   stevebl   Created <br>// <br>//---------------------------------------------------------------------------- <br> <br>#ifndef __MANDEL_H__ <br>#define __MANDEL_H__ <br> <br>#define PROPERTIES 100 <br> <br>#define IDC_LOWREAL         1001 <br>#define IDC_LOWIMAGINARY    1002 <br>#define IDC_HIGHREAL        1003 <br>#define IDC_HIGHIMAGINARY   1004 <br>#define IDC_LIMIT           1005 <br>#define IDC_ABOUT           1006 <br>#define IDC_USEBOUNDINGBOXES 1007 <br> <br>#define IDS_ABOUT_TITLE     1100 <br>#define IDS_ABOUT_TEXT      1101 <br> <br>#ifdef __cplusplus <br> <br>#include &lt;frcngn.h&gt; <br>#include &lt;frhost.h&gt; <br>#include &lt;qudcln.h&gt; <br>#include &lt;qudngn.h&gt; <br>#include &lt;cdialog.h&gt; <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Class:      CMandelbrotCF <br>// <br>//  Purpose:    class factory for the Mandelbrot engine <br>// <br>//  Interface:  CMandelbrotCF  -- constructor <br>//              ~CMandelbrotCF -- destrctor <br>//              QueryInterface -- requests an interface <br>//              AddRef         -- increments refcount <br>//              Release        -- decrements refcount <br>//              CreateInstance -- creates a Mandelbrot engine <br>//              LockServer     -- keeps cf around if released <br>// <br>//  History:    4-14-94   stevebl   Created <br>// <br>//---------------------------------------------------------------------------- <br> <br>class CMandelbrotCF : public IClassFactory <br>{ <br>public: <br>    CMandelbrotCF(); <br>    ~CMandelbrotCF(); <br> <br>    HRESULT STDMETHODCALLTYPE QueryInterface(REFIID, LPVOID *); <br>    ULONG STDMETHODCALLTYPE AddRef(void); <br>    ULONG STDMETHODCALLTYPE Release(void); <br> <br>    HRESULT STDMETHODCALLTYPE CreateInstance(LPUNKNOWN, REFIID, LPVOID*); <br>    HRESULT STDMETHODCALLTYPE LockServer(BOOL); <br> <br>protected: <br>    ULONG _cRef; <br>}; <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Class:      CMandelbrot <br>// <br>//  Purpose:    implements the Mandlebrot engine <br>// <br>//  Interface:  QueryInterface     -- retrieves an interface <br>//              AddRef             -- increments refcount <br>//              Release            -- decrements refcount <br>//              GetClassID         -- gets the CLSID <br>//              IsDirty            -- tests if data should be saved <br>//              Load               -- loads properties <br>//              Save               -- saves properties <br>//              GetSizeMax         -- returns max size of property stream <br>//              Init               -- initializes engine <br>//              SetDefaults        -- sets default property values <br>//              SetProperties      -- displays the property dialog box <br>//              GetExtent          -- gets size of the graph (in graph units) <br>//              SetExtent          -- sets size of the graph (in graph units) <br>//              SetGraphSize       -- sets size of the graph (in pixels) <br>//              Start              -- starts the graph engine <br>//              Stop               -- stops the graph engine <br>//              ComputePoint       -- returns the graph color at a given point <br>//              DoneDrawingGraph   -- called when the graph engine is finished <br>//              DialogProc         -- dialog proc for the property dialog box <br>//              Initialize         -- private initialization function <br>//              CMandelbrot        -- constructor <br>//              ~CMandelbrot       -- destructor <br>// <br>//  History:    4-14-94   stevebl   Created <br>//              7-07-94   stevebl   changed definition of ComputePoint <br>// <br>//---------------------------------------------------------------------------- <br> <br>class CMandelbrot : public IFractalEngine, IPersistStream, IQuadrantClient, CHlprDialog <br>{ <br>public: <br>    // IUnknown methods <br>    HRESULT STDMETHODCALLTYPE QueryInterface(REFIID, LPVOID *); <br>    ULONG STDMETHODCALLTYPE AddRef(void); <br>    ULONG STDMETHODCALLTYPE Release(void); <br> <br>    // IPersist methods <br>    HRESULT STDMETHODCALLTYPE GetClassID(LPCLSID pclsid); <br> <br>    // IPersistStream methods <br>    HRESULT STDMETHODCALLTYPE IsDirty(void); <br>    HRESULT STDMETHODCALLTYPE Load(LPSTREAM pStm); <br>    HRESULT STDMETHODCALLTYPE Save(LPSTREAM pStm, BOOL fClearDirty); <br>    HRESULT STDMETHODCALLTYPE GetSizeMax(ULARGE_INTEGER * pcbSize); <br> <br>    // IFractalEngine methods <br>    HRESULT STDMETHODCALLTYPE Init(IFractalHost *pfh); <br> <br>    HRESULT STDMETHODCALLTYPE SetDefaults(void); <br> <br>    HRESULT STDMETHODCALLTYPE SetProperties(HWND hwnd); <br> <br>    HRESULT STDMETHODCALLTYPE GetExtent( <br>        double *pdLeft, <br>        double *pdTop, <br>        double *pdRight, <br>        double *pdBottom); <br> <br>    HRESULT STDMETHODCALLTYPE SetExtent( <br>        double dLeft, <br>        double dTop, <br>        double dRight, <br>        double dBottom); <br> <br>    HRESULT STDMETHODCALLTYPE SetGraphSize( <br>        unsigned int uWidth, <br>        unsigned int uHeight); <br> <br>    HRESULT STDMETHODCALLTYPE Start(void); <br> <br>    HRESULT STDMETHODCALLTYPE Stop(void); <br> <br>    // IQuadrantClient methods <br>    HRESULT STDMETHODCALLTYPE ComputePoint( <br>        unsigned * puColor, <br>        int x, <br>        int y); <br> <br>    HRESULT STDMETHODCALLTYPE DoneDrawingGraph(void); <br> <br>    // Methods from CHlprDialog <br>    BOOL DialogProc(HWND hwndDlg, UINT uMsg, WPARAM wParam, LPARAM lParam); <br> <br>    // Methods that aren't part of any interface <br>    BOOL Initialize(void); <br>    CMandelbrot(); <br>    ~CMandelbrot(); <br>private: <br>    ULONG _cRef; <br>    double _dLeft, _dTop, _dRight, _dBottom; <br>    unsigned _uWidth, _uHeight; <br>    BOOL _fRunning; <br>    IFractalHost * _pfh; <br>    IQuadrantEngine * _pqe; <br>    unsigned _uLimit; <br>    BOOL _fDirty; <br>    BOOL _fUseBoundingBoxes; <br>}; <br> <br>extern HINSTANCE ghinst; <br>extern ULONG gcRef, gcLock; <br> <br>#endif //__cplusplus <br>#endif //__MANDEL_H__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
