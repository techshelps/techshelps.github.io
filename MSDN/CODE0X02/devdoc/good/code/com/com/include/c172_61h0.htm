<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BTTNCUR.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context174"></a>BTTNCUR.H</h2>
<pre><code>/* <br> * BTTNCUR.H <br> * Buttons &amp; Cursors Version 1.1, March 1993 <br> * <br> * Public include file for the Button Images and Cursor DLL, including <br> * structures, definitions, and function prototypes. <br> * <br> * Copyright (c)1992-1996 Microsoft Corporation, All Rights Reserved, <br> * as applied to redistribution of this source code in source form <br> * License is granted to use of compiled code in shipped binaries. <br> */ <br> <br> <br>#ifndef _BTTNCUR_H_ <br>#define _BTTNCUR_H_ <br> <br>#ifdef __cplusplus <br>extern "C" <br>{ <br>#endif <br> <br> <br>//Standard image bitmap <br> <br>//WARNING:  Obsolete.  Use the return from UIToolDisplayData <br>#define IDB_STANDARDIMAGES              400 <br> <br>//New values for display types <br>#define IDB_STANDARDIMAGESMIN           400 <br>#define IDB_STANDARDIMAGES96            400 <br>#define IDB_STANDARDIMAGES72            401 <br>#define IDB_STANDARDIMAGES120           402 <br> <br> <br> <br>//Image indices inside the standard bitmap. <br>#define TOOLIMAGE_MIN                   0 <br>#define TOOLIMAGE_EDITCUT               0 <br>#define TOOLIMAGE_EDITCOPY              1 <br>#define TOOLIMAGE_EDITPASTE             2 <br>#define TOOLIMAGE_FILENEW               3 <br>#define TOOLIMAGE_FILEOPEN              4 <br>#define TOOLIMAGE_FILESAVE              5 <br>#define TOOLIMAGE_FILEPRINT             6 <br>#define TOOLIMAGE_HELP                  7 <br>#define TOOLIMAGE_HELPCONTEXT           8 <br>#define TOOLIMAGE_MAX                   8 <br> <br> <br>//Additional Standard Cursors as defined in the UI Design Guide. <br>#define IDC_NEWUICURSORMIN              500 <br>#define IDC_RIGHTARROW                  500 <br>#define IDC_CONTEXTHELP                 501 <br>#define IDC_MAGNIFY                     502 <br>#define IDC_NODROP                      503 <br>#define IDC_TABLETOP                    504 <br>#define IDC_HSIZEBAR                    505 <br>#define IDC_VSIZEBAR                    506 <br>#define IDC_HSPLITBAR                   507 <br>#define IDC_VSPLITBAR                   508 <br>#define IDC_SMALLARROWS                 509 <br>#define IDC_LARGEARROWS                 510 <br>#define IDC_HARROWS                     511 <br>#define IDC_VARROWS                     512 <br>#define IDC_NESWARROWS                  513 <br>#define IDC_NWSEARROWS                  514 <br>#define IDC_NEWUICURSORMAX              514 <br> <br> <br> <br>//Standard sizes for toolbar buttons and bitmaps on display types <br> <br>//WARNING:  These are obsolete for version 1.0 compatibility/ <br>#define TOOLBUTTON_STDWIDTH             24 <br>#define TOOLBUTTON_STDHEIGHT            22 <br>#define TOOLBUTTON_STDIMAGEWIDTH        16 <br>#define TOOLBUTTON_STDIMAGEHEIGHT       15 <br> <br>/* <br> * Applications can call UIToolDisplayData to get the particular <br> * values to use for the current display instead of using these values <br> * directly.  However, if the application has the aspect ratio already <br> * then these are available for them. <br> */ <br> <br>//Sizes for 72 DPI (EGA) <br>#define TOOLBUTTON_STD72WIDTH           24 <br>#define TOOLBUTTON_STD72HEIGHT          16 <br>#define TOOLBUTTON_STD72IMAGEWIDTH      16 <br>#define TOOLBUTTON_STD72IMAGEHEIGHT     11 <br> <br>//Sizes for 96 DPI (VGA) <br>#define TOOLBUTTON_STD96WIDTH           24 <br>#define TOOLBUTTON_STD96HEIGHT          22 <br>#define TOOLBUTTON_STD96IMAGEWIDTH      16 <br>#define TOOLBUTTON_STD96IMAGEHEIGHT     15 <br> <br>//Sizes for 120 DPI (8514/a) <br>#define TOOLBUTTON_STD120WIDTH          32 <br>#define TOOLBUTTON_STD120HEIGHT         31 <br>#define TOOLBUTTON_STD120IMAGEWIDTH     24 <br>#define TOOLBUTTON_STD120IMAGEHEIGHT    23 <br> <br> <br>//Sizes of a standard button bar depending on the display <br>#define CYBUTTONBAR72                   23 <br>#define CYBUTTONBAR96                   29 <br>#define CYBUTTONBAR120                  38 <br> <br> <br> <br>/* <br> * The low-word of the state contains the display state where each <br> * value is mutually exclusive and contains one or more grouping bits. <br> * Each group represents buttons that share some sub-state in common. <br> * <br> * The high-order byte controls which colors in the source bitmap, <br> * black, white, gray, and dark gray, are to be converted into the <br> * system colors COLOR_BTNTEXT, COLOR_HILIGHT, COLOR_BTNFACE, and <br> * COLOR_BTNSHADOW.  Any or all of these bits may be set to allow <br> * the application control over specific colors. <br> * <br> * The actual state values are split into a command group and an <br> * attribute group.  Up, mouse down, and disabled states are identical, <br> * but only attributes can have down, down disabled, and indeterminate <br> * states. <br> * <br> * BUTTONGROUP_BLANK is defined so an application can draw only the button <br> * without an image in the up, down, mouse down, or indeterminate <br> * state, that is, BUTTONGROUP_BLANK is inclusive with BUTTONGROUP_DOWN <br> * and BUTTONGROUP_LIGHTFACE. <br> */ <br> <br> <br>#define BUTTONGROUP_DOWN                0x0001 <br>#define BUTTONGROUP_ACTIVE              0x0002 <br>#define BUTTONGROUP_DISABLED            0x0004 <br>#define BUTTONGROUP_LIGHTFACE           0x0008 <br>#define BUTTONGROUP_BLANK               0x0010 <br> <br>//Command buttons only <br>#define COMMANDBUTTON_UP                (BUTTONGROUP_ACTIVE) <br>#define COMMANDBUTTON_MOUSEDOWN         (BUTTONGROUP_ACTIVE | BUTTONGROUP_DOWN) <br>#define COMMANDBUTTON_DISABLED          (BUTTONGROUP_DISABLED) <br> <br>//Attribute buttons only <br>#define ATTRIBUTEBUTTON_UP              (BUTTONGROUP_ACTIVE) <br>#define ATTRIBUTEBUTTON_MOUSEDOWN       (BUTTONGROUP_ACTIVE | BUTTONGROUP_DOWN) <br>#define ATTRIBUTEBUTTON_DISABLED        (BUTTONGROUP_DISABLED) <br>#define ATTRIBUTEBUTTON_DOWN            (BUTTONGROUP_ACTIVE | BUTTONGROUP_DOWN | BUTTONGROUP_LIGHTFACE) <br>#define ATTRIBUTEBUTTON_INDETERMINATE   (BUTTONGROUP_ACTIVE | BUTTONGROUP_LIGHTFACE) <br>#define ATTRIBUTEBUTTON_DOWNDISABLED    (BUTTONGROUP_DISABLED | BUTTONGROUP_DOWN | BUTTONGROUP_LIGHTFACE) <br> <br>//Blank buttons only <br>#define BLANKBUTTON_UP                  (BUTTONGROUP_ACTIVE | BUTTONGROUP_BLANK) <br>#define BLANKBUTTON_DOWN                (BUTTONGROUP_ACTIVE | BUTTONGROUP_BLANK | BUTTONGROUP_DOWN | BUTTONGROUP_LIGHTFACE) <br>#define BLANKBUTTON_MOUSEDOWN           (BUTTONGROUP_ACTIVE | BUTTONGROUP_BLANK | BUTTONGROUP_DOWN) <br>#define BLANKBUTTON_INDETERMINATE       (BUTTONGROUP_ACTIVE | BUTTONGROUP_BLANK | BUTTONGROUP_LIGHTFACE) <br> <br> <br>/* <br> * Specific bits to prevent conversions of specific colors to system <br> * colors.  If an application uses this newer library and never specified <br> * any bits, then they benefit from color conversion automatically. <br> */ <br>#define PRESERVE_BLACK                  0x0100 <br>#define PRESERVE_DKGRAY                 0x0200 <br>#define PRESERVE_LTGRAY                 0x0400 <br>#define PRESERVE_WHITE                  0x0800 <br> <br>#define PRESERVE_ALL                    (PRESERVE_BLACK | PRESERVE_DKGRAY | PRESERVE_LTGRAY | PRESERVE_WHITE) <br>#define PRESERVE_NONE                   0   //Backwards compatible <br> <br> <br> <br>//Structure for UIToolConfigureForDisplay <br>typedef struct tagTOOLDISPLAYDATA <br>{ <br>UINT        uDPI;       //Display driver DPI <br>UINT        cyBar;      //Vertical size for a bar containing buttons. <br>UINT        cxButton;   //Dimensions of a button. <br>UINT        cyButton; <br>UINT        cxImage;    //Dimensions of bitmap image <br>UINT        cyImage; <br>UINT        uIDImages;  //Standard resource ID for display-sensitive images <br>} TOOLDISPLAYDATA, FAR *LPTOOLDISPLAYDATA; <br> <br> <br> <br>//Public functions in BTTNCUR.DLL <br>HCURSOR WINAPI UICursorLoad(UINT); <br>BOOL    WINAPI UIToolConfigureForDisplay(LPTOOLDISPLAYDATA); <br>BOOL    WINAPI UIToolButtonDraw(HDC, int, int, int, int, HBITMAP, int, int, int, UINT); <br>BOOL    WINAPI UIToolButtonDrawTDD(HDC, int, int, int, int, HBITMAP, int, int, int, UINT, LPTOOLDISPLAYDATA); <br> <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif //_BTTNCUR_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
