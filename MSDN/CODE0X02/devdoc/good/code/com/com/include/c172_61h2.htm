<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MSGFILTR.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context176"></a>MSGFILTR.H</h2>
<pre><code>/************************************************************************* <br>** <br>**    OLE 2 Utility Code <br>** <br>**    msgfiltr.h <br>** <br>**    This file contains Private definitions, structures, types, and <br>**    function prototypes for the OleStdMessageFilter implementation of <br>**    the IMessageFilter interface. <br>**    This file is part of the OLE 2.0 User Interface support library. <br>** <br>**    (c) Copyright Microsoft Corp. 1990 - 1996 All Rights Reserved <br>** <br>*************************************************************************/ <br> <br>#if !defined( _MSGFILTR_H_ ) <br>#define _MSGFILTR_H_ <br> <br>#ifndef RC_INVOKED <br>#pragma message ("INCLUDING MSGFILTR.H from " __FILE__) <br>#endif  /* RC_INVOKED */ <br> <br>#include "ansiapi.h" <br> <br>// Message Pending callback procedure <br>typedef BOOL (CALLBACK* MSGPENDINGPROC)(MSG FAR *); <br> <br>// HandleInComingCall callback procedure <br>typedef DWORD (CALLBACK* HANDLEINCOMINGCALLBACKPROC) <br>   ( <br>      DWORD               dwCallType, <br>      HTASK               htaskCaller, <br>      DWORD               dwTickCount, <br>      LPINTERFACEINFO     lpInterfaceInfo <br>   ); <br> <br>/* PUBLIC FUNCTIONS */ <br>STDAPI_(LPMESSAGEFILTER) OleStdMsgFilter_Create( <br>      HWND hWndParent, <br>      LPOLESTR szAppName, <br>      MSGPENDINGPROC lpfnCallback, <br>      LPFNOLEUIHOOK  lpfnOleUIHook         // Busy dialog hook callback <br>); <br> <br>STDAPI_(void) OleStdMsgFilter_SetInComingCallStatus( <br>      LPMESSAGEFILTER lpThis, DWORD dwInComingCallStatus); <br> <br>STDAPI_(DWORD) OleStdMsgFilter_GetInComingCallStatus( <br>      LPMESSAGEFILTER lpThis); <br> <br>STDAPI_(HANDLEINCOMINGCALLBACKPROC) <br>   OleStdMsgFilter_SetHandleInComingCallbackProc( <br>      LPMESSAGEFILTER             lpThis, <br>      HANDLEINCOMINGCALLBACKPROC  lpfnHandleInComingCallback); <br> <br>STDAPI_(BOOL) OleStdMsgFilter_EnableBusyDialog( <br>      LPMESSAGEFILTER lpThis, BOOL fEnable); <br> <br>STDAPI_(BOOL) OleStdMsgFilter_EnableNotRespondingDialog( <br>      LPMESSAGEFILTER lpThis, BOOL fEnable); <br> <br>STDAPI_(HWND) OleStdMsgFilter_SetParentWindow( <br>      LPMESSAGEFILTER lpThis, HWND hWndParent); <br> <br> <br>#endif // _MSGFILTR_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
