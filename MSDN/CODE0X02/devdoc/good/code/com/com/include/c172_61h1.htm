<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GIZMOBAR.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context175"></a>GIZMOBAR.H</h2>
<pre><code>/* <br> * GIZMOBAR.H <br> * GizmoBar Version 1.01 <br> * <br> * Public definitions for application that use the GizmoBar such as <br> * messages, prototypes for API functions, notification codes, and <br> * control styles. <br> * <br> * Copyright (c)1993-1996 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Software Design Engineer <br> * Microsoft Systems Developer Relations <br> * <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _GIZMOBAR_H_ <br>#define _GIZMOBAR_H_ <br> <br>#include &lt;bttncur.h&gt; <br> <br>#ifdef __cplusplus <br>extern "C" <br>    { <br>#endif <br> <br> <br>//Classname <br>#define CLASS_GIZMOBAR  TEXT("gizmobar") <br> <br> <br>//Message API Functions <br>HWND    WINAPI GBHwndAssociateSet(HWND, HWND); <br>HWND    WINAPI GBHwndAssociateGet(HWND); <br> <br>BOOL    WINAPI GBGizmoAddW(HWND, UINT, UINT, UINT, UINT, UINT, LPWSTR , HBITMAP, UINT, UINT); <br>BOOL    WINAPI GBGizmoAddA(HWND, UINT, UINT, UINT, UINT, UINT, LPSTR , HBITMAP, UINT, UINT); <br> <br>int     WINAPI GBGizmoTextGetW(HWND, UINT, LPWSTR, UINT); <br>int     WINAPI GBGizmoTextGetA(HWND, UINT, LPSTR, UINT); <br> <br>void    WINAPI GBGizmoTextSetW(HWND, UINT, LPWSTR); <br>void    WINAPI GBGizmoTextSetA(HWND, UINT, LPSTR); <br> <br>#ifdef UNICODE <br>#define GBGizmoAdd      GBGizmoAddW <br>#define GBGizmoTextGet  GBGizmoTextGetW <br>#define GBGizmoTextSet  GBGizmoTextSetW <br>#else <br>#define GBGizmoAdd      GBGizmoAddA <br>#define GBGizmoTextGet  GBGizmoTextGetA <br>#define GBGizmoTextSet  GBGizmoTextSetA <br>#endif <br> <br>BOOL    WINAPI GBGizmoRemove(HWND, UINT); <br> <br>LRESULT WINAPI GBGizmoSendMessage(HWND, UINT, UINT, WPARAM, LPARAM); <br> <br>BOOL    WINAPI GBGizmoShow(HWND, UINT, BOOL); <br>BOOL    WINAPI GBGizmoEnable(HWND, UINT, BOOL); <br>BOOL    WINAPI GBGizmoCheck(HWND, UINT, BOOL); <br>UINT    WINAPI GBGizmoFocusSet(HWND, UINT); <br>BOOL    WINAPI GBGizmoExist(HWND, UINT); <br> <br>int     WINAPI GBGizmoTypeGet(HWND, UINT); <br> <br>DWORD   WINAPI GBGizmoDataSet(HWND, UINT, DWORD); <br>DWORD   WINAPI GBGizmoDataGet(HWND, UINT); <br>BOOL    WINAPI GBGizmoNotifySet(HWND, UINT, BOOL); <br>BOOL    WINAPI GBGizmoNotifyGet(HWND, UINT); <br> <br>UINT    WINAPI GBGizmoIntGet(HWND, UINT, BOOL FAR *, BOOL); <br>void    WINAPI GBGizmoIntSet(HWND, UINT, UINT, BOOL); <br> <br> <br> <br>//Notification codes sent via WM_COMMAND from GBHwndAssociateSet <br>#define GBN_ASSOCIATEGAIN               1 <br>#define GBN_ASSOCIATELOSS               2 <br>#define GBN_GIZMOADDED                  3 <br>#define GBN_GIZMOREMOVED                4 <br> <br>//Message equivalents for functions. <br>#define GBM_HWNDASSOCIATESET            (WM_USER+0) <br>#define GBM_HWNDASSOCIATEGET            (WM_USER+1) <br>#define GBM_GIZMOADDW                   (WM_USER+2) <br>#define GBM_GIZMOADDA                   (WM_USER+3) <br>#define GBM_GIZMOREMOVE                 (WM_USER+4) <br>#define GBM_GIZMOSENDMESSAGE            (WM_USER+5) <br>#define GBM_GIZMOSHOW                   (WM_USER+6) <br>#define GBM_GIZMOENABLE                 (WM_USER+7) <br>#define GBM_GIZMOCHECK                  (WM_USER+8) <br>#define GBM_GIZMOFOCUSSET               (WM_USER+9) <br>#define GBM_GIZMOEXIST                  (WM_USER+10) <br>#define GBM_GIZMOTYPEGET                (WM_USER+11) <br>#define GBM_GIZMODATASET                (WM_USER+12) <br>#define GBM_GIZMODATAGET                (WM_USER+13) <br>#define GBM_GIZMONOTIFYSET              (WM_USER+14) <br>#define GBM_GIZMONOTIFYGET              (WM_USER+15) <br>#define GBM_GIZMOTEXTGETA               (WM_USER+16) <br>#define GBM_GIZMOTEXTGETW               (WM_USER+17) <br>#define GBM_GIZMOTEXTSETA               (WM_USER+18) <br>#define GBM_GIZMOTEXTSETW               (WM_USER+19) <br>#define GBM_GIZMOINTGET                 (WM_USER+20) <br>#define GBM_GIZMOINTSET                 (WM_USER+21) <br> <br>#ifdef UNICODE <br>#define GBM_GIZMOTEXTGET GBM_GIZMOTEXTGETW <br>#define GBM_GIZMOTEXTSET GBM_GIZMOTEXTSETW <br>#define GBM_GIZMOADD GBM_GIZMOADDW <br>#else <br>#define GBM_GIZMOTEXTGET GBM_GIZMOTEXTGETA <br>#define GBM_GIZMOTEXTSET GBM_GIZMOTEXTSETA <br>#define GBM_GIZMOADD GBM_GIZMOADDA <br>#endif <br> <br> <br> <br>/* <br> * Structure passed in lParam of GBM_GIZMOADD that mirrors the <br> * parameters to GBGizmoAdd. <br> */ <br> <br>typedef struct <br>    { <br>    HWND        hWndParent;         //Parent window <br>    UINT        iType;              //Type of gizmo <br>    UINT        iGizmo;             //Position to create gizmo <br>    UINT        uID;                //Identifier of gizmo <br>    UINT        dx;                 //Dimensions of gizmo <br>    UINT        dy; <br>    LPSTR       pszText;            //Gizmo text <br>    HBITMAP     hBmp;               //Source of gizmo button image. <br>    UINT        iImage;             //Index of image from hBmp <br>    UINT        uState;             //Initial state of the gizmo. <br>    } CREATEGIZMOA, FAR *LPCREATEGIZMOA; <br>typedef struct <br>    { <br>    HWND        hWndParent;         //Parent window <br>    UINT        iType;              //Type of gizmo <br>    UINT        iGizmo;             //Position to create gizmo <br>    UINT        uID;                //Identifier of gizmo <br>    UINT        dx;                 //Dimensions of gizmo <br>    UINT        dy; <br>    LPWSTR      pszText;            //Gizmo text <br>    HBITMAP     hBmp;               //Source of gizmo button image. <br>    UINT        iImage;             //Index of image from hBmp <br>    UINT        uState;             //Initial state of the gizmo. <br>    } CREATEGIZMOW, FAR *LPCREATEGIZMOW; <br> <br>#ifdef UNICODE <br>typedef CREATEGIZMOW    CREATEGIZMO; <br>typedef LPCREATEGIZMOW  LPCREATEGIZMO; <br>#define CBCREATEGIZMO sizeof(CREATEGIZMOW) <br>#else <br>typedef CREATEGIZMOA    CREATEGIZMO; <br>typedef LPCREATEGIZMOA  LPCREATEGIZMO; <br>#define CBCREATEGIZMO sizeof(CREATEGIZMOA) <br>#endif <br> <br> <br>//For GBM_GIZMOSENDMESSAGE <br>typedef struct <br>    { <br>    UINT        iMsg; <br>    WPARAM      wParam; <br>    LPARAM      lParam; <br>    } GBMSG, FAR * LPGBMSG; <br> <br>#define CBGBMSG sizeof(GBMSG); <br> <br>//For GBM_GIZMOGETTEXT <br>typedef struct <br>    { <br>    LPSTR       psz; <br>    UINT        cch; <br>    } GBGETTEXTA, FAR * LPGBGETTEXTA; <br>typedef struct <br>    { <br>    LPWSTR      psz; <br>    UINT        cch; <br>    } GBGETTEXTW, FAR * LPGBGETTEXTW; <br> <br>#ifdef UNICODE <br>typedef GBGETTEXTW  GBGETTEXT; <br>typedef LPGBGETTEXTW  LPGBGETTEXT; <br>#define CBGBGETTEXT sizeof(GBGETTEXTW); <br>#else <br>typedef GBGETTEXTA  GBGETTEXT; <br>typedef LPGBGETTEXTA  LPGBGETTEXT; <br>#define CBGBGETTEXT sizeof(GBGETTEXTA); <br>#endif <br> <br> <br>//For GBM_GIZMOGETINT <br>typedef struct <br>    { <br>    BOOL        fSigned; <br>    BOOL        fSuccess; <br>    } GBGETINT, FAR * LPGBGETINT; <br> <br>#define CBGBGETINT sizeof(GBGETINT); <br> <br> <br>//For GBM_GIZMOSETINT <br>typedef struct <br>    { <br>    UINT        uValue; <br>    BOOL        fSigned; <br>    } GBSETINT, FAR * LPGBSETINT; <br> <br>#define CBGBSETINT sizeof(GBSETINT); <br> <br> <br> <br>//Gizmo control types.  DO NOT CHANGE THESE! <br>#define GIZMOTYPE_EDIT                  0x0001 <br>#define GIZMOTYPE_LISTBOX               0x0002 <br>#define GIZMOTYPE_COMBOBOX              0x0004 <br>#define GIZMOTYPE_BUTTONNORMAL          0x0008 <br>#define GIZMOTYPE_TEXT                  0x0010 <br>#define GIZMOTYPE_SEPARATOR             0x0020 <br>#define GIZMOTYPE_BUTTONATTRIBUTEIN     0x0040 <br>#define GIZMOTYPE_BUTTONATTRIBUTEEX     0x0080 <br>#define GIZMOTYPE_BUTTONCOMMAND         0x0100 <br> <br> <br>//Generic state flags for non-buttons based on BTTNCUR.H's groups. <br>#define GIZMO_NORMAL                    (BUTTONGROUP_ACTIVE) <br>#define GIZMO_DISABLED                  (BUTTONGROUP_DISABLED) <br> <br> <br> <br>#ifdef __cplusplus <br>    }   //Match with extern "C" above. <br>#endif <br> <br> <br> <br>#endif //_GIZMOBAR_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
