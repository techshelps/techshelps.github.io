<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ALTASSRT.CXX</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context159"></a>ALTASSRT.CXX</h2>
<pre><code>//+--------------------------------------------------------------------------- <br>// <br>//  Microsoft Windows <br>//  Copyright 1992 - 1998 Microsoft Corporation. <br>// <br>//  File:       altassrt.cxx <br>// <br>//  Contents:   Assertion routines for the SDK <br>// <br>//  Functions:  NTSDKAssert <br>//              PopUpError <br>// <br>//---------------------------------------------------------------------------- <br> <br>#include &lt;stdarg.h&gt; <br>#include &lt;stdio.h&gt; <br> <br>// ensure that this module always compiles with DEBUG settings. <br>#undef  NDEBUG <br> <br>#include "assert.h" <br> <br>int <br>PopUpError( <br>    char const *szMsg, <br>    int iLine, <br>    char const *szFile); <br> <br>extern "C" <br>{ <br> <br># ifdef WIN32 <br>#  undef FAR <br>#  undef NEAR <br># else <br>#  define MessageBoxA MessageBox <br># endif <br> <br># include &lt;windows.h&gt; <br>} <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Function:   PopUpAssert <br>// <br>//  Synopsis:   Display assertion information <br>// <br>//  Effects:    Called when an assertion is hit. <br>// <br>//  History:    8-19-94   stevebl   Created <br>// <br>//---------------------------------------------------------------------------- <br> <br>void _CRTAPI1 <br>PopUpAssert( <br>    void * szFile, <br>    int iLine, <br>    void * szMessage) <br>{ <br>    int id = PopUpError((char const *)szMessage,iLine, (char const *) szFile); <br> <br>    if (id == IDCANCEL) <br>    { <br>#ifdef WIN32 <br>        DebugBreak(); <br>#else <br>        _asm int 3; <br>#endif <br>    } <br>} <br> <br>//+------------------------------------------------------------ <br>// Function:    PopUpError <br>// <br>// Synopsis:    Displays a dialog box using provided text, <br>//              and presents the user with the option to <br>//              continue or cancel. <br>// <br>// Arguments: <br>//      szMsg --        The string to display in main body of dialog <br>//      iLine --        Line number of file in error <br>//      szFile --       Filename of file in error <br>// <br>// Returns: <br>//      IDCANCEL --     User selected the CANCEL button <br>//      IDOK     --     User selected the OK button <br>//------------------------------------------------------------- <br> <br>int <br>PopUpError( <br>    char const *szMsg, <br>    int iLine, <br>    char const *szFile) <br>{ <br> <br>    int id; <br>    static char szAssertCaption[128]; <br>    static char szModuleName[128]; <br> <br>    DWORD tid = GetCurrentThreadId(); <br>    DWORD pid = GetCurrentProcessId(); <br>    char * pszModuleName; <br> <br>    if (GetModuleFileNameA(NULL, szModuleName, 128)) <br>    { <br>        pszModuleName = strrchr(szModuleName, '\\'); <br>        if (!pszModuleName) <br>        { <br>            pszModuleName = szModuleName; <br>        } <br>        else <br>        { <br>            pszModuleName++; <br>        } <br>    } <br>    else <br>    { <br>        pszModuleName = "Unknown"; <br>    } <br> <br>    sprintf(szAssertCaption,"Process: %s File: %s line %u, thread id %d.%d", <br>        pszModuleName, szFile, iLine, pid, tid); <br> <br> <br>    DWORD dwMessageFlags = MB_SETFOREGROUND | MB_TASKMODAL | <br>                           MB_ICONEXCLAMATION | MB_OKCANCEL; <br> <br>    id = MessageBoxA(NULL, <br>                     (char *) szMsg, <br>                     (LPSTR) szAssertCaption, <br>                     dwMessageFlags); <br> <br>    // If id == 0, then an error occurred.  There are two possibilities <br>    // that can cause the error:  Access Denied, which means that this <br>    // process does not have access to the default desktop, and everything <br>    // else (usually out of memory).  Oh well. <br> <br>    return id; <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
