<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOO.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context371"></a>IOO.H</h2>
<pre><code>//********************************************************************** <br>// File name: ioo.h <br>// <br>//      Definition of COleObject <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation. All rights reserved. <br>//********************************************************************** <br>#if !defined( _IOO_H_) <br>#define _IOO_H_ <br> <br> <br>#include &lt;ole2.h&gt; <br>#include "obj.h" <br> <br>class CSimpSvrObj; <br> <br>interface COleObject : public IOleObject <br>{ <br>private: <br>CSimpSvrObj FAR * m_lpObj; <br>int m_nCount; <br>BOOL m_fOpen; <br> <br>public: <br>COleObject::COleObject(CSimpSvrObj FAR * lpSimpSvrObj) <br>{ <br>m_lpObj = lpSimpSvrObj; <br>m_nCount = 0; <br>m_fOpen = FALSE; <br>}; <br>COleObject::~COleObject() <br>{ <br>}; <br>STDMETHODIMP QueryInterface (REFIID riid, LPVOID FAR* ppvObj); <br>STDMETHODIMP_(ULONG) AddRef (); <br>STDMETHODIMP_(ULONG) Release (); <br> <br>STDMETHODIMP SetClientSite (LPOLECLIENTSITE pClientSite); <br>STDMETHODIMP Advise (LPADVISESINK pAdvSink, DWORD FAR* pdwConnection); <br>//@@WTK WIN32, UNICODE <br>//STDMETHODIMP SetHostNames  ( LPCSTR szContainerApp, LPCSTR szContainerObj); <br>STDMETHODIMP SetHostNames  ( LPCOLESTR szContainerApp, LPCOLESTR szContainerObj); <br>STDMETHODIMP DoVerb  (  LONG iVerb, <br>LPMSG lpmsg, <br>LPOLECLIENTSITE pActiveSite, <br>LONG lindex, <br>HWND hwndParent, <br>LPCRECT lprcPosRect); <br>STDMETHODIMP GetExtent  ( DWORD dwDrawAspect, LPSIZEL lpsizel); <br>STDMETHODIMP Update  () ; <br>STDMETHODIMP Close  ( DWORD dwSaveOption) ; <br>STDMETHODIMP Unadvise ( DWORD dwConnection); <br>STDMETHODIMP EnumVerbs  ( LPENUMOLEVERB FAR* ppenumOleVerb) ; <br>STDMETHODIMP GetClientSite  ( LPOLECLIENTSITE FAR* ppClientSite); <br>STDMETHODIMP SetMoniker  ( DWORD dwWhichMoniker, LPMONIKER pmk); <br>STDMETHODIMP GetMoniker  ( DWORD dwAssign, DWORD dwWhichMoniker, <br>   LPMONIKER FAR* ppmk); <br>STDMETHODIMP InitFromData  ( LPDATAOBJECT pDataObject, <br> BOOL fCreation, <br> DWORD dwReserved); <br>STDMETHODIMP GetClipboardData  ( DWORD dwReserved, <br> LPDATAOBJECT FAR* ppDataObject); <br>STDMETHODIMP IsUpToDate  (); <br>STDMETHODIMP GetUserClassID  ( CLSID FAR* pClsid); <br>//@@WTK WIN32, UNICODE <br>//STDMETHODIMP GetUserType  ( DWORD dwFormOfType, LPSTR FAR* pszUserType); <br>STDMETHODIMP GetUserType  ( DWORD dwFormOfType, LPOLESTR FAR* pszUserType); <br>STDMETHODIMP SetExtent  ( DWORD dwDrawAspect, LPSIZEL lpsizel); <br>STDMETHODIMP EnumAdvise  ( LPENUMSTATDATA FAR* ppenumAdvise); <br>STDMETHODIMP GetMiscStatus  ( DWORD dwAspect, DWORD FAR* pdwStatus); <br>STDMETHODIMP SetColorScheme  ( LPLOGPALETTE lpLogpal); <br> <br>void OpenEdit(LPOLECLIENTSITE pActiveSite); <br> <br>}; <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
