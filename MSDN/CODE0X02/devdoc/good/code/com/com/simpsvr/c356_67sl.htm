<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OBJ.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context375"></a>OBJ.H</h2>
<pre><code>//********************************************************************** <br>// File name: obj.h <br>// <br>//      Definition of CSimpSvrObj <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation. All rights reserved. <br>//********************************************************************** <br> <br>#if !defined( _OBJ_H_) <br>#define _OBJ_H_ <br> <br>#include "ioipao.h" <br>#include "ioipo.h" <br>#include "ioo.h" <br>#include "ips.h" <br>#include "ido.h" <br>#include "iec.h" <br> <br>class CSimpSvrDoc; <br>interface COleObject; <br>interface CPersistStorage; <br>interface CDataObject; <br>interface COleInPlaceActiveObject; <br>interface COleInPlaceObject; <br>interface CExternalConnection; <br> <br>class CSimpSvrObj : public IUnknown <br>{ <br>private: <br>CSimpSvrDoc FAR * m_lpDoc;      // Back pointer <br>int m_nCount;                   // reference count <br>BOOL m_fInPlaceActive;          // Used during InPlace Negotiation <br>BOOL m_fInPlaceVisible;         // "  "  "  "   "   "   "   "   " <br>BOOL m_fUIActive;               // "  "  "  "   "   "   "   "   " <br>HMENU m_hmenuShared;            // "  "  "  "   "   "   "   "   " <br>HOLEMENU m_hOleMenu;            // "  "  "  "   "   "   "   "   " <br>RECT m_posRect;                 // "  "  "  "   "   "   "   "   " <br>OLEINPLACEFRAMEINFO m_FrameInfo; <br>BOOL m_fSaveWithSameAsLoad; <br>BOOL m_fNoScribbleMode; <br> <br>DWORD m_dwRegister;             // Registered in ROT <br> <br>int m_red, m_green, m_blue;     // current color <br>POINT m_size;                   // current size <br>int m_xOffset; <br>int m_yOffset; <br>float m_scale; <br> <br>HWND m_hWndParent;              // parent window handle <br> <br>// interfaces used <br>LPSTORAGE m_lpStorage; <br>LPSTREAM m_lpColorStm, m_lpSizeStm; <br>LPOLECLIENTSITE m_lpOleClientSite;          // IOleClientSite <br>LPOLEADVISEHOLDER m_lpOleAdviseHolder;      // IOleAdviseHolder <br>LPDATAADVISEHOLDER m_lpDataAdviseHolder;    // IDataAdviseHolder <br>LPOLEINPLACEFRAME m_lpFrame;                // IOleInPlaceFrame <br>LPOLEINPLACEUIWINDOW m_lpCntrDoc;           // IOleInPlaceUIWindow <br>LPOLEINPLACESITE m_lpIPSite;                // IOleInPlaceSite <br> <br>// interface implemented <br>COleObject m_OleObject;                             // IOleObject <br>CPersistStorage m_PersistStorage;                   // IPersistStorage <br>CDataObject m_DataObject;                           // IDataObject <br>COleInPlaceActiveObject m_OleInPlaceActiveObject;   // IOleInPlaceActiveObject <br>COleInPlaceObject m_OleInPlaceObject;               // IOleInPlaceObject <br>CExternalConnection m_ExternalConnection; <br> <br>public: <br>STDMETHODIMP QueryInterface (REFIID riid, LPVOID FAR* ppvObj); <br>STDMETHODIMP_(ULONG) AddRef (); <br>STDMETHODIMP_(ULONG) Release (); <br> <br>// construction/destruction <br>CSimpSvrObj(CSimpSvrDoc FAR * lpSimpSvrDoc); <br>~CSimpSvrObj(); <br> <br>// utility functions <br>void Draw(HDC hDC, BOOL fMetaDC = TRUE); <br>void PaintObj(HDC hDC); <br>void lButtonDown(WPARAM wParam,LPARAM lParam); <br>HANDLE GetMetaFilePict(); <br>void SaveToStorage (LPSTORAGE lpStg, BOOL fSameAsLoad); <br>void LoadFromStorage (); <br> <br>// visual editing helper functions <br>BOOL DoInPlaceActivate (LONG lVerb); <br>void AssembleMenus(); <br>void AddFrameLevelUI(); <br>void DoInPlaceHide(); <br>void DisassembleMenus(); <br>void SendOnDataChange(); <br>void DeactivateUI(); <br> <br>// member variable access <br>inline BOOL IsInPlaceActive() { return m_fInPlaceActive; }; <br>inline BOOL IsInPlaceVisible() { return m_fInPlaceVisible; }; <br>inline BOOL IsUIActive() { return m_fUIActive; }; <br>inline HWND GetParent() { return m_hWndParent; }; <br>inline LPSTORAGE GetStorage() { return m_lpStorage; }; <br>inline LPOLECLIENTSITE GetOleClientSite() { return m_lpOleClientSite; }; <br>inline LPDATAADVISEHOLDER GetDataAdviseHolder() { return m_lpDataAdviseHolder; }; <br>inline LPOLEADVISEHOLDER GetOleAdviseHolder() { return m_lpOleAdviseHolder; }; <br>inline LPOLEINPLACEFRAME GetInPlaceFrame() { return m_lpFrame; }; <br>inline LPOLEINPLACEUIWINDOW GetUIWindow() { return m_lpCntrDoc; }; <br>inline LPOLEINPLACESITE GetInPlaceSite() { return m_lpIPSite; }; <br>inline COleObject FAR * GetOleObject() { return &amp;m_OleObject; }; <br>inline CPersistStorage FAR * GetPersistStorage() { return &amp;m_PersistStorage; }; <br>inline CDataObject FAR * GetDataObject() { return &amp;m_DataObject; }; <br>inline COleInPlaceActiveObject FAR * GetOleInPlaceActiveObject() { return &amp;m_OleInPlaceActiveObject; }; <br>inline COleInPlaceObject FAR * GetOleInPlaceObject() { return &amp;m_OleInPlaceObject; }; <br>inline void ClearOleClientSite() { m_lpOleClientSite = NULL; }; <br>inline void ClearDataAdviseHolder() { m_lpDataAdviseHolder = NULL; }; <br>inline void ClearOleAdviseHolder() { m_lpOleAdviseHolder = NULL; }; <br>inline LPRECT GetPosRect() { return &amp;m_posRect; }; <br>inline LPPOINT GetSize() { return &amp;m_size; }; <br>inline LPOLEINPLACEFRAMEINFO GetFrameInfo() {return &amp;m_FrameInfo;}; <br>inline DWORD GetRotRegister() { return m_dwRegister; }; <br> <br> <br> <br>// member manipulation <br>inline void SetColor (int nRed, int nGreen, int nBlue) <br>{ m_red = nRed; m_green = nGreen; m_blue = nBlue; }; <br> <br>inline void RotateColor() <br>{ m_red+=10; m_green+=10; m_blue+=10;}; <br> <br> <br>// all of the interface implementations should be friends of this <br>// class <br>friend interface COleObject; <br>friend interface CPersistStorage; <br>friend interface CDataObject; <br>friend interface COleInPlaceActiveObject; <br>friend interface COleInPlaceObject; <br>friend interface CExternalConnection; <br> <br>}; <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
