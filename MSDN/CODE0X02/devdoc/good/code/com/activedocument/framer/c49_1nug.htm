<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SITE.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context58"></a>SITE.H</h2>
<pre><code>/* <br> * SITE.H <br> * View Site for Document Objects. <br> * <br> * Copyright (c)1995-1997 Microsoft Corporation, All Rights Reserved <br> */ <br> <br> <br>#ifndef _SITE_H_ <br>#define _SITE_H_ <br> <br> <br>class CImpIOleClientSite : public IOleClientSite <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        class CSite        *m_pSite; <br>        LPUNKNOWN           m_pUnkOuter; <br> <br>    public: <br>        CImpIOleClientSite(class CSite *, IUnknown *); <br>        ~CImpIOleClientSite(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, void **); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP SaveObject(void); <br>        STDMETHODIMP GetMoniker(DWORD, DWORD, LPMONIKER *); <br>        STDMETHODIMP GetContainer(LPOLECONTAINER *); <br>        STDMETHODIMP ShowObject(void); <br>        STDMETHODIMP OnShowWindow(BOOL); <br>        STDMETHODIMP RequestNewObjectLayout(void); <br>    }; <br> <br>typedef CImpIOleClientSite *PCImpIOleClientSite; <br> <br> <br> <br>class CImpIAdviseSink : public IAdviseSink <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        class CSite        *m_pSite; <br>        LPUNKNOWN           m_pUnkOuter; <br> <br>    public: <br>        CImpIAdviseSink(class CSite *, IUnknown *); <br>        ~CImpIAdviseSink(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, void **); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP_(void)  OnDataChange(LPFORMATETC, LPSTGMEDIUM); <br>        STDMETHODIMP_(void)  OnViewChange(DWORD, LONG); <br>        STDMETHODIMP_(void)  OnRename(LPMONIKER); <br>        STDMETHODIMP_(void)  OnSave(void); <br>        STDMETHODIMP_(void)  OnClose(void); <br>    }; <br> <br> <br>typedef CImpIAdviseSink *PCImpIAdviseSink; <br> <br> <br>class CImpIOleInPlaceSite : public IOleInPlaceSite <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        class CSite        *m_pSite; <br>        LPUNKNOWN           m_pUnkOuter; <br> <br>    public: <br>        CImpIOleInPlaceSite(class CSite *, IUnknown *); <br>        ~CImpIOleInPlaceSite(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, void **); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP GetWindow(HWND *); <br>        STDMETHODIMP ContextSensitiveHelp(BOOL); <br>        STDMETHODIMP CanInPlaceActivate(void); <br>        STDMETHODIMP OnInPlaceActivate(void); <br>        STDMETHODIMP OnUIActivate(void); <br>        STDMETHODIMP GetWindowContext(LPOLEINPLACEFRAME * <br>                        , LPOLEINPLACEUIWINDOW *, LPRECT, LPRECT <br>                        , LPOLEINPLACEFRAMEINFO); <br>        STDMETHODIMP Scroll(SIZE); <br>        STDMETHODIMP OnUIDeactivate(BOOL); <br>        STDMETHODIMP OnInPlaceDeactivate(void); <br>        STDMETHODIMP DiscardUndoState(void); <br>        STDMETHODIMP DeactivateAndUndo(void); <br>        STDMETHODIMP OnPosRectChange(LPCRECT); <br>    }; <br> <br>typedef CImpIOleInPlaceSite *PCImpIOleInPlaceSite; <br> <br> <br>class CImpIOleDocumentSite : public IOleDocumentSite <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        class CSite        *m_pSite; <br>        LPUNKNOWN           m_pUnkOuter; <br> <br>    public: <br>        CImpIOleDocumentSite(class CSite *, IUnknown *); <br>        ~CImpIOleDocumentSite(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, void **); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP ActivateMe(IOleDocumentView *); <br>    }; <br> <br>typedef CImpIOleDocumentSite *PCImpIOleDocumentSite; <br> <br> <br> <br>/* <br> * The CSite class, a COM object with the interfaces IOleClientSite, <br> * IAdviseSink, IOleInPlaceSite, and IOleDocumentSite. <br> */ <br> <br> <br>class CSite : public IUnknown <br>    { <br>    friend CImpIOleClientSite; <br>    friend CImpIAdviseSink; <br>    friend CImpIOleInPlaceSite; <br>    friend CImpIOleDocumentSite; <br> <br>    private: <br>        ULONG           m_cRef; <br>        DWORD           m_dwID; <br>        HWND            m_hWnd; //Client area window of parent <br> <br>        class CFrame   *m_pFR; <br> <br>        BOOL            m_fInitialized; //Something here? <br>        LPSTORAGE       m_pIStorage;    //Storage for object <br>LPSTREAMm_pIStream;//Info stream for object <br> <br>        //Object interfaces <br>        IUnknown          *m_pObj; <br>        IOleObject        *m_pIOleObject; <br>        IOleInPlaceObject *m_pIOleIPObject; <br>        IOleDocumentView  *m_pIOleDocView; <br> <br>        BOOL               m_fDocObj;   //Document object here? <br> <br>        //Our interfaces <br>        PCImpIOleClientSite   m_pImpIOleClientSite; <br>        PCImpIAdviseSink      m_pImpIAdviseSink; <br>        PCImpIOleInPlaceSite  m_pImpIOleIPSite; <br>        PCImpIOleDocumentSite m_pImpIOleDocumentSite; <br> <br> <br>    protected: <br>        BOOL    ObjectInitialize(LPUNKNOWN); <br> <br>    public: <br>        CSite(DWORD, HWND, CFrame *); <br>        ~CSite(void); <br> <br>        //Gotta have an IUnknown for delegation <br>        STDMETHODIMP QueryInterface(REFIID, void **); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        BOOL        Create(LPTSTR, IStorage *); <br>        BOOL        CreateStorage(IStorage *); <br>        void        Close(BOOL); <br>        void        Update(void); <br>        void        Destroy(IStorage *); <br>        void        Activate(LONG); <br>        void        UpdateObjectRects(void); <br>    }; <br> <br> <br>typedef CSite *PCSite; <br> <br>#endif //_SITE_H_ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
