<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IADVSINK.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context51"></a>IADVSINK.CPP</h2>
<pre><code>/* <br> * IADVSINK.CPP <br> * IAdviseSink for Document Objects CSite class <br> * <br> * Copyright (c)1995-1997 Microsoft Corporation, All Rights Reserved <br> */ <br> <br> <br>#include "framer.h" <br> <br> <br>/* <br> * CImpIAdviseSink::CImpIAdviseSink <br> * CImpIAdviseSink::~CImpIAdviseSink <br> * <br> * Parameters (Constructor): <br> *  pSite           PCSite of the site we're in. <br> *  pUnkOuter       LPUNKNOWN to which we delegate. <br> */ <br> <br>CImpIAdviseSink::CImpIAdviseSink(PCSite pSite <br>    , LPUNKNOWN pUnkOuter) <br>    { <br>    m_cRef=0; <br>    m_pSite=pSite; <br>    m_pUnkOuter=pUnkOuter; <br>    return; <br>    } <br> <br>CImpIAdviseSink::~CImpIAdviseSink(void) <br>    { <br>    return; <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIAdviseSink::QueryInterface <br> * CImpIAdviseSink::AddRef <br> * CImpIAdviseSink::Release <br> * <br> * Purpose: <br> *  IUnknown members for CImpIAdviseSink object. <br> */ <br> <br>STDMETHODIMP CImpIAdviseSink::QueryInterface(REFIID riid, void **ppv) <br>    { <br>    return m_pUnkOuter-&gt;QueryInterface(riid, ppv); <br>    } <br> <br> <br>STDMETHODIMP_(ULONG) CImpIAdviseSink::AddRef(void) <br>    { <br>    ++m_cRef; <br>    return m_pUnkOuter-&gt;AddRef(); <br>    } <br> <br>STDMETHODIMP_(ULONG) CImpIAdviseSink::Release(void) <br>    { <br>    --m_cRef; <br>    return m_pUnkOuter-&gt;Release(); <br>    } <br> <br> <br> <br>/* <br> * Unused members in CImpIAdviseSink <br> *  OnDataChange <br> *  OnViewChange <br> *  OnRename <br> *  OnSave <br> */ <br> <br>STDMETHODIMP_(void) CImpIAdviseSink::OnDataChange(LPFORMATETC pFEIn <br>    , LPSTGMEDIUM pSTM) <br>    { <br>    return; <br>    } <br> <br>STDMETHODIMP_(void) CImpIAdviseSink::OnViewChange(DWORD dwAspect <br>    , LONG lindex) <br>    {     <br>    return; <br>    } <br> <br>STDMETHODIMP_(void) CImpIAdviseSink::OnRename(LPMONIKER pmk) <br>    { <br>    return; <br>    } <br> <br>STDMETHODIMP_(void) CImpIAdviseSink::OnSave(void) <br>    { <br>    return; <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIAdviseSink::OnClose <br> * <br> * Purpose: <br> *  Informs the advise sink that the OLE object has closed and is <br> *  no longer bound in any way.  We use this to do a File/Close <br> *  to delete the object since we don't hold onto any. <br> * <br> * Parameters: <br> *  None <br> * <br> * Return Value: <br> *  None <br> */ <br> <br>STDMETHODIMP_(void) CImpIAdviseSink::OnClose(void) <br>    { <br>//This does the same as File/Close <br>//Not quite because CFrame::Close requires some synchronous <br>//calls that will fail if done here, so just post a message to <br>//do this <br>    //m_pSite-&gt;m_pFR-&gt;Close(); <br> <br>HWNDhwnd; <br>m_pSite-&gt;m_pFR-&gt;GetWindow(&amp;hwnd); <br>PostMessage( <br>hwnd,  <br>WM_COMMAND, <br>MAKELONG(IDM_FILECLOSE, 0), <br>0); <br>    return; <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
