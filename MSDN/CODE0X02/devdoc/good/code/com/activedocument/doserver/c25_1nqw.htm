<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLEDOCVW.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context38"></a>OLEDOCVW.H</h2>
<pre><code>/************************************************************************** <br>   THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>   ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>   PARTICULAR PURPOSE. <br> <br>   Copyright 1997 Microsoft Corporation.  All Rights Reserved. <br>**************************************************************************/ <br> <br>/****************************************************************************** <br> <br>   File:          OleDoctVw.h <br>    <br>   Description:   COleDocumentView definitions. <br> <br>******************************************************************************/ <br> <br>#ifndef OLEDOCUMENTVIEW_H <br>#define OLEDOCUMENTVIEW_H <br> <br>#include "DOServer.h" <br> <br>#define VIEW_CLASS_NAME TEXT("DocObject_View_Class") <br> <br>/************************************************************************** <br> <br>   COleDocumentView class definition <br> <br>**************************************************************************/ <br> <br>class COleDocument; <br> <br>class COleDocumentView : public IOleDocumentView <br>{ <br>friend class COleDocument; <br>friend class COleInPlaceActiveObject; <br> <br>private: <br>BOOL                       m_fInPlaceActive; <br>RECT                       m_Rect; <br>   COleDocument               *m_pOleDoc; <br>LPOLEINPLACESITE           m_pInPlaceSite; <br>   HWND                       m_hwndView; <br>   LPOLEINPLACEFRAME          m_pInPlaceFrame; <br>   LPOLEINPLACEUIWINDOW       m_pInPlaceUIWindow; <br>   OLEINPLACEFRAMEINFO        m_FrameInfo; <br>   HMENU                      m_hSharedMenu; <br>   HOLEMENU                   m_hOleMenu; <br>   OLEMENUGROUPWIDTHS         m_mgw; <br>   BOOL                       m_fUIActive; <br>    <br>public: <br>   COleDocumentView(COleDocument*); <br>   ~COleDocumentView(); <br>    <br>   //IUnknown methods <br>   STDMETHODIMP QueryInterface(REFIID, LPVOID*); <br>   STDMETHODIMP_(DWORD) AddRef(); <br>   STDMETHODIMP_(DWORD) Release(); <br> <br>   //IOleDocumentView methods <br>   STDMETHODIMP SetInPlaceSite(IOleInPlaceSite*); <br>   STDMETHODIMP GetInPlaceSite(IOleInPlaceSite**); <br>   STDMETHODIMP GetDocument(IUnknown**); <br>   STDMETHODIMP SetRect(LPRECT); <br>   STDMETHODIMP GetRect(LPRECT); <br>   STDMETHODIMP SetRectComplex(LPRECT, LPRECT, LPRECT, LPRECT); <br>   STDMETHODIMP Show(BOOL); <br>   STDMETHODIMP UIActivate(BOOL); <br>   STDMETHODIMP Open(void); <br>   STDMETHODIMP CloseView(DWORD); <br>   STDMETHODIMP SaveViewState(IStream*); <br>   STDMETHODIMP ApplyViewState(IStream*); <br>   STDMETHODIMP Clone(IOleInPlaceSite*, IOleDocumentView**); <br> <br>private: <br>   STDMETHODIMP ActivateInPlace(); <br>   STDMETHODIMP DeactivateInPlace(); <br>   STDMETHODIMP ActivateUI(); <br>   STDMETHODIMP DeactivateUI(); <br>   STDMETHODIMP CreateViewWindow(); <br>   static LRESULT CALLBACK ViewWndProc(HWND, UINT, WPARAM, LPARAM); <br>LRESULT OnPaint(void); <br>LRESULT OnCommand(UINT, UINT, HWND); <br>LRESULT OnCreate(void); <br>   BOOL MergeMenus(void); <br>   BOOL RemoveMenus(void); <br>   BOOL UpdateMenu(HMENU); <br>}; <br> <br>#endif   //OLEDOCUMENTVIEW_H </code></pre>
<p>&nbsp;</p></body>
</HTML>
