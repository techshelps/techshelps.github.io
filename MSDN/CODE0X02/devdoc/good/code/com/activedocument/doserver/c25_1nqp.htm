<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OIPAOBJ.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context31"></a>OIPAOBJ.CPP</h2>
<pre><code>/************************************************************************** <br>   THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>   ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>   PARTICULAR PURPOSE. <br> <br>   Copyright 1997 Microsoft Corporation.  All Rights Reserved. <br>**************************************************************************/ <br> <br>/************************************************************************** <br> <br>   File:          OIPAObj.cpp <br>    <br>   Description:   COleInPlaceActiveObject implementation. <br> <br>**************************************************************************/ <br> <br>/************************************************************************** <br>   #include statements <br>**************************************************************************/ <br> <br>#include "OIPAObj.h" <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::COleInPlaceActiveObject() <br>    <br>**************************************************************************/ <br> <br>COleInPlaceActiveObject::COleInPlaceActiveObject(COleDocument *pOleDoc) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject's constructor\n")); <br> <br>m_pOleDoc = pOleDoc; <br> <br>m_fEnableModeless = FALSE; <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::~COleInPlaceActiveObject() <br>    <br>**************************************************************************/ <br> <br>COleInPlaceActiveObject::~COleInPlaceActiveObject() <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject's destructor\n")); <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::QueryInterface() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP COleInPlaceActiveObject::QueryInterface(REFIID riid, LPVOID *ppReturn) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::QueryInterface\n")); <br> <br>return m_pOleDoc-&gt;QueryInterface(riid, ppReturn); <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::AddRef() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP_(ULONG) COleInPlaceActiveObject::AddRef() <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::AddRef\n")); <br> <br>return m_pOleDoc-&gt;AddRef(); <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::Release() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP_(ULONG) COleInPlaceActiveObject::Release() <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::Release\n")); <br> <br>return m_pOleDoc-&gt;Release(); <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::OnDocWindowActivate() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP COleInPlaceActiveObject::OnDocWindowActivate(BOOL fActivate) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::OnDocWindowActivate\n")); <br> <br>//If we are getting activated, merge our menus. <br>if(fActivate) <br>   { <br>   if(m_pOleDoc-&gt;m_pOleDocView) <br>      { <br>      m_pOleDoc-&gt;m_pOleDocView-&gt;MergeMenus(); <br>      } <br>   } <br> <br>return S_OK; <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::OnFrameWindowActivate() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP COleInPlaceActiveObject::OnFrameWindowActivate(BOOL fActivate) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::OnFrameWindowActivate\n")); <br> <br>return S_OK; <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::GetWindow() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP COleInPlaceActiveObject::GetWindow(HWND *phwnd) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::GetWindow\n")); <br> <br>return m_pOleDoc-&gt;GetWindow(phwnd); <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::ContextSensitiveHelp() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP COleInPlaceActiveObject::ContextSensitiveHelp(BOOL fEnterMode) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::ContextSensitiveHelp\n")); <br> <br>return E_NOTIMPL; <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::TranslateAccelerator() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP COleInPlaceActiveObject::TranslateAccelerator(LPMSG lpmsg) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::TranslateAccelerator\n")); <br> <br>// no accelerator table, return FALSE <br>return S_FALSE; <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::ResizeBorder() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP COleInPlaceActiveObject::ResizeBorder(   LPCRECT lprectBorder, <br>                                                      LPOLEINPLACEUIWINDOW lpUIWindow, <br>                                                      BOOL fFrameWindow) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::ResizeBorder\n")); <br> <br>return S_OK; <br>} <br> <br>/************************************************************************** <br> <br>   COleInPlaceActiveObject::EnableModeless() <br>    <br>**************************************************************************/ <br> <br>STDMETHODIMP COleInPlaceActiveObject::EnableModeless(BOOL fEnable) <br>{ <br>OutputDebugString(TEXT("COleInPlaceActiveObject::EnableModeless\n")); <br> <br>m_fEnableModeless = fEnable; <br> <br>return S_OK; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
