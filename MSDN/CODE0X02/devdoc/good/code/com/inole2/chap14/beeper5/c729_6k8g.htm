<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BEEPER.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context730"></a>BEEPER.H</h2>
<pre><code>/* <br> * BEEPER.H <br> * Beeper Automation Object #5 Chapter 14 <br> * <br> * Classes that implement the Beeper object. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Right Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _BEEPER_H_ <br>#define _BEEPER_H_ <br> <br>/* <br> * This #define tells &lt;bookguid.h&gt; to not define GUIDs that will <br> * be defined in MKTYPLIB-generated header files, like ibeeper.h. <br> */ <br>#define GUIDS_FROM_TYPELIB <br>#define INC_AUTOMATION <br>#define INC_CONTROLS <br>#define CHAPTER14 <br>#include &lt;inole.h&gt; <br> <br>//This file is generated from MKTYPLIB <br>#include "ibeeper.h" <br> <br>class CImpIProvideClassInfo; <br>typedef class CImpIProvideClassInfo *PCImpIProvideClassInfo; <br> <br> <br> <br>class CBeeper : public IBeeper <br>    { <br>    protected: <br>        ULONG           m_cRef;         //Object reference count <br>        LPUNKNOWN       m_pUnkOuter;    //Controlling unknown <br>        PFNDESTROYED    m_pfnDestroy;   //To call on closure <br> <br>        long            m_lSound;       //Type of sound <br> <br>        ITypeInfo      *m_pITINeutral;  //Type information <br>        IUnknown       *m_pIUnkStdDisp; //StdDispatch object <br> <br>        PCImpIProvideClassInfo  m_pImpIProvideCI; <br> <br>    public: <br>        CBeeper(LPUNKNOWN, PFNDESTROYED); <br>        ~CBeeper(void); <br> <br>        BOOL         Init(void); <br> <br>        //Non-delegating object IUnknown <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //IBeeper functions <br>        STDMETHODIMP_(long)  get_Sound(void); <br>        STDMETHODIMP_(void)  put_Sound(long); <br>        STDMETHODIMP_(long)  Beep(void); <br>    }; <br> <br>typedef CBeeper *PCBeeper; <br> <br> <br>class CImpIProvideClassInfo : public IProvideClassInfo <br>    { <br>    public: <br>        ULONG           m_cRef;     //For debugging <br> <br>    private: <br>        LPUNKNOWN       m_pUnkOuter; <br>        ITypeInfo      *m_pITI;     //To return from GetClassInfo <br> <br>    public: <br>        CImpIProvideClassInfo(LPUNKNOWN, ITypeLib *); <br>        ~CImpIProvideClassInfo(void); <br> <br>        //IUnknown members that delegate to m_pUnkOuter. <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //IProvideClassInfo members <br>        STDMETHODIMP GetClassInfo(ITypeInfo **); <br> <br>    }; <br> <br> <br> <br>#endif //_BEEPER_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
