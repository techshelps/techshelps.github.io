<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COCOSMO.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context591"></a>COCOSMO.H</h2>
<pre><code>/* <br> * COCOSMO.H <br> * Component Cosmo Chapter 10 <br> * <br> * Single include file that pulls in everything needed for other <br> * source files in the Cosmo application. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _COCOSMO_H_ <br>#define _COCOSMO_H_ <br> <br>#define INC_CLASSLIB <br>#define INC_CONTROLS <br>#define INC_OLE2 <br>//CHAPTER10MOD <br>#define CHAPTER10 <br>#include &lt;inole.h&gt; <br>#include &lt;ipoly10.h&gt; <br>//End CHAPTER10MOD <br>#include "resource.h" <br> <br>//COCOSMO.CPP:  Frame object that creates a main window <br> <br>class CCosmoFrame : public CFrame <br>    { <br>    private: <br>        HBITMAP         m_hBmpLines[5];     //Menu item bitmaps <br>        UINT            m_uIDCurLine;       //Current line selection <br>        BOOL            m_fInitialized;     //CoInitialize work? <br> <br>    protected: <br>        //Overridable for creating a CClient for this frame <br>        virtual PCClient  CreateCClient(void); <br> <br>        virtual BOOL      RegisterAllClasses(void); <br>        virtual BOOL      PreShowInit(void); <br>        virtual UINT      CreateToolbar(void); <br> <br>        virtual LRESULT   OnCommand(HWND, WPARAM, LPARAM); <br>        virtual void      OnDocumentDataChange(PCDocument); <br>        virtual void      OnDocumentActivate(PCDocument); <br> <br>        //New for this class <br>        virtual void      CreateLineMenu(void); <br> <br>    public: <br>        CCosmoFrame(HINSTANCE, HINSTANCE, LPSTR, int); <br>        virtual ~CCosmoFrame(void); <br> <br>        //Overrides <br>        virtual BOOL      Init(PFRAMEINIT); <br>        virtual void      UpdateMenus(HMENU, UINT); <br>        virtual void      UpdateToolbar(void); <br> <br>        //New for this class <br>        virtual void      CheckLineSelection(UINT); <br>    }; <br> <br> <br>typedef CCosmoFrame *PCCosmoFrame; <br> <br> <br> <br> <br> <br>//CLIENT.CPP <br> <br>/* <br> * The only reason we have a derived class here is to override <br> * CreateCDocument so we can create our own type as well as <br> * overriding NewDocument to perform one other piece of work once <br> * the document's been created. <br> */ <br> <br>class CCosmoClient : public CClient <br>    { <br>    protected: <br>        //Overridable for creating a new CDocument <br>        virtual PCDocument CreateCDocument(void); <br> <br>    public: <br>        CCosmoClient(HINSTANCE, PCFrame); <br>        virtual ~CCosmoClient(void); <br> <br>        virtual PCDocument NewDocument(BOOL); <br>    }; <br> <br> <br>typedef CCosmoClient *PCCosmoClient; <br> <br> <br> <br> <br>//DOCUMENT.CPP <br> <br>class CCosmoDoc; <br>typedef CCosmoDoc *PCCosmoDoc; <br> <br>//CHAPTER10MOD <br>class CPolylineAdviseSink : public IPolylineAdviseSink10 <br>//End CHAPTER10MOD <br>    { <br>    private: <br>        PCCosmoDoc  m_pDoc;         //Backpointer to document <br>        ULONG       m_cRef; <br> <br>    public: <br>        CPolylineAdviseSink(PCCosmoDoc); <br>        ~CPolylineAdviseSink(void); <br> <br>        //IUnknown members <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //Advise members. <br>        STDMETHODIMP_(void) OnPointChange(void); <br>        STDMETHODIMP_(void) OnSizeChange(void); <br>        STDMETHODIMP_(void) OnColorChange(void); <br>        STDMETHODIMP_(void) OnLineStyleChange(void); <br>        //CHAPTER10MOD <br>        //OnDataChange removed to IAdviseSink <br>        //End CHAPTER10MOD <br>    }; <br> <br>typedef CPolylineAdviseSink *PCPolylineAdviseSink; <br> <br> <br>//CHAPTER10MOD <br>/* <br> * The generic advisory interface.  This object controls it's own <br> * lifetime and the document becomes a user of the object with <br> * the last reference count. <br> */ <br> <br>class CImpIAdviseSink : public IAdviseSink <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        LPVOID              m_pObj; <br>        LPUNKNOWN           m_pUnkOuter; <br> <br>    public: <br>        CImpIAdviseSink(LPVOID, LPUNKNOWN); <br>        ~CImpIAdviseSink(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP_(void)  OnDataChange(LPFORMATETC, LPSTGMEDIUM); <br>        STDMETHODIMP_(void)  OnViewChange(DWORD, LONG); <br>        STDMETHODIMP_(void)  OnRename(LPMONIKER); <br>        STDMETHODIMP_(void)  OnSave(void); <br>        STDMETHODIMP_(void)  OnClose(void); <br>    }; <br> <br>typedef CImpIAdviseSink *PCImpIAdviseSink; <br>//End CHAPTER10MOD <br> <br> <br> <br>//Constant ID for the window polyline that lives in a document <br>#define ID_POLYLINE         10 <br> <br>//Stream name to open with IPersistStream[Init] <br>#define SZSTREAM                    OLETEXT("CONTENTS") <br> <br> <br>//CHAPTER10MOD <br>class CCosmoDoc : public CDocument, public IUnknown <br>//End CHAPTER10MOD <br>    { <br>    friend class CPolylineAdviseSink; <br>    //CHAPTER10MOD <br>    friend class CImpIAdviseSink; <br>    //End CHAPTER10MOD <br> <br>    protected: <br>        UINT                    m_uPrevSize;    //Last WM_SIZE wParam <br> <br>        //CHAPTER10MOD <br>        IPolyline10            *m_pPL;          //Polyline object <br>        IPolylineAdviseSink10  *m_pPLAdv; <br>        //End CHAPTER8MOD <br> <br>        IConnectionPoint       *m_pIConnectPt; <br>        DWORD                   m_dwCookie;     //Connection key <br>        IStorage               *m_pIStorage;    //Doc storage <br>        PERSISTPOINTER          m_pp; <br> <br>        //CHAPTER10MOD <br>        PCImpIAdviseSink        m_pImpIAdviseSink; <br> <br>        DWORD                   m_dwConn;       //Advisory connection <br>        ULONG                   m_cRef;         //Document ref count <br>        //EndCHAPTER10MOD <br> <br>    protected: <br>        virtual BOOL     FMessageHook(HWND, UINT, WPARAM, LPARAM <br>            , LRESULT *); <br> <br>    public: <br>        CCosmoDoc(HINSTANCE, PCFrame, PCDocumentAdviseSink); <br>        virtual ~CCosmoDoc(void); <br> <br>        //CHAPTER10MOD <br>        //Need a controlling unknown for our interfaces <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br>        //End CHAPTER10MOD <br> <br>        virtual BOOL     Init(PDOCUMENTINIT); <br>        virtual void     Clear(void); <br> <br>        virtual UINT     Load(BOOL, LPTSTR); <br>        virtual UINT     Save(UINT, LPTSTR); <br> <br>        virtual void     Undo(void); <br>        virtual BOOL     Clip(HWND, BOOL); <br>        virtual HGLOBAL  RenderFormat(UINT); <br>        virtual BOOL     FQueryPaste(void); <br>        virtual BOOL     Paste(HWND); <br> <br>        virtual COLORREF ColorSet(UINT, COLORREF); <br>        virtual COLORREF ColorGet(UINT); <br> <br>        virtual UINT     LineStyleSet(UINT); <br>        virtual UINT     LineStyleGet(void); <br>    }; <br> <br>typedef CCosmoDoc *PCCosmoDoc; <br> <br> <br>//These color indices wrap the polyline definitions <br>#define DOCCOLOR_BACKGROUND             POLYLINECOLOR_BACKGROUND <br>#define DOCCOLOR_LINE                   POLYLINECOLOR_LINE <br> <br> <br> <br>#endif //_COCOSMO_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
