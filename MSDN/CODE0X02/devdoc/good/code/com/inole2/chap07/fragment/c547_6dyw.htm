<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FRAGMENT.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context548"></a>FRAGMENT.H</h2>
<pre><code>/* <br> * FRAGMENT.H <br> * Fragmented File Generator Chapter 7 <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _FRAGMENT_H_ <br>#define _FRAGMENT_H_ <br> <br> <br>#define INC_OLE2 <br>#define CHAPTER7 <br>#include &lt;inole.h&gt; <br>#include &lt;string.h&gt; <br> <br>#define CSTREAMS    26 <br>#define CCHPATHMAX  256 <br> <br> <br>class CFragment <br>    { <br>    private: <br>        BOOL        m_fInitialized;         //CoInitilize? <br>        IMalloc    *m_pIMalloc;             //Task allocator <br>        char       *m_pch;                  //Char array (8 bits) <br>        TCHAR      *m_pszScratch;           //Scratch space <br> <br>        UINT        m_cch;                  //Stream size <br>        UINT        m_cStreams;             //Stream count <br>        TCHAR       m_szFile[CCHPATHMAX];   //File in use <br> <br>        HCURSOR     m_hCur;                 //Saved cursor <br> <br> <br>    public: <br>        CFragment::CFragment(void); <br>        CFragment::~CFragment(void); <br> <br>        BOOL        Init(void); <br>        BOOL        AllocCharArrays(void); <br>        BOOL        CreateFragmentedFile(void); <br>        void        FreeSpaceInFile(void); <br>        void        DefragmentFile(void); <br> <br>    private: <br>        void        StreamCreate(IStorage *, UINT, IStream **); <br>        void        Message(LPTSTR); <br> <br>       #ifndef WIN32 <br>        //Substitute for Win32 MoveFile under Win16 <br>        void        MyMoveFile(char *, char *); <br>       #endif <br>    }; <br> <br>#endif //_FRAGMENT_H_ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
