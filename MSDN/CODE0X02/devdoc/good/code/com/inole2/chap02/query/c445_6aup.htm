<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OBJECT3.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context451"></a>OBJECT3.H</h2>
<pre><code>/* <br> * OBJECT3.H <br> * <br> * Definition of the CObject1 class that uses mutliple <br> * inheritance to provide ISampleOne and ISampleTwo. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _OBJECT3_H_ <br>#define _OBJECT3_H_ <br> <br> <br>//Creation function <br>BOOL CreateObject3(IUnknown **); <br> <br> <br>/* <br> * The object we want to provide in OLE supports the IUnknown, <br> * ISampleOne, and ISampleTwo interfaces. <br> * <br> * The C++ class, CObject3, implements these interfaces through <br> * multiple inheritance, so the implementation of all IUnknown <br> * members is shared.  The trick to this implementation is that <br> * we have to use explicit typecasts in the implementation of <br> * QueryInterface in order to create the right vtables for each <br> * interface.  See OBJECT3.CPP. <br> */ <br> <br>//The C++ class that manages the actual object. <br>class CObject3 : public ISampleOne, public ISampleTwo <br>    { <br>    private: <br>        DWORD           m_cRef;         //Object reference count <br> <br>    public: <br>        CObject3(void); <br>        ~CObject3(void); <br> <br>        //Shared IUnknown members <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(DWORD) AddRef(void); <br>        STDMETHODIMP_(DWORD) Release(void); <br> <br>        //ISampleOne members <br>        STDMETHODIMP         GetMessage(LPTSTR, UINT); <br> <br>        //ISampleTwo members <br>        STDMETHODIMP         GetString(LPTSTR, UINT); <br>    }; <br> <br>typedef CObject3 *PCObject3; <br> <br>#endif _OBJECT3_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
