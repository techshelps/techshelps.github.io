<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COSMO.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context796"></a>COSMO.H</h2>
<pre><code>/* <br> * COSMO.H <br> * Cosmo Chapter 18 <br> * <br> * Single include file that pulls in everything needed for other <br> * source files in the Cosmo application. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _COSMO_H_ <br>#define _COSMO_H_ <br> <br>#define INC_CLASSLIB <br>//CHAPTER18MOD <br>#define INC_OLE2UI <br>#define CHAPTER18 <br>//End CHAPTER18MOD <br>#include &lt;inole.h&gt; <br>#include "resource.h" <br> <br> <br>//Get the editor window information. <br>#include "polyline.h" <br> <br> <br> <br>//COSMO.CPP:  Frame object that creates a main window <br> <br>class CCosmoFrame : public CFrame <br>    { <br>    //CHAPTER18MOD <br>    friend class CFigureClassFactory; <br>    friend class CFigure;   //For UI purposes. <br>    //End CHAPTER18MOD <br> <br>    private: <br>        HBITMAP         m_hBmpLines[5];     //Menu item bitmaps <br>        UINT            m_uIDCurLine;       //Current line selection <br>        BOOL            m_fInitialized;     //Did OleInitalize work? <br>        LPCLASSFACTORY  m_pIClassDataTran;  //For locking <br> <br>        //CHAPTER18MOD <br>        BOOL            m_fEmbedding;       //-Embedding found? <br>        DWORD           m_dwRegCO;          //Registration key <br>        LPCLASSFACTORY  m_pIClassFactory; <br>        //End CHAPTER18MOD <br> <br>    protected: <br>        //Overridable for creating a CClient for this frame <br>        virtual PCClient  CreateCClient(void); <br> <br>        virtual BOOL      RegisterAllClasses(void); <br>        virtual BOOL      PreShowInit(void); <br>        virtual UINT      CreateToolbar(void); <br> <br>        virtual LRESULT   OnCommand(HWND, WPARAM, LPARAM); <br>        virtual void      OnDocumentDataChange(PCDocument); <br>        virtual void      OnDocumentActivate(PCDocument); <br> <br>        //New for this class <br>        virtual void      CreateLineMenu(void); <br> <br>    public: <br>        CCosmoFrame(HINSTANCE, HINSTANCE, LPSTR, int); <br>        virtual ~CCosmoFrame(void); <br> <br>        //Overrides <br>        virtual BOOL      Init(PFRAMEINIT); <br>        virtual void      UpdateMenus(HMENU, UINT); <br>        virtual void      UpdateToolbar(void); <br> <br>        //New for this class <br>        virtual void      CheckLineSelection(UINT); <br> <br>        //CHAPTER18MOD <br>        virtual void      UpdateEmbeddingUI(BOOL, PCDocument <br>                              , LPCTSTR, LPCTSTR); <br>        //End CHAPTER18MOD <br>    }; <br> <br> <br>typedef CCosmoFrame *PCCosmoFrame; <br> <br> <br> <br> <br> <br>//CLIENT.CPP <br> <br>/* <br> * The only reason we have a derived class here is to override <br> * CreateCDocument so we can create our own type as well as <br> * overriding NewDocument to perform one other piece of work once <br> * the document's been created. <br> */ <br> <br>class CCosmoClient : public CClient <br>    { <br>    protected: <br>        //Overridable for creating a new CDocument <br>        virtual PCDocument CreateCDocument(void); <br> <br>    public: <br>        CCosmoClient(HINSTANCE, PCFrame); <br>        virtual ~CCosmoClient(void); <br> <br>        virtual PCDocument NewDocument(BOOL); <br>    }; <br> <br> <br>typedef CCosmoClient *PCCosmoClient; <br> <br> <br> <br> <br>//DOCUMENT.CPP <br> <br>//Constant ID for the window polyline that lives in a document <br>#define ID_POLYLINE         10 <br> <br> <br>class CCosmoDoc : public CDocument <br>    { <br>    friend class CPolylineAdviseSink; <br> <br>    //These need access to FQueryPasteFromData, PasteFromData <br>    friend class CDropTarget; <br>    friend class CDropSource; <br> <br>    //CHAPTER18MOD <br>    friend class CFigureClassFactory; <br>    friend class CFigure; <br>    //End CHAPTER18MOD <br> <br>    protected: <br>        UINT                    m_uPrevSize;    //Last WM_SIZE wParam <br>        LONG                    m_lVer;         //Loaded Polyline ver <br> <br>        PCPolyline              m_pPL;          //Polyline window here <br>        PCPolylineAdviseSink    m_pPLAdv;       //Advises from Polyline <br> <br>        class CDropTarget      *m_pDropTarget;  //Registered target <br>        BOOL                    m_fDragSource;  //Source==target? <br> <br>        //CHAPTER18MOD <br>        UINT                    m_cfEmbedSource; <br>        UINT                    m_cfObjectDescriptor; <br> <br>        class CFigure          *m_pFigure;      //The object in us. <br>        //End CHAPTER18MOD <br> <br>    protected: <br>        virtual BOOL     FMessageHook(HWND, UINT, WPARAM, LPARAM <br>            , LRESULT *); <br> <br>        void             DropSelectTargetWindow(void); <br> <br>    public: <br>        CCosmoDoc(HINSTANCE, PCFrame, PCDocumentAdviseSink); <br>        virtual ~CCosmoDoc(void); <br> <br>        virtual BOOL     Init(PDOCUMENTINIT); <br> <br>        virtual void     Clear(void); <br> <br>        //CHAPTER18MOD <br>        virtual BOOL     FDirtySet(BOOL); <br>        virtual BOOL     FDirtyGet(void); <br>        //End CHAPTER18MOD <br> <br>        virtual UINT     Load(BOOL, LPTSTR); <br>        virtual UINT     Save(UINT, LPTSTR); <br> <br>        virtual void     Undo(void); <br>        virtual BOOL     Clip(HWND, BOOL); <br>        virtual HGLOBAL  RenderFormat(UINT); <br>        //CHAPTER18MOD <br>        virtual BOOL     RenderMedium(UINT, LPSTGMEDIUM); <br>        //End CHAPTER18MOD <br>        virtual BOOL     FQueryPaste(void); <br>        virtual BOOL     Paste(HWND); <br> <br>        //CHAPTER18MOD <br>        //These were protected.  Now for IOleObject, should be public. <br>        virtual BOOL     FQueryPasteFromData(LPDATAOBJECT); <br>        virtual BOOL     PasteFromData(LPDATAOBJECT); <br>        LPDATAOBJECT     TransferObjectCreate(BOOL); <br>        //End CHAPTER18MOD <br> <br>        virtual COLORREF ColorSet(UINT, COLORREF); <br>        virtual COLORREF ColorGet(UINT); <br> <br>        virtual UINT     LineStyleSet(UINT); <br>        virtual UINT     LineStyleGet(void); <br>    }; <br> <br>typedef CCosmoDoc *PCCosmoDoc; <br> <br> <br>//These color indices wrap the polyline definitions <br>#define DOCCOLOR_BACKGROUND             POLYLINECOLOR_BACKGROUND <br>#define DOCCOLOR_LINE                   POLYLINECOLOR_LINE <br> <br> <br>//Drag-drop interfaces we need in the document <br>class CDropTarget : public IDropTarget <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        PCCosmoDoc          m_pDoc; <br> <br>        LPDATAOBJECT        m_pIDataObject;     //From DragEnter <br> <br>    public: <br>        CDropTarget(PCCosmoDoc); <br>        ~CDropTarget(void); <br> <br>        //IDropTarget interface members <br>        STDMETHODIMP QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP DragEnter(LPDATAOBJECT, DWORD, POINTL, LPDWORD); <br>        STDMETHODIMP DragOver(DWORD, POINTL, LPDWORD); <br>        STDMETHODIMP DragLeave(void); <br>        STDMETHODIMP Drop(LPDATAOBJECT, DWORD, POINTL, LPDWORD); <br>    }; <br> <br> <br>typedef CDropTarget *PCDropTarget; <br> <br> <br>class CDropSource : public IDropSource <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        PCCosmoDoc          m_pDoc; <br> <br>    public: <br>        CDropSource(PCCosmoDoc); <br>        ~CDropSource(void); <br> <br>        //IDropSource interface members <br>        STDMETHODIMP QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP QueryContinueDrag(BOOL, DWORD); <br>        STDMETHODIMP GiveFeedback(DWORD); <br>    }; <br> <br> <br>typedef CDropSource *PCDropSource; <br> <br>//CHAPTER18MOD <br>//Include classes necessary to become an OLE Document server. <br>#include "cosmole.h" <br>//End CHAPTER18MOD <br> <br> <br> <br>#endif //_COSMO_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
