<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLEVTBL.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context832"></a>OLEVTBL.C</h2>
<pre><code>/* <br> * OLEVTBL.C <br> * <br> * Creates or frees the procedure instances for the server, document, <br> * and object VTBLs.  There are two functions for each table:  one <br> * to initialize the table, the other to free the instances in the table. <br> * <br> * Copyright(c) Microsoft Corp. 1992-1994 All Rights Reserved <br> * Win32 version, January 1994 <br> */ <br> <br> <br>#ifdef MAKEOLESERVER <br> <br> <br>#include &lt;windows.h&gt; <br>#include &lt;ole.h&gt; <br>#include "cosmo.h" <br>#include "oleglobl.h" <br> <br>#ifdef MSC <br>/* <br> * This disables Microsoft VC++ 1.x warnings we get from assigning <br> * functions with our app-specific prototypes to the fixed prototypes <br> * in the VTBL structures.  The functionality of this application was <br> * verified before adding this pragma. <br> */ <br>#pragma warning(disable:4028) <br>#ifndef WIN32 <br>#pragma warning(disable:4113) <br>#endif <br>#endif <br> <br> <br>/* <br> * FOLEVtblInitServer <br> * <br> * Purpose: <br> *  Creates procedure instances for all the OLE methods required <br> *  by the server library for standard server methods. <br> * <br> * Parameters: <br> *  hInst           HINSTANCE of the application instance. <br> *  pvt             LPOLESERVERVTBL to the VTBL to initialize. <br> * <br> * Return Value: <br> *  None <br> * <br> * Customization: <br> *  None required. <br> */ <br> <br>BOOL WINAPI FOLEVtblInitServer(HINSTANCE hInst, LPOLESERVERVTBL pvt) <br>    { <br>    BOOL        fRet=TRUE; <br> <br>   #ifdef WIN32 <br>    pvt-&gt;Create            =ServerCreate; <br>    pvt-&gt;CreateFromTemplate=ServerCreateFromTemplate; <br>    pvt-&gt;Edit              =ServerEdit; <br>    pvt-&gt;Execute           =ServerExecute; <br>    pvt-&gt;Exit              =ServerExit; <br>    pvt-&gt;Open              =ServerOpen; <br>    pvt-&gt;Release           =ServerRelease; <br>   #else <br>    pvt-&gt;Create            =(LPVOID)MakeProcInstance(ServerCreate,             hInst); <br>    pvt-&gt;CreateFromTemplate=(LPVOID)MakeProcInstance(ServerCreateFromTemplate, hInst); <br>    pvt-&gt;Edit              =(LPVOID)MakeProcInstance(ServerEdit,               hInst); <br>    pvt-&gt;Execute           =(LPVOID)MakeProcInstance(ServerExecute,            hInst); <br>    pvt-&gt;Exit              =(LPVOID)MakeProcInstance(ServerExit,               hInst); <br>    pvt-&gt;Open              =(LPVOID)MakeProcInstance(ServerOpen,               hInst); <br>    pvt-&gt;Release           =(LPVOID)MakeProcInstance(ServerRelease,            hInst); <br> <br>    fRet =(NULL!=pvt-&gt;Create); <br>    fRet&amp;=(NULL!=pvt-&gt;CreateFromTemplate); <br>    fRet&amp;=(NULL!=pvt-&gt;Edit); <br>    fRet&amp;=(NULL!=pvt-&gt;Execute); <br>    fRet&amp;=(NULL!=pvt-&gt;Exit); <br>    fRet&amp;=(NULL!=pvt-&gt;Open); <br>    fRet&amp;=(NULL!=pvt-&gt;Release); <br>   #endif <br> <br>    return fRet; <br>    } <br> <br> <br>/* <br> * OLEVtblFreeServer <br> * <br> * Purpose: <br> *  Frees all procedure instances in the server VTBL. <br> * <br> * Parameters: <br> *  pvt             LPOLESERVERVTBL to the VTBL to free. <br> * <br> * Return Value: <br> *  none <br> * <br> * Customization: <br> *  None required. <br> */ <br> <br>void WINAPI OLEVtblFreeServer(LPOLESERVERVTBL pvt) <br>    { <br>   #ifndef WIN32 <br>    FreeProcInstance(pvt-&gt;Create); <br>    FreeProcInstance(pvt-&gt;CreateFromTemplate); <br>    FreeProcInstance(pvt-&gt;Edit); <br>    FreeProcInstance(pvt-&gt;Exit); <br>    FreeProcInstance(pvt-&gt;Open); <br>    FreeProcInstance(pvt-&gt;Release); <br>   #endif <br> <br>    return; <br>    } <br> <br> <br> <br> <br> <br>/* <br> * FOLEVtblInitDocument <br> * <br> * Purpose: <br> *  Creates procedure instances for all the OLE methods required <br> *  for document methods. <br> * <br> * Parameters: <br> *  hInst           HINSTANCE of the application instance. <br> *  pvt             LPOLESERVERDOCVTBL to the VTBL to initialize. <br> *  <br> * Return Value: <br> *  None <br> * <br> * Customization: <br> *  None required. <br> */ <br> <br>BOOL WINAPI FOLEVtblInitDocument(HINSTANCE hInst, LPOLESERVERDOCVTBL pvt) <br>    { <br>    BOOL        fRet=TRUE; <br> <br>   #ifdef WIN32 <br>    pvt-&gt;Close           =DocClose; <br>    pvt-&gt;GetObject       =DocGetObject; <br>    pvt-&gt;Execute         =DocExecute; <br>    pvt-&gt;Release         =DocRelease; <br>    pvt-&gt;Save            =DocSave; <br>    pvt-&gt;SetColorScheme  =DocSetColorScheme; <br>    pvt-&gt;SetDocDimensions=DocSetDocDimensions; <br>    pvt-&gt;SetHostNames    =DocSetHostNames; <br>   #else <br>    pvt-&gt;Close           =(LPVOID)MakeProcInstance(DocClose,            hInst); <br>    pvt-&gt;GetObject       =(LPVOID)MakeProcInstance(DocGetObject,        hInst); <br>    pvt-&gt;Execute         =(LPVOID)MakeProcInstance(DocExecute,          hInst); <br>    pvt-&gt;Release         =(LPVOID)MakeProcInstance(DocRelease,          hInst); <br>    pvt-&gt;Save            =(LPVOID)MakeProcInstance(DocSave,             hInst); <br>    pvt-&gt;SetColorScheme  =(LPVOID)MakeProcInstance(DocSetColorScheme,   hInst); <br>    pvt-&gt;SetDocDimensions=(LPVOID)MakeProcInstance(DocSetDocDimensions, hInst); <br>    pvt-&gt;SetHostNames    =(LPVOID)MakeProcInstance(DocSetHostNames,     hInst); <br> <br>    fRet =(NULL!=pvt-&gt;Close); <br>    fRet&amp;=(NULL!=pvt-&gt;GetObject); <br>    fRet&amp;=(NULL!=pvt-&gt;Execute); <br>    fRet&amp;=(NULL!=pvt-&gt;Release); <br>    fRet&amp;=(NULL!=pvt-&gt;Save); <br>    fRet&amp;=(NULL!=pvt-&gt;SetColorScheme); <br>    fRet&amp;=(NULL!=pvt-&gt;SetDocDimensions); <br>    fRet&amp;=(NULL!=pvt-&gt;SetHostNames); <br>   #endif <br> <br>    return fRet; <br>    } <br> <br> <br> <br> <br>/* <br> * OLEVtblFreeDocument <br> * <br> * Purpose: <br> *  Frees all procedure instances in the document VTBL. <br> * <br> * Parameters: <br> *  pvt             LPOLESERVERDOCVTBL to the VTBL to free. <br> * <br> * Return Value: <br> *  none <br> * <br> * Customization: <br> *  None required. <br> */ <br> <br>void WINAPI OLEVtblFreeDocument(LPOLESERVERDOCVTBL pvt) <br>    { <br>   #ifndef WIN32 <br>    FreeProcInstance(pvt-&gt;Close); <br>    FreeProcInstance(pvt-&gt;GetObject); <br>    FreeProcInstance(pvt-&gt;Release); <br>    FreeProcInstance(pvt-&gt;Save); <br>    FreeProcInstance(pvt-&gt;SetColorScheme); <br>    FreeProcInstance(pvt-&gt;SetDocDimensions); <br>    FreeProcInstance(pvt-&gt;SetHostNames); <br>   #endif <br> <br>    return; <br>    } <br> <br> <br> <br> <br> <br>/* <br> * FOLEVtblInitObject <br> * <br> * Purpose: <br> *  Creates procedure instances for all the OLE methods required <br> *  for object methods. <br> * <br> * Parameters: <br> *  hInst           HINSTANCE of the application instance. <br> *  pvt             LPOLEOBJECTVTBL to free. <br> *  <br> * Return Value: <br> *  None <br> * <br> * Customization: <br> *  Your application might not use global variables for srvrvtbl, <br> *  docvtbl, and objvtbl. <br> */ <br> <br>BOOL WINAPI FOLEVtblInitObject(HINSTANCE hInst, LPOLEOBJECTVTBL pvt) <br>    { <br>    BOOL        fRet=TRUE; <br> <br>    /* <br>     * Local variables are used here just to make this one assignment <br>     * more readable since it requires some typecasting to compile clean <br>     * at warning level 3. <br>     */ <br>   #ifdef WIN32 <br>    pvt-&gt;QueryProtocol  =ObjQueryProtocol; <br>    pvt-&gt;DoVerb         =ObjDoVerb; <br>    pvt-&gt;EnumFormats    =ObjEnumFormats; <br>    pvt-&gt;GetData        =ObjGetData; <br>    pvt-&gt;Release        =ObjRelease; <br>    pvt-&gt;SetBounds      =ObjSetBounds; <br>    pvt-&gt;SetColorScheme =ObjSetColorScheme; <br>    pvt-&gt;SetData        =ObjSetData; <br>    pvt-&gt;SetTargetDevice=ObjSetTargetDevice; <br>    pvt-&gt;Show           =ObjShow; <br>   #else <br>    pvt-&gt;QueryProtocol  =(LPVOID)MakeProcInstance((FARPROC)ObjQueryProtocol, hInst);; <br>    pvt-&gt;DoVerb         =(LPVOID)MakeProcInstance(ObjDoVerb, hInst); <br>    pvt-&gt;EnumFormats    =(LPVOID)MakeProcInstance(ObjEnumFormats, hInst); <br>    pvt-&gt;GetData        =(LPVOID)MakeProcInstance(ObjGetData, hInst); <br>    pvt-&gt;Release        =(LPVOID)MakeProcInstance(ObjRelease, hInst); <br>    pvt-&gt;SetBounds      =(LPVOID)MakeProcInstance(ObjSetBounds, hInst); <br>    pvt-&gt;SetColorScheme =(LPVOID)MakeProcInstance(ObjSetColorScheme, hInst); <br>    pvt-&gt;SetData        =(LPVOID)MakeProcInstance(ObjSetData, hInst); <br>    pvt-&gt;SetTargetDevice=(LPVOID)MakeProcInstance(ObjSetTargetDevice, hInst); <br>    pvt-&gt;Show           =(LPVOID)MakeProcInstance(ObjShow, hInst); <br> <br>    fRet =(NULL!=pvt-&gt;QueryProtocol); <br>    fRet&amp;=(NULL!=pvt-&gt;DoVerb); <br>    fRet&amp;=(NULL!=pvt-&gt;EnumFormats); <br>    fRet&amp;=(NULL!=pvt-&gt;GetData); <br>    fRet&amp;=(NULL!=pvt-&gt;Release); <br>    fRet&amp;=(NULL!=pvt-&gt;SetBounds); <br>    fRet =(NULL!=pvt-&gt;SetColorScheme); <br>    fRet&amp;=(NULL!=pvt-&gt;SetData); <br>    fRet&amp;=(NULL!=pvt-&gt;SetTargetDevice); <br>    fRet&amp;=(NULL!=pvt-&gt;Show); <br>   #endif <br> <br>    return fRet;    //TRUE by default in Win32 <br>    } <br> <br> <br> <br> <br> <br>/* <br> * OLEVtblFreeObject <br> * <br> * Purpose: <br> *  Frees all procedure instances in the object VTBL. <br> * <br> * Parameters: <br> *  pvt             LPOLEOBJECTVTBL to the VTBL to free. <br> * <br> * Return Value: <br> *  none <br> * <br> * Customization: <br> *  None required. <br> */ <br> <br>void WINAPI OLEVtblFreeObject(LPOLEOBJECTVTBL pvt) <br>    { <br>   #ifndef WIN32 <br>    FreeProcInstance(pvt-&gt;DoVerb); <br>    FreeProcInstance(pvt-&gt;EnumFormats); <br>    FreeProcInstance(pvt-&gt;GetData); <br>    FreeProcInstance((FARPROC)pvt-&gt;QueryProtocol); <br>    FreeProcInstance(pvt-&gt;Release); <br>    FreeProcInstance(pvt-&gt;SetBounds); <br>    FreeProcInstance(pvt-&gt;SetColorScheme); <br>    FreeProcInstance(pvt-&gt;SetData); <br>    FreeProcInstance(pvt-&gt;SetTargetDevice); <br>    FreeProcInstance(pvt-&gt;Show); <br>   #endif <br> <br>    return; <br>    } <br> <br> <br> <br>#endif //MAKEOLESERVER </code></pre>
<p>&nbsp;</p></body>
</HTML>
