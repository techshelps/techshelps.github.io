<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>POLYLINE.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context834"></a>POLYLINE.H</h2>
<pre><code>/* <br> * POLYLINE.H <br> * <br> * Definitions and function prototypes for the PolyLine window class. <br> * <br> * Copyright(c) Microsoft Corp. 1992-1994 All Rights Reserved <br> * Win32 version, January 1994 <br> */ <br> <br> <br>//Need some extra types for Windows 3.1 <br>#ifndef WIN32 <br>#ifndef POINTS <br>typedef POINT POINTS; <br>#endif  //POINTS <br> <br>#ifndef LPPOINTS <br>typedef POINTS FAR *LPPOINTS; <br>#endif  //LPPOINTS <br>#endif <br> <br>typedef struct <br>    { <br>    short   left; <br>    short   top; <br>    short   right; <br>    short   bottom; <br>    } RECTS, FAR *LPRECTS; <br> <br>#define RECTSTORECT(rs, r) {(r).left=(rs).left;(r).top=(rs).top; \ <br>    (r).right=(rs).right;(r).bottom=(rs).bottom;}; <br> <br>#define RECTTORECTS(r, rs) {(rs).left=(short)(r).left;(rs).top=(short)(r).top; \ <br>    (rs).right=(short)(r).right;(rs).bottom=(short)(r).bottom;}; <br> <br>//Messages <br>#define PLM_RECTSET         WM_USER <br>#define PLM_POLYLINESET     WM_USER+1 <br>#define PLM_POLYLINEGET     WM_USER+2 <br>#define PLM_POLYLINENEW     WM_USER+3 <br>#define PLM_BITMAPGET       WM_USER+4 <br>#define PLM_METAFILEGET     WM_USER+5 <br>#define PLM_METAFILEPICTGET WM_USER+6 <br>#define PLM_BACKUPUNDO      WM_USER+7 <br> <br>//Notifications <br>#define PLN_POINTCHANGE     1 <br>#define PLN_SIZECHANGE      2 <br> <br>//Definitions and structures. <br>#define CPOLYLINEPOINTS     20 <br>#define CBPOLYLINEWNDEXTRA  sizeof(HLOCAL) <br> <br>typedef struct <br>    { <br>    WORD        wVerMaj;                //Major version number. <br>    WORD        wVerMin;                //Minor version number. <br>    WORD        cPoints;                //Number of points. <br>    WORD        fDrawEntire;            //Flag to draw entire figure. <br>    RECTS       rc; <br>    POINTS      rgpt[CPOLYLINEPOINTS];  //Array of points. <br>    } POLYLINE; <br> <br>typedef POLYLINE FAR *LPPOLYLINE; <br>#define CBPOLYLINE sizeof(POLYLINE) <br> <br> <br>//Function prototypes. <br>HWND     WINAPI HPolylineWindowCreate(HWND, HINSTANCE); <br>LONG     WINAPI PolylineWndProc(HWND, UINT, WPARAM, LPARAM); <br>DWORD    PASCAL LPolylineUserMessage(HWND, UINT, WPARAM, LPARAM, LPPOLYLINE); <br>void     PASCAL PolylineDraw(HWND, HDC, LPPOLYLINE); <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
