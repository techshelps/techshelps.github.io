<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MISC.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context819"></a>MISC.C</h2>
<pre><code>/* <br> * MISC.C <br> * <br> * Functions without any other reasonable home: <br> *  WindowTitleSet, RectConvertToHiMetric, RectConvertToDevice <br> * <br> * Copyright(c) Microsoft Corp. 1992-1994 All Rights Reserved <br> * Win32 version, January 1994 <br> */ <br> <br> <br>#include &lt;windows.h&gt; <br>#include &lt;ole.h&gt; <br>#include "cosmo.h" <br> <br> <br> <br> <br>/* <br> * WindowTitleSet <br> * <br> * Purpose: <br> *  Handles changing the window's caption bar depending on the file <br> *  that is loaded. <br> * <br> * Parameters: <br> *  hWnd            HWND of the window to change. <br> *  pszFile         LPSTR of the file loaded. <br> * <br> * Return Value: <br> *  none. <br> */ <br> <br>void WINAPI WindowTitleSet(HWND hWnd, LPSTR pszFile) <br>    { <br>    char        szTitle[CCHPATHMAX]; <br> <br>    wsprintf(szTitle, "%s - %s", (LPSTR)rgpsz[IDS_CAPTION], pszFile); <br>    SetWindowText(hWnd, szTitle); <br>    return; <br>    } <br> <br> <br> <br> <br> <br> <br> <br>/* <br> * RectConvertToHiMetric <br> * <br> * Purpose: <br> *  Converts the contents of a rectangle from MM_TEXT into MM_HIMETRIC <br> *  specifically for use in converting a RECT of a window into <br> *  a RECT for a METAFILEPICT structure. <br> * <br> * Parameters: <br> *  hWnd            HWND of the window providing the display context <br> *  pRect           LPRECT containing the rectangle to convert. <br> * <br> * Return Value: <br> *  None. <br> */ <br> <br>void WINAPI RectConvertToHiMetric(HWND hWnd, LPRECT pRect) <br>    { <br>    HDC      hDC; <br>    POINT    pt; <br> <br>    hDC=GetDC(hWnd); <br>    SetMapMode(hDC, MM_HIMETRIC); <br> <br>    //Convert upper left corner <br>    pt.x=pRect-&gt;left; <br>    pt.y=pRect-&gt;top; <br>    DPtoLP(hDC, &amp;pt, 1); <br>    pRect-&gt;left=pt.x; <br>    pRect-&gt;top=-pt.y; <br> <br>    //Convert lower right corner <br>    pt.x=pRect-&gt;right; <br>    pt.y=pRect-&gt;bottom; <br>    DPtoLP(hDC, &amp;pt, 1); <br>    pRect-&gt;right=pt.x; <br>    pRect-&gt;bottom=-pt.y; <br> <br>    ReleaseDC(hWnd, hDC); <br>    return; <br>    } <br> <br> <br> <br> <br> <br> <br> <br>/* <br> * RectConvertToDevice <br> * <br> * Purpose: <br> *  Converts the contents of a rectangle from MM_HIMETRIC into MM_TEXT <br> *  specifically for use in converting a RECT of an OLE object into <br> *  a RECT for a window. <br> * <br> * Parameters: <br> *  hWnd            HWND of the window providing the display context <br> *  pRect           LPRECT containing the rectangle to convert. <br> * <br> * Return Value: <br> *  None. <br> */ <br> <br>void WINAPI RectConvertToDevice(HWND hWnd, LPRECT pRect) <br>    { <br>    HDC      hDC; <br>    POINT    pt; <br> <br>    hDC=GetDC(hWnd); <br>    SetMapMode(hDC, MM_HIMETRIC); <br> <br>    //Convert upper left corner <br>    pt.x=pRect-&gt;left; <br>    pt.y=pRect-&gt;bottom; <br>    LPtoDP(hDC, &amp;pt, 1); <br>    pRect-&gt;left=pt.x; <br>    pRect-&gt;bottom=pt.y; <br> <br>    //Convert lower right corner <br>    pt.x=pRect-&gt;right; <br>    pt.y=pRect-&gt;top; <br>    LPtoDP(hDC, &amp;pt, 1); <br>    pRect-&gt;right=pt.x; <br>    pRect-&gt;top=pt.y; <br> <br>    ReleaseDC(hWnd, hDC); <br>    return; <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
