<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPERPBRO.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1168"></a>IPERPBRO.CPP</h2>
<pre><code>/* <br> * IPERPBRO.CPP <br> * <br> * Template IPerPropertyBrowsing interface implementation. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#include "iperpbro.h" <br> <br> <br>/* <br> * CImpIPerPropertyBrowsing::CImpIPerPropertyBrowsing <br> * CImpIPerPropertyBrowsing::~CImpIPerPropertyBrowsing <br> * <br> * Parameters (Constructor): <br> *  pObj            LPVOID of the object we're in. <br> *  pUnkOuter       LPUNKNOWN to which we delegate. <br> */ <br> <br>CImpIPerPropertyBrowsing::CImpIPerPropertyBrowsing(LPVOID pObj <br>    , LPUNKNOWN pUnkOuter) <br>    { <br>    m_cRef=0; <br>    m_pObj=pObj; <br>    m_pUnkOuter=pUnkOuter; <br>    return; <br>    } <br> <br>CImpIPerPropertyBrowsing::~CImpIPerPropertyBrowsing(void) <br>    { <br>    return; <br>    } <br> <br> <br> <br>/* <br> * CImpIPerPropertyBrowsing::QueryInterface <br> * CImpIPerPropertyBrowsing::AddRef <br> * CImpIPerPropertyBrowsing::Release <br> * <br> * Purpose: <br> *  Delegating IUnknown members for CImpIPerPropertyBrowsing. <br> */ <br> <br>STDMETHODIMP CImpIPerPropertyBrowsing::QueryInterface(REFIID riid <br>    , LPVOID *ppv) <br>    { <br>    return m_pUnkOuter-&gt;QueryInterface(riid, ppv); <br>    } <br> <br>STDMETHODIMP_(ULONG) CImpIPerPropertyBrowsing::AddRef(void) <br>    { <br>    ++m_cRef; <br>    return m_pUnkOuter-&gt;AddRef(); <br>    } <br> <br>STDMETHODIMP_(ULONG) CImpIPerPropertyBrowsing::Release(void) <br>    { <br>    --m_cRef; <br>    return m_pUnkOuter-&gt;Release(); <br>    } <br> <br> <br> <br>/* <br> * CImpIPerPropertyBrowsing::OnStatusChange <br> * <br> * Purpose: <br> *  Informs the page site that the status of its page has changed <br> *  according to the flags in dwFlags: <br> *      PROPPAGESTATUS_DIRTY        A value was changed. <br> *      PROPPAGESTATUS_VALIDATE     It's an appropriate time to <br> *                                  validate and apply changes. <br> * <br> * Parameters: <br> *  dwFlags         DWORD identifying the changes. <br> */ <br> <br>STDMETHODIMP CImpIPerPropertyBrowsing::OnStatusChange(DWORD dwFlags) <br>    { <br>    return ResultFromScode(E_NOTIMPL); <br>    } <br> <br> <br> <br>/* <br> * CImpIPerPropertyBrowsing::GetDisplayString <br> * <br> * Purpose: <br> *  Retrieves a description string for a property. <br> * <br> * Parameters: <br> *  dispID          DISPID of the property in question. <br> *  pbstr           BSTR * in which to return the string that <br> *                  describes the property.  This can be NULL <br> *                  indicating that the caller only wants to <br> *                  know about availability of the string, not <br> *                  the string itself. <br> * <br> * Return Value: <br> *  HRESULT         NOERROR if a string is give, S_FALSE if <br> *                  a default string is acceptable. <br> */ <br> <br>STDMETHODIMP CImpIPerPropertyBrowsing::GetDisplayString <br>    (DISPID dispid, BSTR *pbstr) <br>    { <br>    if (NULL!=pbstr) <br>        *pbstr=NULL; <br> <br>    return ResultFromScode(E_NOTIMPL); <br>    } <br> <br> <br> <br>/* <br> * CImpIPerPropertyBrowsing::MapPropertyToPage <br> * <br> * Purpose: <br> *  Maps a property with a given dispID to a property page CLSID <br> *  that can be used to edit this property. <br> * <br> * Parameters: <br> *  dispID          DISPID of the property in question <br> *  pCLSID          CLSID * in which to return the CLSID of the <br> *                  associated property page. <br> * <br> * Return Value: <br> *  HRESULT         NOERROR if a page is available but not necessarily <br> *                  needed to do editing.  S_FALSE if the page must be <br> *                  used for editing, CTL_E_NOPAGEAVAILABLE otherwise. <br> */ <br> <br>STDMETHODIMP CImpIPerPropertyBrowsing::MapPropertyToPage <br>    (DISPID dispid, LPCLSID pCLSID) <br>    { <br>    *pCLSID=CLSID_NULL; <br>    return ResultFromScode(E_NOTIMPL); <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIPerPropertyBrowsing::GetPredefinedStrings <br> * <br> * Purpose: <br> *  Allows the property to define known legal strings that a browser <br> *  might display in a listbox. <br> * <br> * Parameters: <br> *  dispID          DISPID identifying the property. <br> *  pcaStringsOut   CALPOLESTR * in which to store the strings. <br> *  pcaCookiesOut   CADWORD * providing identifiers for each string. <br> */ <br> <br>STDMETHODIMP CImpIPerPropertyBrowsing::GetPredefinedStrings <br>    (DISPID dispid, CALPOLESTR *pcaStringsOut <br>    , CADWORD *pcaCookiesOut) <br>    { <br>    return ResultFromScode(E_NOTIMPL); <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIPerPropertyBrowsing::GetPredefinedValue <br> * <br> * Purpose: <br> *  Allows the property to define a known legal value that a browser <br> *  might display as a default or use in valudation. <br> * <br> * Parameters: <br> *  dispID          DISPID identifying the property. <br> *  dwCookie        DWORD identifying the value from <br> *                  GetPredefinedStrings. <br> *  pVarOut         VARIANT * in which to return the value. <br> * <br> */ <br> <br>STDMETHODIMP CImpIPerPropertyBrowsing::GetPredefinedValue <br>    (DISPID dispid, DWORD dwCookie, VARIANT *pVarOut) <br>    { <br>    return ResultFromScode(E_NOTIMPL); <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
