<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISPPROPP.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1190"></a>ISPPROPP.CPP</h2>
<pre><code>/* <br> * ISPPROPP.CPP <br> * <br> * Template ISpecifyPropertyPages interface implementation. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#include "isppropp.h" <br> <br> <br>/* <br> * CImpISpecifyPropertyPages::CImpISpecifyPropertyPages <br> * CImpISpecifyPropertyPages::~CImpISpecifyPropertyPages <br> * <br> * Parameters (Constructor): <br> *  pObj            LPVOID of the object we're in. <br> *  pUnkOuter       LPUNKNOWN to which we delegate. <br> */ <br> <br>CImpISpecifyPropertyPages::CImpISpecifyPropertyPages(LPVOID pObj <br>    , LPUNKNOWN pUnkOuter) <br>    { <br>    m_cRef=0; <br>    m_pObj=pObj; <br>    m_pUnkOuter=pUnkOuter; <br>    return; <br>    } <br> <br>CImpISpecifyPropertyPages::~CImpISpecifyPropertyPages(void) <br>    { <br>    return; <br>    } <br> <br> <br> <br>/* <br> * CImpISpecifyPropertyPages::QueryInterface <br> * CImpISpecifyPropertyPages::AddRef <br> * CImpISpecifyPropertyPages::Release <br> * <br> * Purpose: <br> *  Delegating IUnknown members for CImpISpecifyPropertyPages. <br> */ <br> <br>STDMETHODIMP CImpISpecifyPropertyPages::QueryInterface(REFIID riid <br>    , LPVOID *ppv) <br>    { <br>    return m_pUnkOuter-&gt;QueryInterface(riid, ppv); <br>    } <br> <br>STDMETHODIMP_(ULONG) CImpISpecifyPropertyPages::AddRef(void) <br>    { <br>    ++m_cRef; <br>    return m_pUnkOuter-&gt;AddRef(); <br>    } <br> <br>STDMETHODIMP_(ULONG) CImpISpecifyPropertyPages::Release(void) <br>    { <br>    --m_cRef; <br>    return m_pUnkOuter-&gt;Release(); <br>    } <br> <br> <br> <br>/* <br> * CImpISpecifyPropertyPages::GetPages <br> * <br> * Purpose: <br> *  Returns an array of GUIDs identifying the indivudual property <br> *  pages used for this object. <br> * <br> * Parameters: <br> *  pPages          CAUUID * pointing to a counted array of GUIDs. <br> *                  This function allocates the array elements <br> *                  and stores them in this structure. <br> */ <br> <br>STDMETHODIMP CImpISpecifyPropertyPages::GetPages(CAUUID *pPages) <br>    { <br>    return ResultFromScode(E_NOTIMPL); <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
