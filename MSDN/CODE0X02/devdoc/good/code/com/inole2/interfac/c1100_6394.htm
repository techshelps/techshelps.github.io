<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEXTCONN.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1138"></a>IEXTCONN.CPP</h2>
<pre><code>/* <br> * IEXTCONN.CPP <br> * <br> * Template IExternalConnection interface implementation. <br> * <br> * Copyright (c)1993-1996 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Software Design Engineer <br> * Microsoft Systems Developer Relations <br> * <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#include "iextconn.h" <br> <br> <br> <br>/* <br> * CImpIExternalConnection::CImpIExternalConnection <br> * CImpIExternalConnection::~CImpIExternalConnection <br> * <br> * Parameters (Constructor): <br> *  pObj            LPVOID of the object we're in. <br> *  pUnkOuter       LPUNKNOWN to which we delegate. <br> */ <br> <br>CImpIExternalConnection::CImpIExternalConnection(LPVOID pObj <br>    , LPUNKNOWN pUnkOuter) <br>    { <br>    m_cRef=0; <br>    m_pObj=pObj; <br>    m_pUnkOuter=pUnkOuter; <br>    return; <br>    } <br> <br>CImpIExternalConnection::~CImpIExternalConnection(void) <br>    { <br>    return; <br>    } <br> <br> <br> <br>/* <br> * CImpIExternalConnection::QueryInterface <br> * CImpIExternalConnection::AddRef <br> * CImpIExternalConnection::Release <br> * <br> * Purpose: <br> *  Delegating IUnknown members for CImpIExternalConnection. <br> */ <br> <br>STDMETHODIMP CImpIExternalConnection::QueryInterface(REFIID riid <br>    , LPVOID *ppv) <br>    { <br>    return m_pUnkOuter-&gt;QueryInterface(riid, ppv); <br>    } <br> <br> <br>STDMETHODIMP_(ULONG) CImpIExternalConnection::AddRef(void) <br>    { <br>    ++m_cRef; <br>    return m_pUnkOuter-&gt;AddRef(); <br>    } <br> <br>STDMETHODIMP_(ULONG) CImpIExternalConnection::Release(void) <br>    { <br>    --m_cRef; <br>    return m_pUnkOuter-&gt;Release(); <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIExternalConnection::AddConnection <br> * <br> * Purpose: <br> *  Informs the object that a strong connection has been made to it. <br> * <br> * Parameters: <br> *  dwConn          DWORD identifying the type of connection, taken <br> *                  from the EXTCONN enumeration. <br> *  dwReserved      DWORD reserved.  This is used inside OLE and <br> *                  should not be validated. <br> * <br> * Return Value: <br> *  DWORD           The number of connection counts on the <br> *                  object, used for debugging purposes only. <br> */ <br> <br>STDMETHODIMP_(DWORD) CImpIExternalConnection::AddConnection <br>    (DWORD dwConn, DWORD dwReserved) <br>    { <br>    return 0L; <br>    } <br> <br> <br> <br> <br> <br> <br>/* <br> * CImpIExternalConnection::ReleaseConnection <br> * <br> * Purpose: <br> *  Informs an object that a connection has been taken away from <br> *  it in which case the object may need to shut down. <br> * <br> * Parameters: <br> *  dwConn              DWORD identifying the type of connection, <br> *                      taken from the EXTCONN enumeration. <br> *  dwReserved          DWORD reserved.  This is used inside OLE and <br> *                      should not be validated. <br> *  dwRerved            DWORD reserved <br> *  fLastReleaseCloses  BOOL indicating if the last call to this <br> *                      function should close the object. <br> * <br> * Return Value: <br> *  DWORD           The number of remaining connection counts on <br> *                  the object, used for debugging purposes only. <br> */ <br> <br>STDMETHODIMP_(DWORD) CImpIExternalConnection::ReleaseConnection <br>    (DWORD dwConn, DWORD dwReserved, BOOL fLastReleaseCloses) <br>    { <br>    return 0L; <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
