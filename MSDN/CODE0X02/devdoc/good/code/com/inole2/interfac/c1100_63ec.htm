<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPARSEDN.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1164"></a>IPARSEDN.CPP</h2>
<pre><code>/* <br> * IPARSEDN.H <br> * <br> * Template IParseDisplayName interface implementation. <br> * <br> * Copyright (c)1993-1996 Microsoft Corporation, All Right Reserved <br> * <br> * Kraig Brockschmidt, Software Design Engineer <br> * Microsoft Systems Developer Relations <br> * <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#include "iparsedn.h" <br> <br> <br> <br>/* <br> * CImpIParseDisplayName::CImpIParseDisplayName <br> * CImpIParseDisplayName::~CImpIParseDisplayName <br> * <br> * Parameters (Constructor): <br> *  pObj            LPVOID of the object we're in. <br> *  pUnkOuter       LPUNKNOWN to which we delegate. <br> */ <br> <br>CImpIParseDisplayName::CImpIParseDisplayName(LPVOID pObj <br>    , LPUNKNOWN pUnkOuter) <br>    { <br>    m_cRef=0; <br>    m_pObj=pObj; <br>    m_pUnkOuter=pUnkOuter; <br>    return; <br>    } <br> <br>CImpIParseDisplayName::~CImpIParseDisplayName(void) <br>    { <br>    return; <br>    } <br> <br> <br> <br>/* <br> * CImpIParseDisplayName::QueryInterface <br> * CImpIParseDisplayName::AddRef <br> * CImpIParseDisplayName::Release <br> * <br> * Purpose: <br> *  Delegating IUnknown members for CImpIParseDisplayName. <br> */ <br> <br>STDMETHODIMP CImpIParseDisplayName::QueryInterface(REFIID riid <br>    , LPVOID *ppv) <br>    { <br>    return m_pUnkOuter-&gt;QueryInterface(riid, ppv); <br>    } <br> <br> <br>STDMETHODIMP_(ULONG) CImpIParseDisplayName::AddRef(void) <br>    { <br>    ++m_cRef; <br>    return m_pUnkOuter-&gt;AddRef(); <br>    } <br> <br>STDMETHODIMP_(ULONG) CImpIParseDisplayName::Release(void) <br>    { <br>    --m_cRef; <br>    return m_pUnkOuter-&gt;Release(); <br>    } <br> <br> <br> <br> <br> <br> <br> <br>/* <br> * CImpIParseDisplayName::ParseDisplayName <br> * <br> * Purpose: <br> *  Parses an object's display name into a moniker to the object. <br> * <br> * Parameters: <br> *  pBindCtx        LPBC to the bind context in use. <br> *  pszName         LPTSTR to the display name to parse. <br> *  pchEaten        ULONG * in which to store the number of <br> *                  characters parsed. <br> *  ppmk            LPMONIKER * in which to store the moniker. <br> * <br> * Return Value: <br> *  HRESULT         NOERROR or a general error value. <br> */ <br> <br>STDMETHODIMP CImpIParseDisplayName::ParseDisplayName(LPBC pBindCtx <br>    , LPTSTR, ULONG *, LPMONIKER *); <br>    { <br>    return E_NOTIMPL; <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
