<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DBGOUT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1073"></a>DBGOUT.H</h2>
<pre><code>/* <br> * DBGOUT.H <br> * <br> * Useful debugging output macros that compile to nothing and <br> * eliminate ugly #ifdef DEBUGs from source code.  Note that <br> * string literals do not need TEXT() around them as this file <br> * includes them. <br> * <br> * Copyright (c)1994-1996 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Software Design Engineer <br> * Microsoft Systems Developer Relations <br> * <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  INTERNET&gt;kraigb@microsoft.com <br> */ <br> <br>#ifndef _DBGOUT_H <br>#define _DBGOUT_H <br> <br>#ifdef DEBUG <br> <br>//Basic debug macros <br>#define D(x)        {x;} <br> <br>#define ODS(x)  \ <br>    {\ <br>    TCHAR        szDebug[128];\ <br>    OutputDebugString(TEXT(x));\ <br>    wsprintf(szDebug, TEXT(" [%s, %u]\r\n"), (LPTSTR)__FILE__, __LINE__);\ <br>    OutputDebugString(szDebug);\ <br>    } <br> <br>#define ODSsz(f, s) \ <br>    {\ <br>    TCHAR       szDebug[128];\ <br>    wsprintf(szDebug, TEXT(f), (LPTSTR)s);\ <br>    OutputDebugString(szDebug);\ <br>    wsprintf(szDebug, TEXT(" [%s, %u]\r\n"), (LPTSTR)__FILE__, __LINE__);\ <br>    OutputDebugString(szDebug);\ <br>    } <br> <br> <br>#define ODSu(f, u)  \ <br>    {\ <br>    TCHAR       szDebug[128];\ <br>    wsprintf(szDebug, TEXT(f), (UINT)u);\ <br>    OutputDebugString(szDebug);\ <br>    wsprintf(szDebug, TEXT(" [%s, %u]\r\n"), (LPTSTR)__FILE__, __LINE__);\ <br>    OutputDebugString(szDebug);\ <br>    } <br> <br> <br>#define ODSlu(f, lu) \ <br>    {\ <br>    TCHAR       szDebug[128];\ <br>    wsprintf(szDebug, TEXT(f), (DWORD)lu);\ <br>    OutputDebugString(szDebug);\ <br>    wsprintf(szDebug, TEXT(" [%s, %u]\r\n"), (LPTSTR)__FILE__, __LINE__);\ <br>    OutputDebugString(szDebug);\ <br>    } <br> <br>#define ODSlulu(f, lu1, lu2) \ <br>    {\ <br>    TCHAR       szDebug[128];\ <br>    wsprintf(szDebug, TEXT(f), (DWORD)lu1, (DWORD)lu1);\ <br>    OutputDebugString(szDebug);\ <br>    wsprintf(szDebug, TEXT(" [%s, %u]\r\n"), (LPTSTR)__FILE__, __LINE__);\ <br>    OutputDebugString(szDebug);\ <br>    } <br> <br>#define ODSszu(f, s, u)     \ <br>    {\ <br>    TCHAR       szDebug[128];\ <br>    wsprintf(szDebug, TEXT(f), (LPTSTR)s, (UINT)u);\ <br>    OutputDebugString(szDebug);\ <br>    wsprintf(szDebug, TEXT(" [%s, %u]\r\n"), (LPTSTR)__FILE__, __LINE__);\ <br>    OutputDebugString(szDebug);\ <br>    } <br> <br> <br>#define ODSszlu(f, s, lu)   \ <br>    {\ <br>    TCHAR       szDebug[128];\ <br>    wsprintf(szDebug, TEXT(f), (LPTSTR)s, (DWORD)lu);\ <br>    OutputDebugString(szDebug);\ <br>    wsprintf(szDebug, TEXT(" [%s, %u]\r\n"), (LPTSTR)__FILE__, __LINE__);\ <br>    OutputDebugString(szDebug);\ <br>    } <br> <br>#else   //NO DEBUG <br> <br>#define D(x) <br>#define ODS(x) <br> <br>#define ODSsz(f, s) <br>#define ODSu(f, u) <br>#define ODSlu(f, lu) <br>#define ODSszu(f, s, u) <br>#define ODSszlu(f, s, lu) <br> <br> <br>#endif //DEBUG <br> <br>#endif //_DBGOUT_H </code></pre>
<p>&nbsp;</p></body>
</HTML>
