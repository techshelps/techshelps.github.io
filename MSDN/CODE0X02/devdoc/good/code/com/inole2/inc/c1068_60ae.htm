<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IANIMAL.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1076"></a>IANIMAL.H</h2>
<pre><code>#include "rpc.h" <br>#include "rpcndr.h" <br> <br>#ifndef __ianimal_h__ <br>#define __ianimal_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __IAnimal_FWD_DEFINED__ <br>#define __IAnimal_FWD_DEFINED__ <br>typedef interface IAnimal IAnimal; <br>#endif /* __IAnimal_FWD_DEFINED__ */ <br> <br> <br>#include "unknwn.h" <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>#ifndef __IAnimal_INTERFACE_DEFINED__ <br>#define __IAnimal_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IAnimal <br> * at Thu Apr 20 09:35:58 1995 <br> * using MIDL 2.00.72 <br> ****************************************/ <br>/* [object][uuid] */  <br> <br> <br> <br>EXTERN_C const IID IID_IAnimal; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface IAnimal : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall Eat(  <br>            /* [in] */ LPTSTR pszFoodRecommended, <br>            /* [out][in] */ LPTSTR pszFoodEaten, <br>            /* [in] */ short cchEaten) = 0; <br>         <br>        virtual HRESULT __stdcall Sleep(  <br>            /* [out][in] */ short __RPC_FAR *pcMinutes) = 0; <br>         <br>        virtual HRESULT __stdcall Procreate(  <br>            /* [out] */ short __RPC_FAR *pcOffspring) = 0; <br>         <br>        virtual HRESULT __stdcall WhatKindOfAnimal(  <br>            /* [out] */ IID __RPC_FAR *pIID) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br>     <br>    typedef struct IAnimalVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            IAnimal __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            IAnimal __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            IAnimal __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Eat )(  <br>            IAnimal __RPC_FAR * This, <br>            /* [in] */ LPTSTR pszFoodRecommended, <br>            /* [out][in] */ LPTSTR pszFoodEaten, <br>            /* [in] */ short cchEaten); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Sleep )(  <br>            IAnimal __RPC_FAR * This, <br>            /* [out][in] */ short __RPC_FAR *pcMinutes); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Procreate )(  <br>            IAnimal __RPC_FAR * This, <br>            /* [out] */ short __RPC_FAR *pcOffspring); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *WhatKindOfAnimal )(  <br>            IAnimal __RPC_FAR * This, <br>            /* [out] */ IID __RPC_FAR *pIID); <br>         <br>    } IAnimalVtbl; <br>     <br>    interface IAnimal <br>    { <br>        CONST_VTBL struct IAnimalVtbl __RPC_FAR *lpVtbl; <br>    }; <br>     <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IAnimal_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IAnimal_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IAnimal_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IAnimal_Eat(This,pszFoodRecommended,pszFoodEaten,cchEaten)\ <br>    (This)-&gt;lpVtbl -&gt; Eat(This,pszFoodRecommended,pszFoodEaten,cchEaten) <br> <br>#define IAnimal_Sleep(This,pcMinutes)\ <br>    (This)-&gt;lpVtbl -&gt; Sleep(This,pcMinutes) <br> <br>#define IAnimal_Procreate(This,pcOffspring)\ <br>    (This)-&gt;lpVtbl -&gt; Procreate(This,pcOffspring) <br> <br>#define IAnimal_WhatKindOfAnimal(This,pIID)\ <br>    (This)-&gt;lpVtbl -&gt; WhatKindOfAnimal(This,pIID) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall IAnimal_Eat_Proxy(  <br>    IAnimal __RPC_FAR * This, <br>    /* [in] */ LPTSTR pszFoodRecommended, <br>    /* [out][in] */ LPTSTR pszFoodEaten, <br>    /* [in] */ short cchEaten); <br> <br> <br>void __RPC_STUB IAnimal_Eat_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IAnimal_Sleep_Proxy(  <br>    IAnimal __RPC_FAR * This, <br>    /* [out][in] */ short __RPC_FAR *pcMinutes); <br> <br> <br>void __RPC_STUB IAnimal_Sleep_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IAnimal_Procreate_Proxy(  <br>    IAnimal __RPC_FAR * This, <br>    /* [out] */ short __RPC_FAR *pcOffspring); <br> <br> <br>void __RPC_STUB IAnimal_Procreate_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IAnimal_WhatKindOfAnimal_Proxy(  <br>    IAnimal __RPC_FAR * This, <br>    /* [out] */ IID __RPC_FAR *pIID); <br> <br> <br>void __RPC_STUB IAnimal_WhatKindOfAnimal_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IAnimal_INTERFACE_DEFINED__ */ <br> <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
