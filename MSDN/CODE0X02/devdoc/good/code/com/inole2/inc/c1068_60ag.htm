<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IKOALA.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1078"></a>IKOALA.H</h2>
<pre><code>#include "rpc.h" <br>#include "rpcndr.h" <br> <br>#ifndef __ikoala_h__ <br>#define __ikoala_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __IKoala_FWD_DEFINED__ <br>#define __IKoala_FWD_DEFINED__ <br>typedef interface IKoala IKoala; <br>#endif /* __IKoala_FWD_DEFINED__ */ <br> <br> <br>#include "unknwn.h" <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>#ifndef __IKoala_INTERFACE_DEFINED__ <br>#define __IKoala_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IKoala <br> * at Mon May 01 08:28:33 1995 <br> * using MIDL 2.00.72 <br> ****************************************/ <br>/* [object][uuid] */  <br> <br> <br> <br>EXTERN_C const IID IID_IKoala; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface IKoala : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall ClimbEucalyptusTree(  <br>            /* [in] */ short iTree) = 0; <br>         <br>        virtual HRESULT __stdcall PouchOpensDown( void) = 0; <br>         <br>        virtual HRESULT __stdcall SleepAfterEating(  <br>            /* [in] */ short cMinutes) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br>     <br>    typedef struct IKoalaVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            IKoala __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            IKoala __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            IKoala __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *ClimbEucalyptusTree )(  <br>            IKoala __RPC_FAR * This, <br>            /* [in] */ short iTree); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *PouchOpensDown )(  <br>            IKoala __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *SleepAfterEating )(  <br>            IKoala __RPC_FAR * This, <br>            /* [in] */ short cMinutes); <br>         <br>    } IKoalaVtbl; <br>     <br>    interface IKoala <br>    { <br>        CONST_VTBL struct IKoalaVtbl __RPC_FAR *lpVtbl; <br>    }; <br>     <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IKoala_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IKoala_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IKoala_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IKoala_ClimbEucalyptusTree(This,iTree)\ <br>    (This)-&gt;lpVtbl -&gt; ClimbEucalyptusTree(This,iTree) <br> <br>#define IKoala_PouchOpensDown(This)\ <br>    (This)-&gt;lpVtbl -&gt; PouchOpensDown(This) <br> <br>#define IKoala_SleepAfterEating(This,cMinutes)\ <br>    (This)-&gt;lpVtbl -&gt; SleepAfterEating(This,cMinutes) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall IKoala_ClimbEucalyptusTree_Proxy(  <br>    IKoala __RPC_FAR * This, <br>    /* [in] */ short iTree); <br> <br> <br>void __RPC_STUB IKoala_ClimbEucalyptusTree_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IKoala_PouchOpensDown_Proxy(  <br>    IKoala __RPC_FAR * This); <br> <br> <br>void __RPC_STUB IKoala_PouchOpensDown_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IKoala_SleepAfterEating_Proxy(  <br>    IKoala __RPC_FAR * This, <br>    /* [in] */ short cMinutes); <br> <br> <br>void __RPC_STUB IKoala_SleepAfterEating_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IKoala_INTERFACE_DEFINED__ */ <br> <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
