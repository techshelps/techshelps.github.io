<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DATAOBJ.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context651"></a>DATAOBJ.H</h2>
<pre><code>/* <br> * DATAOBJ.H <br> * Data Transfer Object Chapter 12 <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Right Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _DATAOBJ_H_ <br>#define _DATAOBJ_H_ <br> <br> <br>#define INC_OLE2 <br>#define CHAPTER12 <br>#include &lt;inole.h&gt; <br> <br> <br>/* <br> * Structure to describe a specific rendering that our user wants <br> * us to maintain. <br> */ <br> <br>typedef struct tagRENDERING <br>    { <br>    FORMATETC       fe;             //The format <br>    STGMEDIUM       stm;            //The actual data <br>    LPUNKNOWN       pUnkOrg;        //The real owner <br>    } RENDERING, *PRENDERING; <br> <br> <br> <br>/* <br> * The DataObject object is implemented in its own class with its <br> * own IUnknown to support aggregation.  It contains one <br> * CImpIDataObject object that we use to implement the externally <br> * exposed interfaces. <br> */ <br> <br>//DATAOBJ.CPP <br> <br>class CImpIDataObject; <br>typedef class CImpIDataObject *PIMPIDATAOBJECT; <br> <br>class CDataObject : public IUnknown <br>    { <br>    friend class CImpIDataObject; <br> <br>    protected: <br>        ULONG               m_cRef; <br>        LPUNKNOWN           m_pUnkOuter; <br>        PFNDESTROYED        m_pfnDestroy; <br> <br>        HWND                m_hList;        //Listbox of RENDERINGs <br> <br>        //Contained interface implemetation <br>        PIMPIDATAOBJECT     m_pIDataObject; <br> <br>    public: <br>        CDataObject(LPUNKNOWN, PFNDESTROYED); <br>        ~CDataObject(void); <br> <br>        BOOL Init(void); <br>        void Purge(void); <br> <br>        //Non-delegating object IUnknown <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br>    }; <br> <br>typedef CDataObject *PCDataObject; <br> <br> <br> <br>/* <br> * Interface implementations for the CDataObject object. <br> */ <br> <br>class CImpIDataObject : public IDataObject <br>    { <br>    private: <br>        ULONG           m_cRef; <br>        PCDataObject    m_pObj; <br>        LPUNKNOWN       m_pUnkOuter; <br> <br>    public: <br>        CImpIDataObject(PCDataObject, LPUNKNOWN); <br>        ~CImpIDataObject(void); <br> <br>        //IUnknown members that delegate to m_pUnkOuter. <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //IDataObject members <br>        STDMETHODIMP GetData(LPFORMATETC, LPSTGMEDIUM); <br>        STDMETHODIMP GetDataHere(LPFORMATETC, LPSTGMEDIUM); <br>        STDMETHODIMP QueryGetData(LPFORMATETC); <br>        STDMETHODIMP GetCanonicalFormatEtc(LPFORMATETC, LPFORMATETC); <br>        STDMETHODIMP SetData(LPFORMATETC, LPSTGMEDIUM, BOOL); <br>        STDMETHODIMP EnumFormatEtc(DWORD, LPENUMFORMATETC *); <br>        STDMETHODIMP DAdvise(LPFORMATETC, DWORD <br>            ,  LPADVISESINK, DWORD *); <br>        STDMETHODIMP DUnadvise(DWORD); <br>        STDMETHODIMP EnumDAdvise(LPENUMSTATDATA *); <br>    }; <br> <br> <br>class CEnumFormatEtc : public IEnumFORMATETC <br>    { <br>    private: <br>        ULONG           m_cRef; <br>        LPUNKNOWN       m_pUnkRef; <br>        LPFORMATETC     m_prgfe; <br>        ULONG           m_iCur; <br>        ULONG           m_cItems; <br> <br>    public: <br>        CEnumFormatEtc(LPUNKNOWN); <br>        ~CEnumFormatEtc(void); <br> <br>        BOOL Init(HWND); <br> <br>        //IUnknown members that delegate to m_pUnkOuter. <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //IEnumFORMATETC members <br>        STDMETHODIMP Next(ULONG, LPFORMATETC, ULONG *); <br>        STDMETHODIMP Skip(ULONG); <br>        STDMETHODIMP Reset(void); <br>        STDMETHODIMP Clone(IEnumFORMATETC **); <br>    }; <br> <br> <br>typedef CEnumFormatEtc *PCEnumFormatEtc; <br> <br>#endif //_DATAOBJ_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
