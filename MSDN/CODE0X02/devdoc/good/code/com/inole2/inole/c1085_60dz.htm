<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STATINT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1097"></a>STATINT.H</h2>
<pre><code>/* <br> * STATINT.H <br> * <br> * Internal definitions and function prototypes for the StatStrip <br> * control. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _STATINT_H_ <br>#define _STATINT_H_ <br> <br>#ifdef __cplusplus <br>extern "C" <br>    { <br>#endif <br> <br> <br> <br>//For loading the RCDATA mapping menu item IDs to string IDs <br>typedef struct tagSTATMESSAGEMAP <br>    { <br>    USHORT      uID; <br>    USHORT      idsMsg; <br>    } STATMESSAGEMAP, *PSTATMESSAGEMAP; <br> <br>//Array mapping menu handles to menu item IDs <br>typedef struct tagPOPUPMENUMAP <br>    { <br>    HMENU       hMenu; <br>    USHORT      uID; <br>    } POPUPMENUMAP, * PPOPUPMENUMAP; <br> <br> <br> <br> <br>typedef struct tagSTATSTRIP <br>    { <br>    HFONT               hFont;      //Current control font <br>    BOOL                fMyFont; <br> <br>    BOOL                fMapped;    //StatStripMessageMap called? <br>    HWND                hWndOwner; <br> <br>    USHORT              cMessages;  //Total number of messages <br>    UINT                idsMin;     //Starting string ID <br>    UINT                idsMax; <br> <br>    USHORT              uIDStatic;  //Quiescent message ID <br>    USHORT              uIDBlank;   //Blank message ID <br>    USHORT              uIDSysMenu; //System menu message ID <br> <br>    HGLOBAL             hMemSMM;    //Handle to STATMESSAGEMAP data <br>    PSTATMESSAGEMAP     pSMM;       //Memory holding STATMESSAGEMAP <br> <br>    HGLOBAL             hMemSzStat; //Memory for Stat strings <br>    LPTSTR *            ppsz;       //Stat string pointers <br> <br>    USHORT              cPopups; <br>    USHORT              uIDPopupMin; <br>    USHORT              uIDPopupMax; <br>    PPOPUPMENUMAP       pPMM; <br>    } STATSTRIP, *PSTATSTRIP; <br> <br> <br>#define CBSTATSTRIP             sizeof(STATSTRIP) <br> <br>#define CBEXTRASTATSTRIP        sizeof(PSTATSTRIP) <br>#define STATWL_STRUCTURE        0 <br> <br> <br>//STASTRIP.C <br>LRESULT APIENTRY StatStripWndProc(HWND, UINT, WPARAM, LPARAM); <br>void             StatStripPaint(HWND, PSTATSTRIP); <br>USHORT           IDFromHMenu(PSTATSTRIP, HMENU); <br>UINT             IStringFromID(PSTATMESSAGEMAP, USHORT, USHORT); <br> <br>void             StatStripClean(PSTATSTRIP, BOOL); <br>HGLOBAL          HStringCache(HINSTANCE, UINT, UINT, UINT, LPTSTR *); <br>void             HStringCacheFree(HGLOBAL); <br>void             StatMessageMapSort(PSTATMESSAGEMAP, USHORT); <br> <br>#ifdef __cplusplus <br>    } <br>#endif <br> <br> <br>#endif //_STATINT_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
