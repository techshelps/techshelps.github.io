<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INOLE.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1094"></a>INOLE.CPP</h2>
<pre><code>/* <br> * INOLE.CPP <br> * Inside OLE Utilities DLL <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#include "inoledll.h" <br> <br> <br>/* <br> * LibMain(32) <br> * <br> * Purpose: <br> *  Entry point for the DLL, conditionally compiled. <br> */ <br> <br>#ifdef WIN32 <br> <br>BOOL __stdcall LibMain32(HINSTANCE hInstance, ULONG ulReason <br>    , PCONTEXT pContext) <br>    { <br>    UNREFERENCED_PARAMETER(pContext); <br> <br>    if (DLL_PROCESS_DETACH==ulReason) <br>        { <br>        return TRUE; <br>        } <br>    else <br>        { <br>        if (DLL_PROCESS_ATTACH!=ulReason) <br>            return TRUE; <br>        } <br> <br>    return Initialize(hInstance); <br>    } <br> <br>#else <br> <br>int WINAPI LibMain(HANDLE hInstance, WORD wDataSeg <br>    , WORD cbHeapSize, LPTSTR lpCmdLine) <br>    { <br>     //Perform global initialization. <br>    if (Initialize((HINSTANCE)hInstance)) <br>        { <br>        if (0!=cbHeapSize) <br>            UnlockData(0); <br>        } <br> <br>    return (int)hInstance; <br>    } <br> <br>#endif <br> <br> <br> <br>/* <br> * Initialize <br> * <br> * Purpose: <br> *  Registers the control classes contained in this library <br> *  and performs other initialization. <br> * <br> * Parameters: <br> *  hInst           HINSTANCE of the DLL that will own this class. <br> * <br> * Return Value: <br> *  BOOL            TRUE all if successful, FALSE otherwise. <br> */ <br> <br>BOOL Initialize(HINSTANCE hInst) <br>    { <br>    static BOOL     fInitialized=FALSE; <br>    WNDCLASS        wc; <br> <br>    if (fInitialized) <br>        return TRUE; <br> <br>    wc.cbClsExtra    =0; <br>    wc.hInstance     =hInst; <br>    wc.hIcon         =NULL; <br>    wc.hCursor       =LoadCursor(NULL, IDC_ARROW); <br>    wc.hbrBackground =(HBRUSH)(COLOR_BTNFACE+1); <br>    wc.lpszMenuName  =NULL; <br>    wc.style         =CS_DBLCLKS | CS_GLOBALCLASS <br>                      | CS_VREDRAW | CS_HREDRAW; <br> <br>    wc.lpfnWndProc   =GizmoBarWndProc; <br>    wc.cbWndExtra    =CBEXTRAGIZMOBAR; <br>    wc.lpszClassName =CLASS_GIZMOBAR; <br> <br>    RegisterClass(&amp;wc); <br> <br>    wc.lpfnWndProc   =StatStripWndProc; <br>    wc.cbWndExtra    =CBEXTRASTATSTRIP; <br>    wc.lpszClassName =CLASS_STATSTRIP; <br> <br>    RegisterClass(&amp;wc); <br> <br>    ToolButtonInit(hInst); <br>    CursorsCache(hInst); <br> <br>    fInitialized=TRUE; <br>    return TRUE; <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
