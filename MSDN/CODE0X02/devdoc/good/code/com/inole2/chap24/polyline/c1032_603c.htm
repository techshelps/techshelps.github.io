<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IIPOBJ.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1038"></a>IIPOBJ.CPP</h2>
<pre><code>/* <br> * IIPOBJ.CPP <br> * Polyline Component Chapter 24 <br> * <br> * IOleInPlaceObject interface implementation for Polyline <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#include "polyline.h" <br> <br> <br>/* <br> * CImpIOleInPlaceObject::CImpIOleInPlaceObject <br> * CImpIOleInPlaceObject::~CImpIOleInPlaceObject <br> * <br> * Parameters (Constructor): <br> *  pObj            PCPolyline of the object we're in. <br> *  pUnkOuter       LPUNKNOWN to which we delegate. <br> */ <br> <br>CImpIOleInPlaceObject::CImpIOleInPlaceObject(PCPolyline pObj <br>    , LPUNKNOWN pUnkOuter) <br>    { <br>    m_cRef=0; <br>    m_pObj=pObj; <br>    m_pUnkOuter=pUnkOuter; <br>    return; <br>    } <br> <br>CImpIOleInPlaceObject::~CImpIOleInPlaceObject(void) <br>    { <br>    return; <br>    } <br> <br> <br> <br>/* <br> * CImpIOleInPlaceObject::QueryInterface <br> * CImpIOleInPlaceObject::AddRef <br> * CImpIOleInPlaceObject::Release <br> * <br> * Purpose: <br> *  IUnknown members for CImpIOleInPlaceObject object. <br> */ <br> <br>STDMETHODIMP CImpIOleInPlaceObject::QueryInterface(REFIID riid <br>    , PPVOID ppv) <br>    { <br>    return m_pUnkOuter-&gt;QueryInterface(riid, ppv); <br>    } <br> <br> <br>STDMETHODIMP_(ULONG) CImpIOleInPlaceObject::AddRef(void) <br>    { <br>    ++m_cRef; <br>    return m_pUnkOuter-&gt;AddRef(); <br>    } <br> <br>STDMETHODIMP_(ULONG) CImpIOleInPlaceObject::Release(void) <br>    { <br>    --m_cRef; <br>    return m_pUnkOuter-&gt;Release(); <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIOleInPlaceObject::GetWindow <br> * <br> * Purpose: <br> *  Retrieves the handle of the window associated with the object <br> *  on which this interface is implemented. <br> * <br> * Parameters: <br> *  phWnd           HWND * in which to store the window handle. <br> * <br> * Return Value: <br> *  HRESULT         NOERROR if successful, E_FAIL if there is no <br> *                  window. <br> */ <br> <br>STDMETHODIMP CImpIOleInPlaceObject::GetWindow(HWND *phWnd) <br>    { <br>    if (NULL!=m_pObj-&gt;m_pHW) <br>        *phWnd=m_pObj-&gt;m_pHW-&gt;Window(); <br>    else <br>        *phWnd=m_pObj-&gt;m_hWnd; <br> <br>    return NOERROR; <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIOleInPlaceObject::ContextSensitiveHelp <br> * <br> * Purpose: <br> *  Instructs the object on which this interface is implemented to <br> *  enter or leave a context-sensitive help mode. <br> * <br> * Parameters: <br> *  fEnterMode      BOOL TRUE to enter the mode, FALSE otherwise. <br> * <br> * Return Value: <br> *  HRESULT         NOERROR or an error code <br> */ <br> <br>STDMETHODIMP CImpIOleInPlaceObject::ContextSensitiveHelp <br>    (BOOL fEnterMode) <br>    { <br>    return ResultFromScode(E_NOTIMPL); <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIOleInPlaceObject::InPlaceDeactivate <br> * <br> * Purpose: <br> *  Instructs the object to deactivate itself from an in-place state <br> *  and to discard any Undo state. <br> * <br> * Parameters: <br> *  None <br> * <br> * Return Value: <br> *  HRESULT         NOERROR or an error code <br> */ <br> <br>STDMETHODIMP CImpIOleInPlaceObject::InPlaceDeactivate(void) <br>    { <br>    m_pObj-&gt;InPlaceDeactivate(); <br>    return NOERROR; <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIOleInPlaceObject::UIDeactivate <br> * <br> * Purpose: <br> *  Instructs the object to just remove any in-place user interface <br> *  but to do no other deactivation.  The object should just hide <br> *  the UI components but not destroy them until InPlaceDeactivate <br> *  is called. <br> * <br> * Parameters: <br> *  None <br> * <br> * Return Value: <br> *  HRESULT         NOERROR or an error code <br> */ <br> <br>STDMETHODIMP CImpIOleInPlaceObject::UIDeactivate(void) <br>    { <br>    m_pObj-&gt;UIDeactivate(); <br>    return NOERROR; <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIOleInPlaceObject::SetObjectRects <br> * <br> * Purpose: <br> *  Provides the object with rectangles describing the position of <br> *  the object in the container window as well as its visible area. <br> * <br> * Parameters: <br> *  prcPos          LPCRECT providing the object's full rectangle <br> *                  relative to the continer's document.  The object <br> *                  should scale to this rectangle. <br> *  prcClip         LPCRECT describing the visible area of the object <br> *                  which should not draw outside these areas. <br> * <br> * Return Value: <br> *  HRESULT         NOERROR or an error code <br> */ <br> <br>STDMETHODIMP CImpIOleInPlaceObject::SetObjectRects(LPCRECT prcPos <br>    , LPCRECT prcClip) <br>    { <br>    if (NULL!=m_pObj-&gt;m_pHW) <br>        m_pObj-&gt;m_pHW-&gt;RectsSet((LPRECT)prcPos, (LPRECT)prcClip); <br> <br>    return NOERROR; <br>    } <br> <br> <br> <br> <br>/* <br> * CImpIOleInPlaceObject::ReactivateAndUndo <br> * <br> * Purpose: <br> *  Instructs the object to reactivate itself in-place and perform <br> *  whatever Undo means for it. <br> * <br> * Parameters: <br> *  None <br> * <br> * Return Value: <br> *  HRESULT         NOERROR or an error code <br> */ <br> <br>STDMETHODIMP CImpIOleInPlaceObject::ReactivateAndUndo(void) <br>    { <br>    return m_pObj-&gt;InPlaceActivate(m_pObj-&gt;m_pIOleClientSite, TRUE); <br>    } </code></pre>
<p>&nbsp;</p></body>
</HTML>
