<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COSMOLE.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context968"></a>COSMOLE.H</h2>
<pre><code>/* <br> * COSMOLE.H <br> * Cosmo Chapter 23 <br> * <br> * Include file containing all compound document related <br> * definitions. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _COSMOLE_H_ <br>#define _COSMOLE_H_ <br> <br> <br>//These are global for simplification of object implementation. <br>extern ULONG g_cObj; <br>extern ULONG g_cLock; <br>extern HWND  g_hWnd; <br> <br>//CHAPTER23MOD <br>//This is for simplification of CCosmoFrame::CheckLineSelection <br>extern PCToolBar    g_pInPlaceTB; <br> <br>#define ID_HATCHWINDOW  2000 <br>//End CHAPTER23MOD <br> <br>//Function for the object to notify on destruction. <br>void ObjectDestroyed(void); <br> <br> <br>//ICLASSF.CPP <br>class CFigureClassFactory : public IClassFactory <br>    { <br>    protected: <br>        ULONG           m_cRef; <br>        PCCosmoFrame    m_pFR; <br>        BOOL            m_fCreated;     //Created one object yet? <br> <br>    public: <br>        CFigureClassFactory(PCCosmoFrame); <br>        ~CFigureClassFactory(void); <br> <br>        //IUnknown members <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //IClassFactory members <br>        STDMETHODIMP         CreateInstance(LPUNKNOWN, REFIID <br>                                 , PPVOID); <br>        STDMETHODIMP         LockServer(BOOL); <br>    }; <br> <br>typedef CFigureClassFactory *PCFigureClassFactory; <br> <br> <br>//FIGURE.CPP <br>//This is what the class factory creates <br> <br>#define CFORMATETCGET   5 <br> <br>class CImpIPersistStorage; <br>typedef class CImpIPersistStorage *PCImpIPersistStorage; <br>class CImpIDataObject; <br>typedef class CImpIDataObject *PCImpIDataObject; <br>class CImpIOleObject; <br>typedef class CImpIOleObject *PCImpIOleObject; <br>class CImpIPersistFile; <br>typedef class CImpIPersistFile *PCImpIPersistFile; <br>//CHAPTER23MOD <br>class CImpIOleInPlaceObject; <br>typedef class CImpIOleInPlaceObject *PCImpIOleInPlaceObject; <br>class CImpIOleInPlaceActiveObject; <br>typedef class CImpIOleInPlaceActiveObject *PCImpIOleInPlaceActiveObject; <br>//End CHAPTER23MOD <br> <br>class CFigure : public IUnknown <br>    { <br>    friend class CImpIPersistStorage; <br>    friend class CImpIDataObject; <br>    friend class CImpIOleObject; <br>    friend class CImpIPersistFile; <br>    //CHAPTER23MOD <br>    friend class CImpIOleInPlaceObject; <br>    friend class CImpIOleInPlaceActiveObject; <br>    //End CHAPTER23MOD <br> <br>    protected: <br>        ULONG               m_cRef; <br>        PCCosmoFrame        m_pFR;      //Frame (for UI changes) <br>        PCCosmoDoc          m_pDoc;     //What holds real polyline <br>        PCPolyline          m_pPL;      //Copy of m_pDoc-&gt;m_pPL <br> <br>        BOOL                m_fEmbedded; <br>        PFNDESTROYED        m_pfnDestroy; <br> <br>        PCStringTable       m_pST;      //Object strings <br> <br>        //Things for IPersistStorage <br>        PCImpIPersistStorage m_pImpIPersistStorage; <br>        LPSTORAGE           m_pIStorage; <br>        LPSTREAM            m_pIStream; <br>        CLSID               m_clsID; <br> <br>        //Things for IDataObject <br>        PCImpIDataObject    m_pImpIDataObject;      //Implemented <br>        LPDATAADVISEHOLDER  m_pIDataAdviseHolder;   //Used <br> <br>        UINT                m_cf;                   //pDoc-&gt;m_cf <br>        ULONG               m_cfeGet; <br>        FORMATETC           m_rgfeGet[CFORMATETCGET]; <br> <br>        //Things for IOleObject <br>        PCImpIOleObject     m_pImpIOleObject;       //Implemented <br>        LPOLEADVISEHOLDER   m_pIOleAdviseHolder;    //Used <br>        LPOLECLIENTSITE     m_pIOleClientSite;      //Used <br> <br>        LPMONIKER           m_pMoniker; <br>        DWORD               m_dwRegROT; <br>        PCImpIPersistFile   m_pImpIPersistFile;     //Implemented <br> <br>        //CHAPTER23MOD <br>        LPOLEINPLACESITE            m_pIOleIPSite; <br>        LPOLEINPLACEFRAME           m_pIOleIPFrame; <br>        LPOLEINPLACEUIWINDOW        m_pIOleIPUIWindow; <br> <br>        PCImpIOleInPlaceObject       m_pImpIOleIPObject; <br>        PCImpIOleInPlaceActiveObject m_pImpIOleIPActiveObject; <br> <br>        HMENU                       m_hMenuShared; <br>        HOLEMENU                    m_hOLEMenu; <br>        HACCEL                      m_hAccel; <br> <br>        PCHatchWin                  m_pHW;      //Hatch window <br>        PCToolBar                   m_pTB;      //In-place toolbar <br>        UINT                        m_cyBar;    //Copy of m_pFR-&gt;m_cyBar <br>        BOOL                        m_fUndoDeactivates; <br>        BOOL                        m_fAllowInPlace; <br>        BOOL                        m_fForceSave; <br>        //End CHAPTER23MOD <br> <br>    public: <br>        CFigure(PFNDESTROYED, PCCosmoDoc); <br>        ~CFigure(void); <br> <br>        //Non-delegating IUnknown:  we don't support aggregation <br>        STDMETHODIMP QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        BOOL Init(void); <br>        void FrameSet(PCCosmoFrame); <br>        BOOL FIsDirty(void); <br>        BOOL FIsEmbedded(void); <br>        void SendAdvise(UINT); <br> <br>        //CHAPTER23MOD <br>        HRESULT  InPlaceActivate(LPOLECLIENTSITE, BOOL); <br>        void     InPlaceDeactivate(void); <br>        HRESULT  UIActivate(void); <br>        void     UIDeactivate(void); <br>        BOOL     InPlaceMenuCreate(void); <br>        BOOL     InPlaceMenuDestroy(void); <br>        BOOL     InPlaceToolsCreate(void); <br>        BOOL     InPlaceToolsDestroy(void); <br>        BOOL     InPlaceToolsRenegotiate(void); <br> <br>        void     OpenIntoWindow(void); <br>        BOOL     Undo(void); <br>        //End CHAPTER23MOD <br>    }; <br> <br>typedef CFigure *PCFigure; <br> <br>//Codes for CFigure::SendAdvise <br>//......Code......................Method called in CFigureSendAdvise... <br>#define OBJECTCODE_SAVED       0  //IOleAdviseHolder::SendOnSave <br>#define OBJECTCODE_CLOSED      1  //IOleAdviseHolder::SendOnClose <br>#define OBJECTCODE_RENAMED     2  //IOleAdviseHolder::SendOnRename <br>#define OBJECTCODE_SAVEOBJECT  3  //IOleClientSite::SaveObject <br>#define OBJECTCODE_DATACHANGED 4  //IDataAdviseHolder::SendOnDataChange <br>#define OBJECTCODE_SHOWWINDOW  5  //IOleClientSite::OnShowWindow(TRUE) <br>#define OBJECTCODE_HIDEWINDOW  6  //IOleClientSite::OnShowWindow(FALSE) <br>#define OBJECTCODE_SHOWOBJECT  7  //IOleClientSite::ShowObject <br> <br> <br>//IPERSTOR.CPP <br> <br>class CImpIPersistStorage : public IPersistStorage <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        PCFigure            m_pObj; <br>        LPUNKNOWN           m_pUnkOuter; <br>        PSSTATE             m_psState;      //Storage state <br>        BOOL                m_fConvert;     //Are we Converting? <br> <br>    public: <br>        CImpIPersistStorage(PCFigure, LPUNKNOWN); <br>        ~CImpIPersistStorage(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP GetClassID(LPCLSID); <br> <br>        STDMETHODIMP IsDirty(void); <br>        STDMETHODIMP InitNew(LPSTORAGE); <br>        STDMETHODIMP Load(LPSTORAGE); <br>        STDMETHODIMP Save(LPSTORAGE, BOOL); <br>        STDMETHODIMP SaveCompleted(LPSTORAGE); <br>        STDMETHODIMP HandsOffStorage(void); <br>    }; <br> <br> <br> <br>//IDATAOBJ.CPP <br>class CImpIDataObject : public IDataObject <br>    { <br>    private: <br>        ULONG           m_cRef; <br>        PCFigure        m_pObj; <br>        LPUNKNOWN       m_pUnkOuter; <br> <br>    public: <br>        CImpIDataObject(PCFigure, LPUNKNOWN); <br>        ~CImpIDataObject(void); <br> <br>        //IUnknown members that delegate to m_pUnkOuter. <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //IDataObject members <br>        STDMETHODIMP GetData(LPFORMATETC, LPSTGMEDIUM); <br>        STDMETHODIMP GetDataHere(LPFORMATETC, LPSTGMEDIUM); <br>        STDMETHODIMP QueryGetData(LPFORMATETC); <br>        STDMETHODIMP GetCanonicalFormatEtc(LPFORMATETC, LPFORMATETC); <br>        STDMETHODIMP SetData(LPFORMATETC, LPSTGMEDIUM, BOOL); <br>        STDMETHODIMP EnumFormatEtc(DWORD, LPENUMFORMATETC *); <br>        STDMETHODIMP DAdvise(LPFORMATETC, DWORD,  LPADVISESINK <br>                         , DWORD *); <br>        STDMETHODIMP DUnadvise(DWORD); <br>        STDMETHODIMP EnumDAdvise(LPENUMSTATDATA *); <br>    }; <br> <br> <br>//IOLEOBJ.CPP <br>class CImpIOleObject : public IOleObject <br>    { <br>    private: <br>        ULONG           m_cRef; <br>        PCFigure        m_pObj; <br>        LPUNKNOWN       m_pUnkOuter; <br> <br>    public: <br>        CImpIOleObject(PCFigure, LPUNKNOWN); <br>        ~CImpIOleObject(void); <br> <br>        //IUnknown members that delegate to m_pUnkOuter. <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //IOleObject members <br>        STDMETHODIMP SetClientSite(LPOLECLIENTSITE); <br>        STDMETHODIMP GetClientSite(LPOLECLIENTSITE *); <br>        STDMETHODIMP SetHostNames(LPCOLESTR, LPCOLESTR); <br>        STDMETHODIMP Close(DWORD); <br>        STDMETHODIMP SetMoniker(DWORD, LPMONIKER); <br>        STDMETHODIMP GetMoniker(DWORD, DWORD, LPMONIKER *); <br>        STDMETHODIMP InitFromData(LPDATAOBJECT, BOOL, DWORD); <br>        STDMETHODIMP GetClipboardData(DWORD, LPDATAOBJECT *); <br>        STDMETHODIMP DoVerb(LONG, LPMSG, LPOLECLIENTSITE, LONG, HWND <br>                         , LPCRECT); <br>        STDMETHODIMP EnumVerbs(LPENUMOLEVERB *); <br>        STDMETHODIMP Update(void); <br>        STDMETHODIMP IsUpToDate(void); <br>        STDMETHODIMP GetUserClassID(CLSID *); <br>        STDMETHODIMP GetUserType(DWORD, LPOLESTR *); <br>        STDMETHODIMP SetExtent(DWORD, LPSIZEL); <br>        STDMETHODIMP GetExtent(DWORD, LPSIZEL); <br>        STDMETHODIMP Advise(LPADVISESINK, DWORD *); <br>        STDMETHODIMP Unadvise(DWORD); <br>        STDMETHODIMP EnumAdvise(LPENUMSTATDATA *); <br>        STDMETHODIMP GetMiscStatus(DWORD, DWORD *); <br>        STDMETHODIMP SetColorScheme(LPLOGPALETTE); <br>    }; <br> <br> <br> <br>class CImpIPersistFile : public IPersistFile <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        PCFigure            m_pObj; <br>        LPUNKNOWN           m_pUnkOuter; <br> <br>    public: <br>        CImpIPersistFile(PCFigure, LPUNKNOWN); <br>        ~CImpIPersistFile(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP GetClassID(LPCLSID); <br> <br>        STDMETHODIMP IsDirty(void); <br>        STDMETHODIMP Load(LPCOLESTR, DWORD); <br>        STDMETHODIMP Save(LPCOLESTR, BOOL); <br>        STDMETHODIMP SaveCompleted(LPCOLESTR); <br>        STDMETHODIMP GetCurFile(LPOLESTR *); <br>    }; <br> <br> <br> <br>//CHAPTER23MOD <br>//IIPOBJ.CPP <br>class CImpIOleInPlaceObject : public IOleInPlaceObject <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        PCFigure            m_pObj; <br>        LPUNKNOWN           m_pUnkOuter; <br> <br>    public: <br>        CImpIOleInPlaceObject(PCFigure, LPUNKNOWN); <br>        ~CImpIOleInPlaceObject(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP GetWindow(HWND *); <br>        STDMETHODIMP ContextSensitiveHelp(BOOL); <br>        STDMETHODIMP InPlaceDeactivate(void); <br>        STDMETHODIMP UIDeactivate(void); <br>        STDMETHODIMP SetObjectRects(LPCRECT, LPCRECT); <br>        STDMETHODIMP ReactivateAndUndo(void); <br>    }; <br> <br> <br> <br>//IIPAOBJ.CPP <br>class CImpIOleInPlaceActiveObject <br>    : public IOleInPlaceActiveObject <br>    { <br>    protected: <br>        ULONG               m_cRef; <br>        PCFigure            m_pObj; <br>        LPUNKNOWN           m_pUnkOuter; <br> <br>    public: <br>        CImpIOleInPlaceActiveObject(PCFigure, LPUNKNOWN); <br>        ~CImpIOleInPlaceActiveObject(void); <br> <br>        STDMETHODIMP QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        STDMETHODIMP GetWindow(HWND *); <br>        STDMETHODIMP ContextSensitiveHelp(BOOL); <br>        STDMETHODIMP TranslateAccelerator(LPMSG); <br>        STDMETHODIMP OnFrameWindowActivate(BOOL); <br>        STDMETHODIMP OnDocWindowActivate(BOOL); <br>        STDMETHODIMP ResizeBorder(LPCRECT, LPOLEINPLACEUIWINDOW <br>                         , BOOL); <br>        STDMETHODIMP EnableModeless(BOOL); <br>    }; <br> <br>//End CHAPTER23MOD <br> <br>#endif _COSMOLE_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
