<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>POLYLINE.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context981"></a>POLYLINE.H</h2>
<pre><code>/* <br> * POLYLINE.H <br> * Cosmo Chapter 23 <br> * <br> * Definitions and function prototypes for the PolyLine window <br> * class that can be treated like its own control. <br> * <br> * Copyright (c)1993-1995 Microsoft Corporation, All Rights Reserved <br> * <br> * Kraig Brockschmidt, Microsoft <br> * Internet  :  kraigb@microsoft.com <br> * Compuserve:  &gt;INTERNET:kraigb@microsoft.com <br> */ <br> <br> <br>#ifndef _POLYLINE_H_ <br>#define _POLYLINE_H_ <br> <br>//Versioning. <br>#define VERSIONMAJOR                2 <br>#define VERSIONMINOR                0 <br>#define VERSIONCURRENT              0x00020000 <br> <br>//Classname <br>#define SZCLASSPOLYLINE             TEXT("polyline") <br> <br>//Stream Name that holds the data <br>#define SZSTREAM                    OLETEXT("CONTENTS") <br>#define SZOLE1STREAM                OLETEXT("\1Ole10Native") <br> <br>#define HIMETRIC_PER_INCH           2540 <br>#define CPOLYLINEPOINTS             20 <br> <br>//Window extra bytes and offsets <br>#define CBPOLYLINEWNDEXTRA          (sizeof(LONG)) <br>#define PLWL_STRUCTURE              0 <br> <br> <br>//Version 2.0 Polyline Structure <br>typedef struct tagPOLYLINEDATA <br>    { <br>    WORD        wVerMaj;                //Major version number. <br>    WORD        wVerMin;                //Minor version number. <br>    WORD        cPoints;                //Number of points. <br>    short       fReserved;              //Obsolete from v1.0 <br>    RECTS       rc;                     //Rectangle of this figure <br>    POINTS      rgpt[CPOLYLINEPOINTS];  //Points (0-32767 grid) <br> <br>    //Version 2.0 additions <br>    COLORREF    rgbBackground;          //Background color <br>    COLORREF    rgbLine;                //Line color <br>    short       iLineStyle;             //Line style <br>    } POLYLINEDATA, *PPOLYLINEDATA; <br> <br>#define CBPOLYLINEDATA   sizeof(POLYLINEDATA) <br>#define CBPOLYLINEDATA20 sizeof(POLYLINEDATA) <br> <br> <br>//Version 1.0 Polyline Structure <br>typedef struct tagPOLYLINEDATA10 <br>    { <br>    WORD        wVerMaj;                //Major version number. <br>    WORD        wVerMin;                //Minor version number. <br>    WORD        cPoints;                //Number of points. <br>    short       fDrawEntire;            //Flag to draw entire figure <br>    RECTS       rc;                     //Rectangle of this figure <br>    POINTS      rgpt[CPOLYLINEPOINTS];  //Points (scaled to rc) <br>    } POLYLINEDATA10, *PPOLYLINEDATA10; <br> <br>#define CBPOLYLINEDATA10 sizeof(POLYLINEDATA10) <br> <br> <br>//POLYWIN.CPP <br>LRESULT APIENTRY PolylineWndProc(HWND, UINT, WPARAM, LPARAM); <br> <br> <br>class CPolyline : public CWindow <br>    { <br>    friend LRESULT APIENTRY PolylineWndProc(HWND, UINT, WPARAM <br>        , LPARAM); <br> <br>    private: <br>        POLYLINEDATA   m_pl; <br> <br>        class CPolylineAdviseSink * m_pAdv; <br> <br>    public: <br>        //This is for CFigure to look at when writing its storage. <br>        BOOL            m_fReadFromOLE10; <br> <br>    private: <br>        HFILE     OpenFileW(LPTSTR, LPOFSTRUCT, UINT); <br>        void      PointScale(LPRECT, LPPOINTS, BOOL); <br>        void      Draw(HDC, BOOL, BOOL); <br>        void      RectConvertMappings(LPRECT, BOOL); <br> <br>    public: <br>        CPolyline(HINSTANCE); <br>        ~CPolyline(void); <br> <br>        BOOL      Init(HWND, LPRECT, DWORD, UINT <br>            , class CPolylineAdviseSink *); <br> <br>        void      New(void); <br>        BOOL      Undo(void); <br> <br>        //File functions <br>        LONG      ReadFromStorage(LPSTORAGE); <br>        LONG      WriteToStorage(LPSTORAGE, LONG); <br> <br>        LONG      ReadFromStream(LPSTREAM); <br>        LONG      WriteToStream(LPSTREAM, LONG); <br> <br>        LONG      ReadFromFile(LPTSTR); <br>        LONG      WriteToFile(LPTSTR, LONG); <br> <br>        //Data transfer functions <br>        LONG      DataSet(PPOLYLINEDATA, BOOL, BOOL); <br>        LONG      DataGet(PPOLYLINEDATA, LONG); <br>        LONG      DataSetMem(HGLOBAL, BOOL, BOOL, BOOL); <br>        LONG      DataGetMem(LONG, HGLOBAL *); <br>        HBITMAP   RenderBitmap(void); <br>        HMETAFILE RenderMetafile(void); <br>        HGLOBAL   RenderMetafilePict(void); <br> <br>        void      RectGet(LPRECT); <br>        void      SizeGet(LPRECT); <br>        void      RectSet(LPRECT, BOOL); <br>        void      SizeSet(LPRECT, BOOL); <br>        COLORREF  ColorSet(UINT, COLORREF); <br>        COLORREF  ColorGet(UINT); <br>        UINT      LineStyleSet(UINT); <br>        UINT      LineStyleGet(void); <br>    }; <br> <br>typedef CPolyline *PCPolyline; <br> <br> <br>//Error values for data transfer functions <br>#define POLYLINE_E_NONE                    0 <br>#define POLYLINE_E_UNSUPPORTEDVERSION      -1 <br>#define POLYLINE_E_INVALIDPOINTER          -2 <br>#define POLYLINE_E_READFAILURE             -3 <br>#define POLYLINE_E_WRITEFAILURE            -4 <br> <br> <br> <br> <br>class CPolylineAdviseSink <br>    { <br>    private: <br>        LPVOID      m_pv;           //Customizable structure <br> <br>    public: <br>        CPolylineAdviseSink(LPVOID); <br>        ~CPolylineAdviseSink(void); <br> <br>        void OnPointChange(void); <br>        void OnSizeChange(void); <br>        void OnDataChange(void); <br>        void OnColorChange(void); <br>        void OnLineStyleChange(void); <br>    }; <br> <br>typedef CPolylineAdviseSink *PCPolylineAdviseSink; <br> <br> <br>//Color indices for color messages <br>#define POLYLINECOLOR_BACKGROUND    0 <br>#define POLYLINECOLOR_LINE          1 <br> <br> <br> <br>#endif  //_POLYLINE_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
