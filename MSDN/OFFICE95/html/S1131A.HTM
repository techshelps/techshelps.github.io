<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso8859-1">


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BuildCriteria Method</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h1><a name="sec141"></a>BuildCriteria Method</h1>

<h2><a name="sec142"></a>Applies To</h2>

<p><b>Application</b> Object.</p>

<h2><a name="sec143"></a>Description</h2>

<p>The <b>BuildCriteria</b> method returns a parsed criteria
string as it would appear in the query design grid or in Filter
By Form mode. For example, you may want to set a form&#146;s <b>Filter</b>
property based on varying criteria from the user. You can use the
<b>BuildCriteria</b> method to construct the criteria string
argument for the <b>Filter</b> property.</p>

<h2><a name="sec144"></a>Syntax</h2>

<p><b>BuildCriteria(</b><i>field</i>, <i>fieldtype</i>, <i>expression</i><b>)</b></p>

<p>The <b>BuildCriteria</b> method uses the following arguments.</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>field</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string expression identifying the
        field for which you wish to define criteria.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>fieldtype</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">An intrinsic constant denoting the data
        type of the field. For a list of possible field data
        types, see the data access <b>Type</b> property.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>expression</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string expression identifying the
        criteria to be parsed.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<p>The <b>BuildCriteria</b> method returns a string.</p>

<h2><a name="sec145"></a>Remarks</h2>

<p>The <b>BuildCriteria</b> method enables you to easily
construct criteria for a filter based on user input. It parses
the <i>expression </i>argument in the same way that the
expression would be parsed had it been entered in the query
design grid or in Filter By Form mode.</p>

<p>For example, a user creating a query on an Orders table might
restrict the result set to orders placed after January 1, 1995,
by setting criteria on an OrderDate field. The user might enter
an expression such as the following one in the criteria cell
beneath the OrderDate field.</p>

<p>&gt;1-1-95</p>

<p>Microsoft Access automatically parses this expression and
returns the following expression.</p>

<p>&gt;#1/1/95#</p>

<p>The <b>BuildCriteria</b> method provides the same parsing from
Visual Basic code. For example, to return the correctly parsed
string shown above, you can supply the following arguments to the
<b>BuildCriteria</b> method.</p>

<p class="spacing"><br>
</p>

<pre>Dim strCriteria As String= BuildCriteria(&quot;OrderDate&quot;, dbDate, &quot;&gt;1-1-95&quot;)</pre>

<p>Since you need to supply criteria for the <b>Filter</b>
property in correctly parsed form, you can use the <b>BuildCriteria</b>
method to construct a correctly parsed string.</p>

<p>You can use the <b>BuildCriteria</b> method to construct a
string with multiple criteria if those criteria refer to the same
field. For example, you can use the <b>BuildCriteria</b> method
with the following arguments to construct a string with multiple
criteria relating to the OrderDate field.</p>

<p class="spacing"><br>
</p>

<pre>strCriteria = BuildCriteria(&quot;OrderDate&quot;, dbDate, &quot;&gt;1-1-95 and &lt;5-1-95&quot;)
</pre>

<p>This example returns the following criteria string.</p>

<p>OrderDate&gt;#1/1/95# And OrderDate&lt;#5/1/95#</p>

<p>However, if you wish to construct a criteria string referring
to multiple fields, you must create the strings and concatenate
them yourself. For example, if you wish to construct criteria for
a filter to show records for orders placed after 1-1-95 and for
which freight is less than $50, you would need to use the <b>BuildCriteria</b>
method twice and concatenate the resulting strings.</p>

<h2><a name="sec146"></a>Example</h2>

<p>The following example prompts the user to enter the first few
letters of a product&#146;s name, then uses the <b>BuildCriteria</b>
method to construct a criteria string based on the user&#146;s
input. Next, the procedure provides this string as an argument to
the <b>Filter</b> property of a Products form. Finally, the <b>FilterOn</b>
property is set to apply the filter.</p>

<p class="spacing"><br>
</p>

<pre>Sub SetFilter()
    Dim frm As Form, strMsg As String
    Dim strInput As String, strFilter As String

    ' Open Products form in Form view.
    DoCmd.OpenForm &quot;Products&quot;
    ' Return Form variable pointing to Products form.
    Set frm = Forms!Products
    strMsg = &quot;Enter one or more letters of product name &quot; _
        &amp; &quot;followed by an asterisk.&quot;
    ' Prompt user for input.
    strInput = InputBox(strMsg)
    ' Build criteria string.
    strFilter = BuildCriteria(&quot;ProductName&quot;, dbText, strInput)
    ' Set Filter property to apply filter.
    frm.Filter = strFilter
    ' Set FilterOn property; form now shows filtered records.
    frm.FilterOn = TrueSub
</pre>
</FONT></FONT></BODY>
</html>
