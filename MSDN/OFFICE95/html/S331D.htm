<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SortArray</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H1 CLASS="h2">SortArray</H1><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>SortArray </B><I>ArrayName</I>[<B>$</B>]<B>()</B> [<B>,&nbsp;</B><I>Order</I>] [<B>,&nbsp;</B><I>From</I>] [<B>,&nbsp;</B><I>To</I>] [<B>,&nbsp;</B><I>SortType</I>] [<B>,&nbsp;</B><I>SortKey</I>]</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Performs an alphanumeric sort on the elements in the specified array. <B>SortArray</B> is especially useful for sorting arrays that fill list boxes in a custom dialog box. <B>SortArray</B> can sort one-dimensional or two-dimensional arrays; an error occurs<BR>if the specified array has more than two dimensions.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="276pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>ArrayName</I>[<B>$</B>]<B>()</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The one-dimensional or two-dimensional array to be sorted. Arrays with more than two dimensions are not sorted.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Order</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The sorting order:</P>
<P CLASS="tt">0 (zero) or omitted    Ascending</P>
<P CLASS="tt">1    Descending</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>From</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Number of the first element to sort. The default is 0 (zero).</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>To</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Number of the last element to sort (must be greater than <I>From</I>).</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>SortType</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The kind of sort to perform (applies only to two-dimensional arrays):</P>
<P CLASS="tt">0 (zero) or omitted    Sort the "rows" in the array matrix.</P>
<P CLASS="tt">1    Sort the "columns" in the array matrix.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="276pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>SortKey</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The number of the row or column to sort by (applies only to two-dimensional arrays): 0 (zero) indicates the first row or column, 1 indicates the second, and so on. The default is 0 (zero). </P>
<P CLASS="tt">If <I>SortType</I> is 0 (zero), indicating a row sort, <I>SortKey</I> specifies the column that determines the sort. If <I>SortType</I> is 1, indicating a column sort, <I>SortKey</I> specifies the row that determines the sort. </P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">Here are some examples of <B>SortArray</B> instructions, with descriptions of their effect.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="189pt" VALIGN="TOP"><COL WIDTH="159pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Instruction</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">SortArray ArrayTest()</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Sort all the element(s) in the array ArrayTest() in ascending order, beginning with the element(s) numbered 0 (zero). If the array is two-dimensional, sort the rows of the array matrix, using the first column as the sort key.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">SortArray List$(), 0, 1, 10</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Sort the elements numbered 1 through 10 in the array List$() in ascending order.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">SortArray MailingList$(), 1, 1, 20, 0, 1</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Sort the elements numbered 1 through 20 in the two-dimensional array MailingList$() in descending order. Sort rows, using the second column as the sort key.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">SortArray Table(), 0, 0, 10, 1, 3</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Sort the elements numbered 0 (zero) through 10 in the two-dimensional array Table() in ascending order. Sort columns, using the fourth row as the sort key. </P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">Although the <B>SortArray</B> arguments other than <I>ArrayName</I>[<B>$</B>]<B>()</B> are optional, you cannot omit arguments between arguments that you do include.<BR>For example, SortArray&nbsp;Test(),&nbsp;0,&nbsp;0,&nbsp;2,&nbsp;0,&nbsp;1 is a valid instruction, but SortArray&nbsp;Test(),&nbsp;0,&nbsp;,&nbsp;,&nbsp;,&nbsp;1 is not valid and will not sort the array.</P>
<P></P>
<P CLASS="h"><B>Examples</B></P>
<P CLASS="t">This example creates an array containing the names of all the bookmarks in the active document and then sorts the names. When first defined, the variable marks$(0) represents the name of the first bookmark added to the document. After the array is sorted, marks$(0) represents the first name in an alphabetic list of the bookmark names.</P>
<P CLASS="spacing"><BR></P>
<PRE>size&nbsp;=&nbsp;CountBookmarks() - 1
Dim marks$(size)
For count&nbsp;=&nbsp;0 To size
    marks$(count)&nbsp;=&nbsp;BookmarkName$(count + 1)
Next
SortArray(marks$())
</PRE>
<P CLASS="t">The following example opens a text file containing a list of 100 names and addresses. There are five fields for the names and addresses: the first field is for the name, the second for the street address, the third for the city or town, the fourth for the state or province, and the fifth for the postal code. The array MailList$() is defined to accommodate the names and addresses, which are read into the array. The array is then sorted by postal code in descending order (so that rows with the highest postal code are first). The sorted names and addresses are then written back to the file. Note that you could perform the same sort by opening the file in a document window and using the <B>TableSort</B> statement.</P>
<P CLASS="spacing"><BR></P>
<PRE>Open "LIST.TXT" For Input As #1
Dim MailList$(99, 4)
For x&nbsp;=&nbsp;0 To 99
    Read #1, MailList$(x, 0), MailList$(x, 1), MailList$(x, 2), \
        MailList$(x, 3), MailList$(x, 4)
Next
Close #1
SortArray MailList$(), 1, 0, 99, 0, 4
Open "NEWLIST.TXT" For Output As #1
For x&nbsp;=&nbsp;0 To 99
    Write #1, MailList$(x, 0), MailList$(x, 1), MailList$(x, 2), \
            MailList$(x, 3), MailList$(x, 4)
Next
Close #1
</PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Dim</B>, <B>TableSort</B></P></FONT></FONT></BODY></HTML>
