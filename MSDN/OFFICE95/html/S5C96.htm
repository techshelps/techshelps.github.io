<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Communicating with Procedures Using Arguments</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Communicating with Procedures Using Arguments</H1><P CLASS="t">If you need to supply a procedure with information so that it can perform its task, you pass that information in the form of arguments. When you declare an argument, you can specify the data type of the argument, whether or not the procedure can change the argument's value, and whether an argument is required or optional. For more information, see the following sections.</P>
<P CLASS="t">To indicate that a given procedure takes arguments, include an argument list between the parentheses that follow the procedure name in the procedure declaration. The argument list can contain multiple argument declarations, separated by commas.</P>
<P CLASS="t">The following example shows the declaration line of a <B>Sub</B> procedure that takes two arguments.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub UpdateRecord(custId, custName)
</FONT></PRE>
<P CLASS="t">The following code calls UpdateRecord.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Dim newId As Integer
Dim newName As String

newId = 3452
newName = "Mary Boyd"
UpdateRecord newId, newName
</FONT></PRE>
<P CLASS="t">Note that the name of the variable you pass from the calling procedure doesn't have to match the name of the argument declared in the called procedure.</P>
<P CLASS="t">If you pass an array as an argument, you must include empty parentheses after the array name. Because you don't specify the dimensions of the array, the procedure can accept arrays of any size. The following example shows a declaration line for a <B>Sub</B> procedure that takes an array as an argument.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub PrintList(custArray())
</FONT></PRE>
<P CLASS="t">Arguments have the same scope as variables declared within a procedure — that is, local (procedure-level) scope. They're not accessible outside the procedure in whose argument list they're declared.</P></FONT>
</FONT></BODY></HTML>
