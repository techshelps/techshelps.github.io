<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeyPress Event</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec151"></A>KeyPress Event</H1><P CLASS="t">  </P>
<H2><A NAME="sec152"></A>Applies To</H2><P>Bound Object Frame Control, Check Box Control, Combo Box Control, Command Button Control, Form, List Box Control, Option Button Control, Text Box Control, Toggle Button Control.</P>
<H2><A NAME="sec153"></A>Description</H2><P>The KeyPress event occurs when the user presses and releases a key or key combination that corresponds to an ANSI code while a form or control has the focus. This event also occurs if you send an ANSI keystroke to a form or control using the SendKeys action in a macro or the <B>SendKeys</B> statement in Visual Basic.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   The KeyPress event applies only to forms and controls on a form.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec154"></A>Remarks</H2><P>The object with the focus receives all keystrokes. A form can have the focus only if it has no controls or all its visible controls are disabled. A KeyPress event can involve any printable keyboard character, the CTRL key combined with a character from the standard alphabet or a special character, and the ENTER or BACKSPACE key.</P>
<P>A form will also receive all keyboard events, even those that occur for controls, if you set the <B>KeyPreview</B> property of the form to Yes. With this property setting, all keyboard events occur first for the form, and then for the control that has the focus. You can respond to specific keys pressed in the form, regardless of which control has the focus. For example, you may want the key combination CTRL+X to always perform the same action on a form.</P>
<P>If you press and hold down an ANSI key, the KeyDown and KeyPress events alternate repeatedly (KeyDown, KeyPress, KeyDown, KeyPress, and so on) until you release the key, then the KeyUp event occurs.</P>
<P>You can use the KeyDown and KeyUp event procedures to handle any keystroke not recognized by the KeyPress event, such as function keys, navigation keys, and any combinations of these with keyboard modifiers (ALT, SHIFT, or CTRL keys). Unlike the KeyDown and KeyUp events, the KeyPress event doesn’t indicate the physical state of the keyboard; instead, it indicates the ANSI character that corresponds to the pressed key or key combinations.</P>
<P>KeyPress interprets the uppercase and lowercase of each character as separate key codes and, therefore, as two separate characters.</P>
<P>The KeyDown and KeyPress events occur when you press or send an ANSI key. The KeyUp event occurs after any event for a control caused by pressing or sending the key. If a keystroke causes the focus to move from one control to another control, the KeyDown event occurs for the first control, while the KeyPress and KeyUp events occur for the second control.</P>
<P>For example, if you go to a new record and type a character in the first control in the record, the following events occur:</P>
<P>    Current (for the new record)</P>
<P>     ?</P>
<P>    Enter (for the first control in the new record)</P>
<P>     <IMG SRC=darrow.gif></P>
<P>    GotFocus (for the control)</P>
<P>     <IMG SRC=darrow.gif></P>
<P>    KeyDown (for the control)</P>
<P>     <IMG SRC=darrow.gif></P>
<P>    KeyPress (for the control)</P>
<P>    <IMG SRC=darrow.gif></P>
<P>    BeforeInsert (for the new record in the form)</P>
<P>     <IMG SRC=darrow.gif></P>
<P>    Change (for the control if it’s a text box or combo box)</P>
<P>     <IMG SRC=darrow.gif></P>
<P>    KeyUp (for the control)</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   The BACKSPACE key is part of the ANSI character set, but the DEL key isn’t. If you delete a character in a control using the BACKSPACE key, you cause a KeyPress event; if you use the DEL key, you don’t.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec155"></A>See Also</H2><P><B>Asc</B> Function; Change Event; <B>Chr</B> Function; Enter, Exit Events; GotFocus, LostFocus Events; KeyDown, KeyUp Events; <B>KeyPreview</B> Property; NotInList Event; SendKeys Action; <B>SendKeys</B> Statement.</P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
