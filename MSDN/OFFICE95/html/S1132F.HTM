<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CancelEvent Action</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec162"></A>CancelEvent Action</H1><P CLASS="t">  </P>
<H2><A NAME="sec163"></A>Description</H2><P>You can use the CancelEvent action to cancel the event that caused Microsoft Access to run the macro containing this action. The macro name is the setting of an event property such as <B>BeforeUpdate</B>, <B>OnOpen</B>, <B>OnUnload</B>, or <B>OnPrint</B>.</P>
<H2><A NAME="sec164"></A>Setting</H2><P>The CancelEvent action doesn’t use any arguments.</P>
<H2><A NAME="sec165"></A>Remarks</H2><P>In a form, you typically use the CancelEvent action in a validation macro with the <B>BeforeUpdate</B> event property. When a user enters data in a control or record, Microsoft Access runs the macro before adding the data to the database. If the data fails the validation conditions in the macro, the CancelEvent action cancels the update process before it starts.</P>
<P>Often, you can use this action with the MsgBox action to indicate that the data has failed the validation conditions and to provide helpful information about the kind of data that should be entered.</P>
<P>The following events can be canceled by the CancelEvent action:</P>
<P></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="117pt" VALIGN="TOP"><COL WIDTH="102pt" VALIGN="TOP"><COL WIDTH="160pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">ApplyFilter</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Delete</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">MouseDown</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">BeforeDelConfirm</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Exit</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">NoData</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">BeforeInsert</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Filter</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Open</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">BeforeUpdate</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Format</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Print</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">DblClick</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">KeyPress</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Unload</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   You can use the CancelEvent action with the MouseDown event only to cancel the event that occurs when you click the right mouse button.</P>
<P CLASS="t">  </P>
<P></P>
<P>If a control’s <B>OnDblClick</B> event property setting specifies a macro containing the CancelEvent action, the action cancels the double-click event.</P>
<P>For events that can be canceled, the default behavior for the event (that is, what Microsoft Access typically does when the event occurs) occurs after the macro for the event runs. This enables you to cancel the default behavior. For example, when you double-click a word that the insertion point is on in a text box, Microsoft Access normally selects the word. You can cancel this default behavior in the macro for the DblClick event and perform some other action, such as opening a form containing information about the data in the text box. For events that can’t be canceled, the default behavior occurs before the macro runs.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   If a form’s <B>OnUnload</B> event property specifies a macro that carries out a CancelEvent action, you won’t be able to close the form. You must either correct the condition that caused the CancelEvent action or open the macro and delete the CancelEvent action to close the form. If the form is a modal form, you won’t be able to open the macro.</P>
<P CLASS="t">  </P>
<P></P>
<P>To carry out the CancelEvent action in Visual Basic, use the <B>CancelEvent</B> method of the <B>DoCmd</B> object.</P>
<H2><A NAME="sec166"></A>See Also</H2><P><B>CancelEvent</B> Method, StopMacro Action.</P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
