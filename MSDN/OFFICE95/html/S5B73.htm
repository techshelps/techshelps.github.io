<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 7 Handling Run-Time Errors</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1 CLASS="cht">Chapter 7 Handling Run-Time Errors</H1><P CLASS="t">This chapter explains how to handle <I>run-time errors</I> — errors that occur while your code is running. A run-time error occurs when your code attempts to perform an invalid operation, such as opening a file that was deleted, using a property that doesn't exist, or setting the value of a read-only property. Although you can prevent many run-time errors by being careful and thorough when writing and checking your code, there will always be a potential for unforeseeable errors cropping up. To prevent one of these unexpected errors from stopping your code prematurely and leaving your data in an unpredictable state, you can add error-handling code to your procedures.</P>
<H5><A NAME="sec0"></A>Contents</H5><UL><LI>How to Handle Errors</LI><LI>Designing an Error Handler</LI><LI>Defining Your Own Error Values</LI><LI>Using Worksheet Error Values</LI><LI>Advanced Error-Handling Techniques</LI></UL><P></P></FONT>
</FONT></BODY></HTML>
