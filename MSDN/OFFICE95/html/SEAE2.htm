<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Add-in Applications</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Creating Add-in Applications</H1><P CLASS="t">In Microsoft Excel version 4.0, all you need to do to convert a macro to an add-in macro is save the macro sheet in the add-in file format; after you do this, the macro sheet will be hidden from view. Microsoft Excel 4.0 add-in macros still run in Microsoft Excel version 7.0. (Add-in macros are called <I>add-in applications</I> in Microsoft Excel version 7.0.)</P>
<P CLASS="t">To create an add-in application in Microsoft Excel version 7.0, you use the Make Add-In command (Tools menu) while a Visual Basic module, Microsoft Excel 4.0 macro sheet, or dialog sheet is active. However, before you convert a workbook containing Visual Basic code to an add-in application, you must save your code in a workbook with a different filename if you want to continue working with the code. After you've converted a workbook to an add-in application, you cannot edit code in that workbook again. You can distribute your add-in application to other users of Microsoft Excel version 7.0, who can run your add-in application but cannot see or change your code.</P>
<P CLASS="t">For more information about add-in applications in Microsoft Excel version 7.0, see Chapter 11, "Automatic Procedures and OnEvent Procedures."</P>
<P CLASS="t"></P></FONT>
</FONT></BODY></HTML>
