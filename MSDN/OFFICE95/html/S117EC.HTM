<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ForeColor Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec186"></A>ForeColor Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec187"></A>Applies To</H2><P>Combo Box Control, Command Button Control, Label Control, List Box Control, Text Box Control, Toggle Button Control.</P>
<H2><A NAME="sec188"></A>Description</H2><P>You can use the <B>ForeColor</B> property to specify the color for text in a control. You can use this property for controls on forms to make them easy to read or to convey a special meaning. For example, you can change the color of the text in the UnitsInStock control when its value falls below the reorder level.</P>
<P>You can use this property on reports to create special visual effects when you print with a color printer. When used on a report, this property specifies the printing and drawing color for the <B>Print</B>, <B>Line</B>, and <B>Circle</B> methods.</P>
<H2><A NAME="sec189"></A>Setting</H2><P>The <B>ForeColor</B> property contains a numeric expression that represents the value of the text color in the control.</P>
<P>For reports, you can set the <B>ForeColor</B> property only in a macro or an event procedure specified in a section’s <B>OnPrint</B> event property setting.</P>
<P>For controls, set this property using the Formatting toolbar or the Color Builder.</P>
<P>You can also set this property using the controls default control style.</P>
<H2><A NAME="sec190"></A>See Also</H2><P><B>BackColor</B> Property, <B>BackStyle</B> Property, <B>Circle</B> Method, <B>DrawMode</B> Property, <B>DrawStyle</B> Property, <B>DrawWidth</B> Property, <B>FillStyle</B> Property, <B>Line</B> Method, <B>Print</B> Method, <B>QBColor</B> Function, <B>RGB</B> Function.</P>
<H2><A NAME="sec191"></A>Example</H2><P>The following example uses the <B>RGB</B> function to set the <B>BorderColor</B>, <B>BackColor</B>, and <B>ForeColor</B> properties depending on the value of the txtPastDue text box. You can also use the <B>QBColor</B> function to set these properties. Putting the following code in the Form_Current( ) event sets the control display characteristics as soon as the user opens a form or moves to a new record.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub Form_Current()
    Dim curAmntDue As Currency, lngBlack As Long
    Dim lngRed As Long, lngYellow As Long, lngWhite As Long
    If Not IsNull(Me!txtPastDue.Value) Then
        curAmntDue =Me!txtPastDue.Value
    Else
        Exit Sub
    End If
    lngRed = RGB(255, 0, 0) 
    lngBlack = RGB(0, 0, 0) 
    lngYellow = RGB(255, 255, 0) 
    lngWhite = RGB(255, 255, 255) 
    If curAmntDue &gt; 100 Then
        Me!txtPastDue.BorderColor = lngRed
        Me!txtPastDue.ForeColor = lngRed
        Me!txtPastDue.BackColor = lngYellow
    Else
        Me!txtPastDue.BorderColor = lngBlack
        Me!txtPastDue.ForeColor = lngBlack
        Me!txtPastDue.BackColor = lngWhite
    End IfSub
</PRE>
<P CLASS="t">  </P>
</FONT></FONT></BODY></HTML>
