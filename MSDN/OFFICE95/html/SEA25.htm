<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Calls Dialog Box to Trace Nested Procedures</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>
	

<H1>Using the Calls Dialog Box to Trace Nested Procedures</H1><P CLASS="t">The Calls dialog box displays a list of all active procedure calls. Active procedure calls are the procedures that have started but haven't finished executing. For example, you can use the Calls dialog box to trace the procedure calls in the following code.</P>
<P CLASS="spacing"><BR></P>
<PRE>Sub Demo1()
    Call Demo2
End Sub

Sub Demo2()
    Call Demo3
End Sub

Sub Demo3()
    MsgBox "Demo3 is running"
    Stop
End Sub
</PRE>
<P CLASS="t">The Calls dialog box lists three active procedure calls when execution is suspended by the <B>Stop</B> statement in the Demo3 procedure.</P>
<P CLASS="a">    <img src="APG0606.gif"></P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To display the Calls dialog box</B></P>
<P CLASS="lt1"> <UL><LI>In the Debug window, click the button to the right of the Procedure box (the box containing the name of the current procedure).</LI></UL>
<P></P>
<P CLASS="t">The Calls dialog box is especially helpful if you want to trace nested procedures. For example, a procedure can call a second procedure, which can call a third procedure — all before the procedure that started this chain has finished executing. In the preceding illustration, the Demo1 procedure called the Demo2 procedure, which called the Demo3 procedure.</P>
<P CLASS="t">The Calls dialog box lists all the active procedure calls in a series of nested procedure calls. It places the most recently started procedure call at the top of the list; earlier procedure calls appear in order below that. The information given for each procedure includes the name of the workbook and module that contains the procedure, followed by the name of the procedure.</P>
<P CLASS="t">You can click Show to display the statement that calls the next procedure listed in the Calls dialog box.</P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To display the statement that calls the next procedure in the Calls dialog box</B></P>
<P CLASS="ls">    1.    In the Calls dialog box, click the procedure call you want to display.</P>
<P CLASS="ls">    2.    Click Show.</P>
<P CLASS="lt1">Visual Basic displays the procedure in the module. The insertion point indicates the statement that calls the next procedure in the Calls dialog box (the procedure above the displayed procedure).</P>
<P></P>
<P CLASS="t">If you click the current (top) procedure in the Calls dialog box and then click Show, Visual Basic displays the current statement (the statement at which execution is suspended).</P>
</BODY></HTML>
