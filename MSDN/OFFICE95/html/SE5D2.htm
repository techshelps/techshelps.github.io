<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Print # Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Print # Statement</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Writes display-formatted data to a sequential file.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Print</B> <B>#</B><I>filenumber</I>,[<I>outputlist</I>]</P>
<P CLASS="t">The <B>Print #</B> statement syntax has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>filenumber</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Any valid file number.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>outputlist</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Expression or list of expressions to print.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">The <I>outputlist</I> argument has the following syntax and parts: </P>
<P CLASS="syn">[{<B>Spc(</B><I>n</I><B>)</B> | <B>Tab</B>[<B>(</B><I>n</I><B>)</B>]}][<I>expression</I>][<I>charpos</I>]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Spc(</B><I>n</I><B>)</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Used to insert space characters in the output, where <I>n</I> is the number of space characters to insert.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Tab(</B><I>n</I><B>)</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Used to position the insertion point to an absolute column number, where <I>n</I> is the column number. Use <B>Tab</B> with no argument to position the insertion point at the beginning of the next print zone.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>expression</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Numeric or string expressions to print.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>charpos</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Specifies the insertion point for the next character. Use a semicolon to specify the insertion point to be immediately after the last character displayed. Use <B>Tab(</B><I>n</I><B>)</B> to position the insertion point to an absolute column number. Use <B>Tab</B> with no argument to position the insertion point at the beginning of the next print zone. If <I>charpos</I> is omitted, the next character is printed on the next line.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">If you omit <I>outputlist </I>and include only a list separator after <I>filenumber</I>, a blank line prints to the file. Multiple expressions can be separated with either a space or a semicolon. A space has the same effect as a semicolon. </P>
<P CLASS="t">All data written to the file using <B>Print #</B> is internationally aware; that is, the data is properly formatted (using the appropriate decimal separator) and the keywords are output in the language appropriate for the international locale specified for your system.</P>
<P CLASS="t">For <B>Boolean</B> data, either True or False is printed. The <B>True</B> and <B>False</B> keywords are translated, as appropriate, according to the locale setting specified for your system.</P>
<P CLASS="t"><B>Date</B> data is written to the file using the standard short date format recognized by your system. When either the date or the time component is missing or zero, only the provided part gets written to the file.</P>
<P CLASS="t">Nothing is written to the file if <I>outputlist</I> data is <B>Empty</B>. However, if <I>outputlist</I> data is <B>Null</B>, Null is written to the file. Again, the <B>Null</B> keyword is translated, as appropriate.</P>
<P CLASS="t">For error data, the output appears as Error <I>errorcode</I>. The <B>Error</B> keyword is translated, as appropriate, when written to the file.</P>
<P CLASS="t">Because <B>Print #</B> writes an image of the data to the file, you must delimit the data so it prints correctly. If you use <B>Tab</B> with no arguments to move the print position to the next print zone, <B>Print #</B> also writes the spaces between print fields to the file.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">If, at some future time, you want to read the data from a file using the <B>Input # </B>statement, use the <B>Write #</B> statement instead of the <B>Print # </B>statement to write the data to the file. Using <B>Write #</B> ensures the integrity of each separate data field by properly delimiting it, so that it can be read back in using <B>Input #</B>. Using <B>Write #</B> also ensures that it can be correctly read in any locale.</P>
<P></P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Open</B> Statement, <B>Print</B> Method, <B>Spc</B> Function, <B>Tab</B> Function, <B>Write</B> <B>#</B> Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example uses the <B>Print #</B> statement to write data to a file.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Open "TESTFILE" For Output As #1    ' Open file for output.
Print #1, "This is a test"    ' Print text to file.
Print #1,    ' Print blank line to file.
Print #1, "Zone 1"; Tab ; "Zone 2"    ' Print in two print zones.
Print #1, "Hello" ; " " ; "World"    ' Separate strings with space.
Print #1, Spc(5) ; "5 leading spaces "    ' Print 5 leading spaces.
Print #1, Tab(10) ; "Hello"    ' Print word at col 10.

' Assign Boolean, Date, Null and Error values.
MyBool = False : MyDate = #February 12, 1969# : MyNull = Null
MyError = CVErr(32767)
' True, False, Null and Error are translated using locale settings of 
' your system. Date literals are written using standard short date 
' format.
Print #1, MyBool ; " is a Boolean value"
Print #1, MyDate ; " is a date"
Print #1, MyNull ; " is a null value"
Print #1, MyError ; " is an error value"
Close #1    ' Close file.
</FONT></PRE></FONT>
</FONT></BODY></HTML>
