<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Option Explicit Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec282"></A>Option Explicit Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec283"></A>Description</H2><P>Used at module level to force explicit declaration of all variables in that module.</P>
<H2><A NAME="sec284"></A>Syntax</H2><P><B>Option Explicit</B></P>
<H2><A NAME="sec285"></A>Remarks</H2><P>If used, the <B>Option</B> <B>Explicit</B> statement must appear in a module before any statements that declare variables or define constants.</P>
<P>If you don’t use the <B>Option Explicit</B> statement, all undeclared variables are of <B>Variant</B> type unless the default type is otherwise specified with a <B>Def</B><I>type</I> statement.</P>
<P>When you use the <B>Option Explicit </B>statement, you must explicitly declare all variables using the <B>Dim</B>, <B>Private</B>, <B>Public</B>, <B>ReDim</B>, or <B>Static</B> statements. If you attempt to use an undeclared variable name, an error occurs at compile time.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Tip</B>   Use <B>Option Explicit</B> to avoid incorrectly typing the name of an existing variable or to avoid risking confusion in code where the scope of the variable is not clear.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec286"></A>See Also</H2><P><B>Const</B> Statement, <B>Def</B><I>type</I> Statements, <B>Dim</B> Statement, <B>Function</B> Statement, <B>Option Base</B> Statement, <B>Option Compare</B> Statement, <B>Option Private</B> Statement, <B>Private</B> Statement, <B>Public</B> Statement, <B>ReDim</B> Statement, <B>Static</B> Statement, <B>Sub</B> Statement.</P>
<H2><A NAME="sec287"></A>Specifics (Microsoft Access)</H2><P>In Microsoft Access, you can ensure that all new form modules, report modules, and standard modules will automatically include the <B>Option Explicit</B> statement. On the Tool menu, click Options, then click the Module tab, and select the Require Variable Declaration option.</P>
<P>Once you select this option, it will automatically be set for all other databases which you create or open with Microsoft Access.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   When you select this option, only new modules will have the <B>Option Explicit</B> setting. You must enter the <B>Option Explicit</B> statement into the Declarations section of any existing modules; or when the module is open, on the Tools menu click Options, click the Module tab, and select the Require Variable Declaration option.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec288"></A>Example</H2><P>This example uses the <B>Option Explicit</B> statement to force you to explicitly declare all variables. Attempting to use an undeclared variable causes an error at compile time. The <B>Option Explicit</B> statement is used at the module level only.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Option Explicit        ' Force explicit variable declaration.MyVar            ' Declare variable.= 10            ' Undeclared variable generates error.= 10            ' Declared variable does not generate error.</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
