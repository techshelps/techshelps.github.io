<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding a Watch Expression</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Adding a Watch Expression</H2><P CLASS="t">You can add a watch expression before running a procedure or after entering break mode. You use the Add Watch dialog box to add watch expressions.</P>
<P CLASS="a">    <img src="APG0603.gif"></P>
<P CLASS="t">In the Expression box, enter the expression you want the watch expression to evaluate. The expression can be a variable, a property, a function call, or any other valid expression.</P>
<P CLASS="t">Under Context, click items in the list boxes to set the scope of the variables you want watched in the expression. Use these options if you have variables of the same name with different scope. You can also use these options to restrict the scope of watch variables. Visual Basic can evaluate a variable in a narrow context more quickly.</P>
<P CLASS="t">Under Watch Type, click an option button to set how you want Visual Basic to respond to the watch expression. Visual Basic can watch the expression and display its value in the Watch pane when the code enters break mode. Or you can have the code enter break mode automatically when the expression evaluates to <B>True</B> or when the value of the expression changes.</P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To add a watch expression</B></P>
<P CLASS="ls">    1.    On the Tools menu, click Add Watch.</P>
<P CLASS="ls">    2.    In the Expression box, type the expression you want to evaluate.</P>
<P CLASS="ls">    3.    To set the scope of the expression to be watched, click the procedure or module name in the appropriate box under Context.</P>
<P CLASS="ls">    4.    To determine how you want Visual Basic to respond to the watch expression, click an option button under Watch Type.</P>
<P></P></FONT>
</FONT></BODY></HTML>
