<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Len Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec229"></A>Len Function</H1><P CLASS="t">  </P>
<H2><A NAME="sec230"></A>Description</H2><P>Returns the number of characters in a string or the number of bytes required to store a variable.</P>
<H2><A NAME="sec231"></A>Syntax</H2><P><B>Len(</B><I>string </I>|<I> varname</I><B>)</B></P>
<P>The <B>Len</B> function syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Any valid string expression. If string contains <B>Null</B>, <B>Null</B> is returned.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>varname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Any valid variable name. If varname contains <B>Null</B>, <B>Null</B> is returned. If varname is a <B>Variant</B>, <B>Len</B> treats it the same as a <B>String</B> and always returns the number of characters it contains.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">  </P>
<P CLASS="t"></P>
<P><B>Caution</B>   <B>Len</B> may not be able to determine the actual number of storage bytes required when used with user-defined data types.</P>
<P CLASS="t"></P>
<P CLASS="t">  </P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   Another function (<B>LenB</B>) is provided for use with byte data contained in a string. Instead of returning the number of characters in a string, <B>LenB</B> returns the number of bytes used to represent that string.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec232"></A>See Also</H2><P>Data Type Summary, <B>InStr</B> Function.</P>
<H2><A NAME="sec233"></A>Example</H2><P>This example uses the <B>Len</B> function to return the number of characters in a string or the number of bytes required to store a variable. The <B>Type...End Type</B> block defining CustomerRecord must be preceded by the keyword <B>Private</B> if it appears in a Class module. In a standard module, a <B>Type</B> statement can be <B>Public</B>. To create a standard  Module, choose Module from the Insert menu (your host application may differ, for example in Microsoft Excel, select Macro from the Insert menu and then choose Module).</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Type CustomerRecord                    ' Define user-defined type.
    ID As Integer                    ' Place this definition in a 
    Name As String * 10                ' standard module.
    Address As String * 30Type
Customer As CustomerRecord        ' Declare variables.MyInt As Integer, MyCur As Currency= "Hello World"                ' Initialize variable.= Len(MyInt)                    ' Returns 2.= Len(Customer)                ' Returns 42.= Len(MyString)                ' Returns 11.= Len(MyCur)                    ' Returns 8.</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
