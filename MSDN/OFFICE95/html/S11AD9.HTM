<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lock, Unlock Statements</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec24"></A>Lock, Unlock Statements</H1><P CLASS="t">  </P>
<H2><A NAME="sec25"></A>Description</H2><P>Controls access by other processes to all or part of a file opened using the <B>Open</B> statement.</P>
<H2><A NAME="sec26"></A>Syntax</H2><P><B>Lock</B> [#]<I>filenumber</I>[, <I>recordrange</I>]<BR>    . . .<BR><B>Unlock</B> [<B>#</B>]<I>filenumber</I>[<B>, </B><I>recordrange</I>]</P>
<P>The <B>Lock</B> and <B>Unlock</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="283pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>filenumber</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Any valid file number.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>recordrange</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">The range of records to lock or unlock. </P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec27"></A>Settings</H2><P>The <I>recordrange</I> argument settings are:</P>
<P><I>recnumber</I> | [<I>start</I>] <B>To</B> <I>end</I></P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="283pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Setting</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>recnumber</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Record number (<B>Random</B> mode files) or byte number (<B>Binary</B> mode files) at which locking or unlocking begins. </P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>start</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Number of the first record or byte to lock or unlock.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>end</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Number of the last record or byte to lock or unlock.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec28"></A>Remarks</H2><P>The <B>Lock</B> and <B>Unlock</B> statements are used in environments where several processes might need access to the same file. </P>
<P><B>Lock</B> and <B>Unlock</B> statements are always used in pairs. The arguments to <B>Lock</B> and <B>Unlock</B> must match exactly.</P>
<P>The first record or byte in a file is at position 1, the second record or byte is at position 2, and so on. If you specify just one record, then only that record is locked or unlocked. If you specify a range of records and omit a starting record (<I>start</I>), all records from the first record to the end of the range (<I>end</I>) are locked or unlocked. Using <B>Lock</B> without <I>recnumber</I> locks the entire file; using <B>Unlock</B> without <I>recnumber</I> unlocks the entire file.</P>
<P>If the file has been opened for sequential input or output, <B>Lock</B> and <B>Unlock</B> affect the entire file, regardless of the range specified by <I>start</I> and <I>end</I>.</P>
<P CLASS="t">  </P>
<P CLASS="t"></P>
<P><B>Caution</B>   Be sure to remove all locks with an <B>Unlock</B> statement before closing a file or quitting your program. Failure to remove locks produces unpredictable results.</P>
<P CLASS="t"></P>
<P CLASS="t">  </P>
<H2><A NAME="sec29"></A>See Also</H2><P><B>Open</B> Statement.</P>
<H2><A NAME="sec30"></A>Example</H2><P>This example illustrates the use of the <B>Lock</B> and <B>Unlock</B> statements. While a record is being modified, access by other processes to the record is denied. This example assumes that TESTFILE is a file containing five records of the user-defined type Record.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Type Record                            ' Define user-defined type.
    ID As Integer
    Name As String * 20TypeMyRecord As Record                ' Declare variable.
' Open sample file for random access."TESTFILE" For Random Shared As #1 Len = Len(MyRecord)= 4                        ' Define record number.#1, RecordNumber                ' Lock record.#1, RecordNumber, MyRecord        ' Read record..ID = 234                    ' Modify record..Name = "John Smith"#1, RecordNumber, MyRecord        ' Write modified record.#1, RecordNumber                ' Unlock current record.#1                                ' Close file.</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
