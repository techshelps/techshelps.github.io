<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Workbook-Level Automatic Procedures</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Using Workbook-Level Automatic Procedures</H2><P CLASS="t">A workbook-level automatic procedure is stored in a workbook and runs automatically whenever an event such as opening or closing a workbook occurs. You can place automatic procedures in any Visual Basic module in the workbook.</P>
<P CLASS="t">Workbook-level automatic procedures are identified by their names as they appear in a module — Auto_Open or Auto_Close, for example. When you name the procedure in a module, the name isn't case sensitive; therefore, Auto_Open and auto_open are equivalent.</P>
<P CLASS="t">The following table lists the automatic procedure names available in Microsoft Excel and describes the event that causes each procedure to run.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="78pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Procedure name</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Event that causes the procedure to run</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Auto_Open</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">User opens the workbook that contains the procedure.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Auto_Close</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">User closes the workbook that contains the procedure.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Auto_Add</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">User installs the add-in that contains the procedure, or the <B>Installed</B> property of the add-in is set to <B>True</B>. For more information, see Chapter 12, "Creating Add-Ins."</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Auto_Remove</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">User removes the add-in that contains the procedure, or the <B>Installed</B> property of the add-in is set to <B>False</B>. For more information, see Chapter 12, "Creating Add-Ins."</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">To give you more programming flexibility, the Auto_Open and Auto_Close procedures don't run if you open or close a workbook under program control. For example, the statement Workbooks.Open filename:="book2.xls" opens the workbook but doesn't run the Auto_Open procedure. To run the Auto_Open procedure under program control, use the <B>RunAutoMacros</B> method. For more information, see "RunAutoMacros method" in Help.</P>
<P></P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To define an automatic procedure</B></P>
<P CLASS="ls">    1.    Switch to the Visual Basic module where you want to store the automatic procedure.</P>
<P CLASS="ls">    2.    Create a new procedure named "Auto_Open," "Auto_Close," "Auto_Add," or "Auto_Remove."</P>
<P CLASS="ls">    3.    Write the code for the procedure.</P>
<P></P>
<P CLASS="t">To test an automatic procedure without having to explicitly open or close the workbook, click Macro on the Tools menu, click the name of the procedure, and then click Run.</P>
<P CLASS="t">You can use at most one Auto_Open and one Auto_Close procedure in each workbook. If more than one Auto_Open or Auto_Close procedure exists in a workbook, none of them will run when the user opens or closes the workbook.</P>
<P CLASS="t">If more than one Auto_Add or Auto_Remove procedure exists in an add-in, an error occurs when the user installs or removes the add-in.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">You can prevent an automatic procedure from running by holding down Shift while opening or closing a workbook or switching to or from a worksheet. For example, you can hold down Shift while opening an application that's under development to avoid running any of its Auto_Open procedures.</P>
<P></P></FONT>
</FONT></BODY></HTML>
