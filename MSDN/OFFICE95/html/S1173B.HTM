<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Event Properties</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec9"></A>Event Properties</H1><P CLASS="t">  </P>
<H2><A NAME="sec10"></A>Description</H2><P>Event properties cause a macro or the associated Visual Basic event procedure to run when a particular event occurs. For example, if you enter the name of a macro in a command button’s <B>OnClick</B> property, that macro runs when the command button is clicked.</P>
<H2><A NAME="sec11"></A>Setting</H2><P>To run a macro, enter the name of the macro. You can choose an existing macro in the list. If the macro is in a macro group, it will be listed under the macro group name, as <I>macrogroupname.macroname</I>.</P>
<P>To run the event procedure associated with the event, select [Event Procedure] in the list.</P>
<P CLASS="t">  </P>
<P><B>Note</B>   Although using an event procedure is the recommended method for running Visual Basic code in response to an event, you can also run a user-defined function when an event occurs. To run a user-defined function, place an equal sign (=) before the function name and parentheses after it, as in =<I>functionname</I>( ).</P>
<P CLASS="t">  </P>
<P>You can set event properties in the property sheet for an object or in a macro or Visual Basic. Note that you can’t set any event properties while you’re formatting or printing a form or report.</P>
<P CLASS="t">  </P>
<P><B>Tip</B>   You can use builders to help you set an event property. Click the Build button to the right of the property box, or click the right mouse button when the pointer is over the property box and then click Build on the shortcut menu. In the Choose Builder dialog box, select:</P>
<P CLASS="t">  </P>
<SPAN CLASS="list"><UL><LI><SPAN CLASS="Symbol"></SPAN>    The Macro Builder to create and specify a macro for this event property. You can also use the Macro Builder to edit a macro already specified by the property.</LI><LI><SPAN CLASS="Symbol"></SPAN>    The Code Builder to create and specify an event procedure for this event property. You can also use the Code Builder to edit an event procedure already specified by the property.</LI><LI><SPAN CLASS="Symbol"></SPAN>    The Expression Builder to choose and specify a user-defined function for this event property.</LI></UL></SPAN><P>In Visual Basic, set the property to a string expression.</P>
<P CLASS="t">  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="95pt" VALIGN="TOP"><COL WIDTH="102pt" VALIGN="TOP"><COL WIDTH="180pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>To run this</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Use this syntax</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Example</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Macro</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">"macroname"</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Button1.OnClick = "MyMacro"</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Event procedure</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">"[Event Procedure]"</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Button1.OnClick = "[Event Procedure]"</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">User-defined function</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">"=functionname( )"</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Button1.OnClick = "=MyFunction()"</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec12"></A>Example</H2><P>The following example shows how you can use the value entered in the Country control to determine which of two different macros to run when you click the Print Country Report button.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub Country_AfterUpdate()
    If Country = "Canada" Then
        [Print Country Report].OnClick = "PrintCanadaReport"
    ElseIf Country = "USA" Then
        [Print Country Report].OnClick = "PrintUSAReport"
    End IfSub</PRE>
<P CLASS="t">  </P>
</FONT></FONT></BODY></HTML>
