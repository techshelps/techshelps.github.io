<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Defining Your Own Error Values</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Defining Your Own Error Values</H1><P CLASS="t">The preceding section explains how you can use run-time error values to diagnose problems in your code and respond appropriately to the problems. There may be times, however, when you want to detect and respond to situations that don't cause Visual Basic to generate errors. To do this, you need to create your own <I>user-defined error values</I> for those situations.</P>
<P CLASS="t">This type of error value is commonly used in procedures that accept several arguments and then return a value. Suppose the return value is valid only if the arguments fall within certain ranges. Your procedure can test the arguments that the user provides; if they aren't in the acceptable range, you can have the procedure return an appropriate error value.</P>
<P CLASS="t">The following sections describe how to create a user-defined error value using the <B>CVErr</B> function and how to test for an error value using the <B>IsError</B> function.</P></FONT>
</FONT></BODY></HTML>
