<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Entering Break Mode at a Problem Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Entering Break Mode at a Problem Statement</H1><P CLASS="t">To use debugging tools, you must be in break mode. If you suspect that the problem you're debugging occurs at a certain place in the code, you'll probably want to enter break mode at that location. This is why Visual Basic enables you to use <I>breakpoints</I> and the <B>Stop</B> statement. A breakpoint is a statement at which Visual Basic automatically enters break mode.</P>
<P CLASS="t">Visual Basic enters break mode at a line if one or more of the following conditions exist:</P>
<UL><LI>The line is a breakpoint.</LI><LI>There is a <B>Stop</B> statement on that line.</LI><LI>A statement on the line generates a run-time error. (This is true only if there is no error trapping in effect.)</LI><LI>You've set a watch expression of the type Break When Value Is True, and a statement on the line causes the value of the watch expression to change and evaluate to <B>True</B>.</LI><LI>You've set a watch expression of the type Break When Value Changes, and a statement on the line causes the value of the watch expression to change.</LI></UL><P></P>
<P CLASS="t">You can also enter break mode by pressing ESC or CTRL+BREAK while code is running.</P></FONT>
</FONT></BODY></HTML>
