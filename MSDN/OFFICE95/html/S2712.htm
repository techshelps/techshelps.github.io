<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Features of WordBasic</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H2 CLASS="h1">Features of WordBasic</H2><P CLASS="t">WordBasic is a structured programming language originally modeled on the Microsoft QuickBasic&trade; language. It combines a subset of the instructions available in standard Basic languages with statements and functions based on the Word user interface. You can use WordBasic to modify any Word command or to write your own. You can assign your macros to menus, toolbars, and shortcut keys so that they look and function like regular Word commands.</P>
<P CLASS="t">WordBasic includes the following features for developing macros.</P>
<H3 CLASS="h6"><A NAME="sec0"></A>Macro-editing environment</H3><P CLASS="h">The macro-editing environment includes tools for testing and debugging macros. For example, buttons on the Macro toolbar can step and trace through macros, show current variable values in a paused macro, and "comment out" instructions (Chapter 2, "Getting Started with Macros," and Chapter 6, "Debugging").</P>
<H3 CLASS="h6"><A NAME="sec1"></A>Control structures</H3><P CLASS="h">WordBasic supports most of the standard Basic control structures, including <B>If</B><FONT FACE="Symbol"><B>¼</B></FONT><B>Then</B><FONT FACE="Symbol"><B>¼</B></FONT><B>Else</B>, <B>For</B><FONT FACE="Symbol"><B>¼</B></FONT><B>Next</B>, <B>While</B><FONT FACE="Symbol"><B>¼</B></FONT><B>Wend</B>, and <B>Select Case</B> (Chapter 3, "WordBasic Fundamentals," and Chapter 4, "Advanced WordBasic").</P>
<P CLASS="t"></P>
<H3 CLASS="h6"><A NAME="sec2"></A>Subroutines and user-defined functions</H3><P CLASS="h">By writing subroutines and defining functions, you can create modular code that is easy to test. You can also store libraries of subroutines and functions that can be used in more than one macro (Chapter 4, "Advanced WordBasic").</P>
<H3 CLASS="h6"><A NAME="sec3"></A>Dialog Editor</H3><P CLASS="h">You can use the Dialog Editor included with Word to design custom dialog boxes that support most of the standard dialog box controls in the Microsoft Windows family of operating systems and the Apple Macintosh System 7 operating system. The Dialog Editor automatically creates the WordBasic instructions that define your custom dialog box (Chapter 5, "Working with Custom Dialog Boxes").</P>
<H3 CLASS="h6"><A NAME="sec4"></A>DDE and OLE Automation</H3><P CLASS="h">To communicate with other applications, Word supports dynamic data exchange (DDE) and provides partial support for OLE Automation (Chapter 8, "Communicating with Other Applications").</P>
<H3 CLASS="h6"><A NAME="sec5"></A>Extensibility</H3><P CLASS="h">In Windows, you can extend WordBasic's capabilities by calling functions stored in dynamic-link libraries (DLLs) and Word add-in libraries (WLLs), as well as functions available through the Windows application programming interface (API). On the Macintosh, you can call functions stored in Word add-in libraries, and you can run AppleScript scripts from within WordBasic (Chapter 9, "More WordBasic Techniques").</P></FONT></FONT></BODY></HTML>
