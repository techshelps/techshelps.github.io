<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DatasheetFontName, DatasheetFontHeight Properties</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec66"></A>DatasheetFontName, DatasheetFontHeight Properties</H1><P CLASS="t">  </P>
<H2><A NAME="sec67"></A>Applies To</H2><P>Form, Query, Table.</P>
<H2><A NAME="sec68"></A>Description</H2><P>You can use the <B>DatasheetFontName</B> and <B>DatasheetFontHeight</B> properties to specify the font and the font point size used to display field names and data.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   The <B>DatasheetFontName</B> and <B>DatasheetFontHeight</B> properties apply to all fields in Datasheet view and to form controls when the form is in Datasheet view.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec69"></A>Setting</H2><SPAN CLASS="list"><UL><LI><SPAN CLASS="Symbol"></SPAN>    <B>DatasheetFontName</B> — In Visual Basic, you set this property using a string expression equal to the name of the font.</LI><LI><SPAN CLASS="Symbol"></SPAN>    <B>DatasheetFontHeight</B> — In Visual Basic, this property setting is an <B>Integer</B> value between 1 and 127 representing the font height in points.</LI></UL></SPAN><P>You can set these properties by choosing the font name or font height on the Datasheet Formatting toolbar.</P>
<P>You can also set these properties by clicking Font on the Format menu in Datasheet view.</P>
<H2><A NAME="sec70"></A>Remarks</H2><P>For the <B>DatasheetFontName</B> property, the font names you can specify depend on the fonts installed on your system and for your printer. If you specify a font that your system can’t display or that isn’t installed, Microsoft Windows will substitute a similar font.</P>
<P>For the <B>DatasheetFontHeight</B> property, the point size you specify must be valid for the font specified by the <B>DatasheetFontName</B> property. For example, MS Sans Serif is available in point sizes 8, 10, 12, 14, 18, and 24.</P>
<H2><A NAME="sec71"></A>See Also</H2><P><B>DatasheetFontItalic</B>, <B>DatasheetFontUnderline</B> Properties; <B>DatasheetFontWeight</B> Property.</P>
<H2><A NAME="sec72"></A>Example</H2><P>The following example sets the font to MS Serif, the point size to 10, and the font weight to medium (500) in Datasheet view of the Products table.</P>
<P>To set these properties, the example uses the SetTableProperty procedure, which is shown in the <B>DatasheetFontItalic</B>, <B>DatasheetFontUnderline</B> properties example.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Dim db As Database, tdProducts As TableDefdb = CurrentDbtdProducts = db![Products]tdProducts, "DatasheetFontName", vbString, "MS Serif"tdProducts, "DatasheetFontHeight", vbInteger, 10tdProducts, "DatasheetFontWeight", vbInteger, 500
</PRE>
<P CLASS="t">  </P>
<P>The next example makes the same changes as the preceding example in Datasheet view of the open Products form.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Forms![Products].DatasheetFontName = "MS Serif"![Products].DatasheetFontHeight = 10![Products].DatasheetFontWeight = 500
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
