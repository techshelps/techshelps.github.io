<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso8859-1">


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Click Event -- Event Procedures</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h1><a name="sec3"></a>Click Event -- Event Procedures</h1>

<h2><a name="sec4"></a>Description</h2>

<p>To create an event procedure that is run when the Click event
occurs, set the <b>OnClick</b> property to [Event Procedure], and
click the Build button.</p>

<h2><a name="sec5"></a>Syntax</h2>

<p><b>Private Sub Form_Click ( )Private Sub </b><i>controlname</i><b>_Click</b>
<b>( )</b></p>

<p>The Click event procedure uses the following argument.</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>controlname</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A string that is the name of the control
        affected by the Click event procedure.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<h2><a name="sec6"></a>Remarks</h2>

<p>When the user double-clicks a list box, the following events
occur, in this order:</p>

<p>MouseDown <IMG SRC=rarrow.gif> MouseUp <IMG SRC=rarrow.gif> Click <IMG SRC=rarrow.gif> DblClick</p>

<p>Other controls have a similar order of events. When
you&#146;re creating event procedures for these related events,
be sure that their event procedure code doesn&#146;t conflict.
(For example, the DblClick event procedure shouldn&#146;t contain
code that cancels actions carried out in the Click event
procedure.)</p>

<p>For a command button only, Microsoft Access runs the event
procedure when the user chooses the command button by pressing
the ENTER key or an access key. The event procedure is run once.
If you want the event procedure to be run repeatedly while the
command button is pressed, set its <b>AutoRepeat</b> property to
Yes. For other types of controls, you must click the control
using the mouse button to trigger the Click event.</p>

<p>You can&#146;t cancel the Click event.</p>

<h2><a name="sec7"></a>See Also</h2>

<p>Click Event &#151; Macros.</p>

<h2><a name="sec8"></a>Example</h2>

<p>In this example, the Click event procedure is attached to the
ReadOnly check box. The event procedure sets the <b>Enabled </b>and
<b>Locked </b>properties of another control on the form, the
Amount text box. When the check box is clicked, the event
procedure checks whether the check box is being selected or
cleared and then sets the text box&#146;s properties to enable or
disable editing accordingly.</p>

<p>To try the following example, add the code to the Declarations
section of a form named Sales that contains a check box called
ReadOnly and a text box named Amount.</p>

<p class="spacing"><br>
</p>

<pre>Private Sub ReadOnly_Click ()
    Dim ctl As Control
    Set ctl = Forms!Sales!Amount
    If Forms!Sales!ReadOnly = True Then    ' If checked.
        ctl.Enabled = False    ' Disable editing.
        ctl.Locked = True 
    Else        ' If cleared.
        ctl.Enabled = True    ' Enable editing.
        ctl.Locked = False
    End IfSub
</pre>
</FONT></FONT></BODY>
</html>
