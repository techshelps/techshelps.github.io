<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RecordSource Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec40"></A>RecordSource Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec41"></A>Applies To</H2><P>Form, Report.</P>
<H2><A NAME="sec42"></A>Description</H2><P>You can use the <B>RecordSource</B> property to specify the source of the data for a form or report. You can display data from a table, query, or SQL statement. For example, to display and edit data from the Employees table in a form, you set the form’s <B>RecordSource</B> property to Employees. Then you can bind controls on the form or report to specific fields in the Employees table by setting the control’s <B>ControlSource</B> property to the name of a field in the table.</P>
<H2><A NAME="sec43"></A>Setting</H2><P>The <B>RecordSource</B> property setting can be a table name, a query name, or an SQL statement. For example, you can use the following settings.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="129pt" VALIGN="TOP"><COL WIDTH="239pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Sample Setting</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR>TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A table or query name</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">You can bind a control on the form or report to the LastName field in the Employees table by setting the control’s <B>ControlSource</B> property to LastName.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">An SQL statement    </P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">You can bind a control on the form or report to the OrderDate field in the Orders table by setting the control’s <B>ControlSource</B> property to OrderDate, as in the following example.</P>
<P CLASS="t">SELECT DISTINCTROW Orders.[OrderDate] Orders;</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P>You can set the <B>RecordSource</B> property using the form or report’s property sheet, a macro, or Visual Basic.</P>
<P>In Visual Basic, use a string expression to set this property.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   Changing the record source of an open form or report causes an automatic requery of the underlying data.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec44"></A>Remarks</H2><P>After you have created a form or report, you can change its source of data by changing the <B>RecordSource</B> property. The <B>RecordSource</B> property is also useful if you want to create a reusable form or report. For example, you could create a form that incorporates a standard design, then copy the form and change the <B>RecordSource</B> property to display data from a different table, query, or SQL statement.</P>
<P>Limiting the number of records contained in a form’s record source can enhance performance, especially when your application is running on a network. For example, you can set a form’s <B>RecordSource</B> property to a single record and change the form’s record source depending on criteria selected by the user.</P>
<P>You can also achieve improved performance by setting the <B>RecordSource</B> property to the name of a table or saved query instead of an SQL statement.</P>
<H2><A NAME="sec45"></A>See Also</H2><P><B>ControlSource</B> Property; <B>RowSourceType</B>, <B>RowSource</B> Properties.</P>
<H2><A NAME="sec46"></A>Example</H2><P>The following example sets the <B>RecordSource</B> property for a form to the Customers table.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Forms![frmCustomers].RecordSource = "Customers"
</PRE>
<P CLASS="t">  </P>
<P>The next example changes a form’s record source to a single record in the Customers table, depending on the company name selected in the cmboCompanyName combo box control. The combo box is filled by an SQL statement that returns the customer ID in the bound column and the company name.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub cmboCompanyName_AfterUpdate()
    Dim strNewRecord As String
    strNewRecord = "SELECT DISTINCTROW * FROM Customers "
    strNewRecord = strNewRecord &amp; "WHERE [CustomerID] = '" _
        &amp; Me!cmboCompanyName.Value &amp; "'"
    Me.RecordSource = strNewRecordSub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
