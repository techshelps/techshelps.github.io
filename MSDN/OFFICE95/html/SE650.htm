<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Select Case Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Select Case Statement</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Executes one of several groups of statements, depending on the value of an expression.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Select</B> <B>Case</B> <I>testexpression<BR></I>[<B>Case</B> <I>expressionlist-n<BR></I>    [<I>statements-n</I>]] . . .<BR>[<B>Case</B> <B>Else</B><BR>    [<I>elsestatements</I>]]<BR><B>End</B> <B>Select</B></P>
<P CLASS="t">The <B>Select Case</B> statement syntax has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part </B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>testexpression</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Any numeric or string expression.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>expressionlist-n</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Comma-delimited list of one or more of the following forms: <I>expression</I>, <I>expression</I> <B>To</B><I> expression</I>, <B>Is</B> <I>comparisonoperator</I> <I>expression</I>. The <B>To</B> keyword specifies a range of values. If you use the <B>To</B> keyword, the smaller value must appear before <B>To</B>. Use the <B>Is</B> keyword with comparison operators (except <B>Is</B> and <B>Like</B>) to specify a range of values. If not supplied, the <B>Is</B> keyword is automatically inserted.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>statements-n</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">One or more statements executed if <I>testexpression</I> matches any part of <I>expressionlist-n.</I></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>elsestatements</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">One or more statements executed if <I>testexpression</I> doesn't match any of the <B>Case</B> clause.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">If <I>testexpression</I> matches any <I>expressionlist</I> expression associated with a <B>Case</B> clause, the <I>statements</I> following that <B>Case</B> clause are executed up to the next <B>Case</B> clause, or, for the last clause, up to the <B>End Select</B>. Control then passes to the statement following <B>End Select</B>. If <I>testexpression</I> matches an <I>expressionlist</I> expression in more than one <B>Case</B> clause, only the statements following the first match are executed.</P>
<P CLASS="t">The <B>Case Else</B> clause is used to indicate the <I>statements</I> to be executed if no match is found between the <I>testexpression</I> and an <I>expressionlist</I> in any of the other <B>Case</B> selections. When there is no <B>Case Else</B> statement and no expression listed in the <B>Case</B> clauses matches <I>testexpression</I>, execution continues at the statement following <B>End Select</B>.</P>
<P CLASS="t">Although not required, it is a good idea to have a <B>Case Else</B> statement in your<B> Select Case</B> block to handle unforeseen <I>testexpression</I> values.</P>
<P CLASS="t">You can use multiple expressions or ranges in each <B>Case</B> clause. For example, the following line is valid:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Case 1 To 4, 7 To 9, 11, 13, Is &gt; MaxNumber
</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">The <B>Is</B> comparison operator is not the same as the <B>Is</B> keyword used in the <B>Select Case</B> statement.</P>
<P></P>
<P CLASS="t">You also can specify ranges and multiple expressions for character strings. In the following example, <B>Case</B> matches strings that are exactly equal to everything,strings that fall between nuts and soup in alphabetical order, and the current value of TestItem:  </P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Case "everything", "nuts" To "soup", TestItem
</FONT></PRE>
<P CLASS="t"><B>Select Case </B>statements can be nested. Each <B>Select Case</B> statement must have a matching <B>End Select </B>statement.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>If</B>...<B>Then</B>...<B>Else</B> Statement; <B>On</B>...<B>GoSub</B>, <B>On</B>...<B>GoTo</B> Statements; <B>Option</B> <B>Compare</B> Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example uses the <B>Select Case</B> statement to evaluate the value of a variable. The second <B>Case</B> clause contains the value of the variable being evaluated and therefore only the statement associated with it is executed.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Number = 8    ' Initialize variable.
Select Case Number    ' Evaluate Number.
Case 1 To 5    ' Number between 1 and 5.
    MyString = "Between 1 and 5"
Case 6, 7, 8, 9, 10    ' Number between 6 and 10.
    ' This is the only Case clause that evaluates to True.
    MyString = "Between 6 and 10"
Case Else    ' Other values.
    MyString = "Not between 1 and 10"
End Select
</FONT></PRE>
<P CLASS="t">This example displays the name of the mail system installed on the computer.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub foo()
Select Case Application.MailSystem
    Case Is = xlMAPI
        MsgBox "Mail system is Microsoft Mail"
    Case Is = xlPowerTalk
        MsgBox "Mail system is PowerTalk"
    Case Is = xlNoMailSystem
        MsgBox "No mail system installed"
End Select
End Sub
</FONT></PRE>
<P CLASS="t">This example displays a message box that describes the location of the active cell in the PivotTable.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Activate
Select Case ActiveCell.LocationInTable
Case Is = xlRowHeader
    MsgBox "Active cell is part of a row header"
Case Is = xlColumnHeader
    MsgBox "Active cell is part of a column header"
Case Is = xlPageHeader
    MsgBox "Active cell is part of a page header"
Case Is = xlDataHeader
    MsgBox "Active cell is part of a data header"
Case Is = xlRowItem
    MsgBox "Active cell is part of a row item"
Case Is = xlColumnItem
    MsgBox "Active cell is part of a column item"
Case Is = xlPageItem
    MsgBox "Active cell is part of a page item"
Case Is = xlDataItem
    MsgBox "Active cell is part of a data item"
Case Is = xlTableBody
    MsgBox "Active cell is part of the table body"
End Select
</FONT></PRE>
<P CLASS="t">This example displays a message if the active cell on Sheet1 contains a cell error value. You can use this example as a framework for a cell-error-value error handler.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Activate
If IsError(ActiveCell.Value) Then
    errval = ActiveCell.Value
    Select Case errval
        Case CVErr(xlErrDiv0)
            MsgBox "#DIV/0! error"
        Case CVErr(xlErrNA)
            MsgBox "#N/A error"
        Case CVErr(xlErrName)
            MsgBox "#NAME? error"
        Case CVErr(xlErrNull)
            MsgBox "#NULL! error"
        Case CVErr(xlErrNum)
            MsgBox "#NUM! error"
        Case CVErr(xlErrRef)
            MsgBox "#REF! error"
        Case CVErr(xlErrValue)
            MsgBox "#VALUE! error"
        Case Else
            MsgBox "This should never happen!!"
    End Select
End If
</FONT></PRE></FONT>
</FONT></BODY></HTML>
