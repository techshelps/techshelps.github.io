<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAPIFindNext</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H3 CLASS="h2">MAPIFindNext</H3><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>MAPIFindNext(</B><I>Session</I><B>, </B><I>UIParam</I><B>, </B><I>MessageType$</I><B>, </B><I>SeedMessageID$</I><B>, </B><I>Flags</I><B>, </B><I>Reserved</I><B>, </B><I>MessageID$</I><B>)</B></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Returns the ID of the next (or first) message of a specified type. This function allows an application to enumerate messages of a given type. It returns message identifiers that can be used in subsequent MAPI function calls to retrieve and delete messages. <B>MAPIFindNext</B> is for processing incoming mail, not for managing received mail. <B>MAPIFindNext</B> looks for messages in the folder in which new messages of the specified type are delivered. <B>MAPIFindNext</B> calls can be made only in the context of a valid MAPI session established with <B>MAPILogon</B>.</P>
<P CLASS="t">When provided an empty <I>SeedMessageID$</I>, <B>MAPIFindNext</B> returns the ID<BR>of the first message specified with <I>MessageType$</I>.<I> </I>When provided a non-empty <I>SeedMessageID$</I>, <B>MAPIFindNext</B> returns the next matching message of the type specified with <I>MessageType$</I>. Repeated calls to <B>MAPIFindNext</B> ultimately result <BR>in a return of MAPI_E_NO_MESSAGES, which means the enumeration of the matching message types is complete.</P>
<P CLASS="t">Message identifiers are not guaranteed to remain valid, because other applications can move or delete messages. Applications must be able to handle calls to <B>MAPIFindNext</B>, <B>MAPIDeleteMail</B>, and <B>MAPIReadMail</B> that fail because they are for invalid message IDs. The ordering of messages is system specific. Message ID strings must be dynamic strings.</P>
<P CLASS="t">Message type matching is done against message type strings. All message types whose names match (up to the length of the <I>MessageType$ </I>argument) are returned. If the <I>MessageType$</I> argument begins with "IPM.", matching occurs in the Inbox. If the <I>MessageType$</I> argument begins with "IPC.", matching is performed in the hidden application mail folder. IPM messages are interpersonal messages; IPC messages are interprocess communication messages that are not visible to the user. If the message type is an empty string (""), the list includes all messages in the Inbox.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Session</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">An opaque session handle whose value represents a session <BR>with the messaging system. Session handles are returned by <B>MAPILogon</B> and invalidated by <B>MAPILogoff</B>. If the value is<BR>0 (zero), <B>MAPIFindNext</B> returns MAPI_E_INVALID_SESSION. In all cases, the messaging system returns to its state before the call. </P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>UIParam</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The parent window handle for the dialog box. A value of 0 (zero) specifies that any dialog box displayed is application modal.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>MessageType$</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">A string that is the message type. To specify normal interpersonal messages, use an empty string (""). </P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>SeedMessageID$</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">A string that is the message identifier seed for the request. If the identifier is an empty string (""), the first message matching the type specified in the <I>MessageType$</I> argument is returned. Message IDs are system specific and opaque. Message IDs might be invalidated at any time if another application moves or deletes a message.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Flags</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">A bitmask of flags. Unspecified flags should always be set to<BR>0 (zero). Undocumented flags are reserved. The following flags<BR>are defined:</P>
<P CLASS="ct">MAPI_UNREAD_ONLY&nbsp;=&nbsp;32<BR>MAPI_NEW_SESSION&nbsp;=&nbsp;2<BR>MAPI_GUARANTEE_FIFO&nbsp;=&nbsp;256</P>
<P CLASS="tt">Set MAPI_UNREAD_ONLY if the function should enumerate only unread messages. When this flag is not set, all messages of the given type are returned.</P>
<P CLASS="tt">Set MAPI_NEW_SESSION if you want to establish a session other than the current one . For instance, if a mail client is already running, another MAPI e-mail client can piggyback on the session created by the mail client application. Do not set this flag if you want the default session (if it still exists). If the session passed in <I>Session</I> is not 0 (zero), this flag is ignored.</P>
<P CLASS="tt">Set MAPI_GUARANTEE_FIFO if you want the message IDs returned in the order the messages were received. <B>MAPIFindNext</B> calls may take longer if this flag is set.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Reserved</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Reserved for future use. This argument must be 0 (zero).</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>MessageID$</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">A variable-length string that is the message identifier. Message IDs are system specific, nonprintable, and opaque. Message ID strings must be dynamic strings. Message IDs might be invalidated at any time if another application deletes or moves a message. </P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">The following table lists the possible return values of the <B>MAPIFindNext</B> function and their meanings.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="35pt" VALIGN="TOP"><COL WIDTH="165pt" VALIGN="TOP"><COL WIDTH="146pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Value</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Name</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Meaning</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">–2</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">MAPI_E_FAILURE</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">One or more unspecified errors occurred while matching the message type. The call failed before message type matching could take place.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">–5</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">MAPI_E_INSUFFICIENT_MEMORY</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">There was insufficient memory<BR>to proceed. No mail was found.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="35pt" VALIGN="TOP"><COL WIDTH="165pt" VALIGN="TOP"><COL WIDTH="146pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Value</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Name</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Meaning</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">–17</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">MAPI_E_INVALID_MESSAGE</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">An invalid message ID was used for the <I>SeedMessageID$</I> argument. No mail was found.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">–19</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">MAPI_E_INVALID_SESSION</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">An invalid session handle was used for the <I>Session</I> argument. No mail was found.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">–16</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">MAPI_E_NO_MESSAGES</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The <B>MAPIFindNext</B> function could not find a matching message.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">–1</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">MAPI_USER_ABORT</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The user canceled the process. No mail was found.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">0</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">SUCCESS_SUCCESS</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The function returned successfully.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Examples</B></P>
<P CLASS="t">The following example finds and displays the subject of messages in the Inbox that belong to the message type, "IPM.Sample.Report".</P>
<P CLASS="spacing"><BR></P>
<PRE>Sub MAIN
MAPI_LOGON_UI&nbsp;=&nbsp;1
Session&nbsp;=&nbsp;MAPILogon(0, "", "", MAPI_LOGON_UI, 0)
Dim MessageID$, Subject$
result&nbsp;=&nbsp;MAPIFindNext(Session, 0, "IPM.Sample.Report", "",\
        0, 0, MessageID$)
While result&nbsp;=&nbsp;0
    result&nbsp;=&nbsp;MAPIReadMail(Session, 0, MessageID$, 0, 0)
    result&nbsp;=&nbsp;MAPIQuerySubject(Subject$)
    MsgBox Subject$
    result&nbsp;=&nbsp;MAPIFindNext(Session, 0, "IPM.Sample.Report", MessageID$,\
        0, 0, MessageID$)
Wend
result&nbsp;=&nbsp;MAPILogoff(Session, 0, 0, 0)
End Sub
</PRE>
<P CLASS="t">The following example finds and deletes all IPC messages.</P>
<P CLASS="spacing"><BR></P>
<PRE>Sub MAIN
MAPI_LOGON_UI&nbsp;=&nbsp;1
Session&nbsp;=&nbsp;MAPILogon(0, "", "", MAPI_LOGON_UI, 0)
Dim MessageID$
result&nbsp;=&nbsp;MAPIFindNext(Session, 0, "IPC.", "", 0, 0, MessageID$)
While result&nbsp;=&nbsp;0
    result&nbsp;=&nbsp;MAPIDeleteMail(Session, 0, MessageID$, 0, 0)
    result&nbsp;=&nbsp;MAPIFindNext(Session, 0, "IPC.", MessageID$, 0, 0,\
        MessageID$)
Wend
result&nbsp;=&nbsp;MAPILogoff(Session, 0, 0, 0)
End Sub
</PRE></FONT></FONT></BODY></HTML>
