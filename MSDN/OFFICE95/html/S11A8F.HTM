<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Line Input # Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec252"></A>Line Input # Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec253"></A>Description</H2><P>Reads a line from an open sequential file and assigns it to a string variable.</P>
<H2><A NAME="sec254"></A>Syntax</H2><P><B>Line Input #</B><I>filenumber</I><B>, </B><I>varname</I></P>
<P>The <B>Line Input #</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>filenumber</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Any valid file number.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>varname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Valid string variable name.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec255"></A>Remarks</H2><P>The <B>Line</B> <B>Input</B> <B>#</B> statement reads from a file one character at a time until it encounters a carriage return (<B>Chr(</B>13<B>)</B>) or carriage return-linefeed (<B>Chr(</B>13<B>)</B> + <B>Chr(</B>10<B>)</B>) sequence. Carriage return-linefeed sequences are skipped rather than appended to the character string.</P>
<H2><A NAME="sec256"></A>See Also</H2><P><B>Chr</B> Function, <B>Input #</B> Statement.</P>
<H2><A NAME="sec257"></A>Example</H2><P>This example uses the <B>Line</B> <B>Input</B> <B>#</B> statement to read a line from a sequential file and assign it to a variable. This example assumes that TESTFILE is a text file with a few lines of sample data.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Open "TESTFILE" For Input As #1            ' Open file.While Not EOF(1)                        ' Loop until end of file.
    Line Input #1, TextLine                ' Read line into variable.
    Debug.Print TextLine                    ' Print to Debug window.#1                                    ' Close file.
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
<P CLASS="t">  </P></FONT></FONT></BODY></HTML>
