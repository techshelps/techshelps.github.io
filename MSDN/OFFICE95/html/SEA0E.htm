<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a For Each...Next Loop</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Using a For Each...Next Loop</H2><P CLASS="t">Using a <B>For Each...Next</B> loop to iterate through a collection or array is faster than using an indexed loop. In most cases, using a <B>For Each...Next</B> loop is also more convenient and makes your macro smaller and easier to read and debug.</P>
<P CLASS="t">The following code is slow because it sets the row variable thisRow by calling <B>r.Rows(i)</B> each time through the loop.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Set r = Worksheets(1).Range("a1:a200")
For i = 1 To r.Rows.Count
    Set thisRow = r.Rows(i)
    If thisRow.Cells(1, 1).Value &lt; 0 Then
        thisRow.Font.Color = RGB(255, 0, 0)
    End If
Next
</FONT></PRE>
<P CLASS="t">The following code is faster and smaller because the <B>For Each...Next</B> loop keeps track of the row count and position.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">For Each thisRow In Worksheets(1).Range("a1:a200").Rows
    If thisRow.Cells(1, 1).Value &lt; 0 Then
        thisRow.Font.Color = RGB(255, 0, 0)
    End If
Next
</FONT></PRE>
<P CLASS="t">For information about object variables, the <B>With</B> statement, and <B>For Each...Next</B> loops, see Chapter 3, "Controlling Program Flow," and Chapter 4, "Objects and Collections."</P></FONT>
</FONT></BODY></HTML>
