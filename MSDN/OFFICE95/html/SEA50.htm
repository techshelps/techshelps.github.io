<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying the Custom Dialog Box</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Displaying the Custom Dialog Box</H2><P CLASS="a"><img src="BRUNDIA.gif"></P>
<P>Run Dialog</P>
<P CLASS="t">The Run Dialog button on the Forms toolbar displays the dialog box. You will usually use this toolbar button while you're testing the dialog box. You can use the <B>Show</B> method to display the custom dialog box from a procedure. When the dialog box appears, the user is free to interact with its controls — entering text in an edit box, clicking an option button, clicking an item in a list box, and so on.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">Although you can change the position of a dialog frame on its dialog sheet, you cannot set or change the position of the displayed dialog box using Visual Basic. The dialog box appears with its upper-left corner in the same position as the last dialog box displayed.</P>
<P></P>
<P CLASS="t">When the user clicks a button that dismisses the dialog box (that is, a button for which the <B>DismissButton</B> property is <B>True</B> and the <B>CancelButton</B> property is <B>False)</B>, the following actions occur:</P>
<UL><LI>Visual Basic runs any procedure assigned to the button.</LI><LI>Any edit boxes with data validation turned on are checked for valid data.

<P CLASS="lt1">If the contents of an edit box are invalid, Microsoft Excel displays a message and switches the focus to the edit box so that the user can supply a value of the correct data type. This process continues until every edit box contains valid data.</P></LI><LI>The dialog box is removed, and the <B>Show</B> method returns <B>True</B>.</LI></UL><P></P>
<P CLASS="t">When the user clicks a button that cancels the dialog box (that is, a button for which the <B>CancelButton</B> property is <B>True)</B>, the following actions occur:</P>
<UL><LI>Visual Basic runs any procedure assigned to the button.</LI><LI>The dialog box is removed, and the <B>Show</B> method returns <B>False</B>.</LI></UL><P></P>
<P CLASS="t">For example, suppose that there's a button named "Object Color" on a worksheet. To change a drawing object's color, the user clicks this button to display a dialog box.</P>
<P CLASS="a">    <img src="APG0803.gif"></P>
<P CLASS="t">The following example shows the procedure assigned to the Object Color button.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub DoColorDialog()
    colors(1) = 5   'blue
    colors(2) = 10  'green
    colors(3) = 6   'yellow
    colors(4) = 22  'orange
    originalColor = Selection.Interior.ColorIndex
    saveInteriorColor = originalColor
    If DialogSheets("ChangeColorDialog").Show = False Then
        Selection.Interior.ColorIndex = originalColor
    End If
End Sub
</FONT></PRE>
<P CLASS="t">The colors array must be declared at the module level so that it can be used by all procedures in the module. The colors in the array should be set in the same order as the tab order for the color option buttons.</P>
<P CLASS="t">When the user selects a graphic object and clicks the Object Color button, the procedure sets the color-index array values to the four color options, sets the saved color value and the original color value to the current selection color, and then displays the dialog box on the dialog sheet named "ChangeColorDialog."</P>
<P CLASS="t">The user can choose one of the four color options and then click Test, Undo, OK, or Cancel. The ChangeColor procedure is assigned to both the OK and Test buttons, so it runs whenever the user clicks either OK or Test. The UndoColor procedure is assigned to the Undo button. These procedures are discussed in the following sections. If the user clicks Cancel or presses ESC, the <B>Show</B> method returns <B>False</B>, and the procedure resets the object to its original color. For more information about using code with controls, see "Assigning Code to Controls" earlier in this chapter.</P></FONT>
</FONT></BODY></HTML>
