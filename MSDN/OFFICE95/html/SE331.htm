<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cells Method</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Cells Method</H1><P CLASS="h"><B>Applies To</B></P>
<P CLASS="t"><B>Application </B>Object, <B>Range </B>Object, <B>Worksheet </B>Object.</P>
<P CLASS="h"><B>Description</B></P>
<P CLASS="t">Accessor. Returns a <B>Range</B> object that represents a single cell (Syntax 1 and 2) or a collection of cells (Syntax 3). The action of the <B>Cells</B> method depends on the object to which it is applied, as shown in the following table.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Object type</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Action</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Application</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">If the active document is a worksheet, Application.Cells is equivalent to ActiveSheet.Cells, which returns a collection of cells on the active worksheet. Otherwise, the <B>Cells</B> method returns an error.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Range</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Returns a collection of cells from the range. </P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Worksheet</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Returns a collection of cells from the worksheet. </P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Syntax 1</B></P>
<P CLASS="syn"><I>object</I>.<B>Cells(</B><B><I>rowIndex</I></B>,<B><I> columnIndex</I></B><B>)</B></P>
<P CLASS="h"><B>Syntax 2</B></P>
<P CLASS="syn"><I>object</I>.<B>Cells(</B><B><I>rowIndex</I></B><B>)</B></P>
<P CLASS="h"><B>Syntax 3</B></P>
<P CLASS="syn"><I>object</I>.<B>Cells</B></P>
<P CLASS="term1"><I>object</I></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional for <B>Application</B>, required for <B>Worksheet</B> and <B>Range</B>. The object that contains the cells. If you specify the <B>Application</B> object (or omit the object qualifier), the <B>Cells</B> method applies to the active sheet in the active workbook. If the active sheet is not a worksheet, this method fails.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>rowIndex</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Required for Syntax 1. The row number of the cell you want to access, starting with 1 for row 1 (for <B>Application</B> and <B>Worksheet</B>) or the first row in the <B>Range</B>.</P>
</BLOCKQUOTE>
<BLOCKQUOTE>
<P CLASS="dt1">Required for Syntax 2. A long integer specifying the index number of the cell you want to access, in row-major order. A1 is Cells(1), A2 is Cells(257) for <B>Application </B>and <B>Worksheet</B>; Range.Cells(1) is the top left cell in the <B>Range</B>.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>columnIndex</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Required for Syntax 1. A number or string indicating the column number of the cell you want to access, starting with 1 or "A" for column A (for <B>Application</B> or <B>Worksheet</B>) or the first column in the <B>Range</B>.</P>
</BLOCKQUOTE>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Syntax 1 uses a row number and a column number or letter as index arguments. For more information about this syntax, see the <B>Range</B> object.</P>
<P CLASS="t">Syntax 2 uses a single number as an index argument. The index is 1 for cell A1, 2 for cell B1, 3 for cell C1, 257 for cell A2, and so on.</P>
<P CLASS="t">The <B><I>rowIndex </I></B>and <B><I>columnIndex </I></B>arguments are relative offsets when you apply the <B>Cells</B> method to a <B>Range</B> object. In other words, specifying a <B><I>rowIndex </I></B>of 1 returns cells in the first row of the range, not the first row of the worksheet. For example, if the selection is cell C3, then Selection.Cells(2, 2) returns cell D4 (you can use the method to index outside the original range).</P>
<P CLASS="t">If you apply Syntax 3 to a <B>Range</B>, it returns the same <B>Range</B> object (in other words, it does nothing).</P>
<P CLASS="t">If you apply Syntax 3 to a <B>Worksheet</B>, it returns a collection of all the cells in the worksheet (all the cells, not just the cells that are currently in use).</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Range</B> Method.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example sets the font size of cell C5 on Sheet1 to 14 points.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Cells(5, 3).Font.Size = 14
</FONT></PRE>
<P CLASS="t">This example clears the formula in cell one on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Cells(1).ClearContents
</FONT></PRE>
<P CLASS="t">This example sets the font for every cell on Sheet1 to 8-point Arial.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">With Worksheets("Sheet1").Cells.Font
    .Name = "Arial"
    .Size = 8
End With
</FONT></PRE>
<P CLASS="t">This example loops through cells A1:J4 on Sheet1. If one of the cells has a value less than .001, the example replaces that value with zero (0).</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">For rwIndex = 1 to 4
    For colIndex = 1 to 10
        If Worksheets("Sheet1").Cells(rwIndex, colIndex) &lt; .001 Then
            Worksheets("Sheet1").Cells(rwIndex, colIndex).Value = 0
        End If
    Next colIndex
Next rwIndex
</FONT></PRE>
<P CLASS="t">This example sets the font of cells A1:C5 on Sheet1 to italic.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Activate
Range(Cells(1, 1), Cells(5, 3)).Font.Italic = True
</FONT></PRE>
<P CLASS="t">This example scans a column of data named myRange. If a cell has the same value as the cell above it, the example displays the address of the cell that contains the duplicate data.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Set r = Range("myRange")
For n = 1 To r.Rows.Count
    If r. Cells(n, 1) = r. Cells(n + 1, 1) Then
        MsgBox "Duplicate data in " &amp; r. Cells(n + 1, 1).Address
    End If
Next n
</FONT></PRE></FONT>
</FONT></BODY></HTML>
