<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 3 Controlling Program Flow</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1 CLASS="cht">Chapter 3 Controlling Program Flow</H1><P CLASS="t">In this chapter, you'll learn about <I>decision making</I> — how to write procedures that test conditions and then run only certain statements based on the results of those tests. You'll also learn about <I>looping</I>, or running a group of statements several times; and you'll learn about <I>nesting</I>, or placing one control structure inside another.</P>
<P CLASS="t">The statements that control decision making and looping in Visual Basic are called <I>control structures</I>. Without control structures, a procedure's logic flows through statements from left to right and from top to bottom. Although you can write some very simple procedures with this unidirectional flow, most of the power and flexibility of any programming language comes from its ability to use control structures to change the order in which statements are run.</P>
<H5><A NAME="sec0"></A>Contents</H5><UL><LI>Making Decisions</LI><LI>Looping</LI><LI>Nesting Control Structures</LI><LI>Exiting Loops and Procedures</LI></UL><P></P></FONT>
</FONT></BODY></HTML>
