<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Restoring a Built-in Toolbar</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Restoring a Built-in Toolbar</H2><P CLASS="t">If one of the default toolbars has been modified — either by a user or by a Visual Basic procedure — you can return the toolbar to its default state by using the <B>Reset </B>method. Using this method corresponds to clicking the Toolbars command on the View menu, selecting the check box next to the name of the customized built-in toolbar in the Toolbars dialog box, and then clicking Reset.</P>
<P CLASS="t">For example, you can use the following code to reset all the toolbars to their default state and simultaneously delete all the custom toolbars.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">For Each thisToolbar In Toolbars
    If thisToolbar.BuiltIn Then
        thisToolbar.Reset
    Else
        thisToolbar.Delete
    End If
Next
</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Caution</B></P>
<P CLASS="nt">Be careful when you use the <B>Reset</B> method; it not only restores any built-in toolbar buttons that have been deleted, but it also deletes any custom toolbar buttons that have been added. Keep in mind that another macro may have added custom toolbar buttons to the toolbar, and resetting the toolbar will remove these buttons as well. To avoid these problems, remove any toolbar buttons added by your application one by one, without resetting the entire toolbar.</P>
<P></P></FONT>
</FONT></BODY></HTML>
