<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Requiring Explicit Variable Declarations</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<H2>Requiring Explicit Variable Declarations</H2><P CLASS="t">To avoid the problem of inadvertently creating new variables by misspelling the names of existing variables, you can stipulate that Visual Basic generate an error message whenever it encounters a name used as a variable but not previously declared explicitly as a variable. To require explicit variable declarations, place the following statement at the top of each module in which you want Visual Basic to enforce explicit declarations.</P>
<P CLASS="spacing"><BR></P>
<PRE>Option Explicit
</PRE>
<P CLASS="t">You must manually add this line to the top of each existing module in which you want this option to be turned on, but you can have Visual Basic automatically add the line to new modules.</P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To have Visual Basic automatically add the Option Explicit statement to new modules</B></P>
<P CLASS="lt1"> <UL><LI>On the Tools menu, click Options, and then select the Require Variable Declaration check box on the Module General tab.</LI></UL>
<P></P>
<P CLASS="t">With <B>Option Explicit</B> in effect for the module containing the <B>SwapCells </B>procedure, Visual Basic requires that variables be declared before you can use them. The following example shows the procedure with the added variable declaration.</P>
<P CLASS="spacing"><BR></P>
<PRE>Sub SwapCells()
    Dim tempVal
    With Worksheets(1)
        tempVal = .Range("a1").Value
        .Range("a1").Value = .Range("a2").Value
        .Range("a2").Value = temVal
    End With
End Sub
</PRE>
<P CLASS="t">When you try to run this procedure, Visual Basic generates an error message telling you that the temVal variable is undeclared. Recognizing that this error means you've misspelled the variable name, you can fix the name before it causes the procedure to fail.</P>
<P></P>
<P CLASS="nh"><B>Tip</B></P>
<P CLASS="nt">Because the <B>Option Explicit</B> statement helps you catch errors in variable names, and because it encourages you to use explicit data types, you should use it all the time.</P>
<P></P>
</BODY></HTML>
