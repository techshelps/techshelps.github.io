<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Seek Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec378"></A>Seek Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec379"></A>Description</H2><P>Sets the position for the next read or write within a file opened using the <B>Open</B> statement.</P>
<H2><A NAME="sec380"></A>Syntax</H2><P><B>Seek</B> [<B>#</B>]<I>filenumber</I><B>, </B><I>position</I></P>
<P>The <B>Seek</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="81pt" VALIGN="TOP"><COL WIDTH="292pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>filenumber</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Any valid file number.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>position</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Number in the range 1 to 2,147,483,647, inclusive, that indicates where the next read or write should occur.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec381"></A>Remarks</H2><P>Record numbers specified in <B>Get</B> and <B>Put</B> statements override file positioning performed by <B>Seek</B>.</P>
<P>Performing a file write after doing a <B>Seek</B> operation beyond the end of a file extends the file. If you attempt a <B>Seek</B> operation to a negative or zero position, an error occurs.</P>
<H2><A NAME="sec382"></A>See Also</H2><P><B>Get</B> Statement, <B>Open</B> Statement, <B>Put</B> Statement, <B>Seek</B> Function.</P>
<H2><A NAME="sec383"></A>Example</H2><P>This example uses the <B>Seek</B> statement to set the position for the next read or write within a file. This example assumes TESTFILE is a file containing records of the user-defined type Record.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Type Record    ' Define user-defined type.
    ID As Integer
    Name As String * 20Type
</PRE>
<P CLASS="t">  </P>
<P>For files opened in random-file mode, <B>Seek</B> sets the next record.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Dim MyRecord As Record    ' Declare variable.
' Open file in random-file mode."TESTFILE" For Random As #1 Len = Len(MyRecord)= LOF(1) \ Len(MyRecord)    ' Get number of records in file.
' The loop reads all records starting from the last.RecordNumber = MaxSize To 1 Step - 1
    Seek #1, RecordNumber    ' Set position.
    Get #1, , MyRecord    ' Read record.RecordNumber#1    ' Close file.
</PRE>
<P CLASS="t">  </P>
<P>For files opened in modes other than <B>Random</B> mode, <B>Seek</B> sets the byte position at which the next operation will take place. Assume TESTFILE is a file containing a few lines of text.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Open "TESTFILE" For Input As #1            ' Open file for input.= LOF(1)                            ' Get size of file in bytes.
' The loop reads all characters starting from the last.NextChar = MaxSize To 1 Step -1
    Seek #1, NextChar                    ' Set position.
    MyChar = Input(1, #1)                ' Read character.NextChar#1                                    ' Close file.
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P></FONT></FONT></BODY></HTML>
