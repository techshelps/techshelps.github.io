<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Let Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec234"></A>Let Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec235"></A>Description</H2><P>Assigns the value of an expression to a variable or property.</P>
<H2><A NAME="sec236"></A>Syntax</H2><P>[<B>Let</B>] <I>varname</I> <B>=</B> <I>expression</I></P>
<P>The <B>Let</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>varname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Name of the variable or property; follows standard variable naming conventions.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>expression</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Value assigned to the variable or property.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec237"></A>Remarks</H2><P>To simplify Visual Basic code, the optional <B>Let</B> keyword is most often omitted.</P>
<P>A value expression can be assigned to a variable or property only if it is of a data type that is compatible with the variable. You can’t assign string expressions to numeric variables, and you can’t assign numeric expressions to string variables. If you do, an error occurs at compile time.</P>
<P><B>Variant</B> variables can be assigned either string or numeric expressions. However, the reverse is not always true. Any <B>Variant</B> except a <B>Null</B> can be assigned to a string variable, but only a <B>Variant</B> whose value can be interpreted as a number can be assigned to a numeric variable. Use the <B>IsNumeric</B> function to determine if the <B>Variant</B> can be converted to a number.</P>
<P CLASS="t">  </P>
<P CLASS="t"></P>
<P><B>Caution</B>   Assigning an expression of one numeric data type to a variable of a different numeric data type coerces the value of the expression into the data type of the resulting variable.</P>
<P CLASS="t"></P>
<P CLASS="t">  </P>
<P><B>Let</B> statements can be used to assign one record variable to another only when both variables are of the same user-defined type. Use the <B>LSet</B> statement to assign record variables of different user-defined types. Use the <B>Set</B> statement to assign object references to variables.</P>
<H2><A NAME="sec238"></A>See Also</H2><P><B>Const</B> Statement, Data Type Summary, <B>IsNumeric</B> Function, <B>LSet</B> Statement, <B>Set</B> Statement, <B>Variant</B> Data Type.</P>
<H2><A NAME="sec239"></A>Example</H2><P>This example assigns the values of expressions to variables using both the explicit and implicit <B>Let</B> statement.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>' The following variable assignments use the Let statement.MyStr = "Hello World"MyInt = 5
</PRE>
<P CLASS="t">  </P>
<P>The following are the same assignments without the <B>Let</B> statement.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>MyStr = "Hello World"= 5 
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
