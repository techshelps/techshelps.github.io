<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DialogSheet Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>DialogSheet Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Represents a single dialog sheet in a workbook. Do not confuse a dialog sheet with the <B>Dialog</B> object, which represents a built-in Microsoft Excel dialog box, or the <B>DialogFrame</B> object, which represents the boundaries of the custom dialog box on a dialog sheet.</P>
<P CLASS="h"><B>Accessors</B></P>
<P CLASS="t">The <B>DialogSheet</B> object is a member of the <B>DialogSheets</B> collection. The <B>DialogSheets</B> collection contains all the <B>DialogSheet</B> objects in a workbook. Use the <B>Add</B> method to create a new dialog sheet and add it to the collection. To access a single member of the collection, use the <B>DialogSheets</B> method with the index number or name of the dialog sheet as an argument.</P>
<P CLASS="t">The dialog sheet index number represents the position of the dialog sheet on the tab bar of the workbook. DialogSheets(1) is the first (leftmost) dialog sheet in the workbook; DialogSheets(DialogSheets.Count) is the last. All dialog sheets are included in the index count, even if they are hidden. The following example runs dialog sheet one in the active workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">DialogSheets(1).Show
</FONT></PRE>
<P CLASS="t">The dialog sheet name is shown on the workbook tab for the dialog sheet. Use the <B>Name</B> property to set or return the dialog sheet name. The following example runs the dialog sheet named "Test Dialog."</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">DialogSheets("test dialog").Show
</FONT></PRE>
<P CLASS="t">The <B>DialogSheet</B> object is also a member of the <B>Sheets</B> collection. The <B>Sheets</B> collection contains all of the sheets in the workbook (chart sheets, dialog sheets, modules, and worksheets). To access a single member of the collection, use the <B>Sheets</B> method with the index number or name of the sheet as an argument.</P>
<H4><A NAME="sec0"></A>DialogSheets in Add-Ins</H4><P CLASS="t">When you write code in an add-in to display a dialog sheet that is also contained in the add-in, you must use the <B>ThisWorkbook</B> property to return a reference to the add-in workbook. You cannot use <B>ActiveWorkbook</B>, and you cannot use <B>Workbooks("</B><I>workbook name</I><B>")</B>. This can be confusing, because all three of these methods will work until you create an add-in from your workbook. Once your code is running in an add-in, however, only <B>ThisWorkbook</B> (which returns the workbook where the code is running) can be used to access to add-in workbook.</P>
<P CLASS="t">The following example displays the dialog sheet named "Add-In Dialog" in the running workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">ThisWorkbook.DialogSheets("add-in dialog").Show
</FONT></PRE>
<H4><A NAME="sec1"></A>Using ActiveSheet</H4><P CLASS="t">When a dialog sheet is the active sheet, you can use the <B>ActiveSheet</B> property to refer to it. The following example uses the <B>Activate</B> method to activate dialog sheet one and then runs the dialog sheet.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">DialogSheets(1).Activate
ActiveSheet.Show
</FONT></PRE>
<P CLASS="t">Note that after the example activates the dialog sheet, it uses the <B>ActiveSheet</B> property, not the <B>ActiveDialog</B> property, to return the active dialog sheet. The <B>ActiveSheet</B> property returns the active sheet in the workbook, while the <B>ActiveDialog</B> property returns the topmost <I>running</I> dialog sheet in the workbook. In this example, the dialog sheet is not running and cannot be accessed with the <B>ActiveDialog</B> property.</P>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>Application </B>Property,<B> Creator </B>Property,<B> DefaultButton </B>Property,<B> DialogFrame </B>Property,<B> DisplayAutomaticPageBreaks </B>Property,<B> Focus </B>Property,<B> Index </B>Property,<B> Name </B>Property,<B> Next </B>Property,<B> OnDoubleClick </B>Property,<B> OnSheetActivate </B>Property,<B> OnSheetDeactivate </B>Property,<B> PageSetup </B>Property,<B> Parent </B>Property,<B> Previous </B>Property,<B> ProtectContents </B>Property,<B> ProtectDrawingObjects </B>Property,<B> Visible </B>Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>Activate </B>Method,<B> Arcs </B>Method,<B> Buttons </B>Method,<B> ChartObjects </B>Method,<B> CheckBoxes </B>Method,<B> CheckSpelling </B>Method,<B> Copy </B>Method,<B> Delete </B>Method,<B> DrawingObjects </B>Method,<B> Drawings </B>Method,<B> DropDowns </B>Method,<B> EditBoxes </B>Method,<B> Evaluate </B>Method,<B> GroupBoxes </B>Method,<B> GroupObjects </B>Method,<B> Hide </B>Method,<B> Labels </B>Method,<B> Lines </B>Method,<B> ListBoxes </B>Method,<B> Move </B>Method,<B> OLEObjects </B>Method,<B> OptionButtons </B>Method,<B> Ovals </B>Method,<B> Paste </B>Method<B> (DialogSheet or Worksheet Object)</B>,<B> PasteSpecial </B>Method<B> (DialogSheet or Worksheet Object)</B>,<B> Pictures </B>Method,<B> PrintOut </B>Method,<B> PrintPreview </B>Method,<B> Protect </B>Method,<B> Rectangles </B>Method,<B> SaveAs </B>Method,<B> ScrollBars </B>Method,<B> Select </B>Method,<B> Show </B>Method,<B> Spinners </B>Method,<B> TextBoxes </B>Method,<B> Unprotect </B>Method.</P>
<P></P></FONT>
</FONT></BODY></HTML>
