<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GoSub...Return Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>GoSub...Return Statement</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Branch to and return from a subroutine within a procedure.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>GoSub</B> <I>line</I><BR>.<B> </B>.<B> </B>.<B><BR></B><I>line</I><BR>.<B> </B>.<B> </B>.<B><BR>Return</B></P>
<P CLASS="t">The <I>line</I> argument can be any line label or line number.</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">You can use <B>GoSub</B> and <B>Return</B> anywhere in a procedure, but <B>GoSub</B> and the corresponding <B>Return</B> must be in the same procedure. A subroutine can contain more than one <B>Return</B> statement, but the first <B>Return</B> statement encountered causes the flow of execution to branch back to the statement immediately following the most recently executed <B>GoSub</B> statement.</P>
<P></P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">You can't<B> </B>enter or exit <B>Sub</B> procedures with <B>GoSub</B>...<B>Return</B>.</P>
<P></P>
<P></P>
<P CLASS="nh"><B>Tip</B></P>
<P CLASS="nt">Creating separate procedures which you can call may provide a more structured alternative to using <B>GoSub</B>...<B>Return</B>.</P>
<P></P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>End</B> Statement; <B>GoTo</B> Statement; <B>On</B>...<B>GoSub</B>, <B>On</B>...<B>GoTo</B> Statements; <B>Sub</B> Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example uses <B>GoSub</B> to call a subroutine within a <B>Sub</B> procedure. The <B>Return</B> statement causes the execution to resume at the statement immediately following the <B>Gosub</B> statement. The <B>Exit Sub</B> statement is used to prevent control from accidentally flowing into the subroutine.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub GosubDemo()
    Num = 10    ' Initialize variable.
    GoSub MyRoutine    ' Branch to subroutine.
    Debug.Print Num    ' Print value upon return.
    Exit Sub    ' Exit Sub procedure.
MyRoutine:    ' Start of subroutine.
    Num = Num \ 2    ' Halve the value.
    Return    ' Return from subroutine.
End Sub
</FONT></PRE></FONT>
</FONT></BODY></HTML>
