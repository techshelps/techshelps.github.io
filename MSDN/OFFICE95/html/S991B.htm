<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add-Ins</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Add-Ins</H2><P CLASS="t">If the Histogram Wizard is installed in a user's personal macro workbook (PERSONAL.XLS) it will work properly but with one little annoyance.  The macro makes changes to its internal dialogs so Excel will ask about saving changes to the personal macro workbook upon exiting the application.  A macro can set a special Saved property to prevent the "Save Changes" dialog from coming up—but then the user might not be notified if they happen to have other macros stored in the workbook and decide to edit them during the same session.  </P>
<P CLASS="t"></P>
<P CLASS="t">A better way to solve this problem is to make the wizard into an Add-in.  With add-ins, the macro code behaves as if it's built into Excel.  The code is compiled into a form that executes more quickly and is protected against editing.  Because of this protection there's no way to debug the add-in code except by displaying messages or writing data to another worksheet, so be sure the code is well tested.  To begin the process start with a .XLS workbook file and create an add-in from it using the Tools/Make Add-in command.  Never delete the .XLS source workbook since it's impossible to edit the .XLA file the Make Add-In command creates.  </P></FONT>
</FONT></BODY></HTML>
