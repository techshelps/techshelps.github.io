<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CurrentDb Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec275"></A>CurrentDb Function</H1><P CLASS="t">  </P>
<H2><A NAME="sec276"></A>Description</H2><P>The <B>CurrentDb</B> function returns an object variable of type <B>Database</B> that represents the database currently open in the Microsoft Access window.</P>
<H2><A NAME="sec277"></A>Syntax</H2><P><B>CurrentDb</B></P>
<H2><A NAME="sec278"></A>Remarks</H2><P>In order to manipulate the structure of your database and its data from Visual Basic, you must use data access objects. The <B>CurrentDb</B> function provides a way to access the current database from Visual Basic code without having to know the name of the database. Once you have a variable that points to the current database, you can also access and manipulate other objects and collections in the data access object hierarchy.</P>
<P>You can use the <B>CurrentDb</B> function to create multiple object variables that refer to the current database. In the following example, the variables dbsA and dbsB both refer to the current database.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Dim dbsA As Database, dbsB As DatabasedbsA = CurrentDbdbsB = CurrentDb
</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P><B>Note</B>   In previous versions of Microsoft Access, you may have used the syntax DBEngine.Workspaces(0).Databases(0) or DBEngine(0)(0) to return a pointer to the current database. In Microsoft Access for Windows 95, you should use the <B>CurrentDb</B> function instead. The <B>CurrentDb</B> function creates another instance of the current database, while the DBEngine(0)(0) syntax refers to the open copy of the current database. Using the <B>CurrentDb</B> function enables you to create more than one variable of type <B>Database</B> that refer to the current database. Microsoft Access still supports the DBEngine(0)(0) syntax, but you should consider making this modification to your code in order to avoid possible conflicts in a multiuser database.</P>
<P CLASS="t">  </P>
<P>If you need to work with another database at the same time that the current database is open in the Microsoft Access window, use the <B>OpenDatabase</B> method of a <B>Workspace</B> object. The <B>OpenDatabase</B> method doesn’t actually open the second database in the Microsoft Access window; it simply returns a <B>Database </B>variable representing the second database. The following example returns a pointer to the current database and to a database called Contacts.mdb.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Dim dbsCurrent As Database, dbsContacts As DatabasedbsCurrent = CurrentDbdbsContacts = DBEngine.Workspaces(0).OpenDatabase("Contacts.mdb")
</PRE>
<P CLASS="t">  </P>
<H2><A NAME="sec279"></A>Example</H2><P>The following example uses the <B>CurrentDb</B> function to return a <B>Database</B> object variable pointing to the current database. It then enumerates all the fields in the Employees table in that database.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub ListFields()
    Dim dbs As Database, tdf As TableDef, fld As Field

    ' Return Database object variable pointing to current database.
    Set dbs = CurrentDb
    ' Return TableDef object variable pointing to Employees table.
    Set tdf = dbs.TableDefs!Employees
    ' Enumerate fields in Employees table.
    For Each fld In tdf.Fields
        Debug.Print fld.Name
    Next fldSub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
