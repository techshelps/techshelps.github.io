<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>For...Next Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec173"></A>For...Next Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec174"></A>Description</H2><P>Repeats a group of statements a specified number of times.</P>
<H2><A NAME="sec175"></A>Syntax</H2><P><B>For</B> <I>counter</I> <B>=</B> <I>start</I> <B>To</B> <I>end</I> [<B>Step</B> <I>step</I>]<BR>    [<I>statements</I>]<BR>    [<B>Exit For</B>]<BR>    [<I>statements</I>]<BR><B> Next</B> [<I>counter</I>]</P>
<P>The <B>For</B>...<B>Next</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>counter</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Numeric variable used as a loop counter. The variable can’t be an array element or an element of a user-defined type.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>start</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Initial value of counter.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>end</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Final value of counter.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>step</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Amount counter is changed each time through the loop. If not specified, step defaults to one.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>statements</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">One or more statements between <B>For</B> and <B>Next</B> that are executed the specified number of times.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec176"></A>Remarks</H2><P>The <I>step</I> argument can be either positive or negative. The value of the <I>step</I> argument determines loop processing as follows:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="109pt" VALIGN="TOP"><COL WIDTH="259pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Value</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Loop executes if</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Positive or 0</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">counter &lt;= end</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Negative</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">counter &gt;= end</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P>Once the loop starts and all statements in the loop have executed, <I>step</I> is added to <I>counter</I>. At this point, either the statements in the loop execute again (based on the same test that caused the loop to execute initially), or the loop is exited and execution continues with the statement following the <B>Next</B> statement.</P>
<P CLASS="t">  </P>
<P><B>Tip</B>   Changing the value of <I>counter</I> while inside a loop can make it more difficult to read and debug your code.</P>
<P CLASS="t">  </P>
<P>The <B>Exit For</B> can only be used within a <B>For Each...Next</B> or <B>For...Next</B> control structure to provide an alternate way to exit. Any number of <B>Exit For</B> statements may be placed anywhere in the loop. The <B>Exit For </B>is often used with the evaluation of some condition (for example, <B>If...Then</B>), and transfers control to the statement immediately following <B>Next</B>.</P>
<P>You can nest <B>For...Next</B> loops by placing one <B>For...Next</B> loop within another. Give each loop a unique variable name as its <I>counter</I>. The following construction is correct:</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>For I = 1 To 10
    For J = 1 To 10
        For K = 1 To 10
            <B>. . .</B>
        Next K
    Next JI
</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P><B>Note</B>   If you omit <I>counter</I> in a <B>Next</B> statement, execution continues as if you had included it. If a <B>Next</B> statement is encountered before its corresponding <B>For</B> statement, an error occurs.</P>
<P CLASS="t">  </P>
<H2><A NAME="sec177"></A>See Also</H2><P><B>Do...Loop</B> Statement, <B>Exit</B> Statement, <B>For Each...Next</B> Statement, <B>While...Wend</B> Statement.</P>
<H2><A NAME="sec178"></A>Example</H2><P>This example uses the <B>For...Next</B> statement to create a string that contains 10 instances of the numbers 0 through 9, each string separated from the other by a single space. The outer loop uses a loop counter variable that is decremented each time through the loop.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>For Words = 10 To 1 Step -1     ' Set up 10 repetitions.
    For Chars = 0 To 9    ' Set up 10 repetitions.
        MyString = MyString &amp; Chars    ' Append number to string.
    Next Chars    ' Increment counter.
    MyString = MyString &amp; " "    ' Append a space.Words</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
