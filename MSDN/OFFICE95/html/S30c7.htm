<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declare</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H1 CLASS="h2">Declare</H1><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Declare Sub</B> <I>SubName</I> <B>Lib</B> <I>LibName$</I> [<B>(</B><I>ArgumentList</I><B>)</B>] [<B>Alias</B><I> Routine$</I>]</P>
<P CLASS="syn"><B>Declare Function</B> <I>FunctionName</I>[<B>$</B>] <B>Lib</B> <I>LibName$</I> [<B>(</B><I>ArgumentList</I><B>)</B>] [<B>Alias</B>&nbsp;<I>Routine$</I>] <B>As </B><I>Type</I></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">In Windows, makes available a routine stored in a Windows dynamic-link library (DLL), a Word add-in library (WLL), or the Windows operating system for use as a function or subroutine in a WordBasic macro. On the Macintosh, makes available a routine stored in a Word add-in library (WLL) only. The declaration specifies the name of the routine, the library file in which it is stored, and any arguments the routine takes. <B>Declare</B> instructions are usually placed at the start of a macro, before the main subroutine; they cannot be placed inside a subroutine or function.</P>
<P></P>
<P></P>
<P CLASS="wh"><B>Caution</B></P>
<P CLASS="nt"></P>
<P CLASS="nt"> <FONT FACE="Symbol">u</FONT>    When experimenting with external routines, save your work often. An invalid argument passed to a routine could result in unpredictable behavior in Word or other applications.</P>
<P CLASS="nt"> <FONT FACE="Symbol">u</FONT>    You cannot declare an external routine in a 16-bit library from a 32-bit application, such as Word for Windows 95 or Word version 6.0 for <BR>Windows NT. You must update macros that declare routines in 16-bit libraries to identify the 32-bit versions of those libraries.</P>
<P CLASS="nt"> <FONT FACE="Symbol">u</FONT>    The names and locations of many Windows 3.<I>x </I>operating system routines (often referred to as API calls) changed in Windows 95 and Windows NT. You must update macros that declare Windows 3.<I>x </I>API calls to declare the correct routines in Windows 95 or Windows NT. Windows 3.<I>x </I>API function libraries are documented in the Microsoft Windows 3.1 Software Development Kit. Windows 95 and Windows NT function libraries are documented in the Microsoft Win32 Software Development Kit.</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="258pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><B>Sub</B> or <B>Function</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Use <B>Function</B> if the function you are declaring returns a value; use <B>Sub</B> if it does not.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>SubName</I><B><I> </I></B>or <I>FunctionName</I>[<B>$</B>]</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The name used in the macro to call the routine. This name does not have to be the actual name of the routine in the library. You can define the actual name using the <B>Alias</B> part of the statement. If <I>FunctionName</I> returns a string, it should include a dollar sign ($) like other string functions in WordBasic. Note that routine names are case sensitive in Windows 95 and Windows NT; if this name is the actual name of the routine in the library, it should match the documented case.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>LibName$</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The filename of the library containing the routine, in quotation marks. In Windows, use the entire filename, including the extension, to prevent ambiguity. </P>
<P CLASS="tt">In Windows, Word looks for the file in the current folder, the Windows folder, the Windows System folder, the Word program folder, and in the folders listed in the PATH environment variable. If the file is not stored in any of these folders, or is not a loaded add-in libarary (WLL), include the complete path with the filename. On the Macintosh, Word looks for the file in the current folder, the System folder, the Word program folder, the Word Dictionaries folder, and the Microsoft folder. If the file is not stored in any of these folders, or is not a loaded WLL, include the complete path with the filename.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>ArgumentList</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">A list of variables representing arguments that are passed to the routine. See the following table for the syntax used within <I>ArgumentList</I>.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="258pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><B>Alias</B> <I>Routine$</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The actual name of the routine in the library, in quotation marks. It is required only if the name specified after <B>Sub</B> or <B>Function</B> is not the actual name of the routine. Note that routine names are case sensitive in Windows 95 and Windows NT.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><B>As </B><I>Type</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Declares the data type of the value returned by a function. The type is one of the following: <B>As Integer</B> for an integer or logical (BOOL) return type; <B>As String</B> for a string (LPSTR) return type; <B>As Long</B> for a long return type; <B>As Double</B> for a double return type.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">The <I>ArgumentList</I> argument has the following syntax:</P>
<P CLASS="syn"><B>(</B><I>Variable</I>[<I>$</I>] [<B>As</B> <I>Type</I>] [<B>,&nbsp;</B><I>Variable</I>[<I>$</I>] [<B>As</B> <I>Type</I>]] [<B>,&nbsp;</B><FONT FACE="Symbol">¼</FONT>]<B>)</B></P>
<P CLASS="t">The following table describes the parts of <I>ArgumentList</I>.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="274pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Variable</I>[<I>$</I>]</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">A WordBasic variable name. For string variables, adding a dollar sign ($) to the variable name is the same as specifying <B>As String</B>&nbsp;—&nbsp;for example, fileName$ is the same as fileName As String. If there is no <B>As</B> <I>Type</I>, and the variable name does not end in a dollar sign, the variable defaults to a WordBasic numeric variable (double-precision floating-point number).</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><B>As </B><I>Type</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Declares the data type of the argument required by the routine:<BR><B>As Integer</B> for integer or logical (BOOL) arguments; <B>As String</B> (or simply <B>$</B> at the end of the variable name) for string (LPSTR) arguments; <B>As Long</B> for long arguments; <B>As Double</B> for double arguments.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This Windows example uses the selection as a search keyword in Help. If there is one exact match, the macro displays the topic. If there is more than one match, the macro displays the Search dialog box (Windows 3.<I>x </I>Help) or the Help Topics dialog box (Windows 95 Help) with the keyword selected. If there is no match, the macro displays the Search or Help Topics dialog box, with the keyword list scrolled to the keyword closest in spelling to the selected word.</P>
<P CLASS="spacing"><BR></P>
<PRE>Declare Function WinHelp Lib "USER.EXE"(hWnd As Integer, lpHelpFile \
    As String, wCmd As Integer, dwData As String) As Integer
Declare Function GetActiveWindow Lib "USER.EXE"() As Integer
Sub MAIN
    hWnd&nbsp;=&nbsp;GetActiveWindow
    helpFile$&nbsp;=&nbsp;"C:\WINWORD\WINWORD.HLP"
    wCmd&nbsp;=&nbsp;261            'The decimal value for HELP_PARTIALKEY
    keyWord$&nbsp;=&nbsp;Selection$()
    success&nbsp;=&nbsp;WinHelp(hWnd, helpFile$, wCmd, keyWord$)
    If success&nbsp;=&nbsp;0 Then MsgBox "Could not start Windows Help"
End Sub
</PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Dim</B></P></FONT></FONT></BODY></HTML>
