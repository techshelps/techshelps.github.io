<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating OnEvent Procedures</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Creating OnEvent Procedures</H1><P CLASS="t">Certain objects in Visual Basic have properties and methods that are associated with specific events. For example, the <B>Button</B> object has an <B>OnAction</B> property, which is associated with clicking the button; and the <B>Application</B> object has an <B>OnRepeat</B> method, which is associated with clicking Repeat on the Edit menu. These events are generated by Microsoft Excel, sometimes as the result of user input. An example of an event that isn't the result of user input is the arrival of data from another application by means of OLE (see the <B>OnData</B> property).</P>
<P CLASS="t">If you associate a procedure with one of these properties or methods, that procedure — called an <I>OnEvent procedure</I> or an <I>event handler</I> — will run whenever the event associated with the property or method occurs.</P>
<P CLASS="t">The following table lists the properties and methods you can use to trap events.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="78pt" VALIGN="TOP"><COL WIDTH="269pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Property or method</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B><BR>Event that causes the associated procedure to run</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnAction</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Clicking a control or graphic object, clicking a menu command, or clicking a toolbar button</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnCalculate</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Recalculating a worksheet</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnData</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The arrival of data from another application by way of DDE or OLE</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnDoubleClick</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Double-clicking anywhere on a chart sheet, dialog sheet, module, or worksheet</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnEntry</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Entering data using the formula bar or editing data in a cell</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnKey</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Pressing a particular key or key combination</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnRepeat</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Clicking Repeat on the Edit menu</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnSheetActivate</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Activating a chart sheet, dialog sheet, module, worksheet, workbook, or Microsoft Excel itself</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnSheetDeactivate</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Deactivating a chart sheet, dialog sheet, module, worksheet, workbook, or Microsoft Excel itself</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnTime</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Waiting until a specific time arrives, or waiting for a specified time delay</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnUndo</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Clicking Undo on the Edit menu</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>OnWindow</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Activating a window</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">There are several steps involved in creating and using any type of OnEvent procedure:</P>
<UL><LI>You must create the procedure (the event handler) you want to run when the specified event occurs.</LI><LI>Elsewhere in your Visual Basic code, you must associate the event handler with the event you want to respond to. After the statement that associates the event with its handler is executed, the handler runs whenever the event occurs; this is called <I>trapping </I>the event.</LI><LI>When you want to stop trapping this event, you must disassociate the event from the event handler.</LI></UL><P></P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To associate an event with an OnEvent procedure</B></P>
<P CLASS="lt1">Set the property associated with the event — or set the <B><I>procedure</I></B> argument of the method associated with the event — to the name of the OnEvent procedure, as shown in the following examples.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">ActiveSheet.Buttons("MyButton").OnAction = "ButtonClickHandler"
Application.OnRepeat text:= "Paste Again", procedure:= "PasteAgain"
</FONT></PRE>
<P CLASS="proch"><B><img src="prcarrow.gif">    To disassociate an event from an OnEvent procedure</B></P>
<P CLASS="lt1">Set the property associated with the event — or set the <B><I>procedure</I></B> argument of the method associated with the event — to the empty string (""), as shown in the following examples.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">ActiveSheet.Buttons("MyButton").OnAction = ""
Application.OnRepeat text:= "Paste Again", procedure:= ""
</FONT></PRE>
<P CLASS="t">The following sections show how event trapping is done with specific types of events.</P></FONT>
</FONT></BODY></HTML>
