<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Built-in Microsoft Excel Dialog Boxes</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Displaying Built-in Microsoft Excel Dialog Boxes</H2><P CLASS="t">In addition to the message box and the input box, Microsoft Excel has approximately 200 built-in dialog boxes. Each dialog box allows the user to perform actions that change some feature of Microsoft Excel. For example, the built-in File Open dialog box allows the user to open a file, and the Clear dialog box allows the user to clear a range of cells.</P>
<P CLASS="t">The <B>Dialogs</B> method returns a built-in dialog box. This method takes as an argument a built-in constant that begins with "xlDialog" and that corresponds to a dialog box name. For example, the constant for the Find File dialog box is <B>xlDialogFindFile</B>.</P>
<P CLASS="t">The <B>Show</B> method displays the dialog box. You cannot replace the dialog box functionality (write your own file open code, for example) or trap the events that occur in the dialog box. The dialog box functions normally, and Microsoft Excel performs any actions the user requests.</P>
<P CLASS="t">The following example displays the built-in File Open dialog box, with the default folder set to Xlfiles.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Application.Dialogs(xlDialogOpen).Show("C:\XLFILES")
</FONT></PRE>
<P CLASS="t">The <B>Show</B> method doesn't return to the calling procedure until the user has dismissed or canceled the dialog box and Microsoft Excel has completed any requested actions. The return value is <B>True</B> if the user clicked OK or pressed ENTER to dismiss the dialog box; the return value is <B>False</B> if the user clicked Cancel or pressed ESC to cancel the dialog box. The following example runs the <B>ProcessWorkbook</B> procedure if the user clicks a workbook in the File Open dialog box.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub NewWorkbook()
    If Application.Dialogs(xlDialogOpen).Show("c:\") And _
        ActiveWindow.Type = xlWorkbook Then ProcessWorkbook
End Sub
</FONT></PRE>
<P CLASS="t">The <B>Show</B> method may fail if you try to show a dialog box in an incorrect context.&nbsp;For example, the method fails if you attempt to display the Format&nbsp;Data&nbsp;Labels dialog box (using the Visual Basic expression Application.Dialogs(xlDialogDataLabel).Show) when the active sheet isn't&nbsp;a&nbsp;chart.</P>
<P CLASS="t">You cannot copy a built-in dialog box, but you can create a custom dialog box that looks just like the built-in dialog box and write a series of procedures that duplicates the features of the built-in dialog box. You can then add and delete controls and change their behavior. For more information about creating and using custom dialog boxes, see "Using Custom Dialog Boxes" later in this chapter.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">Visual Basic does provide some methods that allow you to use duplicates of built-in dialog boxes. For example, the <B>GetOpenFileName</B> method displays the File Open dialog box and returns the filename the user selects. The <B>GetSaveAsFileName</B> method displays the File Save As dialog box.</P>
<P></P></FONT>
</FONT></BODY></HTML>
