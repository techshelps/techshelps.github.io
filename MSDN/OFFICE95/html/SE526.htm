<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Menu Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Menu Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Represents a drop-down menu, shortcut menu, or submenu.</P>
<P CLASS="h"><B>Accessors</B></P>
<P CLASS="t">The <B>Menu</B> object is a member of the <B>Menus</B> collection. The <B>Menus</B> collection contains all of the menus on a menu bar. Use the <B>Add</B> method to create a new menu and add it to the specified menu bar. To access a single member of the collection, use the <B>Menus</B> method with the menu caption or index number as an argument.</P>
<P CLASS="t">The index number indicates the position of the menu on the menu bar. The following example adds a new menu item to the bottom of the File menu on the Worksheet menu bar.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MenuBars("worksheet").Menus(1).MenuItems.Add "Search"
</FONT></PRE>
<P CLASS="t">The menu caption is the text that appears in the menu bar. Use the <B>Caption</B> property to set or return the menu caption. The following example changes the caption for the Help menu on the Visual Basic Module menu bar.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MenuBars(xlModule).Menus("help").Caption = "HELP!"
</FONT></PRE>
<P CLASS="t">The following example creates a table on worksheet one that contains the captions of all the menus on all the menu bars in the application. The column headings are the menu bar captions, and the column entries under each heading are the menu captions on that menu bar.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub EnumerateMenuBars()
    Worksheets(1).Activate
    c = 1
    For Each mb In MenuBars
        Cells(1, c) = mb.Caption
        i = 2
        For Each mn In mb.Menus
            Cells(i, c) = mn.Caption
            i = i + 1
        Next
        c = c + 1
    Next
End Sub
</FONT></PRE>
<P CLASS="t">The <B>MenuItems</B> method returns a <B>Menu</B> object when the specified menu item is a submenu. The following example sets the <B>Checked</B> property for the mySubMenuItem submenu item on the mySubMenu submenu.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MenuBars(xlModule).Menus("myMenu").MenuItems("mySubMenu") _
    .MenuItems("mySubMenuItem").Checked = True
</FONT></PRE>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">You should use the menu name instead of its index number so your code will not depend on the current menu layout. Other Visual Basic procedures may change the menu layout, and the layout may change in future versions of Microsoft Excel. It is safer to use <B>Menubars(xlWorksheet)</B>.<B>Menus("File")</B> than to rely on the File menu being the first menu on the menubar and use <B>Menubars(xlWorksheet)</B>.<B>Menus(1)</B>.</P>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>Application </B>Property,<B> Caption </B>Property,<B> Creator </B>Property,<B> Enabled </B>Property,<B> Index </B>Property,<B> Parent </B>Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>Delete </B>Method,<B> MenuItems </B>Method.</P></FONT>
</FONT></BODY></HTML>
