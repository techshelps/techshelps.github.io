<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Objects, Methods, And Properties</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Objects, Methods, And Properties</H2><P CLASS="t">Breaking up Excel into multiple objects gives the benefit of code reusability.  It's possible to include a Chart object in a presentation, or a PivotTable object in an interactive document.  The developer provides the code that sets up the object or helps the user make changes.  The rest of the code is already debugged and documented.  There are over six million lines of code in the Microsoft Office applications…that's a lot of code you don't have to write!  To take advantage of these objects requires knowing some concepts that may be new to the reader.  </P>
<H3><A NAME="sec0"></A>Objects</H3><P CLASS="t">Think of an object as something visible in the real world.  For instance, a picture hanging on a wall is an object.  In Excel, some objects are the Worksheet, Chart, and Range objects.  In the real world, a person would change things about the picture by picking it up and doing whatever they want, within the limits of good taste.  A developer changes things about Excel's objects through the VBA language.  </P>
<H3><A NAME="sec1"></A>Methods</H3><P CLASS="t">Think of a method as an action done to an object.  For instance:  hanging the picture, cleaning the glass, or showing the picture if it had a velvet cloth covering it.  In Excel, the Show method shows a dialog box;  the Activate method makes a worksheet visible and ready for editing.  </P>
<H3><A NAME="sec2"></A>Properties</H3><P CLASS="t">Think of a property as something that describes an object.  A picture has a frame style, dimensions, and the photo itself.  An Excel chart has similar properties;  for instance the Border, Height, and Width properties of the ChartArea object.  Code can both examine and change the values of a property if it can be written to, but some properties are read-only.  </P>
<H3><A NAME="sec3"></A>Collections</H3><P CLASS="t">Collections are another useful concept.  There could be a collection of all the pictures in a museum.  In Excel, a collection is a group of similar objects.  The Worksheets collection is all the Worksheet objects in a Workbook object.  With collections, code can do things like list the names of all the worksheets in a workbook to build a table of contents.  VBA has a For Each… statement that lets code step through all the objects in a collection, one at a time.  </P></FONT>
</FONT></BODY></HTML>
