<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso8859-1">


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DLookup Function</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h1><a name="sec96"></a>DLookup Function</h1>

<h2><a name="sec97"></a>Description</h2>

<p>You can use the <b>DLookup</b> function to get the value of a
particular field from a specified set of records (domain). Use <b>DLookup</b>
in a macro or module, in a query expression, or in a calculated
control on a form or report.</p>

<p>You can use <b>DLookup</b> to display the value of a field
that is not in the record source for your form or report. For
example, suppose you have a form based on an Order Details table.
The form displays the OrderID, ProductID, UnitPrice, Quantity,
and Discount fields. However, the ProductName field is in another
table, the Products table. You could use <b>DLookup</b> in a
calculated control to display the ProductName on the same form.</p>

<h2><a name="sec98"></a>Syntax</h2>

<p><b>DLookup(</b><i>expr</i>, <i>domain</i>[, <i>criteria</i>]<b>)</b></p>

<p>The <b>DLookup</b> function uses the following arguments.</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>expr</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Expression that identifies the field
        whose value you want to return. It can be a string
        expression identifying a field in a table or query, or it
        can be an expression that performs a calculation on data
        in that field. You can include in <i>expr</i> the name of
        a table field, a control on a form, a constant, or a
        function. If <i>expr </i>includes a function, it can be
        either built-in or user-defined, but not another domain
        aggregate or SQL aggregate function.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>domain</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">String expression identifying the set of
        records that constitutes the domain. It can be a table
        name or a query name.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>criteria</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional string expression used to
        restrict the range of data on which <b>DLookup</b> is
        performed. For example, <i>criteria</i> is often
        equivalent to the WHERE clause in an SQL expression,
        without the word WHERE. If <i>criteria</i> is omitted, <b>DLookup</b>
        evaluates <i>expr </i>against the entire domain. Any
        field included in <i>criteria</i> must also be a field in
        <i>domain</i>; otherwise, <b>DLookup</b> returns a <b>Null</b>.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<h2><a name="sec99"></a>Remarks</h2>

<p><b>DLookup</b> finds a value in the field or expression
defined by <i>expr</i> from the table or query referred to by <i>domain</i>,
according to any restrictions specified by <i>criteria</i>.</p>

<p><b>DLookup</b> returns a single field value based on the
information specified in <i>criteria</i>. Although <i>criteria </i>is
an optional argument, if you don&#146;t supply a value for <i>criteria</i>,
<b>DLookup</b> returns a random value in the domain.</p>

<p>If no record satisfies <i>criteria</i> or if <i>domain</i>
contains no records, <b>DLookup</b> returns a <b>Null</b>.</p>

<p>If more than one field meets criteria, <b>DLookup</b> returns
the first occurrence. You should specify criteria that will
ensure that the field value returned by <b>DLookup</b> is unique.
You may want to use a primary key value for your criteria, such
as [EmployeeID] in the following example, to ensure that <b>DLookup</b>
returns a unique value.</p>

<p class="spacing"><br>
</p>

<pre>X = DLookup(&quot;[LastName]&quot;, &quot;Employees&quot;, &quot;[EmployeeID] = 1&quot;)
</pre>

<p>Whether you use <b>DLookup</b> in a macro or module, a query
expression, or a calculated control, you must construct the <i>criteria</i>
argument carefully to ensure that it will be evaluated correctly.</p>

<p>You can use <b>DLookup</b> to specify criteria in the Criteria
row of a query, within a calculated field expression in a query,
or in the Update To row in an update query.</p>

<p>You can also use <b>DLookup</b> in an expression in a
calculated control on a form or report if the field that you need
to display is not in the record source on which your form or
report is based. For example, suppose you have an Orders form
with a text box called SKU that displays the ProductID field, and
you want to look up ProductName from a Products table, based on
the value in the text box. You could create another text box and
set its <b>ControlSource</b> property to the following
expression.</p>

<p class="spacing"><br>
</p>

<pre>=DLookup(&quot;[ProductName]&quot;, &quot;Products&quot;, &quot;[ProductID] ='&quot; _
    &amp; Forms!Orders!SKU &amp; &quot;'&quot;)
</pre>

<p><b>Tips</b> Although you can use <b>DLookup</b> to display a
value from a field in a foreign table, it may be more efficient
to create a query that contains the fields that you need from
both tables, and base your form or report on that query.</p>

<p>You can also use the Lookup Wizard to find values in a foreign
table.</p>

<p><b>Note</b> Unsaved changes to records in <i>domain</i> are
not included when you use this function. If you want the <b>DLookup</b>
function to be based on the changed values, you must first save
the changes by choosing the Save Record command from the File
menu, moving the focus to another record, or using the <b>Update</b>
method.</p>

<h2><a name="sec100"></a>See Also</h2>

<p>Domain Aggregate Functions.</p>

<h2><a name="sec101"></a>Example</h2>

<p>This example returns name information from the CompanyName
field of the record satisfying <i>criteria</i>. The domain is a
Shippers table. The <i>criteria</i> argument restricts the
resulting set of records to those for which ShipperID equals 1.</p>

<p class="spacing"><br>
</p>

<pre>Dim strX As String= DLookup(&quot;[CompanyName]&quot;, &quot;Shippers&quot;, &quot;[ShipperID] = 1&quot;)
</pre>

<p>The following example from the Shippers table uses the form
control ShipperID to provide <i>criteria</i> for <b>DLookup</b>.
Note that the reference to the control is not included in the
quotation marks that denote the strings. This ensures that each
time the <b>DLookup</b> function is called, Microsoft Access will
obtain the current value from the control.</p>

<p class="spacing"><br>
</p>

<pre>Dim strX As String= DLookup(&quot;[CompanyName]&quot;, &quot;Shippers&quot;, &quot;[ShipperID] =&quot; _
    &amp; Forms!Shippers!ShipperID)
</pre>

<p>The next example uses a variable, intSearch, to perform a
lookup.</p>

<p class="spacing"><br>
</p>

<pre>Dim intSearch As Integer, strX As String= 1= DLookup(&quot;[CompanyName]&quot;, &quot;Shippers&quot;, _
    &quot;[ShipperID] = &quot; &amp; intSearch)
</pre>
</FONT></FONT></BODY>
</html>
