<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SendKeys Action</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec430"></A>SendKeys Action</H1><P CLASS="t">  </P>
<H2><A NAME="sec431"></A>Description</H2><P>You can use the SendKeys action to send keystrokes directly to Microsoft Access or to an active Microsoft Windows-based application.</P>
<H2><A NAME="sec432"></A>Setting</H2><P>The SendKeys action uses the following arguments.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="118pt" VALIGN="TOP"><COL WIDTH="250pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Action argument</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Keystrokes</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">The keystrokes you want Microsoft Access or the application to process. You can type up to 256 characters. This is a required argument.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Wait</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Specifies whether the macro should pause until the keystrokes have been processed. Click Yes to pause or No not to pause. The default is No.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec433"></A>Remarks</H2><P>Microsoft Access processes the keystrokes it receives through the SendKeys action exactly as if you had typed them directly in a Microsoft Access window.</P>
<P>To specify the keystrokes, use the same syntax as the <B>SendKeys</B> statement.</P>
<P>You can use this action to enter information in a dialog box, particularly if you don’t want to interrupt the macro to respond manually to the dialog box. Some Microsoft Access actions, such as Print and FindRecord, automatically select the options in certain frequently used dialog boxes. You can use the SendKeys action to select the options in less commonly used dialog boxes.</P>
<P><A NAME="sec433PT2"></A>Notes</P>
<SPAN CLASS="list"><UL><LI><SPAN CLASS="Symbol"></SPAN>    Because the dialog box suspends the macro, you must put the SendKeys action before the action that causes the dialog box to open and set the Wait argument to No to avoid breaks in the processing.</LI><LI><SPAN CLASS="Symbol"></SPAN>    The timing of the keystrokes reaching Microsoft Access or another application can be tricky. As a result, it’s recommended that if there is some other method (such as the FindRecord action) you can use to achieve a desired task, use that method rather than using the SendKeys action to fill in the options in a dialog box.</LI></UL></SPAN><P>If you want to send more than 256 characters to Microsoft Access or another Windows-based application, you can use several SendKeys actions in succession in a macro.</P>
<P>Using the SendKeys action to send keystrokes triggers the appropriate KeyDown, KeyUp, and KeyPress events. Sending non-ANSI keystrokes (such as a function key) doesn’t trigger the KeyPress event.</P>
<P>This action isn’t available from Visual Basic. Use the <B>SendKeys</B> statement instead.</P>
<H2><A NAME="sec434"></A>See Also</H2><P>GoToControl Action; KeyDown, KeyUp Events; KeyPress Event; SelectObject Action; <B>SendKeys</B> Statement; SetValue Action.</P>
<P CLASS="t"> </P></FONT></FONT></BODY></HTML>
