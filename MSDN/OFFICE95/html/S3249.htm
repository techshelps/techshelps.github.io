<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MacID$()</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H1 CLASS="h2">MacID$()</H1><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>MacID$(</B><I>Identifier$</I><B>)</B></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">On the Macintosh, converts an application signature or a file type to a value that can be used with instructions (such as <B>AppClose</B>, <B>Files$</B><B>()</B>, or <B>Shell</B>) that require either an application filename or a file type. In Windows, <B>MacID$</B><B>()</B> is not available and generates an error.</P>
<P CLASS="t"><B>MacID$</B><B>()</B> provides a way to specify an application without specifying the application filename, which the user can change. <B>MacID$</B><B>()</B> can be used to specify an application with the following instructions:<B> AppActivate</B>, <B>AppClose</B>, <B>AppCount</B>, <B>AppGetNames</B>, <B>AppGetNames</B><B>()</B>, <B>AppIsRunning</B><B>()</B>, <B>Shell</B>.</P>
<P CLASS="t"><B>MacID$</B><B>()</B> can be used with <B>Files$</B><B>()</B>, <B>FileOpen</B>, and <B>Kill</B> to specify a Macintosh file type. Because the Macintosh does not support the MS-DOS asterisk (*) and question mark (?) wildcard characters, you use a file type to identify groups of files. For example, the following statement returns a text filename from the current folder:</P>
<P CLASS="spacing"><BR></P>
<PRE>textfile1$ = Files$(MacID$("TEXT"))
</PRE>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">You cannot specify multiple files in a specific folder by concatenating a path and a <B>MacID$</B><B>()</B> file type. For example, the following instruction produces unexpected results:</P>
<P CLASS="spacing"><BR></P>
<PRE>textfile1$ = Files$("HD:TEXT FILES:" + MacID$("TEXT"))
</PRE>
<P CLASS="nt">Instead, you use a <B>ChDir</B> instruction to change the current folder, and then use <B>MacID$</B><B>()</B> in an instruction to specify a file type.</P>
<P></P>
<P></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="274pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Identifier$</I></P></FONT></TD><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">An application signature or file type.</P>
<P CLASS="tt">An application signature is a four-character sequence that uniquely identifies an application. For example, MSWD is the application signature for Word; XCEL is the application signature for Microsoft Excel.</P>
<P CLASS="tt">A file type is a four-character sequence that identifies a file format. For example, W6BN is the file type for files created by Microsoft Word 6.0 for the Macintosh and TEXT is the file type for text files (and files created in Windows, such as Word 6.0 for Windows files). You can use "****" to indicate all files in a folder.</P>
<P CLASS="tt">Note that application signatures and file types are case sensitive. For example, "MSWD" is the application signature for Word, but "Mswd" is not. For a given filename, you can use <B>FileCreator$</B><B>()</B> to determine the signature of the application that created the file, and  you can use <B>FileType$</B><B>()</B> to determine the file type.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Examples</B></P>
<P CLASS="t">This example uses <B>MacID$</B><B>()</B> with <B>AppIsRunning</B><B>()</B> and <B>Shell</B> to determine whether Microsoft Excel is running and to start Microsoft Excel if it is not running.</P>
<P CLASS="spacing"><BR></P>
<PRE>If AppIsRunning(MacID$("XCEL")) = 0 Then Shell MacID$("XCEL")
</PRE>
<P CLASS="t">The following example uses <B>MacID$</B><B>()</B> with <B>FileOpen</B> to display the Open dialog box and list the Word templates in the current folder.</P>
<P CLASS="spacing"><BR></P>
<PRE>Dim FOdlg as FileOpen
GetCurValues FOdlg
FOdlg.Name = MacID$("WTBN")
choice= Dialog(FOdlg)
If choice = -1 Then FileOpen FOdlg
</PRE>
<P CLASS="t">The following example uses <B>MacID$</B><B>()</B> with <B>Files$</B><B>()</B> to insert a list of text files in the current folder into the active window:</P>
<P CLASS="spacing"><BR></P>
<PRE>textfilename$ = Files$(MacID$("TEXT"))
While textfilename$ &lt;&gt; ""
    Insert textfilename$
    textfilename$ = Files$()
    InsertPara
Wend
</PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>AppActivate</B>,<B> AppClose</B>,<B> AppCount</B><B>()</B>,<B> AppGetNames</B>,<B> AppIsRunning</B><B>()</B>,<B> FileCreator$</B><B>()</B>,<B> FileOpen</B>, <B>Files$</B><B>()</B>, <B>FileType$</B><B>()</B>,<B> Kill</B>,<B> SetFileCreatorAndType</B>,<B> Shell</B></P>
<P></P></FONT></FONT></BODY></HTML>
