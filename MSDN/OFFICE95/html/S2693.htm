<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLQueryFetch</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H3 CLASS="h2">SQLQueryFetch</H3><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>SQLQueryFetch(</B><I>ConnectNum</I><B>)</B></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Positions the cursor at the next row of data in the query result of <B>SQLQueryExec</B>. The cursor cannot be moved backward. To use <B>SQLQueryFetch</B>, a macro must have already established a connection using <B>SQLOpen</B>. Also, a query must have already been executed using <B>SQLQueryExec</B>, and results must be pending.</P>
<P CLASS="t">Use <B>SQLQueryRetrieve</B> to return data from the row of data at which the cursor is positioned.</P>
<P CLASS="t">You cannot use <B>SQLQueryFetch</B> in combination with <B>SQLRetrieveItem$</B> or <B>SQLRetrieveToDocument</B> to return data from a data source.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="276pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>ConnectNum</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The unique connection ID for a data source. The data source specified must have pending query results. If <I>ConnectNum</I> is not valid, <B>SQLQueryExec</B> would have returned an error value. In such a case, <B>SQLQueryExec</B> places error information in memory for the error functions, if such information is available.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">If the cursor was moved, <B>SQLQueryFetch</B> returns 1; if the cursor is already positioned at the last row of data, it returns –1 (SQL_NoMoreData). Otherwise, <B>SQLQueryFetch</B> returns 0 (zero) or a negative error value.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">The following example uses a <B>While...Wend</B> loop to return the data in each column of each row of the pending data source until <B>SQLQueryFetch</B> returns a value indicating that the cursor is already at the last row of the query results.</P>
<P CLASS="spacing"><BR></P>
<PRE>cols = SQLRetrieveColumns(connect_no)
ret = SQLQueryFetch(connect_no)
While ret = 1
    For i = 1 To cols
        storsize = SQLRetrieveColSize(connect_no, i)
        stor$ = String$(storsize, 50)
        SQLQueryRetrieve(connect_no, i, stor$, storsize)
        ' Statement block that processes the value of stor$
    Next i
ret = SQLQueryFetch(connect_no)
Wend
</PRE></FONT></FONT></BODY></HTML>
