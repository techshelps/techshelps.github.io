<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ItemsSelected Collection</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec116"></A>ItemsSelected Collection</H1><P CLASS="t">  </P>
<H2><A NAME="sec117"></A>Description</H2><P>The <B>ItemsSelected</B> collection provides a way to access data in the selected rows of a list box or combo box.</P>
<H2><A NAME="sec118"></A>Remarks</H2><P>The <B>ItemsSelected</B> collection is unlike other collections in that it is a collection of <B>Variants</B> rather than of objects. Each <B>Variant</B> is an integer index referring to a selected row in a list box or combo box.</P>
<P>Use the <B>ItemsSelected</B> collection in conjunction with the <B>Column</B> property or the <B>ItemData</B> method to retrieve data from selected rows in a list box or combo box. You can enumerate the <B>ItemsSelected</B> collection using the <B>For Each...Next</B> statement.</P>
<P>For example, if you have an Employees list box on a form, you can enumerate the <B>ItemsSelected</B> collection and use the control’s <B>ItemData</B> method to return the value of the bound column for each selected row in the list box.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Tip</B>   To enable multiple selection of rows in a list box or combo box, set the control’s <B>MultiSelect</B> property to Simple or Extended.</P>
<P CLASS="t">  </P>
<P></P>
<P>The <B>ItemsSelected</B> collection has no methods and one property, the <B>Count</B> property.</P>
<H2><A NAME="sec119"></A>Properties</H2><P><B>Count</B> Property (Microsoft Access).</P>
<H2><A NAME="sec120"></A>See Also</H2><P><B>For Each...Next</B> Statement.</P>
<H2><A NAME="sec121"></A>Example</H2><P>The following example prints the value of the bound column for each selected row in a Names list box on a Contacts form. To try this example, create the list box and set its <B>BoundColumn</B> property as desired and its <B>MultiSelect</B> property to Simple or Extended. Switch to Form view, select several rows in the list box, and run the following code.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub BoundData()
    Dim frm As Form, ctl As Control
    Dim varItm As Variant

    Set frm = Forms!Contacts
    Set ctl = frm!Names
    For Each varItm In ctl.ItemsSelected
        Debug.Print ctl.ItemData(varItm)
    Next varItmSub
</PRE>
<P CLASS="t">  </P>
<P>The next example uses the same list box control, but prints the values of each column for each selected row in the list box, instead of only the values in the bound column.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub AllSelectedData()
    Dim frm As Form, ctl As Control
    Dim varItm As Variant, intI As Integer

    Set frm = Forms!Contacts
    Set ctl = frm!Names
    For Each varItm In ctl.ItemsSelected
        For intI = 0 To ctl.ColumnCount - 1
            Debug.Print ctl.Column(intI, varItm)
        Next intI
        Debug.Print
    Next varItm
    End Sub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
