<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso8859-1">


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dir Function</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h1><a name="sec62"></a>Dir Function</h1>

<h2><a name="sec63"></a>Description</h2>

<p>Returns the name of a file, directory, or folder that matches
a specified pattern or file attribute, or the volume label of a
drive.</p>

<h2><a name="sec64"></a>Syntax</h2>

<p><b>Dir</b>[<b>(</b><i>pathname</i>[<i>, attributes</i>]<b>)</b>]</p>

<p>The <b>Dir</b> function syntax has these parts:</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>pathname</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">String expression that specifies a
        filename &#151; may include directory or folder, and
        drive. <b>Null</b> is returned if <i>pathname</i> is not
        found. </td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>attributes</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant or numeric expression, the sum
        of which specifies file attributes. If omitted, all
        normal files are returned that match <i>pathname</i>. </td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<h2><a name="sec65"></a>Settings</h2>

<p>The <i>attributes</i> argument settings are:</p>

<p class="spacing"><br>
</p>

<table border="0" cellpadding="7" cols="3">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Constant</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Value</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><b>vbNormal</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">0</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Normal.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><b>vbHidden</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">2</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Hidden.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><b>vbSystem</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">4</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">System file.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><b>vbVolume</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">8</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Volume label; if specified, all other
        attributes are ignored.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><b>vbDirectory</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">16</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Directory or folder.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<p><b>Note</b> These constants are specified by Visual Basic for
applications. As a result, the names can be used anywhere in your
code in place of the actual values.</p>

<h2><a name="sec66"></a>Remarks</h2>

<p><b>Dir</b> supports the use of <b>*</b> (multiple character)
and <b>?</b> (single character) wildcards to specify multiple
files.</p>

<p>You must specify <i>pathname</i> the first time you call the <b>Dir</b>
function, or an error occurs. If you also specify file
attributes, <i>pathname</i> must be included. </p>

<p><b>Dir</b> returns the first filename that matches <i>pathname</i>.
To get any additional filenames that match <i>pathname</i>, call <b>Dir</b>
again with no arguments. When no more filenames match, <b>Dir</b>
returns a zero-length string. Once a zero-length string is
returned, you must specify <i>pathname</i> in subsequent calls or
an error occurs. You can change to a new <i>pathname</i> without
retrieving all of the filenames that match the current <i>pathname</i>.
However, you can&#146;t recursively call the <b>Dir</b> function.</p>

<p><b>Tip</b> Because filenames are retrieved in no particular
order, you may want to store returned filenames in an array and
then sort the array. Also, calling <b>Dir</b> with the <b>vbDirectory</b>
attribute does not continually return subdirectories.</p>

<h2><a name="sec67"></a>See Also</h2>

<p><b>ChDir</b> Statement, <b>CurDir</b> Function.</p>

<h2><a name="sec68"></a>Example</h2>

<p>This example uses the <b>Dir</b> function to check if certain
files and directories exist.</p>

<p class="spacing"><br>
</p>

<pre>' Returns &quot;WIN.INI&quot; if it exists.= Dir(&quot;C:\WINDOWS\WIN.INI&quot;)    
' Returns filename with specified extension. If more than one *.INI
' file exists, the first file found is returned.= Dir(&quot;C:\WINDOWS\*.INI&quot;)
' Call Dir again without arguments to return the next *.INI file in the 
' same directory.= Dir
' Return first *.TXT file with a set hidden attribute.= Dir(&quot;*.TXT&quot;, vbHidden)

' Display the names in C:\ that represent directories.= &quot;c:\&quot;    ' Set the path.= Dir(MyPath, vbDirectory)    ' Retrieve the first entry.While MyName &lt;&gt; &quot;&quot;    ' Start the loop.
    ' Ignore the current directory and the encompassing directory.
    If MyName &lt;&gt; &quot;.&quot; And MyName &lt;&gt; &quot;..&quot; Then
        ' Use bitwise comparison to make sure MyName is a directory.
        If (GetAttr(MyPath &amp; MyName) And vbDirectory) = vbDirectory Then
            Debug.Print MyName    ' Display entry only if it
        End If    ' it represents a directory.
    End If
    MyName = Dir    ' Get next entry.
</pre>
</FONT></FONT></BODY>
</html>
