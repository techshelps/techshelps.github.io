<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Restoring Built-in Menu Components</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Restoring Built-in Menu Components</H2><P CLASS="t">You can restore built-in menu bars, menus, or menu items that you've deleted. However, you cannot restore <I>custom</I> menu bars, menus, or menu items that you've deleted; you must recreate them.</P>
<H3><A NAME="sec0"></A>Using the Menu Editor</H3><P CLASS="t">If you want to restore built-in components that you've deleted using the Menu Editor, you must open the Menu Editor while the workbook where you originally made the deletions is active. You can restore menu components one at a time, or you can restore the entire default menu system for the active workbook at once. The Menu Editor cannot restore components deleted with Visual Basic code.</P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To restore a deleted menu item</B></P>
<P CLASS="ls">    1.    While a Visual Basic module is active, click Menu Editor on the Tools menu.</P>
<P CLASS="ls">    2.    Select the Show Deleted Items check box.</P>
<P CLASS="lt1">Deleted menu items appear dimmed.</P>
<P CLASS="ls">    3.    In the appropriate box, select the deleted item that you want to restore.</P>
<P CLASS="ls">    4.    Click Undelete.</P>
<P></P>
<P CLASS="t">To restore all the built-in menu bars, menus, menu items, and submenu items (that is, the entire default menu system) at once, click Restore All. </P>
<P></P>
<P CLASS="nh"><B>Caution</B></P>
<P CLASS="nt">Clicking Restore All not only restores deleted built-in components, but it also deletes from the active workbook every custom menu bar, menu, menu item, and submenu item that was added with the Menu Editor. Unless you're absolutely sure that there are no custom menu components you want to save, you should restore any deleted components one by one, using the foregoing procedure.</P>
<P></P>
<H3><A NAME="sec1"></A>Using Visual Basic</H3><P CLASS="t">Use the <B>Reset</B> method of the <B>MenuBars</B> collection to restore a built-in menu bar and all the menu components it contains to their default configuration.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MenuBars(xlWorksheet).Reset
</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Caution</B></P>
<P CLASS="nt">Be careful when you use this method; the <B>Reset</B> method not only restores any deleted built-in components of the menu bar, but it also deletes any custom components that have been added. Keep in mind that another macro may have added custom components to the menu bar in question, and resetting the menu bar will remove these as well. In addition, resetting the menu bar may cause conflicts with the menu editing lists of open workbooks. To avoid these problems, remove any menu components that your macro has added (and restore any menu components that you've deleted) one by one, without resetting the entire menu&nbsp;bar.</P>
<P></P>
<P CLASS="t">Set the <B><I>restore</I></B> argument of the <B>Add</B> method to <B>True</B> to restore a previously deleted built-in drop-down menu, shortcut menu, or menu item. To restore a previously deleted built-in submenu, set the <B><I>restore</I></B> argument of the <B>AddMenu</B> method to <B>True</B>. The following example restores the previously deleted Edit menu to the Chart menu bar.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MenuBars(xlChart).Menus.Add caption:="Edit", _
    before:="View", restore:=True
</FONT></PRE>
<P CLASS="t">This example restores the previously deleted Open menu item to the File menu on the Worksheet menu bar.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MenuBars(xlWorksheet).Menus("File").MenuItems.Add _
    caption := "Open...", _
    restore := True, _
    before := "Close"
</FONT></PRE>
<P CLASS="t">This example restores the previously deleted Protection submenu to the Tools menu on the Visual Basic Module menu bar. </P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MenuBars(xlModule).Menus("Tools").MenuItems.AddMenu _
    caption := "Protection", _
    restore := True, _
    before := "Add-Ins..."
</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">If you omit the <B><I>restore</I></B> argument, Visual Basic adds a custom command that has the same name as the deleted built-in command but lacks its built-in functionality. If you omit the <B><I>before</I></B> argument, Visual Basic places the restored command at the end of the menu, rather than in its original position.</P>
<P></P></FONT>
</FONT></BODY></HTML>
