<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso8859-1">


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>+ Operator</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H1>+ Operator</h1>

<H2>Description</h2>

<p class="t">Used to sum two numbers.</p>

<H2>Syntax</h2>

<p class="syn"><i>result</i> <b>=</b> <i>expression1+expression2</i></p>

<p class="t">The <b>+</b> operator syntax has these parts:</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>result</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Any numeric variable.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>expression1</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Any expression. </td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>expression2</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Any expression.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<H2>Remarks</h2>

<p class="t">Although you can also use the <b>+</b> operator to
concatenate two character strings, you should use the <b>&amp;</b>
operator for concatenation to eliminate ambiguity and provide
self-documenting code.</p>

<p class="t">When you use the <b>+</b> operator, you may not be
able to determine whether addition or string concatenation will
occur. If at least one expression is not a <b>Variant</b>, the
following rules apply:</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">If </b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Then</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Both expressions are numeric data types
        (<b>Byte</b>, <b>Boolean</b>, <b>Integer</b>, <b>Long</b>,
        <b>Single</b>, <b>Double</b>, <b>Date</b>, or <b>Currency</b>)</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Add.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Both expressions are <b>String</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Concatenate.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One expression is a numeric data type
        and the other is any <b>Variant</b> (except <b>Null</b>)</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Add.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One expression is a <b>String</b> and
        the other is any <b>Variant</b> (except <b>Null</b>)</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Concatenate.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One expression is an <b>Empty</b> <b>Variant</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Return the remaining expression
        unchanged as <i>result</i>.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One expression is a numeric data type
        and the other is a <b>String</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">A Type mismatch error occurs.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Either expression is <b>Null</b></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>result</i> is <b>Null</b>.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<p class="t">If both expressions are <b>Variant</b> expressions,
the underlying type of the expressions determines the behavior of
the <b>+</b> operator in the following way:</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Both <b>Variant</b> expressions are
        numeric</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Add.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Both <b>Variant</b> expressions are
        strings</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Concatenate.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">One <b>Variant</b> expression is numeric
        and the other is a string</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Add.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<p class="t">For simple arithmetic addition involving only
expressions of numeric data types, the data type of <i>result</i>
is usually the same as that of the most precise expression. The
order of precision, from least to most precise, is <b>Byte</b>, <b>Integer</b>,
<b>Long</b>, <b>Single</b>, <b>Double</b>, and <b>Currency</b>.
The following are exceptions to this order:</p>
<SPAN CLASS="list">
<ul>
    <li><SPAN CLASS="Symbol"></SPAN> When a <b>Single</b> and a <b>Long</b> are added
        together,<b> </b>the data type of <i>result</i> is
        converted to a <b>Double</b>.</li>
    <li><SPAN CLASS="Symbol"></SPAN> When the data type of <i>result</i> is a <b>Long</b>, <b>Single</b>,
        or <b>Date</b> variant that overflows its legal range, <i>result</i>
        is converted to a <b>Double</b> variant. </li>
    <li><SPAN CLASS="Symbol"></SPAN> When the data type of <i>result</i> is a <b>Byte</b>
        variant that overflows its legal range, <i>result</i> is
        converted to an <b>Integer</b> variant.</li>
    <li><SPAN CLASS="Symbol"></SPAN> When the data type of <i>result</i> is an <b>Integer</b>
        variant that overflows its legal range, <i>result</i> is
        converted to a <b>Long</b> variant.</li>
    <li><SPAN CLASS="Symbol"></SPAN> When a <b>Date</b> is added to any data type, the data
        type of <i>result</i> is always a <b>Date</b>.</li>
</ul>
</SPAN>
<p class="nt"><b>Note</b> The order of precision used by addition
and subtraction is not the same as the order of precision used by
multiplication.</p>

<p class="t">If one or both expressions are <b>Null</b>
expressions, <i>result</i> is <b>Null</b>. If both expressions
are <b>Empty</b>, <i>result</i> is an <b>Integer</b>. However, if
only one expression is <b>Empty</b>, the other expression is
returned unchanged as <i>result</i>.</p>

<H2>See Also</h2>

<p class="t">Operator Precedence.</p>

<H2>Example</h2>

<p class="t">This example uses the <b>+</b> operator to sum
numbers. The <b>+</b> operator can also be used to concatenate
strings, however, to eliminate ambiguity, you should use the <b>&amp;</b>
operator instead. If the components of an expression created with
the <b>+</b> operator include both strings and numerics, the
arithmetic result is assigned. If the components are exclusively
strings, the strings are concatenated.</p>

<p class="spacing"><br>
</p>

<pre>MyNumber = 2 + 2                ' Returns 4.= 4257.04 + 98112    ' Returns 102369.04.= &quot;34&quot;: Var2 = 6        ' Initialize mixed variables.= Var1 + Var2        ' Returns 40.= &quot;34&quot;: Var2 = &quot;6&quot;        ' Initialize variables with strings.= Var1 + Var2        ' Returns &quot;346&quot; (string concatenation).
</pre>
</FONT></FONT></BODY>
</html>
