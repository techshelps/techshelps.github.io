<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The String Data Type</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>The String Data Type</H2><P CLASS="t">A variable that will always contain a string and never a numeric value can be declared with the <B>String</B> data type.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Private dataName As String
</FONT></PRE>
<P CLASS="t">Before you assign data, a string variable contains an empty string (""). You can then assign strings to this variable and manipulate it using string functions. You use string literals in Visual Basic by enclosing the string within double quotation marks.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">dataName = "Database"
dataName = Left(dataName, 4)
</FONT></PRE>
<P CLASS="t">By default, a string variable or argument is a <I>variable-length string</I>; the string grows or shrinks as you assign new data to it. You can also declare strings that have a fixed length. You specify a <I>fixed-length string</I> with the following syntax.</P>
<P CLASS="syn"><B>String</B> <B>*</B> <I>size</I></P>
<P CLASS="t">For example, to declare a string that's always 50 characters long, use code such as the following:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Dim empName As String * 50
</FONT></PRE>
<P CLASS="t">If you assign a string of fewer than 50 characters, empName is padded with enough trailing spaces to total 50 characters (before any assignment, the variable contains 50 spaces). If you assign a string that's too long for the fixed-length string, Visual Basic truncates the characters, as in the following example.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Dim tempString As String * 4, dataName As String

dataName = "Database"
tempString = dataName
MsgBox tempString &amp; " : " &amp; dataName
</FONT></PRE>
<P CLASS="t">The preceding code produces the following output.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Database : Data
</FONT></PRE>
<P CLASS="t">Because fixed-length strings are padded with trailing spaces, you may find the <B>Trim</B>, <B>LTrim</B>, and <B>RTrim </B>functions useful when working with fixed-length strings. For more information, see "Trim," "LTrim," or "RTrim" in Help.</P></FONT>
</FONT></BODY></HTML>
