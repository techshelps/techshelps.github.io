<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RowSourceType (User-Defined Function) -- Code Argument Values</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec244"></A>RowSourceType (User-Defined Function) -- Code Argument Values</H1><P CLASS="t">  </P>
<H2><A NAME="sec245"></A>Description</H2><P>The Visual Basic function you create must accept five arguments. The first argument must be declared as a control and the remaining arguments as <B>Variants</B>. The function itself must return a <B>Variant</B>.</P>
<H2><A NAME="sec246"></A>Syntax</H2><P><B>Function</B> <I>functionname</I><B>(</B><I>fld</I> <B>As Control</B>, <I>id </I><B>As Variant</B>, <I>row </I><B>As Variant</B>, <I>col</I> <B>As</B><I>, code </I><B>As Variant) As Variant</B></P>
<P>The following are the five required arguments.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Argument</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>fld</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A control variable that refers to the list box or combo box being filled.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>id</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A unique value that identifies the control being filled; this is useful when you want to use the same user-defined function for more than one list box or combo box and must distinguish between them. (The example sets this variable to the value of the <B>Timer</B> function.)</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>row</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">The row being filled (zero-based).</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Argument</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>col</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">The column being filled (zero-based).</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>code</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A value that specifies the kind of information being requested.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   Because Microsoft Access calls a list function several times to insert items into a list, often you must preserve information from call to call. The best way to do this is to use <B>Static</B> variables.</P>
<P CLASS="t">  </P>
<P></P>
<P>Microsoft Access calls the user-defined function repeatedly using different values in the <I>code</I> argument to specify the information it needs. The <I>code</I> argument can have the following values.</P>
<P CLASS="t">  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="55pt" VALIGN="TOP"><COL WIDTH="122pt" VALIGN="TOP"><COL WIDTH="199pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Code</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Meaning</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Function returns</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">0</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Initialize</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Nonzero if the function can fill the list; <B>False</B> or <B>Null</B> otherwise.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">1</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Open</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Nonzero ID value if the function can fill the list; <B>False</B> or <B>Null</B> otherwise.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">2</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">(Not used)</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">3</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Number of rows</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Number of rows in the list (can be zero); -1 if unknown.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">4</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Number of columns</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Number of columns in the list (can’t be zero); must match the property sheet value.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">5</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Column width</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Width (in twips) of the column specified by the <I>col</I> argument; or -1 to use the default width.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">6</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">List entry</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">List entry to be displayed in the row and column specified by the <I>row</I> and <I>col</I> arguments.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">7</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Format string</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Format string to be used to format the list entry displayed in the row and column specified by the <I>row</I> and <I>col</I> arguments; or <B>Null</B> to use the default format.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">8</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">(Not used)</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">9</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">End (the last call to a list function always uses this value)</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Nothing.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P>Microsoft Access calls your list function once for codes 0, 1, 3, and 4. It initializes the list function, opens the query, and determines the number of rows and columns.</P>
<P>Microsoft Access calls your list function twice for code 5 — once to determine the total width of the list box or combo box and a second time to set the column width.</P>
<P>The number of times your list function is called for codes 6 and 7 to get list entries and to format strings varies depending on the number of entries, the user’s scrolling, and other factors.</P>
<P>Microsoft Access calls the list function for code 9 when the form is closed or each time the list box or combo box is queried.</P>
<P>Whenever a particular value (such as the number of columns) is required, returning <B>Null</B> or any invalid value causes Microsoft Access to stop calling the list function with that code.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Tip</B>   You can use the Select Case code structure from the example as a template for your own <B>RowSourceType</B> user-defined functions.</P>
<P CLASS="t">  </P>
<P></P>
<P>Your user-defined function can use the numeric codes or the corresponding constants. Intrinsic constants have several advantages. They don’t have to be loaded or declared, and they’re more descriptive than the numeric codes. The following table lists the numeric codes and their corresponding intrinsic constants.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Code</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Intrinsic Constant</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">0</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBInitialize</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">1</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBOpen</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">3</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBGetRowCount</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">4</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBGetColumnCount</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">5</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBGetColumnWidth</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">6</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBGetValue</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">7</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBGetFormat</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">8</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBClose</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">9</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>acLBEnd</B></P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   You can’t create your own constants with the same names as Microsoft Access intrinsic constants.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec247"></A>Example</H2><P>The following user-defined function returns a list of the next four Mondays following today’s date. To call this function from a list box control, enter <B>ListMondays</B> as the <B>RowSourceType</B> property setting and leave the <B>RowSource</B> property setting blank.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Function ListMondays(fld As Control,id As Variant,row As Variant, _
        col As Variant,code As Variant) As Variant
    Dim intOffset As Integer
    Select Case code
        Case 0                        ' Initialize.
            ListMondays = True
        Case 1                        ' Open.
            ListMondays = Timer        ' Generate unique ID for control.
        Case 3                        ' Get number of rows.
            ListMondays = 4
        Case 4                        ' Get number of columns.
            ListMondays = 1
        Case 5                        ' Get column width.
            ListMondays = -1            ' -1 forces use of default width.
        Case 6                        ' Get the data.
            intOffset = Abs((9 - Weekday(Now))Mod 7)
            ListMondays = Format(Now() + intOffset + 7 * row,"mmmm d")
    End SelectFunction
</PRE>
<P CLASS="t">  </P>
<P>The following example uses a static array to store the names of the databases in the current directory. To call this function, enter <B>ListMDBs</B> as the <B>RowSourceType</B> property setting and leave the <B>RowSource</B> property setting blank.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Function ListMDBs (fld As Control, id As Variant, row As Variant, _
        col As Variant, code As Variant) As Variant
    Static dbs(127), Entries
    Dim ReturnVal
    ReturnVal = Null
    Select Case code
        Case LB_INITIALIZE            ' Initialize.
            Entries = 0
            dbs(Entries ) = Dir("*.MDB")
            Do Until dbs(Entries) = "" Or Entries &gt;= 127
                Entries = Entries+1
                dbs(Entries) = Dir
            Loop
            ReturnVal = Entries
        Case LB_OPEN                    ' Open.
            ReturnVal = Timer        ' Generate unique ID for control.
        Case LB_GETROWCOUNT            ' Get number of rows.
            ReturnVal = Entries
        Case LB_GETCOLUMNCOUNT        ' Get number of columns.
            ReturnVal = 1
        Case LB_GETCOLUMNWIDTH        ' Column width.
            ReturnVal = -1            ' -1 forces use of default width.
        Case LB_GETVALUE                ' Get data.
            ReturnVal = dbs(row)
        Case LB_END                    ' End.
            For Entries = 0 to 127
                dbs(Entries) = ""
            Next
    End Select
    ListMDBs = ReturnValFunction</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
</FONT></FONT></BODY></HTML>
