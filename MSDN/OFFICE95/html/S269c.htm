<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLSynchronize</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H3 CLASS="h2">SQLSynchronize</H3><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>SQLSynchronize(</B><I>Flag</I><B>)</B></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Specifies whether to allow ODBC functions to be called asynchronously. Several of the functions in the ODBC API can be called asynchronously. The ODBC extensions for Microsoft Word take advantage of this functionality. Not all ODBC drivers can handle asynchronous calls, but the ODBC API was designed so that the calling convention is the same for all drivers.</P>
<P CLASS="t">For complete information on asynchronous processing, see "Requesting Asynchronous Processing" in Chapter 6, "Executing SQL Statements," in the <I>Microsoft ODBC Programmer's Reference</I> in the Microsoft ODBC Software Development Kit version 2.0.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="276pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Flag</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Specifies whether to enable or disable asynchronous processing:</P>
<P CLASS="tt">0 (zero)    Enables asynchronous processing; subsequently, SQL functions may return –2 (SQL_StillExecuting) if activity on the connection is not complete.</P>
<P CLASS="tt">1    Disables asynchronous processing.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">If <B>SQLSynchronize</B> is unsuccessful, the function returns a negative error value.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">The following example demonstrates the calling convention for asynchronous ODBC functions.</P>
<P CLASS="spacing"><BR></P>
<PRE>err = SQLSynchronize(0)
status = SQLExecQuery(connection, query_string$)
While SQLRetrieveRows(connection) = -2
    'Series of statements to perform other processing
Wend
</PRE>
<P CLASS="t">The ODBC functions used in the WBODBC.WLL can be called in this manner after asynchronous processing is enabled.</P>
<P CLASS="t"></P></FONT></FONT></BODY></HTML>
