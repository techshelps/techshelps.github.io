<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Option Base Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec269"></A>Option Base Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec270"></A>Description</H2><P>Used at module level to declare the default lower bound for array subscripts.</P>
<H2><A NAME="sec271"></A>Syntax</H2><P><B>Option Base</B> {<B>0 </B>| <B>1</B>}</P>
<H2><A NAME="sec272"></A>Remarks</H2><P>If used, the <B>Option</B> <B>Base</B> statement must appear in a module before any statements that declare variables or define constants.</P>
<P>Since the default base is <B>0</B>, the <B>Option Base</B> statement is never required. However, if used, it  can appear only once in a module and must precede array declarations that include dimensions.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Tip</B>   The To clause in the <B>Dim</B>, <B>Private</B>, <B>Public</B>, <B>ReDim</B>, and <B>Static</B> statements provides a more flexible way to control the range of an array’s subscripts. However, if you don’t explicitly set the lower bound with a To clause, you can use <B>Option Base</B> to change the default lower bound to 1.</P>
<P CLASS="t">  </P>
<P></P>
<P>The <B>Option Base</B> statement only affects the lower bound of arrays in the module where the statement is located.</P>
<H2><A NAME="sec273"></A>See Also</H2><P><B>Dim</B> Statement, <B>LBound</B> Function, <B>Option Compare</B> Statement, <B>Option Explicit</B> Statement, <B>Option Private</B> Statement, <B>Private</B> Statement, <B>Public</B> Statement, <B>ReDim</B> Statement, <B>Static</B> Statement.</P>
<H2><A NAME="sec274"></A>Example</H2><P>This example uses the <B>Option Base </B>statement to override the default base array subscript value of 0. The<B> LBound</B> function returns the smallest available subscript for the indicated dimension of an array. The <B>Option Base</B> statement is used at the module level only.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Option Base 1                    ' Set default array subscripts to 1.MyArray(20), TwoDArray(3, 4)    ' Declare array variables.ZeroArray(0 To 5)            ' Override default base subscript.
' Use LBound function to test lower bounds of arrays.= LBound(MyArray)            ' Returns 1.= LBound(TwoDArray, 2)        ' Returns 1.= LBound(ZeroArray)        ' Returns 0.
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
