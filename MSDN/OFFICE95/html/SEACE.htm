<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Information with Locale-Aware Functions and Statements</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Displaying Information with Locale-Aware Functions and&nbsp;Statements</H2><P CLASS="t">As explained previously, different locales have different conventions for displaying dates, times, numbers, currency, and other information. As a programmer, you cannot know the conventions for all your users' locales, and you don't have to know them. Many Visual Basic statements use the locale settings to determine the conventions automatically at run time, but some statements are more locale-aware than others. In general, Help tells you whether a statement or function is locale-aware, and if so, in what ways.</P>
<P CLASS="t">For example, the <B>Print</B> statement provides little flexibility for different output formats; it does, however, use the operating system locale settings. Dates are printed using the correct short date format, numbers are printed with the correct decimal separator, and currencies are printed with the correct symbol.</P>
<P CLASS="t">The <B>Format</B> function can accept format codes, but format codes always produce the same type of output without regard to the user's locale. For example, the format code "mm-dd-yy" isn't appropriate for locales in which the day precedes the month.</P>
<P CLASS="t">For more flexibility, the <B>Format</B> function also provides named formats that are locale-aware, including Short Date, Long Date, Long Time, and General Number. Using named formats produces output that's based on the user's operating system locale settings.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MyDate = #January 27, 1994#
MyStr = Format(MyDate, "dd-mm-yy")        'Returns 01-27-94
MyStr = Format(MyDate, "Short Date")        'Returns a short date based on
                                        'the locale where the code is                                             'running
</FONT></PRE></FONT>
</FONT></BODY></HTML>
