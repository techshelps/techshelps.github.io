<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetOption, SetOption Methods</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec17"></A>GetOption, SetOption Methods</H1><P CLASS="t">  </P>
<H2><A NAME="sec18"></A>Applies To</H2><P><B>Application</B> Object.</P>
<H2><A NAME="sec19"></A>Description</H2><SPAN CLASS="list"><UL><LI><SPAN CLASS="Symbol"></SPAN>    The <B>GetOption</B> method returns the current value of an option in the Options dialog box, available by clicking Options on the Tools menu.</LI><LI><SPAN CLASS="Symbol"></SPAN>    The <B>SetOption</B> method sets the current value of an option in the Options dialog box, available by clicking Options on the Tools menu.</LI></UL></SPAN><H2><A NAME="sec20"></A>Syntax</H2><P><B>Application.GetOption(</B><I>optionname</I><B>)</B><B>Application.SetOption</B> <I>optionname</I>, <I>setting</I></P>
<P></P>
<P>The <B>GetOption</B> and <B>SetOption</B> methods use the following arguments.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="286pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Argument</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>optionname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">The name of the option.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>setting</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A <B>Variant</B> value corresponding to the option setting. The value of setting depends on the possible settings for a particular option.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec21"></A>Remarks</H2><P>The <B>GetOption</B> and <B>SetOption</B> methods provide a means of changing environment options from Visual Basic code. With these methods, you can set or read any option available in the Options dialog box, except for options on the Modules tab.</P>
<P>The option setting depends on the type of option being set. There are three general types of options:</P>
<SPAN CLASS="list"><UL><LI><SPAN CLASS="Symbol"></SPAN>    Yes/No options that can be set by selecting or clearing a check box.</LI><LI><SPAN CLASS="Symbol"></SPAN>    Options that can be set by entering a string or numeric value.</LI><LI><SPAN CLASS="Symbol"></SPAN>    Predefined options that can be chosen from a drop-down box or option group.</LI></UL></SPAN><P>For options that the user sets by selecting or clearing a check box, the <B>GetOption</B> method returns <B>True</B> if the option setting is Yes (the check box is selected) or <B>False</B> if the option setting is No (the check box is cleared). To set an option of this kind using the <B>SetOption</B> method, specify <B>True</B> or <B>False</B> for the <I>setting</I> argument, as in the following example.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Application.SetOption "Show Status Bar", True</PRE>
<P CLASS="t">  </P>
<P>For options that the user sets by typing a string or numeric value, the <B>GetOption</B> method returns the setting as it is displayed in the dialog box. The following example returns a string containing the left margin setting.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Dim varX As Variant= Application.GetOption("Left Margin")
</PRE>
<P CLASS="t">  </P>
<P>To set this type of option using the <B>SetOption</B> method, specify the string or numeric value that would be typed in the dialog box. The following example sets the default form template to OrderTemplate.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Application.SetOption "Form Template", "OrderTemplate"
</PRE>
<P CLASS="t">  </P>
<P>For options with settings that are choices in list boxes, the <B>GetOption</B> method returns a number corresponding to the position of the setting in the list. Indexing begins with zero, so the <B>GetOption</B> method returns zero for the first item, 1 for the second item, and so on. For example, if the Default Field Type option on the Tables/Queries tab is set to AutoNumber, the sixth item in the list, the <B>GetOption</B> method returns 5.</P>
<P>To set this type of option, specify the option’s numeric position within the list as an argument to the <B>SetOption</B> method. The following example sets the Default Field Type option to AutoNumber.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Application.SetOption "Default Field Type", 5
</PRE>
<P CLASS="t">  </P>
<P>Other options are set by clicking on an option button in an option group in the Options dialog box. In Visual Basic, these options are also set by specifying a particular option’s position within the option group. The first option in the group is numbered zero, the second, 1, and so on. For example, if the Selection Behavior option on the Forms/Reports tab is set to Partially Enclosed, the <B>GetOption</B> method returns zero.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Debug.Print Application.GetOption("Selection Behavior")
</PRE>
<P CLASS="t">  </P>
<P>To set an option that is a member of an option group, specify the index number of the option within the group. The following example sets Selection Behavior to Fully Enclosed.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Application.SetOption "Selection Behavior", 1</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P><B>Note</B>   When you use the <B>GetOption</B> method or the <B>SetOption</B> method to set an option in the Options dialog box, you don’t need to specify the individual tab on which the option is found.</P>
<P>You can’t use the <B>GetOption</B> method or the <B>SetOption</B> method to read or set any of the options found on the Module tab of the Options dialog box.</P>
<P>If the return value of the <B>GetOption</B> method is assigned to a variable, the variable must be declared as a <B>Variant</B>.</P>
<P CLASS="t">  </P>
<P>When you quit Microsoft Access, you can reset all options to their original settings by using the <B>SetOption</B> method on all changed options. You may want to create public variables to store the values of the original settings. You might include code to reset options in the Close event procedure for a form, or in a custom exit procedure that the user must run to quit the application.</P>
<H2><A NAME="sec22"></A>Example</H2><P>The following example uses the <B>GetOption</B> method to return the Default Field Type option setting from the Tables/Queries tab of the Options dialog box and then saves the setting in a variable. If the Default Field Type option isn’t currently set to Text, Microsoft Access displays a dialog box asking the user whether it should set the option to Text. If the user clicks Yes, the <B>SetOption</B> method changes the option.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub ChangeFieldSize()
    ' Constant represents Text setting of Default Field Type option.
    Const conText = 0
    Dim varSize As Variant, intResponse As Integer, strMsg As String

    ' Determine current setting.
    varSize = Application.GetOption("Default Field Type")
    strMsg = "Set default field type to Text?"
    If varSize &lt;&gt; conText Then
    ' Prompt user to change setting if it's not Text.
        If MsgBox(strMsg, vbYesNo) = vbYes Then
            ' Change setting to Text.
            Application.SetOption "Default Field Type", conText
        End If
    End IfSub</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
