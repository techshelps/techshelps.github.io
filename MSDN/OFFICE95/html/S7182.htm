<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Module Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Module Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Represents a Visual Basic module in a workbook.</P>
<P CLASS="h"><B>Accessors</B></P>
<P CLASS="t">The <B>Module</B> object is a member of the <B>Modules</B> collection. The <B>Modules</B> collection contains all the <B>Module</B> objects in a workbook. Use the <B>Add</B> method to create a new module and add it to the collection. To access a single member of the collection, use the <B>Modules</B> method with the index number or name of the module as an argument.</P>
<P CLASS="t">The module index number represents the position of the module on the tab bar of the workbook. Modules(1) is the first (leftmost) module in the workbook; Modules(Modules.Count) is the last. All modules are included in the index count, even if they are hidden.</P>
<P CLASS="t">The following example hides module two in the active workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Modules(2).Visible = False
</FONT></PRE>
<P CLASS="t">The module name is shown on the workbook tab for the module. Use the <B>Name</B> property to set or return the module name (you cannot change the name of the module where the Visual Basic code is running, however). The following example protects the Visual Basic code on the module named "Sample Code."</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Modules("sample code").Protect password:="drowssap", contents:=True
</FONT></PRE>
<P CLASS="t">The <B>Module</B> object is also a member of the <B>Sheets</B> collection. The <B>Sheets</B> collection contains all of the sheets in the workbook (chart sheets, dialog sheets, modules, and worksheets). To access a single member of the collection, use the <B>Sheets</B> method with the index number or name of the sheet as an argument.</P>
<H4><A NAME="sec0"></A>Using ActiveSheet</H4><P CLASS="t">When a module is the active sheet, you can use the <B>ActiveSheet</B> property to refer to it. The following example uses the <B>Activate</B> method to activate the module named "Module1" and then protects the module.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Modules("module1").Activate
ActiveSheet.Protect
<B></B></FONT></PRE>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>Application </B>Property,<B> Creator </B>Property,<B> Index </B>Property,<B> Name </B>Property,<B> Next </B>Property,<B> OnDoubleClick </B>Property,<B> OnSheetActivate </B>Property,<B> OnSheetDeactivate </B>Property,<B> PageSetup </B>Property,<B> Parent </B>Property,<B> Previous </B>Property,<B> ProtectContents </B>Property,<B> Visible </B>Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>Activate </B>Method,<B> Copy </B>Method,<B> Delete </B>Method,<B> InsertFile </B>Method,<B> Move </B>Method,<B> PrintOut </B>Method,<B> Protect </B>Method,<B> SaveAs </B>Method,<B> Select </B>Method,<B> Unprotect </B>Method.</P>
<P></P></FONT>
</FONT></BODY></HTML>
