<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetAllSettings Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><H1><A NAME="sec309"></A>GetAllSettingsFunction</H1><P CLASS="t">  </P>
<H2>Description</H2><P>Returns a list of key settings and their respective values from an application’s Windows registry entry.</P>
<H2><A NAME="sec0"></A>Syntax</H2><P><B>GetAllSettings(<I>appname</I></B>, <I>section</I><B>)</B></P>
<P>The <B>GetAllSettings </B>function syntax has these named arguments:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t"></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>appname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">String expression containing the name of the application or project whose key settings are requested.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>section</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">String expression containing the name of the section whose key settings are requested. <B>GetAllSettings</B> returns a <B>Variant</B> whose contents is a two-dimensional array of strings containing all the key settings in the specified section and their corresponding values.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec1"></A>Remarks</H2><P><B>GetAllSettings</B> returns an uninitialized <B>Variant</B> if either <I>appname</I> or <I>section</I> do not exist.</P>
<H2><A NAME="sec2"></A>See Also</H2><P><B>DeleteSetting</B> Statement, <B>GetSetting</B> Function, <B>SaveSetting</B> Statement.</P>
<H2><A NAME="sec3"></A>Example</H2><P>This example first uses the <B>SaveSetting</B> statement to make entries in the Windows registry (or .INI file on 16-bit Windows platforms) for the application specified as <I>appname</I>, then uses the <B>GetAllSettings</B> function to display the settings. Note that application names and <I>section</I> names cannot be retrieved with <B>GetAllSettings</B>. Finally, the <B>DeleteSetting</B> statement removes the application’s entries.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>' Variant to hold 2-dimensional array returned by GetAllSettings.MySettings As Variant
' Place some settings in the registry.(appname := "MyApp", section := "Startup", _
    key := "Top", setting := 75)("MyApp","Startup", "Left", 50)
' Retrieve the settings.= GetAllSettings(appname := "MyApp", section := "Startup")
    For Settings = LBound(MySettings, 1) To UBound(MySettings, 1)
        Debug.Print MySettings(Settings, 0), MySettings(Settings, 1)
    Next Settings("MyApp", "Startup")</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
