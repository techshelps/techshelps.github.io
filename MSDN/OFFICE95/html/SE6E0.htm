<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Toolbar Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Toolbar Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Represents a toolbar, either built-in or custom.</P>
<P CLASS="h"><B>Accessors</B></P>
<P CLASS="t">The <B>Toolbar</B> object is a member of the <B>Toolbars</B> collection. Use the <B>Add</B> method to create a new toolbar and add it to the collection. To access a single member of the collection, use the <B>Toolbars</B> method with the index number or name of the toolbar as an argument.</P>
<P CLASS="t">The toolbar index number represents the position of the toolbar name in the list shown in the Toolbars dialog box (Toolbars command, View menu). Toolbars(1) is at the top of the list; Toolbars(Toolbars.Count) is at the bottom. Built-in toolbars are shown first, with custom toolbars arranged alphabetically after the last built-in toolbar.</P>
<P CLASS="t">The following example moves the Standard toolbar to the bottom of the Microsoft Excel window.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Toolbars(1).Position = xlBottom
</FONT></PRE>
<P CLASS="t">The <B>Name</B> property returns the toolbar name (as shown in the Toolbars dialog box). The <B>Name</B> property is read-only; you cannot change the name of a built-in or custom toolbar. The following example makes the Forms toolbar visible.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Toolbars("forms").Visible = True
</FONT></PRE>
<P CLASS="t">The following example creates a table on worksheet one in the active workbook that contains the names of all the <B>ToolbarButton</B> objects in all the <B>Toolbar</B> objects in the application. The column headings are the <B>Toolbar</B> object names, and the column entries under each heading are the names of the <B>ToolbarButton</B> objects in that <B>Toolbar</B> object. <B>ToolbarButton</B> objects that represent gaps (extended spaces between buttons) have no name; their corresponding cells are therefore blank.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub EnumerateToolbars()
    Worksheets(1).Activate
    For col = 1 To Toolbars.Count
        Cells(1, col) = Toolbars(col).Name
        For rw = 2 To Toolbars(col).ToolbarButtons.Count + 1
            Cells(rw, col) = Toolbars(col).ToolbarButtons(rw - 1).Name
        Next
    Next
End Sub
</FONT></PRE>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>Application </B>Property,<B> BuiltIn </B>Property,<B> Creator </B>Property,<B> Height </B>Property,<B> Left </B>Property,<B> Name </B>Property,<B> Parent </B>Property,<B> Position </B>Property,<B> Protection </B>Property,<B> Top </B>Property,<B> Visible </B>Property,<B> Width </B>Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>Delete </B>Method,<B> Reset </B>Method,<B> ToolbarButtons </B>Method.</P>
<P></P></FONT>
</FONT></BODY></HTML>
