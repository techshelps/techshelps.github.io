<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso8859-1">


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Choose Function</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h1><a name="sec241"></a>Choose Function</h1>

<h2><a name="sec242"></a>Description</h2>

<p>Selects and returns a value from a list of arguments.</p>

<h2><a name="sec243"></a>Syntax</h2>

<p><b>Choose(</b><i>index</i><b>, </b><i>choice<SPAN CLASS="Symbol"></i>-</SPAN><i>1</i>[<i>,
choice<SPAN CLASS="Symbol"></i>-</SPAN><i>2, ... </i>[<b>,</b><i>choice<SPAN CLASS="Symbol"></i>-</SPAN><i>n</i>]]<b>)</b></p>

<p>The <b>Choose</b> function syntax has these parts:</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Part</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>index</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Numeric expression or field that results
        in a value between 1 and the number of available choices.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>choice</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><b>Variant</b> expression containing one
        of the possible choices.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<h2><a name="sec244"></a>Remarks</h2>

<p><b>Choose</b> returns a value from the list of choices based
on the value of <i>index</i>. If <i>index</i> is 1, <b>Choose</b>
returns the first choice in the list; if <i>index</i> is 2, it
returns the second choice, and so on.</p>

<p>You can use <b>Choose</b> to look up a value in a list of
possibilities. For example, if <i>index</i> evaluates to 3 and <i>choice<SPAN CLASS="Symbol"></i>-</SPAN><i>1
</i>= &#147;one&#148;,<i> choice<SPAN CLASS="Symbol"></i>-</SPAN><i>2 </i>= &#147;two&#148;,<i>
</i>and<i> choice<SPAN CLASS="Symbol"></i>-</SPAN><i>3</i> = &#147;three&#148;, <b>Choose</b>
returns &#147;three&#148;. This capability is particularly useful
if <i>index</i> represents the value in an option group.</p>

<p><b>Choose</b> evaluates every choice in the list, even though
it returns only one. For this reason, you should watch for
undesirable side effects. For example, if you use the <b>MsgBox</b>
function as part of an expression in all the choices, a message
box will be displayed for each choice as it is evaluated, even
though <b>Choose</b> returns the value of only one of them.</p>

<p>The <b>Choose</b> function returns a #Null# if <i>index</i> is
less than 1 or greater than the number of choices listed.</p>

<p>If <i>index</i> is not a whole number, it is rounded to the
nearest whole number before being evaluated.</p>

<h2><a name="sec245"></a>See Also</h2>

<p><b>IIf</b> Function.</p>

<h2><a name="sec246"></a>Specifics (Microsoft Access)</h2>

<p>The <b>Choose</b> function is most useful in a calculated
control on a form or report. For example, you can use the <b>Choose</b>
function to set the value of a control based on the value of
another field. Set the <b>ControlSource</b> property of the
control to an expression containing the <b>Choose</b> function.</p>

<p class="spacing"><br>
</p>

<pre>= Choose([ShipVia], &quot;Speedy&quot;, &quot;United&quot;, &quot;Federal&quot;)
</pre>

<p>In the preceding example, if ShipVia contains 1, the <b>Choose</b>
function returns the first string, &#147;Speedy&#148;. If it
contains 2, the function returns the second string,
&#147;United&#148;, and so on. If ShipVia contains 0, the <b>Choose</b>
function returns a <b>Null</b>.</p>

<p>The next example shows how you can ensure that a string is
returned even if the field contains 0.</p>

<p class="spacing"><br>
</p>

<pre>= Choose([ShipVia] + 1, &quot;none&quot;, &quot;Speedy&quot;, &quot;United&quot;, &quot;Federal&quot;)
</pre>

<p><b>Note</b> In a Visual Basic module, you may want to use the
more full-featured <b>Select Case</b> statement to return a value
from a set of several choices.</p>

<h2><a name="sec247"></a>Example</h2>

<p>This example uses the <b>Choose</b> function to display a name
in response to an index passed into the procedure in the Ind
parameter.</p>

<p class="spacing"><br>
</p>

<pre>Function  GetChoice(Ind As Integer)
    GetChoice =  Choose(Ind, &quot;Speedy&quot;, &quot;United&quot;, &quot;Federal&quot;)Function
</pre>

<p>You can use the <b>Choose</b> function to set the value of one
field based on the value of another field. For example, suppose
you have an Orders table that contains a field called OrderDate.
You could create a calculated control on a form to display the
day of the week on which an order was placed. The following
example uses the <b>Weekday</b> function to return the numeric
representation of the day of the week corresponding to the order
date. The <b>Choose</b> function returns a string containing the
name of the day of the week based on that numeric value.</p>

<p class="spacing"><br>
</p>

<pre>= Choose(Weekday([OrderDate]) - 1, &quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, _     &quot;Thursday&quot;, &quot;Friday&quot;)
</pre>
</FONT></FONT></BODY>
</html>
