<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding and Deleting Toolbar Buttons</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Adding and Deleting Toolbar Buttons</H2><P CLASS="t">If you want a specific toolbar button to appear on a toolbar only under certain conditions, you can add and delete the button at run time. When you add a toolbar button, you can attach a macro to it or change the ToolTip text associated with it.</P>
<P CLASS="t">The <B>Add</B> method for the <B>ToolbarButtons</B> collection adds a new toolbar button to an existing built-in or custom toolbar. The <B><I>onAction</I></B> argument of the <B>Add</B> method specifies the procedure that will run when the user clicks the toolbar button.</P>
<P CLASS="t">Use the <B>Name</B> property for the new toolbar buttons to set the ToolTip text (the text that appears beneath a toolbar button when the mouse pointer is directly over that button). To set the status bar text (the text that appears appears in the status bar when the mouse pointer is directly over a button), use the <B><I>statusBar</I></B> argument of the <B>Add</B> method.</P>
<P CLASS="t">The following example adds two toolbar buttons, separated by a gap, to the toolbar "MyAppTools."</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">With Toolbars("MyAppTools").ToolbarButtons

    ' Add a button with the clock face
    Set newButton1 = .Add( _
        Button:=213, _
        before:=1, _
        OnAction:="Module1.MyScheduler", _
        Enabled:=True, _
        Pushed:=False, _
        StatusBar:="Run custom scheduler")    ' sets status bar text
    newButton1.Name = "Scheduler"            ' sets tool tip text

    ' Add a button with the scissors face
    Set newButton2 = .Add( _
        Button:=12, _
        before:=2, _
        OnAction:="Module1.MyCutProc", _
        Enabled:=True, _
        Pushed:=False, _
        StatusBar:="Custom cut command")        ' sets status bar text
    newButton2.Name = "Custom Cut"            ' sets tool tip text

    ' Add a space between the buttons
    .Add Button:=0, before:=2
End With
</FONT></PRE>
<P CLASS="t">If you don't specify a position for a new toolbar button, the button is added at the end of the toolbar. If you don't specify a procedure to run when the toolbar button is clicked and it's a built-in button, the default action occurs. If you don't specify a procedure for a custom toolbar button, nothing happens when the button is clicked.</P>
<P CLASS="t">The <B>Delete</B> method deletes a toolbar button. The following example deletes toolbar button three from the Standard toolbar.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Toolbars("Standard").ToolbarButtons(3).Delete
</FONT></PRE></FONT>
</FONT></BODY></HTML>
