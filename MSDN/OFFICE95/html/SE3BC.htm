<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Deftype Statements</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Def<I>type</I> Statements</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Used at module level to set the default data type for variables and <B>Function</B> procedures whose names start with the specified characters.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>DefBool</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefInt</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefLng</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefCur</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefSng</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefDbl</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefDate</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefStr</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefObj</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="syn"><B>DefVar</B> <I>letterrange</I>[,<I>letterrange</I>] . . .</P>
<P CLASS="t">The argument <I>letterrange</I> has the following syntax:</P>
<P CLASS="syn"><I>letter1</I>[<B>-</B><I>letter2</I>]</P>
<P CLASS="t">The arguments letter1 and letter2 specify the name range for which you can set a default data type. Each argument represents the first letter of the variable or <B>Function</B> procedure name and can be any letter of the alphabet. The case of letters in letterrange isn't significant.</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">The statement name determines the data type:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"><COL WIDTH="2pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Statement</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Data Type</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefBool</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Boolean</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefInt</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Integer</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefLng</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Long</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefCur</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Currency</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefSng</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Single</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefDbl</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Double</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefDate</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Date</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefStr</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>String</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefObj</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Object</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>DefVar</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Variant</B></P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">For example, in the following program fragment, Message is a string variable:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">DefStr A-Q
.<B> </B>.<B> </B>.
Message = "Out of stack space."
</FONT></PRE>
<P CLASS="t">A <B>Def</B><I>type</I> statement affects only the module where it is used. For example, a <B>DefInt</B> statement in one module affects only the default data type of variables and <B>Function</B> procedures declared in that module; the default data type of variables in other modules is unaffected. If not explicitly declared with a <B>Def</B><I>type</I> statement, the default data type for all variables and all <B>Function </B>procedures is <B>Variant</B>.</P>
<P CLASS="t">When you specify a letter range, it usually defines the data type for variables that begin with letters in the lower 128 characters of the character set. However, when you specify the letter range A-Z, you set the default to the specified data type for all variables, including any that begin with international characters from the extended part of the character set (128-255).</P>
<P CLASS="t">Once the range A-Z has been specified, you can't further redefine any subranges of variables using <B>Def</B><I>type</I> statements. In fact, once a range has been specified, if you include a previously defined letter in another <B>Def</B><I>type</I> statement, an error occurs. However, you can explicitly specify the data type of any variable, defined or not, using a <B>Dim</B> statement with an <B>As</B> <B><I>type</I></B> clause. For example, you can use the following code at module level to define a variable as a <B>Double</B> even though the default data type is <B>Integer</B>:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">DefInt A-Z
Dim TaxRate As Double
</FONT></PRE>
<P CLASS="t"><B>Def</B><I>type</I> statements don't affect elements of user-defined types since they must be explicitly declared.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Let</B> Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example shows various uses of the <B>Def</B><I>type</I> statements to set default data types of variables and function procedures whose names start with specified characters. The default data type can be overridden only by explicit assignment using the <B>Dim</B> statement. <B>Def</B><I>type</I> statements can only be used at the module-level.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">' Variable names beginning with A through K default to Integer.
DefInt A-K
' Variable names beginning with L through Z default to String.
DefStr L-Z
CalcVar = 4    ' Initialize Integer.
StringVar = "Hello there"    ' Initialize String.
AnyVar = "Hello"     ' Causes "Type mismatch" error.
Dim Calc As Double    ' Explicitly set the type to Double.
Calc = 2.3455    ' Assign a Double.

' Deftype statements also apply to function procedures.
CalcNum = ATestFunction(4)    ' Call user-defined function.

' ATestFunction function procedure definition.
Function ATestFunction(INumber)
    ATestFunction = INumber * 2    ' Return value is an integer.
End Function
</FONT></PRE>
<P></P></FONT>
</FONT></BODY></HTML>
