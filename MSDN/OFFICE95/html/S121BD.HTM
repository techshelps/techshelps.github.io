<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TypeName Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1>TypeName Function</H1><P CLASS="t">  </P>
<H2>Description</H2><P CLASS="t">Returns a string that provides information about a variable.</P>
<H2>Syntax</H2><P CLASS="syn"><B>TypeName(</B><I>varname</I><B>)</B></P>
<P CLASS="t">The <I>varname</I> argument can be any variable except a variable of a user-defined type.</P>
<H2>Remarks</H2><P CLASS="t">The string returned by <B>TypeName</B> can be any one of the following:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="115pt" VALIGN="TOP"><COL WIDTH="253pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>String Returned</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Variable contains</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>objecttype</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">An OLE Automation object whose type is <I>objecttype</I>.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Byte</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A byte</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Integer </P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">An integer.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Long</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A long integer.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Single</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A single-precision floating-point number.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Double</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A double-precision floating-point number.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Currency</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A currency value.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Date</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A date.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">String</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A string.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Boolean</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A Boolean value.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Error</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">An error value.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Empty</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Uninitialized.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Null</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">No valid data.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Object</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">An object that supports OLE Automation.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Unknown</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">An OLE Automation object whose type is unknown.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Nothing</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">An object variable that doesn’t refer to an object.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">If <I>varname</I> is an array, the returned string can be any one of the possible returned strings (or <B>Variant</B>) with empty parentheses appended. For example, if <I>varname</I> is an array of integers, <B>TypeName</B> returns “Integer()”.</P>
<H2>See Also</H2><P CLASS="t">Data Type Summary, <B>IsArray</B> Function, <B>IsDate</B> Function, <B>IsEmpty</B> Function, <B>IsError</B> Function, <B>IsMissing</B> Function, <B>IsNull</B> Function, <B>IsNumeric</B> Function, <B>IsObject</B> Function, <B>Variant</B> Data Type, <B>VarType</B> Function.</P>
<H2>Example</H2><P CLASS="t">This example uses the <B>TypeName</B> function to return information about a variable.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>' Declare variables.StrVar As String, IntVar As Integer, CurVar As CurrencyArrayVar (1 To 5) As Integer= Null                            ' Assign Null value.= TypeName(StrVar)                ' Returns "String".= TypeName(IntVar)                ' Returns "Integer".= TypeName(CurVar)                ' Returns "Currency".= TypeName(NullVar)                ' Returns "Null".= TypeName(ArrayVar)                ' Returns "Integer()".
</PRE>
<P CLASS="t">  </P>
<P CLASS="t">The following example creates several object variables and passes them to the <B>TypeName</B> function.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub ObjectTypes()dbs As Database, tdf As TableDeffld As Field

' Get current database.dbs = CurrentDb
' Return TableDef object pointing to Orders table.tdf = dbs.TableDefs("Orders")
' Return Field object pointing to OrderDate field.fld = tdf.Fields("OrderDate")
' Print value returned by TypeName for each object..Print TypeName(dbs).Print TypeName(tdf).Print TypeName(fld)Sub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P></FONT></FONT></BODY></html>
