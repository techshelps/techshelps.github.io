<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ObjectVerbs Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec107"></A>ObjectVerbs Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec108"></A>Applies To</H2><P>Bound Object Frame Control, Chart Control, Unbound Object Frame Control.</P>
<H2><A NAME="sec109"></A>Description</H2><P>You can use the <B>ObjectVerbs</B> property in Visual Basic to determine the list of verbs an OLE object supports. A verb, such as edit or play, specifies an operation a user can perform on an OLE object.</P>
<H2><A NAME="sec110"></A>Setting</H2><P>The <B>ObjectVerbs</B> property setting is a zero-based string array.</P>
<P>This property setting isn’t available in Design view and is read-only in other views.</P>
<H2><A NAME="sec111"></A>Remarks</H2><P>You can use the <B>ObjectVerbs</B> property with the ObjectVerbsCount property to display a list of the verbs supported by an OLE object. The Verb property uses this list of verbs to determine which operation to perform when an OLE object is activated (when the Action property is set to <B>acOLEActivate</B>).</P>
<P>The <B>Verb</B> property setting is the position of a particular verb in the list of verbs returned by the <B>ObjectVerbs</B> property. For example, 1 specifies the first verb in the list (the Visual Basic command ObjectVerbs(0), or the first verb in the <B>ObjectVerbs</B> property array), 2 specifies the second verb in the list (the Visual Basic command ObjectVerbs(1), or the second verb in the <B>ObjectVerbs</B> property array), and so on.</P>
<P>The first verb in the <B>ObjectVerbs</B> property array, called by the Visual Basic command ObjectVerbs(0), is the default verb. If the <B>Verb</B> property hasn’t been set, this verb specifies the operation performed when the OLE object is activated.</P>
<P>Applications that expose OLE objects typically include the Object command on the Edit menu. When the user clicks this command, a submenu displays the object’s verbs. You can use the <B>ObjectVerbs</B> and <B>ObjectVerbsCount</B> properties to display a list of verbs in a form or report instead of on a menu.</P>
<P>The list of verbs an object supports varies, depending on the state of the object. To update the list of verbs an object supports, set the control’s <B>Action</B> property to <B>acOLEFetchVerbs</B>. Be sure to update the list of verbs before presenting it to the user.</P>
<H2><A NAME="sec112"></A>See Also</H2><P><B>Action</B> Property, <B>ObjectVerbsCount</B> Property, <B>Verb</B> Property.</P>
<H2><A NAME="sec113"></A>Example</H2><P>The following example returns the verbs supported by the OLE object in the OLE1 control and displays each verb in a message box.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Function GetVerbList(frm As Form) As Integer
    Dim intX As Integer, intNumVerbs As Integer
    Dim strVerbListArray() As String
    frm!OLE1.Action = acOLEFetchVerbs    ' Update verb list.
    intNumVerbs = frm!OLE1.ObjectVerbsCount
    ReDim strVerbListArray(intNumVerbs)
        For intX = 0 To intNumVerbs - 1    ' For each verb.
        ' Return verb.
        strVerbListArray(intX) = frm!OLE1.ObjectVerbs(intX)
        MsgBox strVerbListArray(intX)    ' Display verb in message box.
    Next intXFunction
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
