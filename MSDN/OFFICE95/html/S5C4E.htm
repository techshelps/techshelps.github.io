<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Appendix A Writing Code for International Use</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1 CLASS="cht">Appendix A Writing Code for International Use</H1><P CLASS="t">Using Visual Basic, it's possible to distribute Microsoft Excel applications to users in countries whose native language isn't the one you wrote your code in. This appendix offers guidelines for choosing a language to write your code in and provides tips for writing and distributing applications for international use. You'll also learn techniques to ensure that your code runs as you expect it to run — and more important, as your users expect it to run — no matter where you transport it.</P>
<P CLASS="t">In this appendix, an <I>application</I> is assumed to be a workbook or collection of workbooks that performs a specific task and that runs within Microsoft Excel. A <I>locale</I> is the country or locale selected on the Regional Settings tab in the Regional Settings Properties dialog box (Control Panel). A <I>language</I> is the country or language selected in the Language/Country box on the Module General Tab in the Options dialog box (Tools menu). Finally, an <I>object library</I> is a file that determines what words and symbols Visual Basic can understand — that is, the names of objects, properties, methods, Visual Basic statements, and so on that you type in a Visual Basic module. These words and symbols vary from language to language.</P></FONT>
</FONT></BODY></HTML>
