<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Resume Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Resume Statement</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Resumes execution after an error-handling routine is finished.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Resume</B> [<B>0</B>]</P>
<P CLASS="syn"><B>Resume Next</B> </P>
<P CLASS="syn"><B>Resume</B> <I>line</I></P>
<P CLASS="t">The <B>Resume</B> statement syntax can have any of the following forms:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="258pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Statement</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Resume</B> [<B>0</B>]</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">If the error occurred in the same procedure as the error handler, execution resumes with the one that caused the error. If the error occurred in another procedure, execution resumes at the statement that last called out of the procedure containing the error-handling routine.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Resume Next</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">If the error occurred in the same procedure as the error handler, execution resumes with the statement immediately following the statement that caused the error. If the error occurred in another procedure, execution resumes with the statement immediately following the statement that last called out of the procedure containing the error-handling routine.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Resume</B> <I>line</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Execution resumes at <I>line</I>, which is a line label or line number. The argument <I>line</I> must be in the same procedure as the error handler.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">If you use a <B>Resume</B> statement anywhere except in an error-handling routine, an error occurs.</P>
<P CLASS="t">When an error-handling routine is active and the end of the procedure (an <B>End Sub</B>, <B>End Function</B>, or <B>End Property</B> statement) is encountered before a <B>Resume</B> statement is encountered, an error occurs because a logical error is presumed to have been made inadvertently. However, if an <B>Exit Sub</B>, <B>Exit Function</B>, or <B>Exit Property</B> statement is encountered while an error handler is active, no error occurs because it is considered a deliberate redirection of execution.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>On Error</B> Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example uses the <B>Resume</B> statement to end error handling in a procedure and resume execution with the statement that caused the error. Error number 55 is generated to illustrate its usage.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub ResumeStatementDemo()
    On Error GoTo ErrorHandler    ' Enable error-handling routine.
    Open "TESTFILE" For Output As #1    ' Open file for output.
    Kill "TESTFILE"    ' Attempt to delete open file.
    Exit Sub    ' Exit Sub before error handler.
ErrorHandler:    ' Error-handling routine.
    Select Case Err    ' Evaluate Error Number.
        Case 55    ' "File already open" error.
            Close #1    ' Close open file.
        Case Else
            ' Handle other situations here... 
    End Select
    Resume    ' Resume execution at same line
    ' that caused the error.
End Sub
</FONT></PRE></FONT>
</FONT></BODY></HTML>
