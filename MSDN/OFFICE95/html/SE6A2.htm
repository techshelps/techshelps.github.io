<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLError Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>SQLError Function</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">In Microsoft Excel for Windows 95, do not use <B>SQLError</B> and the other ODBC functions in the XLODBC.XLA add-in; use the objects, methods, and properties in the Data Access Objects (DAO) library instead. </P>
<P CLASS="t"><B>SQLError</B> returns detailed error information when called after one of the other ODBC functions fails. If <B>SQLError</B> itself fails, it cannot return error information.</P>
<P CLASS="t">Error information is defined and stored in memory whenever an ODBC function fails. To make the error information available, call the <B>SQLError</B> function.</P>
<P CLASS="t"><B>SQLError</B> provides detailed error information only about errors that occur when an ODBC function fails. It does not provide information about Microsoft Excel errors.</P>
<P CLASS="t">This function is contained in the XLODBC.XLA add-in (ODBC Add-In on the Macintosh). Before you use the function, you must establish a reference to the add-in using the References command (Tools menu).</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>SQLError()</B></P>
<P CLASS="h"><B>Return Value</B></P>
<P CLASS="t">If there are errors, <B>SQLError</B> returns detailed error information in a two-dimensional array in which each row describes one error.</P>
<P CLASS="t">Each row has the following three fields for information obtained through the <B>SQLError</B> function call in ODBC:</P>
<P CLASS="lt1">A character string indicating the ODBC error class and subclass. </P>
<P CLASS="lt1">A numeric value indicating the data source native error code.</P>
<P CLASS="lt1">A text message describing the error.</P>
<P></P>
<P CLASS="t">If a function call generates multiple errors, <B>SQLError</B> creates a row for each error.</P>
<P CLASS="t">If there are no errors from a previous ODBC function call, this function returns only Error 2042.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>SQLBind</B> Function, <B>SQLClose</B> Function, <B>SQLExecQuery</B> Function, <B>SQLGetSchema</B> Function, <B>SQLOpen</B> Function, <B>SQLRequest</B> Function, <B>SQLRetrieve</B> Function, <B>SQLRetrieveToFile</B> Function.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example generates an intentional error by attempting to open a connection to the NWind sample database using an incorrect connection string (NWind is misspelled). The error information is displayed on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">chan = SQLOpen("DSN=NWin")
returnArray = SQLError()
For i = LBound(returnArray, 1) To UBound(returnArray, 1)
    Worksheets("Sheet1").Cells(1, i).Formula = returnArray(i)
Next i
SQLClose chan
</FONT></PRE></FONT>
</FONT></BODY></HTML>
