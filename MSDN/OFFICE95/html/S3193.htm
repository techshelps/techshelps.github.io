<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Files$()</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H1 CLASS="h2">Files$()</H1><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Files$(</B><I>FileSpec$</I><B>)</B></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Returns the first filename that matches the file specification <I>FileSpec$</I>. If you specify a period (.) (Windows) or colon (:) (Macintosh) as the <I>FileSpec$</I>, <B>Files$</B><B>()</B> returns the current path. In Windows, you can use the MS-DOS wildcard characters — the asterisk (*) and the question mark (?)&nbsp;—&nbsp;to specify files. On the Macintosh, you use <B>MacID$</B><B>()</B> to specify files of a certain type.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="274pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>FileSpec$</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The file specification. If you omit the file specification, the next file that matches the most recently used <I>FileSpec$</I> is returned.</P>
<P CLASS="tt">In Windows, you can specify a path as part of the file specification (for example, C:\DOCS\*.TXT). On the Macintosh, you produce the same result by changing the current folder with <B>ChDir</B> and then using <B>MacID$</B><B>()</B> to specify files of a certain type (for example, MacID$("TEXT")).</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">By specifying <I>FileSpec$</I> on the first iteration and omitting it thereafter, you can use <B>Files$</B><B>()</B> to generate a list of files that match <I>FileSpec$</I> (as in the final example in this reference entry)<I>.</I> If no files match, an empty string ("") is returned.</P>
<P CLASS="t">Note that if the path or filename returned by <B>Files$</B><B>()</B> contains one or more spaces, the entire return value is enclosed in quotation marks.</P>
<P CLASS="h"><B>Examples</B></P>
<P CLASS="t">This Windows example returns the first file ending with the .DOC filename extension found in the current folder:</P>
<P CLASS="spacing"><BR></P>
<PRE>a$&nbsp;=&nbsp;Files$("*.DOC")
</PRE>
<P CLASS="t">The following is the same example, rewritten for the Macintosh. W6BN is the four-character sequence that specifies the Word Document file type.</P>
<P CLASS="spacing"><BR></P>
<PRE>a$ = Files$(MacID$("W6BN"))
</PRE>
<P CLASS="t">The following examples return the current path (for example, "C:\WINWORD" or "HD:WORD 6:"):</P>
<P CLASS="spacing"><BR></P>
<PRE>CurDir$&nbsp;=&nbsp;Files$(".")    'Windows example
CurDir$&nbsp;=&nbsp;Files$(":")    'Macintosh example
</PRE>
<P CLASS="t">If NOTE.DOC exists in the current folder, the following example opens the document. If NOTE.DOC does not exist, a message box is displayed.</P>
<P CLASS="spacing"><BR></P>
<PRE>If Files$("NOTE.DOC") &lt;&gt; "" Then
    FileOpen "NOTE.DOC"
Else
    MsgBox "File not found in current folder."
End If
</PRE>
<P CLASS="t">The following example fills an array with the names of all files in the current folder. The instructions first count the files to determine the size of the array. Then they define the array, fill it with the filenames, and sort the elements. You could use this array to present a list of files in a user-defined dialog box or to open and perform an operation on each file in the array. On the Macintosh, substitute MacID$("****") for "*.*" in the file specifications.</P>
<P CLASS="spacing"><BR></P>
<PRE>temp$&nbsp;=&nbsp;Files$("*.*")
count&nbsp;=&nbsp;- 1
While temp$ &lt;&gt; ""
    count&nbsp;=&nbsp;count + 1
    temp$&nbsp;=&nbsp;Files$()
Wend
If count &gt; -1 Then
    Dim list$(count)
    list$(0)&nbsp;=&nbsp;Files$("*.*")
    For i&nbsp;=&nbsp;1 To count
        list$(i)&nbsp;=&nbsp;Files$()
    Next i
    SortArray list$()
    MsgBox Str$(count + 1) + " files; 1st in array is " + list$(0)
Else
    MsgBox "No files in current folder."
End If
</PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>FileFind</B>, <B>MacID$</B><B>()</B></P>
<P></P></FONT></FONT></BODY></HTML>
