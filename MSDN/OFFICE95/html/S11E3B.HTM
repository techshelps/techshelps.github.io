<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RecordsetClone Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec26"></A>RecordsetClone Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec27"></A>Applies To</H2><P>Form.</P>
<H2><A NAME="sec28"></A>Description</H2><P>You can use the <B>RecordsetClone</B> property to refer to a form’s <B>Recordset</B> object specified by the form’s <B>RecordSource</B> property.</P>
<H2><A NAME="sec29"></A>Setting</H2><P>The <B>RecordsetClone</B> property setting is a copy of the underlying query or table specified by the form’s <B>RecordSource</B> property. If a form is based on a query, for example, referring to the <B>RecordsetClone</B> property is the equivalent of cloning a <B>Recordset</B> object using the same query. If you then apply a filter to the form, the <B>Recordset</B> object reflects the filtering.</P>
<P>The <B>RecordsetClone</B> property is available only in Visual Basic and is read-only in all views.</P>
<H2><A NAME="sec30"></A>Remarks</H2><P>You use the <B>RecordsetClone</B> property to navigate or operate on a form’s records independent of the form itself. For example, you can use the <B>RecordsetClone</B> property when you want to use a method, such as the <B>FindFirst</B> method, that can’t be used with forms. The <B>RecordsetClone</B> property provides access to all the methods and properties that apply to a <B>Recordset</B> object.</P>
<P>When a new <B>Recordset</B> object is opened, its first record is the current record. If you use one of the <B>Find</B> or <B>Move</B> methods to make any record in the <B>Recordset</B> object current, you must synchronize the current record in the <B>Recordset</B> object with the form’s current record by assigning the value of the form’s <B>Bookmark</B> property to a string variable, and then assign the string variable to the data access <B>Bookmark</B> property of the <B>Recordset</B> object.</P>
<P>You can use the <B>RecordCount</B> property to count the number of records in a <B>Recordset</B> object. The following example shows how you can combine the <B>RecordCount</B> property and the <B>RecordsetClone</B> property to count the records in a form.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Forms!Orders.RecordsetClone.MoveLast= "My form contains " &amp; Forms!Orders.RecordsetClone.RecordCount= Msg &amp; " records.", vbInformation, "Record Count"Msg
</PRE>
<P CLASS="t">  </P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   If you close the form or if you change the form’s <B>RecordSource</B> property, the <B>Recordset</B> object is no longer valid. If you subsequently refer to the <B>Recordset</B> object or to previously saved bookmarks in the form or the <B>Recordset</B> object, an error will occur.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec31"></A>See Also</H2><P><B>FindFirst</B>,<B> FindLast</B>,<B> FindNext</B>,<B> FindPrevious </B>Methods; <B>MoveFirst</B>, <B>MoveLast</B>, <B>MoveNext</B>, <B>MovePrevious</B> Methods; <B>Recordset</B> Object.</P>
<H2><A NAME="sec32"></A>Example</H2><P>The following example uses the <B>RecordsetClone</B> property to create a <B>Recordset</B> object from the Orders form and then prints the names of the fields in the Debug window.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub Print_Field_Names()
    Dim rs As Recordset, intI As Integer
    Set rs = Me.RecordsetClone
    For intI = 0 To rs.Fields.Count - 1
        Debug.Print rs.Fields(intI).Name        ' Print field names.
    Next intISub
</PRE>
<P CLASS="t">  </P>
<P>The next example uses the <B>RecordsetClone</B> property and the <B>Recordset</B> object to synchronize a recordset’s record with the form’s current record. When a company name is selected from a combo box, the <B>FindFirst</B> method is used to locate the record for that company and the <B>Recordset</B> object’s <B>Bookmark</B> property is assigned to the form’s <B>Bookmark</B> property causing the form to display the found record.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub CompanyName_AfterUpdate()
    Dim rs As Recordset
    Dim strSearchName As String
    Set rs = Me.RecordsetClone
    strSearchName = Me!CompanyName
    rs.FindFirst "[CompanyName] = '" &amp; strSearchName &amp; "'"
        If rs.NoMatch Then
            MsgBox "Record not found"
        Else
            Me.Bookmark = rs.Bookmark
        End If
    rs.CloseSub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
