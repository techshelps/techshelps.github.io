<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec453"></A>Set Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec454"></A>Description</H2><P>Assigns an object reference to a variable or property.</P>
<H2><A NAME="sec455"></A>Syntax</H2><P><B>Set</B> <I>objectvar </I><B>=</B> {[<B>New</B>] <I>objectexpression</I> | <B>Nothing</B>}</P>
<P>The <B>Set</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="109pt" VALIGN="TOP"><COL WIDTH="259pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>objectvar</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Name of the variable or property; follows standard variable naming conventions.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>New</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Keyword used to create a new instance of a Visual Basic object or an externally creatable OLE Automation object. The <B>New</B> keyword can’t be used to create new instances of any intrinsic data type and can’t be used to create dependent OLE Automation objects.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>objectexpression</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Expression consisting of the name of an object, another declared variable of the same object type, or a function or method that returns an object of the same object type.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Nothing</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Discontinues association of <I>objectvar</I> with any specific object. Assigning <I>objectvar</I> to <B>Nothing</B> releases all the system and memory resources associated with the previously referenced object when no other variable refers to it.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec456"></A>Remarks</H2><P>To be valid, <I>objectvar</I> must be an object type consistent with the object being assigned to it.</P>
<P>The <B>Dim</B>, <B>Private</B>, <B>Public</B>, <B>ReDim</B>, and <B>Static</B> statements only declare a variable that refers to an object. No actual object is referred to until you use the <B>Set</B> statement to assign a specific object.</P>
<P>The following example illustrates how <B>Dim</B> is used to formally declare the variable MyDatabase as Database. No instance of Database actually exists. <B>Set</B> then assigns a reference to a new instance of Database to the MyDatabase variable.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Dim MyDatabase As DatabaseMyDatabase = New Database
</PRE>
<P CLASS="t">  </P>
<P>Generally, when you use <B>Set</B> to assign an object reference to a variable, no copy of the object is created for that variable. Instead, a reference to the object is created. More than one object variable can refer to the same object. Because these variables are references to (rather than copies of) the object, any change in the object is reflected in all variables that refer to it.</P>
<P>However, when you use the <B>New</B> keyword in the <B>Set</B> statement, you are actually creating an instance of the object. The new instance is not loaded until the first reference is made to it or one of the object’s members.</P>
<H2><A NAME="sec457"></A>See Also</H2><P><B>Dim</B> Statement, <B>Let</B> Statement, <B>Private</B> Statement, <B>Public</B> Statement, <B>ReDim</B> Statement, <B>Static</B> Statement.</P>
<H2><A NAME="sec458"></A>Example</H2><P>This example uses the <B>Set</B> statement to assign object references to variables. YourObject is assumed to be a valid object with a Text property.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Set MyObject = YourObject            ' Assign object reference.
' MyObject and YourObject refer to the same object..Text = "Hello World"        ' Initialize property.= MyObject.Text                ' Returns "Hello World".
' Discontinue association. MyObject no longer refers to YourObject.MyObject = Nothing                ' Release the object.
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P></FONT></FONT></BODY></HTML>
