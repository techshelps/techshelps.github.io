<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Getting Information from a Dialog Box</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Getting Information from a Dialog Box</H2><P CLASS="t">You can read and set the state of dialog box controls at any time. Typically, you set initial conditions before the dialog sheet runs or use a procedure assigned to the <B>DialogFrame </B>object to set controls when the dialog box starts. You will usually read controls when a specific event occurs in the dialog box or when the user dismisses the dialog box.</P>
<P CLASS="t">The <B>ChangeColor</B> procedure runs whenever the user clicks either Test or OK. This procedure saves the current color of the selected object and then reads the option buttons to determine the new color.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub ChangeColor()
    Dim selInterior As Interior
    With DialogSheets("ChangeColorDialog")
        Set selInterior = Selection.Interior
        saveInteriorColor = selInterior.ColorIndex
        selInterior.ColorIndex = colors(GetOptionIndex(.OptionButtons))
    End With
End Sub
</FONT></PRE>
<P CLASS="t">The <B>GetOptionIndex</B> function scans the option buttons and returns the index value of the button that's turned on (the button's ordinal value in the button tab order). This index number is used to return the correct color value from the colors array, as in the following example.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Function GetOptionIndex(opBtns As OptionButtons)
    For Each ob In opBtns
        If ob.Value = xlOn Then
            GetOptionIndex = ob.Index
            Exit Function
        End If
    Next
End Function
</FONT></PRE>
<P CLASS="t">The dialog box also has an Undo button that causes the <B>UndoColor</B> procedure to run. This procedure saves the current color and then resets the color to the saved value.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub UndoColor()
    With Selection.Interior
        temp = .ColorIndex
        .ColorIndex = saveInteriorColor
        saveInteriorColor = temp
    End With
End Sub
</FONT></PRE></FONT>
</FONT></BODY></HTML>
