<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declare Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Declare Statement</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Used at module level to declare references to external procedures in a dynamic-link library (DLL) or Macintosh code resource.</P>
<P CLASS="h"><B>Syntax 1</B></P>
<P CLASS="syn">[<B>Public</B> | <B>Private</B> ] <B>Declare</B> <B>Sub</B> <I>name</I> [<B>CDecl</B>] <B>Lib</B> <B>"</B><I>libname</I><B>"</B> [<B>Alias</B> <B>"</B><I>aliasname</I><B>"</B> ][<B>(</B>[<I>arglist</I>]<B>)</B>]</P>
<P CLASS="h"><B>Syntax 2</B></P>
<P CLASS="syn">[<B>Public</B> | <B>Private</B> ] <B>Declare</B> <B>Function</B> <I>name </I>[<B>CDecl</B>] <B>Lib</B> <B>"</B><I>libname</I><B>"</B> [<B>Alias</B> <B>"</B><I>aliasname</I><B>" </B>] [<B>(</B>[<I>arglist</I>]<B>)</B>][<B>As</B> <I>type</I>]</P>
<P CLASS="t">The <B>Declare</B> statement syntax has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Public</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Used to declare procedures that are available to all other procedures in all modules.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Private</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Used to declare procedures that are available only within the module where the declaration is made.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Sub</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Indicates that the procedure doesn't return a value.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Function</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Indicates that the procedure returns a value that can be used in an expression.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>name</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Any valid procedure name.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>CDecl</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">For the Macintosh only. Indicates that the procedure uses C language argument order, naming conventions, and calling conventions.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Lib</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Indicates that a DLL or code resource contains the procedure being declared. The <B>Lib</B> clause is required for all declarations.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>libname</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Name of the DLL or code resource that contains the declared procedure.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Alias</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Indicates that the procedure being called has another name in the DLL or is in a Macintosh code resource. This is useful when the external procedure name is the same as a keyword. You can also use <B>Alias</B> when a DLL procedure has the same name as a <B>Public</B> variable or constant or any other procedure in the same scope. <B>Alias</B> is also useful if any characters in the DLL procedure name aren't allowed in names.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>aliasname</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Name of the procedure in the DLL or code resource.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">In Microsoft Windows, if the first character is not a #, <I>aliasname</I> is the name of the procedure's entry point in the DLL. If # is the first character, all characters that follow must indicate the ordinal number of the procedure's entry point.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">On the Macintosh, the syntax to specify the code resource type is as follows:</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>"</B>[<I>resourcetype</I>]<B>$</B>[<I>resourcename</I>]<B>"</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The <I>resourcetype</I> is any valid 4-character constant. If omitted, the default  <I>resourcetype</I> is CODE. The <I>resourcename</I> is the procedure name in the code resource. If <I>resourcename</I> is omitted, it is assumed to be the same as <I>name</I>.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>arglist</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">List of variables representing arguments that are passed to the procedure when it is called.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>type</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Data type of the value returned by a <B>Function</B> procedure; may be <B>Boolean</B>, <B>Integer</B>, <B>Long</B>, <B>Currency</B>, <B>Single</B>, <B>Double</B>, <B>Date</B>, <B>String </B>(variable length only), <B>Object</B>, <B>Variant</B>, a user-defined type, or an object type.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">The <I>arglist</I> argument has the following syntax and parts:</P>
<P CLASS="syn">[<B>Optional</B>][<B>ByVal</B> | <B>ByRef</B>][<B>ParamArray</B>] <I>varname</I>[<B>( )</B>][<B>As</B> <I>type</I>]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Optional</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Indicates that an argument is not required. If used, all subsequent arguments in <I>arglist</I> must also be optional and declared using the <B>Optional</B> keyword. All <B>Optional</B> arguments must be <B>Variant</B>. <B>Optional</B> can't be used for any argument if <B>ParamArray</B> is used.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>ByVal</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Indicates that the argument is passed by value.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>ByRef</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Indicates that the argument is passed by reference.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>ParamArray</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Used only as the last argument in <I>arglist</I> to indicate that the final argument is an <B>Optional</B> array of <B>Variant</B> elements. The <B>ParamArray</B> keyword allows you to provide an arbitrary number of arguments. May not be used with <B>ByVal</B>, <B>ByRef</B>, or <B>Optional</B>.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>varname</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Name of the variable representing the argument being passed to the procedure; follows standard variable naming conventions.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>type</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Data type of the argument passed to the procedure; may be <B>Boolean</B>, <B>Integer</B>, <B>Long</B>, <B>Currency</B>, <B>Single</B>, <B>Double</B>, <B>Date</B>, <B>String </B>(variable length only), <B>Object</B>, <B>Variant</B>, a user-defined type, or an object type.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">For <B>Function</B> procedures, the data type of the procedure determines the data type it returns. You can use an <B>As</B> clause following the <I>arglist</I> to specify the return type of the function. Within <I>arglist</I> you can use an <B>As</B> clause to specify the data type of any of the arguments passed to the procedure. In addition to specifying any of the standard data types, you can specify <B>As Any</B> in the <I>arglist</I> to inhibit type checking and allow any data type to be passed to the procedure.</P>
<P CLASS="t">Empty parentheses indicate that the <B>Sub</B> or <B>Function</B> procedure has no arguments and that arguments should be checked to ensure that none are passed. In the following example, First takes no arguments. If you use arguments in a call to First, an error occurs:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Declare Sub First Lib "MyLib" ()
</FONT></PRE>
<P CLASS="t">If you include an argument list, the number and type of arguments are checked each time the procedure is called. In the following example, First takes one <B>Long</B> argument:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Declare Sub First Lib "MyLib" (X As Long)
</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">You can't have fixed-length strings in the argument list of a <B>Declare</B> statement because only variable-length strings can be passed to procedures. Fixed-length strings can appear as procedure arguments, but they are converted to variable-length strings before being passed.</P>
<P></P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Call</B> Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example shows how the <B>Declare</B> statement is used at the module level to declare a reference to an external procedure in a dynamic-link library (DLL) or Macintosh code resource.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">' In Microsoft Windows.
Declare Sub MessageBeep Lib "User" (ByVal N As Integer)

' On the Macintosh.
Declare Sub MessageAlert Lib "MyHd:MyAlert" Alias "MyAlert" (ByVal N _
As Integer)
</FONT></PRE></FONT>
</FONT></BODY></HTML>
