<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SaveAs Method</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>SaveAs Method</H1><P CLASS="h"><B>Applies To</B></P>
<P CLASS="t"><B>Chart </B>Object, <B>DialogSheet </B>Object, <B>Module </B>Object, <B>Workbook </B>Object, <B>Worksheet </B>Object.</P>
<P CLASS="h"><B>Description</B></P>
<P CLASS="t">Saves changes to the sheet or workbook in a different file.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><I>object</I>.<B>SaveAs(</B><B><I>filename</I></B>,<B><I> fileFormat</I></B>,<B><I> password</I></B>,<B><I> writeResPassword</I></B>,<B><I> readOnlyRecommended</I></B>,<B><I> createBackup</I></B>,<B><I> accessMode</I></B>,<B><I> conflictResolution</I></B><B>)</B></P>
<P CLASS="term1"><I>object</I></P>
<BLOCKQUOTE>
<P CLASS="dt1">Required. The object to which this method applies.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>filename</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. A string indicating the name of the file to save. You can include a full path; if you do not, Microsoft Excel saves the file in the current folder.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>fileFormat</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. The file format to use when you save the file. See the <B>FileFormat</B> property for a list of valid choices. </P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>password</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. A case-sensitive string indicating the protection password to be given to the file. Should be no more than 15 characters.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>writeResPassword</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. A string indicating the write-reservation password for this file. If a file is saved with the password and the password is not supplied when the file is opened, the file is opened as read-only.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>readOnlyRecommended</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. If <B>True</B>, when the file is opened, Microsoft Excel displays a message recommending that you open the file as read-only.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>createBackup</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. If <B>True</B>, Microsoft Excel creates a backup file; if <B>False</B>, no backup file is created; if omitted, the status is unchanged.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>accessMode</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies the workbook access mode. One of <B>xlShared</B> (shared list), <B>xlExclusive</B> (exclusive mode), or <B>xlNoChange</B> (do not change the access mode). If this argument is omitted, the access mode is not changed. This argument is ignored if you save a shared list without changing the filename. To change the access mode, use the <B>ExclusiveAccess</B> method.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>conflictResolution</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies how change conflicts are resolved if the workbook is a shared list. One of <B>xlUserResolution</B> (display the conflict-resolution dialog box), <B>xlLocalSessionChanges</B> (automatically accept the local user's changes), or <B>xlOtherSessionChanges</B> (accept other changes in preference to the local user's changes). If this argument is omitted, the conflict-resolution dialog box is displayed.</P>
</BLOCKQUOTE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>FileFormat</B> Property, <B>MultiUserEditing</B> Property, <B>Save</B> Method, <B>SaveCopyAs</B> Method, <B>Saved</B> Property.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example creates a new workbook, prompts the user for a filename, and then saves the workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Set NewBook = Workbooks.Add
Do
    fName = Application.GetSaveAsFilename
Loop Until fName &lt;&gt; False
NewBook.SaveAs Filename:=fName
</FONT></PRE></FONT>
</FONT></BODY></HTML>
