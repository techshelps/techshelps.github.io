<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Spinner Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Spinner Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Represents a spinner, which is often linked to edit boxes so that the user can select a numeric value without having to type in a number. Spinners are very similar to scroll bars (<B>ScrollBar</B> object), but spinners do not have the <B>LargeChange</B> property.</P>
<P CLASS="t">Edit boxes do not have spinners by default. If you want an edit box to have a spinner, you must create a separate <B>Spinner</B> object and add the Visual Basic code to link the spinner value to the edit box. The following example links the value of the spinner named "spnTest" to the text displayed in the edit box named "edtTest," so that changing the value of one control simultaneously changes the value of the other.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub spnTest_Change()
    ActiveDialog.EditBoxes("edtTest").Text = _
        ActiveDialog.Spinners("spnTest").Value
End Sub

Sub edtTest_Change()
    ActiveDialog.Spinners("spnTest").Value = _
        ActiveDialog.EditBoxes("edtTest").Text
End Sub
<B></B></FONT></PRE>
<P CLASS="h"><B>Accessors</B></P>
<P CLASS="t">The <B>Spinner</B> object is a member of the <B>Spinners</B> collection. The <B>Spinners</B> collection contains all the <B>Spinner</B> objects on a single sheet. Use the <B>Add</B> method to create a new spinner and add it to the collection.</P>
<P CLASS="t">To access a single member of the collection, use the <B>Spinners</B> method with the index number or name of the spinner as an argument.</P>
<P CLASS="t">The following example sets the <B>OnAction</B> property for spinner one on the worksheet named "Sheet1." The SpinnerProc Visual Basic procedure runs when the user clicks the spinner.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("sheet1").Spinners(1).OnAction = "SpinnerProc"
</FONT></PRE>
<P CLASS="t">The spinner name is shown in the Name Box when the spinner is selected. Use the <B>Name</B> property to set or return the spinner name. The following example disables the spinner named "Spinner 5" on the worksheet named "Sheet1."</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("sheet1").Spinners("spinner 5").Enabled = False
</FONT></PRE>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>Application </B>Property,<B> BottomRightCell </B>Property,<B> Creator </B>Property,<B> Display3DShading </B>Property,<B> Enabled </B>Property,<B> Height </B>Property,<B> Index </B>Property,<B> Left </B>Property,<B> LinkedCell </B>Property,<B> Locked </B>Property,<B> Max </B>Property,<B> Min </B>Property,<B> Name </B>Property,<B> OnAction </B>Property,<B> Parent </B>Property,<B> Placement </B>Property,<B> PrintObject </B>Property,<B> SmallChange </B>Property,<B> Top </B>Property,<B> TopLeftCell </B>Property,<B> Value </B>Property,<B> Visible </B>Property,<B> Width </B>Property,<B> ZOrder </B>Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>BringToFront </B>Method,<B> Copy </B>Method,<B> CopyPicture </B>Method,<B> Cut </B>Method,<B> Delete </B>Method,<B> Duplicate </B>Method,<B> Select </B>Method,<B> SendToBack </B>Method.</P>
<P></P></FONT>
</FONT></BODY></HTML>
