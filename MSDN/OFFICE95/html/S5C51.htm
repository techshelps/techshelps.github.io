<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Formulas</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Working with Formulas</H2><P CLASS="t">Microsoft Excel provides formulas to help you analyze data on a worksheet or to perform operations on sets of data on multiple worksheets. When you write code, you can choose to use a formula in the language of your user, or you can choose to use a formula in a language that's familiar to you and have Visual Basic convert the formula to the language of your user.</P>
<H3><A NAME="sec0"></A>Using the Formula and FormulaLocal Properties</H3><P CLASS="t">You can use the <B>Formula</B> property to enter a formula in a cell. If the formula you enter contains worksheet functions, Microsoft Excel converts the functions to the appropriate language. For example, suppose you use the <B>Formula</B> property to enter a formula in cell A1 on Sheet1, as shown in the following code.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">ThisWorkBook.Worksheets("Sheet1").Range("A1"). _
    Formula = "=SUM(A2:A3)"
</FONT></PRE>
<P CLASS="t">When Microsoft Excel enters the formula on the worksheet, it automatically converts it to the equivalent formula in the language that's been set for the workbook.</P>
<P CLASS="t">If, instead, you write your code so that the user enters formulas in input boxes, Visual Basic still converts worksheet functions in the provided formulas, but you must use the <B>FormulaLocal</B> property instead of the <B>Formula</B> property. The <B>FormulaLocal</B> property converts the worksheet function the user types in the input box to the equivalent formula in the language that's been set for the workbook. The following example displays an input box and then inserts the formula the user supplies into cell A1 on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">FormulaText = InputBox(EnterFormulaMessage)
ThisWorkbook.Worksheets("Sheet1").Range("A1") _
    .FormulaLocal = "=" &amp; FormulaText
</FONT></PRE>
<P CLASS="t">If you subsequently open the workbook on a computer that's running the German version of Microsoft Excel, run the preceding example, and type <B>sum(a2:a3)</B> in the input box, the following formula appears in the formula bar.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">= SUMME(A2:A3)
</FONT></PRE>
<H3><A NAME="sec1"></A>Using the NumberFormat and NumberFormatLocal Properties</H3><P CLASS="t">The <B>NumberFormat</B> property is used to set the format code for a range on a worksheet. The format code is the string that appears in the Category box on the Number tab in the Format Cells dialog box. The following example sets the format code for cell A17 on Sheet1 to "General."</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Range("A17").NumberFormat = "General"
</FONT></PRE>
<P CLASS="t">The <B>NumberFormatLocal</B> property sets the format code for the object in the language that's been set for the workbook. The following example displays a message box showing the number format for cell A17 on Sheet1 in the language that's been set for workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Msgbox "The number format for cell A17 is " &amp; _ 
    Worksheets("Sheet1").Range("A17").NumberFormatLocal</FONT></PRE></FONT>
</FONT></BODY></HTML>
