<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeyPreview Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec166"></A>KeyPreview Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec167"></A>Applies To</H2><P>Form.</P>
<H2><A NAME="sec168"></A>Description</H2><P>You can use the <B>KeyPreview</B> property to specify whether form keyboard events are invoked before control keyboard events.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   The keyboard events are KeyDown, KeyUp, and KeyPress.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec169"></A>Setting</H2><P>The <B>KeyPreview</B> property uses the following settings.</P>
<P CLASS="t">  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="60pt" VALIGN="TOP"><COL WIDTH="212pt" VALIGN="TOP"><COL WIDTH="105pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Setting</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Visual Basic</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">No</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">(Default) Only the active control receives keyboard events.</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>False</B> (0)</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P>You can set the <B>KeyPreview </B>property in the form’s property sheet, a macro, or using Visual Basic.</P>
<P>You can set the <B>KeyPreview</B> property in any view.</P>
<H2><A NAME="sec170"></A>Remarks</H2><P>You can use the <B>KeyPreview</B> property to create a keyboard-handling procedure for a form. For example, when an application uses function keys, setting the <B>KeyPreview</B> property to <B>True</B> allows you to process keystrokes at the form level rather than writing code for each control that might receive keystroke events.</P>
<P>To handle keyboard events only at the form level and prevent controls from receiving keyboard events, set KeyAscii to 0 in the form’s KeyPress event, and set KeyCode to 0 in the form’s KeyDown and KeyUp events.</P>
<P>If a form has no visible or enabled controls, it automatically receives all keyboard events.</P>
<H2><A NAME="sec171"></A>See Also</H2><P>KeyDown, KeyUp Events; KeyPress Event.</P>
<H2><A NAME="sec172"></A>Example</H2><P>In the following example the <B>KeyPreview</B> property is set to <B>True</B> in the form’s load event. This causes the form to receive keyboard events before they are received by any control. The form KeyDown event then examines the KeyCode value to determine if the F2, F3, or F4 keys were pushed.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Private Sub Form_Load()
    Me.KeyPreview = TrueSub
Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
    Const conKey_F2 = &amp;H71        ' F2 Key constant
    Const conKey_F3 = &amp;H72        ' F3 Key constant
    Const conKey_F4 = &amp;H73        ' F4 Key constant

    Select Case KeyCode
        Case conKey_F2
            ' Process F2 key events
        Case conKey_F3
            ' Process F3 key events
        Case conKey_F4
            ' Process F4 key events
        Case Else
    End SelectSub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
