<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Do...Loop Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Do...Loop Statement</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Repeats a block of statements while a condition is <B>True</B> or until a condition becomes <B>True</B>.</P>
<P CLASS="h"><B>Syntax 1</B></P>
<P CLASS="syn"><B>Do </B>[{<B>While</B> | <B>Until</B>} <I>condition</I>]<BR>    [<I>statements</I>]<BR>    [<B>Exit</B> <B>Do</B>]<BR>    [<I>statements</I>]<BR><B>Loop</B></P>
<P CLASS="h"><B>Syntax 2</B></P>
<P CLASS="syn"><B>Do<BR></B>    [<I>statements</I>]<BR>    [<B>Exit</B> <B>Do</B>]<BR>    [<I>statements</I>]<BR><B>Loop</B> [{<B>While</B> | <B>Until</B>}<I>condition</I>]</P>
<P CLASS="t">The <B>Do</B>...<B>Loop</B> statement syntax has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>condition</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Expression that is <B>True</B> or <B>False</B>.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>statements</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">One or more statements that are repeated while or until <I>condition</I> is <B>True</B>.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">The <B>Exit Do</B> can only be used within a <B>Do</B>...<B>Loop</B> control structure to provide an alternate way to exit a <B>Do</B>...<B>Loop</B>. Any number of <B>Exit Do</B> statements may be placed anywhere in the <B>Do</B>...<B>Loop</B>. Often used with the evaluation of some condition (for example, <B>If</B>...<B>Then</B>), <B>Exit Do</B> transfers control to the statement immediately following the <B>Loop</B>.</P>
<P CLASS="t">When used within nested <B>Do</B>...<B>Loop</B> statements, <B>Exit Do</B> transfers control to the loop that is one nested level above the loop where it occurs.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Exit</B> Statement, <B>For</B>...<B>Next </B>Statement, <B>While</B>...<B>Wend</B> Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example shows how <B>Do</B>...<B>Loop</B> statements can be used. The inner <B>Do</B>...<B>Loop</B> statement loops 10 times, sets the value of the flag to <B>False</B>, and exits prematurely using the <B>Exit Do</B> statement. The outer loop exits immediately upon checking the value of the flag.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Check = True : Counter = 0    ' Initialize variables.
Do    ' Outer Loop.
    Do While Counter &lt; 20    ' Inner Loop.
        Counter = Counter + 1    ' Increment Counter.
        If Counter = 10 Then    ' If condition is true.
            Check = False    ' Set value of flag to False.
            Exit Do    ' Exit inner loop.
        End If
    Loop
Loop Until Check = False    ' Exit outer loop immediately.
</FONT></PRE>
<P CLASS="t">This example sorts the data in the first column on Sheet1 and then deletes rows that contain duplicate data.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Range("A1").Sort _
    key1:=Worksheets("Sheet1").Range("A1")
Set currentCell = Worksheets("Sheet1").Range("A1")
Do While Not IsEmpty(currentCell)
    Set nextCell = currentCell.Offset(1, 0)
    If nextCell.Value = currentCell.Value Then
        currentCell.EntireRow.Delete
    End If
    Set currentCell = nextCell
Loop
</FONT></PRE></FONT>
</FONT></BODY></HTML>
