<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeyDown, KeyUp Events -- Event Procedures</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec141"></A>KeyDown, KeyUp Events -- Event Procedures</H1><P CLASS="t">  </P>
<H2><A NAME="sec142"></A>Description</H2><P>To create an event procedure that is executed when the KeyDown or KeyUp event occurs, set the <B>OnKeyDown</B> or <B>OnKeyUp</B> property to [Event Procedure], and click the Build button.</P>
<H2><A NAME="sec143"></A>Syntax</H2><P><B>Private Sub Form_KeyDown(</B>KeyCode<B> As Integer</B>,<B> </B>Shift<B> As Integer)</B><B>Private Sub </B><I>controlname</I><B>_KeyDown(</B>KeyCode<B> As Integer</B>,<B> </B>Shift<B> As Integer)</B><B>Private Sub Form_KeyUp(</B>KeyCode<B> As Integer</B>,<B> </B>Shift<B> As Integer)</B></P>
<P></P>
<P></P>
<P><B>Private Sub</B> <I>controlname</I>_<B>KeyUp</B>(KeyCode <B>As Integer</B>, Shift <B>As Integer</B>)</P>
<H2><A NAME="sec144"></A>Remarks</H2><P>The KeyDown and KeyUp events use the following arguments.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="99pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Argument</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>controlname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A string that is the name of the control affected by the KeyDown and KeyUp event procedures.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">KeyCode</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A key code, such as <B>vbKeyF1</B> (the F1 key) and <B>vbKeyHome</B> (the HOME key). To specify key codes, use the intrinsic constants in the Object Browser. You can prevent an object from receiving a keystroke by setting KeyCode to 0.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Shift</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">The state of the SHIFT, CTRL, and ALT keys at the time of the event. If you need to test for the Shift argument, you can use one of the following intrinsic constants as bit masks:</P>
<P CLASS="t"><B>Constant</B>    <B>Description</B></P>
<P CLASS="t"><B>acShiftMask</B>    Bit mask for the SHIFT key.</P>
<P CLASS="t"><B>acCtrlMask</B>    Bit mask for the CTRL key.</P>
<P CLASS="t"><B>acAltMask</B>    Bit mask for the ALT key.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P>You test for a condition by first assigning each result to a temporary <B>Integer</B> variable and then comparing the Shift argument to an intrinsic constant. Use the <B>And</B> operator with the Shift argument to test whether the condition is greater than 0, indicating that the SHIFT, CTRL, or ALT key was pressed, as in the following example.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>ShiftDown = (Shift And acShiftMask) &gt; 0
</PRE>
<P CLASS="t">  </P>
<P>In an event procedure, you can test for any combination of conditions, as in the following example.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>If ShiftDown And CtrlDown Then
.    ' Do this if SHIFT and CTRL keys are pressed.
.
.
</PRE>
<P CLASS="t">  </P>
<P>You can use the KeyDown and KeyUp event procedures to interpret the uppercase and lowercase version of each character by testing for both the KeyCode argument and the Shift argument. The KeyCode argument indicates the physical key pressed (thus, A and a are considered the same key), and the Shift argument indicates the state of SHIFT+<I>key</I> and returns either A or a.</P>
<P>Use the KeyDown and KeyUp event procedures for keyboard handlers if you need to respond to both the pressing and releasing of a key.</P>
<P>You can respond to specific keys pressed in a form, regardless of which control has the focus. For example, you may want the key combination CTRL+X to always perform the same action on a form. To make sure a form receives all keyboard events, even those that occur for controls, before they occur for the controls, set the <B>KeyPreview</B> property of the form to Yes. With this property setting, all keyboard events occur first for the form, and then for the control that has the focus. You can respond to specific keystrokes in the form’s KeyDown, KeyPress and KeyUp events. You can prevent a control from receiving keystrokes you’ve responded to, and prevent the keyboard events from occurring for the control, by setting the KeyCode argument to 0 for both the KeyDown and KeyUp events, and setting the KeyAscii argument to 0 for the KeyPress event (if the key is an ANSI key). You must set all three arguments to 0 if you don’t want the control to receive the keystrokes.</P>
<P>You can use the arguments for the KeyDown, KeyPress, and KeyUp events, in conjunction with the arguments for the MouseDown, MouseUp, and MouseMove events, to make your application work smoothly for both keyboard and mouse users.</P>
<P>You can’t cancel the KeyDown or KeyUp event.</P>
<H2><A NAME="sec145"></A>See Also</H2><P>KeyDown, KeyUp Events — Macros.</P>
<H2><A NAME="sec146"></A>Example</H2><P>The following example determines whether you have pressed the SHIFT, CTRL, or ALT key.</P>
<P>To try this example, add the following code to the Declarations section of a module for a form containing a text box named KeyHandler.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Private Sub KeyHandler_KeyDown(KeyCode As Integer, Shift As Integer)
    Dim intShiftDown As Integer, intAltDown As Integer
    Dim intCtrlDown As Integer

    ' Use bit masks to determine which key was pressed.
    intShiftDown = (Shift And acShiftMask) &gt; 0
    intAltDown = (Shift And acAltMask) &gt; 0
    intCtrlDown = (Shift And acCtrlMask) &gt; 0
    ' Display message telling user which key was pressed.
    If intShiftDown Then MsgBox "You pressed the SHIFT key."
    If intAltDown Then MsgBox "You pressed the ALT key."
    If intCtrlDown Then MsgBox "You pressed the CTRL key."Sub</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
