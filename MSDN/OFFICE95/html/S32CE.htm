<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Print</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H1 CLASS="h2">Print</H1><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Print</B> [<B>#</B><I>FileNumber</I><B>,</B>] <I>Expression1</I>[<I>$</I>] [<B>;</B> <I>or</I> <B>,</B> <I>Expression2</I>[<I>$</I>] [; or , <FONT FACE="Symbol">¼</FONT>]</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Displays the specified expressions in the status bar, or if you specify <I>FileNumber</I>, sends the expressions to the sequential file associated with that number. Unlike <B>MsgBox</B>, which accepts only strings, <B>Print</B> accepts strings, string variables, numbers, and numeric variables, and allows you to mix all these types.</P>
<P CLASS="t">You can join strings and string variables with the plus sign (+). You can join strings and numbers with a semicolon (;) or a comma (,). A comma inserts a tab between values. </P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt"><B>Print</B> automatically adds a space before positive numeric values; there is no need to include an extra space in a string that precedes one. <B>Print</B> does not add a space before negative numeric values.</P>
<P></P>
<P CLASS="t">Like <B>Write</B>, the <B>Print </B>statement can send expressions to a sequential file. However, the expressions are formatted differently in the file, as illustrated in the following table. Note that <B>Print</B> separates the expressions with a tab character.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="202pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>WordBasic instruction</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Line created in sequential file #1</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="ct">Print #1, "Phil", "Teacher"</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="ct">Phil    Teacher</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="ct">Write #1, "Phil", "Teacher"</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="ct">"Phil","Teacher"</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Examples</B></P>
<P CLASS="t">This example displays the following sentence in the status bar: "March sales were 2500 and May sales were 3600 for a total of 6100."</P>
<P CLASS="spacing"><BR></P>
<PRE>mar = 2500
may = 3600
Print "March sales were"; mar ; " and May sales were" \
    ; may ; " for a total of" ; mar + may ; "."
</PRE>
<P CLASS="t">The following example displays this line on the status bar: "Juan Garcia 32 1234".</P>
<P CLASS="spacing"><BR></P>
<PRE>name$ = "Juan Garcia"
age = 32
employeeNum = 1234
Print name$; age; employeeNum
</PRE>
<P CLASS="t">The following example sets up a sequential file for use as a text-only data source in a mail-merge operation. The first <B>Print</B> instruction inserts column headings; the second adds a data record. Items in a given <B>Print</B> instruction are inserted into a single paragraph and are separated by tabs. Note that WordBasic doesn't have a sequential-file-access instruction that can read tab-delimited data. To see the results, you must open the sequential file as you would any Word document.</P>
<P CLASS="spacing"><BR></P>
<PRE>Open "DATA.TXT" For Output As #1
Print #1, "Name", "Address", "Occupation"
Print #1, "Juan Garcia", "123 Main St", "Accountant"
Close #1
</PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Close</B>,<B> Eof</B><B>()</B>,<B> Input</B>,<B> Input$</B><B>()</B>,<B> Line Input</B>,<B> Lof</B><B>()</B>,<B> MsgBox</B>,<B> Open</B>,<B> Read</B>,<B> Seek</B>,<B> Write</B></P></FONT></FONT></BODY></HTML>
