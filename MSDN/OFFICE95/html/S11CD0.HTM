<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Option Compare Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec275"></A>Option Compare Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec276"></A>Description</H2><P>Used at module level to declare the default comparison method to use when string data is compared.</P>
<H2><A NAME="sec277"></A>Syntax</H2><P><B>Option Compare</B> {<B>Binary</B> | <B>Text</B> | <B>Database</B>}</P>
<H2><A NAME="sec278"></A>Remarks</H2><P>If used, the <B>Option</B> <B>Compare</B> statement must appear in a module before any statements that declare variables or define constants.</P>
<P>The <B>Option Compare</B> statement specifies the string comparison method (<B>Binary</B>, <B>Text</B>, or <B>Database</B>) for a module. If a module doesn’t include an <B>Option</B> <B>Compare</B> statement, the default text comparison method is <B>Binary</B>.</P>
<P><B>Option Compare Binary</B> results in string comparisons based on a sort order derived from the internal binary representations of the characters. Sort order is determined by the code page. In the following example, a typical binary sort order is shown:</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>A &lt; B &lt; E &lt; Z &lt; a &lt; b &lt; e &lt; z &lt; À &lt; Ê &lt; Ø &lt; à &lt; ê &lt; ø
</PRE>
<P CLASS="t">  </P>
<P><B>Option Compare Text</B> results in string comparisons based on a case-insensitive text sort order determined by your system’s locale. The same characters shown above, when sorted using <B>Option Compare Text</B>, produce the following text sort order:</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>(A=a) &lt; ( À=à) &lt; (B=b) &lt; (E=e) &lt; (Ê=ê) &lt; (Z=z) &lt; (Ø=ø) 
</PRE>
<P CLASS="t">  </P>
<P><B>Option</B> <B>Compare</B> <B>Database</B> can only be used within Microsoft Access. This results in string comparisons based on the sort order that is determined by the locale ID of the database where the string comparisons occur.</P>
<H2><A NAME="sec279"></A>See Also</H2><P><B>InStr</B> Function, <B>Option Base</B> Statement, <B>Option Explicit</B> Statement, <B>Option Private</B> Statement, <B>StrComp</B> Function.</P>
<H2><A NAME="sec280"></A>Specifics (Microsoft Access)</H2><P>In Microsoft Access, all modules by default contain the <B>Option Compare Database</B> statement in the Declarations section. This statement sets the string comparison method for the module to the one specified for the entire database.</P>
<P>You can change the string comparison method for all new databases by clicking Options on the Tools menu and changing the value in the New Database Sort Order box on the General tab of the Options dialog box. By default this value is set to General, which specifies a case-insensitive sort order based on the English alphabet. </P>
<P>Changing the New Database Sort Order option doesn’t affect the string comparison method for the current database. It only affects databases that are created after the option has been set.</P>
<P>To specify a string comparison method for an individual module that is different from the one specified for the database, change <B>Option Compare Database</B> to <B>Option Compare Binary</B> or <B>Option Compare Text</B>. The <B>Option Compare Binary</B> statement compares strings by evaluating the ASCII values corresponding to the characters they contain, so the statement is case-sensitive. <B>Option Compare Text</B> is case-insensitive.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   If you are using the <B>Bookmark</B> property of a <B>Recordset</B> object, you must include an <B>Option Compare Binary</B> statement in the Declarations section of the module. The setting and return value for the <B>Bookmark</B> property is a <B>Variant</B> array of Byte data. If you use a case-insensitive string comparison method, the <B>Bookmark</B> property may point you to the wrong record.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec281"></A>Example</H2><P>This example uses the <B>Option Compare</B> statement to set the default string comparison method. The <B>Option Compare</B> statement is used at the module level only.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>' Set the string comparison method to Binary.Compare Binary         ' That is, "AAA" is less than "aaa".
' Set the string comparison method to Text.Compare Text            ' That is, "AAA" is equal to "aaa".
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
