<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Option Compare Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Option Compare Statement</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Used at module level to declare the default comparison mode to use when string data is compared.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Option Compare</B> {<B>Binary</B> | <B>Text</B>}</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">If used, the <B>Option</B> <B>Compare</B> statement must appear in a module before any statements that declare variables or define constants.</P>
<P CLASS="t">The <B>Option Compare</B> statement specifies the string comparison method (<B>Binary</B> or <B>Text</B>) for a module. If a module doesn't include an <B>Option</B> <B>Compare</B> statement, the default text comparison method is <B>Binary</B>.</P>
<P CLASS="t"><B>Option Compare Binary</B> results in string comparisons based on a sort order derived from the internal binary representations of the characters. In Microsoft Windows, sort order is determined by the code page. On the Macintosh, sort order is determined by the character set. In the following example, a typical binary sort order is shown:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">A &lt; B &lt; E &lt; Z &lt; a &lt; b &lt; e  &lt; z &lt; À &lt; Ê &lt; Ø &lt; à &lt; ê &lt; ø
</FONT></PRE>
<P CLASS="t"><B>Option Compare Text</B> results in string comparisons based on a case-insensitive textual sort order determined by your system's locale. The same characters shown above, when sorted using <B>Option Compare Text</B>, produce the following text sort order:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">(A=a) &lt; ( À=à) &lt; (B=b) &lt; (E=e) &lt; (Ê=ê) &lt; (Z=z) &lt; (Ø=ø) 
</FONT></PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t">Comparison Operators, <B>InStr</B> Function, <B>Option</B> <B>Base</B> Statement, <B>Option</B> <B>Explicit</B> Statement, <B>Option</B> <B>Private</B> Statement, <B>StrComp</B> Function.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example uses the <B>Option Compare</B> statement to set the default string comparison mode. The <B>Option Compare</B> statement is used at the module-level only.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">' Set the string comparison method to Binary.
Option Compare Binary     ' i.e. "AAA" less than "aaa"
' Set the string comparison method to Text.
Option Compare Text    ' i.e. "AAA" equal to "aaa".
</FONT></PRE></FONT>
</FONT></BODY></HTML>
