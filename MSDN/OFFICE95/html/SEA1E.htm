<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Stop Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Using a Stop Statement</H2><P CLASS="t">As an alternative to setting a breakpoint, you can put a <B>Stop</B> statement in a procedure. Visual Basic enters break mode whenever it encounters a <B>Stop</B> statement. A <B>Stop</B> statement is very similar to a breakpoint, but it isn't set or cleared the same way a breakpoint would be.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">There is one important difference between a <B>Stop</B> statement and a breakpoint. If you close the workbook or quit Microsoft Excel, all breakpoints are cleared. <B>Stop</B> statements are more permanent; they stay in the code until you remove them.</P>
<P></P></FONT>
</FONT></BODY></HTML>
