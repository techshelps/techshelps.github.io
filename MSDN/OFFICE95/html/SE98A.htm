<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exposing An Add-In's Routines</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Exposing An Add-In's Routines</H2><P CLASS="t">The add-in code needs to be accessed from the outside world.  One method is to create a custom toolbar with buttons that activate the add-in's macros.  There's a way to install the toolbar without any programming at all.  Just open the add-in's VBA module and select Attach Toolbars from the Tools menu.  Then copy the custom toolbar to the add-in workbook.  When a user loads the add-in the toolbar will automatically appear.  </P>
<P CLASS="t">Another approach is to declare a public function that starts the add-in's main routine.  After loading the add-in the public function appears in the list of "All" and "User Defined" functions shown in the function wizard.  Next write a small macro in the personal macro workbook that calls the function.  Again it's possible to assign this macro to a toolbar button. Example 8 below illustrates this method.  If the add-in is a function library rather than an interactive utility like a wizard, this method works well.  </P>
<P>'THIS CODE APPEARS IN PERSONAL.XLS:</P>
<P>Sub StartHistogramWizard()</P>
<P>Dim Ret As Integer</P>
<P>Ret = HistogramWizard(Selection)</P>
<P>End Sub</P>
<P CLASS="t"></P>
<P>'THIS CODE APPEARS IN THE ADD-IN:</P>
<P>Public Function HistogramWizard(s As Object) As Integer</P>
<P>'This function starts the histogram wizard.</P>
<P>Call HistoMain(s)</P>
<P>HistogramWizard = 1</P>
<P>End Function</P>
<P></P>
<P>Sub HistoMain(s As Object)</P>
<P>'This is the Main sub in the add-in.  </P>
<P>' Initializations...</P>
<P></P>
<P>Example 8.  Simple method for exposing add-in routines.</P>
<P CLASS="t">If code in PERSONAL.XLS can't locate the add-in function, use the Tools/References command from the module sheet in PERSONAL.XLS to create a reference to the add-in file.  </P></FONT>
</FONT></BODY></HTML>
