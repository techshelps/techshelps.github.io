<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 12 Creating Add-Ins</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1 CLASS="cht">Chapter 12 Creating Add-Ins</H1><P CLASS="t">This chapter shows you how to package Microsoft Excel worksheets, controls, menus, toolbars, and supporting Visual Basic modules in the form of an add-in application. You can use add-ins to assemble and distribute custom features that, from the user's point of view, act as if they're built into Microsoft Excel itself.</P>
<P CLASS="t">An add-in is a hidden, read-only workbook in which the Visual Basic code has been fully compiled from a source workbook. Because the code is already fully compiled, there is no compiler-induced delay when you run a procedure from an add-in. The add-in is hidden so that users can run procedures without having to see your code in a workbook. This also saves the system resources that would otherwise be required to display a workbook. Finally, the add-in is read-only so that users cannot make inadvertent changes to your code.</P>
<H5><A NAME="sec0"></A>Contents</H5><UL><LI>Improving Performance with Add-Ins</LI><LI>Preparing a Workbook to Compile to an Add-In</LI><LI>Compiling the Add-In</LI><LI>Using an Add-In's Procedures</LI></UL><P></P></FONT>
</FONT></BODY></HTML>
