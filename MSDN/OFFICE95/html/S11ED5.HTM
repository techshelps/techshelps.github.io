<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Resume Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec180"></A>Resume Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec181"></A>Description</H2><P>Resumes execution after an error-handling routine is finished.</P>
<H2><A NAME="sec182"></A>Syntax</H2><P><B>Resume</B> [<B>0</B>]<B>Resume</B> <B>Next</B> <B>Resume </B><I>line</I></P>
<P></P>
<P></P>
<P>The <B>Resume</B> statement syntax can have any of the following forms:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="100pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Statement</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Resume [0]</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">If the error occurred in the same procedure as the error handler, execution resumes with the statement that caused the error. If the error occurred in a called procedure, execution resumes at the statement that last called out of the procedure containing the error-handling routine.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Resume Next</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">If the error occurred in the same procedure as the error handler, execution resumes with the statement immediately following the statement that caused the error. If the error occurred in a called procedure, execution resumes with the statement immediately following the statement that last called out of the procedure containing the error-handling routine (or <B>On Error Resume Next</B> statement).</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Resume </B><I>line</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Execution resumes at <I>line</I>, which is a line label or line number. The argument <I>line</I> must be in the same procedure as the error handler.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec183"></A>Remarks</H2><P>If you use a <B>Resume</B> statement anywhere except in an error-handling routine, an error occurs.</P>
<P>When an error-handling routine is active and the end of a procedure (an <B>End Sub</B>, <B>End Function</B>, or <B>End Property</B> statement) is encountered before a <B>Resume</B> statement is encountered, an error occurs because a logic error is assumed to have been made inadvertently. However, if an <B>Exit Sub</B>, <B>Exit Function</B>, or <B>Exit Property</B> statement is encountered while an error handler is active, no error occurs because it is considered a deliberate redirection of execution.</P>
<H2><A NAME="sec184"></A>See Also</H2><P><B>End</B> Statement, <B>Err</B> Object, <B>Exit</B> Statement, <B>On Error</B> Statement.</P>
<H2><A NAME="sec185"></A>Example</H2><P>This example uses the <B>Resume</B> statement to end error handling in a procedure and resume execution with the statement that caused the error. Error number 55 is generated to illustrate using the <B>Resume</B> statement.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub ResumeStatementDemo()
    On Error GoTo ErrorHandler        ' Enable error-handling routine.
    Open "TESTFILE" For Output As #1    ' Open file for output.
    Kill "TESTFILE"                    ' Attempt to delete open file.
    Exit Sub                            ' Exit Sub to avoid error handler.:                        ' Error-handling routine.
    Select Case Err.Number            ' Evaluate error number.
        Case 55                        ' "File already open" error.
            Close #1                    ' Close open file.
        Case Else
                                    ' Handle other situations here.... 
    End Select
    Resume                            ' Resume execution at same line
                                    ' that caused the error.Sub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
