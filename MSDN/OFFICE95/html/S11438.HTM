<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Control Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec145"></A>Control Object</H1><P CLASS="t">  </P>
<H2><A NAME="sec146"></A>Description</H2><P>The <B>Control</B> object represents a control on a form or report.</P>
<H2><A NAME="sec147"></A>Remarks</H2><P>All controls on a form or report belong to the <B>Controls</B> collection for that <B>Form</B> or <B>Report</B> object. When you refer to an individual <B>Control</B> object in the <B>Controls</B> collection, you can refer to the <B>Controls</B> collection either implicitly or explicitly.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Me!NewData                    ' Implicitly refer to Controls collection.
</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Me![New Data]                ' Use if control name contains space.
</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Me("NewData")                ' Performance slightly slower.
(0)                        ' Refer to control's index in collection.
</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Me.Controls!NewData            ' Explicitly refer to Controls collection.
.Controls[New Data]
.Controls("NewData")
.Controls(0)
</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P><B>Note</B>   You can use the <B>Me</B> keyword to represent a form or report within code only if you’re referring to the form or report from code within the form module or report module. If you’re referring to a form or report from a standard module or a different form or report’s module, you must use the full reference to the form or report.</P>
<P CLASS="t">  </P>
<P>Each <B>Control</B> object is denoted by a particular intrinsic constant. For example, the intrinsic constant <B>acTextBox</B> is associated with a text box control, and <B>acCommandButton</B> is associated with a command button. To determine the type of an existing control, use the <B>ControlType</B> property. However, you don’t need to know the specific type of a control in order to use it in code. You can simply represent it with a variable of data type <B>Control</B>. You can see these constants in the Object Browser by clicking Modules on the Modules/Classes list, and then looking up the constants in the Methods/Properties list.</P>
<H2><A NAME="sec148"></A>Properties</H2><P><B>ControlType</B> Property.</P>
<H2><A NAME="sec149"></A>See Also</H2><P><B>Controls</B> Collection; <B>CreateControl</B>, <B>CreateReportControl</B> Functions; <B>Form</B> Object; <B>Me</B>; <B>Report</B> Object.</P>
<H2><A NAME="sec150"></A>Example</H2><P>The following example enumerates all controls in the <B>Controls</B> collection of a form called OrderForm and sets certain properties if the control is a text box.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub SetTextBoxProperties()</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>    Dim frm As Form, ctl As Control

    Set frm = Forms!OrderForm
    ' Enumerate Controls collection.</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>    For Each ctl In frm.Controls
        ' Check to see if control is text box.
        If ctl.ControlType = acTextBox Then
            ' Set control properties.
            With ctl
                .SetFocus
                .Enabled = True
                .Height = 400
                .SpecialEffect = 0
            End With
        End If
    Next ctlSub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
