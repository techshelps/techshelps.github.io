<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dialog, Dialog()</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H1 CLASS="h2">Dialog, Dialog()</H1><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Dialog</B> <I>DialogRecord </I>[<B>,&nbsp;</B><I>DefaultButton</I>] [<B>,&nbsp;</B><I>TimeOut</I>]</P>
<P CLASS="syn"><B>Dialog(</B><I>DialogRecord </I>[<B>,&nbsp;</B><I>DefaultButton</I>] [<B>,&nbsp;</B><I>TimeOut</I>]<B>)</B></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">The <B>Dialog</B> statement and <B>Dialog</B><B>()</B> function are both used to display the dialog box specified by <I>DialogRecord </I>in a preceding <B>Dim </B>instruction. The dialog box displayed can be a Word dialog box or one that you define within a macro.</P>
<P CLASS="t">If you use the <B>Dialog</B> statement to display a dialog box and the user chooses the Cancel button, Word generates an error that an <B>On Error </B>instruction can trap. If you don't want or need to trap the error, you can use the <B>Dialog</B><B>()</B> function to display the dialog box. In addition to displaying the dialog box, the <B>Dialog</B><B>()</B> function returns a value corresponding to the button chosen. The return values are the same as those used to specify <I>DefaultButton</I>.</P>
<P CLASS="t">When you display a dynamic dialog box, use <B>DisableInput</B> to make the ESC key cancel the dialog box properly. For more information, see <B>DisableInput</B>.</P>
<P></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="274pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>DialogRecord</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The name given to the dialog record in the <B>Dim</B> instruction.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>DefaultButton</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The default command button:</P>
<P CLASS="tt">– 2    No default command button</P>
<P CLASS="tt">–1    The OK button</P>
<P CLASS="tt">0 (zero)    The Cancel button</P>
<P CLASS="tt">&gt; 0 (zero)    A command button, where 1 is the first <B>PushButton</B> instruction in the definition, 2 is the second, and so on</P>
<P CLASS="tt">The default command button is chosen if the user presses ENTER when a dialog box control other than a command button has the focus. Unless you specify otherwise, the OK button is the default command button.</P>
<P CLASS="tt"><I>DefaultButton</I> is used only with custom dialog boxes. For <I>DefaultButton</I> to have any effect, the instruction for the specified button must be preceded in the dialog box definition by an instruction for a nonbutton dialog box control that can receive the focus, such as a list box or check box. (Note that because a text control cannot receive the focus, it does not meet this criterion.) Otherwise, the first button in the dialog box definition is the default command button. If the dialog box definition has a dialog function associated with it, <I>DefaultButton</I> may be overridden by a <B>DlgFocus$</B> statement. For information on creating dialog functions, see Chapter 5, "Working with Custom Dialog Boxes," in Part 1, "Learning WordBasic."</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>TimeOut</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The amount of time, in milliseconds, the dialog box is displayed. If 0 (zero) or omitted, the dialog box is displayed until the user closes it.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">A macro can use any number of custom dialog boxes, but WordBasic supports only one custom dialog record at a time (you can define any number of dialog records for Word dialog boxes). This means that you can't define a series of custom dialog records, intending to use them later in the macro. Each custom dialog record overwrites the previous one. If your macro uses more than one custom dialog box and you need to store the values contained in a dialog record that will be overwritten, save the values in regular variables. For more information about using custom dialog records, see Chapter 5, "Working with Custom Dialog Boxes," in Part 1, "Learning WordBasic."</P>
<P></P>
<P></P>
<P CLASS="h"><B>Examples</B></P>
<P CLASS="t">This example uses the <B>Dialog</B><B>()</B> function to display the Font dialog box (Format menu) so the user can set different character-formatting options. The instruction x&nbsp;=&nbsp;Dialog(dlg) returns a value corresponding to the button the user chooses and removes the need for error handling. If the user chooses the OK button, the last instruction in the example, If x = -1 Then FormatFont dlg, implements the options that the user selected in the dialog box; if the user chooses the Cancel button, the options chosen are ignored. Without this statement, nothing happens, even though the dialog box has been displayed and the user has chosen the OK button.</P>
<P CLASS="spacing"><BR></P>
<PRE>Dim dlg As FormatFont
GetCurValues dlg
x&nbsp;=&nbsp;Dialog(dlg)
If x = -1 Then FormatFont dlg
</PRE>
<P CLASS="t">The following example is the same as the previous one, except that it uses the <B>Dialog</B> statement to display the dialog box and includes error handling. If the user chooses the Cancel button, the resulting error is trapped and a message is displayed.</P>
<P CLASS="spacing"><BR></P>
<PRE>Dim dlg As FormatFont
GetCurValues dlg
On Error Goto trap
Dialog dlg
FormatFont dlg
Goto skiptrap
trap:
MsgBox "Dialog box closed -- no changes"
skiptrap:
</PRE>
<P CLASS="t">The following example displays a simple custom dialog box with text box and command button controls. Since the text box control is the first control defined in the dialog box definition, it has the focus when the dialog box is displayed. The x&nbsp;=&nbsp;Dialog(dlg, 1) instruction makes the Find button the default command button (instead of the OK button). </P>
<P CLASS="spacing"><BR></P>
<PRE>Begin Dialog UserDialog 346, 90, "Social Security Macro"
    TextBox 9, 22, 192, 18, .secnum    
    Text 9, 6, 183, 13, "Social Security Number:"
    OKButton 249, 4, 88, 21
    CancelButton 249, 28, 88, 21
    PushButton 249, 52, 88, 21, "Find..."
End Dialog
Dim dlg As UserDialog
x&nbsp;=&nbsp;Dialog(dlg, 1)
</PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Begin Dialog</B><FONT FACE="Symbol"><B>¼</B></FONT><B>End Dialog</B>,<B> Dim</B>,<B> GetCurValues</B></P>
<P></P></FONT></FONT></BODY></HTML>
