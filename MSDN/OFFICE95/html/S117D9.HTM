<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>For Each...Next Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec167"></A>For Each...Next Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec168"></A>Description</H2><P>Repeats a group of statements for each element in an array or collection.</P>
<H2><A NAME="sec169"></A>Syntax</H2><P><B>For</B> <B>Each</B> <I>element</I> <B>In</B> <I>group</I><BR>    [<I>statements</I>]<BR>    [<B>Exit For</B>]<BR>    [<I>statements</I>]<BR><B>Next</B> [<I>element</I>]</P>
<P>The <B>For Each...Next</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>element</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Variable used to iterate through the elements of the collection or array. For collections, <I>element</I> can only be a <B>Variant</B> variable, a generic <B>Object</B> variable, or any specific OLE Automation object variable. For arrays, <I>element</I> can only be a <B>Variant</B> variable.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>group</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Name of an object collection or array (except an array of user-defined types).</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>statements</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">One or more statements that are executed on each item in <I>group</I>.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec170"></A>Remarks</H2><P>The <B>For Each</B> block is entered if there is at least one element in <I>group</I>. Once the loop has been entered, all the statements in the loop are executed for the first element in <I>group</I>. Then, as long as there are more elements in <I>group</I>, the statements in the loop continue to execute for each element. When there are no more elements in <I>group</I>, the loop is exited and execution continues with the statement following the <B>Next</B> statement.</P>
<P>The <B>Exit For</B> can only be used within a <B>For Each...Next</B> or <B>For...Next</B> control structure to provide an alternate way to exit. Any number of <B>Exit For</B> statements may be placed anywhere in the loop. The <B>Exit For</B> is often used with the evaluation of some condition (for example, <B>If...Then</B>), and transfers control to the statement immediately following <B>Next</B>.</P>
<P>You can nest <B>For Each...Next</B> loops by placing one <B>For Each...Next</B> loop within another. However, each loop <I>element</I> must be unique.</P>
<P CLASS="t">  </P>
<P><B>Note</B>   If you omit <I>element</I> in a <B>Next</B> statement, execution continues as if you had included it. If a <B>Next</B> statement is encountered before its corresponding <B>For</B> statement, an error occurs.</P>
<P CLASS="t">  </P>
<P>You can’t use the <B>For Each...Next</B> statement with an array of user-defined types because a <B>Variant</B> can’t contain a user-defined type.</P>
<H2><A NAME="sec171"></A>See Also</H2><P>Data Type Summary, <B>Do...Loop</B> Statement, <B>Exit</B> Statement, <B>For...Next</B> Statement, <B>While...Wend</B> Statement.</P>
<H2><A NAME="sec172"></A>Example</H2><P>This example uses the <B>For Each...Next</B> statement to search the <B>Text</B> property of all elements in a collection for the existence of the string “Hello”. In the example, MyObject is a text-related object and is an element of the collection MyCollection. Both are generic names used for illustration purposes only.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Found = False                            ' Initialize variable.Each MyObject In MyCollection        ' Iterate through each element. 
    If MyObject.Text = "Hello" Then        ' If Text equals "Hello".
        Found = True                        ' Set Found to True.
        Exit For                            ' Exit loop.
    End If
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
