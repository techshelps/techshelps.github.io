<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OrderBy Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec4"></A>OrderBy Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec5"></A>Applies To</H2><P>Form, Query, Report, Table.</P>
<H2><A NAME="sec6"></A>Description</H2><P>You can use the <B>OrderBy</B> property to specify how you want to sort records in a form, query, report, or table.</P>
<H2><A NAME="sec7"></A>Setting</H2><P>The <B>OrderBy</B> property is a string expression that is the name of the field or fields on which you want to sort records. When you use more than one field name, separate the names with a comma (,).</P>
<P>When you set the <B>OrderBy</B> property by entering one or more field names, the records will be sorted in ascending order. Similarly, Visual Basic will sort these fields in ascending order by default.</P>
<P>If you want to sort records in descending order, type <B>DESC</B> at the end of the string expression. For example, to sort customer records in descending order by contact name, set the <B>OrderBy</B> property to “ContactName DESC”.</P>
<P>You can set the <B>OrderBy</B> property in the object’s property sheet, a macro, or using Visual Basic.</P>
<H2><A NAME="sec8"></A>Remarks</H2><P>For reports, the <B>OrderByOn</B> property must be set to Yes to apply the sort order specified by the object’s <B>OrderBy</B> property. For forms, select the field on which you want to order the records and either click the appropriate Sort button on the toolbar, or point to Sort on the Records menu and click the appropriate command on the submenu. You can also set the <B>OrderByOn</B> property for either forms or reports using Visual Basic.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   When a new object is created, it inherits the <B>RecordSource</B>, <B>Filter</B>, <B>OrderBy</B>, and <B>OrderByOn</B> properties of the table or query it was created from. For forms and reports, inherited filters aren’t automatically applied an object is opened.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec9"></A>See Also</H2><P><B>AllowFilters</B> Property, ApplyFilter Action, <B>ApplyFilter</B> Method, <B>Filter</B> Property, <B>OrderByOn</B> Property.</P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
