<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BeforeUpdate, AfterUpdate Events -- Macros</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1>BeforeUpdate, AfterUpdate Events -- Macros</H1><P CLASS="t">  </P>
<H2><A NAME="sec96"></A>Description</H2><P>To run a macro when the BeforeUpdate or AfterUpdate event occurs, set the <B>BeforeUpdate</B> or <B>AfterUpdate</B> property to the name of the macro. Microsoft Access runs the macro specified by the <B>BeforeUpdate</B> or <B>AfterUpdate</B> property for a control or form before or after the data in the control or in the current record on the form is updated. If the data in the control or record isn’t updated, the macro doesn’t run.</P>
<H2><A NAME="sec97"></A>Remarks</H2><P>You can use BeforeUpdate macros if you want to store all the validations for a form in one macro group or if you use a validation expression on several forms.</P>
<P>For example, suppose you have a form on which the user enters the name of a country in a Country control and its corresponding postal code in a Postal Code control. You use conditional expressions in the macro to make sure that the data entered in the Country control corresponds to the data entered in the Postal Code control and to display a message if invalid data is entered in the Postal Code control.</P>
<P>You can use an AfterUpdate macro to display a different page in the form or move the focus to a particular control or record. For example, when the user enters a value in a Category control on a form, you can use the GoToPage action in an AfterUpdate macro to move the focus to the page of the form that contains the controls<B> </B>for that category.</P>
<P>You can use the CancelEvent action in a BeforeUpdate macro to cancel the update. If the BeforeUpdate macro is attached to a control, the CancelEvent action returns the focus to the control, and the data the user entered remains in the control.</P>
<P>If a BeforeUpdate macro is attached to a form (in which it runs each time a record is changed), the CancelEvent action returns the focus to the record.</P>
<P>You can’t use the CancelEvent action in an AfterUpdate macro.</P>
<H2><A NAME="sec98"></A>See Also</H2><P>BeforeUpdate, AfterUpdate Events — Event Procedures.</P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
