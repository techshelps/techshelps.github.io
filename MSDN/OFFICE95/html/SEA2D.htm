<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting an Error Trap</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Setting an Error Trap</H2><P CLASS="t">Visual Basic enables an error trap whenever it encounters the <B>On Error </B>statement, which specifies an <I>error handler</I> (the routine within a procedure that handles the error). The error trap remains enabled while the procedure that contains it is active — that is, until an <B>Exit Sub</B>, <B>Exit Function</B>, <B>End Sub</B>, or <B>End Function</B> statement is run in that procedure.</P>
<P CLASS="t">Although only one error trap can be enabled at any one time in any given procedure, you can create several alternative error traps and enable different ones at different times. You can also disable an error trap by using a special form of the <B>On Error </B>statement — <B>On Error GoTo 0</B>. For more information about disabling error handling, see "Turning Off Error Handling" later in this chapter.</P></FONT>
</FONT></BODY></HTML>
