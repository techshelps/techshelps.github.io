<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling Errors with Inline Code</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Handling Errors with Inline Code</H2><P CLASS="t">In previous sections of this chapter, you've used the <B>On Error GoTo</B> statement to jump to an error-handling subroutine and then resume running the rest of your code. You can also handle errors without branching to a subroutine.</P>
<P CLASS="t">If you anticipate that a particular statement might cause an error, include an <B>On Error Resume Next</B> statement before the potential error-causing statement to prevent the application from being interrupted. You can then test the value of the <B>Err</B> function and proceed accordingly.</P>
<P CLASS="t">The following procedure is a revision of the FileExists procedure shown earlier in this chapter. This revised version doesn't branch to a subroutine; instead, it handles errors in-line.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Function FileExists(filename)
Dim Msg

Const ERR_DISKNOTREADY = 71, ERR_DEVICEUNAVAILABLE = 68

' Resets the Err code to zero; handles errors inline
On Error Resume Next

CheckOnFile:
    FileExists = (Dir(filename) &lt;&gt; "")
    If Err = ERR_DISKNOTREADY Then
        Msg = "Put a floppy disk in the drive and close the drive door."
        If MsgBox (Msg, vbExclamation + vbOKCancel) = vbOK Then
            GoTo CheckOnFile
        End If
        FileExists = False
    ElseIf Err = ERR_DEVICEUNAVAILABLE Then
        Msg = "This drive or path doesn't exist: " &amp; filename
        MsgBox Msg, vbExclamation
        FileExists = False
    ' If not successful, and if not one of the above errors, handle
    ElseIf Err &lt;&gt; 0 Then
        Msg = "Unexpected error #" &amp; Str(Err) &amp; ": " &amp; Error(Err)
        MsgBox Msg, vbCritical
        FileExists = False
    End If</FONT></PRE>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">End Function
</FONT></PRE></FONT>
</FONT></BODY></HTML>
