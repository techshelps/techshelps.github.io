<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Method (ToolbarButtons Collection)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Add Method (ToolbarButtons Collection)</H2><P CLASS="h"><B>Applies To</B></P>
<P CLASS="t"><B>ToolbarButtons </B>Collection.</P>
<P CLASS="h"><B>Description</B></P>
<P CLASS="t">Adds a new button to an existing toolbar. Returns a <B>ToolbarButton</B> object.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><I>object</I>.<B>Add(</B><B><I>button</I></B>,<B><I> before</I></B>,<B><I> onAction</I></B>,<B><I> pushed</I></B>,<B><I> enabled</I></B>,<B><I> statusBar</I></B>,<B><I> helpContextID</I></B>,<B><I> helpFile</I></B><B>)</B></P>
<P CLASS="term1"><I>object</I></P>
<BLOCKQUOTE>
<P CLASS="dt1">Required. The <B>ToolbarButtons</B> object.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>button</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. The button ID number, as an integer. If this argument is omitted, a gap is inserted in the toolbar. You can only insert a gap between two toolbar buttons (you cannot insert a gap at the beginning or at the end of the toolbar). To insert a button followed by a gap at the beginning of the toolbar, insert the new button first, and then insert the gap after the new button. For a complete list of button IDs available to Visual Basic, see Toolbar Button ID Values.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>before</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies the new button position. The new button will be inserted before the button at this position. If this argument is omitted, the button is inserted at the end of the toolbar. Remember that gaps count as toolbar buttons; you cannot simply count buttons to get the button position. For example, if there is a gap between the first and second buttons on the toolbar, you must specify 3 for the <B><I>before</I></B> argument to insert a new button after the gap.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>onAction</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies an initial value for the <B>OnAction</B> property, which is the name of the macro that runs when the button is clicked. If omitted with a built-in button, the button will have its built-in behavior. If omitted with a custom button, the Assign Macro dialog box is displayed when the button is first clicked.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>pushed</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies an initial value for the <B>Pushed</B> property (<B>True</B> if the button appears pressed).</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>enabled</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies an initial value for the <B>Enabled </B>property (<B>True</B> if the button is enabled).</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>statusBar </I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies help text to display in the status bar when the mouse cursor is positioned over the toolbar button. If omitted the default status bar text assigned to the macro is used.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>helpContextID </I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies the context ID for the custom help topic of the toolbar button. If omitted the default help context ID assigned to the macro is used.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>helpFile </I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. Specifies the help file name containing the custom help topic of the toolbar button. If omitted the default help file name assigned to the macro is used.</P>
</BLOCKQUOTE>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">The settings specified for the <B><I>statusBar</I></B>, <B><I>helpContextID</I></B>, and <B><I>helpFile</I></B> arguments override any per-macro options set by the macro specified by the <B><I>onAction</I></B> argument.</P>
<P CLASS="t">However, changing the macro options after the toolbar button has been added overrides the custom help arguments used with the <B>Add</B> method.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Enabled </B>Property,<B> MacroOptions </B>Method,<B> OnAction </B>Property,<B> Pushed </B>Property.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example creates a new toolbar, adds the Camera button (button index number 228) to it, and then displays the new toolbar.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Set myNewToolbar = Toolbars.Add(Name:="My New Toolbar")
myNewToolbar.ToolbarButtons.Add Button:=228
myNewToolbar.Visible = True
</FONT></PRE></FONT>
</FONT></BODY></HTML>
