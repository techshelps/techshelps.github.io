<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDate Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec203"></A>CDate Function</H1><P CLASS="t">  </P>
<H2><A NAME="sec204"></A>Description</H2><P>Converts an expression to a <B>Date</B>.</P>
<H2><A NAME="sec205"></A>Syntax</H2><P><B>CDate(</B><I>date</I><B>)</B></P>
<P>The <I>date</I> argument is any valid date expression.</P>
<H2><A NAME="sec206"></A>Remarks</H2><P>Use the <B>IsDate</B> function to determine if <I>date</I> can be converted to a date or time. <B>CDate</B> recognizes date and time literals as well as some numbers that fall within the range of acceptable dates. When converting a number to a date, the whole number portion is converted to a date. Any fractional part of the number is converted to a time of day, starting at midnight.</P>
<P><B>CDate</B> recognizes date formats according to the locale setting of your system. The correct order of day, month, and year may not be determined if it is provided in a format other than one of the recognized date settings. In addition, a long date format is not recognized if it also contains the day-of-the-week string.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   A <B>CVDate</B> function is also provided for compatibility with previous versions of Visual Basic. However, since there is now an intrinsic <B>Date</B> type, there is no further need for <B>CVDate</B>. The syntax of the <B>CVDate</B> function is identical to the <B>CDate</B> function. The difference is that it returns a <B>Variant</B> whose subtype is Date instead of an actual <B>Date</B> type. The same effect can be achieved by converting an expression to a <B>Date</B> and then assigning it to a <B>Variant</B>. This technique is consistent with the conversion of all other intrinsic types to their equivalent <B>Variant</B> subtypes.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec207"></A>See Also</H2><P>Data Type Summary, <B>IsDate</B> Function.</P>
<H2><A NAME="sec208"></A>Example</H2><P>This example uses the <B>CDate</B> function to convert a string to a <B>Date</B>. In general, hard coding dates and times as strings (as shown in this example) is not recommended. Use date and time literals (such as #2/12/1969#, #4:45:23 PM#) instead.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>MyDate = "February 12, 1969"            ' Define date.= CDate(MyDate)            ' Convert to Date data type.= "4:35:47 PM"                ' Define time.= CDate(MyTime)            ' Convert to Date data type.
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
