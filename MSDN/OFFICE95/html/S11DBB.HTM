<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Private Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec213"></A>Private Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec214"></A>Description</H2><P>Used at module level to declare private variables and allocate storage space.</P>
<H2><A NAME="sec215"></A>Syntax</H2><P><B>Private</B> <I>varname</I>[<B>(</B>[<I>subscripts</I>]<B>)</B>][<B>As </B>[<B>New</B>] <I>type</I>][<B>, </B><I>varname</I>[<B>(</B>[<I>subscripts</I>]<B>)</B>][<B>As</B>[<B>New</B>] <I>type</I>]] <B>. . .</B></P>
<P>The <B>Private</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>varname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Name of the variable; follows standard variable naming conventions.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>subscripts</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Dimensions of an array variable; up to 60 multiple dimensions may be declared. The <I>subscripts</I> argument uses the following syntax:</P>
<P CLASS="t">[<I>lower</I> <B>To</B>] <I>upper</I>[<B>,</B>[<I>lower</I> <B>To</B>] <I>upper</I>] <B>. . .</B></P>
<P CLASS="t">When not explicitly stated in <I>lower</I>, the lower bound of an array is controlled by the <B>Option</B> <B>Base</B> statement. The lower bound is zero if no <B>Option</B> <B>Base</B> statement is present.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>New</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Keyword used to indicate that a declared object variable is a new instance of a Visual Basic object or an externally creatable OLE Automation object. The <B>New</B> keyword can’t be used to create variables of any intrinsic data type and can’t be used to create dependent OLE Automation objects.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>type</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Data type of the variable; may be <B>Byte</B>, <B>Boolean</B>, <B>Integer</B>, <B>Long</B>, <B>Currency</B>, <B>Single</B>, <B>Double</B>, <B>Date</B>, <B>String </B>(for variable-length strings), <B>String</B> * <I>length </I>(for fixed-length strings), <B>Object</B>, <B>Variant</B>, a user-defined type, or an object type. Use a separate <B>As</B> <I>type</I> clause for each variable being defined.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec216"></A>Remarks</H2><P><B>Private</B> variables are available only to the module in which they are declared.</P>
<P>Use the <B>Private</B> statement to declare the data type of a variable. For example, the following statement declares a variable as an <B>Integer</B>:</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Private NumberOfEmployees As Integer</PRE>
<P CLASS="t">  </P>
<P>Also use a <B>Private</B> statement to declare the object type of a variable. The following declares a variable for a new instance of a worksheet.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Private X As New Worksheet</PRE>
<P CLASS="t">  </P>
<P>If the <B>New</B> keyword is not used when declaring an object variable, no instance of the object actually exists. A variable that refers to an object must be assigned an existing object using the <B>Set</B> statement before it can be used. Until it is assigned an object, the declared object variable has the special value <B>Nothing</B>, which indicates that it does not refer to any particular instance of an object.</P>
<P>You can also use the <B>Private</B> statement with empty parentheses to declare a dynamic array. After declaring a dynamic array, use the <B>ReDim</B> statement within a procedure to define the number of dimensions and elements in the array. If you try to redeclare a dimension for an array variable whose size was explicitly specified in a <B>Private</B>, <B>Public</B>, or <B>Dim</B> statement, an error occurs.</P>
<P>If you do not specify a data type or object type, and there is no <B>Def</B><I>type</I> statement in the module, the variable is <B>Variant</B> by default.</P>
<P>When variables are initialized, a numeric variable is initialized to 0, a variable-length string is initialized to a zero-length string, and a fixed-length string is filled with zeros. <B>Variant</B> variables are initialized to <B>Empty</B>. Each element of a user-defined type variable is initialized as if it were a separate variable.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Tip</B>   When you use the <B>Private</B> statement in a procedure, it is a generally accepted programming practice to put the <B>Private</B> statement at the beginning of the procedure.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec217"></A>See Also</H2><P><B>Array</B> Function, <B>Const</B> Statement, <B>Dim</B> Statement, <B>Function</B> Statement, <B>Option</B> <B>Base</B> Statement, <B>Option</B> <B>Private</B> Statement, <B>Property</B> <B>Get</B> Statement, <B>Property</B> <B>Let</B> Statement, <B>Property</B> <B>Set</B> Statement, <B>Public</B> Statement, <B>ReDim</B> Statement, <B>Set</B> Statement, <B>Static</B> Statement, <B>Sub</B> Statement, <B>Type</B> Statement.</P>
<H2><A NAME="sec218"></A>Example</H2><P>This example shows the <B>Private</B> statement being used at the module level to declare variables as private; that is, they are available only to the module in which they are declared.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Private Number As Integer                    ' Private Integer variable.NameArray(1 To 5) As String            ' Private array variable.
' Multiple declarations, two Variants and one Integer, all Private.MyVar, YourVar, ThisVar As Integer
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
