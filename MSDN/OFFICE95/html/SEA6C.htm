<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Menu Components Dynamically</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Displaying Menu Components Dynamically</H2><P CLASS="t">If a menu component applies only to a particular sheet or workbook, it's best if that menu component appears only when that sheet or workbook is active; this reduces needless clutter in the interface. However, unlike changes made to the menu system with the Menu Editor, changes made using Visual Basic are stored globally, and their effects cannot be limited to a given workbook or sheet. You can, however, limit their lifetime to the period between the opening and subsequent closing of a particular workbook or the period between the activation and subsequent deactivation of a given sheet.</P>
<P CLASS="t">If you want a menu or menu item to appear only on a specific sheet, Visual Basic must add the component to the menu system every time the user activates the sheet and delete it every time the user deactivates the sheet. If you want to associate a menu bar with a sheet, Visual Basic can activate the menu bar when the user activates the sheet and then deactivate the menu bar when the user deactivates the sheet, rather than add the entire menu bar and then delete it. To do this, set the sheet's <B>OnSheetActivate</B> property to a procedure that adds or activates the component, and set the sheet's <B>OnSheetDeactivate</B> property to a procedure that removes or deactivates the component.</P>
<P CLASS="t">The following example causes the procedure AddNewMenu to run whenever the worksheet named "data108" is activated. This procedure adds a new menu to the Worksheet menu bar. The procedure RemoveNewMenu removes the menu when the worksheet is deactivated.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">With Worksheets("data108")
    .OnSheetActivate = "AddNewMenu"
    .OnSheetDeactivate = "RemoveNewMenu"
End With
</FONT></PRE>
<P CLASS="t">Use the Auto_Open and Auto_Close procedures attached to a workbook to add and remove menu components or to activate and deactivate a menu bar whenever that workbook is opened and closed. If you close the workbook without removing any new menus that you created while it was open, these menus will remain on the menu bar until you quit Microsoft Excel.</P></FONT>
</FONT></BODY></HTML>
