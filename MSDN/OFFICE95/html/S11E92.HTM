<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Report Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec113"></A>Report Object</H1><P CLASS="t">  </P>
<H2><A NAME="sec114"></A>Description</H2><P>A <B>Report</B> object refers to a particular Microsoft Access report.</P>
<H2><A NAME="sec115"></A>Remarks</H2><P>A <B>Report</B> object is a member of the <B>Reports</B> collection. Within the <B>Reports</B> collection, individual reports are numbered by an index beginning with zero. You can refer to an individual <B>Report</B> object in the <B>Reports</B> collection either by referring to the report by name, or by referring to its index within the collection. If the report name includes a space, the name must be surrounded by brackets.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="163pt" VALIGN="TOP"><COL WIDTH="205pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Syntax</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Example</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Reports!</B><I>reportname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Reports!OrderReport</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Reports![</B><I>report name</I><B>]</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Reports![Order Report]</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Reports("</B><I>reportname</I><B>")</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Reports("OrderReport")</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Reports(</B><I>index</I><B>)</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Reports(0)</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P>Each <B>Report</B> object has a <B>Controls</B> collection, which contains all controls on the report. You can refer to a control on a report either by implicitly or explicitly referring to the <B>Controls</B> collection. Your code will be faster if you refer to the <B>Controls</B> collection implicitly. The following examples show two of the ways you might refer to a NewData control on a report called OrderReport.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Reports!OrderReport!NewData           ' Implicit reference.</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Reports!OrderReport.Controls!NewData       ' Explicit reference.</PRE>
<P CLASS="t">  </P>
<P>Many of the properties of a <B>Report</B> object can also be set from a report’s property sheet. For information on how to set individual properties, see those properties.</P>
<P>You can’t add or delete a <B>Report</B> object from the <B>Reports</B> collection.</P>
<H2><A NAME="sec116"></A>Properties</H2><P><B>ActiveControl</B> Property, <B>ActiveReport</B> Property.</P>
<H2><A NAME="sec117"></A>See Also</H2><P><B>Controls</B> Collection, <B>Reports</B> Collection.</P>
<H2><A NAME="sec118"></A>Example</H2><P>The following example creates a new report and sets certain properties.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub NewReport()
    Dim rpt As Report</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>    ' Return variable of data type Report pointing to new Report object.
    Set rpt = CreateReport
    ' Set properties for new report.
    rpt.RecordSource = "Products"
    rpt.Caption = "Products Report"
    ' Restore new report.
    DoCmd.RestoreSub</PRE>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE></PRE>
<P CLASS="t">  </P>
<P>The next example enumerates the <B>Reports</B> collection and prints the name of each report in the <B>Reports</B> collection. It then enumerates the <B>Controls</B> collection of each report and prints the name of each control on the report.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub AllOpenReports()
    Dim rpt As Report, ctl As Control

    ' Enumerate Reports collection.
    For Each rpt In Reports
        ' Print name of report.
        Debug.Print rpt.Name
        ' Enumerate Controls collection of each report.
        For Each ctl In rpt.Controls
            ' Print name of each control.
            Debug.Print "&gt;&gt;&gt;"; ctl.Name
        Next ctl
    Next rptSub</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
