<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Shell</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H1 CLASS="h2">Shell</H1><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Shell</B> <I>Application$ </I>[<B>,&nbsp;</B><I>WindowStyle</I>]</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Starts another application (such as Microsoft Excel) or process (such as an MS-DOS batch file or executable file). In Windows, if the specified application is already running, <B>Shell</B> starts another instance of the same application; on the Macintosh, <B>Shell</B> activates the instance that is already running.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">In Word version 6.0 for Windows NT and Word version 7.0, you cannot depend on a program started with <B>Shell</B> to be finished loading before the instructions following the <B>Shell</B> statement in your macro are run. Any instructions that try to communicate with an application that has not finished loading will generate errors or unexpected results. To avoid this problem, you can use a <B>For...Next</B> loop to delay the instructions until the other application is loaded. For an example, see <B>DDEInitiate</B>.</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="274pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Application$ </I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">In Windows, the path and filename required to find the application, as well as any valid switches or arguments you choose to include, just as you would type them in the Run dialog box. To display a command window, specify Environ$("COMSPEC") (Windows 3.<I>x</I>), Environ$("COMMAND") (Windows 95), or Environ$("CMD") (Windows NT) as <I>Application$</I>.</P>
<P CLASS="tt">On the Macintosh, <I>Application$</I> is the application name or the signature returned by the <B>MacID$</B><B>()</B> function. It is generally preferable to use the signature instead of the application name (for example, MacID$("XCEL") instead of "Microsoft Excel") because, unlike the application name, the signature never changes.</P>
<P CLASS="tt"><I>Application$</I> can be a document filename by itself, provided the file is associated with an application. (In Windows, a filename is associated with an application if its extension is registered in the [Extensions] section of the WIN.INI file (or the registry in Windows 95 and Windows NT). On the Macintosh, associations between filenames and applications are created automatically; you can use <B>SetFileCreatorAndType</B> to change an association.) <B>Shell</B> starts the associated application and opens the document.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="274pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>WindowStyle</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">In Windows, how the window containing the application should be displayed (some applications ignore this):</P>
<P CLASS="tt">0 (zero)    Minimized window (icon)</P>
<P CLASS="tt">1    Normal window (current window size, or previous size if minimized)</P>
<P CLASS="tt">2    Minimized window (for Microsoft Excel compatibility)</P>
<P CLASS="tt">3    Maximized window</P>
<P CLASS="tt">4    Deactivated window</P>
<P CLASS="tt">On the Macintosh, <I>WindowStyle</I> 0 (zero), 1, 2, and 3 are effectively the same: The application window (which has only one size) is activated. Set <I>WindowStyle</I> to 4 to start an application but leave Word active.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Examples</B></P>
<P CLASS="t">This Windows example starts Notepad and loads the document TORT.TXT:</P>
<P CLASS="spacing"><BR></P>
<PRE>Shell "Notepad TORT.TXT"
</PRE>
<P CLASS="t">The following Macintosh example starts Microsoft Excel but leaves Word active:</P>
<P CLASS="spacing"><BR></P>
<PRE>Shell MacID$("XCEL"), 4
</PRE>
<P CLASS="t">The following Windows example creates a text-only file (DOCLIST.TXT) that lists documents with the filename extension .DOC in the C:\WINWORD folder. You might use an instruction like this to create a file you can open later for sequential input. The "/c" switch ensures that control is returned to Word after the command line following "/c" is run.</P>
<P CLASS="spacing"><BR></P>
<PRE>Shell Environ$("COMSPEC") + " /c dir /b C:\WINWORD\*.DOC &gt; DOCLIST.TXT"
</PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>AppActivate</B>,<B> DDEInitiate</B><B>()</B>,<B> Environ$</B><B>()</B>, <B>MacID$</B><B>()</B>, <B>SetFileCreatorAndType</B></P></FONT></FONT></BODY></HTML>
