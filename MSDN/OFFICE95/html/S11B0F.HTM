<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Me Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec78"></A>Me Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec79"></A>Applies To</H2><P>Form, Report.</P>
<H2><A NAME="sec80"></A>Description</H2><P>You can use the <B>Me</B> property in Visual Basic to refer to a form or report, or the form or report associated with a subform or subreport, where Visual Basic code is currently running.</P>
<H2><A NAME="sec81"></A>Setting</H2><P>The <B>Me</B> property is available only in Visual Basic and is read-only in all views.</P>
<H2><A NAME="sec82"></A>Remarks</H2><P>In most cases, the form or report referred to by the <B>Me</B> property is the same form or report referred to by the <B>ActiveForm</B> or <B>ActiveReport</B> properties of the <B>Screen</B> object. However, these properties refer to the form or report with the focus, whereas the <B>Me</B> property always refers to the form or report in which code is running. For example, a Timer event can occur in a form that doesn’t have the focus. When that happens, the code Screen.ActiveForm refers to the form with the focus, and the <B>Me</B> property refers to the form in which the Timer event occurred. Therefore, when creating generic procedures that operate on the current form, the preferred method is to pass the form to the procedure using the <B>Me</B> property rather than the <B>ActiveForm</B> property.</P>
<H2><A NAME="sec83"></A>See Also</H2><P><B>ActiveForm</B> Property; <B>ActiveReport</B> Property; <B>Form</B>, <B>Report</B> Properties; <B>Parent</B> Property; <B>Screen</B> Object.</P>
<H2><A NAME="sec84"></A>Example</H2><P>The following example shows how to change the caption of the Customers form to the current company name whenever a new record is displayed. The form’s Current event procedure calls the ChangeCaption subroutine and passes it the <B>Me</B> property to specify the active form. The ChangeCaption procedure changes the caption of the form. Because the ChangeCaption procedure changes the caption of the active form (and not a specific form), it can be called from other procedures in an application.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub Form_Current()
    ChangeCaption Me        ' Pass current form name as argument.Sub
ChangeCaption(frmCurrentForm As Form)
    ' Move focus to Customer Name text box.     frmCurrentForm![CompanyName].SetFocus
    ' Change caption.
    frmCurrentForm.Caption = frmCurrentForm![CompanyName].TextSub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
