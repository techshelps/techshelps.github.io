<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateObject Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>CreateObject Function</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Creates an OLE Automation object.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>CreateObject</B>(<B><I>class</I></B>)</P>
<P CLASS="t">The <B><I>class</I></B> named argument uses the syntax: <B>"</B><I>appname</I><B>.</B><I>objecttype</I><B>"</B> and has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>appname</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The name of the application providing the object.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>objecttype</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The type or class of object to create.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Remarks</B></P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">If an application that supports OLE Automation exposes an object library, it is preferable to use the functions defined within the library for object creation rather than use <B>CreateObject</B>.</P>
<P></P>
<P CLASS="t">Each application that supports OLE Automation provides at least one type of object. For example, a word processing application may provide an application object, a document object, and a toolbar object.</P>
<P CLASS="t">Use this function to create an OLE Automation object and assign the object to an object variable. To do this, use the <B>Set</B> statement to assign the object returned by <B>CreateObject</B> to the object variable. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Set WordBasicObject = CreateObject("Word.Basic")
</FONT></PRE>
<P CLASS="t">When this code is executed, the application creating the object is started, if it is not already running (Microsoft Word in this example), and an object of the specified type is created. Once an object is created, you reference it in code using the object variable you defined. In the above example, you access properties and methods of the new object using the object variable, WordBasicObject. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">WordBasicObject.Insert "Hello, world."
WordBasicObject.FilePrint
WordBasicObject.FileSaveAs "C:\DOCS\TEST.DOC"</FONT></PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>GetObject</B> Function, <B>Set</B> Statement.</P>
<P></P></FONT>
</FONT></BODY></HTML>
