<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 2 Variables, Constants,and Data Types</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1 CLASS="cht">Chapter 2 Variables, Constants,<BR>and Data Types</H1><P CLASS="t">This chapter describes a variety of strategies for managing data storage that enhance different aspects of macro performance:</P>
<UL><LI>Using constants, variables, or structured groups of variables instead of literal values in code. This technique allows you to make single-point changes, and it makes code easier to read, modify, and debug. </LI><LI>Specifying the parts of a program where specific data is available by defining the scope of the data. This technique reduces the number of procedures from which data can be manipulated and therefore reduces both the possibility that the data can be corrupted and the number of places you must look for the cause of a particular problem.</LI><LI>Specifying the length of time to keep data in a variable or constant by defining the lifetime of the data. This technique prevents unexpected reinitialization of variables and allows retention of a variable's value between calls to a procedure.</LI><LI>Specifying the amount of space to allocate in memory for the data and how to organize the data by declaring the data type. This technique makes your macros use less memory and run faster.</LI><LI>Grouping related data together by creating an array or user-defined data type. Grouping data makes it easier to work with many related variables at once. User-defined types can also make your code easier to read and modify.</LI></UL><P></P>
<P CLASS="t">This chapter first discusses the basic data storage concepts mentioned above and then describes in detail how to put these concepts to work in your macros.</P>
<H5><A NAME="sec0"></A>Contents</H5><UL><LI>Variables</LI><LI>Constants</LI><LI>Data Types</LI></UL><P></P></FONT>
</FONT></BODY></HTML>
