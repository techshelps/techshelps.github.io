<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Keeping Properties and Methods Outside Loops</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Keeping Properties and Methods Outside Loops</H2><P CLASS="t">Your code can get variable values faster than it can get property values. Therefore, if your code gets the value of a property within a loop, it will run faster if you assign the property to a variable outside the loop and use the variable instead of the property inside the loop. The following example is slow because it gets the <B>Value</B> property each time through the loop.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">For iLoop = 2 To 200
    Cells(iLoop, 1).Value = Cells(1, 1).Value
Next I
</FONT></PRE>
<P CLASS="t">The following example is faster because the value of one property has been assigned to the variable cv before the loop begins. Visual Basic must therefore access only one property value, instead of two, each time through the loop.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">cv = Cells(1, 1).Value
For iLoop = 2 To 200
    Cells(iLoop, 1).Value = cv
Next i
</FONT></PRE>
<P CLASS="t">If you're using an object accessor inside a loop, try to move it outside the loop. The following example calls the <B>ActiveWorkbook</B> property, the <B>Sheets</B> method, and the <B>Cells</B> method each time through the loop.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">For c = 1 To 1000
    ActiveWorkbook.Sheets(1).Cells(c, 1) = c
Next</FONT></PRE>
<P CLASS="t">Rewriting this example using the <B>With</B> statement moves the <B>ActiveWorkbook</B> property and <B>Sheets</B> method calls outside the loop. You could also move these calls outside the loop using an object variable.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">With ActiveWorkbook.Sheets(1)
    For c = 1 To 1000
        .Cells(c, 1) = c
    Next
End With
</FONT></PRE></FONT>
</FONT></BODY></HTML>
