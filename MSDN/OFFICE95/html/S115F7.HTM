<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso8859-1">


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Deftype Statements</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h1><a name="sec297"></a>Deftype Statements</h1>

<h2><a name="sec298"></a>Description</h2>

<p>Used at module level to set the default data type for
variables, arguments passed to procedures, and the return type
for <b>Function</b> and <b>Property</b> <b>Get</b> procedures
whose names start with the specified characters.</p>

<h2><a name="sec299"></a>Syntax</h2>

<p><b>DefBool</b> <i>letterrange</i>[, <i>letterrange</i>] . . .<b>DefByte</b>
<i>letterrange</i>[, <i>letterrange</i>] . . .<b>DefInt</b> <i>letterrange</i>[,
<i>letterrange</i>] . . .<b>DefLng</b> <i>letterrange</i>[, <i>letterrange</i>]
. . .<b>DefCur</b> <i>letterrange</i>[, <i>letterrange</i>] . . .<b>DefSng</b>
<i>letterrange</i>[, <i>letterrange</i>] . . .<b>DefDbl</b> <i>letterrange</i>[,
<i>letterrange</i>] . . .<b>DefDate</b> <i>letterrange</i>[, <i>letterrange</i>]
. . .<b>DefStr</b> <i>letterrange</i>[, <i>letterrange</i>] . . .<b>DefObj</b>
<i>letterrange</i>[, <i>letterrange</i>] . . .<b>DefVar</b> <i>letterrange</i>[,
<i>letterrange</i>] . . .</p>

<p>The argument <i>letterrange</i> has the following syntax:</p>

<p><i>letter1</i>[<b>-</b><i>letter2</i>]</p>

<p>The <i>letter1</i> and <i>letter2</i> arguments specify the
name range for which you can set a default data type. Each
argument represents the first letter of the variable, argument, <b>Function</b>
procedure, or <b>Property Get</b> procedure name and can be any
letter of the alphabet. The case of letters in letterrange
isn&#146;t significant.</p>

<h2><a name="sec300"></a>Remarks</h2>

<p>The statement name determines the data type:</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Statement</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Data Type</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefBool</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Boolean</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefByte</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Byte</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefInt</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Integer</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefLng</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Long</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefCur</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Currency</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefSng</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Single</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefDbl</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Double</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefDate</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Date</td>
    </tr>
</TBODY></table>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Statement</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Data Type</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefStr</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">String</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefObj</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Object</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">DefVar</td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Variant</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<p>For example, in the following program fragment, Message is a
string variable:</p>

<p class="spacing"><br>
</p>

<pre>DefStr A-Q
<b>. . .</b>= &quot;Out of stack space.&quot;
</pre>

<p>A <b>Def</b><i>type</i> statement affects only the module
where it is used. For example, a <b>DefInt</b> statement in one
module affects only the default data type of variables, arguments
passed to procedures, and the return type for <b>Function</b> and
<b>Property</b> <b>Get</b> procedures declared in that module;
the default data type of variables, arguments, and return types
in other modules is unaffected. If not explicitly declared with a
<b>Def</b><i>type</i> statement, the default data type for all
variables, all arguments, all <b>Function </b>procedures, and all
<b>Property</b> <b>Get</b> procedures is <b>Variant</b>.</p>

<p>When you specify a letter range, it usually defines the data
type for variables that begin with letters in the first 128
characters of the character set. However, when you specify the
letter range A &#150; Z, you set the default to the specified
data type for all variables, including any that begin with
international characters from the extended part of the character
set (128 &#150; 255).</p>

<p>Once the range A &#150; Z has been specified, you can&#146;t
further redefine any subranges of variables using <b>Def</b><i>type</i>
statements. In fact, once a range has been specified, if you
include a previously defined letter in another <b>Def</b><i>type</i>
statement, an error occurs. However, you can explicitly specify
the data type of any variable, defined or not, using a <b>Dim</b>
statement with an <b>As</b> <i>type</i> clause. For example, you
can use the following code at module level to define a variable
as a <b>Double</b> even though the default data type is <b>Integer</b>:</p>

<p class="spacing"><br>
</p>

<pre>DefInt A-ZTaxRate As Double
</pre>

<p><b>Def</b><i>type</i> statements don&#146;t affect elements of
user-defined types since the elements must be explicitly
declared.</p>

<h2><a name="sec301"></a>See Also</h2>

<p><b>Function</b> Statement, <b>Let</b> Statement, <b>Property</b>
<b>Get</b> Statement.</p>

<h2><a name="sec302"></a>Example</h2>

<p>This example shows various uses of the <b>Def</b><i>type</i>
statements to set default data types of variables and function
procedures whose names start with specified characters. The
default data type can be overridden only by explicit assignment
using the <b>Dim</b> statement. <b>Def</b><i>type</i> statements
can only be used at the module level (that is, not within
procedures).</p>

<p class="spacing"><br>
</p>

<pre>' Variable names beginning with A through K default to Integer.A-K
' Variable names beginning with L through Z default to String.L-Z= 4                            ' Initialize Integer.= &quot;Hello there&quot;            ' Initialize String.= &quot;Hello&quot;                     ' Causes &quot;Type mismatch&quot; error.Calc As Double                    ' Explicitly set the type to Double.= 2.3455                        ' Assign a Double.

' Deftype statements also apply to function procedures.= ATestFunction(4)            ' Call user-defined function.
' ATestFunction function procedure definition.ATestFunction(INumber)
    ATestFunction = INumber * 2        ' Return value is an integer.Function
</pre>
</FONT></FONT></BODY>
</html>
