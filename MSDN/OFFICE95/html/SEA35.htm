<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Simulating Run-Time Errors</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Simulating Run-Time Errors</H2><P CLASS="t">Simulating run-time errors is useful when you're testing your applications or when you want to treat a particular condition as a run-time error. For example, you might write a module that calls routines in a dynamic-link library (DLL) and want the rest of your application to handle the DLL's return values as actual Visual Basic errors — that is, to generate run-time errors in Microsoft Excel.</P>
<P CLASS="t">You can simulate any Visual Basic run-time error by supplying the error code for that error in the <B>Error</B> statement, as in the following example.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Error 71        ' Simulate "Disk Not Ready" error.
</FONT></PRE>
<P CLASS="t">You can also use the <B>Error</B> statement to generate your own, user-defined errors by supplying an error code that doesn't correspond to a Visual Basic run-time error. Of course, this is useful only if you also write code that handles the new errors you define. For a list of built-in errors, see "Trappable errors" in Help.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">As new errors are defined in future versions of Visual Basic, more error numbers will be assigned to built-in errors. If you want to generate and trap your own errors, begin your numbering scheme with 50,000 and work upward from there. This way, you'll avoid using the same number for your own error that a future version of Visual Basic might use for a built-in error.</P>
<P></P></FONT>
</FONT></BODY></HTML>
