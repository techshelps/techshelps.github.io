<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Communicating with Embedded Word Objects</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Communicating with Embedded Word Objects</H2><P CLASS="t">When you embed a Word document in a Microsoft Excel worksheet, Microsoft Excel controls the object, and Word controls everything inside the object.</P>
<P CLASS="t">A <I>linked object</I> is an object that contains a reference pointer to its application. Data associated with a linked object isn't stored within the application that contains the object. If you change data in a linked application, the data will change in the original application as well.</P>
<P CLASS="t">An <I>embedded object</I> is an object that contains a "snapshot" of data existing at the time you embedded the object. Data associated with an embedded object is stored in the file in which the object is embedded. If you change data in an embedded object, the data in the original application doesn't change.</P>
<P CLASS="t">An OLE <I>container</I> application is an OLE-based application that can store embedded or linked objects provided by OLE object applications. An OLE <I>object</I> application is an application that exposes the OLE object.</P>
<H3><A NAME="sec0"></A>Editing an Embedded Word Object</H3><P CLASS="t">To edit a Word document embedded as an OLE object, you must activate it before you can refer to one of the top-level objects. The following example activates and edits a Word document, which is the first OLE object on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Dim wordobj As Object

Worksheets("sheet1").OLEObjects(1).Verb
Set wordobj = Worksheets("sheet1").OLEObjects(1).Object _     .Application.WordBasic
With wordobj
    .Insert "This is the new first line."
    .InsertPara
    .LineUp 1
    .EndOfLine 1
    .Bold
    .LineDown 1
End With
</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">Using the <B>Verb</B> method with no arguments, as demonstrated in the preceding example, is equivalent to using the <B>Activate</B> method. For information about the arguments you can use with the <B>Verb</B> method, see "Verb method" in&nbsp;Help.</P>
<P></P>
<H3><A NAME="sec1"></A>Printing an Embedded Word Object</H3><P CLASS="t">To print a Word document that's embedded on a Microsoft Excel sheet, first activate the embedded document, and then use the WordBasic <B>FilePrint</B> command. The following example activates, edits, and prints a Word document, which is the first OLE object on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Dim wordobj As Object

Worksheets("sheet1").OLEObjects(1).Verb
Set wordobj = Worksheets("sheet1").OLEObjects(1).Object _     .Application.WordBasic
With wordobj
    .Insert "Dear Mrs. Jones:"
    .InsertPara
    .FilePrint
    .FileClose
End With
</FONT></PRE></FONT>
</FONT></BODY></HTML>
