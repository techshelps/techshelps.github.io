<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MouseMove Event</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec174"></A>MouseMove Event</H1><P CLASS="t">  </P>
<H2><A NAME="sec175"></A>Applies To</H2><P>Bound Object Frame Control, Chart Control, Check Box Control, Combo Box Control, Command Button Control, Form, Form Section, Image Control, Label Control, List Box Control, Option Button Control, Option Group Control, Rectangle Control, Text Box Control, Toggle Button Control, Unbound Object Frame Control.</P>
<H2><A NAME="sec176"></A>Description</H2><P>The MouseMove event occurs when the user moves the mouse.</P>
<P></P>
<P CLASS="t">  </P>
<P>   <B>Notes</B></P>
<P CLASS="t">  </P>
<SPAN CLASS="list"><UL><LI><SPAN CLASS="Symbol"></SPAN>    The MouseMove event applies only to forms, form sections, and controls on a form.</LI><LI><SPAN CLASS="Symbol"></SPAN>    This event doesn’t apply to a label attached to another control, such as the label for a text box. It applies only to “freestanding” labels. Moving the mouse pointer over an attached label has the same effect as moving the pointer over the associated control. The normal events for the control occur; no separate events occur for the attached label.</LI></UL></SPAN><P></P>
<H2><A NAME="sec177"></A>Remarks</H2><P>The MouseMove event is generated continually as the mouse pointer moves over objects. Unless another object generates a mouse event, an object recognizes a MouseMove event whenever the mouse pointer is positioned within its borders.</P>
<P>To cause a MouseMove event for a form to occur, move the mouse pointer over a blank area, record selector, or scroll bar on the form. To cause a MouseMove event for a form section to occur, move the mouse pointer over a blank area of the form section after selecting the section. To select the form section, click the section header.</P>
<P></P>
<P CLASS="t">  </P>
<P>   <B>Notes</B></P>
<P CLASS="t">  </P>
<SPAN CLASS="list"><UL><LI><SPAN CLASS="Symbol"></SPAN>    Moving a form can trigger a MouseMove event even if the mouse is stationary. MouseMove events are generated when the form moves underneath the pointer. If a macro or event procedure moves a form in response to a MouseMove event, the event can cascade (that is, continually generate MouseMove events).</LI><LI><SPAN CLASS="Symbol"></SPAN>    If two controls are very close together, and you move the mouse pointer quickly over the space between them, the MouseMove event may not occur for the space (for example, this might be the MouseMove event for the form section). In such cases, you may need to respond to the MouseMove event in the contiguous control. as well as in the form section.</LI></UL></SPAN><P></P>
<P>To run a macro or execute an event procedure in response to pressing and releasing the mouse buttons, you use the MouseDown and MouseUp events.</P>
<H2><A NAME="sec178"></A>See Also</H2><P>Click Event; DblClick Event; Enter, Exit Events; GotFocus, LostFocus Events; MouseDown, MouseUp Events.</P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
