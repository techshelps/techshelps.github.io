<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1>Application Property</H1><P CLASS="t">  </P>
<H2>Applies To</H2><P CLASS="t">Bound Object Frame Control, Chart Control, Check Box Control, Combo Box Control, Command Button Control, <B>Controls</B> Collection, Form, Form Section, <B>Forms</B> Collection, Image Control, Label Control, Line Control, List Box Control, Option Button Control, Option Group Control, Page Break Control, <B>Properties</B> Collection, Rectangle Control, Report, Report Section, <B>Reports</B> Collection, <B>Screen</B> Object, Subform/Subreport Control, Text Box Control, Toggle Button Control, Unbound Object Frame Control.</P>
<H2>Description</H2><P CLASS="t">You can use the <B>Application</B> property in Visual Basic to access the active Microsoft Access <B>Application</B> object and its related properties.</P>
<H2>Setting</H2><P CLASS="t">The <B>Application</B> property is set by Microsoft Access and is read-only.</P>
<H2>Remarks</H2><P CLASS="t">Each Microsoft Access object has an <B>Application</B> property that returns the current <B>Application</B> object. You can use this property to access any of the <B>Application</B> object properties. For example, you could refer to the menu bar for the <B>Application</B> object from the current form using the following syntax:</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Me.Application.MenuBar
</PRE>
<P CLASS="t">  </P>
<H2>See Also</H2><P CLASS="t"><B>Application</B> Object.</P>
<H2>Example</H2><P CLASS="t">This example demonstrates the use of the <B>Application</B> and <B>DBEngine</B> properties to display the <B>DBEngine</B> properties in a message box.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Private Sub Command1_Click()
    Dim x As Integer
    x = DisplayApplicationInfo(Me) Sub
DisplayApplicationInfo(obj As Object) As Integer
    Dim apl As Object, intI As Integer, strProps As String
    On Error Resume Next
    ' Form application property. 
        Set apl = obj.Application
        MsgBox "Application visible Property = " &amp; apl.Visible
        If apl.UserControl = True Then
        For intI = 0 To apl.DBEngine.Properties.Count - 1
    strProps = strProps &amp; apl.DBEngine.Properties(intI).Name &amp; ", "
        Next intI
        End If
    MsgBox Left(strProps, Len(strProps) - 2) &amp; ".", vbOK, _ 
        "DBEngine Properties"Function
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
