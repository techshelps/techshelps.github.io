<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CVErr Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>CVErr Function</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Returns a <B>Variant</B> of subtype <B>Error</B> containing an error number specified by the user.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>CVErr(</B><I>errornumber</I><B>)</B></P>
<P CLASS="t">The <I>errornumber</I> argument is any valid error number.</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Use the <B>CVErr</B> function to create user-defined errors in user-created procedures. For example, if you create a function that accepts several arguments and normally returns a string, you can have your function evaluate the input arguments to ensure they are within acceptable range. If they are not, it is likely that your function will not return what you expect. In this event, <B>CVErr</B> allows you to return an error number that tells you what action to take.</P>
<P CLASS="t">Note that implicit conversion of an <B>Error</B> is not allowed. For example, you can't directly assign the return value of <B>CVErr</B> to a non-<B>Variant</B> variable. However, you can perform an explicit conversion (using <B>CInt</B>, <B>CDbl</B>, and so on) of the value returned by <B>CVErr</B> and assign that to a variable of the appropriate data type.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t">Data Type Summary, <B>IsError</B> Function.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example uses the <B>CVErr</B> function to return an <B>Error</B> <B>Variant</B>. The user-defined function CalculateDouble returns an error if the argument passed to it isn't a number. <B>CVErr</B> is useful for returning user-defined errors from user-defined procedures. Use the <B>IsError</B> function to test if the value is an error.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">' Define CalculateDouble Function procedure.
Function CalculateDouble(Number)
    If IsNumeric(Number) Then
        CalculateDouble = Number * 2    ' Return result.
    Else
        CalculateDouble = CVErr(2001)    ' Return a user-defined error 
    End If    ' number.
End Function
</FONT></PRE>
<P CLASS="t">This example inserts the seven cell error values into cells A1:A7 on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">myArray = Array(xlErrDiv0, xlErrNA, xlErrName, xlErrNull, _
    xlErrNum, xlErrRef, xlErrValue)
For i = 1 To 7
    Worksheets("Sheet1").Cells(i, 1).Value = CVErr(myArray(i - 1))
Next i
</FONT></PRE>
<P CLASS="t">This example displays a message if the active cell on Sheet1 contains a cell error value. You can use this example as a framework for a cell-error-value error handler.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Activate
If IsError(ActiveCell.Value) Then
    errval = ActiveCell.Value
    Select Case errval
        Case CVErr(xlErrDiv0)
            MsgBox "#DIV/0! error"
        Case CVErr(xlErrNA)
            MsgBox "#N/A error"
        Case CVErr(xlErrName)
            MsgBox "#NAME? error"
        Case CVErr(xlErrNull)
            MsgBox "#NULL! error"
        Case CVErr(xlErrNum)
            MsgBox "#NUM! error"
        Case CVErr(xlErrRef)
            MsgBox "#REF! error"
        Case CVErr(xlErrValue)
            MsgBox "#VALUE! error"
        Case Else
            MsgBox "This should never happen!!"
    End Select
End If
</FONT></PRE></FONT>
</FONT></BODY></HTML>
