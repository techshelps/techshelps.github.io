<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StartupForm Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec47"></A>StartupForm Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec48"></A>Description</H2><P>You can use the <B>StartupForm</B> property to specify the name of the form that opens when your database first opens. For example, you can use this property to display a specified form that contains a menu of all available forms, queries, and reports within a Microsoft Access application when the database opens.</P>
<H2><A NAME="sec49"></A>Setting</H2><P>The <B>StartupForm</B> property is a string expression that is the name of a form in the current database.</P>
<P>You can set this property by using a macro or Visual Basic. You can also set this property using the Display Form option in the Startup dialog box, available by clicking Startup on the Tools menu. This is the easiest way to set this property.</P>
<H2><A NAME="sec50"></A>Remarks</H2><P>The <B>StartupForm</B> property is preferred over the OpenForm action in the AutoExec macro. Because Microsoft Access runs the AutoExec macro after it parses the startup properties, your application should not use an OpenForm action in its AutoExec macro if the <B>StartupForm</B> property is set.</P>
<P>If this property is blank, the Microsoft Access default database setting is used (the Database Window opens).</P>
<P>This property’s setting does not take effect until the next time the application database opens.</P>
<H2><A NAME="sec51"></A>See Also</H2><P><B>AllowBreakIntoCode</B> Property, <B>StartupMenuBar</B> Property, <B>StartupShortcutMenuBar</B> Property, <B>StartupShowDBWindow</B> Property, <B>StartupShowStatusBar</B> Property.</P>
<H2><A NAME="sec52"></A>Example</H2><P>This example shows procedure named SetStartupProperties that passes the name of the property to be set, its data type, and its desired setting. The general purpose procedure ChangeProperty attempts to set the startup property and, if the property is not found, uses the <B>CreateProperty</B> method to append it to the database properties collection. This is necessary because these properties do not appear in the properties collection until they have been set or changed at least once.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub SetStartupProperties()
    ChangeProperty "StartupForm", dbText, "Customers"
    ChangeProperty "StartupShowDBWindow", dbInteger, False
    ChangeProperty "StartupShowStatusBar", dbInteger, False
    ChangeProperty "AllowBuiltinToolbars", dbInteger, False
    ChangeProperty "AllowFullMenus", dbInteger, True
    ChangeProperty "AllowBreakIntoCode", dbInteger, False
    ChangeProperty "AllowSpecialKeys", dbInteger, True
    ChangeProperty "AllowBypassKey", dbInteger, TrueSub
ChangeProperty(strPropName As String, varPropType As _
        Variant, varPropValue As Variant) As Integer
    Dim dbs As Database, prp As Property
    Const conPropNotFountError = 3270
    Set dbs = CurrentDb
    On Error GoTo Change_Err
    dbs.Properties(strPropName) = varPropValue
    ChangeProperty = True_Bye:
    Exit Function_Err:
    If Err = conPropNotFoundError Then  'prop not found
        Set prp = dbs.CreateProperty(strPropName, _
            varPropType, varPropValue)
        dbs.Properties.Append prp
        Resume Next
    Else
        ' Unknown error.
        ChangeProperty = False
        Resume Change_Bye
    End IfFunction
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P></FONT></FONT></BODY></HTML>
