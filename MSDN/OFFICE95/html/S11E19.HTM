<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Raise Method</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec307"></A>Raise Method</H1><P CLASS="t">  </P>
<H2><A NAME="sec308"></A>Applies To</H2><P><B>Err</B> Object.</P>
<H2><A NAME="sec309"></A>Description</H2><P>Generates a run-time error.</P>
<H2><A NAME="sec310"></A>Syntax</H2><P><I>object</I><B>.Raise(<I>Number</I>, <I>Source</I>, <I>Description</I>, <I>HelpFile</I>, <I>HelpContext</I>)</B></P>
<P>The <B>Raise</B> method has the following object qualifier and named arguments:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="91pt" VALIGN="TOP"><COL WIDTH="282pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Argument</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>object</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Always the <B>Err </B>object.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>Number</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Required. A <B>Long </B>integer that identifies the nature of the error. Visual Basic errors (both Visual Basic-defined and user-defined errors) are in the range 0– 65535. When setting the <B>Number</B> property to your own error code in an OLE Automation object, you add your error code number to the constant <B>vbObjectError</B>. For example, to generate the error number 1050, assign <B>vbObjectError</B> + 1050 to the <B>Number</B> property. (Not all Visual Basic host applications can create OLE Automation objects. See your host application’s documentation to determine whether it can create classes and OLE Automation objects.)</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>Source</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Optional. A string expression naming the object or application that originally generated the error. When setting this property for an OLE Automation object, use the form <I>project</I><B>.</B><I>class</I>. If nothing is specified, the programmatic ID of the current Visual Basic project is used.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>Description</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Optional. A string expression describing the error. If unspecified, the value in <B>Number</B> is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <B>Error</B> function is used as <B>Description</B><I>. </I>If there is no Visual Basic error corresponding to <B>Number</B>, “Application-defined or object-defined error” is used.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>HelpFile</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Optional. The fully qualified path to the Microsoft Windows Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and filename of the Visual Basic Help file.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>HelpContext</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Optional. The context ID identifying a topic within <B>HelpFile</B> that provides help for the error. If omitted, the Visual Basic Help file context ID for the error corresponding to the <B>Number</B> property is used, if it exists.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec311"></A>Remarks</H2><P>All the arguments are optional except <I>Number</I>. If you use <B>Raise</B>, however, without specifying some arguments, and the property settings of the <B>Err</B> object contain values that have not been cleared, those values serve as the values for your error.</P>
<P><B>Raise</B> is used for generating run-time errors, and can be used instead of the <B>Error</B> statement (<B>Error </B>still works the same in existing code, and may be appropriate in new code). <B>Raise</B> is useful for generating errors when writing OLE Automation objects, since the <B>Err</B> object gives the programmer and user richer information than is possible if you generate errors with the <B>Error </B>statement. For example, with the <B>Raise</B> method the original generator of the error can be specified in the <B>Source</B> property, online Help for the error can be referenced, and so forth.</P>
<H2><A NAME="sec312"></A>See Also</H2><P><B>Clear</B> Method, <B>Description</B> Property, <B>Err</B> Object, <B>Error</B> Statement, <B>HelpContext</B> Property, <B>HelpFile</B> Property, <B>LastDLLError</B> Property, <B>Number</B> Property, <B>Source</B> Property.</P>
<H2><A NAME="sec313"></A>Example</H2><P>This example uses the <B>Err </B>object’s <B>Raise </B>method to generate an error within an OLE Automation object written in Visual Basic. It has the programmatic ID MyProj.MyObject.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Const MyContextID = 1010407            ' Define a constant for contextID.TestName(CurrentName, NewName)
    If Instr(NewName, "bob") Then    ' Test the validity of NewName.
        ' Raise the exception.
        Err.Raise vbObjectError + 27, "MyProj.MyObject", _
            "No ""bob"" allowed in your name", "c:\MyProj\MyHelp.Hlp", _
            MyContextID
    End IfFunction
</PRE>
<P CLASS="t">  </P>
<P></P>
<P></P>
<P CLASS="t"> </P></FONT></FONT></BODY></HTML>
</FONT></FONT></BODY></HTML>
