<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Workbook Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Workbook Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Represents a Microsoft Excel workbook.</P>
<P CLASS="h"><B>Accessors</B></P>
<P CLASS="t">The <B>Workbook</B> object is a member of the <B>Workbooks</B> collection. The <B>Workbooks</B> collection contains all the <B>Workbook</B> objects currently open in Microsoft Excel. Use the <B>Open</B> method to open a file. Use the <B>Add</B> method to create a new empty workbook and add it to the collection.</P>
<P CLASS="t">To access a single member of the collection, use the <B>Workbooks</B> method with the index number or name of the workbook as an argument.</P>
<P CLASS="t">The index number represents the order in which the workbooks were opened or created. Workbooks(1) is the first workbook created; Workbooks(Workbooks.Count) is the last. Activating a workbook does not change its index number. All workbooks are included in the index count, even if they are hidden. The following example activates workbook one.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Workbooks(1).Activate
</FONT></PRE>
<P CLASS="t">The <B>Name</B> property returns the workbook name. You cannot set the name using this property. Use the <B>SaveAs</B> method to save the workbook under a different name if you need to change the name. The following example activates the worksheet named "Sheet1" in the workbook named COGS.XLS (the workbook must already be open in Microsoft Excel).</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Workbooks("cogs.xls").Worksheets("sheet1").Activate
</FONT></PRE>
<H4><A NAME="sec0"></A>Using ActiveWorkbook</H4><P CLASS="t">The <B>ActiveWorkbook</B> property returns the currently active workbook. The following example sets the name of the author for the active workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">ActiveWorkbook.Author = "Jean Selva"
</FONT></PRE>
<H4><A NAME="sec1"></A>Using ThisWorkbook</H4><P CLASS="t">The <B>ThisWorkbook</B> property returns the workbook where the Visual Basic code is running. In most cases, this is the same as the active workbook. However, if the Visual Basic code is part of an add-in, the <B>ThisWorkbook</B> property will not return the active workbook. In this case, the active workbook is the workbook calling the add-in, while the <B>ThisWorkbook</B> property returns the add-in workbook.</P>
<P CLASS="t">If you will be creating an add-in from your Visual Basic code, you should use the <B>ThisWorkbook</B> property to qualify any statement which must run on the workbook you compile into the add-in.</P>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>ActiveChart </B>Property,<B> ActiveSheet </B>Property,<B> Application </B>Property,<B> Author </B>Property,<B> BuiltinDocumentProperties </B>Property,<B> Colors </B>Property,<B> Comments </B>Property,<B> Container </B>Property,<B> CreateBackup </B>Property,<B> Creator </B>Property,<B> CustomDocumentProperties </B>Property,<B> Date1904 </B>Property,<B> DisplayDrawingObjects </B>Property,<B> FileFormat </B>Property,<B> FullName </B>Property,<B> HasMailer </B>Property,<B> HasPassword </B>Property,<B> HasRoutingSlip </B>Property,<B> Keywords </B>Property,<B> Mailer </B>Property,<B> MultiUserEditing </B>Property,<B> Name </B>Property,<B> OnSave </B>Property,<B> OnSheetActivate </B>Property,<B> OnSheetDeactivate </B>Property,<B> Parent </B>Property,<B> Path </B>Property,<B> PrecisionAsDisplayed </B>Property,<B> ProtectStructure </B>Property,<B> ProtectWindows </B>Property,<B> ReadOnly </B>Property,<B> ReadOnlyRecommended </B>Property,<B> RevisionNumber </B>Property,<B> Routed </B>Property,<B> RoutingSlip </B>Property,<B> Saved </B>Property,<B> SaveLinkValues </B>Property,<B> ShowConflictHistory </B>Property,<B> Subject </B>Property,<B> Title </B>Property,<B> UpdateRemoteReferences </B>Property,<B> UserStatus </B>Property,<B> WriteReserved </B>Property, <B>WriteReservedBy</B> Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>Activate </B>Method,<B> ChangeFileAccess </B>Method,<B> ChangeLink </B>Method,<B> Charts </B>Method,<B> Close </B>Method,<B> DeleteNumberFormat </B>Method,<B> DialogSheets </B>Method,<B> EditionOptions </B>Method,<B> Excel4IntlMacroSheets </B>Method,<B> Excel4MacroSheets </B>Method,<B> ExclusiveAccess </B>Method,<B> ForwardMailer </B>Method,<B> LinkInfo </B>Method,<B> LinkSources </B>Method,<B> Modules </B>Method,<B> Names </B>Method,<B> NewWindow </B>Method,<B> OpenLinks </B>Method,<B> Post </B>Method,<B> PrintOut </B>Method,<B> PrintPreview </B>Method,<B> Protect </B>Method,<B> Reply </B>Method,<B> ReplyAll </B>Method,<B> Route </B>Method,<B> RunAutoMacros </B>Method,<B> Save </B>Method,<B> SaveAs </B>Method,<B> SaveCopyAs </B>Method,<B> SendMail </B>Method,<B> SendMailer </B>Method,<B> SetLinkOnData </B>Method,<B> Sheets </B>Method,<B> Styles </B>Method,<B> Unprotect </B>Method,<B> UpdateFromFile </B>Method,<B> UpdateLink </B>Method,<B> Windows </B>Method,<B> Worksheets </B>Method.</P>
<P></P></FONT>
</FONT></BODY></HTML>
