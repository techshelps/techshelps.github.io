<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TabIndex Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec159"></A>TabIndex Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec160"></A>Applies To</H2><P>Bound Object Frame Control, Check Box Control, Combo Box Control, Command Button Control, List Box Control, Option Button Control, Option Group Control, Subform/Subreport Control, Text Box Control, Toggle Button Control, Unbound Object Frame Control.</P>
<H2><A NAME="sec161"></A>Description</H2><P>You can use the <B>TabIndex</B> property to specify a control’s place in the tab order on a form.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   The <B>TabIndex</B> property applies only to controls on a form.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec162"></A>Setting</H2><P>You can set the <B>TabIndex</B> property to an integer representing the position of the control within the tab order of the form. Valid settings are 0 for the first tab position, up to the total number of controls minus 1 for the last tab position. For example, if a form has three controls that each have a <B>TabIndex</B> property, valid <B>TabIndex</B> property settings are 0, 1, and 2.</P>
<P>Setting the <B>TabIndex</B> property to an integer less than 0 produces an error.</P>
<P>You can set this property using the control’s property sheet, a macro, or Visual Basic.</P>
<H2><A NAME="sec163"></A>Remarks</H2><P>By default, Microsoft Access assigns a tab order to controls in the order that you create them on a form. Each new control is placed last in the tab order. If you change the setting of a control’s <B>TabIndex</B> property to adjust the tab order, Microsoft Access automatically renumbers the <B>TabIndex</B> property setting of other controls to reflect insertions and deletions.</P>
<P>In Form view, invisible or disabled controls remain in the tab order but are skipped when you press the TAB key.</P>
<P>Changing the tab order of other controls on the form doesn’t affect what happens when you press a control’s access key. For example, if you’ve created an access key for the label of a text box, the focus will move to the text box whenever you press the label’s access key — even if you change the <B>TabIndex</B> property setting for the text box.</P>
<P>If you press an access key for a control that doesn’t have a <B>TabIndex</B> property, the focus moves to the next control in the tab order that can receive the focus.</P>
<H2><A NAME="sec164"></A>See Also</H2><P><B>AutoTab</B> Property, <B>TabStop</B> Property.</P>
<H2><A NAME="sec165"></A>Example</H2><P>The following example reverses the tab order of a command button and a text box. Because Textbox1 was created first, it has a <B>TabIndex</B> property setting of 0 and Command1 has a setting of 1.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub Form_Click()
    Me![Command1].TabIndex = 0
    Me![TextBox1].TabIndex = 1Sub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P></FONT></FONT></BODY></HTML>
