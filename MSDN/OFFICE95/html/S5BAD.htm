<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 9 Menus and Toolbars</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1 CLASS="cht">Chapter 9 Menus and Toolbars</H1><P CLASS="t">An essential part of creating a useful custom application is providing a simple and consistent way for the user to interact with your application. Chapter 8, "Controls and Dialog Boxes," describes two user interface enhancements that help you achieve this goal: dialog boxes and controls. Dialog boxes are well suited to presenting the user with a set of complex options or returning information to the user, whereas controls offer the most visually obvious connection to the data they act on. However, menus and toolbars often provide quicker, more convenient, and more widely accessible ways to expose simple commands and options to the user.</P>
<P CLASS="t">In this chapter, you'll first get an overview of menus and toolbars and how each can enhance your application. Next, you'll examine menus and their components in detail. You'll see how to make design-time changes to the menu system, such as adding a new menu to a menu bar, using either the Menu Editor or Visual Basic code. Then you'll learn how to make run-time changes to the menu system, such as adding a check mark to a menu item.</P>
<P CLASS="t">In the second part of the chapter, you'll examine toolbars and toolbar buttons. You'll learn how to modify toolbars and toolbar buttons while you're designing your user interface. For example, you can create a new toolbar or add a toolbar button to the toolbar. Then you'll see how to change the properties of toolbars and toolbar buttons in response to user input while your application is running. For example, you can hide a toolbar when the user no longer needs it, or you can change a button so that it will look "pushed" after a user has clicked it.</P>
<H4><A NAME="sec0"></A>Contents</H4><UL><LI>Choosing the Best User Interface Enhancement</LI><LI>The Menu System</LI><LI>Design-Time Modifications to the Menu System</LI><LI>Run-Time Modifications to the Menu System</LI><LI>Toolbars and Toolbar Buttons</LI><LI>Design-Time Modifications to Toolbars and Toolbar Buttons</LI><LI>Run-Time Modifications to Toolbars and Toolbar Buttons</LI></UL></FONT>
</FONT></BODY></HTML>
