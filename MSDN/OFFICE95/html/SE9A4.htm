<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Function Procedures on Worksheets</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Using Function Procedures on Worksheets</H2><P CLASS="t"><B>Function</B> procedures you can use to replace long worksheet formulas in a worksheet cell — just as you use built-in worksheet functions — are called <I>user-defined worksheet functions</I>.</P>
<P CLASS="t">For example, suppose that the workbook named "MyBook" contains the function ConeSurface, which was defined in "Returning a Value from a Function" earlier in this chapter. If you want a cell on a worksheet in MyBook — a cell in any workbook that has a reference to MyBook — to contain the surface area of a cone with a radius of 5 and a height of 10, you should place the formula =ConeSurface(5,10) in the cell. If you want to use the ConeSurface function in a worksheet cell in a workbook that doesn't contain a reference to MyBook, you should precede the function name with the name of the workbook and an exclamation mark — for example, =MYBOOK.XLS!ConeSurface(5,10) — and MyBook must be open.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">You can call functions in loaded add-ins without opening the add-in workbook and without specifying the workbook name. For information about creating add-ins, see Chapter 12, "Creating Add-Ins."</P>
<P></P>
<P CLASS="t">A user-defined worksheet function must not change any data in a workbook or change the Microsoft Excel environment in ways such as the following:</P>
<UL><LI>Inserting, deleting, or formatting cells</LI><LI>Changing cell values</LI><LI>Moving, renaming, deleting, or adding sheets</LI><LI>Changing the calculation mode or screen view</LI></UL><P></P>
<P CLASS="t">In addition, names of procedures you intend to use as user-defined functions in Microsoft Excel cannot have names that resemble A1-style or R1C1-style cell addresses.</P>
<P CLASS="t">If you cannot remember the exact name of a user-defined function or the name or number of its arguments, you can use the Function Wizard to examine the function and its arguments.</P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To insert a user-defined function using the Function Wizard</B></P>
<P CLASS="ls">    1.    On the Insert menu, click Function.</P>
<P CLASS="ls">    2.    In the Function Category box, click User Defined.</P>
<P CLASS="ls">    3.    In the Function Name box, click the name of the function you want to insert.</P>
<P CLASS="ls">    4.    Follow the rest of the Wizard steps. Where appropriate, the Wizard will give you a chance to fill in arguments.</P>
<P></P>
<P CLASS="t">If you want a user-defined function to appear in a category other than User Defined, assign it to a different function category.</P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To specify a user-defined function's category</B></P>
<P CLASS="ls">    1.    With a module active, click Object Browser on the View menu.</P>
<P CLASS="ls">    2.    In the Methods/Properties box, click the function you want to specify a category for.</P>
<P CLASS="ls">    3.    Click Options to display the Macro Options dialog box.</P>
<P CLASS="ls">    4.    In the Function Category box, click the category where you want the function to appear.</P>
<P></P></FONT>
</FONT></BODY></HTML>
