<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Assigning Code to Controls</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Assigning Code to Controls</H2><P CLASS="t">After you place a control on a worksheet, chart sheet, or dialog sheet and establish its initial properties, you can assign a Visual Basic procedure to the control.</P>
<P CLASS="t">Whenever an action (also called an <I>event</I>) occurs on the control, Microsoft Excel runs the procedure assigned to the control. The following table describes the events that the various types of control respond to.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="174pt" VALIGN="TOP"><COL WIDTH="173pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Controls</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Event</B></P></FONT></TD></TR><TR><TD COLSPAN="3" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Command buttons, group boxes, check boxes, option buttons </P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The user activates the control. This event is used for controls that have no value or that have only a simple value, such as <B>True </B>or <B>False</B>.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Edit boxes, list boxes, drop-down boxes, combination list-edit boxes, combination drop-down edit boxes, scroll bars, spinners</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The user changes the control. This event is used for controls that support a complex value.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Dialog frames</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The dialog box appears.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">For example, if you assign a procedure to an edit box, the procedure is called whenever the user enters or changes data in the edit box. When you assign a procedure to a dialog frame, the procedure runs when the dialog box is first made visible.</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">You can assign any Visual Basic procedure to a control. Functionally, there's nothing special about the procedure name; creating a procedure called "Button4_Click" doesn't automatically assign the procedure to Button4 — you must use the Assign Macro dialog box or the <B>OnAction</B> property to assign the procedure to the control.</P>
<P></P>
<P CLASS="t">You can also assign code to drawing objects (such as ovals and rectangles). For more information, see Chapter 11, "Automatic Procedures and OnEvent Procedures."</P>
<H3><A NAME="sec0"></A>Using the Assign Macro Dialog Box</H3><P CLASS="t">The Assign Macro dialog box allows you to specify the procedure that runs when an event occurs.</P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To associate an existing procedure with the event belonging to a control</B></P>
<P CLASS="ls">    1.    Select the control.</P>
<P CLASS="ls">    2.    On the Tools menu, click Assign Macro.</P>
<P CLASS="lt1">You can also click the control using the right mouse button (to display the shortcut menu) and then click Assign Macro.</P>
<P CLASS="ls">    3.    In the Macro Name/Reference box, enter the name of the procedure you want to assign to the event.</P>
<P></P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To create a new procedure and associate it with the event belonging to a control</B></P>
<P CLASS="ls">    1.    Select the control.</P>
<P CLASS="a"><img src="BEDTCODE.gif"></P>
<P>Edit Code</P>
<P CLASS="ls">    2.    On the Forms toolbar, click the Edit Code button.</P>
<P CLASS="lt1">Microsoft Excel opens a Visual Basic module scrolled to display an empty procedure.</P>
<P CLASS="ls">    3.    Between the <B>Sub</B> and <B>End Sub</B> statements, write the procedure you want to associate with the event.</P>
<P></P>
<P CLASS="proch"><B><img src="prcarrow.gif">    To edit a procedure previously associated with the event belonging to a control</B></P>
<P CLASS="ls">    1.    Select the control.</P>
<P CLASS="a"><img src="BEDTCODE.gif"></P>
<P>Edit Code</P>
<P CLASS="ls">    2.    On the Forms toolbar, click the Edit Code button.</P>
<P CLASS="lt1">Microsoft Excel opens a Visual Basic module scrolled to display the associated procedure. If the associated code belongs to the Microsoft Excel 4.0 macro language, Microsoft Excel switches to the macro sheet containing the associated macro.</P>
<P CLASS="ls">    3.    Edit the code.</P>
<P></P>
<H3><A NAME="sec1"></A>Using Visual Basic</H3><P CLASS="t">The <B>OnAction</B> property sets the name of the procedure that runs whenever an event occurs. The following example causes the <B>StartDialog</B> procedure to run whenever the dialog box first starts and causes the <B>ButtonPressed</B> procedure to run whenever the user clicks a button on the first dialog sheet.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">With DialogSheets(1)
    .DialogFrame.OnAction = "StartDialog"
    .Buttons.OnAction = "ButtonPressed"
End With</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Tip</B></P>
<P CLASS="nt">The <B>ButtonPressed</B> procedure can use the <B>Caller</B> property to determine which button was clicked. For buttons, the <B>Caller</B> property returns the button name.</P>
<P></P></FONT>
</FONT></BODY></HTML>
