<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Integer Data Type</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec30"></A>Integer Data Type</H1><P CLASS="t">  </P>
<H2><A NAME="sec31"></A>Description</H2><P><B>Integer</B> variables are stored as 16-bit (2-byte) numbers ranging in value from <BR>,768 to 32,767. The type-declaration character for <B>Integer</B> is <B>%</B>.</P>
<P>You can also use <B>Integer</B> variables to represent enumerated values. An enumerated value can contain a finite set of unique whole numbers, each of which has special meaning in the context in which it is used. Enumerated values provide a convenient way to select among a known number of choices. For example, when asking the user to select a color from a list, you could have black = 0, white = 1, and so on. It is good programming practice to define constants using the <B>Const</B> statement for each enumerated value.</P>
<H2><A NAME="sec32"></A>See Also</H2><P><B>CInt</B> Function, Data Type Summary, <B>Def</B><I>type </I>Statements, <B>Long</B> Data Type, <B>Variant</B> Data Type.</P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
