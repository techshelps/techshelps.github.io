<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Select Case Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec384"></A>Select Case Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec385"></A>Description</H2><P>Executes one of several groups of statements, depending on the value of an expression.</P>
<H2><A NAME="sec386"></A>Syntax</H2><P><B>Select Case</B> <I>testexpression<BR>    </I>[<B>Case</B> <I>expressionlist-n<BR></I>        [<I>statements-n</I>]] <B>. . .<BR>    </B>[<B>Case Else<BR></B>        [<I>elsestatements</I>]]<BR><B>End Select</B></P>
<P>The <B>Select Case</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="107pt" VALIGN="TOP"><COL WIDTH="267pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part </B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>testexpression</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Any numeric or string expression.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>expressionlist-n</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Delimited list of one or more of the following forms: <I>expression</I>, <I>expression</I> <B>To</B><I> expression</I>, <B>Is</B> <I>comparisonoperator</I> <I>expression</I>. The <B>To</B> keyword specifies a range of values. If you use the <B>To</B> keyword, the smaller value must appear before <B>To</B>. Use the <B>Is</B> keyword with comparison operators (except <B>Is</B> and <B>Like</B>) to specify a range of values. If not supplied, the <B>Is</B> keyword is automatically inserted.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>statements-n</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">One or more statements executed if <I>testexpression</I> matches any part of <I>expressionlist-n.</I></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>elsestatements</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">One or more statements executed if <I>testexpression</I> doesn’t match any of the <B>Case</B> clause.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec387"></A>Remarks</H2><P>If <I>testexpression</I> matches any <I>expressionlist</I> expression associated with a <B>Case</B> clause, the <I>statements</I> following that <B>Case</B> clause are executed up to the next <B>Case</B> clause, or, for the last clause, up to the <B>End Select</B>. Control then passes to the statement following <B>End Select</B>. If <I>testexpression</I> matches an <I>expressionlist</I> expression in more than one <B>Case</B> clause, only the statements following the first match are executed.</P>
<P>The <B>Case Else</B> clause is used to indicate the <I>statements</I> to be executed if no match is found between the <I>testexpression</I> and an <I>expressionlist</I> in any of the other <B>Case</B> selections. When there is no <B>Case Else</B> statement and no expression listed in the <B>Case</B> clauses matches <I>testexpression</I>, execution continues at the statement following <B>End Select</B>.</P>
<P>Although not required, it is a good idea to have a <B>Case Else</B> statement in your<B> Select Case</B> block to handle unforeseen <I>testexpression</I> values.</P>
<P>You can use multiple expressions or ranges in each <B>Case</B> clause. For example, the following line is valid:</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Case 1 To 4, 7 To 9, 11, 13, Is &gt; MaxNumber
</PRE>
<P CLASS="t">  </P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   The <B>Is</B> comparison operator is not the same as the <B>Is</B> keyword used in the <B>Select Case</B> statement.</P>
<P CLASS="t">  </P>
<P></P>
<P>You also can specify ranges and multiple expressions for character strings. In the following example, <B>Case</B> matches strings that are exactly equal to everything, strings that fall between nuts and soup in alphabetical order, and the current value of TestItem:</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Case "everything", "nuts" To "soup", TestItem
</PRE>
<P CLASS="t">  </P>
<P><B>Select Case </B>statements can be nested. Each <B>Select Case</B> statement must have a matching <B>End Select </B>statement.</P>
<H2><A NAME="sec388"></A>See Also</H2><P><B>If...Then...Else</B> Statement; <B>On...GoSub</B>, <B>On...GoTo</B> Statements.</P>
<H2><A NAME="sec389"></A>Example</H2><P>This example uses the <B>Select Case</B> statement to evaluate the value of a variable. The second <B>Case</B> clause contains the value of the variable being evaluated, and therefore only the statement associated with it is executed.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Number = 8                    ' Initialize variable.Case Number            ' Evaluate Number.1 To 5                    ' Number between 1 and 5.
    Debug.Print "Between 1 and 5"
' The following is the only Case clause that evaluates to True.6, 7, 8                    ' Number between 6 and 8.
    Debug.Print "Between 6 and 8"Is &gt; 8 And Number &lt; 11    ' Number is 9 or 10..Print "Greater than 8"Else                    ' Other values.
    Debug.Print "Not between 1 and 10"Select
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P></FONT></FONT></BODY></HTML>
