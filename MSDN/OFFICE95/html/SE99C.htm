<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding the Structure of a Module</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Understanding the Structure of a Module</H2><P CLASS="t">Modules are workbook sheets that contain code. Each module can contain a declarations section, followed by procedures. The declarations section at the top of the module can contain:</P>
<UL><LI><B>Option statements</B>. If your module contains any <B>Option</B> statements, which set various module-level options, these statements must appear before any procedures. For more information, see "option" in Help.</LI><LI><B>User-defined type definitions</B>. If your module contains any user-defined types, their definitions must appear before any procedures. For more information about user-defined types, see Chapter 2, "Variables, Constants, and Data Types."</LI><LI><B>Declarations</B>. Any variable or constant declarations that aren't contained within a procedure must be placed before any procedures in the module. For more information about declaring variables and constants, see Chapter 2, "Variables, Constants, and Data Types."</LI></UL><P></P>
<P CLASS="t">Except for <B>Option</B> statements, user-defined type definitions, and declarations, all code in Visual Basic must be contained within procedures; Visual Basic modules cannot contain free-floating (uncontained) commands.</P></FONT>
</FONT></BODY></HTML>
