<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Messages and Requesting Information</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H2 CLASS="h1">Displaying Messages and Requesting Information</H2><P CLASS="t">WordBasic includes several statements and functions you can use to communicate with the user. This section explains the <B>Print</B>, <B>MsgBox</B>, <B>MsgBox</B><B>()</B>, <B>InputBox$</B><B>()</B>, and <B>Input</B> statements and functions, each of which provides a different way to display a message or to request information. Here's a brief overview of the capabilities of each one:</P>
<UL><LI>    Print displays a message in the status bar. It is useful for displaying status messages while the macro is running. It doesn't require any response from the user.</LI><LI>    The <B>MsgBox</B> statement displays a message box that the user must acknowledge before the macro can continue. The <B>MsgBox</B><B>()</B> function displays a message box and also returns a value. You can use <B>MsgBox</B><B>()</B> to ask the user a&nbsp;question that requires a "yes" or "no" answer.</LI><LI>    InputBox$() displays a dialog box in which the user can type a response to a&nbsp;prompt.</LI><LI>    <B>Input</B> displays a prompt in the status bar where the user can type a response.</LI></UL><P></P>
<P CLASS="t">You can also create your own dialog boxes with check boxes, list boxes, and other features. For more information, see Chapter 5, "Working with Custom Dialog Boxes."</P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt"><B>Print</B> and <B>Input</B> can also be used to insert information into or read information from text files. For information on using <B>Print</B> and <B>Input</B> in this way, see "Using Sequential File Access" in Chapter 9, "More WordBasic Techniques."</P>
<P></P>
<H3 CLASS="h3"><A NAME="sec0"></A>Print</H3><P CLASS="t">The <B>Print</B> statement displays a message in the status bar. Its most common use is to display a message describing the status of the macro. For example, if a macro needs time to perform a task, you might use the <B>Print</B> statement to display the message "Working…" in the status bar so the user understands that something is indeed happening.</P>
<P CLASS="t">The instruction Print "Working..." displays the following message in the status bar.</P>
<P CLASS="a">    <img src="ATR0311.gif"></P>
<P CLASS="t">The <B>Print</B> statement accepts strings, string variables, numbers, and numeric variables, and allows you to mix them together. Here are some examples of valid <B>Print</B> instructions:</P>
<P CLASS="spacing"><BR></P>
<PRE>Print "Hello"
Print Name$
Print 365.25
Print Total
</PRE>
<P CLASS="t">The <B>Print</B> statement can also display multiple items separated by commas or semicolons. When you use commas as delimiters, Word inserts a predefined tab space between the items. When you use semicolons as delimiters, the next item starts immediately after the previous one. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE>Print "Hello, "; Name$, "The total is "; Total
</PRE>
<H3 CLASS="h3"><A NAME="sec1"></A>MsgBox and MsgBox()</H3><P CLASS="t">The <B>MsgBox</B> statement displays a message in a message box that the user must acknowledge before the macro can continue. You can provide a title for the message box and specify a symbol that identifies the type of message you want to&nbsp;display. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE>MsgBox "The macro is finished.", "Sample Macro", 64
</PRE>
<P CLASS="t">This instruction displays the following message box.</P>
<P CLASS="a">    <img src="ATR0312.gif"></P>
<P CLASS="t">In the previous <B>MsgBox</B> instruction, "Sample Macro" is the message box title and 64&nbsp;is a number that controls which symbol and buttons are displayed. For more information on using these arguments, see <B>MsgBox</B> in Part 2, "WordBasic Reference."</P>
<P CLASS="t">The <B>MsgBox</B><B>()</B><B> </B>function is just like the <B>MsgBox</B> statement, except that you can use it to give the user a choice or to ask the user a question. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE>answer = MsgBox("OK to reformat?", "Two Column Macro", 292)
</PRE>
<P CLASS="t">This instruction displays the following message box.</P>
<P CLASS="a">    <img src="ATR0313.gif"></P>
<P CLASS="t">If the user chooses the Yes button, <B>MsgBox</B><B>()</B> returns one value; if the user chooses the No button, <B>MsgBox</B><B>()</B> returns a different value. The values are placed in the variable answer. The numeric argument 292 specifies the symbol and buttons displayed.</P>
<H3 CLASS="h3"><A NAME="sec2"></A>InputBox$()</H3><P CLASS="t"><B>InputBox$</B><B>()</B> displays an input box in which the user can type a response to a&nbsp;prompt. You can provide a title for the input box, a prompt, and a default response. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE>DocName$ = InputBox$("Name of the file to open?", "Open Macro", \
        "Latest memo")
</PRE>
<P CLASS="t">This instruction displays the following input box.</P>
<P CLASS="a">    <img src="ATR0314.gif"></P>
<P CLASS="t">The user can replace the default response or accept it. The response is placed in the variable DocName$. Note that the user can type more than one line in an input box and can type enter to begin a new line. If the user presses enter to begin a new line, either Chr$(11) + Chr$(10) (Windows) or just Chr$(11) (Macintosh) is included in the string <B>InputBox$</B><B>()</B> returns. In Windows, the Chr$(11) + Chr$(10) combination is interpreted as two paragraph marks when inserted into a document; in effect, an extra paragraph mark is inserted. You can use the <B>CleanString$</B><B>()</B> function to remove the extra paragraph mark, as shown in the following example:</P>
<P CLASS="spacing"><BR></P>
<PRE>Address$ = InputBox$("Please type an address:", "Letter Macro")
Insert CleanString$(Address$)
</PRE>
<H3 CLASS="h3"><A NAME="sec3"></A>Input</H3><P CLASS="t">The <B>Input</B> statement uses the status bar to prompt the user for information. Because it's easy to overlook a prompt in the status bar, <B>InputBox$</B><B>()</B> is generally preferred over <B>Input</B>. However, <B>Input</B> is a little more flexible than <B>InputBox$</B><B>()</B>. <B>Input</B> can assign the user's response to numeric or string variables, whereas <B>InputBox$</B><B>()</B> only returns strings. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE>Input "What point size for the headline", Size
</PRE>
<P CLASS="t">This instruction displays the following prompt. Notice that <B>Input</B> adds a question mark to the prompt.</P>
<P CLASS="a">    <img src="ATR0315.gif"></P>
<P CLASS="t">The user's response is placed in the numeric variable Size.</P>
<P CLASS="t">You can prompt for a list of variables by separating each one with a comma. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE>Input ItemNumber, Quantity
Input UserName$, ID
</PRE>
<P CLASS="t">The user must respond with appropriate values separated by commas. The following are examples of acceptable responses:</P>
<P CLASS="spacing"><BR></P>
<PRE>1234,3
Mark Kyle, 6823
</PRE>
<P CLASS="t"><B>Input</B> always attempts to divide the user's response at a comma. If you want to allow responses that contain commas, use a <B>Line Input</B> instruction. <B>Line Input </B>works like <B>Input</B>,<B> </B>but with one important difference: You can specify only a single string variable. For example:</P>
<P CLASS="spacing"><BR></P>
<PRE>Line Input Address$
</PRE>
<P CLASS="t">If Word encounters a comma in the response, it returns the comma as part of the string that is assigned to Address$.</P></FONT></FONT></BODY></HTML>
