<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Type Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Type Statement</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Used at module level to define a user-defined data type containing one or more elements.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn">[<B>Private</B> | <B>Public</B>] <B>Type</B> <I>varname</I><BR>      <I>elementname</I> [<B>(</B>[<I>subscripts</I>]<B>)</B>] <B>As</B> <I>type</I><BR>    [ <I>elementname</I> [<B>(</B>[<I>subscripts</I>]<B>)</B>] <B>As</B> <I>type</I>]<BR>    .<B> </B>.<B> </B>.<B><BR>End Type</B></P>
<P CLASS="t">The <B>Type </B>statement syntax has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="258pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Public</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Used to declare user-defined types that are available to all procedures in all modules in all projects.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><B>Private</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Used to declare user-defined types that are available only within the module where the declaration is made.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>varname</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Name of the user-defined type; follows standard variable naming conventions.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>elementname</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Name of an element of the user-defined type. Element names also follow standard variable naming conventions, except that reserved words can be used.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>subscripts</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Dimensions of an array element. Use only parentheses when declaring an array whose size can change.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>type</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Data type of the element; may be <B>Boolean</B>, <B>Integer</B>, <B>Long</B>, <B>Currency</B>, <B>Single</B>, <B>Double</B>, <B>Date</B>, <B>String</B>, <B>String</B> * <I>length</I> (for fixed-length strings), <B>Object</B>, <B>Variant</B>, another user-defined type, or an object type.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">The <B>Type</B> statement can be used only at module level. Once you have declared a user-defined type using the <B>Type</B> statement, you can declare a variable of that type anywhere within the scope of the declaration. Use <B>Dim</B>, <B>Private</B>, <B>Public</B>, <B>ReDim</B>, or <B>Static</B> to declare a variable of a user-defined type.</P>
<P CLASS="t">Line numbers and line labels aren't allowed in <B>Type</B>...<B>End Type</B> blocks.</P>
<P CLASS="t">User-defined types are often used with data records, which frequently consist of a number of related elements of different data types.</P>
<P CLASS="t">The following example shows the use of fixed-size arrays in a user-defined type:</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Type StateData
    CityCode (1 To 100) As Integer ' Declare a static array.
    County As String * 30
End Type
Dim Washington(1 To 100) As StateData
</FONT></PRE>
<P CLASS="t">In the preceding example, StateData includes the CityCode static array, and the record Washington has the same structure as StateData.</P>
<P CLASS="t">When you declare a fixed-size array within a user-defined type, its dimensions must be declared with numeric literals or constants rather than variables.</P>
<P CLASS="t">The setting of the <B>Option Base</B> statement determines the lower bound for arrays within user-defined types.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Dim</B> Statement, <B>Private</B> Statement, <B>Public</B> Statement, <B>ReDim</B> Statement, <B>Static</B> Statement.</P>
<P CLASS="t"></P></FONT>
</FONT></BODY></HTML>
