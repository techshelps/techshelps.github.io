<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Array Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Array Function</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Returns a <B>Variant</B> containing an array.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Array</B>(<I>arglist</I>)</P>
<P CLASS="t">The <I>arglist</I> consists of a comma-delimited list of an arbitrary number of values that are assigned to the elements of the array contained within the <B>Variant</B>. If no arguments are specified, an array of zero-length is created.</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Although a <B>Variant</B> containing an array is conceptually different from an array whose elements are of type <B>Variant</B>, the way the array elements are accessed is the same. The notation used to refer to any element of an array consists of the variable name followed by parentheses containing an index number to the desired element. In the following example, the first statement creates a variable A as a <B>Variant</B>. The second statement assigns an array to the variable A. The final statement illustrates how to assign the value contained in the second array element to another variable.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Dim A As Variant
A = Array(10,20,30)
B = A(2)
</FONT></PRE>
<P CLASS="t">The lower bound of an array created using the <B>Array</B> function is determined by the lower bound specified with the <B>Option Base</B> statement.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Deftype </B>Statements,<B> Dim </B>Statement,<B> Let </B>Statement,<B> Option Base </B>Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example uses the <B>Array</B> function to return a <B>Variant</B> containing an array.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MyWeek = Array("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
' Return values assume lower bound equals 1 (using Option Base).
MyDay = MyWeek(2)    ' Returns "Tue".
MyDay = MyWeek(4)    ' Returns "Thu".
</FONT></PRE>
<P CLASS="t">This example fills the range A1:C5 on Sheet1, Sheet5, and Sheet7 with the contents of the same range on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">x = Array("Sheet1", "Sheet5", "Sheet7")
Sheets(x).FillAcrossSheets _
    Worksheets("Sheet1").Range("A1:C5")
</FONT></PRE>
<P CLASS="t">This example consolidates data from Sheet2 and Sheet3 onto Sheet1, using the SUM function.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("Sheet1").Range("A1").Consolidate _
    sources:=Array("Sheet2!R1C1:R37C6", "Sheet3!R1C1:R37C6"), _
    Function:=xlSum
</FONT></PRE>
<P CLASS="t">This example adds an array of strings as a custom list.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Application.AddCustomList Array("cogs", "sprockets", _
    "widgets", "gizmos")
</FONT></PRE>
<P CLASS="t">This example hides Chart1, Chart3, and Chart5. Note that in this example, the <B>Charts</B> method returns a <B>Sheets</B> object instead of a <B>Charts</B> object.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Charts(Array("Chart1", "Chart3", "Chart5")).Visible = False
</FONT></PRE>
<P CLASS="t">This example sets the entries in list box one on Dialog1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">DialogSheets("Dialog1").ListBoxes(1).List = _
    Array("cogs", "widgets", "sprockets", "gizmos")
</FONT></PRE>
<P CLASS="t">This example creates a group from drawing objects one, three, and five on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Set myGroup = Worksheets("Sheet1").DrawingObjects(Array(1, 3, 5)).Group
Worksheets("Sheet1").Activate
myGroup.Select
</FONT></PRE></FONT>
</FONT></BODY></HTML>
