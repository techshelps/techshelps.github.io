<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calling Word from a WLL</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H2 CLASS="h1">Calling Word from a WLL</H2><P CLASS="t">To call Word with the Word API, a WLL fills WDOPR data structures with data that is meaningful to a Word function, and then sends the structures through the <B>wdCommandDispatch</B> function, which identifies the Word function to use. The WDOPR data structure and <B>wdCommandDispatch</B> are discussed in detail in the following sections. The CAPILIB functions provided on the Microsoft Word Developer's Kit disk wrap up many of the steps required to build arrays of WDOPRs, and they help perform common WLL tasks, such as customizing Word.</P>
<P CLASS="t">Use the sections on <B>wdCommandDispatch</B> ("The wdCommandDispatch Function"), WDOPRs ("The Word Operator (WDOPR)"), and basic Word API techniques ("Techniques for Successful Calling") to learn about the Word API in general and some platform-specific issues. Then use the section on CAPILIB ("Using the CAPILIB Functions") to get an overview of the helper functions you can use to program WLLs quickly and efficiently.</P></FONT></FONT></BODY></HTML>
