<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ObjectPalette Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec100"></A>ObjectPalette Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec101"></A>Applies To</H2><P>Bound Object Frame Control, Chart Control, Command Button Control, Form, Report, Toggle Button Control, Unbound Object Frame Control.</P>
<H2><A NAME="sec102"></A>Description</H2><P>You can use the <B>ObjectPalette</B> property with the <B>PaintPalette</B> property to specify which palette is used by the application to create:</P>
<SPAN CLASS="list"><UL><LI><SPAN CLASS="Symbol"></SPAN>    An OLE object contained in a bound object frame, chart, or unbound object frame.</LI><LI><SPAN CLASS="Symbol"></SPAN>    A bitmap that is loaded into a command button or a toggle button using the <B>Picture</B> property.</LI></UL></SPAN><H2><A NAME="sec103"></A>Setting</H2><P>Microsoft Access uses a <B>String</B> data type in the <B>ObjectPalette</B> property to set the value of the <B>PaintPalette</B> property for a form or report.</P>
<P>For the following objects, views, and controls, the <B>Object Palette</B> property setting is read-only.</P>
<P CLASS="t">  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="133pt" VALIGN="TOP"><COL WIDTH="154pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Object</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>View</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Control</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Forms</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Design view and Form view</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Command button, chart, toggle button, and unbound object frame</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Form view</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Bound object frame</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Reports</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Design view</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Command button, chart, toggle button, and unbound object frame</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P>You can use this property only in a macro or Visual Basic.</P>
<H2><A NAME="sec104"></A>Remarks</H2><P>The setting of the <B>ObjectPalette</B> property makes the palette of the application associated with the OLE object available to the <B>PaintPalette</B> property of a form or report. For example, to make the palette used in Microsoft Graph available when you’re designing a form in Microsoft Access, you set the form’s <B>PaintPalette</B> property to the <B>ObjectPalette</B> value of an existing chart control.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   Windows can have only one color palette active at a time. Microsoft Access allows you to have multiple graphics on a form, each using a different color palette. The <B>PaletteSource</B> property lets you specify which color palette a form should use when displaying graphics.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec105"></A>See Also</H2><P><B>PaintPalette</B> Property, <B>PaletteSource</B> Property, <B>Picture</B> Property.</P>
<H2><A NAME="sec106"></A>Example</H2><P>The following example sets the <B>PaintPalette</B> property of the Seascape form to the <B>ObjectPalette</B> property of the Ocean control on the DisplayPictures form. (Ocean can be a bound object frame, command button, chart, toggle button, or unbound object frame.)</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Forms![Seascape].PaintPalette = _     Forms![DisplayPictures]![Ocean].ObjectPalette
</PRE>
<P CLASS="t">  </P>
<P>The <B>ObjectPalette</B> and <B>PaintPalette</B> properties are useful for programmatically altering the color palette in use by an open form at run time. A common use of these properties is to set the current form <B>PaintPalette</B> property to that of a graphic displayed in a control that has the focus.</P>
<P>For example, you can have a form with an ocean picture, showing many shades of blue, and a sunset picture, showing many shades of red. Since Windows only allows one color palette active at a time, one picture will look much better than the other. The following example uses a control’s Enter event for setting the form’s <B>PaintPalette</B> property to the control’s <B>ObjectPalette</B> property so the graphic that has the focus will have an optimal appearance.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub OceanPicture_Enter()
    Me.PaintPalette = Me![OceanPicture].ObjectPaletteSub
SunsetPicture_Enter()
    Me.PaintPalette = Me![SunsetPicture].ObjectPaletteSub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
