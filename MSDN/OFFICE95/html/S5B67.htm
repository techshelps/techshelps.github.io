<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Monitoring Data with Watch Expressions</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Monitoring Data with Watch Expressions</H1><P CLASS="t">As you debug your code, you might find that a problem occurs only when a certain variable or property assumes a particular value or range of values. Or you might learn that a calculation isn't producing the desired result. Many debugging problems aren't immediately traceable to a single statement, so you might need to observe the behavior of a variable or expression throughout a procedure.</P>
<P CLASS="t">You can monitor the value of a particular variable or expression in a <I>watch expression</I>. Visual Basic monitors watch expressions for you. In break mode, watch expressions appear in the Watch pane of the Debug window, where you can observe their values.</P>
<P CLASS="t">You can also direct a watch expression to enter break mode whenever the watched expression's value changes or becomes <B>True</B>. For example, instead of using Step Into to move through hundreds of loops, you can use a watch expression to put the code in break mode when a loop counter reaches a specific value. Or you can enter break mode each time a certain variable changes value.</P></FONT>
</FONT></BODY></HTML>
