<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lock...Unlock Statements</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Lock...Unlock Statements</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Controls access by other processes to all or part of a file opened using the <B>Open</B> statement.</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>Lock</B> [<B>#</B>]<I>filenumber</I>[,<I>recordrange</I>]<BR>.<B> </B>.<B> </B>.<B><BR>Unlock</B> [<B>#</B>]<I>filenumber</I>[,<I>recordrange</I>]</P>
<P CLASS="t">The <B>Lock</B> and <B>Unlock</B> statement syntax has these parts:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>filenumber</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Any valid file number.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>recordrange</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">The range of records to lock or unlock. </P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">The <I>recordrange</I> argument has the following syntax and parts:</P>
<P CLASS="syn">recnumber | [start] <B>To</B> end</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="thf"><B>Part</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>recnumber</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Record number (<B>Random</B> mode files) or byte number (<B>Binary</B> mode files) at which locking or unlocking begins. </P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>start</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Number of the first record or byte to lock or unlock.</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt"><I>end</I></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P CLASS="tt">Number of the last record or byte to lock or unlock.</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">The <B>Lock</B> and <B>Unlock</B> statements are used in environments where several processes might need access to the same file. </P>
<P CLASS="t"><B>Lock</B> and <B>Unlock</B> statements are always used in pairs. The arguments to <B>Lock</B> and <B>Unlock</B> must match exactly.</P>
<P CLASS="t">The first record/byte in a file is at position 1, the second record/byte is at position 2, and so on. If you specify just one record, then only that record is locked or unlocked. If you specify a range of records and omit a starting record (<I>start</I>), all records from the first record to the end of the range (<I>end</I>) are locked or unlocked. Using <B>Lock</B> without <I>recnumber</I> locks the entire file; using <B>Unlock</B> without <I>recnumber</I> unlocks the entire file.</P>
<P CLASS="t">If the file has been opened for sequential input or output, <B>Lock</B> and <B>Unlock</B> affect the entire file, regardless of the range specified by <I>start</I> and <I>end</I>.</P>
<P></P>
<P CLASS="wh"><B>Caution</B></P>
<P CLASS="nt">Be sure to remove all locks with an <B>Unlock</B> statement before closing a file or terminating your program. Failure to remove locks produces unpredictable results.</P>
<P></P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>Open</B> Statement.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example illustrates the use of the <B>Lock</B> and <B>Unlock</B> statements. While a record is being modified, access by other processes to the record is denied. For purposes of this example, assume that TESTFILE is a file containing five records of the user-defined type Record.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Type Record    ' Define user-defined type.
    ID As Integer
    Name As String * 20
End Type
Dim MyRecord As Record    ' Declare variable.
' Open sample file for random access.
Open "TESTFILE" For Random Shared As #1 Len = Len(MyRecord)
RecordNumber = 4    ' Define record number.
Lock #1, RecordNumber    ' Lock record.
Get #1, RecordNumber, MyRecord    ' Read record.
MyRecord.ID = 234    ' Modify record.
MyRecord.Name = "John Smith"
Put #1, RecordNumber, MyRecord    ' Write modified record.
Unlock #1, RecordNumber    ' Unlock current record.
Close #1    ' Close file.
</FONT></PRE></FONT>
</FONT></BODY></HTML>
