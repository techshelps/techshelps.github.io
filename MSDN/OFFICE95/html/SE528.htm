<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MenuBars Collection Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>MenuBars Collection Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">A collection of all the <B>MenuBar </B>objects in the Microsoft Excel application. Each <B>MenuBar</B> object represents a built-in or custom menu bar.</P>
<P CLASS="h"><B>Accessors</B></P>
<P CLASS="t">Use the <B>Add</B> method to add a new menu bar to the application. The following example adds a new menu bar and then activates it.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">With MenuBars.Add("Stock Chart")
    With .Menus.Add("File")
        .MenuItems.Add "Update", "UpdateProc"
        .MenuItems.Add "Print", "PrintProc"
    End With
End With
MenuBars("stock chart").Activate
</FONT></PRE>
<P CLASS="t">After running the example, you can use MenuBars(xlModule).Activate to restore the Visual Basic Module menu.</P>
<P CLASS="t">Use the <B>MenuBars</B> method with an argument to access a single member of the collection or without an argument to access the entire collection at once.</P>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>Application </B>Property,<B> Count </B>Property,<B> Creator </B>Property,<B> Parent </B>Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>Add </B>Method<B> </B>(<B>MenuBars </B>Collection),<B> Item </B>Method.</P>
<P></P></FONT>
</FONT></BODY></HTML>
