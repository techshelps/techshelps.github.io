<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ItemData Method</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec110"></A>ItemData Method</H1><P CLASS="t">  </P>
<H2><A NAME="sec111"></A>Description</H2><P>The <B>ItemData</B> method returns the data in the bound column for the specified row in a list box or combo box.</P>
<H2><A NAME="sec112"></A>Syntax</H2><P><I>control</I><B>.ItemData(</B><I>rowindex</I><B>)</B></P>
<P>The <B>ItemData</B> method uses the following arguments.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="100pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Argument</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>control</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A <B>Control</B> object that represents a combo box or list box.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>rowindex </I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">The row in the combo box or list box containing the data you want to return. Rows in combo and list boxes are indexed starting with zero. For example, to return the item in the sixth row of a combo box, you’d specify 5 for <I>rowindex</I>.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec113"></A>Remarks</H2><P>The <B>ItemData</B> method enables you to iterate through the list of entries in a combo box or list box. For example, suppose you wanted to iterate through all of the items in a list box to search for a particular entry. You can use the <B>ListCount</B> property to determine the number of rows in the list box, and then use the <B>ItemData</B> method to return the data for the bound column in each row.</P>
<P>You can also use the <B>ItemData</B> method to return data only from selected rows in a list box. You can iterate through the <B>ItemsSelected</B> collection to determine which row or rows in the list box have been selected, and use the <B>ItemData</B> method to return the data in those rows. You must set the <B>MultiSelect</B> property of the list box to Simple or Extended to enable the user to select more than one row at a time.</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Tip</B>   You can use the <B>Column</B> property to return data from a specified row and column, even if the specified column is not the bound column.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec114"></A>See Also</H2><P><B>BoundColumn</B> Property, <B>Control</B> Object.</P>
<H2><A NAME="sec115"></A>Example</H2><P>The following example prints the value of the bound column for each selected row in a list box EmployeeList on an Employees form.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub RowsSelected()
    Dim ctlList As Control, varItem As Variant

    ' Return Control object variable pointing to list box.
    Set ctlList = Forms!Employees!EmployeeList
    ' Set MultiSelect property to Simple.
    ctlList.MultiSelect = 2
    ' Enumerate through selected items.
    For Each varItem in ctlList.ItemsSelected
        ' Print value of bound column.
        Debug.Print ctlList.ItemData(varItem)
    Next varItemSub</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
