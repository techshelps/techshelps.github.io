<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Show Method</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Show Method</H1><P CLASS="h"><B>Applies To</B></P>
<P CLASS="t"><B>Dialog </B>Object, <B>DialogSheet </B>Object, <B>Range </B>Object, <B>Scenario </B>Object.</P>
<P CLASS="h"><B>Description</B></P>
<P CLASS="t"><B>DialogSheet</B> object (Syntax 1): Runs the dialog box. This method will not return to the calling procedure until the dialog box is closed or hidden, but event procedures assigned to the dialog box controls will run while the calling procedure is suspended.</P>
<P CLASS="t"><B>Range</B> object (Syntax 1): Scrolls the active window to move the range into view. The range must consist of a single cell which is a part of the currently active document</P>
<P CLASS="t"><B>Scenario</B> object (Syntax 1): Shows the scenario by inserting the scenario's values onto the worksheet. The affected cells are the changing cells of the scenario.</P>
<P CLASS="t"><B>Dialog</B> object (Syntax 2): Displays the dialog box and waits for the user to input data.</P>
<P CLASS="h"><B>Syntax 1</B></P>
<P CLASS="syn"><I>object</I>.<B>Show</B></P>
<P CLASS="h"><B>Syntax 2</B></P>
<P CLASS="syn"><I>object</I>.<B>Show(</B><B><I>arg1</I></B>,<B><I> arg2</I></B>,<B><I> </I></B>...,<B><I> arg30</I></B><B>)</B></P>
<P CLASS="term1"><I>object</I></P>
<BLOCKQUOTE>
<P CLASS="dt1">Required. For Syntax 1, the <B>DialogSheet</B>, <B>Range</B>, or <B>Scenario</B> object. For Syntax 2, the <B>Dialog</B> object.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>arg1</I></B>,<B><I> arg2</I></B>,<B><I> </I></B>...,<B><I> arg30</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. For built-in dialog boxes only, provides the initial arguments for the command. For more information, see the following Remarks section.</P>
</BLOCKQUOTE>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">For built in dialog boxes, this method returns <B>True </B>if the user clicked OK, or <B>False</B> if the user clicked Cancel.</P>
<P CLASS="t">A single dialog box can change many properties at once. For example, the Format Cells dialog box can change all the properties of the <B>Font</B> object.</P>
<P CLASS="t">For some built-in dialog boxes (Open, for example), you can set initial values using <B><I>arg1</I></B>,<B><I> arg2</I></B>,<B><I> </I></B>...,<B><I> arg30</I></B>. </P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example displays the custom dialog box Dialog1, and then it displays a message if you do not press the Cancel button. Before running this example, create a new default dialog sheet by pointing to Macro on the Insert menu and then clicking Dialog.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">If DialogSheets("Dialog1").Show &lt;&gt; False Then
    MsgBox "You must have pressed the ""OK"" button"
End If
</FONT></PRE>
<P CLASS="t">This example displays the Open dialog box and selects the Read-Only option.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Application.Dialogs(xlDialogOpen).Show arg3:=True
</FONT></PRE></FONT>
</FONT></BODY></HTML>
