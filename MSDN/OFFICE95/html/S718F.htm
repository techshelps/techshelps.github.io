<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Name Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Name Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Represents a defined name for a range of cells. Names can be built-in, such as Database, Print_Area, and Auto_Open, or they can be custom names.</P>
<H4><A NAME="sec0"></A>Application, Workbook, and Worksheet Objects</H4><P CLASS="t">The <B>Name</B> object is a member of the <B>Names</B> collection for the <B>Application</B>,<B>Workbook</B>, and <B>Worksheet</B> objects. Use the <B>Add</B> method to create a new name and add it to the collection. To access a single member of the collection, use the <B>Names</B> method with the index number or name of the defined name as an argument.</P>
<P CLASS="t">The index number indicates the position of the name within the collection. Names are placed in alphabetical order from a to z and are not case-sensitive (this is the same order as is displayed in the Define Name and Apply Names dialog boxes, accessed by clicking the Name command on the Insert menu). The following example displays the cell reference for name one in the application collection.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">MsgBox Names(1).RefersTo
</FONT></PRE>
<P CLASS="t">Use the <B>Name</B> property on a <B>Name</B> object to return or set the text of the name itself. The following example changes the name of the first <B>Name</B> object in the active workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Names(1).Name = "stock_values"
</FONT></PRE>
<P CLASS="t">The following example deletes the name "mySortRange" from the active workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">ActiveWorkbook.Names("mySortRange").Delete
</FONT></PRE>
<H4><A NAME="sec1"></A>Range Objects</H4><P CLASS="t">While a <B>Range</B> object can have more than one name, there is no <B>Names</B> collection for the <B>Range</B> object. The <B>Name</B> property of the <B>Range</B> object returns the first name (sorted alphabetically) assigned to the range. The following sets the <B>Visible </B>property for the first name assigned to cells A1:B1 on worksheet one.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets(1).Range("a1:b1").Name.Visible = False</FONT></PRE>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>Application </B>Property,<B> Category </B>Property,<B> CategoryLocal </B>Property,<B> Creator </B>Property,<B> Index </B>Property,<B> MacroType </B>Property,<B> Name </B>Property,<B> NameLocal </B>Property,<B> Parent </B>Property,<B> RefersTo </B>Property,<B> RefersToLocal </B>Property,<B> RefersToR1C1 </B>Property,<B> RefersToR1C1Local </B>Property,<B> RefersToRange </B>Property,<B> ShortcutKey </B>Property,<B> Value </B>Property,<B> Visible </B>Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>Delete</B> Method.</P>
<P></P></FONT>
</FONT></BODY></HTML>
