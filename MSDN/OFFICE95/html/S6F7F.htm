<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chart Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Chart Object</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">Represents a chart in a workbook, either an embedded chart (contained in a <B>ChartObject</B> in a <B>Worksheet</B> or <B>DialogSheet</B> object) or a separate chart sheet.</P>
<H4><A NAME="sec0"></A>Embedded Charts</H4><P CLASS="t">The <B>ChartObject</B>, which represents the container for an embedded chart on a worksheet or dialog sheet, is a member of the <B>ChartObjects</B> collection. Use the <B>Add</B> method to create a new empty embedded chart and add it to the collection. Use the <B>Chart</B> property to access the chart contained in the specified <B>ChartObject</B> object. The following example sets the pattern for the chart area in embedded chart one on the worksheet named "Sheet1."</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets("sheet1").ChartObjects(1).Chart. _
    ChartArea.Interior.Pattern = xlLightDown
</FONT></PRE>
<H4><A NAME="sec1"></A>Chart Sheets</H4><P CLASS="t">The <B>Chart</B> object, which represents a separate chart sheet, is a member of the <B>Charts</B> collection. The <B>Charts</B> collection contains all the <B>Chart</B> objects that represent chart sheets in a workbook. Use the <B>Add</B> method to create a new chart sheet and add it to the collection. To access a single member of the collection, use the <B>Charts</B> method with the index number or name of the chart sheet as an argument. </P>
<P CLASS="t">The chart index number represents the position of the chart sheet on the tab bar of the workbook. Charts(1) is the first (leftmost) chart in the workbook; Charts(Charts.Count) is the last. All chart sheets are included in the index count, even if they are hidden.</P>
<P CLASS="t">The following example changes the color of series one on chart sheet one.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Charts(1).SeriesCollection(1).Interior.Color = RGB(255, 0, 0)
</FONT></PRE>
<P CLASS="t">The chart name is shown on the workbook tab for the chart. You can use the <B>Name</B> property to set or return the chart name.</P>
<P CLASS="t">The following example moves the chart named "Sales" to the end of the active workbook.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Charts("sales").Move after:=Sheets(Sheets.Count)
</FONT></PRE>
<P CLASS="t">The <B>Chart</B> object is also a member of the <B>Sheets</B> collection. The <B>Sheets</B> collection contains all of the sheets in the workbook (chart sheets, dialog sheets, modules, and worksheets). To access a single member of the collection, use the <B>Sheets</B> method with the index number or name of the sheet as an argument.</P>
<H4><A NAME="sec2"></A>Using ActiveChart</H4><P CLASS="t">When a chart is the active object, you can use the <B>ActiveChart</B> property to refer to it. A chart sheet is active if the user has selected it or it has been activated with the <B>Activate</B> method. The following example activates chart sheet one and then sets the chart type and title.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Charts(1).Activate
With ActiveChart
    .Type = xlLine
    .HasTitle = True
    .ChartTitle.Text = "January Sales"
End With
</FONT></PRE>
<P CLASS="t">An embedded chart is active if the user has selected it or the <B>ChartObject</B> object that contains it has been activated with the <B>Activate</B> method. The following example activates embedded chart one on worksheet one and then sets the chart type and title. Notice that once the embedded chart has been activated, the code in this example is the same as the previous example. Using the <B>ActiveChart</B> property allows you to write Visual Basic code that can refer to either an embedded chart or a chart sheet, whichever is active.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Worksheets(1).ChartObjects(1).Activate
ActiveChart.Type = xlLine
ActiveChart.HasTitle = True
ActiveChart.ChartTitle.Text = "January Sales"
</FONT></PRE>
<H4><A NAME="sec3"></A>Using ActiveSheet</H4><P CLASS="t">When a chart sheet is the active sheet, you can use the <B>ActiveSheet</B> property to refer to it. The following example uses the <B>Activate</B> method to activate the chart sheet named "Chart1" and then sets the interior color for series one in the chart.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Charts("chart1").Activate
ActiveSheet.SeriesCollection(1).Interior.ColorIndex = 5
</FONT></PRE>
<P CLASS="h"><B>Properties</B></P>
<P CLASS="t"><B>Application </B>Property,<B> Area3DGroup </B>Property,<B> AutoScaling </B>Property,<B> Bar3DGroup </B>Property,<B> ChartArea </B>Property,<B> ChartTitle </B>Property,<B> Column3DGroup </B>Property,<B> Corners </B>Property,<B> Creator </B>Property,<B> DepthPercent </B>Property,<B> DisplayBlanksAs </B>Property,<B> Elevation </B>Property,<B> Floor </B>Property,<B> GapDepth </B>Property,<B> HasAxis </B>Property,<B> HasLegend </B>Property,<B> HasTitle </B>Property,<B> HeightPercent </B>Property,<B> Index </B>Property,<B> Legend </B>Property,<B> Line3DGroup </B>Property,<B> Name </B>Property,<B> Next </B>Property,<B> OnDoubleClick </B>Property,<B> OnSheetActivate </B>Property,<B> OnSheetDeactivate </B>Property,<B> PageSetup </B>Property,<B> Parent </B>Property,<B> Perspective </B>Property,<B> Pie3DGroup </B>Property,<B> PlotArea </B>Property,<B> PlotVisibleOnly </B>Property,<B> Previous </B>Property,<B> ProtectContents </B>Property,<B> ProtectDrawingObjects </B>Property,<B> RightAngleAxes </B>Property,<B> Rotation </B>Property,<B> SizeWithWindow </B>Property,<B> SubType </B>Property,<B> SurfaceGroup </B>Property,<B> Type </B>Property,<B> Visible </B>Property,<B> Walls </B>Property,<B> WallsAndGridlines2D </B>Property.</P>
<P CLASS="h"><B>Methods</B></P>
<P CLASS="t"><B>Activate </B>Method,<B> ApplyDataLabels </B>Method,<B> Arcs </B>Method,<B> AreaGroups </B>Method,<B> AutoFormat </B>Method<B> (Chart </B>Object<B>)</B>,<B> Axes </B>Method,<B> BarGroups </B>Method,<B> Buttons </B>Method,<B> ChartGroups </B>Method,<B> ChartObjects </B>Method,<B> ChartWizard </B>Method,<B> CheckBoxes </B>Method,<B> CheckSpelling </B>Method,<B> ColumnGroups </B>Method,<B> Copy </B>Method,<B> CopyPicture </B>Method,<B> CreatePublisher </B>Method,<B> Delete </B>Method,<B> Deselect </B>Method,<B> DoughnutGroups </B>Method,<B> DrawingObjects </B>Method,<B> Drawings </B>Method,<B> DropDowns </B>Method,<B> Evaluate </B>Method,<B> GroupBoxes </B>Method,<B> GroupObjects </B>Method,<B> Labels </B>Method,<B> LineGroups </B>Method,<B> Lines </B>Method,<B> ListBoxes </B>Method,<B> Move </B>Method,<B> OLEObjects </B>Method,<B> OptionButtons </B>Method,<B> Ovals </B>Method,<B> Paste </B>Method<B> (Chart </B>Object<B>)</B>,<B> Pictures </B>Method,<B> PieGroups </B>Method,<B> PrintOut </B>Method,<B> PrintPreview </B>Method,<B> Protect </B>Method,<B> RadarGroups </B>Method,<B> Rectangles </B>Method,<B> SaveAs </B>Method,<B> ScrollBars </B>Method,<B> Select </B>Method,<B> SeriesCollection </B>Method,<B> SetBackgroundPicture </B>Method,<B> Spinners </B>Method,<B> TextBoxes </B>Method,<B> Unprotect </B>Method,<B> XYGroups </B>Method.</P>
<P></P></FONT>
</FONT></BODY></HTML>
