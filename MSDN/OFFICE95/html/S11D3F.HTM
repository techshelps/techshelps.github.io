<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Partition Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec89"></A>Partition Function</H1><P CLASS="t">  </P>
<H2><A NAME="sec90"></A>Description</H2><P>Returns a string indicating where a number occurs within a calculated series of ranges.</P>
<H2><A NAME="sec91"></A>Syntax</H2><P><B>Partition(<I>number</I>,</B> <I>start</I><B>,</B> <I>stop</I><B>,</B> <I>interval</I><B>)</B></P>
<P>The <B>Partition</B> function syntax has these named arguments:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="81pt" VALIGN="TOP"><COL WIDTH="292pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>number</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Whole number that you want to evaluate against the ranges.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>start</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Whole number that is the start of the overall range of numbers. It can’t be less than 0.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>stop</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Whole number that is the end of the overall range of numbers. It can’t be equal to or less than <I>start</I>.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>interval</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Whole number that is the interval spanned by each range in the series from <I>start</I> to <I>stop</I>. It can’t be less than 1.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec92"></A>Remarks</H2><P>The <B>Partition</B> function identifies the particular range in which <I>number</I> falls and returns a string describing that range. The <B>Partition</B> function is most useful in queries. You can create a select query that shows how many orders fall within various ranges (for example, order values from 1 to 1000, 1001 to 2000, and so on).</P>
<P>The following table shows how the ranges are determined using three sets of <I>start</I>, <I>stop</I>, and <I>interval</I> parts. The First Range and Last Range columns show what <B>Partition</B> returns. The ranges are represented by <I>lowervalue</I>:<I>uppervalue</I>, where the low end (<I>lowervalue</I>) of the range is separated from the high end (<I>uppervalue</I>) with a colon ( <B>:</B> ).</P>
<P CLASS="t">  </P>

<TABLE COLS="7" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="55pt" VALIGN="TOP"><COL WIDTH="55pt" VALIGN="TOP"><COL WIDTH="60pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"><COL WIDTH="86pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>start</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>stop</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>interval</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Before First</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>First Range</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Last Range</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>After Last</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>0</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>99</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>5</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“   :–1”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“  0:  4”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“ 95: 99”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“ 100:    ”</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>20</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>199</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>10</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“    :  19”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“  20:  29”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“ 190: 199”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“ 200:    ”</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>100</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>1010</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>20</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“     :   99”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“  100:  119”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“ 1000: 1010”</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>“ 1011:    ”</B></P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P>In the table shown above, the third line shows the result when <I>start</I> and <I>stop</I> define a set of numbers that can’t be evenly divided by <I>interval</I>. The last range extends to <I>stop</I> (11 numbers) even though <I>interval</I> is 20.</P>
<P>If necessary, <B>Partition</B> returns a range with enough leading spaces so that there are the same number of characters to the left and right of the colon as there are characters in <I>stop</I>, plus one. This ensures that if you use <B>Partition</B> with other numbers, the resulting text will be handled properly during any subsequent sort operation.</P>
<P>If <I>interval</I> is 1, the range is <I>number</I>:<I>number</I>, regardless of the <I>start</I> and <I>stop</I> arguments. For example, if <I>interval</I> is 1, <I>number</I> is 100 and <I>stop</I> is 1000, <B>Partition</B> returns “  100:  100”.</P>
<P>If any of the parts is <B>Null</B>, <B>Partition</B> returns a <B>Null</B>.</P>
<H2><A NAME="sec93"></A>Example</H2><P>This example assumes you have an Orders table that contains a Freight field. It creates a select that counts the number of orders for which freight cost falls into each of several ranges. The <B>Partition</B> function is used first to establish these ranges, then the SQL Count function counts the number of orders in each range. In this example, the arguments to the <B>Partition</B> function are <I>start</I> = 0, <I>stop</I> = 500, <I>interval</I> = 50. The first range would therefore be 0:49, and so on up to 500</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>SELECT DISTINCTROW Partition([freight],0, 500, 50) AS Range,(Orders.Freight) AS CountOrdersBY Partition([freight],0,500,50);
</PRE>
<P CLASS="t">  </P>
<P>You can use the <B>Partition</B> function in the query design grid as well as in the SQL view of the Query window. In the query design grid, you can use the <B>Partition</B> function in a calculated field or to specify criteria for a select query.</P>
<P>The following example shows how you can use the <B>Partition</B> function to create a calculated field that lists how many records fall into each specified range. Suppose you have an Orders table that contains a Freight field. In the Query window, create a new Totals query by adding the Orders table and clicking on the Totals button in the Query toolbar. Drag the Freight field to the first Field cell on the query design grid, and set the value of the Total cell to Count. In another field cell, enter the following expression.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Range: Partition([Freight], 0, 1000, 50)
</PRE>
<P CLASS="t">  </P>
<P>Set the Total cell below this field to Group By, and run the query. The <B>Partition</B> function returns eleven ranges (0:99, 100:199, 200:299, and so on). The query shows the number of orders with freight charges falling into each range.</P>
<P>The next example shows how you can use the <B>Partition</B> function in the SQL view of the Query window. It creates a crosstab query that evaluates a Freight field in an Orders table. It calculates the number of orders for each customer for which freight cost falls within one of several ranges. The ranges are defined by the arguments to the <B>Partition</B> function: <I>start</I> = 0, <I>stop</I> = 1000, <I>interval</I> = 50.</P>
<P>Enter the following expression in SQL view. When you run this query, each range will appear as a column heading.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>TRANSFORM Count(Orders.[OrderID]) AS [CountOfOrderID]Orders.[CustomerID]OrdersBY Orders.[CustomerID]Partition(Int([Freight]), 0, 1000, 50);
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
