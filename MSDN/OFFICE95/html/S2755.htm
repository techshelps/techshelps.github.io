<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Statements and Functions</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H2 CLASS="h1">Statements and Functions</H2><P CLASS="t">WordBasic instructions are composed of statements and functions, which are defined as follows:</P>
<UL><LI>    A <I>statement</I> carries out an action. For example, opening a file, selecting text, and scrolling through a document are all actions. Virtually every action you can perform in Word has an equivalent WordBasic statement.</LI><LI>    A <I>function</I> retrieves information. A function sometimes also performs an action, but the primary purpose of a function is to return information to the macro. A function can determine the character formatting of selected text, whether a document is in outline view, whether a toolbar is displayed, and many other things.</LI></UL><P></P>
<P CLASS="t">When you begin working with WordBasic, it's very helpful to get a sense of the different statements and functions available to you. A good way to do this is to browse through "Language Summary" in Part 2, "WordBasic Reference," which classifies WordBasic statements and functions according to the tasks they accomplish.</P>
<H3 CLASS="h3"><A NAME="sec0"></A>Statements</H3><P CLASS="t">Most WordBasic statements are equivalent to Word commands. For example, the&nbsp;following instruction, which uses the <B>EditFind </B>statement, is equivalent to choosing the Find command from the Edit menu and searching for "Yours truly":</P>
<P CLASS="spacing"><BR></P>
<PRE>EditFind .Find = "Yours truly", .Direction = 0, \
        .MatchCase = 0, .WholeWord = 0, .PatternMatch = 0,\
        .SoundsLike = 0, .FindAllWordForms = 0, .Format = 0, .Wrap = 1
</PRE>
<P CLASS="t">Each option in the Find dialog box has a corresponding <I>argument</I> in the <B>EditFind</B> statement. For example, the Match Case check box is represented by the .MatchCase argument. Arguments that correspond to dialog box options begin with a period (.) and are separated by commas (,). Each argument has a <I>value</I> associated with it, which may be a number or text enclosed by quotation marks. For example, .MatchCase takes a numeric value, while .Find takes a text value.</P>
<P CLASS="t">The syntax for each statement in Part 2, "WordBasic Reference," indicates the values that arguments require. You can see the same entry in Help by positioning the insertion point in the <B>EditFind</B> statement in the macro-editing window and pressing F1 (Windows) or HELP or COMMAND+/ (Macintosh). In the entry for <B>EditFind</B>, the syntax line shows all the available arguments for the statement with the values they require:</P>
<P CLASS="syn"><B>EditFind</B> [<B>.Find</B>&nbsp;<B>=</B>&nbsp;<I>text</I>] [<B>, .Replace</B>&nbsp;<B>=</B>&nbsp;<I>text</I>] [<B>,&nbsp;.Direction</B>&nbsp;<B>=</B>&nbsp;<I>number</I>] [<B>,&nbsp;.WholeWord</B>&nbsp;<B>=</B>&nbsp;<I>number</I>] [<B>,&nbsp;.MatchCase</B>&nbsp;<B>=</B>&nbsp;<I>number</I>] [<B>,&nbsp;.PatternMatch&nbsp;=&nbsp;</B><I>number</I>] [<B>,&nbsp;.SoundsLike</B>&nbsp;<B>=</B>&nbsp;<I>number</I>] [<B>, .FindAllWordForms</B> <B>=</B> <I>number</I>] [<B>,&nbsp;.Format</B>&nbsp;<B>=</B>&nbsp;<I>number</I>] [<B>,&nbsp;.Wrap</B>&nbsp;<B>=</B>&nbsp;<I>number</I>]</P>
<P CLASS="t">The syntax also indicates which arguments are necessary and which are optional; brackets ([&nbsp;]) enclose optional arguments. For complete information on how to interpret syntax lines, see the introduction to "Statements and Functions" in Part&nbsp;2, "WordBasic Reference."</P>
<P></P>

<TABLE COLS="1" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="348pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="sbrh"><B>Controlling Where Lines Break in Long Instructions</B></P>
<P CLASS="sbrt">In a WordBasic macro, every instruction ends with a paragraph mark. Most instructions are less than a line long, but some WordBasic statements have many arguments and can't fit on a single line. When you record one of these instructions, Word wraps it onto a second or third line as needed. For example, if you record changing information on the User Info tab in the Options dialog box (Tools menu), Word inserts an instruction like the following one in the macro you're recording:</P>
<P CLASS="ct">ToolsOptionsUserInfo .Name = "Lucie Caselli", .Initials = "LC", .Address = "Aperture Film"</P>
<P CLASS="ct"></P>
<P CLASS="sbrt">You can make multiple-line instructions such as this one more readable by adding line breaks. To do so, place the insertion point at the location where you want to break the line, type the backslash (&nbsp;\) character to indicate to Word that the instruction continues into the next paragraph, and then press ENTER. For example, here's how you could rearrange the preceding <B>ToolsOptionsUserInfo</B> instruction by inserting a line break and some tab characters:</P>
<P CLASS="ct">ToolsOptionsUserInfo .Name = "Lucie Caselli", .Initials = "LC", \</P>
<P CLASS="ct">                        .Address = "Aperture Film"</P>
<P CLASS="ct"></P>
<P CLASS="sbrh"><B></B></P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H3 CLASS="h3"><A NAME="sec1"></A>Functions</H3><P CLASS="t">WordBasic functions do not correspond to Word commands as neatly as statements do, but they provide many types of information about documents and the current state of Word. For example, the <B>Font$</B><B>()</B> function returns the name of the font where the insertion point is located. Often, the information that a function returns is placed in a <I>variable</I>, which is a kind of storage container. Variables are described in the "Variables" section later in this chapter.</P>
<P CLASS="t">A function is easily distinguished from a statement because it ends with parentheses. Here are some examples:</P>
<P CLASS="spacing"><BR></P>
<PRE>Font$()
Selection$()
CharColor()
CountStyles()
ViewOutline()
BookMarkName$()
</PRE>
<P CLASS="t">Note that some functions include a dollar sign ($) character just before the ending parentheses. These functions return information in the form of text, or strings. The other functions return numbers. Strings and numbers are described in the following section.</P></FONT></FONT></BODY></HTML>
