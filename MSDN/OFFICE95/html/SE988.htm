<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changing Data Invisibly</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Changing Data Invisibly</H2><P CLASS="t">There are times when the user shouldn't see lots of screen activity while a macro is running.  After all, macros are supposed to work magically!  Screen updating can be distracting, plus it slows down the macro.  Here's a couple of ways to solve the problem.  First, there's no need to activate a sheet to work with its objects if the code provides an <I>explicit reference</I> to them.  For example, the first line in the following code selects objects in GTempSheet without activating it so the user does not see the changes while the code is running.  </P>
<P>Worksheets(GTempSheet).Range("A1").Select '&lt;--Explicit reference so </P>
<P>        ' GTempSheet doesn't have to be activated.</P>
<P>    LastRow = Selection.CurrentRegion.Cells.Count</P>
<P>    If Gheader = xlNo Then</P>
<P>        Selection.Range(Cells(2, 1), Cells(LastRow, 1)).Name = "Data1"</P>
<P>    Else</P>
<P>        Selection.Range(Cells(1, 1), Cells(LastRow, 1)).Name = "Data1"</P>
<P>    End If</P>
<P></P>
<P CLASS="t">The above code example also illustrates using the Count property to count the cells in a range and then adjust the range to include or exclude the first cell.  </P>
<P CLASS="t">The second way to control screen updating is to turn it off with the Application.ScreenUpdating property.  Here's code that does this:  </P>
<P>Application.ScreenUpdating = False</P>
<P>    'Sort the data allowing for a label in first cell if needed.</P>
<P>    Selection.Sort key1:="Data1", order1:=xlAscending, header:=xlYes, Orientation:=xlTopToBottom</P>
<P></P>
<P CLASS="t">Set this property to False to turn screen updating off, then set it back to True when it should happen again.  The macro will run faster, but it will be important to test the effects of turning screen updating off before going crazy with it.  If a dialog box is visible, the user may want to move the dialog to see a cell behind it.  With updating turned off, all they will get is a blank hole staring at them.  Usually the best philosophy is to turn updating off only when absolutely needed, and the rest of the time try to use explicit references to objects the user doesn't need to see.  </P></FONT>
</FONT></BODY></HTML>
