<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object Properties</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec86"></A>Object Properties</H1><P CLASS="t">  </P>
<H2><A NAME="sec87"></A>Applies To</H2><P>Form, Query, Report, Table.</P>
<H2><A NAME="sec88"></A>Description</H2><P>The <B>Object</B> properties provide general information about objects contained in the database window. </P>
<H2><A NAME="sec89"></A>Setting</H2><P>You can view the <B>Object</B> properties, and set the <B>Description</B> or <B>Attributes</B> properties, by clicking the Properties icon on the Database toolbar, clicking the Properties command on the View menu, or choosing the Properties command from the popup menu that appears when you right click on an object in the database window. </P>
<P>You can also specify or determine the <B>Object</B> properties using Visual Basic. </P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   You can only enter or edit the <B>Description</B> or <B>Attributes</B> properties. The other <B>Object</B> properties are set by Microsoft Access and are read-only.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec90"></A>Remarks</H2><P>The objects in the database window are: Tables, Queries, Forms, Reports, Macros, and Modules. Each class of objects in the database is represented by a separate <B>Document</B> object within the <B>Containers</B> collection. For example, the <B>Containers</B> collection contains a <B>Document</B> object that represents all the forms in the database.</P>
<P>The <B>Object</B> properties available from the database window are:</P>
<P>Name</P>
<P>This is the name of the object and contains the setting from the object’s <B>Name</B> property.</P>
<P>Type</P>
<P>This is the object type. Microsoft Access object types are: Form, Macro, Module, Query, Report, and Table.</P>
<P>Description</P>
<P>This is the object’s description and is the same as the <B>Description</B> property. For tables or queries, you can also set the object’s <B>Description</B> property in the object’s property sheet. An object’s description also appears next to the object’s name in the database window if the Details command is selected from the View menu.</P>
<P>Created</P>
<P>This is the date that the object was created. For tables or queries, this property is the same as the <B>DateCreated</B> property.</P>
<P>Modified</P>
<P>This is the date that the object was last modified. For tables or queries this property is the same as the <B>LastUpdated</B> property.</P>
<P>Owner</P>
<P>This is the owner of the object. For more information, see the <B>Owner</B> property.</P>
<P>Attributes</P>
<P>This property specifies whether the object is hidden or visible and whether the object is replicable in a database replica.</P>
<P>If you set the hidden attribute to <B>True</B>, the object will not appear in the database window. To display hidden objects in the database window choose the Options command on the Tools menu, click the View tab, and then select the Hidden objects check box. The icons for hidden objects will be displayed with a dimmed outline in the database window. You can then turn the hidden attribute off, making the object visible in the database window.</P>
<H2><A NAME="sec91"></A>See Also</H2><P><B>Containers</B> Collection; <B>DateCreated</B>, <B>LastUpdate</B> Properties; <B>Description</B> Property; <B>Documents</B> Collection; <B>Name</B> Property; <I>Microsoft Office 95 Data Access Reference</I>: <B>Description</B> Property; <B>Name</B> Property.</P>
<H2><A NAME="sec92"></A>Example</H2><P>The following example uses the PrintObjectProperties subroutine to print the values of an object’s <B>Object</B> properties to the Debug Window. The subroutine requires the object type and object name as arguments.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Dim strObjectType As StringstrObjectName As StringstrMsg As String
= "Enter object type (e.g., Forms, Macros, " &amp; _
    "Modules, Queries, Reports, Tables)"
' Get object type.= InputBox(strMsg)= "Enter the name of a Form, Macro, Module, " &amp; _
    "Query, Report, or Table"
' Get object name from user.= InputBox(strMsg)
' Pass object type and object name to the PrintObjectProperties 
' subroutine.strObjectType, strObjectName
PrintObjectProperties(strObjectType As String, _
        strObjectName As String)
    Dim dbs As Database, cnt As Container, doc As Document
    Dim intI As Integer
    Dim strTabChar As String
    Set dbs = CurrentDb
    strTabChar = Chr$(9)
    ' Set container object variable.
    Set cnt = dbs.Containers(strObjectType)
    ' Set document object variable.
    Set doc = cnt.Documents(strObjectName)
    doc.Properties.Refresh
    ' Print the object name to the Debug window.
    Debug.Print doc.Name
    ' Print each object property to Debug window.
    For intI = 0 to doc.Properties.Count - 1
        Debug.Print strTabChar &amp; doc.Properties(intI).Name &amp; " = " _
            &amp; doc.Properties(intI).Value
    Next intISub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
