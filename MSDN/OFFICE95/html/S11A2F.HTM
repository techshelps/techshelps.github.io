<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeyPress Event -- Event Procedures</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec156"></A>KeyPress Event -- Event Procedures</H1><P CLASS="t">  </P>
<H2><A NAME="sec157"></A>Description</H2><P>To create an event procedure that is executed when the KeyPress event occurs, set the <B>OnKeyPress</B> property to [Event Procedure], and click the Build button.</P>
<H2><A NAME="sec158"></A>Syntax</H2><P><B>Private Sub Form</B>_<B>KeyPress(</B>KeyAscii <B>As Integer)</B><B>Private Sub</B> <I>controlname</I>_<B>KeyPress(</B>KeyAscii <B>As Integer)</B></P>
<P></P>
<P>The KeyPress event uses the following arguments.</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="103pt" VALIGN="TOP"><COL WIDTH="264pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Argument</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>controlname</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A string that is the name of the control affected by the KeyPress event procedure.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">KeyAscii</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Returns a numeric ANSI key code. The KeyAscii argument is passed by reference; changing it sends a different character to the object. Changing the KeyAscii argument to 0 cancels the keystroke so that the object doesn’t recognize that a key was pressed.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec159"></A>Remarks</H2><P>A KeyPress event procedure is useful for intercepting keystrokes entered in a text box or combo box. It enables you to test keystrokes for validity or to format characters as they’re typed. Changing the value of the KeyAscii argument changes the character displayed.</P>
<P>You can convert the KeyAscii argument to a character by using the following expression.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Chr(KeyAscii)
</PRE>
<P CLASS="t">  </P>
<P>You can then perform string operations and translate the character back to an ANSI number that the control can recognize by using the following syntax.</P>
<P>KeyAscii = <B>Asc</B>(<I>character</I>)</P>
<P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   The ANSI number for the keyboard combination CTRL+@ is 0. Because Microsoft Access recognizes a KeyAscii value of 0 as a zero-length string (" "), you should avoid using CTRL+@ in your applications.</P>
<P CLASS="t">  </P>
<P></P>
<P>You can respond to specific keys pressed while a form is open, regardless of which control has the focus. For example, you may want the key combination CTRL+X to always perform the same action on a form. To make sure a form receives all keyboard events, even those that occur for controls, before they occur for the controls, set the <B>KeyPreview</B> property of the form to Yes. With this property setting, all keyboard events occur first for the form, and then for the control that has the focus. You can respond to specific keystrokes in the form’s KeyDown, KeyPress, and KeyUp events. You can prevent a control from receiving keystrokes you’ve responded to, and prevent the keyboard events from occurring for the control, by setting the KeyCode argument to 0 for both the KeyDown and KeyUp events, and setting the KeyAscii argument to 0 for the KeyPress event. You must set all three arguments to 0 if you don’t want the control to receive the keystrokes.</P>
<P>You can use the arguments for the KeyDown, KeyPress, and KeyUp events, in conjunction with the arguments for the MouseDown, MouseUp, and MouseMove events, to make your application work smoothly for both keyboard and mouse users.</P>
<P>You can’t cancel the KeyPress event in an event procedure, but you can cancel it in a macro.</P>
<H2><A NAME="sec160"></A>See Also</H2><P>Key Press Event — Macros.</P>
<H2><A NAME="sec161"></A>Example</H2><P>The following example converts text entered in a text box to uppercase as the text is typed in, one character at a time.</P>
<P>To try this example, add the following code to the Declarations section of a module for a form that contains a text box named ShipRegion.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Private Sub ShipRegion_KeyPress(KeyAscii As Integer)
    Dim strCharacter As String

    ' Convert ANSI value to character string.
    strCharacter = Chr(KeyAscii)
    ' Convert character to upper case, then to ANSI value.
    KeyAscii = Asc(UCase(strCharacter))Sub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
