<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>If...Then...Else Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec218"></A>If...Then...Else Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec219"></A>Description</H2><P>Conditionally executes a group of statements, depending on the value of an expression.</P>
<H2><A NAME="sec220"></A>Syntax</H2><P><B>If</B> <I>condition </I><B>Then</B> <I>statements </I>[<B>Else</B> <I>elsestatements </I>]</P>
<P>Or, you can use the following, more versatile syntax:</P>
<P><B>If</B> <I>condition </I><B>Then</B><BR>    [<I>statements</I>][<B>ElseIf</B> <I>condition-n </I><B>Then</B><BR>    [<I>elseifstatements</I>]]<I> </I><B>. . .</B>[<B>Else</B><BR>    [<I>elsestatements</I>]]<B>End If</B></P>
<P></P>
<P></P>
<P></P>
<P>The <B>If...Then...Else</B> statement syntax has these parts:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="96pt" VALIGN="TOP"><COL WIDTH="271pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>condition</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">One or more of the following two types of expressions:</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">A numeric or string expression that evaluates to <B>True</B> or <B>False</B>. If condition is <B>Null</B>, condition is treated as <B>False</B>.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">An expression of the form <B>TypeOf</B> <I>objectname</I><B> Is </B><I>objecttype</I>. The <I>objectname</I> is any object reference and <I>objecttype</I> is any valid object type. The expression is <B>True</B> if <I>objectname</I> is of the object type specified by <I>objecttype</I>; otherwise it is <B>False</B>.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>statements</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">One or more statements separated by colons; executed if <I>condition</I> is <B>True</B>.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>condition-n</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Same as <I>condition</I>.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>elseifstatements</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">One or more statements executed if associated <I>condition-n</I> is <B>True</B>.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>elsestatements</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">One or more statements executed if no previous <I>condition</I> or <I>condition-n</I> expression is <B>True</B>.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec221"></A>Remarks</H2><P>You can use the single-line form (first syntax) for short, simple tests. However, the block form (second syntax) provides more structure and flexibility than the single-line form and is usually easier to read, maintain, and debug.</P>
<P CLASS="t">  </P>
<P><B>Note</B>   With the single-line syntax it is possible to have multiple statements executed as the result of an If...Then decision, but they must all be on the same line and separated by colons, as in the following statement:</P>
<P CLASS="t">  </P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>If A &gt; 10 Then A = A + 1 : B = B + A : C = C + B
</PRE>
<P CLASS="t">  </P>
<P>When executing a block <B>If</B> (second syntax), <I>condition </I>is tested. If <I>condition</I> is <B>True</B>, the statements following <B>Then</B> are executed. If <I>condition</I> is <B>False</B>, each <B>ElseIf</B> condition (if any) is evaluated in turn. When a <B>True</B> condition is found, the statements immediately following the associated <B>Then</B> are executed. If none of the <B>ElseIf</B> conditions are <B>True</B> (or if there are no <B>ElseIf</B> clauses), the statements following <B>Else</B> are executed. After executing the statements following <B>Then</B> or <B>Else</B>, execution continues with the statement following <B>End If</B>.</P>
<P>The <B>Else</B> and <B>ElseIf</B> clauses are both optional. You can have as many <B>ElseIf</B> clauses as you want in a block <B>If</B>, but none can appear after an <B>Else</B> clause. Block <B>If</B> statements can be nested; that is, contained within one another.</P>
<P>What follows the <B>Then</B> keyword is examined to determine whether or not a statement is a block <B>If</B>. If anything other than a comment appears after <B>Then</B> on the same line, the statement is treated as a single-line <B>If</B> statement.</P>
<P>A block <B>If</B> statement must be the first statement on a line. The <B>Else</B>, <B>ElseIf</B>, and <B>End If</B> parts of the statement can have only a line number or line label preceding them. The block <B>If</B> must end with an <B>End If</B> statement.</P>
<P CLASS="t">  </P>
<P><B>Tip</B>   <B>Select Case</B> may be more useful when evaluating a single expression that has several possible actions. However, the <B>TypeOf</B> <I>objectname</I> <B>Is</B> <I>objecttype</I> clause can’t be used with the <B>Select Case</B> statement.</P>
<P CLASS="t">  </P>
<H2><A NAME="sec222"></A>See Also</H2><P><B>#If ... Then ... #Else</B> Directive, <B>Select Case</B> Statement.</P>
<H2><A NAME="sec223"></A>Example</H2><P>This example shows both the block and single-line forms of the <B>If...Then...Else </B>statement. It also illustrates the use of <B>If TypeOf...Then...Else</B>.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Number = 53    ' Initialize variable.Number &lt; 10 Then
    Digits = 1Number &lt; 100 Then
' Condition evaluates to True so the next statement is executed.
    Digits = 2
    Digits = 3If
' Assign a value using the single-line form of syntax.Digits = 1 Then MyString = "One" Else MyString = "More than one" 
</PRE>
<P CLASS="t">  </P>
<P>Use <B>If TypeOf</B> construct to determine whether the Control passed into a procedure is a text box.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub ControlProcessor(MyControl As Control)
    If TypeOf MyControl Is CommandButton Then
        Debug.Print "You passed in a " &amp; TypeName(MyControl)
    ElseIf TypeOf MyControl Is CheckBox Then
        Debug.Print "You passed in a " &amp; TypeName(MyControl)
    ElseIf TypeOf MyControl Is TextBox Then
        Debug.Print "You passed in a " &amp; TypeName(MyControl)
    End IfSub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
