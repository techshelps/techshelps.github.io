<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FrozenColumns Property</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec291"></A>FrozenColumns Property</H1><P CLASS="t">  </P>
<H2><A NAME="sec292"></A>Applies To</H2><P>Form, Query, Table.</P>
<H2><A NAME="sec293"></A>Description</H2><P>You can use the <B>FrozenColumns</B> property to determine how many columns in a datasheet are frozen. Frozen columns are displayed on the left side of the datasheet and don’t move when you scroll horizontally through the datasheet.</P>
<P CLASS="t">  </P>
<P><B>Note</B>   The <B>FrozenColumns</B> property applies only to tables, forms, and queries in Datasheet view.</P>
<P CLASS="t">  </P>
<H2><A NAME="sec294"></A>Setting</H2><P>The <B>FrozenColumns</B> property is set by Microsoft Access when you click Freeze Columns on the Format menu.</P>
<P>In Visual Basic, this property setting is an <B>Integer</B> indicating the number of columns in the datasheet that have been frozen using the Freeze Columns command. The record selector column is always frozen, so the default value is 1. Consequently, if you freeze one column, the <B>FrozenColumns</B> property is set to 2; if you freeze two columns, it’s set to 3; and so on.</P>
<P>This property setting is read-only in all views.</P>
<H2><A NAME="sec295"></A>Remarks</H2><P>When you freeze columns using the Freeze Columns command, Microsoft Access automatically moves the columns to the leftmost edge of the datasheet in the order in which you froze them. For example, if you freeze three columns, these become the first, second, and third columns in the datasheet. Because the record selector column is always frozen, the <B>FrozenColumns</B> property in this case will be set to 4. The three columns you freeze will have their <B>ColumnOrder</B> properties set to 1, 2, and 3 (in the order they are frozen).</P>
<P>If you click Unfreeze All Columns on the Format menu, all frozen columns will be unfrozen, and the <B>FrozenColumns</B> property will be set to 1.</P>
<H2><A NAME="sec296"></A>Example</H2><P>The following example uses the <B>FrozenColumns</B> property to determine how many columns are frozen in a table in Datasheet view. If more than three columns are frozen, the table size is maximized so you can see as many unfrozen columns as possible.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub CheckFrozen(tblName As String)
    Dim db As Database
    Dim td As TableDef
    Dim prop As Property
    conPropertyNotFound = 3270        ' Property not found error.
    Set db = CurrentDb        ' Get current database.
    Set td = db.TableDefs(tblName)        ' Get object for table.
    DoCmd.OpenTable tblName, acNormal        ' Open table.
    td.Properties.Refresh
    On Error GoTo Frozen_Err
    If td.Properties("FrozenColumns") &gt; 3 Then     ' Check property.
        DoCmd.Maximize
    End If_Bye:
    Exit Sub_Err:
    If Err = conPropertyNotFound Then    ' Property not in collection.
        Set prop = td.CreateProperty("FrozenColumns", dbInteger, 1)
        td.Properties.Append prop
        Resume Frozen_Bye
    End IfSub</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
