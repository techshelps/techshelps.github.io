<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Common WordBasic Errors</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H2 CLASS="h1">Common WordBasic Errors</H2><P CLASS="t">The WordBasic errors described in this section are errors that prevent a macro from running. These errors occur when an instruction breaks one of the rules that govern the way you can use the WordBasic language. Word displays an error message as soon as it encounters a line containing an error. If you have the macro open in a macro-editing window, Word highlights the offending line in red. Every WordBasic error message box contains a Help button. When you choose the Help button, Word provides suggestions about what may have caused&nbsp;the error.</P>
<P CLASS="a">    <img src="ATR0601.gif"></P>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">Word does not highlight all the errors in a macro at once. If you have many typos or syntax errors in your macro, you will get an error message each time you run your macro, until all the errors are corrected.</P>
<P></P>
<H3 CLASS="h3"><A NAME="sec0"></A>Syntax Error</H3><P CLASS="t">This is by far the most common error message. The following are some of the causes of syntax error messages.</P>
<H4 CLASS="h6"><A NAME="sec1"></A>A missing quotation mark</H4><P CLASS="h">A string must be enclosed by quotation marks. An error is generated if one or both are missing.</P>
<H4 CLASS="h6"><A NAME="sec2"></A>A missing, misplaced, or extra comma</H4><P CLASS="h">Each argument for a statement or function must be separated by a comma. A missing, misplaced, or extra comma generates an error.</P>
<H4 CLASS="h6"><A NAME="sec3"></A>A missing period</H4><P CLASS="h">Each argument for a statement that corresponds to a dialog box must begin with a period. For example, .FileName is an argument for the <B>FileOpen</B> statement.</P>
<H4 CLASS="h6"><A NAME="sec4"></A>A missing parenthesis at the end of a function</H4><P CLASS="h">A function is always followed by an opening and closing parenthesis. A syntax error is generated if one or both are missing.</P>
<H4 CLASS="h6"><A NAME="sec5"></A>A missing reserved word</H4><P CLASS="h">Some WordBasic instructions include more than one reserved word. For example, an <B>If</B><FONT FACE="Symbol"><B>¼</B></FONT><B>Then</B><FONT FACE="Symbol"><B>¼</B></FONT><B>Else</B> instruction must include the <B>Then</B> reserved word.</P>
<H4 CLASS="h6"><A NAME="sec6"></A>A reserved word name conflict</H4><P CLASS="h">WordBasic generates a syntax error if you create a variable name that matches a reserved word. For example, a variable named "Then" conflicts with the reserved word <B>Then</B>, which is part of the <B>If</B><FONT FACE="Symbol"><B>¼</B></FONT><B>Then</B><FONT FACE="Symbol"><B>¼</B></FONT><B>Else</B> statement.</P>
<H3 CLASS="h3"><A NAME="sec7"></A>Type Mismatch</H3><P CLASS="t">This error occurs when an instruction requires a particular data type but doesn't get it. Because there are only two data types in WordBasic&nbsp;—&nbsp;strings and numbers&nbsp;—&nbsp;the error means that a string was used when a number was required, or vice versa. In the following example, pet is meant to be a string variable, but it is missing a dollar sign ($), so Word interprets it as a numeric variable and generates an error:</P>
<P CLASS="spacing"><BR></P>
<PRE>pet = "poodle"            'Should be: pet$ = "poodle"
</PRE>
<P CLASS="t">This error is also generated when you provide a function with an argument of the wrong type. Here is an example:</P>
<P CLASS="spacing"><BR></P>
<PRE>a$ = Str$("4")            'Should be: a$ = Str$(4)
</PRE>
<H3 CLASS="h3"><A NAME="sec8"></A>Wrong Number of Parameters</H3><P CLASS="t">This error is generated when a statement or function has too many or too few arguments (also known as "parameters"). Here are some examples:</P>
<P CLASS="spacing"><BR></P>
<PRE>a$ = Chr$()                'Chr$() requires an argument
a$ = Str$()                'Str$() requires an argument
a$ = Selection$(1)        'Selection$() does not take an argument
MsgBox                'MsgBox requires an argument
ChDir                'ChDir requires an argument
</PRE>
<H3 CLASS="h3"><A NAME="sec9"></A>Unknown Command, Subroutine, or Function</H3><P CLASS="t">This error message usually means that you have misspelled a function or statement name. It can also occur if you omit the dollar sign ($) from a function that returns a string. Each of the following instructions generates this error message:</P>
<P CLASS="spacing"><BR></P>
<PRE>MgsBox "Hello"            'Should be: MsgBox "Hello"
EditFnd "muskrat"        'Should be: EditFind "muskrat"
quote$ = Chr(34)            'Should be: quote$ = Chr$(34)
</PRE>
<P CLASS="t">In addition, this error can occur if an instruction that should be two words is typed as one&nbsp;—&nbsp;EndDialog, for example, instead of End Dialog (though both EndIf and End If are accepted).</P>
<H3 CLASS="h3"><A NAME="sec10"></A>Undefined Dialog Record Field</H3><P CLASS="t">This error message is displayed if you misspell the argument for a statement that corresponds to a dialog box, as in the following example:</P>
<P CLASS="spacing"><BR></P>
<PRE>EditFind "sasquatch", .WhleWord = 1            'Should be: .WholeWord = 1
</PRE>
<P CLASS="t">The error also occurs if you include an argument that doesn't belong, as in the following:</P>
<P CLASS="spacing"><BR></P>
<PRE>EditFind "skunk", .WholeWord = 1, .Musk = 1    '"Musk" is not valid
</PRE>
<H3 CLASS="h3"><A NAME="sec11"></A>Bad Parameter</H3><P CLASS="t">This message is displayed if the value for an argument is outside the range of accepted values, as in the following example:</P>
<P CLASS="spacing"><BR></P>
<PRE>ChangeCase 50                        '"50" is too large a value
</PRE>
<H3 CLASS="h3"><A NAME="sec12"></A>Duplicate Label</H3><P CLASS="t">This error occurs if the macro includes two subroutines or user-defined functions with the same name. It also occurs if you create two <B>Goto </B>labels that have the same name.</P></FONT></FONT></BODY></HTML>
