<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Word API Functions</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H2 CLASS="h1">Word API Functions</H2><P CLASS="t">There are some functions in Word available to WLLs but not to WordBasic. These functions fill special needs of WLLs in Windows and on the Macintosh, as the following topics explain.</P>
<H3 CLASS="h3"><A NAME="sec0"></A>General Functions</H3><P CLASS="t">Note that the following four WordBasic functions can only be called from a WLL.</P>
<H4 CLASS="h4"><A NAME="sec1"></A>wdAddCommand</H4><P CLASS="t">Registers add-in functions in Word. It takes three arguments: the DocID (which is passed by Word to <B>wdAutoOpen</B>), the name of the function to be registered, and a description.</P>
<H4 CLASS="h4"><A NAME="sec2"></A>wdPrint</H4><P CLASS="t">Same as the WordBasic <B>Print</B> statement; it prints a string in the status bar.</P>
<H4 CLASS="h4"><A NAME="sec3"></A>wdGetInst</H4><P CLASS="t">Returns the handle (a long value) of the instance of Word (Windows only).</P>
<H4 CLASS="h4"><A NAME="sec4"></A>wdGetHwnd</H4><P CLASS="t">Returns the handle (a long value) of the Word window (Windows only).</P>
<H3 CLASS="h3"><A NAME="sec5"></A>Timer Messages</H3><P CLASS="t">On the Macintosh, the single function <B>wdSetTimer </B>supplies timer messages from Word for a WLL to use. When a timer message happens, the WLL gets called from Word with cacCallTimer. Here is the syntax:</P>
<P CLASS="spacing"><BR></P>
<PRE>short wdSetTimer( short DocID, long Timer);
</PRE>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="81pt" VALIGN="TOP"><COL WIDTH="267pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Parameter</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">DocID</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Identifies which WLL the timer message should be sent to</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Timer</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The number of milliseconds to set the timer for</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">A WLL can have a single timer set at any time; calling <B>wdSetTimer</B> clears the old timer before setting a new one. Calling with a Timer value of 0 (zero) clears the old timer.</P>
<H3 CLASS="h3"><A NAME="sec6"></A>WLL Windows</H3><P CLASS="t">On the Macintosh, the following group of functions should be used for WLLs that need windows created for them that Word will send messages to.</P>
<P CLASS="t">After a WLL window has been established, events are handled as follows:</P>
<UL><LI>    MouseDown and mouseUp events are sent to all WLL windows.</LI><LI>    Update events are sent to the appropriate WLL window.</LI><LI>    KeyDown events are sent to the appropriate WLL window only if <B>wdCaptureKeyDown</B> has been done for that window.</LI></UL><P></P>
<H4 CLASS="h4"><A NAME="sec7"></A>wdOpenWindow</H4><P CLASS="t">This function opens and displays a WLL window, and returns the window pointer in a long to use in the other WLL window functions. Here is the syntax:</P>
<P CLASS="spacing"><BR></P>
<PRE>long wdOpenWindow( short DocID, short x, short y, short dx, 
    short dy, long lData, short fFloat);
</PRE>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="258pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Parameter</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">DocID</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Identifies which WLL to send messages to</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">x, y, dx, dy</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Specifies the position and size of the window in pixels</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="258pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Parameter</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Description</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">lData</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">Contains user data</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">fFloat</P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">If fTrue, uses altDBoxProc for the window type; otherwise, uses documentProc (does not actually cause the window to float or not float)</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H4 CLASS="h4"><A NAME="sec8"></A>wdCloseWindow</H4><P CLASS="t">Closes a CAPI window, and returns a short containing fTrue or fFalse to indicate success or failure. The function takes the window pointer as a long parameter. Here is the syntax:</P>
<P CLASS="spacing"><BR></P>
<PRE>short wdCloseWindow( long *Window);
</PRE>
<H4 CLASS="h4"><A NAME="sec9"></A>wdCaptureKeyDown</H4><P CLASS="t">Starts mode in which KeyDown messages are sent to the CAPI window, and returns a short containing fTrue or fFalse to indicate success or failure. This function takes the window pointer as a long parameter. Here is the syntax:</P>
<P CLASS="spacing"><BR></P>
<PRE>short wdCaptureKeyDown( long *Window);
</PRE>
<H4 CLASS="h4"><A NAME="sec10"></A>wdReleaseKeyDown</H4><P CLASS="t">Stops mode in which KeyDown messages are sent to the CAPI window, and returns a short containing fTrue or fFalse to indicate success or failure. This function takes the window pointer as a long parameter. Here is the syntax:</P>
<P CLASS="spacing"><BR></P>
<PRE>short wdReleaseKeyDown( long *Window);
</PRE></FONT></FONT></BODY></HTML>
