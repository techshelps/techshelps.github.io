<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso8859-1">


<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DSum Function</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<h1><a name="sec175"></a>DSum Function</h1>

<h2><a name="sec176"></a>Description</h2>

<p>You can use the <b>DSum</b> functions to calculate the sum of
a set of values in a specified set of records (domain). Use <b>DSum</b>
in a macro or module, in a query expression, or in a calculated
control.</p>

<p>For example, you could use <b>DSum</b> in a calculated field
expression in a query to calculate the total sales made by a
particular employee over a period of time. Or you could use <b>DSum</b>
in a calculated control to display a running sum of sales for a
particular product.</p>

<h2><a name="sec177"></a>Syntax</h2>

<p><b>DSum(</b><i>expr</i>, <i>domain</i>[, <i>criteria</i>]<b>)</b></p>

<p>The <b>DSum</b> function uses the following arguments.</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Argument</b></td>
        <td><b>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Description</b></td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>expr</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Expression that identifies the numeric
        field whose values you want to sum. It can be a string
        expression identifying a field in a table or query, or it
        can be an expression that performs a calculation on data
        in that field. You can include in <i>expr</i> the name of
        a table field, a control on a form, a constant, or a
        function. If <i>exp</i>r includes a function, it can be
        either built-in or user-defined, but not another domain
        aggregate or SQL aggregate function.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>domain</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">String expression identifying the set of
        records that constitutes the domain. It can be a table
        name or a query name.</td>
    </tr>
    <tr>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><i>criteria</i></td>
        <td valign="top">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">Optional string expression used to
        restrict the range of data on which <b>DSum</b> is
        performed. For example, <i>criteria</i> is often
        equivalent to the WHERE clause in an SQL expression,
        without the word WHERE. If <i>criteria</i> is omitted, <b>DSum</b>
        evaluates <i>expr </i>against the entire domain. Any
        field included in <i>criteria</i> must also be a field in
        <i>domain</i>; otherwise, <b>DSum</b> returns a <b>Null</b>.</td>
    </tr>
</TBODY></table>

<p class="spacing"><br>
</p>

<h2><a name="sec178"></a>Remarks</h2>

<p><b>DSum</b> finds the sum of values in the field or expression
defined by <i>expr, </i>in the table or query referred to by <i>domain</i>,
according to any restrictions specified by <i>criteria</i>.</p>

<p>If no record satisfies the criteria argument or if domain
contains no records, <b>DSum</b> returns a <b>Null</b>.</p>

<p>Whether you use <b>DSum</b> in a macro or module, a query
expression, or a calculated control, you must construct the <i>criteria</i>
argument carefully to ensure that it will be evaluated correctly.</p>

<p>You can use <b>DSum</b> to specify criteria in the Criteria
row of a query, in a calculated field in a query expression, or
in the Update To row of an update query.</p>

<p><b>Note</b> You can use either <b>DSum</b> or <b>Sum</b> in a
calculated field expression in a totals query. If you use <b>DSum</b>,
values are calculated before data is grouped. If you use <b>Sum</b>,
the data is grouped before values in the field expression are
evaluated.</p>

<p>You may want to use <b>DSum</b> when you need to display the
sum of a set of values from a field that is not in the record
source for your form or report. For example, suppose you have a
form which displays information about a particular product. You
could use <b>DSum</b> to maintain a running total of sales of
that product in a calculated control.</p>

<p><b>Tip</b> If you need to maintain a running total in a
control on a report, you can use the <b>RunningSum</b> property
of that control if the field on which it is based is included in
the record source for the report. Use <b>DSum</b> to maintain a
running sum on a form.</p>

<p><b>Note</b> Unsaved changes to records in <i>domain</i> are
not included when you use this function. If you want the <b>DSum</b>
function to be based on the changed values, you must first save
the changes by choosing the Save Record command from the File
menu, moving the focus to another record, or using the <b>Update</b>
method.</p>

<h2><a name="sec179"></a>See Also</h2>

<p><b>DCount</b> Function, Domain Aggregate Functions, <b>RunningSum</b>
Property.</p>

<h2><a name="sec180"></a>Example</h2>

<p>This example totals the values from the Freight field for
orders shipped to the United Kingdom. The domain is an Orders
table. The <i>criteria</i> argument restricts the resulting set
of records to those for which ShipCountry equals UK.</p>

<p class="spacing"><br>
</p>

<pre>Dim curX As Currency= DSum(&quot;[Freight]&quot;, &quot;Orders&quot;, &quot;[ShipCountry] = 'UK'&quot;)
</pre>

<p>The next example calculates a total using two separate
criteria. Note that single quotation marks (') and number signs
(#) are included in the string expression, so that when the
strings are concatenated, the string literal will be enclosed in
single quotation marks, and the date will be enclosed in number
signs.</p>

<p class="spacing"><br>
</p>

<pre>Dim curX As Currency= DSum(&quot;[Freight]&quot;, &quot;Orders&quot;, _
    &quot;[ShipCountry] = 'UK' AND [ShippedDate] &gt; #1-1-95#&quot;)
</pre>

<p>You can use a domain function in the Update To row of an
update query. For instance, suppose you want to track current
sales by product in a Products table. You could add a new field
called SalesSoFar to the Products table, and run an update query
to calculate the correct values and update the records. Create a
new query based on the Products table, and choose Update from the
Query menu. Add the SalesSoFar field to the query grid, and enter
the following in the Update To row:</p>

<p class="spacing"><br>
</p>

<pre>DSum(&quot;[Quantity]*[UnitPrice]&quot;, &quot;Order Details&quot;, _
    &quot;[ProductID] = &quot; &amp; [ProductID])
</pre>

<p>When the query is run, Microsoft Access calculates the total
amount of sales for each product, based on information from an
Order Details table. The sum of sales for each product is added
to the Products table.</p>
</FONT></FONT></BODY>
</html>
