<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GoTo Statement</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec50"></A>GoTo Statement</H1><P CLASS="t">  </P>
<H2><A NAME="sec51"></A>Description</H2><P>Branches unconditionally to a specified line within a procedure.</P>
<H2><A NAME="sec52"></A>Syntax</H2><P><B>GoTo</B> <I>line</I></P>
<P>The <I>line </I>argument can be any line label or line number.</P>
<H2><A NAME="sec53"></A>Remarks</H2><P><B>GoTo</B> can branch only to lines within the procedure where it appears.</P>
<P CLASS="t">  </P>
<P><B>Note</B>   Too many <B>GoTo</B> statements can be difficult to read and debug. Use structured control statements (<B>Do...Loop</B>, <B>For...Next</B>, <B>If...Then...Else</B>, <B>Select Case</B>) whenever possible.</P>
<P CLASS="t">  </P>
<H2><A NAME="sec54"></A>See Also</H2><P><B>Do...Loop</B> Statement, <B>For...Next</B> Statement, <B>GoSub...Return</B> Statement, <B>If...Then...Else</B> Statement, <B>Select Case</B> Statement.</P>
<H2><A NAME="sec55"></A>Example</H2><P>This example uses the <B>GoTo</B> statement to branch to line labels within a procedure.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>Sub GotoStatementDemo()
    Number = 1                 ' Initialize variable.
                            ' Evaluate Number and branch to appropriate                             ' label.
    If Number = 1 Then GoTo Line1 Else GoTo Line2
    :
    MyString = "Number equals 1"
    GoTo LastLine            ' Go to LastLine.:
    ' The following statement never gets executed.
    MyString = "Number equals 2": 
    Debug.Print MyString        ' Print "Number equals 1" in
                            ' Debug window.Sub
</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
