<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetPrivateProfileString, SetPrivateProfileString()</TITLE><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">


<FONT FACE="ARIAL,HELVETICA" SIZE="2"><H1 CLASS="h2">SetPrivateProfileString, SetPrivateProfileString()</H1><P CLASS="h"><B>Syntax</B></P>
<P CLASS="syn"><B>SetPrivateProfileString</B> <I>Section$</I><B>,</B><I> KeyName$</I><B>,</B> <I>Setting$</I><B>,</B><I> Filename$</I></P>
<P CLASS="syn"><B>SetPrivateProfileString(</B><I>Section$</I><B>,</B><I> KeyName$</I><B>,</B> <I>Setting$</I><B>,</B><I> Filename$</I><B>)</B></P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">Defines or redefines a setting in a settings file, a file that your macros can use for storing and retrieving settings. For example, you can store the name of the active document when you quit Word so that it can be reopened automatically the next time you start Word. In Windows, a settings file is a text file such as WINWORD6.INI. On the Macintosh, a settings file is a resource file such as Word Settings (6). In Windows 95 and Windows NT, you can use <B>SetPrivateProfileString</B> to assign a setting to a value in the registry.</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="276pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="thf"><B>Argument</B></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="th"><B>Explanation</B></P></FONT></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tr"></P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Section$ </I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The name of the section in the settings file that contains the key you want to set. In Windows, this is the name that appears between brackets before the associated keys (do not include the brackets with <I>Section$</I>).</P>
<P CLASS="tt">If you are using <B>SetPrivateProfileString</B> in Windows 95 or Windows NT to assign a setting to a value in the registry, <I>Section$</I> should be the complete path to the key, including the root (for example, "HKEY_CURRENT_USER\Software\Microsoft\Word\6.0\Options".</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>KeyName$ </I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The key to set. In a Windows settings file, the key name is followed by an equal sign (=) and the setting.</P>
<P CLASS="tt">If you are using <B>SetPrivateProfileString</B> in Windows 95 or Windows NT to assign a setting to a value in the registry, <I>KeyName$</I> should be the name of the value in the key specified by <I>Section$</I> (for example, "MessageBeeps").</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Setting$</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The new setting.</P></FONT></TD></TR><TR><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt"><I>Filename$</I></P></FONT></TD><TD VALIGN="TOP"><FONT FACE="ARIAL,HELVETICA" SIZE="2"><P CLASS="tt">The filename for the settings file. If a path is not specified, the Windows folder (Windows) or the Preferences folder (Macintosh) is assumed. If the file does not already exist, Word creates it.</P>
<P CLASS="tt">If you are using <B>S etPrivateProfileString</B> in Windows 95 or Windows NT to assign a setting to a value in the registry, <I>Filename$</I> must be an empty string ("").</P></FONT></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">The <B>SetPrivateProfileString</B><B>()</B> function behaves the same as the statement and also returns a value indicating whether the action was successful: –1 means the key was set, 0 (zero) means the key was not set. Keys cannot be set if the settings file is read-only.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This pair of auto macros automatically opens the document that was active the last time you quit Word. On the Macintosh, substitute a settings filename such as MY SETTINGS for MY.INI.</P>
<P CLASS="t">The following is the AutoExit macro. If the active window is a macro-editing window, the <B>If</B> conditional prevents Word from writing the macro name to the settings file. This prevents an error from occurring in the AutoExec macro.</P>
<P CLASS="spacing"><BR></P>
<PRE>Sub MAIN
If SelInfo(27) &lt;&gt; -1 Then a$&nbsp;=&nbsp;FileName$()
check&nbsp;=&nbsp;SetPrivateProfileString("Word Info", "LastActive", a$, \
    "MY.INI")
If check&nbsp;=&nbsp;0 Then MsgBox "Could not set INI option."
End Sub
</PRE>
<P CLASS="t">The following is the AutoExec macro:</P>
<P CLASS="spacing"><BR></P>
<PRE>Sub MAIN
name$&nbsp;=&nbsp;GetPrivateProfileString$("Word Info", "LastActive", \
    "MY.INI")
If name$ &lt;&gt; "" Then FileOpen .Name&nbsp;=&nbsp;name$
End Sub
</PRE>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>GetProfileString$</B><B>()</B>,<B> GetPrivateProfileString$</B><B>()</B>,<B> SetProfileString</B>,<B> ToolsAdvancedSettings</B></P></FONT></FONT></BODY></HTML>
