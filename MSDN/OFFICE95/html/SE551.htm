<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Names Method</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>Names Method</H1><P CLASS="h"><B>Applies To</B></P>
<P CLASS="t"><B>Application </B>Object, <B>Workbook </B>Object, <B>Worksheet </B>Object.</P>
<P CLASS="h"><B>Description</B></P>
<P CLASS="t">Accessor. Returns an object that represents a single name (a <B>Name</B> object, Syntax 1) or a collection of names (the <B>Names</B> object, Syntax 2). Read-only.</P>
<P CLASS="h"><B>Syntax 1</B></P>
<P CLASS="syn"><I>object</I>.<B>Names(</B><B><I>index</I></B>,<B><I> indexLocal</I></B>,<B><I> refersTo</I></B><B>)</B></P>
<P CLASS="h"><B>Syntax 2</B></P>
<P CLASS="syn"><I>object</I>.<B>Names</B></P>
<P CLASS="term1"><I>object</I></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional for <B>Application</B>, required for <B>Workbook</B> and <B>Worksheet</B>. Specifies the object containing names to return.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>index</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional (Syntax 1 requires one of the three arguments). The name or number of the defined name to return.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>indexLocal</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional (Syntax 1 requires one of the three arguments). The name of the defined name, in the language of the user. No names will be translated if you use this argument.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>refersTo</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional (Syntax 1 requires one of the three arguments). What the name refers to. This allows you to get a name by what it refers to.</P>
</BLOCKQUOTE>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t">For Syntax 1, you must specify one (and only one) of the three arguments.</P>
<P CLASS="t">This method returns worksheet-specific names (names defined with the "WorksheetName!" prefix) for the <B>Worksheet</B> object. </P>
<P CLASS="t">This method returns names in the specified workbook (including all worksheet-specific names) for the <B>Workbook</B> object, and names in the active workbook for the <B>Application</B> object.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example defines the name myName for cell A1 on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">ActiveWorkbook.Names.Add Name:="myName", RefersToR1C1:= _
    "=Sheet1!R1C1"
</FONT></PRE>
<P CLASS="t">This example deletes every defined name that contains "temp" in the name. The Option Compare Text statement must be included at the top of any module that contains this example.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">For Each nm In ActiveWorkbook.Names
    If nm.Name Like "*temp*" Then
        nm.Delete
    End If
Next nm
</FONT></PRE></FONT>
</FONT></BODY></HTML>
