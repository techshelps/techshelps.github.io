<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>InStr Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec18"></A>InStr Function</H1><P CLASS="t">  </P>
<H2><A NAME="sec19"></A>Description</H2><P>Returns the position of the first occurrence of one string within another.</P>
<H2><A NAME="sec20"></A>Syntax</H2><P><B>InStr(</B>[<I>start</I>, ]<I>string1</I>, <I>string2</I>[, <I>compare</I>]<B>)</B></P>
<P>The <B>InStr</B> function syntax has these named arguments:</P>
<P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>start</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. If <I>start</I> contains <B>Null</B>, an error occurs. The <I>start</I> argument is required if <I>compare</I> is specified.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="288pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Part</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Description</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string1</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">String expression being searched.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string2</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">String expression sought.</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>compare</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Specifies the type of string comparison. The <I>compare</I> argument can be omitted, it can be 0 or 1, or it can be the value of the <B>CollatingOrder</B> property of a <B>Field</B> object. Specify <B>0</B> (default) to perform a binary comparison. Specify <B>1</B> to perform a textual, case-insensitive comparison. Specify the return value of the <B>CollatingOrder</B> property of a <B>Field</B> object if you want to sort or compare values from a database in the same way the database itself would. If <I>compare</I> is <B>Null</B>, an error occurs. The start argument is required if <I>compare</I> is specified. If <I>compare</I> is omitted, the <B>Option Compare</B> setting determines the type of comparison.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><H2><A NAME="sec21"></A>Return Values</H2><P CLASS="t">  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="180pt" VALIGN="TOP"><COL WIDTH="188pt" VALIGN="TOP"></COLGROUP><TBODY><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>If</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>InStr returns</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string1</I> is zero-length</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">0</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string1</I> is <B>Null</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Null</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string2</I> is zero-length</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>start</I></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string2</I> is <B>Null</B></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><B>Null</B></P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string2</I> is not found</P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">0</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>string2</I> is found within <I>string1</I> </P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">Position at which match is found</P></TD></TR><TR><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t"><I>start</I> &gt; <I>string2</I></P></TD><td VALIGN="TOP">
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P CLASS="t">0</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">  </P>
<P><B>Note</B>   Another function (<B>InStrB</B>) is provided for use with byte data contained in a string. Instead of returning the character position of the first occurrence of one string within another, <B>InStrB</B> returns the byte position.</P>
<P CLASS="t">  </P>
<P></P>
<H2><A NAME="sec22"></A>See Also</H2><P><B>Option Compare</B> Statement.</P>
<H2><A NAME="sec23"></A>Example</H2><P>This example uses the <B>InStr</B> function to return the position of the first occurrence of one string within another.</P>
<P CLASS="t">  </P>
<P CLASS="spacing"><BR></P>
<PRE>SearchString ="XXpXXpXXPXXP"                ' String to search in.= "P"    ' Search for "P".
' A textual comparison starting at position 4. Returns 6.= InStr(4, SearchString, SearchChar, 1)    
' A binary comparison starting at position 1. Returns 9.= InStr(1, SearchString, SearchChar, 0)
' Comparison is binary by default (last argument is omitted).= InStr(SearchString, SearchChar)    ' Returns 9.= InStr(1, SearchString, "W")        ' Returns 0.</PRE>
<P CLASS="t">  </P>
<P CLASS="t"> </P>
</FONT></FONT></BODY></HTML>
