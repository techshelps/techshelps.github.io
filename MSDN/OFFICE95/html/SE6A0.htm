<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQLBind Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H1>SQLBind Function</H1><P CLASS="h"><B>Description</B></P>
<P CLASS="t">In Microsoft Excel for Windows 95, do not use <B>SQLBind</B> and the other ODBC functions in the XLODBC.XLA add-in; use the objects, methods, and properties in the Data Access Objects (DAO) library instead. </P>
<P CLASS="t"><B>SQLBind</B> specifies where results are placed when they are retrieved using <B>SQLRetrieve</B> or <B>SQLRetrieveToFile</B>. Use <B>SQLBind </B>to change the column order of the result set from a query, or to place the result set columns in non-adjacent worksheet columns.</P>
<P CLASS="t">This function is contained in the XLODBC.XLA add-in (ODBC Add-In on the Macintosh). Before you use the function, you must establish a reference to the add-in using the References command (Tools menu).</P>
<P CLASS="h"><B>Syntax</B></P>
<P CLASS="t"><B>SQLBind</B>(<B><I>connectionNum</I></B><I>, </I><B><I>column</I></B><I>, </I><B><I>reference</I></B>)</P>
<P CLASS="term1"><B><I>connectionNum</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Required. The unique connection ID of the data source, returned by <B>SQLOpen</B>, for which you want to bind results.</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>column</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. The column number of the result set that you want to bind. Columns in the result set are numbered from left to right starting with 1. If you omit <B><I>column</I></B>, all bindings for <B><I>connectionNum</I></B> are removed.</P>
<P CLASS="dt1">Column number 0 (zero) contains row numbers for the result set. You can return the row numbers by binding column number 0 (zero).</P>
</BLOCKQUOTE>
<P CLASS="term1"><B><I>reference</I></B></P>
<BLOCKQUOTE>
<P CLASS="dt1">Optional. The location of a single cell on a worksheet where you want the results bound, as a <B>Range</B> object. If <B><I>reference</I></B> is omitted, binding is removed for the column.</P>
</BLOCKQUOTE>
<P CLASS="h"><B>Return Value</B></P>
<P CLASS="t">This function returns an array listing the bound columns for the current connection by column number.</P>
<P CLASS="t">If <B>SQLBind</B> is unable to bind the column to the cell in the specified reference, it returns Error 2042.</P>
<P CLASS="t">If <B><I>connectionNum</I></B> is not valid or if you try to bind a cell that is not available, <B>SQLBind</B> returns Error 2015.</P>
<P CLASS="t">If <B><I>reference</I></B> refers to more than a single cell, <B>SQLBind</B> returns Error 2023.</P>
<P CLASS="t">If <B>SQLRetrieve</B> does not have a destination parameter, <B>SQLBind</B> places the result set in the location indicated by reference.</P>
<P CLASS="h"><B>Remarks</B></P>
<P CLASS="t"><B>SQLBind</B> tells the ODBC Control Panel Administrator where to place results when they are received using <B>SQLRetrieve</B> The results are placed in the reference cell and cells immediately below it.</P>
<P CLASS="t">Use <B>SQLBind</B> if you want the results from different columns to be placed in disjoint worksheet locations.</P>
<P CLASS="t">Use <B>SQLBind</B> for each column in the result set. A binding remains valid as long as the connection specified by <B><I>connectionNum</I></B> is open.</P>
<P CLASS="t">Call <B>SQLBind</B> after calling <B>SQLOpen</B> and <B>SQLExecQuery</B>, but before calling <B>SQLRetrieve</B> or <B>SQLRetrieveToFile</B>. Calls to <B>SQLBind</B> do not affect results that have already been retrieved.</P>
<P CLASS="h"><B>See Also</B></P>
<P CLASS="t"><B>SQLClose</B> Function, <B>SQLError</B> Function, <B>SQLExecQuery</B> Function, <B>SQLGetSchema</B> Function, <B>SQLOpen</B> Function, <B>SQLRequest</B> Function, <B>SQLRetrieve</B> Function, <B>SQLRetrieveToFile</B> Function.</P>
<P CLASS="h"><B>Example</B></P>
<P CLASS="t">This example runs a query on the NWind sample database, and then it uses the <B>SQLBind</B> function to display only the fourth and ninth columns of the query result set (the product name and the quantity on order) on Sheet1.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">If Application.OperatingSystem Like "*Win*" Then
    databaseName = "NWind"
Else        'Macintosh
    databaseName = "NorthWind"
End If
queryString = "SELECT * FROM product.dbf WHERE (product.ON_ORDER&lt;&gt;0)"
chan = SQLOpen("DSN=" &amp; databaseName)
SQLExecQuery chan, queryString
Set output1 = Worksheets("Sheet1").Range("A1")
Set output2 = Worksheets("Sheet1").Range("B1")
SQLBind chan, 4, output1
SQLBind chan, 9, output2
SQLRetrieve chan
SQLClose chan
</FONT></PRE></FONT>
</FONT></BODY></HTML>
