<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StopAllMacros Action</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">

<FONT FACE="Verdana, Arial, Hevetica" SIZE="2"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H1><A NAME="sec93"></A>StopAllMacros Action</H1><P CLASS="t">  </P>
<H2><A NAME="sec94"></A>Description</H2><P>You can use the StopAllMacros action to stop all nested macros that are currently running.</P>
<H2><A NAME="sec95"></A>Setting</H2><P>The StopAllMacros action doesn’t use any arguments.</P>
<H2><A NAME="sec96"></A>Remarks</H2><P>You typically use this action when an error condition makes it necessary to stop all macros. You can use a conditional expression in the macro’s action row that contains this action. When the expression evaluates to <B>True</B> (-1), Microsoft Access stops all macros.</P>
<P>For example, you might have a macro that displays a message box as one of a number of complex actions, including running other macros. If the user chooses Cancel in this message box, the StopAllMacros action can stop all the macros that are running.</P>
<P>If a macro has used the Echo or SetWarnings actions to turn echo or the display of system messages off, the StopAllMacros action automatically turns them back on.</P>
<P>This action is not available in Visual Basic.</P>
<H2><A NAME="sec97"></A>See Also</H2><P>Echo Action, SetWarnings Action, StopMacro Action.</P>
<P CLASS="t"> </P></FONT></FONT></BODY></HTML>
