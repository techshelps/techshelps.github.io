<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object Fundamentals</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>Object Fundamentals</H2><P CLASS="t">When looking at a VBA macro that is all debugged and polished, the code seems so easy to write!  However, those who haven't done object-oriented programming before may discover that typing in a bunch of object names in a way that makes sense to the developer isn't a guarantee that the code will execute properly.  There is a set of rules for object syntax and relationships between objects that the VBA programmer needs to learn.  The rest of this section covers some important principles and good tools to simplify learning and make it easy to work with objects.  It's the principles and tools that are important, not the objects themselves.  Since there are so many objects, it's not worth spending time trying to memorize them.  </P></FONT>
</FONT></BODY></HTML>
