<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>For...Next</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><body bgcolor="#FFFFFF" link=#003399 vlink=#996699>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><FONT FACE="Verdana, Arial, Hevetica" SIZE="2">

<H2>For...Next</H2><P CLASS="t">When you don't know how many times you need to run the statements in a loop, use a <B>Do</B> loop. When you know that you must run the statements a specific number of times, use a <B>For...Next</B> loop. Unlike a <B>Do</B> loop, a <B>For...Next</B> loop uses a counter variable that increases or decreases in value during each repetition of the loop. Whereas a <B>Do</B> loop ends when a test condition becomes <B>True</B> or <B>False</B>, a <B>For...Next</B> loop ends when the counter variable reaches a specified value.</P>
<P CLASS="t">For example, the following <B>Sub</B> procedure sounds a tone however many times you specify.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub BeepSeveral()
    numBeeps = InputBox("How many beeps?")
    For counter = 1 To numBeeps
        Beep
    Next counter
End Sub
</FONT></PRE>
<P CLASS="t">Because you didn't specify otherwise, the counter variable in the preceding example increases by 1 each time the loop repeats. You can use the <B>Step</B> keyword to specify a different increment for the counter variable (if you specify a negative number, the counter variable decreases by the specified value each time through the loop). In the following <B>Sub</B> procedure, which replaces every other value in an array with 0 (zero), the counter variable increases by 2 each time the loop repeats.</P>
<P CLASS="spacing"><BR></P>
<PRE><FONT FACE="Courier" SIZE="2">Sub ClearArray(ByRef ArrayToClear())
    For i = LBound(ArrayToClear) To UBound(ArrayToClear) Step 2
        ArrayToClear(i) = 0
    Next i
End Sub
</FONT></PRE>
<P></P>
<P CLASS="nh"><B>Note</B></P>
<P CLASS="nt">The variable name after the <B>Next</B> statement is optional, but it can make your code easier to read, especially if you have several nested <B>For</B> loops.</P>
<P></P></FONT>
</FONT></BODY></HTML>
