<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Unique Property</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>Unique Property</h2>

Applies To</p>

<b>Index </b>Object.</p>

Description</p>

Sets or returns a value that indicates whether an <b>Index</b>
object represents a unique (key) index for a table. For an <b>Index</b>
object, this property setting is read/write until the object is
appended to a collection, after which it's read-only.</p>

Settings and Return Values</p>

The setting or return value is a Boolean expression
that specifies a unique index. The data type is Boolean. <b>True</b>
(-1) indicates that the <b>Index</b> object represents a unique
index.</p>

Remarks</p>

A unique index consists of one or more fields that
logically arrange all records in a table in a unique, predefined
order. If the index consists of one field, values in that field
must be unique for the entire table. If the index consists of
more than one field, each field can contain duplicate values, but
each combination of values from all the indexed fields must be
unique.</p>

If both the <b>Unique</b> and <b>Primary</b>
properties of an <b>Index</b> object are set to <b>True</b>, the
index is unique and primary: It uniquely identifies all records
in the table in a predefined, logical order. If the <b>Primary</b>
property is set to <b>False</b> (0), the index is a secondary
index. Secondary indexes (both key and nonkey) logically arrange
records in a predefined order without serving as an identifier
for records in the table.</p>

Tips</p>
<SPAN CLASS="list">
<ul>
    <li>&nbsp;</li>
    <li>You don't have to create indexes for tables, but in
        large, unindexed tables, accessing a specific record can
        take a long time.</li>
    <li>Records read from tables without indexes are returned in
        no particular sequence.</li>
    <li>The <b>Attributes</b> property of each <b>Field</b>
        object in the <b>Index</b> object determines the order of
        records and consequently determines the access techniques
        to use for that <b>Index</b> object.</li>
    <li>A unique index helps optimize finding records.</li>
    <li>Indexes don't affect the physical order of a base table
        &#151; indexes affect only how the records are accessed
        by the table-type <b>Recordset</b> object when a
        particular index is chosen or when the Microsoft Jet
        database engine creates <b>Recordset</b> objects.</li>
</ul>
</SPAN>
See Also</p>

<b>Attributes </b>Property,<b> Clustered </b>Property,<b>
Primary </b>Property,<b> Unique </b>Property.</p>

Example</p>

See the <b>Index</b> property example.</p>

Example (Microsoft Access)</p>

See the <b>IgnoreNulls</b> property example
(Microsoft Access).</p>
</BODY>

</html>
