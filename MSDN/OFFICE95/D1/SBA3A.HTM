<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Subqueries</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>SQL Subqueries</H2>Description</P>
A subquery is a SELECT statement nested inside a SELECT, SELECT... INTO, INSERT...INTO, DELETE, or UPDATE statement or inside another subquery.</P>
Syntax</P>
You can use three forms of syntax to create a subquery:</P>
<I>comparison</I> [ANY | ALL | SOME] (<I>sqlstatement</I>)</P>
<I>expression</I> [NOT] IN (<I>sqlstatement</I>)</P>
<I> </I>[NOT] EXISTS (<I>sqlstatement</I>)</P>
A subquery has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>comparison</I></P></TD><TD VALIGN="TOP">An expression and a comparison operator that compares the expression with the results of the subquery.</P></TD></TR><TR><TD VALIGN="TOP"><I>expression</I></P></TD><TD VALIGN="TOP">An expression for which the result set of the subquery is searched.</P></TD></TR><TR><TD VALIGN="TOP"><I>sqlstatement</I></P></TD><TD VALIGN="TOP">A SELECT statement, following the same format and rules as any other SELECT statement. It must be enclosed in parentheses.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
You can use a subquery instead of an expression in the field list of a SELECT statement or in a WHERE or HAVING clause. In a subquery, you use a SELECT statement to provide a set of one or more specific values to evaluate in the WHERE or HAVING clause expression.</P>
Use the ANY or SOME predicate, which are synonymous, to retrieve records in the main query that satisfy the comparison with any records retrieved in the subquery. The following example returns all products whose unit price is greater than that of any product sold at a discount of 25 percent or more:</P>
<BR></P>
<PRE>SELECT * FROM Products<BR>WHERE UnitPrice &gt; ANY<BR>(SELECT UnitPrice FROM OrderDetails<BR>WHERE Discount &gt;= .25);
</PRE>
Use the ALL predicate to retrieve only those records in the main query that satisfy the comparison with all records retrieved in the subquery. If you changed ANY to ALL in the above example, the query would return only those products whose unit price is greater than that of all products sold at a discount of 25 percent or more. This is much more restrictive.</P>
Use the IN predicate to retrieve only those records in the main query for which some record in the subquery contains an equal value. The following example returns all products with a discount of 25 percent or more:</P>
<BR></P>
<PRE>SELECT * FROM Products<BR>WHERE ProductID IN<BR>(SELECT ProductID FROM OrderDetails<BR>WHERE Discount &gt;= .25);
</PRE>
Conversely, you can use NOT IN to retrieve only those records in the main query for which no record in the subquery contains an equal value.</P>
Use the EXISTS predicate (with the optional NOT reserved word) in true/false comparisons to determine whether the subquery returns any records.</P>
You can also use table name aliases in a subquery to refer to tables listed in a FROM clause outside the subquery. The following example returns the names of employees whose salaries are equal to or greater than the average salary of all employees having the same job title. The Employees table is given the alias "T1."</P>
<BR></P>
<PRE>SELECT LastName,FirstName, Title, Salary<BR>FROM Employees AS T1<BR>WHERE Salary &gt;=(SELECT Avg(Salary)<BR>FROM Employees<BR>WHERE T1.Title = Employees.Title) Order by Title;
</PRE>
In the preceding example, the AS reserved word is optional.</P>
<P></P>
Some subqueries are allowed in crosstab queries — specifically, as predicates (those in the WHERE clause). Subqueries as output (those in the SELECT list) are not allowed in crosstabs.</P>
See Also</P>
INNER JOIN Operation; LEFT JOIN, RIGHT JOIN Operations; SELECT Statement; SELECT...INTO Statement; UNION Operation.</P>
Example</P>
Some of the following examples assume the existence of a hypothetical Salary field in an Employees table. </P>
This example lists the name, title, and salary of every sales representative whose salary is higher than that of all managers and directors.</P>
<BR></P>
<PRE>SELECT LastName, FirstName, Title, Salary FROM Employees <BR>WHERE Title LIKE "*Sales Rep*" AND Salary &gt; ALL (SELECT Salary <BR>FROM Employees <BR>WHERE (Title LIKE "*Manager*") OR (Title LIKE "*Director*"));
</PRE>
This example lists the name and unit price of every product whose unit price is the same as that of Aniseed Syrup.</P>
<BR></P>
<PRE>SELECT ProductName, UnitPrice FROM Products <BR>WHERE UnitPrice = (SELECT UnitPrice FROM [Products] <BR>WHERE ProductName = "Aniseed Syrup");
</PRE>
This example lists the company and contact of every customer who placed an order in the second quarter of 1995.</P>
<BR></P>
<PRE>SELECT ContactName, CompanyName, ContactTitle, Phone <BR>FROM Customers WHERE CustomerID IN (SELECT CustomerID FROM Orders <BR>WHERE OrderDate BETWEEN #04/1/95# AND #07/1/95#);
</PRE>
This example lists employees whose salary is higher than the average salary for all employees.</P>
<BR></P>
<PRE>SELECT LastName, FirstName, Title, Salary FROM Employees T1 <BR>WHERE Salary &gt;= (SELECT AVG(Salary) FROM Employees <BR>WHERE Employees.Title = T1.Title) ORDER BY Title;
</PRE>
This example selects the name of every employee who has booked at least one order. This could also be done with an INNER JOIN.</P>
<BR></P>
<PRE>SELECT FirstName, LastName FROM Employees AS E <BR>WHERE EXISTS (SELECT * FROM Orders AS O <BR>WHERE O.EmployeeID = E.EmployeeID);
</PRE>
<P></P></BODY>
</HTML>
