<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INNER JOIN Operation</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>INNER JOIN Operation</H2>Description</P>
Combines records from two tables whenever there are matching values in a common field.</P>
Syntax</P>
FROM <I>table1</I> INNER JOIN<I> table2</I> ON<I> table1</I>.<I>field1</I> <I>compopr table2</I>.<I>field2</I></P>
The INNER JOIN operation has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="263pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>table1</I>,<I> table2</I></P></TD><TD VALIGN="TOP">The names of the tables from which records are combined.</P></TD></TR><TR><TD VALIGN="TOP"><I>field1</I>,<I> field2</I></P></TD><TD VALIGN="TOP">The names of the fields that are joined. If they aren't numeric, the fields must be of the same data type and contain the same kind of data, but they don't have to have the same name.</P></TD></TR><TR><TD VALIGN="TOP"><I>compopr</I></P></TD><TD VALIGN="TOP">Any relational comparison operator: <B>=</B>, <B>&lt;</B>, <B>&gt;</B>, <B>&lt;=</B>, <B>&gt;=</B>, or <B>&lt;&gt;</B>.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
You can use an INNER JOIN operation in any FROM clause. These are the most common type of join. They combine records from two tables whenever there are matching values in a field common to both tables.</P>
You can use INNER JOIN with the Departments and Employees tables to select all the employees in each department. In contrast, to select all departments (even if some have no employees assigned to them) or all employees (even if some aren't assigned to a department), you can use a LEFT JOIN or RIGHT JOIN operation to create an outer join.</P>
If you try to join fields containing Memo or OLE Object data, an error occurs.</P>
You can join any two numeric fields of like types. For example, you can join on Counter and Long Integer fields because they are like types. However, you cannot join Single and Double types of fields.</P>
<P></P>
The following example shows how you could join the Categories and Products tables on the Category ID field:</P>
<BR></P>
<PRE>SELECT CategoryName, ProductName<BR>FROM Categories INNER JOIN Products<BR>ON Categories.CategoryID = Products.CategoryID;
</PRE>
In the preceding example, Category ID is the joined field, but it isn't included in the query output because it isn't included in the SELECT statement. To include the joined field, include the field name in the SELECT statement — in this case, Categories.CategoryID.</P>
You can also link several ON clauses in a JOIN statement, using the following syntax:</P>
SELECT <I>fields</I><BR>    FROM <I>table1</I> INNER JOIN <I>table2</I> <BR>    ON <I>table1</I>.<I>field1</I> <I>compopr</I> <I>table2</I>.<I>field1</I> AND <BR>    ON <I>table1</I>.<I>field2</I> <I>compopr</I> <I>table2</I>.<I>field2</I>) OR <BR>    ON <I>table1</I>.<I>field3</I> <I>compopr</I> <I>table2</I>.<I>field3</I>)];</P>
You can also nest JOIN statements using the following syntax:</P>
SELECT <I>fields</I><BR>    FROM <I>table1</I> INNER JOIN <BR>    (<I>table2</I> INNER JOIN [( ]<I>table3</I>  <BR>    [INNER JOIN [( ]<I>tablex</I> [INNER JOIN ...)]  <BR>    ON <I>table3</I>.<I>field3</I> <I>compopr</I> <I>tablex</I>.<I>fieldx</I>)] <BR>    ON <I>table2</I>.<I>field2</I> <I>compopr</I> <I>table3</I>.<I>field3</I>)  <BR>    ON <I>table1</I>.<I>field1</I> <I>compopr</I> <I>table2</I>.<I>field2</I>;</P>
A LEFT JOIN or a RIGHT JOIN may be nested inside an INNER JOIN, but an INNER JOIN may not be nested inside a LEFT JOIN or a RIGHT JOIN.</P>
See Also</P>
LEFT JOIN, RIGHT JOIN Operations; TRANSFORM Statement; UNION Operation.</P>
Example</P>
This example creates two equi-joins: one between the Order Details and Orders tables and another between the Orders and Employees tables. This is necessary because the Employees table doesn't contain sales data, and the Order Details table doesn't contain employee data. The query produces a list of employees and their total sales.</P>
<BR></P>
<PRE>SELECT DISTINCTROW Sum(UnitPrice * Quantity) <BR>AS [Sales], FirstName &amp; " " &amp; LastName AS Name FROM Employees <BR>INNER JOIN(Orders INNER JOIN [Order Details] <BR>ON Orders.OrderID = [Order Details].OrderID) <BR>ON Employees.EmployeeID = Orders.EmployeeID <BR>GROUP BY FirstName &amp; " " &amp; LastName;
</PRE>
<P></P></BODY>
</HTML>
