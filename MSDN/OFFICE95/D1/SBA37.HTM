<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SELECT...INTO Statement</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>SELECT...INTO Statement</h2>

Description</p>

Creates a make-table query.</p>

Syntax</p>

SELECT <i>field1</i>[, <i>field2</i>[, ...]] INTO <i>newtable</i>
[IN <i>externaldatabase</i>]<br>
FROM <i>source</i></p>

The SELECT...INTO statement has these parts.</p>

<table border="0" cellpadding="7" cols="2">
<COLGROUP><COL WIDTH="100pt" VALIGN="TOP"><COL WIDTH="248pt" VALIGN="TOP"></COLGROUP><TBODY>    <tr>
        <TD valign="top">Part</td>
        <TD valign="top">Description</td>
    </tr>
    <tr>
        <TD valign="top" colspan="2">&nbsp;</td>
    </tr>
    <tr>
        <TD valign="top"><i>field1</i>,<i> field2</i></td>
        <TD valign="top">The name of the fields to be copied into
        the new table.</td>
    </tr>
    <tr>
        <TD valign="top"><i>newtable</i></td>
        <TD valign="top">The name of the table to be created. It
        must conform to standard naming conventions. If <i>newtable</i>
        is the same as the name of an existing table, a trappable
        error will result.</td>
    </tr>
    <tr>
        <TD valign="top"><i>externaldatabase</i></td>
        <TD valign="top">The path to an external database. For a
        description of the path, see the IN clause.</td>
    </tr>
    <tr>
        <TD valign="top"><i>source</i></td>
        <TD valign="top">The name of the existing table from
        which records are selected. This can be single or
        multiple tables or a query.</td>
    </tr>
</TBODY></table>

<br>
</p>

Remarks</p>

You can use make-table queries to archive records,
make backup copies of your tables, or make copies to export to
another database or to use as a basis for reports that display
data for a particular time period. For example, you could produce
a Monthly Sales by Region report by running the same make-table
query each month.</p>

Notes</p>
<SPAN CLASS="list">
<ul>
    <li>You may want to define a primary key for the new table.
        When you create the table, the fields in the new table
        inherit the data type and field size of each field in the
        query's underlying tables, but no other field or table
        properties are transferred.</li>
    <li>To add data to an existing table, use the INSERT INTO
        statement instead to create an append query.</li>
    <li>To find out which records will be selected before you run
        the make-table query, first examine the results of a
        SELECT statement that uses the same selection criteria.</li>
</ul>
</SPAN>
See Also</p>

ALL, DISTINCT, DISTINCTROW, TOP Predicates; FROM
Clause; IN Clause; SELECT Statement; UNION Operation; WHERE
Clause.</p>

Example</p>

Some of the following examples assume the existence
of a hypothetical Salary field in a Payroll table. </p>

This example selects all records in the Employees
table and copies them into a new table named Emp Backup.</p>

<br>
</p>

<pre>SELECT Employees.* INTO [Emp Backup] FROM Employees;
</pre>

This example creates a new table called Trainees
that contains only employee records that have the title Trainee.</p>

<br>
</p>

<pre>SELECT Employees.FirstName, LastName INTO Trainees FROM Employees 
WHERE Title = 'Trainee';
</pre>

This example makes a copy of the Employees table and
places the new table in the hypothetical database BACKUP.MDB.</p>

<br>
</p>

<pre>SELECT Employees.* INTO Employees IN &quot;BACKUP.MDB&quot; FROM Employees;
</pre>

This example creates a new table that contains
employee and payroll data for all trainees. The Employees and
Payroll tables have a one-to-one relationship. The new table
contains all of the data from the Employees table plus the Salary
field from the Payroll table.</p>

<br>
</p>

<pre>SELECT Employees.*, Salary INTO Trainees FROM Employees 
INNER JOIN Payroll ON Employees.EmployeeID = Payroll.EmployeeID 
WHERE Title = 'Trainee';
</pre>
</BODY>

</html>
