<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Type Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Type Property</H2>Applies To</P>
Dynaset-Type <B>Recordset </B>Object,<B> Field </B>Object,<B> Parameter </B>Object,<B> </B>Property<B> </B>Object,<B> QueryDef </B>Object,<B> Recordset </B>Object,<B> </B>Snapshot-Type <B>Recordset </B>Object,<B> </B>Table-Type<B> Recordset </B>Object.</P>
Description</P>
Sets or returns a value that indicates the operational type or data type of an object. For a <B>Field</B> or <B>Property</B> object, this property is read/write until the object is appended to a collection or to another object, after which it's read-only. For a <B>Parameter</B>, <B>QueryDef</B>, or <B>Recordset</B> object, the property setting is read-only.</P>
Settings and Return Values</P>
The setting or return value is a constant that indicates an operational or data type. The data type is <B>Integer</B>.</P>
<P></P>
For a <B>Field</B>, <B>Parameter</B>, or <B>Property</B> object, the possible settings and return values are:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="140pt" VALIGN="TOP"><COL WIDTH="208pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Setting/Value</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>dbBoolean</B></P></TD><TD VALIGN="TOP">Boolean</P></TD></TR><TR><TD VALIGN="TOP"><B>dbByte</B></P></TD><TD VALIGN="TOP">Byte</P></TD></TR><TR><TD VALIGN="TOP"><B>dbInteger</B></P></TD><TD VALIGN="TOP">Integer</P></TD></TR><TR><TD VALIGN="TOP"><B>dbLong</B></P></TD><TD VALIGN="TOP">Long</P></TD></TR><TR><TD VALIGN="TOP"><B>dbCurrency</B></P></TD><TD VALIGN="TOP">Currency</P></TD></TR><TR><TD VALIGN="TOP"><B>dbSingle</B></P></TD><TD VALIGN="TOP">Single</P></TD></TR><TR><TD VALIGN="TOP"><B>dbDouble</B></P></TD><TD VALIGN="TOP">Double</P></TD></TR><TR><TD VALIGN="TOP"><B>dbDate</B></P></TD><TD VALIGN="TOP">Date/Time</P></TD></TR><TR><TD VALIGN="TOP"><B>dbText</B></P></TD><TD VALIGN="TOP">Text</P></TD></TR><TR><TD VALIGN="TOP"><B>dbLongBinary</B></P></TD><TD VALIGN="TOP">Long Binary (OLE Object)</P></TD></TR><TR><TD VALIGN="TOP"><B>dbMemo</B></P></TD><TD VALIGN="TOP">Memo</P></TD></TR><TR><TD VALIGN="TOP"><B>dbGUID</B></P></TD><TD VALIGN="TOP">GUID</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
For a <B>QueryDef</B> object, the possible settings and return values are:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="140pt" VALIGN="TOP"><COL WIDTH="208pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Setting/Values</P></TD><TD VALIGN="TOP">Query type</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>dbQSelect</B></P></TD><TD VALIGN="TOP">Select</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQAction</B></P></TD><TD VALIGN="TOP">Action</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQCrosstab</B></P></TD><TD VALIGN="TOP">Crosstab</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQDelete</B></P></TD><TD VALIGN="TOP">Delete</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQUpdate</B></P></TD><TD VALIGN="TOP">Update</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQAppend</B></P></TD><TD VALIGN="TOP">Append</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQMakeTable</B></P></TD><TD VALIGN="TOP">Make-table</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQDDL</B></P></TD><TD VALIGN="TOP">Data-definition</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQSQLPassThrough</B></P></TD><TD VALIGN="TOP">Pass-through</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQSetOperation</B></P></TD><TD VALIGN="TOP">Union</P></TD></TR><TR><TD VALIGN="TOP"><B>dbQSPTBulk</B></P></TD><TD VALIGN="TOP">Used with <B>dbQSQLPassThrough</B> to specify a query that doesn't return records.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>
Note</P>
To create an SQL pass through query, don't set the <B>dbQSQLPassThrough</B> constant. This is set automatically by the Microsoft Jet database engine when you create a <B>QueryDef</B> object and set the <B>Connect</B> property.</P>
<P></P>
<P></P>
For a <B>Recordset</B> object, the possible settings and return values are:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="140pt" VALIGN="TOP"><COL WIDTH="208pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Setting</P></TD><TD VALIGN="TOP">Recordset type</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>dbOpenTable</B></P></TD><TD VALIGN="TOP">Table</P></TD></TR><TR><TD VALIGN="TOP"><B>dbOpenDynaset</B></P></TD><TD VALIGN="TOP">Dynaset</P></TD></TR><TR><TD VALIGN="TOP"><B>dbOpenSnapshot</B></P></TD><TD VALIGN="TOP">Snapshot</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
These constants are listed in the Data Access (DAO) object library in the Object Browser.</P>
Depending on the object, the <B>Type</B> property indicates:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="140pt" VALIGN="TOP"><COL WIDTH="208pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Object</P></TD><TD VALIGN="TOP">Type indicates</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>Field, Parameter, Property</B></P></TD><TD VALIGN="TOP">Object data type</P></TD></TR><TR><TD VALIGN="TOP"><B>QueryDef</B></P></TD><TD VALIGN="TOP">Type of query</P></TD></TR><TR><TD VALIGN="TOP"><B>Recordset</B></P></TD><TD VALIGN="TOP">Type of <B>Recordset</B> object</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
When you append a new <B>Field</B>, <B>Parameter</B>, or <B>Property</B> object to the collection of an <B>Index</B>, <B>QueryDef</B>, <B>Recordset</B>, or <B>TableDef</B> object, an error occurs if the underlying database doesn't support the data type specified for the new object.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, you can set the data type for a field in table Design view, and you can set the data type for a parameter in the Query Parameters dialog box. These actions are equivalent to setting the data access <B>Type</B> property for a <B>Field</B> object or a <B>Parameter</B> object from Visual Basic.</P>
The following table lists the <B>Type</B> property constants and the corresponding Microsoft Access settings for field and parameter data types if you are setting them from table Design view or the Query Parameters dialog box.</P>
When creating a table field with data type Number, set the <B>FieldSize</B> property to specify which of the six numeric data types the field will be. By default this property is set to Long Integer. The other settings are Byte, Integer, Single, Double, and ReplicationID.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="95pt" VALIGN="TOP"><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="107pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><BR>Constant</P></TD><TD VALIGN="TOP">Table field<BR>setting</P></TD><TD VALIGN="TOP">Query parameter<BR>setting</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>dbBoolean</B></P></TD><TD VALIGN="TOP">Yes/No</P></TD><TD VALIGN="TOP">Yes/No</P></TD></TR><TR><TD VALIGN="TOP"><B>dbByte</B></P></TD><TD VALIGN="TOP">Number<BR>(<B>FieldSize</B> = Byte)</P></TD><TD VALIGN="TOP">Byte</P></TD></TR><TR><TD VALIGN="TOP"><B>dbCurrency</B></P></TD><TD VALIGN="TOP">Currency</P></TD><TD VALIGN="TOP">Currency</P></TD></TR><TR><TD VALIGN="TOP"><B>dbDate</B></P></TD><TD VALIGN="TOP">Date/Time</P></TD><TD VALIGN="TOP">Date/Time</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="95pt" VALIGN="TOP"><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="107pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><BR>Constant</P></TD><TD VALIGN="TOP">Table field<BR>setting</P></TD><TD VALIGN="TOP">Query parameter<BR>setting</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>dbDouble</B></P></TD><TD VALIGN="TOP">Number<BR>(<B>FieldSize</B> = Double)</P></TD><TD VALIGN="TOP">Double</P></TD></TR><TR><TD VALIGN="TOP"><B>dbGUID</B></P></TD><TD VALIGN="TOP">Number or AutoNumber<BR>(<B>FieldSize</B> = ReplicationID)</P></TD><TD VALIGN="TOP"><I>Not supported</I></P></TD></TR><TR><TD VALIGN="TOP"><B>dbInteger</B></P></TD><TD VALIGN="TOP">Number<BR>(<B>FieldSize</B> = Integer)</P></TD><TD VALIGN="TOP">Integer</P></TD></TR><TR><TD VALIGN="TOP"><B>dbLong</B></P></TD><TD VALIGN="TOP">Number<BR>(<B>FieldSize</B> = Long Integer)</P></TD><TD VALIGN="TOP">Long Integer</P></TD></TR><TR><TD VALIGN="TOP"><B></B></P></TD><TD VALIGN="TOP">AutoNumber<BR>(<B>FieldSize</B> = Long Integer)</P></TD><TD VALIGN="TOP"><I>Not supported</I></P></TD></TR><TR><TD VALIGN="TOP"><B>dbLongBinary</B></P></TD><TD VALIGN="TOP">OLE Object</P></TD><TD VALIGN="TOP">OLE Object</P></TD></TR><TR><TD VALIGN="TOP"><B></B></P></TD><TD VALIGN="TOP"><I>Not supported</I></P></TD><TD VALIGN="TOP">Binary</P></TD></TR><TR><TD VALIGN="TOP"><B>dbMemo</B></P></TD><TD VALIGN="TOP">Memo</P></TD><TD VALIGN="TOP">Memo</P></TD></TR><TR><TD VALIGN="TOP"><B>dbSingle</B></P></TD><TD VALIGN="TOP">Number<BR>(<B>FieldSize</B> = Single)</P></TD><TD VALIGN="TOP">Single</P></TD></TR><TR><TD VALIGN="TOP">dbText</P></TD><TD VALIGN="TOP">Text</P></TD><TD VALIGN="TOP">Text</P></TD></TR><TR><TD VALIGN="TOP"><I>Not supported</I></P></TD><TD VALIGN="TOP"><I>Not supported</I></P></TD><TD VALIGN="TOP">Value</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>
Note</P>
The parameter data type <B>Value</B> doesn't correspond to a data type defined by the Microsoft Jet database engine. It corresponds to the SQL reserved word VALUE, which can be used to create a parameter query. In Microsoft Access or SQL queries, VALUE can be considered a valid synonym for the Visual Basic <B>Variant</B> data type.</P>
<P></P>
<P></P>
Example</P>
See the <B>Size</B> property example.</P>
Example (Microsoft Access)</P>
See the <B>Size</B> property example (Microsoft Access).</P>
<P></P>
<P></P>
Example (Microsoft Excel)</P>
See the <B>Size</B> property example (Microsoft Excel).</P>
</P>
<P></P></BODY>
</HTML>
