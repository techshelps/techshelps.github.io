<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DELETE Statement</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>DELETE Statement</h2>

Description</p>

Creates a delete query that removes records from one
or more of the tables listed in the FROM clause that satisfy the
WHERE clause.</p>

Syntax</p>

DELETE [<i>table</i>.*]<br>
FROM <i>table</i><br>
WHERE <i>criteria</i></p>

The DELETE statement has these parts.</p>

<table border="0" cellpadding="7" cols="2">
<COLGROUP><COL WIDTH="100pt" VALIGN="TOP"><COL WIDTH="248pt" VALIGN="TOP"></COLGROUP><TBODY>    <tr>
        <TD valign="top">Part</td>
        <TD valign="top">Description</td>
    </tr>
    <tr>
        <TD valign="top" colspan="2">&nbsp;</td>
    </tr>
    <tr>
        <TD valign="top"><i>table</i></td>
        <TD valign="top">The optional name of the table from
        which records are deleted.</td>
    </tr>
    <tr>
        <TD valign="top"><i>table</i></td>
        <TD valign="top">The name of the table from which records
        are deleted.</td>
    </tr>
    <tr>
        <TD valign="top"><i>criteria</i></td>
        <TD valign="top">An expression that determines which
        records to delete.</td>
    </tr>
</TBODY></table>

<br>
</p>

Remarks</p>

DELETE is especially useful when you want to delete
many records.</p>

To drop an entire table from the database, you can
use the <b>Execute</b> method with a DROP statement. If you
delete the table, however, the structure is lost. In contrast,
when you use DELETE, only the data is deleted; the table
structure and all of the table properties, such as field
attributes and indexes, remain intact.</p>

You can use DELETE to remove records from tables
that are in a one-to-many relationship with other tables. Cascade
delete operations cause the records in tables that are on the
many side of the relationship to be deleted when the
corresponding record in the one side of the relationship is
deleted in the query. For example, in the relationship between
the Customers and Orders tables, the Customers table is on the
one side and the Orders table is on the many side of the
relationship. Deleting a record from Customers results in the
corresponding Orders records being deleted if the cascade delete
option is specified.</p>

A delete query deletes entire records, not just data
in specific fields. If you want to delete values in a specific
field, create an update query that changes the values to <b>Null</b>.</p>

Important</p>
<SPAN CLASS="list">
<ul>
    <li>After you remove records using a delete query, you can't
        undo the operation. If you want to know which records
        were deleted, first examine the results of a select query
        that uses the same criteria, and then run the delete
        query.</li>
    <li>Maintain backup copies of your data at all times. If you
        delete the wrong records, you can retrieve them from your
        backup copies.</li>
</ul>
</SPAN>
See Also</p>

DROP Statement, FROM Clause, IN Clause, INNER JOIN
Operation, SELECT Statement, UPDATE Statement, WHERE Clause.</p>

Specifics (Microsoft Access)</p>

In Microsoft Access, no query output or datasheet is
produced when you use the DELETE statement. If you want to know
which records will be deleted, first view the datasheet of a
select query that uses the same criteria, and then run a delete
query.</p>

Example</p>

Some of the following examples assume the existence
of a hypothetical Payroll table. </p>

This example deletes all records for employees whose
title is Trainee. When the FROM clause includes only one table,
you don't have to list the table name in the DELETE statement.</p>

<br>
</p>

<pre>DELETE * FROM Employees WHERE Title = 'Trainee';
</pre>

This example deletes all records for employees whose
title is Trainee and who also have a record in the Payroll table.
The Employees and Payroll tables have a one-to-one relationship.</p>

<br>
</p>

<pre>DELETE Employees.* FROM Employees INNER JOIN Payroll 
ON Employees.EmployeeID = Payroll. EmployeeID 
WHERE Employees.Title = 'Trainee';
</pre>
</BODY>

</html>
