<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INSERT INTO Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>INSERT INTO Statement</H2>Description</P>
Adds a record or multiple records to a table. This is referred as an append query.</P>
Syntax</P>
Multiple-record append query:</P>
INSERT INTO <I>target</I> [IN <I>externaldatabase</I>] [(<I>field1</I>[, <I>field2</I>[, ...]])]<BR>    SELECT [<I>source</I>.]<I>field1</I>[, <I>field2</I>[, ...]<BR>    FROM <I>tableexpression</I></P>
Single-record append query:</P>
INSERT INTO <I>target</I> [(<I>field1</I>[, <I>field2</I>[, ...]])]<BR>    VALUES (<I>value1</I>[, <I>value2</I>[, ...])</P>
The INSERT INTO statement has these parts.have this part.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="105pt" VALIGN="TOP"><COL WIDTH="243pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>target</I></P></TD><TD VALIGN="TOP">The name of the table or query to append records to.</P></TD></TR><TR><TD VALIGN="TOP"><I>externaldatabase</I></P></TD><TD VALIGN="TOP">The path to an external database. For a description of the path, see the IN clause.</P></TD></TR><TR><TD VALIGN="TOP"><I>source</I></P></TD><TD VALIGN="TOP">The name of the table or query to copy records from.</P></TD></TR><TR><TD VALIGN="TOP"><I>field1</I>,<I> field2</I></P></TD><TD VALIGN="TOP">Names of the fields to append data to, if following a <I>target</I> argument, or the names of fields to obtain data from, if following a <I>source</I> argument.</P></TD></TR><TR><TD VALIGN="TOP"><I>tableexpression</I></P></TD><TD VALIGN="TOP">The name of the table or tables from which records are inserted. This argument can be a single table name or a compound resulting from an INNER JOIN, LEFT JOIN, or RIGHT JOIN operation or a saved query.</P></TD></TR><TR><TD VALIGN="TOP"><I>value1</I>,<I> value2</I></P></TD><TD VALIGN="TOP">The values to insert into the specific fields of the new record. Each value is inserted into the field that corresponds to the value's position in the list: <I>value1</I> is inserted into <I>field1</I> of the new record, <I>value2</I> into <I>field2</I>, and so on. You must separate values with a comma, and enclose text fields in double quotation marks (" ").</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
You can use the INSERT INTO statement to add a single record to a table using the single-record append query syntax as shown above. In this case, your code specifies the name and value for each field of the record. You must specify each of the fields of the record that a value is to be assigned to and a value for that field. When you don't specify each field, the default value or <B>Null</B> is inserted for missing columns. Records are added to the end of the table.</P>
You can also use INSERT INTO to append a set of records from another table or query by using the SELECT... FROM clause as shown above in the multiple-record append query syntax. In this case, the SELECT clause specifies the fields to append to the <I>target</I> table specified.</P>
<P></P>
The source or target table may specify a table or a query. If a query is specified, the Microsoft Jet database engine appends to any and all tables specified by the query.</P>
INSERT INTO is optional but when included, precedes the SELECT statement.</P>
If your destination table contains a primary key, make sure you append unique, non-<B>Null</B> values to the primary key field or fields; if you don't, the Jet database engine won't append the records.</P>
If you append records to a table with a Counter field and you want to renumber the appended records, don't include the Counter field in your query. Do include the Counter field in the query if you want to retain the original values from the field.</P>
Use the IN clause to append records to a table in another database.</P>
To create a new table, use the SELECT... INTO statement instead to create a make-table query.</P>
To find out which records will be appended before you run the append query, first execute and view the results of a select query that uses the same selection criteria.</P>
An append query copies records from one or more tables to another. The tables that contain the records you append aren't affected by the append query.</P>
Instead of appending existing records from another table, you can specify the value for each field in a single new record using the VALUES clause. If you omit the field list, the VALUES clause must include a value for every field in the table; otherwise, the INSERT will fail. Use an additional INSERT INTO statement with a VALUES clause for each additional record you want to create.</P>
See Also</P>
FROM Clause, WHERE Clause.</P>
Specifics (Microsoft Access)</P>
If you create an INSERT INTO...VALUES query in SQL view, save and close the query, and then reopen it, you'll see that Microsoft Access has converted the VALUES clause to a SELECT clause. This doesn't alter the results of the query.</P>
Using the INSERT INTO statement is equivalent to setting the <B>DestinationTable</B> property in the query property sheet in query Design view.</P>
Example</P>
This example selects all records in a hypothetical New Customers table and adds them to the Customers table. (When individual columns are not designated, the SELECT table column names must match exactly those in the INSERT INTO table.)</P>
<BR></P>
<PRE>INSERT INTO Customers SELECT [New Customers].* FROM [New Customers];
</PRE>
This example creates a new record in the Employees table.</P>
<BR></P>
<PRE>INSERT INTO Employees (FirstName,LastName, Title) <BR>VALUES ("Harry", "Washington", "Trainee");
</PRE>
<P></P>
This example selects all trainees from a hypothetical Trainees table  who were hired more than 30 days ago and adds their records to the Employees table.</P>
<BR></P>
<PRE>INSERT INTO Employees SELECT Trainees.* FROM Trainees <BR>WHERE HireDate &lt; Now() - 30;
</PRE>
</P></BODY>
</HTML>
