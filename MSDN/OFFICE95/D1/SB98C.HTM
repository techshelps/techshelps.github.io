<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateIndex Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>CreateIndex Method</H2>Applies To</P>
<B>TableDef </B>Object.</P>
Description</P>
Creates a new <B>Index</B> object.</P>
Syntax</P>
<B>Set</B> <I>variable</I> = <I>tabledef</I><B>.CreateIndex(</B>[<I>name</I>]<B>)</B></P>
The <B>CreateIndex</B> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>variable</I></P></TD><TD VALIGN="TOP">A variable declared as object data type <B>Index</B>.</P></TD></TR><TR><TD VALIGN="TOP"><I>tabledef</I></P></TD><TD VALIGN="TOP">The variable name of the <B>TableDef</B> object you want to use to create the new <B>Index</B> object.</P></TD></TR><TR><TD VALIGN="TOP"><I>name</I></P></TD><TD VALIGN="TOP">A <B>String</B> variable that uniquely names the new <B>Index </B>object. See the <B>Name</B> property for details on valid <B>Index</B> names.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
If you omit the optional <I>name</I> part when you use <B>CreateIndex</B>, you can use an appropriate assignment statement to set or reset the <B>Name</B> property before you append the new object to a collection. After you append the object, you may or may not be able to set its <B>Name</B> property, depending on the type of object the <B>Indexes</B> collection resides in. See the <B>Name</B> property topic for more details.</P>
If <I>name</I> refers to an object that is already a member of the collection, a trappable error occurs when you use the <B>Append</B> method.</P>
To remove an <B>Index</B> object from a collection, use the <B>Delete</B> method on the collection.</P>
<P></P>
See Also</P>
<B>Append </B>Method,<B> Delete </B>Method,<B> Index </B>Object,<B> Name </B>Property.</P>
Example</P>
This example creates a new <B>Index</B> object.</P>
<BR></P>
<PRE>Dim idxAnother As Index, fldLastName As Field
Dim tdfEmployees As TableDef, dbsNorthwind As Database
Set dbsNorthwind = DBEngine.Workspaces(0).OpenDatabase("Northwind.mdb")
Set tdfEmployees = dbsNorthwind.TableDefs("Employees")
' Create new Index object.
Set idxAnother = tdfEmployees.CreateIndex("Another")
Set fldLastName = idxAnother.CreateField("LastName")
idxAnother.Primary = False
idxAnother.Required = True
idxAnother.Fields.Append fldLastName
' Save Index definition by appending it to Indexes collection.
tdfEmployees.Indexes.Append idxAnother
tdfEmployees.Indexes.Delete "Another"
dbsNorthwind.Close
</PRE>
Example (Microsoft Access)</P>
The following example creates a new <B>Index</B> object on an Employees table. The new index consists of two fields, LastName and FirstName.</P>
<BR></P>
<PRE>Sub NewIndex()
    Dim dbs As Database, tdf As TableDef
    Dim idx As Index, rst As Recordset
    Dim fldLastName As Field, fldFirstName As Field

    ' Return Database variable pointing to current database.
    Set dbs = CurrentDb
    Set tdf = dbs.TableDefs!Employees
    ' Return Index object that points to new index.
    Set idx = tdf.CreateIndex("FullName")
    ' Create and append index fields.
    Set fldLastName = idx.CreateField("LastName", dbText)
    Set fldFirstName = idx.CreateField("FirstName", dbText)
    idx.Fields.Append fldLastName
    idx.Fields.Append fldFirstName
    ' Append Index object.
    tdf.Indexes.Append idx
End Sub

</PRE>
</P></BODY>
</HTML>
