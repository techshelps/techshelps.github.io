<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NoMatch Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>NoMatch Property</H2>Applies To</P>
Dynaset-Type <B>Recordset </B>Object,<B> Recordset </B>Object,<B> </B>Snapshot-Type <B>Recordset </B>Object,<B> </B>Table-Type <B>Recordset </B>Object.</P>
Description</P>
Returns a value indicating whether a particular record was found using the <B>Seek</B> method or one of the Find methods. <B>True</B> (-1) indicates that the desired record was not found.</P>
Remarks</P>
You can use the <B>NoMatch</B> property with <B>Recordset</B> objects.</P>
When you open or create a <B>Recordset</B> object, its <B>NoMatch</B> property is set to <B>False</B> (0).</P>
To locate a record, use the <B>Seek</B> method on a Table-Type <B>Recordset</B> object or one of the <B>Find</B> methods on a dynaset- or Snapshot-Type <B>Recordset</B> object. Check the <B>NoMatch</B> property setting to see whether the record was found.</P>
If the <B>Seek</B> or <B>Find</B> method is unsuccessful and the <B>NoMatch</B> property is <B>True</B>, the current record will no longer be valid. Be sure to obtain the current record's bookmark before using the <B>Seek</B> method or a <B>Find</B> method if you'll need to return to that record.</P>
<P></P>
Note</P>
Using any of the Move methods on a <B>Recordset</B> object won't affect its <B>NoMatch</B> property setting.</P>
<P></P>
See Also</P>
<B>BOF</B>,<B> EOF </B>Properties;<B> FindFirst</B>,<B> FindLast</B>,<B> FindNext</B>,<B> FindPrevious </B>Methods;<B> Seek </B>Method.</P>
Example</P>
This example changes the job title of all sales representatives in an Employees table. It creates a Dynaset-Type <B>Recordset</B> and then uses <B>FindFirst</B> and <B>FindNext</B> to locate every record satisfying the criteria for the title. It prepares each record for editing, changes the title, and saves the change with the <B>Update</B> method.</P>
<BR></P>
<PRE>Dim strCriteria As String, varSaveHere As Variant
Dim dbsNorthwind As Database, rstEmployees As Recordset
strCriteria = "Title = 'Sales Representative'"    ' Define search <BR>                        ' criteria.
Set dbsNorthwind =  DBEngine.Workspaces(0).OpenDatabase("Northwind.mdb")
' Create Recordset.
Set rstEmployees = dbsNorthwind.OpenRecordset("Employees",&nbsp;dbOpenDynaset)
varSaveHere = rstEmployees.Bookmark    ' Save Bookmark.
rstEmployees.FindFirst strCriteria    ' Locate first occurrence.
Do Until rstEmployees.NoMatch    ' Loop until no matching <BR>                ' records.</PRE>
<P></P>
<BR></P>
<PRE>    With rstEmployees
       .Edit        ' Enable editing.
       !Title = "Account Executive"    ' Change title.
       .Update    ' Save changes.
       .FindNext strCriteria    ' Locate next record.
    End With
Loop            ' End of loop.
rstEmployees.Bookmark = varSaveHere
</PRE>
<P></P>
Tip</P>
In some situations, using an update query is faster.</P>
<P></P>
<P></P>
Example (Microsoft Access)</P>
The following example uses the <B>NoMatch</B> property to determine whether a <B>FindFirst</B> method process has been successful.</P>
<BR></P>
<PRE>Function FindCountry() As Integer
    Dim intI As Integer, varRecord() As Variant
    Dim dbs As Database, rstOrders As Recordset
    Dim strCountry As String
    
    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    ' Create Dynaset-Type Recordset object.
    Set rstOrders = dbs.OpenRecordset("Orders", dbOpenDynaset)
    strCountry = InputBox("Please enter country name.")
    intI = 0
    rstOrders.FindFirst "[ShipCountry] = '" &amp; strCountry &amp; "'"
    If rstOrders.NoMatch Then
        FindCountry = False
        Exit Function
    Else
        Debug.Print rst!OrderID
    End If
    FindCountry = True
End Function
</PRE>
Example (Microsoft Excel)</P>
This example adds all the names of contacts for the state of Washington to a list box on a new dialog sheet and then runs the dialog box. The data is drawn from the Customer recordset in the NWINDEX.MDB database.</P>
To create the NWINDEX.MDB database, run the Microsoft Excel example for the <B>CreateDatabase </B>method.</P>
<BR></P>
<PRE>Dim db As Database
Dim rs As Recordset
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Set rs = db.OpenRecordset("SELECT * FROM Customer")
criteria = "[REGION] = 'WA'"
Set customDialog = DialogSheets.Add</PRE>
<P></P>
<BR></P>
<PRE>Set list1 = customDialog.ListBoxes.Add(78, 42, 84, 80)
rs.FindFirst criteria
Do Until rs.NoMatch
    list1.AddItem (rs.fields("CONTACT").Value)
    rs.FindNext criteria
Loop
customDialog.Show
rs.Close
db.Close
</PRE>
</P></BODY>
</HTML>
