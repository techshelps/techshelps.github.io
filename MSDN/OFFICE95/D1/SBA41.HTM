<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Var, VarP Functions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Var, VarP Functions</H2>Description</P>
Return estimates of the variance for a population or a population sample represented as a set of values contained in a specified field on a query.</P>
Syntax</P>
<B>Var(</B><I>expr</I><B>)</B><BR><B>VarP(</B><I>expr</I><B>)</B></P>
The <B>VarP</B> function evaluates a population, and the <B>Var</B> function evaluates a population sample.</P>
The <I>expr</I> placeholder represents a string expression identifying the field that contains the numeric data you want to evaluate or an expression that performs a calculation using the data in that field. Operands in <I>expr</I> can include the name of a table field, a constant, or a function (which can be either intrinsic or user-defined but not one of the other SQL aggregate or domain aggregate functions).</P>
Remarks</P>
If the underlying query contains fewer than two records, the <B>Var</B> and <B>VarP</B> functions return a <B>Null</B> (which indicates that a variance can't be calculated).</P>
You can use the <B>Var</B> and <B>VarP</B> functions in a query expression or in an SQL statement.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, you can use the <B>Var</B> and <B>VarP</B> functions in the query design grid, in an SQL statement in SQL view of the Query window, or in an SQL statement within Visual Basic code. You can also use the <B>Var</B> and <B>VarP</B> functions in a calculated control on a form or report.</P>
The <B>Var</B> and <B>VarP</B> functions are most useful in totals queries and crosstab queries. They function the same way whether you create the query in the query design grid or as an SQL statement in SQL view.</P>
In the query design grid, you can create a new totals query by clicking the Totals button on the toolbar. The Total row is then inserted in the grid. You can set the Total cell beneath a field to the aggregate function to perform on the data in that field.</P>
For example, suppose you have an Orders table that has both a Freight field and a ShipCity field. You can create a query that displays the variance of freight cost for orders sent to each city. Create a new totals query, and drag the ShipCity field to the query design grid. The Total cell beneath the ShipCity field should be set to Group By. Drag the Freight field to the query design grid, and set the Total cell beneath it to Var. When you run the query, it will display the variance of freight cost for orders sent to each city.</P>
<P></P>
You can view the SQL statement for this query by switching to SQL view. In this example, Microsoft Access creates the following SQL statement.</P>
<BR></P>
<PRE>SELECT DISTINCTROW Var(Orders.Freight) AS VarOfFreight, Orders.ShipCity
FROM Orders
GROUP BY Orders.ShipCity;
</PRE>
You can also use an SQL statement such as this one within Visual Basic code. For example, using the following code you can create a <B>Recordset</B> object based on the query defined by this SQL statement.</P>
<BR></P>
<PRE>Dim dbs As DatabAse, rst As Recordset, strSQL As String
Set dbs = CurrentDb
strSQL = "SELECT DISTINCTROW Var(Orders.Freight) AS VarOfFreight, "_
    &amp; "Orders.ShipCity FROM Orders GROUP BY Orders.ShipCity;"
Set rst = dbs.OpenRecordset(strSQL)
</PRE>
To use the <B>Var</B> and <B>VarP</B> functions in a calculated control, set the control's <B>ControlSource</B> property to an expression containing either of these functions. For example, to display the variance across freight costs in a text box, enter the following expression in the <B>ControlSource</B> property of the text box.</P>
<BR></P>
<PRE>= Var([Freight])
</PRE>
If you use the <B>Var</B> or <B>VarP</B> function in a calculated control, you can restrict the set of records against which the function is performed by setting the form's <B>Filter</B> property.</P>
Example</P>
This example uses the Orders table to estimate the variance of freight costs for orders shipped to the United Kingdom. </P>
<BR></P>
<PRE>SELECT Var(Freight) AS [UK Freight Variance] FROM Orders <BR>WHERE ShipCountry = 'UK';

SELECT VarP(Freight) AS [UK Freight VarianceP] FROM Orders <BR>WHERE ShipCountry = 'UK';
</PRE>
Example (Microsoft Access)</P>
The following example assumes that you have an Orders table that contains a field called Freight. You can use the <B>Var</B> and <B>VarP</B> functions to estimate the variance of freight costs for orders shipped to the United Kingdom. Enter the following expressions in SQL view in the Query window:</P>
<BR></P>
<PRE>SELECT Var([Freight]) AS [UKFreightVariance] FROM Orders <BR>WHERE [ShipCountry] = 'UK';
SELECT VarP([Freight]) AS [UKFreightVarianceP] FROM Orders <BR>WHERE [ShipCountry] = 'UK';
</PRE>
<P></P>
The next example creates a calculated control that displays the estimated variance for freight costs for records in the same Orders table. Open a new form and set its <B>RecordSource</B> property to Orders. Enter the following expression in the <B>ControlSource</B> property of a text box on the form. To apply a condition that limits the search to only some records, such as those for orders shipped to the United Kingdom, set the form's <B>Filter</B> property.</P>
<BR></P>
<PRE>= Var([Freight])
</PRE>
</P></BODY>
</HTML>
