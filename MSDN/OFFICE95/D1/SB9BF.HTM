<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Group Object</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Group Object</h2>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Description</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

A <b>Group</b> object
represents a group of user accounts that have common access
permissions when a <b>Workspace</b> object operates as a secure
workgroup.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Remarks</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

You create <b>Group</b> objects
and then use their names to establish and enforce access
permissions for your databases, tables, and queries using the <b>Document</b>
objects that represent the database and database objects (tables
and queries) you're working with.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

You can append an existing <b>Group</b>
object to the <b>Groups</b> collection in a <b>User</b> object to
establish membership of a user account in that <b>Group</b>
object. Alternatively, you can append a <b>User</b> object to the
<b>Users</b> collection in a <b>Group</b> object to give a user
account the global permissions of that group. If you use a <b>Groups</b>
or <b>Users</b> collection other than the one to which you just
appended an object, you may need to use the <b>Refresh</b> method
to refresh the collection with current information from the
database.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Using the properties of a <b>Group</b>
object, you can:</p>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<SPAN CLASS="list">

<ul>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Check the <b>Name</b> property
        setting of an existing <b>Group</b> object to determine
        its name. You can't check the <b>PID</b> property setting
        of an existing <b>Group</b> object.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Set the <b>Name</b> and <b>PID</b>
        properties of a newly created, unappended <b>Group</b>
        object to establish the identity of that <b>Group</b>
        object.</li>
</ul>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

</SPAN>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The Microsoft Jet database
engine predefines three <b>Group</b> objects named Admins, Users,
and Guests.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

You can refer to a <b>Group</b>
object that you create and append to a <b>Groups</b> collection
by its <b>Name</b> property setting using this syntax:</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>Groups</b>(&quot;<i>name</i>&quot;)</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

To create a new <b>Group</b>
object, use the <b>CreateGroup</b> method on a <b>User</b> or <b>Workspace</b>
object.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Properties</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>Name </b>Property,<b> PID </b>Property.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Methods</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>CreateUser </b>Method.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>See Also</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>CreateGroup </b>Method;
Appendix, &quot;Data Access Object Hierarchy.&quot;</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Specifics (Microsoft
Access)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

You can create <b>Group</b>
objects to establish and enforce permissions for Microsoft Access
database objects as well as for data access objects. For example,
you can set security for forms, reports, macros, and modules.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

A <b>Group</b> object has a <b>Name</b>
property that you can use in setting permissions for a <b>Container</b>
or <b>Document</b> object. For example, you can assign the value
of a <b>Group</b> object's <b>Name</b> property to the <b>UserName</b>
property of a <b>Container</b> or <b>Document</b> object. You can
then set the <b>Permissions</b> property of the <b>Container</b>
or <b>Document</b> object to establish permissions for the group
of users defined by the <b>UserName</b> property. Or you can read
the <b>Permissions</b> property to determine existing permissions
for that group.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

This example illustrates the
use of the <b>Group</b> and <b>User</b> objects and the <b>Groups</b>
and <b>Users</b> collections. First, it creates a new <b>User</b>
object with the <b>Name</b>, <b>PID</b>, and <b>Password</b>
property settings of &quot;Pat Smith,&quot;
&quot;abc123DEF456,&quot; and &quot;My Secret,&quot; and appends
the object to the <b>Users</b> collection of the default <b>Workspace</b>
object. Next, it creates a new <b>Group</b> object with the <b>Name</b>
and <b>PID</b> property settings of &quot;Accounting&quot; and
&quot;UVW987xyz654&quot; and appends the object to the <b>Groups</b>
collection of the default <b>Workspace</b> object. Then the
example adds user Pat Smith to the Accounting group. Finally, it
enumerates the <b>User</b> and <b>Group</b> objects in the
collections of the default <b>Workspace</b> object. </p>

<br>
</p>

<pre>Function EnumerateUserGroup () As Integer
    Dim wrkDefault As Workspace
    Dim usrPatSmith As User, usrTemp As User, usrGroupUser As User
    Dim grpAccount As Group, grpTemp As Group, grpMember As Group
    Dim intI As Integer, intJ As Integer

    Set wrkDefault = DBEngine.Workspaces(0)

' Create and append new user.
    Set usrPatSmith = wrkDefault.CreateUser(&quot;Pat Smith&quot;, _
        &quot;abc123DEF456&quot;, &quot;My Secret&quot;)
    wrkDefault.Users.Append usrPatSmith

' Create and append new group.
    Set grpAccount = wrkDefault.CreateGroup(&quot;Accounting&quot;, _
        &quot;UVW987xyz654&quot;) 
    wrkDefault.Groups.Append grpAccount

' Add new user to new group or converse; do one or the other, not both.
' Use Refresh because both collections are referred to in following 
' code.
'    wrkDefault.Groups![Accounting].Users.Append usrGroupUser
'    wrkDefault.Users![Pat Smith].Groups.Refresh

' Or add group to user and refresh group.</pre>

<br>
</p>

<pre>' Create new group object for user Pat Smith
    Set grpMember = usrPatSmith.CreateGroup(&quot;Accounting&quot;)

'  wrkDefault.Users![Pat Smith].Groups.Append grpMember
'  wrkDefault.Groups![Accounting].Users.Refresh

' Enumerate all users.
    For intJ = 0 To wrkDefault.Users.Count - 1
        Set usrTemp = wrkDefault.Users(intJ)
        Debug.Print
        Debug.Print &quot;Enumeration of Users: &quot;; usrTemp.Name
        Debug.Print
' Enumerate groups.
        Debug.Print &quot;    Groups: &quot;
        For intI = 0 To usrTemp.Groups.Count - 1
            Debug.Print &quot;    &quot;; usrTemp.Groups(intI).Name
        Next intI
    Next intJ

' Enumerate all groups.
    Debug.Print &quot;------------------------------------&quot;
    For intJ = 0 To wrkDefault.Groups.Count - 1
        Set grpTemp = wrkDefault.Groups(intJ)
        Debug.Print
        Debug.Print &quot;Enumeration of Groups: &quot;; grpTemp.Name
        Debug.Print
' Enumerate users.
        Debug.Print &quot;    Users: &quot;
        For intI = 0 To grpTemp.Users.Count - 1
            Debug.Print &quot;    &quot;; grpTemp.Users(intI).Name
        Next intI
    Next intJ
    EnumerateUserGroup = True
End Function
</pre>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example (Microsoft
Access)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The following example creates a
new <b>User</b> object and appends it to the <b>Users</b>
collection of a <b>Workspace</b> object. It then creates a new <b>Group</b>
object and appends it to the <b>Groups</b> collection of the <b>Workspace</b>
object. The new <b>Group</b> object is also appended to the <b>Groups</b>
collection of the <b>User</b> object. The new group is then given
modify and delete permissions for modules.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Note that in order to assign
users to groups, you must either append a <b>User</b> object to
the <b>Users</b> collection of a <b>Group</b> object, or append a
<b>Group</b> object to the <b>Groups</b> collection of a <b>User</b>
object. It doesn't matter which option you choose; either will
result in the specified user being included in the specified
group.</p>

<br>
</p>

<pre>Sub NewModulesGroup()
    Dim wsp As Workspace, dbs As Database
    Dim usr As User, grp As Group, grpMember As Group</pre>

<br>
</p>

<pre>    Dim ctr As Container, doc As Document

    ' Get default Workspace object.
    Set wsp = DBEngine.Workspaces(0)
    ' Return Database variable pointing to current database.
    Set dbs = CurrentDb
    ' Create User object and append to Users collection 
    ' of Workspace object.
    Set usr = wsp.CreateUser(&quot;Pat Smith&quot;, &quot;123abc789xyz&quot;, &quot;Password&quot;)
    wsp.Users.Append usr
    ' Create Group object and append to Groups collection 
    ' of Workspace object.
    Set grp = wsp.CreateGroup(&quot;Programmers&quot;, &quot;321xyz987abc&quot;)
    wsp.Groups.Append grp
    ' Append Group object to Groups collection of User object.
    Set grpMember = usr.CreateGroup(&quot;Programmers&quot;)
    usr.Groups.Append grpMember
    ' Refresh Groups collection of User object.
    usr.Groups.Refresh
    ' Return Container object.
    Set ctr = dbs.Containers!Modules
    ' Set UserName property of Container object.
    ctr.UserName = grpMember.Name
    'Add modify and delete permissions for new group on all modules.
    ctr.Permissions = ctr.Permissions Or acSecModWriteDef
End Sub
</pre>
</BODY>

</html>
