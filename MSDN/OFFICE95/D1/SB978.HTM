<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Bookmark Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Bookmark Property</H2>Applies To</P>
Dynaset-Type<B> Recordset </B>Object,<B> Recordset </B>Object,<B> </B>Snapshot-Type<B> Recordset </B>Object, Table-Type<B> Recordset </B>Object.</P>
Description</P>
Sets or returns a bookmark that uniquely identifies the current record in a <B>Recordset</B> object or sets the current record in a <B>Recordset</B> object to a valid bookmark.</P>
Settings and Return Values</P>
The setting or returned value is a string expression or variant expression that evaluates to a valid bookmark. (Data type is <B>Variant</B> array of <B>Byte</B> data.)</P>
Remarks</P>
You can use the <B>Bookmark</B> property with <B>Recordset</B> objects. For a <B>Recordset</B> object based entirely on Microsoft Jet database engine tables, the value of the <B>Bookmarkable</B> property is <B>True</B> and bookmarks can be used. Other database products may not support bookmarks, however. For example, you can't use bookmarks in any <B>Recordset</B> object based on an attached Paradox table that has no primary key.</P>
When a <B>Recordset</B> object is created or opened, each of its records already has a unique bookmark. You can save the bookmark for the current record by assigning the value of the <B>Bookmark</B> property to a variable. To quickly return to that record at any time after moving to a different record, set the <B>Recordset</B> object's <B>Bookmark</B> property to the value of that variable.</P>
There is no limit to the number of bookmarks you can establish. To create a bookmark for a record other than the current record, move to the desired record and assign the value of the <B>Bookmark</B> property to a <B>String</B> variable that identifies the record.</P>
To make sure the <B>Recordset</B> object supports bookmarks, inspect the value of its <B>Bookmarkable</B> property before you use the <B>Bookmark</B> property. If the <B>Bookmarkable</B> property is <B>False</B>, the <B>Recordset</B> object doesn't support bookmarks, and using the <B>Bookmark</B> property results in a trappable error.</P>
<P></P>
If you create a copy of a <B>Recordset</B> object using the <B>Clone</B> method, the <B>Bookmark</B> property settings for the original and the duplicate <B>Recordset</B> objects are identical and can be used interchangeably. However, you can't use bookmarks from different <B>Recordset</B> objects interchangeably, even if they were created using the same object or the same SQL statement.</P>
If you set the <B>Bookmark</B> property to a value that represents a deleted record, a trappable error occurs.</P>
To refresh the contents of a record, set the <B>Bookmark</B> property to itself. (This technique, however, also cancels any pending operations invoked by the <B>Edit</B> or <B>AddNew</B> methods.) For example:</P>
<BR></P>
<PRE>rstCustomers.Bookmark = rstCustomers.Bookmark
</PRE>
The value of the <B>Bookmark</B> property isn't the same as a record number.</P>
<P></P>
Note</P>
The <B>Bookmark</B> property doesn't apply to forward-only scrolling snapshots.</P>
<P></P>
See Also</P>
<B>Bookmarkable </B>Property,<B> RecordCount </B>Property.</P>
Specifics (Microsoft Access)</P>
When you write Visual Basic&reg; code that uses the <B>Bookmark</B> property, you must include an <B>Option Compare Binary</B> statement in the Declarations section of the module. The <B>Bookmark</B> property sets and returns a bookmark, which is a <B>Variant</B> array of <B>Byte</B> data. The string comparison method for the module must therefore be binary. If a bookmark is evaluated with a text-based string comparison method, such as the <B>Option Compare Text</B> statement or the default setting for the <B>Option Compare Database</B> statement, the current record may be set to an incorrect record.</P>
<P></P>
Note</P>
Don't confuse this property with the Microsoft Access <B>Bookmark</B> property, which applies to a <B>Form</B> object and stores a bookmark for a particular record in the table or query underlying the form. These two properties do not interfere with each other; you can have separate bookmarks on a form and on a <B>Recordset</B> object at the same time.</P>
<P></P>
Example</P>
This example shows how you can save your place in a <B>Recordset</B> by saving a bookmark. Once saved, this bookmark can be applied to the <B>Bookmark</B> property to reposition the current record pointer to any location in the <B>Recordset</B>. The <B>FindYear</B> function works with the Biblio.mdb database. It looks up all titles in a given <B>Recordset</B> published in a given year, and fills a string array with the bookmarks of any records that match.</P>
<BR></P>
<PRE>Function FindYear (intYear As Integer, rstBooks As Recordset, _<BR>    avarRecord() As Variant) As Integer
    Dim intCount As Integer
    rstBooks.FindFirst "[Year Published] = " &amp; intYear</PRE>
<P></P>
<BR></P>
<PRE>    If (rstBooks.NoMatch = True) Or (rstBooks.Bookmarkable = False) _<BR>        Then
        FindYear = 0
        Exit Function
    Else
        Do Until rstBooks.NoMatch = True
            avarRecord(intCount) = rstBooks.Bookmark
            rstBooks.FindNext "[Year Published] = " &amp; intYear
            intCount = intCount + 1
        Loop
    End If
    FindYear = intCount
End Function
</PRE>
Example (Microsoft Access)</P>
The following example moves through the records of the Employees table from the beginning of the file to the end and stores the value of the <B>Bookmark</B> property for each record in an array.</P>
<BR></P>
<PRE>' Include this statement in the Declarations section of the module.
Option Compare Binary

Sub RecordPositions()
    Dim dbs As Database, rst As Recordset, fld As Field
    Dim intI As Integer
    ' Declare array to hold bookmarks.
    Dim varRecord() As Variant

    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    ' Open a table-type Recordset object.
    Set rst = dbs.OpenRecordset("Employees")
    Set fld = rst.Fields!LastName
    ' Populate the Recordset object.
    rst.MoveLast
    rst.MoveFirst
    ' Redimension array with value of RecordCount as upper bound.
    ReDim varRecord(0 To rst.RecordCount - 1)
    intI = 0
    ' Check Bookmarkable property of Recordset object.
    If rst.Bookmarkable Then
        Do Until rst.EOF
            ' Populate array with bookmarks.
            varRecord(intI) = rst.Bookmark
            ' Increment counter.
            intI = intI + 1
            rst.MoveNext
        Loop
    End If
End Sub
</PRE>
<P></P>
Example (Microsoft Excel)</P>
This example prompts the user for a two-letter abbreviation for a state. The example uses this value to find up to 101 matching records in the Customer recordset in the NWINDEX.MDB database. It then marks each record with a bookmark and copies the values of the first and third fields onto Sheet1.</P>
To create the NWINDEX.MDB database, run the Microsoft Excel example for the <B>CreateDatabase </B>method.</P>
<BR></P>
<PRE>Dim Found(100)
i = 0
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Set rs = db.OpenRecordset("Customer")
Sheets("Sheet1").Activate
region = Application.InputBox("What state do you want data from?", _
    "Specify two letters (e.g. 'WA')", Type:=2)
If region = False Then    ' user cancelled InputBox
    Exit Sub
End If
criteria = "[REGION] = '" &amp; region &amp; "'"
rs.FindFirst criteria
If rs.NoMatch Or rs.Bookmarkable = False Then
    MsgBox "No records for this state"
    Exit Sub
Else
    Do Until rs.NoMatch = True
        i = i + 1
        Found(i) = rs.Bookmark
        rs.FindNext criteria
    Loop
End If
For n = 1 To i
    rs.Bookmark = Found(n)
    Cells(n + 1, 1).Value = rs.fields(0).Value
    Cells(n + 1, 2).Value = rs.fields(2).Value
Next
MsgBox "There are " &amp; i &amp; " records from this region"
rs.Close
db.Close</PRE>
</P></BODY>
</HTML>
