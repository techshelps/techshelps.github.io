<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateField Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>CreateField Method</H2>Applies To</P>
<B>Index </B>Object,<B> Relation </B>Object,<B> TableDef </B>Object.</P>
Description</P>
Creates a new <B>Field</B> object.</P>
Syntax</P>
<B>Set</B> <I>variable</I> = <I>object</I><B>.CreateField(</B>[<I>name</I>[, <I>type</I> [, <I>size</I>]]]<B>)</B></P>
The <B>CreateField</B> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>variable</I></P></TD><TD VALIGN="TOP">A variable declared as an object data type <B>Field</B>.</P></TD></TR><TR><TD VALIGN="TOP"><I>object</I></P></TD><TD VALIGN="TOP">The variable name of the <B>Index</B>, <B>Relation</B>, or <B>TableDef</B> object you want to use to create the new <B>Field</B> object.</P></TD></TR><TR><TD VALIGN="TOP"><I>name</I></P></TD><TD VALIGN="TOP">A <B>String</B> variable that uniquely names the new <B>Field</B> object. See the <B>Name</B> property for details on valid <B>Field</B> names.</P></TD></TR><TR><TD VALIGN="TOP"><I>type</I></P></TD><TD VALIGN="TOP">An <B>Integer</B> constant that determines the data type of the new <B>Field</B> object. See the <B>Type</B> property for valid data types.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>size</I></P></TD><TD VALIGN="TOP">An integer that indicates the maximum size, in bytes, of a <B>Field</B> object that contains text. See the <B>Size</B> property for valid <I>size</I> values. This argument is ignored for numeric and fixed-width fields.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
If you omit one or more of the optional parts when you use <B>CreateField</B>, you can use an appropriate assignment statement to set or reset the corresponding property before you append the new object to a collection. After you append the new object, you can alter some but not all of its property settings. See the individual property topics for more details.</P>
<P></P>
Note</P>
The <I>type</I> and <I>size</I> arguments apply only to <B>Field</B> objects in a <B>TableDef</B> object. These arguments are ignored when a <B>Field</B> object is associated with <B>Index</B> and <B>Relation</B> objects.</P>
<P></P>
If <I>name</I> refers to an object that is already a member of the collection, a trappable error occurs when you use the <B>Append</B> method.</P>
To remove a <B>Field</B> object from a collection, use the <B>Delete</B> method on the collection. You can't delete a <B>Field</B> object from a <B>TableDef </B>object's<B> Fields </B>collection once an index has been created that references the field.</P>
See Also</P>
<B>Append </B>Method,<B> Delete </B>Method,<B> Field </B>Object,<B> Name </B>Property,<B> Size </B>Property,<B> Type </B>Property.</P>
Example</P>
This example creates a new <B>Field</B> object.</P>
<BR></P>
<PRE>Dim dbsNorthwind As Database
Dim tdfEmployees As TableDef
Dim fldPhone As Field
Set dbsNorthwind = DBEngine.Workspaces(0).OpenDatabase("Northwind.mdb")
Set tdfEmployees = dbsNorthwind.TableDefs("Employees")
' Create new Field object.
Set fldPhone = tdfEmployees.CreateField("Phone", dbText)
' Set another property of fldPhone.
fldPhone.Size = 25    ' Greater than longest phone number.
' Save fldPhone definition by appending it to Fields collection.
tdfEmployees.Fields.Append fldPhone
dbsNorthwind.Close
</PRE>
Example (Microsoft Access)</P>
The following example creates a new <B>Field</B> object and appends it to an Employees table.</P>
<BR></P>
<PRE>Sub NewField()
    Dim dbs As Database, tdf As TableDef
    Dim fld As Field

    ' Return Database variable pointing to current database.</PRE>
<P></P>
<BR></P>
<PRE>    Set dbs = CurrentDb
    Set tdf = dbs.TableDefs!Employees
    ' Create new Field object.
    Set fld = tdf.CreateField("Phone", dbText)
    ' Set another property of field.
    fld.Size = 25
    ' Append new field to Fields collection.
    tdf.Fields.Append fld
End Sub
</PRE>
</P></BODY>
</HTML>
