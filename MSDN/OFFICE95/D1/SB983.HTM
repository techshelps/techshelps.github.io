<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Connect Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Connect Property</H2>Applies To</P>
<B>Database </B>Object,<B> QueryDef </B>Object,<B> TableDef </B>Object.</P>
Description</P>
Sets or returns a value that provides information about the source of an open database, a database used in a pass-through query, or an attached table. For <B>QueryDef</B> objects, <B>Database</B> objects, attached tables, and <B>TableDef</B> objects not yet appended to a collection, this property setting is read/write. For a base table, this property is read-only.</P>
Syntax</P>
<I>object</I><B>.Connect</B> = [<I>databasetype</I>;[<I>parameters</I>;]]</P>
The <B>Connect</B> property syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="258pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>object</I></P></TD><TD VALIGN="TOP">An object expression that evaluates to an object in the Applies To list.</P></TD></TR><TR><TD VALIGN="TOP"><I>databasetype</I></P></TD><TD VALIGN="TOP">A string expression that specifies a database type. For Microsoft Jet databases, exclude this argument; if you specify <I>parameters</I>, use a semicolon (;) as a placeholder. The data type is <B>String</B>.</P></TD></TR><TR><TD VALIGN="TOP"><I>parameters</I></P></TD><TD VALIGN="TOP">A string expression that specifies additional parameters to pass to ODBC or installable ISAM drivers. Use semicolons to separate parameters. The data type is <B>String</B>.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Settings</P>
The <B>Connect</B> property setting is a <B>String</B> composed of a database type specifier and zero or more parameters separated by semicolons. The <B>Connect</B> property is used to pass additional information to ODBC and certain ISAM drivers as needed. It isn't used for Jet databases, except for those containing attached tables, to allow SQL pass-through queries.</P>
To perform an SQL pass-through query on a table attached to your .mdb file, you must first set the <B>Connect</B> property of the attached table's database to a valid ODBC connect string.</P>
For a <B>TableDef</B> object that represents an attached table, the <B>Connect</B> property setting consists of one or two parts (a database type specifier and a path to the database), each of which ends with a semicolon.</P>
The path as shown in the following table is the full path for the directory containing the database files and must be preceded by the identifier "DATABASE=". In some cases (as with Jet, Btrieve&reg;, and Microsoft Excel databases) a specific filename is included in the database path argument.</P>
<P></P>
The following table shows possible database types and their corresponding database specifiers and paths for the <B>Connect</B> property setting.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="135pt" VALIGN="TOP"><COL WIDTH="122pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Database type</P></TD><TD VALIGN="TOP">Specifier</P></TD><TD VALIGN="TOP">Path</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">Database using the Jet database engine </P></TD><TD VALIGN="TOP">"[<I>database</I>];"</P></TD><TD VALIGN="TOP">"<I>drive</I>:\<I>path</I>\<I>filename.mdb</I>"</P></TD></TR><TR><TD VALIGN="TOP">dBASE III&reg;</P></TD><TD VALIGN="TOP">"dBASE III;"</P></TD><TD VALIGN="TOP">"<I>drive</I>:\<I>path</I>"</P></TD></TR><TR><TD VALIGN="TOP">dBASE IV&reg;</P></TD><TD VALIGN="TOP">"dBASE IV;"</P></TD><TD VALIGN="TOP">"<I>drive</I>:\<I>path</I>"</P></TD></TR><TR><TD VALIGN="TOP">dBASE 5</P></TD><TD VALIGN="TOP">"dBASE 5;"</P></TD><TD VALIGN="TOP">"<I>drive:\path</I>"</P></TD></TR><TR><TD VALIGN="TOP">Paradox 3<I>.x</I> </P></TD><TD VALIGN="TOP">"Paradox 3<I>.x</I>;"</P></TD><TD VALIGN="TOP">"<I>drive</I>:\<I>path</I>"</P></TD></TR><TR><TD VALIGN="TOP">Paradox 4<I>.x</I></P></TD><TD VALIGN="TOP">"Paradox 4<I>.x</I>;"</P></TD><TD VALIGN="TOP">"<I>drive</I>:\<I>path</I>"</P></TD></TR><TR><TD VALIGN="TOP">Paradox 5<I>.x</I></P></TD><TD VALIGN="TOP">"Paradox 5<I>.x</I>;"</P></TD><TD VALIGN="TOP">"<I>drive:\path</I>"</P></TD></TR><TR><TD VALIGN="TOP">Btrieve</P></TD><TD VALIGN="TOP">"Btrieve;"</P></TD><TD VALIGN="TOP">"<I>drive</I>:\<I>path</I>\<I>filename.ddf</I>"</P></TD></TR><TR><TD VALIGN="TOP">FoxPro&reg; 2.0</P></TD><TD VALIGN="TOP">"FoxPro 2.0;"</P></TD><TD VALIGN="TOP">"<I>drive</I>:\<I>path</I>"</P></TD></TR><TR><TD VALIGN="TOP">FoxPro 2.5</P></TD><TD VALIGN="TOP">"FoxPro 2.5;"</P></TD><TD VALIGN="TOP">"<I>drive</I>:\<I>path</I>"</P></TD></TR><TR><TD VALIGN="TOP">FoxPro 2.6</P></TD><TD VALIGN="TOP">"FoxPro 2.6;"</P></TD><TD VALIGN="TOP">"<I>drive:\path</I>"</P></TD></TR><TR><TD VALIGN="TOP">Excel 3.0</P></TD><TD VALIGN="TOP">"Excel 3.0;"</P></TD><TD VALIGN="TOP">"<I>drive:\path\filename.xls</I>"</P></TD></TR><TR><TD VALIGN="TOP">Excel 4.0</P></TD><TD VALIGN="TOP">"Excel 4.0;"</P></TD><TD VALIGN="TOP">"<I>drive:\path\filename.xls</I>"</P></TD></TR><TR><TD VALIGN="TOP">Excel 5.0</P></TD><TD VALIGN="TOP">"Excel 5.0;"</P></TD><TD VALIGN="TOP">"<I>drive:\path\filename.xls</I>"</P></TD></TR><TR><TD VALIGN="TOP">Excel 7.0</P></TD><TD VALIGN="TOP">"Excel 7.0;"</P></TD><TD VALIGN="TOP">"<I>drive:\path\filename.xls</I>"</P></TD></TR><TR><TD VALIGN="TOP">Text</P></TD><TD VALIGN="TOP">"Text;"</P></TD><TD VALIGN="TOP">"<I>drive:\path</I>"</P></TD></TR><TR><TD VALIGN="TOP">ODBC</P></TD><TD VALIGN="TOP">"ODBC;<BR>DATABASE=<I>defaultdatabase</I>;<BR>UID=<I>user</I>; PWD=<I>password</I>;<BR>DSN=<I>datasourcename</I><BR>LOGINTIMEOUT<I>=seconds</I>"<BR>(This may not be a complete connection string for all servers; it's just an example.)</P></TD><TD VALIGN="TOP">None </P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
If the specifier is only "ODBC;", a dialog box listing all registered ODBC data source names is displayed by the ODBC driver so the user can select a database.</P>
If a password is required but not provided in the <B>Connect</B> property setting, a login dialog box is displayed the first time a table is accessed by the ODBC driver and again if the connection is closed and reopened.</P>
For Jet database base tables, the <B>Connect</B> property setting is a zero-length string ("").</P>
<P></P>
You can set the <B>Connect</B> property for a <B>Database</B> object by providing a <I>source</I> argument to the <B>OpenDatabase</B> method. You can check the setting to determine the type, path, user ID, Password, or ODBC data source of the database.</P>
For a <B>QueryDef</B> object, you use the <B>Connect</B> property with the <B>ReturnsRecords</B> property to create an ODBC SQL pass-through query. The <I>databasetype</I> of the connection string is "ODBC;", and the remainder of the string contains information specific to the ODBC driver used to access the remote data. For more information, see the documentation for the specific driver.</P>
<P></P>
Note</P>
The <B>Connect</B> property must be set before the <B>ReturnsRecords</B> property is set.</P>
<P></P>
See Also</P>
<B>OpenDatabase </B>Method,<B> ReturnsRecords </B>Property.</P>
Example</P>
This example creates a <B>TableDef</B> object in the specified database; sets its <B>Connect</B>, <B>Name</B>, and <B>SourceTableName</B> properties; and then appends it to the <B>TableDefs</B> collection.</P>
<BR></P>
<PRE>Function ConnectSource () As Integer
    Dim dbsLocal As Database, tdfPDXAuthor As TableDef
    Set dbsLocal = DBEngine.Workspaces(0).OpenDatabase("Northwind.mdb")
    Set tdfPDXAuthor = dbsLocal.CreateTableDef("PDXAuthor")
    ' Attach Paradox table Author in database C:\PDX\PUBLISH.
    tdfPDXAuthor.Connect = "Paradox 4<I>.x</I>;DATABASE=C:\PDX\PUBLISH"
    tdfPDXAuthor.SourceTableName = "Author"
    dbsLocal.TableDefs.Append tdfPDXAuthor    ' Attach table.
    ConnectSource = True
End Function
</PRE>
Example (Microsoft Access)</P>
The following example creates a <B>TableDef</B> object in the specified database. The procedure then sets its <B>Connect</B>, <B>Name</B>, and <B>SourceTableName</B> properties and appends the object to the <B>TableDefs</B> collection.</P>
<BR></P>
<PRE>Sub ConnectSource()
    Dim dbs As Database, tdf As TableDef

    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    Set tdf = dbs.CreateTableDef("PDXAuthor")
    ' Attach Paradox table Author in database C:\PDX\Publish.
    tdf.Connect = "Paradox 4<I>.x</I>;DATABASE=C:\PDX\Publish"
    tdf.SourceTableName = "Author"
    dbs.TableDefs.Append tdf
End Sub
</PRE>
<P></P>
Example (Microsoft Excel)</P>
This example attaches the table PRODUCT.DBF (a dBASE IV table located in the \Program Files\Common Files\Microsoft Shared\MSquery folder) to the NWINDEX.MDB database. (On Windows NT, PRODUCT.DBF is located in the \WINDOWS\MSAPPS\MSQUERY folder.)</P>
To create the NWINDEX.MDB database, run the Microsoft Excel example for the <B>CreateDatabase </B>method.</P>
<BR></P>
<PRE>Const sourceDir = "C:\Program Files\Common Files\Microsoft Shared\"
Dim nWindEx As Database, tDef As TableDef
Dim dataSource As String
dataSource = "dbase IV;DATABASE=" &amp; sourceDir &amp; "MSquery"
Set nWindEx = Workspaces(0).OpenDatabase(Application.Path _
    &amp; "\NWINDEX.MDB")
Set tDef = nWindEx.CreateTableDef("Product")
tDef.Connect = dataSource
tDef.SourceTableName = "Product"
nWindEx.TableDefs.Append tDef
nWindEx.Close
</PRE>
</P></BODY>
</HTML>
