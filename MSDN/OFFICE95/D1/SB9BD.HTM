<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetChunk Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>GetChunk Method</H2>Applies To</P>
<B>Field </B>Object.</P>
Description</P>
Returns all or a portion of the contents of a Memo or an OLE Object <B>Field</B> object in the <B>Fields</B> collection of a <B>Recordset</B> object.</P>
Syntax</P>
<I>stringvar</I> = <I>recordset</I><I> </I><B>!</B> <I>field</I><B>.GetChunk(</B><I>offset</I>, <I>numbytes</I><B>)</B></P>
The <B>GetChunk</B> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>stringvar</I></P></TD><TD VALIGN="TOP">The name of a <B>String</B> variable or <B>Variant</B> that receives the data from the <B>Field</B> object named by <I>field.</I></P></TD></TR><TR><TD VALIGN="TOP"><I>recordset</I></P></TD><TD VALIGN="TOP">A variable of an object data type that specifies the <B>Recordset</B> object containing the <B>Fields</B> collection.</P></TD></TR><TR><TD VALIGN="TOP"><I>field</I></P></TD><TD VALIGN="TOP">The name of a <B>Field</B> object whose <B>Type</B> property is set to <B>dbMemo</B> (Memo) or <B>dbLongBinary</B> (OLE Object).</P></TD></TR><TR><TD VALIGN="TOP"><I>offset</I></P></TD><TD VALIGN="TOP">A numeric expression that is the number of bytes to skip before copying begins.</P></TD></TR><TR><TD VALIGN="TOP"><I>numbytes</I></P></TD><TD VALIGN="TOP">A numeric expression that is the number of bytes you want to return.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
Assign the bytes returned by <B>GetChunk</B> to <I>stringvar</I>. Use <B>GetChunk</B> to return a portion of the total data value at a time. You can use the <B>AppendChunk</B> method to reassemble the pieces.</P>
If <I>offset</I> is 0, <B>GetChunk</B> begins copying from the first byte of the field.</P>
If <I>numbytes</I> is greater than the number of bytes in the field, the actual number of bytes in the field is returned.</P>
<P></P>
Note</P>
Use a Memo-type field for human-readable textual data, and put binary data only in OLE-type fields. Doing otherwise will cause undesirable results. </P>
<P></P>
See Also</P>
<B>AppendChunk </B>Method,<B> FieldSize </B>Method,<B> Type </B>Property.</P>
Specifics (Microsoft Access)</P>
After assigning the results of the <B>GetChunk</B> method to a string variable, you can use the Visual Basic <B>Len</B> function to determine the number of characters in the string. Or you can use the <B>LenB</B> function to determine the number of bytes used to represent that string. </P>
<P></P>
Example</P>
See the <B>AppendChunk</B> method example.</P>
Example (Microsoft Access)</P>
See the <B>AppendChunk</B> method example (Microsoft Access).</P>
</P>
</P></BODY>
</HTML>
