<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateGroup Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>CreateGroup Method</H2>Applies To</P>
<B>User </B>Object,<B> Workspace </B>Object.</P>
Description</P>
Creates a new <B>Group</B> object.</P>
Syntax</P>
<B>Set</B> <I>variable</I> = <I>object</I><B>.CreateGroup(</B>[<I>name</I>[, <I>pid</I>]]<B>)</B></P>
The <B>CreateGroup</B> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>variable</I></P></TD><TD VALIGN="TOP">A variable declared as object data type <B>Group</B>.</P></TD></TR><TR><TD VALIGN="TOP"><I>object</I></P></TD><TD VALIGN="TOP">The variable name of the <B>User</B> or <B>Workspace</B> object you want to use to create the new <B>Group</B> object.</P></TD></TR><TR><TD VALIGN="TOP"><I>name</I></P></TD><TD VALIGN="TOP">A <B>String</B> variable that uniquely names the new <B>Group</B> object. See the <B>Name</B> property for details on valid <B>Group</B> names. </P></TD></TR><TR><TD VALIGN="TOP"><I>pid</I></P></TD><TD VALIGN="TOP">A <B>String</B> variable containing the PID of a group account. The identifier must contain from 4 to 20 alphanumeric characters. See the <B>PID</B> property for more information on valid personal identifiers.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
If you omit one or both of the optional parts when you use <B>CreateGroup</B>, you can use an appropriate assignment statement to set or reset the corresponding property before you append the new object to a collection. After you append the object, you can alter some but not all of its property settings. See the individual property topics for more details.</P>
If <I>name</I> refers to an object that is already a member of the collection, a trappable error occurs when you use the <B>Append</B> method.</P>
To remove a <B>Group</B> object from a collection, use the <B>Delete</B> method on the collection.</P>
See Also</P>
<B>Append </B>Method,<B> Delete </B>Method,<B> Group </B>Object,<B> Name </B>Property,<B> PID </B>Property.</P>
<P></P>
Specifics (Microsoft Access)</P>
Once you have created a new <B>Group</B> object and appended it to the <B>Groups</B> collection of a <B>Workspace</B> or <B>User</B> object, you can verify that the new group exists by examining the Name drop-down list box on the Groups tab of the User And Group Accounts dialog box. This dialog box is available by pointing to Security on the Tools menu and then clicking User And Group Accounts.</P>
Example</P>
This example creates a new <B>Group</B> object.</P>
<BR></P>
<PRE>Dim grpManagers As Group, strManagersPID As String
strManagersPID = "2222abc"
' Create new Group object.
Set grpManagers = DBEngine.Workspaces(0).CreateGroup("Managers", _
    strManagersPID)
' Create new group in workgroup by appending it to Groups collection.
Workspaces(0).Groups.Append grpManagers
</PRE>
</P></BODY>
</HTML>
