<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FillCache Method</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

FillCache Method</h2>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Applies To</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Dynaset-Type <b>Recordset </b>Object,<b>
Recordset </b>Object.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Description</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Fills all or a part of a local
cache for a <b>Recordset</b> object that contains data from an
ODBC data source.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Syntax</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<i>recordset</i><b>.FillCache
</b>[<i>rows</i>[, <i>start</i>]]</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The <b>FillCache</b> method
syntax has these parts.</p>

<table border="0" cellpadding="7" cols="2">
    <tr>
        <TD valign="top">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Part</strong></td>
        <TD valign="top">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Description</strong></td>
    </tr>
    <tr>
        <TD valign="top">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<i>recordset</i></td>
        <TD valign="top">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

A <b>Recordset</b>
        object created from an ODBC data source, such as a <b>TableDef</b>
        representing an attached table or a <b>QueryDef</b>
        object derived from such a <b>TableDef</b>.</td>
    </tr>
    <tr>
        <TD valign="top">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<i>rows</i></td>
        <TD valign="top">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

An <b>Integer</b>
        specifying the number of rows to fill in the cache. If
        you omit this argument, the value is determined by the <b>CacheSize</b>
        property setting.</td>
    </tr>
    <tr>
        <TD valign="top">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<i>start</i></td>
        <TD valign="top">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

A string specifying
        a bookmark. The cache is filled starting from the record
        indicated by this bookmark. If you omit this argument,
        the cache is filled starting from the record indicated by
        the <b>CacheStart</b> property.</td>
    </tr>
</table>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Remarks</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Caching improves the
performance of an application that retrieves, or fetches, data
from a remote server. A cache is space in local memory that holds
the data most recently fetched from the server on the assumption
that the data will probably be requested again while the
application is running. When data is requested, the Microsoft Jet
database engine checks the cache for the data first rather than
fetching it from the server, which takes more time. Data that
doesn't come from an ODBC data source isn't saved in the cache.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Rather than waiting for the
cache to be filled with records as they are fetched, you can
explicitly fill the cache at any time using the <b>FillCache</b>
method. This is a faster way to fill the cache because <b>FillCache</b>
fetches several records at once instead of one at a time. For
example, while each screenful of records is being displayed, you
can have your application use <b>FillCache</b> to fetch the next
screenful of records.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Any ODBC database accessed with
<b>Recordset</b> objects can have a local cache. To create the
cache, open a <b>Recordset</b> object from the remote data
source, and then set the <b>CacheSize</b> and <b>CacheStart</b>
properties of the <b>Recordset</b>.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

If <i>rows</i> and <i>start</i>
create a range of records that is partly or wholly outside the
range of records specified by the <b>CacheSize</b> and <b>CacheStart</b>
properties, the portion of the <i>recordset</i> outside this
range is ignored and isn't loaded into the cache.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

If <b>FillCache</b> requests
more records than remain in the remote data source, only the
remaining records are fetched, and no error occurs.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Notes</strong></p>

<ul>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Records fetched from the cache don't
        reflect changes made concurrently to the source data by
        other users.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>FillCache</b> fetches only
        records not already cached. To force an update of all the
        cached data, set the <b>CacheSize</b> property of the <b>Recordset</b>
        to 0, set it to the size of the cache you originally
        requested, and then use <b>FillCache</b>.</li>
</ul>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>See Also</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>Bookmark </b>Property;<b>
Bookmarkable </b>Property;<b> CacheSize</b>,<b> CacheStart </b>Properties.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Specifics (Microsoft
Access)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

When you use a bookmark in a
Microsoft Access module, you must include an <b>Option Compare
Binary</b> statement in the Declarations section of the module. A
bookmark is a <b>Variant</b> array of <b>Byte</b> data, so the
string comparison method for the module must be binary. If a
bookmark is evaluated with a text-based string comparison method,
the current record may be set to an incorrect record. The <b>Option
Compare Text</b> statement denotes a text-based comparison
method, as does the default setting for the <b>Option Compare
Database</b> statement.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example (Client/Server)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

See the <b>CacheSize</b>,<b>
CacheStart</b> properties example.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example (Microsoft
Access)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

See the <b>CacheSize</b>,<b>
CacheStart</b> properties example (Microsoft Access).</p>
</BODY>

</html>
