<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TRANSFORM Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>TRANSFORM Statement</H2>Description</P>
Creates a crosstab query.</P>
Syntax</P>
TRANSFORM <I>aggfunction<BR>    selectstatement</I><BR>    PIVOT <I>pivotfield</I> [IN (<I>value1</I>[, <I>value2</I>[, ...]])]</P>
The TRANSFORM statement has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="95pt" VALIGN="TOP"><COL WIDTH="253pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>aggfunction</I></P></TD><TD VALIGN="TOP">An SQL aggregate function that operates on the selected data.</P></TD></TR><TR><TD VALIGN="TOP"><I>selectstatement</I></P></TD><TD VALIGN="TOP">A SELECT statement.</P></TD></TR><TR><TD VALIGN="TOP"><I>pivotfield</I></P></TD><TD VALIGN="TOP">The field or expression you want to use to create column headings in the query's result set.</P></TD></TR><TR><TD VALIGN="TOP"><I>value1</I>,<I> value2</I></P></TD><TD VALIGN="TOP">Fixed values used to create column headings.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>
Remarks</P>
When you summarize data using a crosstab query, you select values from specified fields or expressions as column headings so you can view data in a more compact format than with a select query.</P>
TRANSFORM is optional but when included is the first statement in an SQL string. It precedes a SELECT statement that specifies the fields used as row headings and a GROUP BY clause that specifies row grouping. Optionally, you can include other clauses, such as WHERE, that specify additional selection or sorting criteria. You can also use subqueries as predicates — specifically, those in the WHERE clause — in a crosstab query.</P>
The values returned in <I>pivotfield</I> are used as column headings in the query's result set. For example, pivoting the sales figures on the month of the sale in a crosstab query would create 12 columns. You can restrict <I>pivotfield</I> to create headings from fixed values (<I>value1</I>, <I>value2</I> ) listed in the optional IN clause. You can also include fixed values for which no data exists to create additional columns.</P>
See Also</P>
FROM Clause, INNER JOIN Operation, ORDER BY Clause.</P>
Example</P>
This example creates a crosstab query that shows product sales by month for a user-specified year. The months are returned from left to right (pivoted) as columns, and the product names are returned from top to bottom as rows.</P>
<BR></P>
<PRE>PARAMETERS [Sales for which year?] LONG; <BR>TRANSFORM Sum([Order Details].Quantity * ([Order Details].UnitPrice - <BR>    ([Order Details].Discount / 100) * [Order Details].UnitPrice)) <BR>AS Sales SELECT ProductName FROM Orders INNER JOIN(Products <BR>INNER JOIN [Order Details] <BR>ON Products.ProductID = [Order Details].ProductID) <BR>ON Orders.OrderID = [Order Details].OrderID <BR>WHERE DatePart("yyyy", OrderDate) = [Sales for which year?] <BR>GROUP BY ProductName ORDER BY ProductName <BR>PIVOT DatePart("m", OrderDate);
</PRE>
This example creates a crosstab query that returns product sales by quarter for each supplier for a user-specified year. The quarters are returned from left to right (pivoted) as columns, and the supplier names are returned from top to bottom as rows.</P>
<BR></P>
<PRE>PARAMETERS [Sales for which year?] LONG; <BR>TRANSFORM Sum([Order Details].Quantity * ([Order Details].UnitPrice - <BR>    ([Order Details].Discount / 100) * [Order Details].UnitPrice)) AS Sales <BR>SELECT CompanyName FROM Orders <BR>INNER JOIN ((Suppliers INNER JOIN Products <BR>ON Suppliers.SupplierID = Products.SupplierID) <BR>INNER JOIN [Order Details] <BR>ON Products.ProductID = [Order Details].ProductID) <BR>ON Orders.OrderID = [Order Details].OrderID <BR>WHERE DatePart("yyyy", OrderDate) = [Sales for which year?] </PRE>
<P></P>
<BR></P>
<PRE>GROUP BY CompanyName ORDER BY CompanyName <BR>PIVOT "Qtr " &amp; DatePart("q", OrderDate) In ('Qtr 1', 'Qtr 2', 'Qtr 3', <BR>'Qtr 4');
</PRE>
</P></BODY>
</HTML>
