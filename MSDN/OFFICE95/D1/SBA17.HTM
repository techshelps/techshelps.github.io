<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Workspace Object</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>Workspace Object</h2>

Description</p>

A <b>Workspace</b> object defines a session for a
user. It contains open databases and provides mechanisms for
simultaneous transactions and for a secure workgroup.</p>

Remarks</p>

Use the <b>Workspace</b> object to manage the
current session or to start an additional session. In a session,
you can open multiple databases, manage transactions, and
establish security based on user names and passwords. For
example, you can:</p>
<SPAN CLASS="list">
<ul>
    <li>Create a <b>Workspace</b> object using the <b>Name</b>
        and <b>UserName</b> properties to establish a named,
        password-protected session. The session creates a scope
        in which you can open multiple databases and conduct one
        instance of nested transactions. Use the <b>Close</b>
        method to terminate a session.</li>
    <li>Use the <b>OpenDatabase</b> method to open one or more
        existing databases on that <b>Workspace</b>.</li>
    <li>Use the <b>BeginTrans</b>, <b>CommitTrans</b>, and <b>Rollback</b>
        methods to manage nested transaction processing within a <b>Workspace</b>
        and use several <b>Workspace</b> objects to conduct
        multiple, simultaneous, and overlapping transactions.</li>
    <li>Use the <b>IsolateODBCTrans</b> property to isolate
        multiple transactions that involve the same ODBC
        database.</li>
</ul>
</SPAN>
When you start the Microsoft Jet database engine,
you automatically create the default workspace, <b>DBEngine.Workspaces</b>(0).
The settings of the <b>Name</b> and <b>UserName</b> properties of
the default workspace are &quot;#Default Workspace#&quot; and
&quot;Admin,&quot; respectively. If security is enabled, the <b>UserName</b>
property setting is the name of the user who logged on. If you
use the <b>OpenDatabase</b> method without specifying a <b>Workspace</b>
object, the default <b>DBEngine.Workspaces</b>(0) is used.</p>

When you use transactions, all databases in the
specified <b>Workspace</b> are affected &#151; even if multiple <b>Database</b>
objects are opened in the <b>Workspace</b>. For example, if you
use a <b>BeginTrans</b> method, update several records in a
database, and then delete records in another database, both the
update and delete operations are rolled back when you use the <b>Rollback</b>
method. You can create additional <b>Workspace</b> objects to
manage transactions independently across <b>Database</b> objects.</p>

<b>Workspace</b> objects are created using the <b>CreateWorkspace</b>
method of the <b>DBEngine</b> object. After you create a new <b>Workspace</b>
object, you must appended it to the <b>Workspaces</b> collection
if you need to refer to it from the <b>Workspaces</b> collection.
You can, however, use a newly created <b>Workspace</b> object
without appending it to the <b>Workspaces</b> collection.</p>

You can refer to any other <b>Workspace</b> object
that you create and append to the collection by its <b>Name</b>
property setting using this syntax:</p>

<b>Workspaces(</b>&quot;<i>name</i>&quot;<b>)</b></p>

You can also refer to appended <b>Workspace</b>
objects by their position in the <b>Workspaces</b> collection
using this syntax (where <i>n</i> is the <i>n</i>th member of the
<b>Workspaces</b> collection):</p>

<b>DBEngine.Workspaces</b>(<i>n</i>)</p>

Properties</p>

<b>IsolateODBCTrans </b>Property,<b> Name </b>Property,<b>
UserName </b>Property.</p>

Methods</p>

<b>BeginTrans</b>,<b> CommitTrans</b>,<b> Rollback </b>Methods;<b>
Close </b>Method;<b> CreateDatabase </b>Method;<b> CreateGroup </b>Method;<b>
CreateUser </b>Method;<b> OpenDatabase </b>Method.</p>

See Also</p>

<b>CreateWorkspace</b> Method; <b>Transactions</b>
Property; Appendix, &quot;Data Access Object Hierarchy.&quot;</p>

Example</p>

This example creates a new <b>Workspace</b> and
appends it to the <b>Workspaces</b> collection. It assumes that
the user JustAUser with a password of Secret has already been
created. The example enumerates the collections of each <b>Workspace</b>
object and finally closes the new <b>Workspace</b>. See the
methods and properties of the <b>Workspace</b> object or <b>Workspaces</b>
collection for additional examples.</p>

<br>
</p>

<pre>Function EnumerateWorkspace () As Integer
    Dim wrkEnum As Workspace, wrkNew As Workspace
    Dim I As Integer, J As Integer
    ' Create new workspace and add it to collection.
    Set wrkNew = DBEngine.CreateWorkspace(&quot;NewWorkspace&quot;, &quot;JustAUser&quot;, _
        &quot;&quot;)
    DBEngine.Workspaces.Append wrkNew
    ' Enumerate all workspaces.
    For J = 0 To DBEngine.Workspaces.Count - 1
        Set wrkEnum = DBEngine.Workspaces(J)
        Debug.Print
        Debug.Print &quot;Enumeration of Workspaces(&quot;; J; &quot;): &quot;; wrkEnum.Name
        Debug.Print
        ' Enumerate databases.
        Debug.Print &quot;Databases: Name&quot;
        For I = 0 To wrkEnum.Databases.Count - 1
            Debug.Print &quot;  &quot;; wrkEnum.Databases(I).Name
        Next I
        ' Enumerate all user accounts.
        Debug.Print &quot;Users: Name&quot;
        For I = 0 To wrkEnum.Users.Count - 1
            Debug.Print &quot;  &quot;; wrkEnum.Users(I).Name
        Next I
        Debug.Print
        ' Enumerate all group accounts.
        Debug.Print &quot;Groups: Name&quot;
        For I = 0 To wrkEnum.Groups.Count - 1
            Debug.Print &quot;  &quot;; wrkEnum.Groups(I).Name
        Next I
        Debug.Print
    Next J
    Debug.Print
    ' Enumerate built-in properties of wrkNew.
    Debug.Print &quot;wrkNew.Name: &quot;; wrkNew.Name
    Debug.Print &quot;wrkNew.UserName: &quot;; wrkNew.UserName</pre>

<br>
</p>

<pre>    Debug.Print
    wrkNew.Close
    EnumerateWorkspace = True
End Function
</pre>
</BODY>

</html>
