<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dynaset-Type Recordset Object</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Dynaset-Type Recordset
Object</h2>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Description</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

A dynaset-type <b>Recordset</b>
object is a type of <b>Recordset</b> object you can use to
manipulate data in an underlying database table or tables. A
dynaset-type <b>Recordset</b> object is a dynamic set of records
that can contain fields from one or more tables or queries in a
database and may be updatable.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Remarks</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

To create a dynaset-type <b>Recordset</b>
object, use the <b>OpenRecordset</b> method on an open database,
against another dynaset- or snapshot-type <b>Recordset</b>
object, or on a <b>QueryDef</b> object.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

A dynaset-type <b>Recordset</b>
object is different from a snapshot-type <b>Recordset</b> object
because only a unique key for each record is brought into memory,
instead of actual data. As a result, a dynaset is normally
updated with changes made to the source data, while the snapshot
is not. Like the table-type <b>Recordset</b> object, a dynaset's
current record is fetched only when its fields are referenced.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

If you request a dynaset-type <b>Recordset</b>
object and the Microsoft Jet database engine is unable to gain
read-write access to the records, the Jet database engine may
create a read-only, dynaset-type <b>Recordset</b> object. If the <b>Recordset</b>
object created isn't updatable, its <b>Updatable</b> property
setting is <b>False</b> (0).</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

As base table data changes due
to updates made by your application or by other users, current
data is available to your application when you reposition the
current record. In a multiuser database, more than one user can
open a dynaset-type <b>Recordset</b> object referring to the same
records. Because a dynaset-type <b>Recordset</b> object is
dynamic, when one user changes a record, other users have
immediate access to the changed data. However, if one user adds a
record, other users aren't notified until they use the <b>Requery</b>
method on the <b>Recordset</b> object. If a user deletes a
record, other users are notified when they try to access it.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Records added to the database
don't become a part of your dynaset-type <b>Recordset</b> object
unless you add them using the <b>AddNew</b> method. For example,
if you use an action query containing an INSERT INTO SQL
statement to add records, the new records aren't included in your
dynaset-type <b>Recordset</b> object until you either use the <b>Requery</b>
method or you rebuild your <b>Recordset</b> object using the <b>OpenRecordset</b>
method.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

To maintain data integrity,
dynaset- and table-type <b>Recordset</b> objects are locked
during <b>Edit</b> (pessimistic locking) and <b>Update</b>
methods operations (optimistic locking) so that only one user can
update a particular record at a time. When the Jet database
engine locks a record, it locks the entire 2K page containing the
record.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Optimistic and pessimistic
locking are also used with non-ODBC tables. When you access
external tables using ODBC you should always use optimistic
locking. The locking conditions in effect during editing are
determined by the <b>LockEdits</b> property.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Not all fields can be updated
in all dynaset-type <b>Recordset</b> objects. To determine
whether you can update a particular field, check the <b>Updatable</b>
property setting of the <b>Field</b> object.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

A dynaset-type <b>Recordset</b>
object may not be updatable if:</p>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<SPAN CLASS="list">

<ul>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

There isn't a unique index on the
        ODBC or Paradox table or tables.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The data page is locked by another
        user.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The record has changed since you
        last read it.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The user doesn't have permission.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

One or more of the tables or fields
        are set to read-only.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The database is opened as read-only.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The <b>Recordset</b> object was
        either created from multiple tables without a JOIN
        statement or the query was too complex.</li>
</ul>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

</SPAN>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The order of dynaset-type <b>Recordset</b>
object or <b>Recordset</b> data doesn't necessarily follow any
specific sequence. If you need to order your data, use an SQL
statement with an ORDER BY clause to create the <b>Recordset</b>
object. You can also use this technique to filter the records so
that only certain records are added to the <b>Recordset</b>
object. For example, the following code selects only titles that
were published between 1993 and 1994 and sorts the resulting
records by title.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<br>
</p>

<pre>Dim dbsBiblio As Database, rstTitles As Recordset
Dim strSelect As String
Set dbsBiblio = Workspaces(0).OpenDatabase(&quot;Biblio.mdb&quot;)
strSelect = &quot;SELECT * FROM Titles  &quot; _
    &amp; &quot; WHERE [Year Published] BETWEEN 1993 AND 1994 &quot; _
        &amp; &quot; ORDER BY ISBN;&quot;
Set rstTitles = dbsBiblio.OpenRecordset(strSelect, dbOpenDynaset)
</pre>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Using this technique instead of
using the <b>Filter</b> or <b>Sort</b> properties or testing each
record individually generally results in faster access to your
data.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Properties</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>AbsolutePosition</b>
Property; <b>BOF</b>,<b> EOF</b> Properties; <b>Bookmark</b>
Property; <b>Bookmarkable</b> Property; <b>CacheSize</b>, <b>CacheStart</b>
Properties; <b>EditMode</b> Property; <b>Filter</b> Property; <b>LastModified</b>
Property; <b>LockEdits</b> Property; <b>Name</b> Property; <b>NoMatch</b>
Property; <b>PercentPosition</b> Property; <b>RecordCount</b>
Property; <b>Restartable</b> Property; <b>Sort</b> Property; <b>Transactions</b>
Property; <b>Type</b> Property; <b>ValidationRule</b> Property; <b>ValidationText</b>
Property.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Methods</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>CancelUpdate </b>Method;<b>
Clone </b>Method;<b> Close </b>Method;<b> CopyQueryDef </b>Method;<b>
Edit </b>Method;<b> FillCache </b>Method;<b> FindFirst</b>,<b>
FindLast</b>,<b> FindNext</b>,<b> FindPrevious </b>Methods;<b>
GetRows </b>Method;<b> Move </b>Method;<b> MoveFirst</b>,<b>
MoveLast</b>,<b> MoveNext</b>,<b> MovePrevious </b>Methods;<b>
OpenRecordset </b>Method;<b> Requery </b>Method;<b> Update </b>Method.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>See Also</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>OpenRecordset </b>Method;<b>
Recordset </b>Object;<b> Updatable </b>Property; Appendix,
&quot;Data Access Object Hierarchy.&quot;</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

This example creates a new
dynaset-type <b>Recordset</b> object and opens it, appending it
to the <b>Recordsets</b> collection in the default database. It
then edits the record(s).</p>

<br>
</p>

<pre>Function ChangeSQL () As Integer
    Dim dbsBiblio As Database, rstTitles As Recordset
    Dim strSelect As String
    Set dbsBiblio = DBEngine.Workspaces(0).OpenDatabase(&quot;Biblio.mdb&quot;)
    strSelect = &quot;Select * From Titles Where Title = 'Using SQL' &quot; 
    Set rstTitles = dbsBiblio.OpenRecordset(strSelect, dbOpenDynaset)
    If rstTitles.RecordCount &gt; 0 and rstTitles.Updatable Then
        Do Until rstTitles.EOF
            With rstTitles
                .Edit
                ![Year Published] = 1994    ' Change year published.
                .Update
                .MoveNext
            End With
        Loop
    Else
        Debug.Print &quot;No such title or table not updatable&quot;
    End If
    dbsBiblio.Close
    ChangeSQL = True
End Function
</pre>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example (Microsoft
Access)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The following example creates a
dynaset-type <b>Recordset</b> object, then checks the <b>Updatable</b>
property of the <b>Recordset</b> object.</p>

<br>
</p>

<pre>Sub RecentHires()
    Dim dbs As Database, rst As Recordset
    Dim strSQL As String
    
    ' Return Database object pointing to current database.
    Set dbs = CurrentDb
    strSQL = &quot;SELECT * FROM Employees WHERE HireDate &gt;= #1-1-95#;&quot;
    Set rst = dbs.OpenRecordset(strSQL, dbOpenDynaset)
    Debug.Print rst.Updatable
End Sub

</pre>
</BODY>

</html>
