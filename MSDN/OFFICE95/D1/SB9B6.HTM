<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FieldSize Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>FieldSize Method</H2>Applies To</P>
<B>Field </B>Object.</P>
<P></P>
Description</P>
Returns the number of bytes used in the database (rather than in memory) of a Memo or an OLE Object <B>Field</B> object in the <B>Fields</B> collection of a <B>Recordset</B> object.</P>
Syntax</P>
<I>varname</I> = <I>recordset</I><I> </I><B>!</B> <I>field</I><B>.FieldSize( )</B></P>
The <B>FieldSize</B> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>varname</I></P></TD><TD VALIGN="TOP">The name of a <B>Long</B> or <B>Variant</B> variable.</P></TD></TR><TR><TD VALIGN="TOP"><I>recordset</I></P></TD><TD VALIGN="TOP">A variable of an object data type that specifies the <B>Recordset</B> object containing the <B>Fields</B> collection.</P></TD></TR><TR><TD VALIGN="TOP"><I>field</I></P></TD><TD VALIGN="TOP">The name of a <B>Field</B> object whose <B>Type</B> property is set to <B>dbMemo</B> (Memo), <B>dbLongBinary</B> (OLE Object), or the equivalent.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
Because the size of an OLE Object field or Memo field can exceed 64K, you should assign the value returned by <B>FieldSize</B> to a variable large enough to store a <B>Long</B> variable.</P>
You can use <B>FieldSize</B> with the <B>AppendChunk</B> and <B>GetChunk</B> methods to manipulate large fields.</P>
<P></P>
Note</P>
To determine the size of a <B>Field</B> object (except Memo and Long Binary types), use the <B>Size</B> property.</P>
<P></P>
See Also</P>
<B>AppendChunk </B>Method,<B> GetChunk </B>Method,<B> Size </B>Property,<B> Type </B>Property.</P>
Specifics (Microsoft Access)</P>
The data access <B>FieldSize</B> method is different from the Microsoft Access <B>FieldSize</B> property, which is set in table Design view. The data access <B>FieldSize</B> method returns the number of bytes in a <B>Field</B> object of type Memo data type or OLE Object data type.</P>
You set the Microsoft Access <B>FieldSize</B> property in order to limit the size of a field in a table. The <B>FieldSize</B> property is only available in table Design view. From Visual Basic, use the <B>Size</B> property to set the size of a field in a table.</P>
Example</P>
See the <B>AppendChunk</B> method example.</P>
Example (Microsoft Access)</P>
The following example uses the <B>FieldSize</B> method to return the size in bytes of two fields in an Employees table. The Notes field is Memo data type and the Photo field is Binary data type.</P>
<BR></P>
<PRE>Sub GetFieldSize()
    Dim dbs As Database, rst As Recordset
    Dim fldNotes As Field, fldPhoto As Field
    Dim strSQL As String
</PRE>
<P></P>
<BR></P>
<PRE>    ' Return Database variable pointing to current database.
    Set dbs = CurrentDb
    ' Construct SQL statement to return Notes and Photo fields.
    strSQL = "SELECT Notes, Photo FROM Employees;"
    ' Create dynaset-type Recordset object.
    Set rst = dbs.OpenRecordset(strSQL)
    Set fldNotes = rst.Fields!Notes
    Set fldPhoto = rst.Fields!Photo
    ' Move to first record.
    rst.MoveFirst
    Debug.Print "Size of Notes:"; "    "; "Size of Photo:"
    ' Print sizes of fields for each record in Recordset object.
    Do Until rst.EOF
        Debug.Print fldNotes.FieldSize; "        "; fldPhoto.FieldSize
        rst.MoveNext
    Loop
End Sub
</PRE>
</P></BODY>
</HTML>
