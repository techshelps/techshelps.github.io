<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Primary Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Primary Property</H2>Applies To</P>
<B>Index </B>Object.</P>
Description</P>
Sets or returns a value that indicates whether an <B>Index</B> object represents a primary index for a table. The <B>Primary</B> property setting is read/write for a new <B>Index</B> object not yet appended to a collection and read-only for an existing <B>Index</B> object in an <B>Indexes</B> collection. If the <B>Index</B> object is appended to the <B>TableDef</B> object but the <B>TableDef</B> object isn't appended to the <B>TableDefs</B> collection, the <B>Index</B> property is read-write.</P>
Settings and Return Values</P>
The setting or return value is a Boolean expression that specifies a primary index. The data type is Boolean. True (-1) indicates that the Index object represents a primary index.</P>
Remarks</P>
A primary index consists of one or more fields that uniquely identify all records in a table in a predefined order. Because the index field must be unique, the <B>Unique</B> property of the <B>Index</B> object is set to <B>True</B>. If the primary index consists of more than one field, each field can contain duplicate values, but each combination of values from all the indexed fields must be unique. A primary index consists of a key for the table and usually contains the same fields as the primary key.</P>
<P></P>
Tip</P>
You don't have to create indexes for tables, but in large, unindexed tables, accessing a specific record can take a long time. The <B>Attributes</B> property of each <B>Field</B> object in the <B>Index</B> object determines the order of records and consequently determines the access techniques to use for that index. When you create a new table in your database, it's a good idea to create an index on one or more fields that uniquely identify each record, and then set the <B>Primary</B> property of the <B>Index</B> object to <B>True</B>.</P>
<P></P>
When you set a primary key for a table, the primary key is automatically defined as the primary index for the table.</P>
See Also</P>
<B>Attributes </B>Property,<B> Clustered </B>Property,<B> Unique </B>Property.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, when you set a primary key for a table in table Design view, the primary key is automatically defined as the primary index.</P>
Example</P>
In the Biblio.mdb database, this example creates a new <B>Table</B> and primary key <B>Index</B> object and then adds the <B>Table</B> to the <B>TableDefs</B> collection of a <B>Database</B>.</P>
<BR></P>
<PRE>Dim dbsBiblio As Database , tdfBookTypes As TableDef
Dim idxPrimaryKey As Index, fldTypeNum As Field, fldType As Field
    ' Open the Database.
Set dbsBiblio =  DBEngine.Workspaces(0).OpenDatabase("Biblio.mdb")
Set tdfBookTypes = dbsBiblio.CreateTableDef("Book Types")
    ' Create and Set fldTypeNum field Set fldTypeNum =
     ' tdfBookTypes.CreateField("TypeNum",dbLong)</PRE>
<P></P>
<BR></P>
<PRE>    ' Add fldTypeNum field to TableDef.
    tdfBookTypes.Fields.Append fldTypeNum
    ' Create and Set fldType field properties.
Set fldType = tdfBookTypes.CreateField("Type",dbText)
fldType.Size = 15    ' Set Size property of text field.
    ' Add fldType field to TableDef.
tdfBookTypes.Fields.Append fldType
Set idxPrimaryKey = tdfBookTypes.CreateIndex("PrimaryKey")
With idxPrimaryKey        ' Set properties in new Index.
   .Name = "PrimaryKey"
   .Unique = True
   .Primary = True
   .Fields = "TypeNum"
End With
    ' Add Index to TableDefs collection.
idxPrimaryKey.fields.Append idxPrimaryKey.CreateField("TypeNum")
tdfBookTypes.Indexes.Append idxPrimaryKey
' Append TableDef to database.
dbsBiblio.TableDefs.Append tdfBookTypes
dbsBiblio.Close
</PRE>
Example (Microsoft Access)</P>
The following example checks the <B>Primary</B> property of each index on a Products table, and prints the fields making up the primary key.</P>
<BR></P>
<PRE>Sub SetIndex()
    Dim dbs As Database, tdf As TableDef, fld As Field
    Dim idx As Index

    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    Set tdf = dbs.TableDefs!Products
    ' Enumerate through Indexes collection of TableDef.
    For Each idx In tdf.Indexes
        ' Check Primary property of Recordset object.
        If idx.Primary Then
            For Each fld In idx.Fields
                Debug.Print fld.Name
            Next fld
            Exit Sub
        End If
    Next idx
    MsgBox "No primary key defined."
End Sub

</PRE>
<P></P></BODY>
</HTML>
