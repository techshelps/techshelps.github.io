<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ValidationRule Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>ValidationRule Property</H2>Applies To</P>
Dynaset-Type <B>Recordset </B>Object,<B> Field </B>Object,<B> Recordset </B>Object,<B> </B>Snapshot-Type <B>Recordset </B>Object,<B> </B>Table-Type<B> Recordset </B>Object,<B> TableDef </B>Object.</P>
Description</P>
Sets or returns a value that validates the data in a field as it's changed or added to a table. For an object not yet appended to the <B>Fields</B> collection, this property is read/write. See Remarks for the more specific read/write characteristics of this property.</P>
Settings and Return Values</P>
The settings or return values is a string expression that describes a comparison in the form of an SQL WHERE clause without the WHERE reserved word. The data type is <B>String</B>.</P>
Remarks</P>
The <B>ValidationRule</B> property determines whether or not valid data is in the associated field. If the data is not legal, a trappable run-time error occurs. The returned error message is the text of the <B>ValidationText</B> property, if specified, or the text of the expression specified by <B>ValidationRule</B>.</P>
<P></P>
For a <B>Field</B> object, use of the <B>ValidationRule</B> property depends on the object that contains the <B>Fields</B> collection that the <B>Field</B> object is appended to, as the following table shows.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="228pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Object appended to</P></TD><TD VALIGN="TOP">Usage</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>Index</B></P></TD><TD VALIGN="TOP">Not supported</P></TD></TR><TR><TD VALIGN="TOP"><B>QueryDef</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Recordset</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Relation</B></P></TD><TD VALIGN="TOP">Not supported</P></TD></TR><TR><TD VALIGN="TOP"><B>TableDef</B></P></TD><TD VALIGN="TOP">Read/write</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
For a <B>Recordset</B> object, use of the <B>ValidationRule</B> property is read-only. For a <B>TableDef</B> object, use of the <B>ValidationRule</B> property depends on the status of the <B>TableDef</B> object, as the following table shows.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="228pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">TableDef</P></TD><TD VALIGN="TOP">Usage</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">Base table</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">Attached table</P></TD><TD VALIGN="TOP">Read-only</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Validation is supported only for databases that use the Microsoft Jet database engine.</P>
The string expression specified by the <B>ValidationRule</B> property of a <B>Field</B> object can refer only to that <B>Field</B>. The expression can't refer to user-defined functions, SQL aggregate functions, or queries. To set a <B>Field</B> object's <B>ValidationRule</B> property when its <B>ValidateOnSet</B> property setting is <B>True</B>, the expression must successfully parse (with the field name as an implied operand) and evaluate to <B>True</B>. If its <B>ValidateOnSet</B> property setting is <B>False</B>, the <B>ValidationRule</B> property setting is ignored.</P>
The <B>ValidationRule</B> property of a <B>Recordset</B> or <B>TableDef</B> object can refer to multiple fields in that object. The restrictions noted earlier in this topic for the <B>Field</B> object apply.</P>
For a table-type <B>Recordset</B> object, the <B>ValidationRule</B> property takes the value of the <B>ValidationRule</B> property setting of the <B>TableDef</B> object that you use to create the table-type <B>Recordset</B> object.</P>
For a <B>TableDef</B> object based on an attached table, the <B>ValidationRule</B> property takes the value of the underlying base table. If the underlying base table doesn't support validation, the value of this property is a zero-length string ("").</P>
See Also</P>
<B>ValidateOnSet </B>Property,<B> ValidationText </B>Property.</P>
Specifics (Microsoft Access)</P>
Use the data access <B>ValidationRule</B> property to set validation rules for a <B>Field</B>, <B>Recordset</B>, or <B>TableDef</B> object from Visual Basic.</P>
<P></P>
You can also set validation rules for a field or control in the Microsoft Access user interface. Set the Microsoft Access <B>ValidationRule</B> property for a field or a table in table Design view. Set the <B>ValidationRule</B> property of a control in the property sheet in form Design view.</P>
In Microsoft Access, the string expression specified by the <B>ValidationRule</B> property of a <B>Field</B> object can't refer to user-defined functions, domain aggregate functions, SQL aggregate functions, the <B>CurrentUser</B> function, the <B>Eval</B> function, or queries.</P>
Example (Microsoft Access)</P>
The following example sets the <B>ValidationRule</B> and <B>ValidationText</B> properties for two fields in an Order Details table. Once these properties have been set, you can view them in table Design view as well.</P>
<BR></P>
<PRE>Sub SetValidation()
    Dim dbs As Database, tdf As TableDef
    Dim fldQuantity As Field, fldDiscount As Field
    
    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    Set tdf = dbs.TableDefs![Order Details]
    Set fldQuantity = tdf.Fields!Quantity
    Set fldDiscount = tdf.Fields!Discount
    ' Set ValidationRule and ValidationText.
    fldQuantity.ValidationRule = "&gt;= 4"
    fldQuantity.ValidationText = "Quantity must be four or more items."
    fldDiscount.ValidationRule = "Between .05 and .30"
    fldDiscount.ValidationText = "Discount must be between 5% and 30%."
End Sub
</PRE>
</P></BODY>
</HTML>
