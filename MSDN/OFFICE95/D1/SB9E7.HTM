<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Property Object</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>Property Object</h2>

Description</p>

A <b>Property</b> object represents a built-in or
user-defined characteristic of a data access object.</p>

Remarks</p>

Every data access object contains a <b>Properties</b>
collection, which has certain built-in <b>Property</b> objects.
These <b>Property</b> objects (which are often just called
properties) uniquely characterize that instance of the object.
You specify built-in properties when you create a new data access
object. You can set the properties of some existing data access
objects using an assignment statement.</p>

The <b>Property</b> object also has four built-in
properties:</p>
<SPAN CLASS="list">
<ul>
    <li>The <b>Name</b> property, a <b>String</b> that uniquely
        identifies the property.</li>
    <li>The <b>Type</b> property, an <b>Integer</b> that
        specifies the property data type.</li>
    <li>The <b>Value</b> property, a <b>Variant</b> that contains
        the property setting.</li>
    <li>The <b>Inherited</b> property, a Boolean flag that
        indicates whether the property is inherited from another
        object. For example, a <b>Field</b> object in a <b>Fields</b>
        collection of a <b>Recordset</b> object can inherit
        properties from the underlying <b>TableDef</b> or <b>QueryDef</b>
        object.</li>
</ul>
</SPAN>
In addition to these built-in properties, you can
create and add your own user-defined properties to these objects:</p>
<SPAN CLASS="list">
<ul>
    <li><b>Database</b>, <b>Index</b>, <b>QueryDef</b>, and <b>TableDef</b>
        objects</li>
    <li><b>Field</b> objects in <b>Fields</b> collections of <b>QueryDef</b>
        and <b>TableDef</b> objects</li>
</ul>
</SPAN>
To add a user-defined property, use the <b>CreateProperty</b>
method to create a <b>Property</b> object with a unique <b>Name</b>
property setting. Set the <b>Type</b> and <b>Value</b> properties
of the new <b>Property</b> object, and then append it to the <b>Properties</b>
collection of the appropriate object. The object to which you are
adding the user-defined property must already be saved to disk
(that is, it must be appended to a collection).</p>

You can delete user-defined properties from the <b>Properties</b>
collection, but you can't delete built-in properties.</p>

Note</p>

A user-defined property (<b>Property</b> object) is
associated only with the specific instance of the object whose <b>Properties</b>
collection you append it to. The property isn't defined for all
instances of objects of the selected type.</p>

You can use the <b>Properties</b> collection of an
object to enumerate the object's built-in and user-defined
properties. You don't need to know beforehand exactly which
properties exist or what their characteristics (<b>Name</b> and <b>Type</b>
properties) are to manipulate them. However, if you try to read a
write-only property (such as the <b>Password</b> property of a <b>Workspace</b>
object), an error occurs.</p>

You can refer to an existing built-in or
user-defined property by its <b>Name</b> property setting using
this syntax:</p>

<i>object</i>.<b>Properties</b>(&quot;<i>name</i>&quot;)</p>

For a built-in property, you can also use this
syntax:</p>

<i>object</i>.<i>name</i></p>

You can also reference properties by their ordinal
position using this syntax, which refers to the first member of
the <b>Properties</b> collection:</p>

<i>object</i>.<b>Properties</b>(0)</p>

A user-defined property differs from a built-in
property of a data access object in the following ways:</p>
<SPAN CLASS="list">
<ul>
    <li>You must refer to a user-defined property using the full <b>Properties</b>(&quot;<i>name</i>&quot;)
        syntax.</li>
    <li>If you haven't previously set the property's value, you
        need to create it first using the <b>CreateProperty</b>
        method.</li>
</ul>
</SPAN>
Properties</p>

<b>Inherited</b> Property, <b>Name</b> Property, <b>Type</b>
Property, <b>Value</b> Property.</p>

See Also</p>

<b>CreateProperty </b>Method;<b> Database </b>Object;
Appendix, &quot;Data Access Object Hierarchy.&quot;</p>

Specifics (Microsoft Access)</p>

See the <b>Properties</b> collection specifics
(Microsoft Access).</p>

Example</p>

See the <b>Properties</b> collection example.</p>

Example (Microsoft Access)</p>

See the <b>Properties</b> collection example
(Microsoft Access).</p>
</BODY>

</html>
