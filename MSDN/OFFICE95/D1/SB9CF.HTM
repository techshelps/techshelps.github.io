<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LoginTimeout Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>LoginTimeout Property</H2>Applies To</P>
<B>DBEngine </B>Object.</P>
Description</P>
Sets or returns the number of seconds before an error occurs when you attempt to log in to an ODBC database.</P>
Settings and Return Values</P>
The setting or return value is an <B>Integer</B> representing the number of seconds before a login timeout error occurs. The default <B>LoginTimeout</B> property setting is 20 seconds. When the <B>LoginTimeout</B> property is set to 0, no timeout occurs.</P>
<P></P>
Remarks</P>
When you're attempting to log into an ODBC database, such as SQL Server, the connection can fail as a result of network errors or because the server isn't running. Rather than waiting for the default 20 seconds to connect, you can specify how long the Microsoft Jet database engine waits before it produces an error. Logging on to the server happens implicitly as part of a number of different events, such as running a query on an external server database.</P>
The default timeout value is determined by the current setting of the <B>LoginTimeout</B> property entry in the HKEY_LOCAL_MACHINE\SOFTWARE\Jet\3.0\ODBC key of the Windows Registry.</P>
See Also</P>
<B>ODBCTimeout </B>Property,<B> QueryDef </B>Object,<B> QueryTimeout </B>Property.</P>
Example</P>
This example sets the <B>LoginTimeout</B> property to 120 seconds and then creates and runs a query on a database on an ODBC server.</P>
<BR></P>
<PRE>Dim dbsNorthwind As Database
Dim qdfCustomers As QueryDef, rstCustomers As Recordset
DBEngine.LoginTimeout = 120            ' Timeout in 2 minutes.
Set dbsNorthwind =  DBEngine.Workspaces(0).OpenDatabase("Northwind.mdb")
                                    ' Create query.
Set qdfCustomers = dbsNorthwind.CreateQueryDef("All Cust", _<BR>    "SELECT * FROM Customers;")
qdfCustomers.Connect = "ODBC;DSN=Human Resources; " &amp; _<BR>    "DATABASE=HRSRVR; UID=Smith; PWD=Sesame"
                                    ' Log in to server and run query.
Set rstCustomers = qdfCustomers.OpenRecordset()
</PRE>
Example (Microsoft Access)</P>
The following example sets the <B>LoginTimeout</B> property to 120 seconds, then creates a query, and runs it on a database on an ODBC server.</P>
<BR></P>
<PRE>Sub Login()
    Dim dbs As Database
    Dim qdf As QueryDef, rst As Recordset

    ' Set timeout to 120 seconds.
    DBEngine.LoginTimeout = 120
    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    ' Create query.
    Set qdf = dbs.CreateQueryDef("All Employees", _<BR>        "SELECT * FROM Employees;")
    qdf.Connect = "ODBC;DSN=Human Resources; " &amp; _<BR>        "DATABASE=HRSRVR; UID=Smith; PWD=Sesame"
    ' Log in to server and run query.
    Set rst = qdf.OpenRecordset()
End Sub

</PRE>
<P></P></BODY>
</HTML>
