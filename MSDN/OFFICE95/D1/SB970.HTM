<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AddNew Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>AddNew Method</H2>Applies To</P>
Dynaset-Type<B> Recordset </B>Object,<B> Recordset </B>Object,<B> </B>Table-Type<B> Recordset </B>Object.</P>
Description</P>
Creates a new record for a table-type or dynaset-type <B>Recordset</B> object.</P>
Syntax</P>
<I>object</I><B>.AddNew</B></P>
The <I>object</I><B> </B>placeholder represents the name of an open table-type or dynaset-type <B>Recordset</B> object to which you want to add a new record.</P>
Remarks</P>
The <B>AddNew</B> method creates a new record you can edit and add to the <B>Recordset </B>object named by <I>object</I>. This method sets the fields to <B>Null</B> (the default values specified for a table-type <B>Recordset</B>)<B> </B>or default values, if any. </P>
After you modify the new record, use the <B>Update</B> method to save the changes and add the record to the recordset. No changes are made to the database until you use the <B>Update</B> method.</P>
<P></P>
Caution</P>
If you issue an <B>AddNew</B> and then perform any operation that moves to another record without using <B>Update</B>, your changes are lost without warning. In addition, if you close the <I>object</I> or end the procedure that declares the <I>object</I> or its <B>Database</B> object, the new record and the changes made to it are discarded without warning.</P>
<P></P>
When you use <B>AddNew</B> and the Microsoft Jet database engine has to create a new 2-kilobyte page to hold the current record, page locking is pessimistic. If the new record fits in an existing page, page locking is optimistic.</P>
If you haven't moved to the last record of your dynaset, records added to base tables may be included if they would be positioned beyond the current record. If you add a record to a dynaset-type <B>Recordset</B> using the <B>AddNew</B> method, however, the record is visible in the <B>Recordset</B> and included in the underlying table where it becomes visible to any new <B>Recordset</B> objects.</P>
<P></P>
The position of the new record depends on the type of <B>Recordset</B>:</P>
<SPAN CLASS="list"><UL>In a dynaset-type <B>Recordset </B>object, records are inserted at the end of the recordset, regardless of any sorting or ordering rules that may have been in effect when the recordset was opened.</LI>In a table-type <B>Recordset</B> object whose <B>Index</B> property has been set, records are returned in their proper place in the sort order. If the <B>Index</B> property hasn't been set, new records are returned at the end of the recordset.</LI></UL></SPAN><P></P>
The record that was current before you used <B>AddNew</B> remains current. If you want to make the new record current, you can set the <B>Bookmark</B> property to the bookmark identified by the <B>LastModified</B> property setting.</P>
See Also</P>
<B>Bookmark </B>Property;<B> Delete </B>Method;<B> Index </B>Object;<B> LastModified </B>Property;<B> Move </B>Method;<B> MoveFirst</B>,<B> MoveLast</B>,<B> MoveNext</B>,<B> MovePrevious </B>Methods; <B>Seek </B>Method.</P>
Specifics (Microsoft Access)</P>
When you use a bookmark in a Microsoft Access module, you must include an <B>Option Compare Binary</B> statement in the Declarations section of the module. A bookmark is a <B>Variant</B> array of <B>Byte</B> data, so the string comparison method for the module must be binary. If a bookmark is evaluated with a text-based string comparison method, such as the <B>Option Compare Text</B> statement or the default setting for the <B>Option Compare Database</B> statement, the current record may be set to an incorrect record.</P>
Example</P>
This example creates a new record in a table named Customers, enters values, saves the changes, and then moves to and deletes the new record.</P>
<BR></P>
<PRE>Dim dbsNorthwind As Database, rstCustomers As Recordset
Set dbsNorthwind = DBEngine.Workspaces(0).OpenDatabase("Northwind.mdb")
' Open table.
Set rstCustomers = dbsNorthwind.OpenRecordset("Customers")
With rstCustomers
    .AddNew    ' Create new record.
    !CustomerID = "FINNF"    ' Set record key.
    !CompanyName = "Finnegan's Foods"    ' Set company name.
    .Update    ' Save changes.
    .Bookmark = rstCustomers.LastModified    ' Go to new record 
    .Delete    ' Delete new record.
    .Close    ' Close Table.
End With
dbsNorthwind.Close    ' Close Database.
</PRE>
Example (Microsoft Access)</P>
The following example creates a new record in an Employees table and saves the changes.</P>
<BR></P>
<PRE>Sub NewRecord()
    Dim dbs As Database, rst As Recordset
    </PRE>
<P></P>
<BR></P>
<PRE>    ' Return Database variable pointing to current database.
    Set dbs = CurrentDb
    Set rst = dbs.OpenRecordset("Employees")
    With rst
        ' Add new record to end of Recordset object.
        .AddNew
        .[LastName] = "Russell"    ' Add data.
        .[FirstName] = "Peter"
        .Update            ' Save changes.
    End With
    dbs.Close
End Sub
</PRE>
</P></BODY>
</HTML>
