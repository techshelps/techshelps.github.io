<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filter Property</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Filter Property</h2>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Applies To</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Dynaset-Type <b>Recordset </b>Object,<b>
Recordset </b>Object,<b> </b>Snapshot-Type <b>Recordset </b>Object.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Description</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Sets or returns a value that
determines the records included in a subsequently opened <b>Recordset</b>
object.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Settings and Return
Values</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

A string expression that
contains the WHERE clause of an SQL statement without the
reserved word WHERE. The data type is <b>String</b>.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Remarks</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Use the <b>Filter</b> property
to apply a filter to a dynaset- or Snapshot-Type <b>Recordset</b>
object.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

You can use the <b>Filter</b>
property to restrict the records returned from an existing object
when a new <b>Recordset</b> object is opened based on an existing
<b>Recordset</b> object.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The following example shows how
the <b>Filter</b> property can be used to return only the records
for customers who live in a particular region:</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

&nbsp;</p>

<pre>rstCustomers.Filter = &quot;Region = 'NY'&quot;
Set rstNYCustomers = rstCustomers.OpenRecordset()
</pre>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Notes</strong></p>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<SPAN CLASS="list">

<ul>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

In many cases, it's faster to open a
        new <b>Recordset</b> object using an SQL statement that
        includes a WHERE clause.</li>
    <li>

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Use the U.S. date format
        (month-day-year) when you filter fields containing dates,
        even if you're not using the U.S. version of the
        Microsoft Jet database engine; otherwise, the data may
        not be filtered as you expect. You can use the Visual
        Basic <b>Format</b> function to make this easier. For
        example: <pre>rstEmployees.Filter = &quot;HireDate &gt; #&quot; &amp; Format(mydate, &quot;m/d/yy&quot;) &amp; &quot;#&quot;</pre>
    </li>
</ul>
</SPAN>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>See Also</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<b>OpenRecordset </b>Method,<b>
Sort </b>Property.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Specifics (Microsoft
Access)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The data access <b>Filter</b>
property applies a filter to a <b>Recordset</b> object. You can
set it only from Visual Basic.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Note</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The Microsoft Access <b>Filter</b>
property applies a filter to a form. You can set it in a form's
property sheet in form Design view, in a macro, or from Visual
Basic.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

This example creates a
dynaset-type <b>Recordset</b> that contains only records for
orders shipped to the United Kingdom.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

&nbsp;</p>

<pre>Dim dbsNorthwind As Database
Dim rstOrders As Recordset, rstFiltered As Recordset
Set dbsNorthwind =  DBEngine.Workspaces(0).OpenDatabase(&quot;Northwind.mdb&quot;)
' Create dynaset-type Recordset.
Set rstOrders = dbsNorthwind.OpenRecordset(&quot;Orders&quot;, dbOpenDynaset)
rstOrders.Filter = &quot;ShipCountry = 'UK'&quot;        ' Set filter condition.
' Create filtered dynaset.
Set rstFiltered = rstOrders.OpenRecordset()
</pre>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Note</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

To change the contents of
rstOrders, you must set its <b>Filter</b> property, and then open
a second <b>Recordset</b> object based on rstOrders.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Tip</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

In some situations, it may be
more efficient to create the second <b>Recordset</b> object with
the conditions you want in one step. As a general rule, when you
know the data you want to select, it's usually more efficient to
create a <b>Recordset</b> with an SQL statement. This example
shows how you can create just one <b>Recordset</b> and obtain the
same results as in the preceding example:</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

&nbsp;</p>

<pre>Dim dbsNorthwind As Database, rstOrders As Recordset
Set dbsNorthwind =  DBEngine.Workspaces(0).OpenDatabase(&quot;Northwind.mdb&quot;)
Set rstOrders = dbsNorthwind.OpenRecordset(&quot;SELECT * FROM Orders &quot; &amp; _
    &quot;WHERE ShipCountry = 'UK';&quot;)</pre>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example (Microsoft
Access)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

The following example prompts
the user to enter the name of a country on which to filter, and
then sets the <b>Filter</b> property of a dynaset-type <b>Recordset</b>
object. For example, if the user enters &quot;Italy,&quot; the
filtered recordset will contain only those records in which the
ShipCountry field contains the value &quot;Italy.&quot;</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

Note that you first create a
dynaset-type <b>Recordset</b> object and set its <b>Filter</b>
property, then open a second dynaset-type <b>Recordset</b> object
based on the first. Setting the <b>Filter</b> property of the
first <b>Recordset</b> object doesn't actually affect the records
that it contains, so you need to create a second <b>Recordset</b>
object in order to see the effects of the filter.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

&nbsp;</p>

<pre>Sub SetRecordsetFilter()
    Dim dbs As Database, strInput As String
    Dim rstOrders As Recordset, rstFiltered As Recordset
</pre>

<pre>    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    ' Prompt for value on which to filter.
    strInput = InputBox(&quot;Enter name of country on which to filter.&quot;)
    ' Create dynaset-type Recordset object.
    Set rstOrders = dbs.OpenRecordset(&quot;Orders&quot;, dbOpenDynaset)
    ' Set filter condition.
    rstOrders.Filter = &quot;[ShipCountry] = '&quot; &amp; strInput &amp; &quot;'&quot;
    ' Create filtered dynaset-type Recordset object.
    Set rstFiltered = rstOrders.OpenRecordset()
    ' Populate recordset.
    rstFiltered.MoveLast
    ' Second Recordset object is now subset of the first.
    Debug.Print rstFiltered.RecordCount
End Sub
</pre>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Tip</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

In most situations, it is more
efficient to create the second <b>Recordset</b> object with the
desired conditions in one step. When you know what data you want
to select, it's generally more efficient to create a recordset
with an SQL statement. The following example shows how you can
create just one recordset and obtain the same results as in the
preceding example.</p>

<br>
</p>

<pre>Dim dbs As Database, rstOrders As Recordset, strInput As String
Set dbs = CurrentDb
strInput = InputBox(&quot;Enter name of country on which to filter.&quot;)
Set rstOrders = dbs.OpenRecordset(&quot;SELECT * FROM Orders &quot; &amp; _
    &quot;WHERE [ShipCountry] = '&quot; &amp; strInput &amp; &quot;';&quot;)</pre>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<strong>Example (Microsoft
Excel)</strong></p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

This example creates a new
recordset containing records of the Supplier recordset in the
NWINDEX.MDB database, and then it copies the recordset contents
onto Sheet1. These records contain only data on suppliers located
in Canada. The example copies a new, sorted recordset into
Microsoft Excel.</p>



	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

To create the NWINDEX.MDB
database, run the Microsoft Excel example for the <b>CreateDatabase
</b>method.</p>

<pre>Dim db As Database, rs As Recordset, sortedSet As Recordset
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; &quot;\NWINDEX.MDB&quot;)
Set rs = db.OpenRecordset(&quot;Supplier&quot;, dbOpenDynaset)
rs.Filter = &quot;[COUNTRY] = 'Canada'&quot;
Set sortedSet = rs.OpenRecordset()
Sheets(&quot;Sheet1&quot;).Activate
ActiveCell.CopyFromRecordset sortedSet
sortedSet.Close
rs.Close
db.Close</pre>
</BODY>

</html>
