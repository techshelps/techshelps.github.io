<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateTableDef Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>CreateTableDef Method</H2>Applies To</P>
<B>Database </B>Object.</P>
Description</P>
Creates a new <B>TableDef</B> object.</P>
Syntax</P>
<B>Set</B> <I>variable</I> = <I>database</I><B>.CreateTableDef(</B>[<I>name</I>[, <I>attributes</I>[, <I>source</I>[, <SPAN CLASS="Symbol">ú</SPAN><I>connect</I>]]]]<B>)</B></P>
The <B>CreateTableDef</B> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>variable</I></P></TD><TD VALIGN="TOP">A variable declared as an object data type <B>TableDef</B>.</P></TD></TR><TR><TD VALIGN="TOP"><I>database</I></P></TD><TD VALIGN="TOP">The variable name of the <B>Database</B> object you want to use to create the new <B>TableDef</B> object.</P></TD></TR><TR><TD VALIGN="TOP"><I>name</I></P></TD><TD VALIGN="TOP">A <B>String</B> variable that uniquely names the new <B>TableDef</B> object. See the <B>Name</B> property for details on valid <B>TableDef</B> names. </P></TD></TR><TR><TD VALIGN="TOP"><I>attributes</I></P></TD><TD VALIGN="TOP">A <B>Long</B> variable that indicates one or more characteristics of the new <B>TableDef</B> object. See the <B>Attributes</B> property for more information.</P></TD></TR><TR><TD VALIGN="TOP"><I>source</I></P></TD><TD VALIGN="TOP">A <B>String</B> variable containing the name of a table in an external database that is the original source of the data. The <I>source</I> string becomes the <B>SourceTableName</B> property setting of the new <B>TableDef</B> object.</P></TD></TR><TR><TD VALIGN="TOP"><I>connect</I></P></TD><TD VALIGN="TOP">A <B>String</B> variable containing information about the source of an open database, a database used in a pass-through query, or an attached table. See the <B>Connect</B> property for more information on valid connection strings.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>
Remarks</P>
If you omit one or more of the optional parts when you use <B>CreateTableDef</B>, you can use an appropriate assignment statement to set or reset the corresponding property before you append the new object to a collection. After you append the object, you can alter some but not all of its properties. See the individual property topics for more details.</P>
If <I>name</I> refers to an object that is already a member of the collection or you specify an invalid property in the <B>TableDef </B>or<B> Field</B> object you're appending, a trappable error occurs when you use the <B>Append</B> method.</P>
To remove a <B>TableDef</B> object from a collection, use the <B>Delete</B> method on the collection.</P>
See Also</P>
<B>Append </B>Method,<B> Attributes </B>Property,<B> Connect </B>Property,<B> Delete </B>Method,<B> Name </B>Property,<B> TableDef </B>Object.</P>
Example</P>
This example creates a new <B>TableDef</B> object in the Biblio.mdb database. </P>
<BR></P>
<PRE>Dim tdfTitleDetail As TableDef, fldComments As Field
Dim dbsBiblio As Database
Set dbsBiblio = DBEngine.Workspaces(0).OpenDatabase("Biblio.mdb")
' Create new TableDef.
Set tdfTitleDetail = dbsBiblio.CreateTableDef("Title Detail")
' Add field to tdfTitleDetail.
Set fldComments = tdfTitleDetail.CreateField("Comments",dbMemo)
tdfTitleDetail.Fields.Append fldComments
' Save TableDef definition by appending it to TableDefs collection.
dbsBiblio.TableDefs.Append tdfTitleDetail
</PRE>
Example (Microsoft Access)</P>
The following example creates a new <B>TableDef</B> object and appends it to the <B>TableDefs</B> collection of the current database.</P>
<BR></P>
<PRE>Sub NewTable()
    Dim dbs As Database, tdf As TableDef, fld As Field
    
    ' Return Database variable pointing to current database.
    Set dbs = CurrentDb
    ' Return TableDef object variable that points to new table.
    Set tdf = dbs.CreateTableDef("Contacts")
    ' Define new field in table.
    Set fld = tdf.CreateField("ContactName", dbText, 40)
    ' Append Field object to Fields collection of TableDef object.
    tdf.Fields.Append fld
    ' Append TableDef object to TableDefs collection of database.
    dbs.TableDefs.Append tdf
End Sub
</PRE>
Example (Microsoft Excel)</P>
See the <B>CreateDatabase</B> method example (Microsoft Excel).</P>
</P>
<P></P></BODY>
</HTML>
