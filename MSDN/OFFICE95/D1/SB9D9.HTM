<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenDatabase Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>OpenDatabase Method</H2>Applies To</P>
<B>Workspace </B>Object.</P>
Description</P>
Opens a specified database in a session and returns a reference to the <B>Database</B> object that represents it. The open database is automatically added to the <B>Databases </B>collection.</P>
Syntax</P>
<B>Set</B> <I>database</I> = [<I>workspace</I><B>.</B>]<B>OpenDatabase(</B><I>dbname</I>[, <I>exclusive</I>[, <I>read-only</I>[, <SPAN CLASS="Symbol">ú</SPAN><I>source</I>]]]<B>)</B></P>
The <B>OpenDatabase</B> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>database</I></P></TD><TD VALIGN="TOP">A variable of a <B>Database</B> object data type that references the <B>Database</B> object that you're opening.</P></TD></TR><TR><TD VALIGN="TOP"><I>workspace</I></P></TD><TD VALIGN="TOP">A variable of a <B>Workspace </B>object data type that references the existing <B>Workspace</B> object that will contain the database.</P></TD></TR><TR><TD VALIGN="TOP"><I>dbname</I></P></TD><TD VALIGN="TOP">A string expression that is the name of an existing database file.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">Some considerations apply when using <I>dbname</I>:</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    If it refers to a database that is already open for exclusive access by another user, an error occurs.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    If it doesn't refer to an existing database or valid ODBC data source name, an error occurs. (See Remarks for more information on opening ODBC databases.)</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    If it's a zero-length string ("") and <I>source</I> is "ODBC;", a dialog box listing all registered ODBC data source names is displayed so the user can select a database. (See Remarks for more information on opening ODBC databases.)</P></TD></TR><TR><TD VALIGN="TOP"><I>exclusive</I></P></TD><TD VALIGN="TOP">A Boolean expression that is <B>True</B> if the database is to be opened for exclusive (nonshared) access and <B>False</B> if the database is to be opened for shared access. If you omit this argument, the database is opened for shared access.</P></TD></TR><TR><TD VALIGN="TOP"><I>read-only</I></P></TD><TD VALIGN="TOP">A Boolean value that is <B>True</B> if the database is to be opened for read-only access and <B>False</B> if the database is to be opened for read/write access. If you omit this argument, the database is opened for read/write access.</P></TD></TR><TR><TD VALIGN="TOP"><I>source</I></P></TD><TD VALIGN="TOP">A string expression used for opening the database, including databases with passwords. Note that the <B>NewPassword</B> method, when used on a <B>Database</B> object, changes the password parameter that appears in the "PWD=..." part of this argument. You must supply the <I>exclusive</I> and <I>read-only</I> arguments to supply a source string. See the <B>Connect</B> property for syntax, and see Remarks for more information on opening ODBC databases.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>
Remarks</P>
To close a database, and thus remove its <B>Database</B> object from the <B>Databases</B> collection, use the <B>Close</B> method on the object.</P>
Because attached tables on ODBC databases improve performance, it's preferable to use them rather than opening ODBC databases directly. To open an ODBC database directly, you must specify a registered ODBC data source name. If the filename has an extension, it's required. If your network supports it, you can also specify a network path, such as:</P>
<BR></P>
<PRE>"\\MYSERVER\MYSHARE\MYDIR\MYDB.mdb"<BR></PRE>
For more information about ODBC drivers, such as SQL Server, see the Help file provided with the driver. </P>
<P></P>
Note</P>
The <I>source</I> argument is expressed in two parts: the database type, followed by a semicolon (;) and the optional arguments. The database type, such as "ODBC;" or "FoxPro 2.5" must be provided first. The optional arguments follow in no particular order, separated by semicolons. One of the parameters may be the password (if one is assigned). For example, .source = ("FoxPro 2.5; pwd=mypassword"). See the <I>source</I> argument, defined earlier in this topic, for more information.</P>
<P></P>
See Also</P>
<B>Close </B>Method,<B> Connect </B>Property.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, use the <B>CurrentDb</B> function to point a <B>Database</B> variable to the current database, rather than using the <B>OpenDatabase</B> method. For example, you can use the following code to get a variable that represents the current database.</P>
<BR></P>
<PRE>Dim dbsCurrent as Database
set dbsCurrent = CurrentDb
</PRE>
Use the <B>OpenDatabase</B> method to open a database other than the current database.</P>
Example</P>
This example opens the Employees table in the database in the default <B>Workspace</B> object. If the database can't be opened (for example, if it has already been opened for exclusive access by another user in a multiuser environment), an error occurs and a message is displayed. Then the example updates the Title field of the Employees table.</P>
<BR></P>
<PRE>Function UpdateNorthwind () As Integer
    Dim wspDefault As Workspace, dbsNorthwind As Database
    Dim rstEmployees As Recordset
    Dim intErrorCondition As Integer, intUpdateNorthwind As Integer
    intUpdateNorthwind = True
    intErrorCondition = False
    On Error GoTo DBErrorHandler    ' Enable error trapping.
    Set wspDefault = DBEngine.Workspaces(0)</PRE>
<P></P>
<BR></P>
<PRE>    ' Open database.
    Set dbsNorthwind = wspDefault.OpenDatabase("Northwind.mdb")
    If intErrorCondition = False Then
        On Error GoTo TableErrorHandler    ' Enable error trapping.
        ' Open table.
        Set rstEmployees = dbsNorthwind.OpenRecordset("Employees")
        If intErrorCondition = False Then
            On Error GoTo EditErrorHandler    ' Enable error trapping.
            Do Until rstEmployees.EOF
                If rstEmployees![Title] = "Sales Representative" Then
                    rstEmployees.Edit    ' Enable editing.
                    rstEmployees![Title] = "Account Executive"   
                    rstEmployees.Update    ' Save changes.
                End If
                rstEmployees.MoveNext    ' Move to next record.
            Loop
        End If
        dbsNorthwind.Close    ' Close database.
    End If
    On Error GoTo 0        ' Disable error trapping.
    Exit Function
DBErrorHandler:
    intErrorCondition = True
    intUpdateNorthwind = False
    MsgBox "Can't open database.", vbExclamation
    Resume Next
TableErrorHandler:
    intErrorCondition = True
    intUpdateNorthwind = False
    MsgBox "Can't open Employees table.", vbExclamation
    Resume Next
EditErrorHandler:
    intErrorCondition = True
    UpdateDb = False
    MsgBox "Can't edit Employees table.", vbExclamation
    Resume Next
End Function
</PRE>
Example (Microsoft Access)</P>
The following example returns a Database variable that points to the current database. Then it opens a different database called Another.mdb, using the <B>OpenDatabase</B> method. The procedure then enumerates all <B>TableDef</B> objects in both databases.</P>
<BR></P>
<PRE>Sub OpenAnother()
    Dim dbs as Database, dbsAnother as Database
    Dim tdf as TableDef
    
    ' Return Database variable representing current database.
    Set dbs = CurrentDb</PRE>
<P></P>
<BR></P>
<PRE>    ' Return Database variable representing Another.mdb.
    Set dbsAnother = DBEngine.Workspaces(0).OpenDatabase("Another.mdb")
    ' Enumerate all TableDef objects in each database.
    For Each tdf in dbs.TableDefs
        Debug.Print tdf.Name
    Next tdf
    For Each tdf in dbsAnother.TableDefs
        Debug.Print tdf.Name
    Next tdf
End Sub
</PRE>
Example (Microsoft Excel)</P>
This example displays a custom dialog box containing a list of all databases with the filename extension .MDB that are located in the Microsoft Excel folder, and then it opens the database selected by the user.</P>
<BR></P>
<PRE>Dim a(100), db As Database
i = 0
ChDrive "C"
ChDir Application.Path
a(i) = Dir("*.MDB")
If a(i) = "" Then
    MsgBox "You have no databases in the Microsoft Excel directory"
    Exit Sub
End If
Do
    i = i + 1
    a(i) = Dir()
Loop Until a(i) = ""
Set theDialog = DialogSheets.Add
Set list1 = theDialog.ListBoxes.Add(78, 42, 84, 80)
For counter = 0 To i - 1
    list1.AddItem a(counter)
Next
Application.ScreenUpdating = True
theDialog.Show
Set db = Workspaces(0).OpenDatabase(a(list1.Value - 1))
MsgBox "The " &amp; db.Name &amp; " database is now open"
' use database here
db.Close

</PRE>
<P></P></BODY>
</HTML>
