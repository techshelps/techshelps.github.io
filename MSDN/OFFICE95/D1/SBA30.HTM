<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Like Operator</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Like Operator</H2>Description</P>
Used to compare a string expression to a pattern in an SQL expression.</P>
Syntax</P>
Expression <B>Like</B> "<I>pattern</I>"</P>
<P></P>
The <B>Like</B> operator syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="75pt" VALIGN="TOP"><COL WIDTH="273pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>expression</I></P></TD><TD VALIGN="TOP">SQL expression used in a WHERE clause.</P></TD></TR><TR><TD VALIGN="TOP"><I>pattern</I></P></TD><TD VALIGN="TOP">String or character string literal against which <I>expression</I> is compared.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
You can use the <B>Like</B> operator to find values in a field that match the pattern you specify. For <I>pattern</I>, you can specify the complete value (for example, <B>Like</B> "Smith"), or you can use wildcard characters like those recognized by the operating system to find a range of values (for example, <B>Like</B> "Sm*").</P>
In an expression, you can use the <B>Like</B> operator to compare a field value to a string expression. For example, if you enter <B>Like</B> "C*" in an SQL query, the query returns all field values beginning with the letter C. In a parameter query, you can prompt the user for a pattern to search for. </P>
The following example returns data that begins with the letter P followed by any letter between A and F and three digits:</P>
<BR></P>
<PRE>Like "P[A-F]###"
</PRE>
See Also</P>
SQL Expressions.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, you can use the <B>Like</B> operator in a query expression, in a macro or module, or in a calculated control on a form or report.</P>
The case sensitivity and character sort order of the <B>Like</B> operator depend on the setting of the New Database Sort Order box on the General tab of the Options dialog box, available by clicking Options on the Tools menu. By default, the New Database Sort Order is set to General, which specifies a case-insensitive sort order for the database.</P>
You can alter the sort order for an individual Visual Basic module by changing the <B>Option</B> <B>Compare</B> statement in the Declarations section of a module. By default the Declarations section is set to <B>Option</B> <B>Compare</B> <B>Database</B>, which specifies the same sort order that currently applies to the rest of the database. If the module doesn't contain an <B>Option</B> <B>Compare</B> statement, the default string-comparison method is <B>Binary</B>, which is case-sensitive.</P>
You can use the <B>Like</B> operator to specify inexact criteria in the query design grid. For example, if you type Like "C*" in the Criteria row of the query design grid, the query returns all field values beginning with the letter C.</P>
<P></P>
In a parameter query, you can use the <B>Like</B> operator to prompt the user for a pattern to search for. For example, suppose you have an Employees table that includes a LastName field. In the Query window, create a new query by adding the Employees table and dragging the LastName field to the grid. Enter the following expression in the Criteria row.</P>
<BR></P>
<PRE>Like [Enter first few letters of name:]&amp;"*"
</PRE>
When the query is run, a dialog box prompts the user with "Enter first few letters of name:". If the user types <B>Sm</B> in the dialog box, the query looks for the pattern Sm* — that is, all names beginning with the letters Sm.</P>
You can use <B>Like</B> in an expression as a setting for the <B>ValidationRule</B> property or as a macro condition. For example, you can restrict data entered in a text box control to an inexact specification. In the <B>ValidationRule</B> property of the text box, enter the following expression.</P>
<BR></P>
<PRE>Like "P[A-F]###"
</PRE>
Data entered in this text box must now begin with the letter P, followed by any letter between A and F and three digits.</P>
Example</P>
This example returns a list of employees whose names begin with the letters A through D.</P>
<BR></P>
<PRE>SELECT * FROM Employees WHERE LastName Like "[A-D]*"
</PRE>
The following table shows how you can use <B>Like</B> to test expressions for different patterns.</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="56pt" VALIGN="TOP"><COL WIDTH="98pt" VALIGN="TOP"><COL WIDTH="112pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><BR>Kind of match</P></TD><TD VALIGN="TOP"><BR>Pattern </P></TD><TD VALIGN="TOP">Match <BR>(returns True)</P></TD><TD VALIGN="TOP">No match <BR>(returns False)</P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">Multiple characters</P></TD><TD VALIGN="TOP">"a*a"</P></TD><TD VALIGN="TOP">"aa", "aBa", "aBBBa"</P></TD><TD VALIGN="TOP">"aBC"</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">"*ab*"</P></TD><TD VALIGN="TOP">"abc", "AABB", "Xab"</P></TD><TD VALIGN="TOP">"aZb", "bac"</P></TD></TR><TR><TD VALIGN="TOP">Special character</P></TD><TD VALIGN="TOP">"a[*]a"</P></TD><TD VALIGN="TOP">"a*a"</P></TD><TD VALIGN="TOP">"aaa"</P></TD></TR><TR><TD VALIGN="TOP">Multiple characters</P></TD><TD VALIGN="TOP">"ab*"</P></TD><TD VALIGN="TOP">"abcdefg", "abc"</P></TD><TD VALIGN="TOP">"cab", "aab"</P></TD></TR><TR><TD VALIGN="TOP">Single character</P></TD><TD VALIGN="TOP">"a?a"</P></TD><TD VALIGN="TOP">"aaa", "a3a", "aBa"</P></TD><TD VALIGN="TOP">"aBBBa"</P></TD></TR><TR><TD VALIGN="TOP">Single digit</P></TD><TD VALIGN="TOP">"a#a"</P></TD><TD VALIGN="TOP">"a0a", "a1a", "a2a"</P></TD><TD VALIGN="TOP">"aaa", "a10a"</P></TD></TR><TR><TD VALIGN="TOP">Range of characters</P></TD><TD VALIGN="TOP">"[a-z]"</P></TD><TD VALIGN="TOP">"f", "p", "j"</P></TD><TD VALIGN="TOP">"2", "&amp;"</P></TD></TR><TR><TD VALIGN="TOP">Outside a range</P></TD><TD VALIGN="TOP">"[!a-z]"</P></TD><TD VALIGN="TOP">"9", "&amp;", "%"</P></TD><TD VALIGN="TOP">"b", "a"</P></TD></TR><TR><TD VALIGN="TOP">Not a digit</P></TD><TD VALIGN="TOP">"[!0-9]"</P></TD><TD VALIGN="TOP">"A", "a", "&amp;", "~"</P></TD><TD VALIGN="TOP">"0", "1", "9"</P></TD></TR><TR><TD VALIGN="TOP">Combined</P></TD><TD VALIGN="TOP">"a[!b-m]#"</P></TD><TD VALIGN="TOP">"An9", "az0", "a99"</P></TD><TD VALIGN="TOP">"abc", "aj0"</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>
<P></P>
<P></P></BODY>
</HTML>
