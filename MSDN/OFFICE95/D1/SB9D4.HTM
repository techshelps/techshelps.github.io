<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Name Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Name Property</H2>Applies To</P>
<B>Container </B>Object,<B> Database </B>Object,<B> Document </B>Object,<B> </B>Dynaset-Type <B>Recordset </B>Object,<B> Field </B>Object,<B> Group </B>Object,<B> Index </B>Object,<B> Parameter </B>Object,<B> Property </B>Object,<B> QueryDef </B>Object,<B> Recordset </B>Object,<B> Relation </B>Object,<B> </B>Snapshot-Type <B>Recordset </B>Object,<B> </B>Table-Type <B>Recordset </B>Object,<B> TableDef </B>Object,<B> User </B>Object,<B> Workspace </B>Object.</P>
Description</P>
Sets or returns a user-defined name for a data access object. For an object not appended to a collection, this property is read/write.</P>
Settings and Return Values</P>
The setting or return value is a string expression that specifies a name. The name must start with a letter and can contain a maximum of 64 characters. It can include numbers and underscore characters ( _ ) but can't include punctuation or spaces. The data type is <B>String</B>.</P>
Remarks</P>
<B>TableDef</B> and <B>QueryDef</B> objects can't share the same name, nor can <B>User</B> and <B>Group</B> objects.</P>
The <B>Name</B> property of a <B>Recordset</B> object opened using an SQL statement is the first 256 characters of the SQL statement.</P>
You can use an object's <B>Name</B> property with the <B>Dim</B> statement in code to create other instances of the object.</P>
<P></P>
Note</P>
For many of the <B>Database</B> objects, the <B>Name</B> property reflects the name as known to the <B>Database</B> object, as in the name of a <B>TableDef</B>, <B>Field</B>, or <B>QueryDef</B> object. There is no direct link between the name of the <B>Database</B> object and the object variable used to reference it.</P>
<P></P>
The read/write usage of the <B>Name</B> property depends on the type of object it applies to, and whether or not the object is has been appended to a collection.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="180pt" VALIGN="TOP"><COL WIDTH="168pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Object</P></TD><TD VALIGN="TOP">Usage</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>Container</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Database</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Document</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Field</B></P></TD><TD VALIGN="TOP"><B></B></P></TD></TR><TR><TD VALIGN="TOP">  Unappended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">  Appended to <B>Index</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP">  Appended to <B>QueryDef</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP">  Appended to <B>Recordset</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP">  Appended to <B>TableDef</B> (native)</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="180pt" VALIGN="TOP"><COL WIDTH="168pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Object</P></TD><TD VALIGN="TOP">Usage</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>Field</B> </P></TD><TD VALIGN="TOP"><B></B></P></TD></TR><TR><TD VALIGN="TOP">  Appended to <B>TableDef</B> (linked)</P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP">  Appended to <B>Relation</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Group</B></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">  Unappended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">  Appended</P></TD><TD VALIGN="TOP">Read only</P></TD></TR><TR><TD VALIGN="TOP"><B>Index</B></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">  Unappended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">  Appended</P></TD><TD VALIGN="TOP">Read only</P></TD></TR><TR><TD VALIGN="TOP"><B>Parameter</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Property</B></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">  Unappended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">  Appended</P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP">  Built-in</P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>QueryDef</B></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">  Unappended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">  Temporary</P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP">  Appended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP"><B>Recordset</B></P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Relation</B></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">  Unappended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">  Appended</P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>TableDef</B></P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP"><B>User</B></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">  Unappended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">  Appended</P></TD><TD VALIGN="TOP">Read-only</P></TD></TR><TR><TD VALIGN="TOP"><B>Workspace</B></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">  Unappended</P></TD><TD VALIGN="TOP">Read/write</P></TD></TR><TR><TD VALIGN="TOP">  Appended</P></TD><TD VALIGN="TOP">Read-only</P></TD></TR></TBODY></TABLE>
<BR></P><P> </P>
See Also</P>
<B>CreateDatabase </B>Method,<B> CreateField </B>Method,<B> CreateIndex </B>Method,<B> CreateQueryDef </B>Method.</P>
Example</P>
This example creates a <B>TableDef</B> object and then names it Parts ID.</P>
<BR></P>
<PRE>Dim dbsNorthwind As Database, tdfPartsID As TableDef
Set dbsNorthwind =  DBEngine.Workspaces(0).OpenDatabase("Northwind.mdb")
Set tdfPartsID = dbsNorthwind.CreateTableDef()</PRE>
<P></P>
<BR></P>
<PRE>tdfPartsID.Name = "Parts ID"
...    ' Create fields.
dbsNorthwind.TableDefs.Append tdfPartsID
</PRE>
Example (Microsoft Access)</P>
The following example creates two new <B>TableDef</B> objects and names them. The name of the first <B>TableDef</B> object is included as an argument to the <B>CreateTableDef</B> method. The name of the second <B>TableDef</B> object is set using the <B>Name</B> property, after the <B>TableDef</B> object has been created.</P>
Note that you must define fields in the table before the <B>TableDef</B> object can be appended to the <B>TableDefs</B> collection.</P>
<BR></P>
<PRE>Sub NameNewTables()
    Dim dbs As Database
    Dim tdfDefinitions As TableDef, tdfSynonyms as TableDef

    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    ' Create and name TableDef object.
    Set tdfDefinitions = dbs.CreateTableDef("Definitions")
    ' Create second TableDef object.
    Set tdfSynonyms = dbs.CreateTableDef("")
    ' Set Name property for second TableDef object.
    tdfSynonyms.Name = "Synonyms"
    .                            ' Create fields.
    .
    .
    dbs.TableDefs.Append tdfDefinitions
    dbs.TableDefs.Append tdfSynonyms
End Sub
</PRE>
Example (Microsoft Excel)</P>
This example enters in the active cell on Sheet1 the name of the first recordset in the NWINDEX.MDB database.</P>
To create the NWINDEX.MDB database, run the Microsoft Excel example for the <B>CreateDatabase </B>method.</P>
<BR></P>
<PRE>Dim db As Database, td As TableDef
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Set td = db.TableDefs(0)
Sheets("Sheet1").Activate
ActiveCell.Value = td.Name
db.Close

</PRE>
<P></P></BODY>
</HTML>
