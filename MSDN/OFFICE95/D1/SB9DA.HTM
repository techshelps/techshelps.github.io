<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenRecordset Method</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>OpenRecordset Method</H2>Applies To</P>
<B>Database </B>Object,<B> </B>Dynaset-Type <B>Recordset </B>Object,<B> QueryDef </B>Object,<B> Recordset </B>Object,<B> </B>Snapshot-Type <B>Recordset </B>Object,<B> </B>Table-Type <B>Recordset </B>Object,<B> TableDef </B>Object.</P>
Description</P>
Creates a new <B>Recordset</B> object and appends it to the <B>Recordsets</B> collection.</P>
Syntax</P>
<B>Set</B> <I>variable</I> = <I>database</I><B>.OpenRecordset(</B><I>source</I>[, <I>type</I>[, <I>options</I>]]<B>)</B></P>
<B>Set</B> <I>variable</I> = <I>object</I><B>.OpenRecordset(</B>[<I>type</I>[, <I>options</I>]]<B>)</B></P>
The <B>OpenRecordset</B> method syntax has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>variable</I></P></TD><TD VALIGN="TOP">A variable that has been declared as an object data type <B>Recordset</B>.</P></TD></TR><TR><TD VALIGN="TOP"><I>database</I></P></TD><TD VALIGN="TOP">The name of an existing <B>Database</B> object you want to use to create the new <B>Recordset</B>.</P></TD></TR><TR><TD VALIGN="TOP"><I>object</I></P></TD><TD VALIGN="TOP">The name of an existing <B>QueryDef</B>, <B>Recordset</B>, or <B>TableDef</B> object you want to use to create the new <B>Recordset</B>. This argument can't be the name of a forward-only scrolling snapshot.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">If <I>object</I> refers to a dynaset or Snapshot-Type <B>Recordset</B> object, the type of the new object is the same as that of the <B>Recordset</B> specified by <I>object</I>. If <I>object</I> refers to a Table-Type <B>Recordset</B> object, the type of the new object is a Dynaset-Type <B>Recordset</B>.</P></TD></TR><TR><TD VALIGN="TOP"><I>source</I></P></TD><TD VALIGN="TOP">A <B>String</B> specifying the source of the records for the new <B>Recordset</B>. The source can be a table name, a query name, or an SQL statement that returns records. For Table-Type <B>Recordset</B> objects, the source can only be a table name.</P></TD></TR><TR><TD VALIGN="TOP"><I>type</I></P></TD><TD VALIGN="TOP">If you don't specify a type, <B>OpenRecordset</B> creates a Table-Type <B>Recordset</B> if possible. If you specify an attached table or query, <B>OpenRecordset</B> creates a Dynaset-Type <B>Recordset</B>. This value can be one of the following <B>Integer</B> constants:</P></TD></TR><TR><TD VALIGN="TOP"><I></I></P></TD><TD VALIGN="TOP">u    <B>dbOpenTable</B> — to open a Table-Type <B>Recordset</B> object. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbOpenDynaset</B> — to open a Dynaset-Type <B>Recordset</B> object. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbOpenSnapshot</B> — to open a Snapshot-Type <B>Recordset</B> object. </P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>options</I></P></TD><TD VALIGN="TOP">Any combination (or none) of the following <B>Integer </B>constants specifying characteristics of the new <B>Recordset</B>, such as restrictions on other users' ability to edit and view it:</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbAppendOnly</B> — You can append only new records (Dynaset-Type <B>Recordset</B> only).</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbForwardOnly</B> — The <B>Recordset</B> is a forward-only scrolling snapshot. Note that <B>Recordset</B> objects created with this option cannot be cloned and only support the <B>MoveNext</B> method to move through the records.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbSQLPassThrough</B> — SQL pass-through. Causes the SQL statement to be passed to an ODBC database for processing.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbSeeChanges</B> — Generate a run-time error if another user is changing data you are editing. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbDenyWrite</B> — Other users can't modify or add records. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbDenyRead</B> — Other users can't view records (Table-Type <B>Recordset</B> only).</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbReadOnly</B> — You can only view records; other users can modify them. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbInconsistent</B> — Inconsistent updates are allowed (Dynaset-Type <B>Recordset</B> only).</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">u    <B>dbConsistent</B> — Only consistent updates are allowed (Dynaset-Type <B>Recordset</B> only).</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>
Note</P>
The constants <B>dbConsistent</B> and <B>dbInconsistent</B> are mutually exclusive. You can use one or the other, but not both in a given instance of <B>OpenRecordset</B>.</P>
<P></P>
Remarks</P>
If <I>object</I> refers to a <B>QueryDef</B>, or a dynaset- or Snapshot-Type <B>Recordset</B>, or if <I>source</I> refers to an SQL statement or a <B>TableDef</B> that represents an attached table, you can't use <B>dbOpenTable</B> for the <I>type</I> argument; if you do, a trappable error occurs.</P>
If you want to use an SQL pass-through query on an attached table, you must first set the <B>Connect </B>property of the attached table's database to a valid ODBC connect string. For more information on this, see the <B>Connect</B> property.</P>
Use the <B>dbSeeChanges</B> flag if you want to trap changes made by another user or another program on your machine when you're editing or deleting the same record. For example, if two users start editing the same record, the first user to execute the <B>Update</B> method succeeds. When the <B>Update</B> method is executed by the second user, a run-time error occurs. Similarly, if the second user tries to use the <B>Delete</B> method to delete the record, and it has already been changed by the first user, a run-time error also occurs.</P>
Typically, if the user gets this error while updating, your code should refresh the contents of the fields and retrieve the newly modified values. If the error occurs in the process of deleting, your code could display the new record data to the user and a message indicating that the data has recently changed. At this point, your code can request a confirmation that the user still wants to delete the record.</P>
<P></P>
Tip</P>
Use the forward-only scrolling option (<B>dbForwardOnly</B>) to improve performance when your application makes a single pass through a <B>Recordset</B> opened from an ODBC data source.</P>
<P></P>
When you close a <B>Recordset</B> using the <B>Close</B> method, it's automatically deleted from the <B>Recordsets</B> collection.</P>
See Also</P>
<B>Connect </B>Property,<B> Type </B>Property.</P>
Example</P>
See the <B>Edit</B> method example.</P>
Example (Microsoft Access)</P>
The following example opens a Dynaset-Type <B>Recordset</B> object and prints the number of records in the <B>Recordset</B> object.</P>
<BR></P>
<PRE>Sub UKOrders()
    Dim dbs As Database, rst As Recordset
    Dim strSQL As String

    ' Return Database variable pointing to current database.
    Set dbs = CurrentDb
    strSQL = "SELECT * FROM Orders WHERE [ShipCountry] = 'UK'"
    Set rst = dbs.OpenRecordset(strSQL)
    rst.MoveLast
    Debug.Print rst.RecordCount
End Sub
</PRE>
Example (Microsoft Excel)</P>
This example displays a custom dialog box containing a list of all available recordsets in the NWINDEX.MDB database. The example opens a new recordset based on the recordset selected by the user and then copies the records onto Sheet1.</P>
To create the NWINDEX.MDB database, run the Microsoft Excel example for the <B>CreateDatabase </B>method.</P>
<BR></P>
<PRE>Dim db As Database, rs1 As Recordset
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Application.ScreenUpdating = False
Set theDialog = DialogSheets.Add
Set list1 = theDialog.ListBoxes.Add(78, 42, 84, 80)
Set label1 = theDialog.Labels.Add(78, 125, 240, 25)
label1.Text = "Recordsets for " &amp; db.Name
i = 0</PRE>
<P></P>
<BR></P>
<PRE>Do Until i = db.TableDefs.Count
    list1.AddItem (db.TableDefs(i).Name)
    i = i + 1
Loop
Sheets("Sheet1").Activate
Application.ScreenUpdating = True
If theDialog.Show = True Then
    If list1.Value = 0 Then
        MsgBox "You have not selected an item from the list."
    Else
        Set rs1 = db.OpenRecordset(db.TableDefs(list1.Value - 1).Name)
        ActiveCell.CopyFromRecordset rs1
    End If
End If
rs1.Close
db.Close
</PRE>
</P></BODY>
</HTML>
