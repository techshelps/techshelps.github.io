<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EditMode Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>EditMode Property</H2>Applies To</P>
Dynaset-Type <B>Recordset </B>Object,<B> Recordset </B>Object,<B> </B>Snapshot-Type <B>Recordset </B>Object,<B> </B>Table-Type <B>Recordset </B>Object.</P>
Description</P>
Returns a value that indicates the state of editing for the current record.</P>
Return Values</P>
The return value is an integer that indicates the state of editing. The data type is <B>Integer</B>.</P>
The possible return values are:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="115pt" VALIGN="TOP"><COL WIDTH="233pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Value</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><B>dbEditNone</B></P></TD><TD VALIGN="TOP">No editing operation is in progress.</P></TD></TR><TR><TD VALIGN="TOP"><B>dbEditInProgress</B></P></TD><TD VALIGN="TOP"><B>Edit</B> method has been invoked, and the current record is in the copy buffer.</P></TD></TR><TR><TD VALIGN="TOP"><B>dbEditAdd</B></P></TD><TD VALIGN="TOP"><B>AddNew</B> method has been invoked, and the current record in the copy buffer is a new record that hasn't been saved in the database.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
These constants are listed in the Data Access (DAO) object library in the Object Browser.</P>
Remarks</P>
The <B>EditMode</B> property is most useful when you want to depart from the default functionality of a <B>Data</B> control. You can check the value of the <B>EditMode</B> property and the value of the <I>action</I> parameter in the Validate event procedure to determine whether to invoke the <B>UpdateRecord</B> method.</P>
You can also check to see if the <B>LockEdits</B> property setting is <B>True</B> (-1) and the <B>EditMode</B> property setting is <B>dbEditInProgress</B> to determine whether the current data page is locked.</P>
See Also</P>
<B>CancelUpdate </B>Method,<B> LockEdits </B>Property.</P>
Example</P>
This example checks the <B>EditMode</B> property of a <B>Recordset</B> object and completes the update if the <B>AddNew</B> method has been invoked or the object is being edited.</P>
<BR></P>
<PRE>Function PostChange(rstTarget as Recordset) As Integer
    If (rstTarget.EditMode = dbEditAdd) or  _
            (rstTarget.EditMode = dbEditInProgress) Then
        rstTarget.Update
        PostChange = True
    Else
        PostChange = False
    End If
End Function
</PRE>
<P></P>
Example (Microsoft Excel)</P>
This example checks to see whether the Customer recordset in the NWINDEX.MDB database can be edited. If so, the example updates the value of the first field of the first record with the value in cell C3 on Sheet1.</P>
To create the NWINDEX.MDB database, run the Microsoft Excel example for the <B>CreateDatabase</B> method.</P>
<BR></P>
<PRE>Dim db As Database, rs As Recordset
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; "\NWINDEX.MDB")
Set rs = db.OpenRecordset("Customer")
If Not ((rs.EditMode = dbEditAdd) Or _
        (rs.EditMode = dbEditInProgress)) Then
    rs.Edit
    rs.Fields(0).Value = Worksheets(1).Cells(3, 3).Value
    rs.Update
Else
    MsgBox ("Cannot update database with cell value")
End If
rs.Close
db.Close
</PRE>
</P></BODY>
</HTML>
