<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GROUP BY Clause</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>GROUP BY Clause</H2>Description</P>
Combines records with identical values in the specified field list into a single record. A summary value is created for each record if you include an SQL aggregate function, such as <B>Sum</B> or <B>Count</B>, in the SELECT statement.</P>
Syntax</P>
SELECT<I> fieldlist</I><BR>    FROM<I> table<BR>    </I>WHERE <I>criteria</I><BR>    GROUP BY <I>groupfieldlist</I></P>
A SELECT statement containing a GROUP BY clause has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>fieldlist</I></P></TD><TD VALIGN="TOP">The name of the field or fields to be retrieved along with any field-name aliases, SQL aggregate functions, selection predicates (ALL, DISTINCT, DISTINCTROW, or TOP), or other SELECT statement options.</P></TD></TR><TR><TD VALIGN="TOP"><I>table</I></P></TD><TD VALIGN="TOP">The name of the table from which records are retrieved. For more information, see the FROM clause.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>criteria</I></P></TD><TD VALIGN="TOP">Selection criteria. If the statement includes a WHERE clause, the Microsoft Jet database engine groups values after applying the WHERE conditions to the records.</P></TD></TR><TR><TD VALIGN="TOP"><I>groupfieldlist</I></P></TD><TD VALIGN="TOP">The names of up to 10 fields used to group records. The order of the field names in <I>groupfieldlist</I> determines the grouping levels from the highest to the lowest level of grouping.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
GROUP BY is optional.</P>
Summary values are omitted if there is no SQL aggregate function in the SELECT statement.</P>
<B>Null</B> values in GROUP BY fields are grouped and aren't omitted. However, <B>Null</B> values aren't evaluated in any SQL aggregate function.</P>
Use the WHERE clause to exclude rows you don't want grouped, and use the HAVING clause to filter records after they've been grouped.</P>
Unless it contains Memo or OLE Object data, a field in the GROUP BY field list can refer to any field in any table listed in the FROM clause, even if the field isn't included in the SELECT statement, provided the SELECT statement includes at least one SQL aggregate function. The Jet database engine can't group on Memo or OLE Object fields.</P>
All fields in the SELECT field list must either be included in the GROUP BY clause or be included as arguments to an SQL aggregate function.</P>
See Also</P>
HAVING Clause, ORDER BY Clause, SELECT Statement, SELECT...INTO Statement, SQL Aggregate Functions.</P>
Specifics (Microsoft Access)</P>
Including a GROUP BY clause in an SQL statement is equivalent to creating a totals query in the Query window and setting the Total cell to Group By for the appropriate field.</P>
Example</P>
Some of the following examples assume the existence of a hypothetical Department field in an Employees table.</P>
This example creates a list of unique department names and the number of employees in each of those departments.</P>
<BR></P>
<PRE>SELECT Department, Count([Department]) AS Tally FROM Employees <BR>GROUP BY Department;
</PRE>
For each unique job title, this example calculates the number of Sales department employees who have that title.</P>
<BR></P>
<PRE>SELECT Title, Count(Title) AS Tally FROM Employees <BR>WHERE Department = 'Sales' GROUP BY Title;
</PRE>
<P></P>
This example calculates the number of items in stock for each combination of item number and color. </P>
<BR></P>
<PRE>SELECT Item, Sum(Units) AS Tally FROM ItemsInStock GROUP BY Item, Color;
</PRE>
</P></BODY>
</HTML>
