<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Table-Type Recordset Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Table-Type Recordset Object</H2>Description</P>
A table-type <B>Recordset</B> object is a representation in code of a base table you can use to add, change, or delete records from a table. Only the current record is loaded into memory. A predefined index is used to determine the order of the records in the <B>Recordset</B> object.</P>
<P></P>
Remarks</P>
To create a table-type <B>Recordset</B> object, use the <B>OpenRecordset</B> method on an open <B>Database</B> object.</P>
A table-type <B>Recordset</B> object can be created with a base table of a Microsoft Jet database, but not with an ODBC or attached table. The table-type <B>Recordset</B> object can be used with ISAM databases (like FoxPro, dBASE, Paradox, or Btrieve) when opened directly.</P>
Unlike dynaset- or snapshot-type <B>Recordset</B> objects, the table-type <B>Recordset</B> object can't refer to more than one base table, and it can't be accessed using an SQL statement that filters or sorts the data. Generally, when you access a table-type <B>Recordset</B> object, you specify one of the predefined indexes for the table, which orders the data returned to your application. If the table doesn't have an index, the order of the data returned can't be guaranteed. If necessary, your application can create an index that returns records in a specific order. To choose a specific order for your table-type <B>Recordset</B> object, set the <B>Index</B> property to a valid index.</P>
To maintain data integrity, table-type <B>Recordset</B> objects are locked during the <B>Edit</B> and <B>Update</B> methods operations so that only one user can update a particular record at a time. When the Microsoft Jet database engine locks a record, it locks the entire 2K page containing the record.</P>
Two kinds of locking are used with non-ODBC tables — pessimistic and optimistic. ODBC-accessed tables always use optimistic locking. The locking conditions in effect during editing are determined by the <B>LockEdits</B> property.</P>
Properties</P>
<B>BOF</B>,<B> EOF</B> Properties; <B>Bookmark</B> Property; <B>Bookmarkable</B> Property; <B>DateCreated</B>, <B>LastUpdated</B> Properties; <B>EditMode</B> Property; <B>Index</B> Property; <B>LastModified</B> Property; <B>LockEdits</B> Property; <B>Name</B> Property; <B>NoMatch</B> Property; <B>PercentPosition</B> Property; <B>RecordCount</B> Property; <B>Restartable</B> Property; <B>Transactions</B> Property; <B>Type</B> Property; <B>Updatable</B> Property; <B>ValidationRule</B> Property; <B>ValidationText</B> Property.</P>
Methods</P>
<B>CancelUpdate </B>Method;<B> Clone </B>Method;<B> Close </B>Method;<B> Delete </B>Method;<B> Edit </B>Method;<B> GetRows </B>Method;<B> Move </B>Method;<B> MoveFirst</B>,<B> MoveLast</B>,<B> MoveNext</B>,<B> MovePrevious </B>Methods;<B> OpenRecordset </B>Method;<B> Seek </B>Method;<B> Update </B>Method.</P>
See Also</P>
<B>Index </B>Object;<B> OpenRecordset </B>Method;<B> Recordset </B>Object; Appendix, "Data Access Object Hierarchy."</P>
Example</P>
This example opens a table-type <B>Recordset</B> and selects an index for the <B>Recordset</B>. By setting an index, the Microsoft Jet database engine returns records in the order specified by the index. Without an index, table-type <B>Recordset</B> objects return records from the database table in no particular order.</P>
<BR></P>
<PRE>    Dim dbsExample As Database
    Dim rstTitles as Recordset
    ' Get workspace and database.</PRE>
<P></P>
<BR></P>
<PRE>    Set dbsExample = DBEngine.Workspaces(0).OpenDatabase("Biblio.mdb")
    Set rstTitles = dbsExample.OpenRecordset("Titles", dbOpenTable)
    rstTitles.Index = "MyIndex"
    ...
    ...
    ...
</PRE>
Example (Microsoft Access)</P>
The following example opens a table-type <B>Recordset</B> object, then prints the number of records in the <B>Recordset</B> object.</P>
<BR></P>
<PRE>Sub CountEmployees()
    Dim dbs As Database, tdf As TableDef, rst As Recordset

    ' Return Database object pointing to current database.
    Set dbs = CurrentDb
    Set rst = dbs.OpenRecordset("Employees", dbOpenTable)
    rst.MoveLast
    Debug.Print rst.RecordCount
End Sub
</PRE>
</P></BODY>
</HTML>
