<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Avg Function</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>Avg Function</H2>Description</P>
Calculates the arithmetic mean of a set of values contained in a specified field on a query.</P>
<P></P>
Syntax</P>
<B>Avg(</B><I>expr</I><B>)</B></P>
The <I>expr</I> placeholder represents a string expression identifying the field that contains the numeric data you want to average or an expression that performs a calculation using the data in that field. Operands in <I>expr</I> can include the name of a table field, a constant, or a function (which can be either intrinsic or user-defined but not one of the other SQL aggregate or domain aggregate functions).</P>
Remarks</P>
The average calculated by <B>Avg</B> is the arithmetic mean (the sum of the values divided by the number of values). You could use <B>Avg</B>, for example, to calculate average freight cost.</P>
The <B>Avg</B> function doesn't include any <B>Null</B> fields in the calculation.</P>
You can use <B>Avg</B> in a query expression and in the <B>SQL</B> property of a <B>QueryDef</B> object or when creating a <B>Recordset</B> object based on an SQL query.</P>
See Also</P>
SQL Aggregate Functions.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, you can use the <B>Avg</B> function in the query design grid, in an SQL statement in SQL view of the Query window, or in an SQL statement within Visual Basic code. You can also use the <B>Avg</B> function in a calculated control on a form or report.</P>
The <B>Avg</B> function is most useful in totals queries and crosstab queries. It functions the same way whether you create the query in the query design grid or as an SQL statement in SQL view.</P>
In the query design grid, you can create a new totals query by clicking the Totals button on the toolbar. The Total row is then inserted in the grid. You can set the Total cell beneath a field to the aggregate function to perform on the data in that field.</P>
For example, suppose you have an Orders table that has both a Freight field and a ShipCity field. You can create a query that displays the average freight cost for orders sent to each city to which your company ships. Create a new totals query, and drag the ShipCity field to the query design grid. The Total cell beneath the ShipCity field should be set to Group By. Drag the Freight field to the query design grid, and set the Total cell beneath it to Avg. When you run the query, it will display the average freight cost by city.</P>
You can view the SQL statement for this query by switching to SQL view. In this example, Microsoft Access creates the following SQL statement.</P>
<BR></P>
<PRE>SELECT DISTINCTROW Avg(Orders.Freight) AS AvgOfFreight, Orders.ShipCity
FROM Orders
GROUP BY Orders.ShipCity;
</PRE>
<P></P>
You can also use an SQL statement such as this one within Visual Basic code. For example, using the following code you can create a <B>Recordset</B> object based on the query defined by this SQL statement.</P>
<BR></P>
<PRE>Dim dbs As DatabAse, rst As Recordset, strSQL As String
Set dbs = CurrentDb
strSQL = "SELECT DISTINCTROW Avg(Orders.Freight) AS AvgOfFreight, "_<BR>    "Orders.ShipCity FROM Orders GROUP BY Orders.ShipCity;"
Set rst = dbs.OpenRecordset(strSQL)
</PRE>
To use the <B>Avg</B> function in a calculated control, set the control's <B>ControlSource</B> property to an expression containing the <B>Avg</B> function. For example, to display the average freight cost for a set of orders in a text box, enter the following expression in the <B>ControlSource</B> property of the text box.</P>
<BR></P>
<PRE>= Avg([Freight])
</PRE>
If you use the <B>Avg</B> function in a calculated control, you can restrict the set of records against which the function is performed by setting the form's <B>Filter</B> property.</P>
Example</P>
This example uses the Orders table to calculate the average freight charges for orders with freight charges over $100. </P>
<BR></P>
<PRE>SELECT Avg(Freight) AS [Average Freight] FROM Orders WHERE Freight &gt; 100;
</PRE>
Example (Microsoft Access)</P>
The following example assumes that you have an Orders table that contains a field called Freight. You can use the <B>Avg</B> function to calculate the average freight charges for orders with freight charges over $100. Enter the following expression in SQL view in the Query window.</P>
<BR></P>
<PRE>SELECT Avg([Freight]) AS [AverageFreight] FROM Orders WHERE [Freight] &gt; 100;
</PRE>
The next example creates a calculated control that displays the average freight charges for all of the underlying records in a form based on the same Orders table. Open a new form and set its <B>RecordSource</B> property to Orders. Enter this expression in a the <B>ControlSource</B> property of a text box on the form. To apply a condition that limits the calculation to only some records, such as those for orders greater than $100, set the form's <B>Filter</B> property.</P>
<BR></P>
<PRE>= Avg([Freight])
</PRE>
<P></P></BODY>
</HTML>
