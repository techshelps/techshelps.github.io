<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>User Object</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>User Object</h2>

Description</p>

A <b>User</b> object represents a user account that
has access permissions when a <b>Workspace</b> object operates as
a secure workgroup.</p>

Remarks</p>

You use <b>User</b> objects to establish and enforce
access permissions for the <b>Document</b> objects that represent
databases, tables, and queries. Also, if you know the properties
of a specific <b>User</b> object, you can create a new <b>Workspace</b>
object that has the same access permissions as the <b>User</b>
object.</p>

You can append an existing <b>User</b> object to the
<b>Users</b> collection of a <b>Group</b> object to give a user
account the access permissions for that <b>Group</b> object.
Alternatively, you can append the <b>Group</b> object to the <b>Groups</b>
collection in a <b>User</b> object to establish membership of the
user account in that group. If you use a <b>Users</b> or <b>Groups</b>
collection other than the one to which you just appended an
object, you may need to use the <b>Refresh</b> method.</p>

Using the properties of a <b>User</b> object, you
can:</p>
<SPAN CLASS="list">
<ul>
    <li>Check the <b>Name</b> property setting of an existing <b>User</b>
        object to determine its name. You can't check the <b>PID</b>
        and <b>Password</b> property settings of an existing <b>User</b>
        object.</li>
    <li>Set the <b>Name</b>, <b>PID</b>, and <b>Password</b>
        properties of a newly created, unappended <b>User</b>
        object to establish the identity of that <b>User</b>
        object. If you don't set the <b>Password</b> property,
        it's set to a zero-length string (&quot;&quot;).</li>
</ul>
</SPAN>
The Microsoft Jet database engine predefines two <b>User</b>
objects named Admin and Guest. The user Admin is a member of the <b>Group</b>
object named Admins and Users; the user Guest is a member only of
the <b>Group</b> object named Guests.</p>

You can refer to any other <b>User</b> object that
you create and append to a <b>Users</b> collection by its <b>Name</b>
property setting using this syntax:</p>

<b>Workspaces</b>(<i>n</i>)|<b>Group.Users(</b>&quot;<i>name</i>&quot;<b>)</b></p>

To create a new <b>User</b> object, use the <b>CreateUser</b>
method.</p>

Properties</p>

<b>Name</b> Property, <b>Password</b> Property, <b>PID</b>
Property.</p>

Methods</p>

<b>CreateGroup </b>Method,<b> NewPassword </b>Method.</p>

See Also</p>

<b>CreateUser </b>Method; Appendix, &quot;Data
Access Object Hierarchy.&quot;</p>

Specifics (Microsoft Access)</p>

You can create <b>User</b> objects to establish and
enforce permissions for Microsoft Access database objects as well
as for data access objects. For example, you can set security for
forms, reports, macros, and modules.</p>

A <b>User</b> object has a <b>Name</b> property that
you can use in setting permissions for a <b>Container</b> or <b>Document</b>
object. For example, you can assign the value of a <b>User</b>
object's <b>Name</b> property to the <b>UserName</b> property of
a <b>Container</b> or <b>Document</b> object. You can then set
the <b>Permissions</b> property of the <b>Container</b> or <b>Document</b>
object to establish permissions for the user defined by the <b>UserName</b>
property. Or you can read the <b>Permissions</b> property to
determine existing permissions for that user.</p>

Example</p>

See the <b>Group</b> object example.</p>

Example (Microsoft Access)</p>

The following example creates a new <b>User</b>
object and appends it to the <b>Users</b> collection of a <b>Workspace</b>
object. It then creates a new <b>Group</b> object and appends it
to the <b>Groups</b> collection of the <b>Workspace</b> object.
The new <b>User</b> object is also appended to the <b>Users</b>
collection of the <b>Group</b> object. The new user is then given
retrieval permissions on tables.</p>

Note that in order to assign users to groups, you
must either append a <b>User</b> object to the <b>Users</b>
collection of a <b>Group</b> object, or append a <b>Group</b>
object to the <b>Groups</b> collection of a <b>User</b> object.
It doesn't matter which option you choose; either will result in
the specified user being included in the specified group.</p>

<br>
</p>

<pre>Sub NewTablesUser()
    Dim wsp As Workspace, dbs As Database
    Dim usr As User, grp As Group, usrMember As User
    Dim ctr As Container, doc As Document

    Set wsp = DBEngine.Workspaces(0)
    ' Return Database object pointing to current database.
    Set dbs = CurrentDb
' Create User object and append to Users collection of Workspace object.
    Set usr = wsp.CreateUser(&quot;Chris Jones&quot;, &quot;123abc456DEF&quot;, &quot;Password&quot;)
    wsp.Users.Append usr
    ' Create Group object and append to Groups collection of Workspace
    ' object.
    Set grp = wsp.CreateGroup(&quot;Marketing&quot;, &quot;321xyz654EFD&quot;)
    wsp.Groups.Append grp
    ' Append new User object to Users collection of new Group object.
    Set usrMember = grp.CreateUser(&quot;Chris Jones&quot;)
    grp.Users.Append usrMember
    ' Refresh Users collection of Group object.</pre>

<br>
</p>

<pre>    grp.Users.Refresh
    ' Return Container object.
    Set ctr = dbs.Containers!Tables
    ' Set UserName property of Container object.
    ctr.UserName = usrMember.Name
    ' Add retrieve permissions for new user on all tables.
    ctr.Permissions = ctr.Permissions Or dbSecRetrieveData
End Sub
</pre>
</BODY>

</html>
