<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CacheSize, CacheStart Properties</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>CacheSize, CacheStart Properties</h2>

Applies To</p>

Dynaset-Type<b> Recordset </b>Object,<b> Recordset </b>Object.</p>
<SPAN CLASS="list">
<ul>
    <li><b>CacheSize</b> &#151; sets or returns a value that
        specifies the number of records in a dynaset-type <b>Recordset</b>
        object containing data to be locally cached from an ODBC
        data source.</li>
    <li><b>CacheStart</b> &#151; sets or returns a value that
        specifies the bookmark of the first record in the <b>Recordset</b>
        object to be cached.</li>
</ul>
</SPAN>
Settings and Returned Values</p>

The setting or return value is a number or string
expression. The setting for <b>CacheSize</b> specifies the number
of records and must be between 5 and 1200, but not greater than
available memory. A typical value is 100. A setting of 0 turns
off caching. (Data type is <b>Long</b>.) The setting for <b>CacheStart</b>
specifies a bookmark. (Data type is <b>String</b>.)</p>

Remarks</p>

Data caching improves the performance of an
application that retrieves data from a remote server through
dynaset-type <b>Recordset</b> objects. A cache is a space in
local memory that holds the data most recently retrieved from the
server in the event that the data will be requested again while
the application is running. When data is requested, the Microsoft
Jet database engine checks the cache for the requested data first
rather than retrieving it from the server, which takes more time.
Data that doesn't come from an ODBC data source isn't saved in
the cache.</p>

Any ODBC data source, such as an attached table, can
have a local cache. To create the cache, open a <b>Recordset</b>
object from the remote data source, set the <b>CacheSize</b> and <b>CacheStart</b>
properties, and then use the <b>FillCache</b> method or step
through the records using the Move methods.</p>

The <b>CacheSize</b> property setting can be based
on the number of records your application can work with at one
time. For example, if you're using a <b>Recordset</b> object as
the source of the data to be displayed on screen, you could set
its <b>CacheSize</b> property to 20 to display 20 records at one
time.</p>

The <b>CacheStart</b> property setting is the
bookmark of the first record in the <b>Recordset</b> object to be
cached. You can use the bookmark of any record to set the <b>CacheStart</b>
property. Make the record you want to start the cache with the
current record, establish a bookmark for that record, and set the
<b>CacheStart</b> property to the bookmark.</p>

The Jet database engine requests records within the
cache range from the cache, and it requests records outside the
cache range from the server.</p>

Notes</p>
<SPAN CLASS="list">
<ul>
    <li>Records retrieved from the cache don't reflect changes
        made concurrently to the source data by other users.</li>
    <li>To force an update of all the cached data, set the <b>CacheSize</b>
        property of the <b>Recordset</b> object to 0, set it to
        the size of the cache you originally requested, and then
        use the <b>FillCache</b> method.</li>
</ul>
</SPAN>
See Also</p>

<b>Bookmark </b>Property,<b> Bookmarkable </b>Property,<b>
FillCache </b>Method.</p>

Specifics (Microsoft Access)</p>

When you use the <b>CacheStart</b> property in a
Microsoft Access module, you must include an <b>Option Compare
Binary</b> statement in the Declarations section of the module.
The bookmark set or returned by the <b>CacheStart</b> property is
a <b>Variant</b> array of <b>Byte</b> data, so the string
comparison method for the module must be binary. If a bookmark is
evaluated with a text-based string comparison method, such as the
<b>Option Compare Text</b> statement or the default setting for
the <b>Option Compare Database</b> statement, the current record
may be set to an incorrect record.</p>

Example (Client/Server)</p>

This example moves through all records in a <b>Recordset</b>
twice; once with no cache and once with a 50 record cache. The
example then displays the performance statistics for the uncached
and cached runs through the <b>Recordset</b>.</p>

<br>
</p>

<pre>Dim wspDefault As Workspace, dbsPubs As Database
Dim tdfPerformanceTest As TableDef, rstRemote As Recordset
Dim strNoCache As String, strCache As String

Set wspDefault = DBEngine.Workspaces(0)
Set dbsPubs = wspDefault.OpenDatabase(&quot;PUBLISH.mdb&quot;)
Set tdfPerformanceTest = dbsPubs.CreateTableDef(&quot;TestData&quot;)</pre>

<br>
</p>

<pre>tdfPerformanceTest.Connect = _     &quot;ODBC;DATABASE=pubs;UID=sa;PWD=;DSN=Publishers&quot;
tdfPerformanceTest.SourceTableName = &quot;dbo.roysched&quot;
dbsPubs.TableDefs.Append tdfPerformanceTest
ConnectSource = True
Set rstRemote = dbsPubs.OpenRecordset(&quot;TestData&quot;)

MsgBox &quot;This example moves through all records in the Recordset &quot; &amp; _
    &quot;twice; once with no cache and once with a 50 record cache.&quot;
' Start uncached run
tmStart = Timer
For i% = 1 To 2
    rstRemote.MoveFirst
    While Not rstRemote.EOF
        v = rstRemote(0)
        rstRemote.MoveNext
    Wend
Next i%
tmEnd = Timer
strNoCache = &quot;Time without caching: &quot; &amp; Format$(tmEnd - tmStart) &amp; _
    Chr$(13) &amp; Chr$(10)
' Start cached run
rstRemote.MoveFirst
rstRemote.CacheStart = rstRemote.Bookmark
rstRemote.CacheSize = 50
tmStart = Timer
For i% = 1 To 2
    rstRemote.MoveFirst
    While Not rstRemote.EOF
        v = rstRemote(0)
        rstRemote.MoveNext
    Wend
Next i%
tmEnd = Timer
strCache = &quot;Time with 50 record cache: &quot; &amp; Format$(tmEnd - tmStart) &amp; _
    Chr$(13) &amp; Chr$(10)
' Display performance results
MsgBox &quot;Caching Performance Results:&quot; &amp; Chr$(13) &amp; Chr$(10) &amp; _
    strNoCache &amp; strCache
rstRemote.Close
dbsPubs.Close
</pre>

Example (Microsoft Access)</p>

The following example opens a <b>Recordset</b>
object from an attached Orders table that is stored on an ODBC
server. The procedure next sets the <b>CacheSize</b> and <b>CacheStart</b>
properties, and then uses the <b>FillCache</b> method to cache
data from the server to the database.</p>

<br>
</p>

<pre>Sub CacheData()
    Dim rst As Recordset, dbs As Database
</pre>

<br>
</p>

<pre>    ' Return Database variable pointing to current database.
    Set dbs = CurrentDb
    ' Open local dynaset-type Recordset object.
    Set rst = dbs.OpenRecordset(&quot;Orders&quot;, DbOpenDynaset)
    ' Locate record with OrderID of 11000.
    rst.FindFirst &quot;OrderID = 11000&quot;
    ' Start caching records beginning with OrderID 11000.
    rst.CacheStart = rst.Bookmark
    rst.CacheSize = 12            ' Set cache size to 12 records.
    rst.FillCache            ' Fill cache.
    ' Display rows.
    .
    .
    .
End Sub
</pre>
</BODY>

</html>
