<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Update Method</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>Update Method</h2>

Applies To</p>

Dynaset-Type <b>Recordset </b>Object,<b> Recordset </b>Object,
Table-Type<b> Recordset </b>Object.</p>

Description</p>

Saves the contents of the copy buffer to a specified
dynaset- or table-type <b>Recordset</b> object.</p>

Syntax</p>

<i>recordset</i><b>.Update</b></p>

The <i>recordset</i> placeholder represents the name
of an open, updatable dynaset- or table-type <b>Recordset</b>
object.</p>

Remarks</p>

Use <b>Update</b> to save the current record and any
changes you've made to it.</p>

Caution</p>

Changes to the current record are lost if:</p>
<SPAN CLASS="list">
<ul>
    <li>You use the <b>Edit</b> or <b>AddNew</b> method, and then
        move to another record without first using <b>Update</b>.</li>
    <li>You use <b>Edit</b> or <b>AddNew</b>, and then use <b>Edit</b>
        or <b>AddNew</b> again without first using <b>Update</b>.</li>
    <li>You set the <b>Bookmark</b> property to another record.</li>
    <li>You close the recordset referred to by <i>recordset</i>
        without first using <b>Update</b>.</li>
    <li>You cancel the Edit.</li>
    <li>You move off the record.</li>
</ul>
</SPAN>
To edit a record, use the <b>Edit</b> method to copy
the contents of the current record to the copy buffer. If you
don't use <b>Edit</b> first, an error occurs when you use <b>Update</b>
or attempt to change a field's value.</p>

When the <b>Recordset</b> object's <b>LockEdits</b>
property setting is <b>True</b> (pessimistically locked) in a
multiuser environment, the record remains locked from the time <b>Edit</b>
is used until the <b>Update</b> method is executed or the edit is
canceled. If the <b>LockEdits</b> property setting is <b>False</b>
(optimistically locked), the record is locked and compared with
the pre-edited record just before it is updated in the database.
If the record has changed since you used the <b>Edit</b> method,
the <b>Update</b> operation fails with a trappable error (3197).
Note that optimistic locking is always used on external database
formats such as ODBC or installable ISAM. To continue the <b>Update</b>
operation with your changes, use the <b>Update</b> method again.
To revert to the record as the other user changed it, refresh the
current record using the <b>Move</b> methods, or set the <b>Bookmark</b>
property to itself, as shown in the following example:</p>

<br>
</p>

<pre>' Error 3197 detected; Restore record from database (as changed).
rstEmployees.BookMark = rstEmployees.Bookmark
</pre>

To add a new record to a recordset, use the <b>AddNew</b>
method.</p>

See Also</p>

<b>AddNew </b>Method,<b> LockEdits </b>Property,<b>
OpenRecordset </b>Method.</p>

Specifics (Microsoft Access)</p>

When you use a bookmark in a Microsoft Access
module, you must include an <b>Option Compare Binary</b>
statement in the Declarations section of the module. A bookmark
is a <b>Variant</b> array of <b>Byte</b> data, so the string
comparison method for the module must be binary. If a bookmark is
evaluated with a text-based string comparison method, such as the
<b>Option Compare Text</b> statement or the default setting for
the <b>Option Compare Database</b> statement, the current record
may be set to an incorrect record.</p>

Example</p>

See the <b>Edit</b> method example.</p>

Example (Microsoft Access)</p>

See the <b>AddNew</b> method example (Microsoft
Access).</p>

Example (Microsoft Excel)</p>

This example opens PRODUCT.DBF (a dBASE IV table
located in the \Program Files\Common Files\Microsoft
Shared\MSquery folder), finds a record with the PRODUCT value 1,
and then sets the CATEGORY field to the value in cell B2 on
Sheet1. (On Windows NT, PRODUCT.DBF is located in the
\WINDOWS\MSAPPS\MSQUERY folder.)</p>

<br>
</p>

<pre>Const sourceDir = &quot;C:\Program Files\Common Files\Microsoft &quot; _
    &amp; &quot;Shared\MSquery&quot;
Dim db As Database, rs As Recordset, categoryCell As Range
Sheets(&quot;Sheet1&quot;).Activate
Set categoryCell = ActiveSheet.Cells(2, 2)
categoryCell.Value = &quot;BEVR&quot;
Set db = OpenDatabase(sourceDir, False, False, &quot;dBASE IV&quot;)
Set rs = db.OpenRecordset(&quot;PRODUCT.DBF&quot;, dbOpenTable)
With rs
    .Index = &quot;PRODUCT&quot;
    .Seek &quot;=&quot;, &quot;1&quot;</pre>

<br>
</p>

<pre>    .Edit
    .Fields(&quot;CATEGORY&quot;).Value = categoryCell.Value
    .Update
End With
MsgBox &quot;The field has been updated with &quot; &amp; categoryCell.Value
rs.Close
db.Close
</pre>
</BODY>

</html>
