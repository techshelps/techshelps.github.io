<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HAVING Clause</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>HAVING Clause</H2>Description</P>
Specifies which grouped records are displayed in a SELECT statement with a GROUP BY clause. After GROUP BY combines records, HAVING displays any records grouped by the GROUP BY clause that satisfy the conditions of the HAVING clause.</P>
Syntax</P>
SELECT <I>fieldlist</I><BR>    FROM <I>table</I><BR>    WHERE <I>selectcriteria</I><BR>    GROUP BY <I>groupfieldlist</I><BR>    HAVING <I>groupcriteria</I></P>
A SELECT statement containing a HAVING clause has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="95pt" VALIGN="TOP"><COL WIDTH="253pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>fieldlist</I></P></TD><TD VALIGN="TOP">The name of the field or fields to be retrieved along with any field-name aliases, SQL aggregate functions, selection predicates (ALL, DISTINCT, DISTINCTROW, or TOP), or other SELECT statement options.</P></TD></TR><TR><TD VALIGN="TOP"><I>table</I></P></TD><TD VALIGN="TOP">The name of the table from which records are retrieved. For more information, see the FROM clause.</P></TD></TR><TR><TD VALIGN="TOP"><I>selectcriteria</I></P></TD><TD VALIGN="TOP">Selection criteria. If the statement includes a WHERE clause, the Microsoft Jet database engine groups values after applying the WHERE conditions to the records.</P></TD></TR><TR><TD VALIGN="TOP"><I>groupfieldlist</I></P></TD><TD VALIGN="TOP">The names of up to 10 fields used to group records. The order of the field names in <I>groupfieldlist</I> determines the grouping levels from the highest to the lowest level of grouping.</P></TD></TR><TR><TD VALIGN="TOP"><I>groupcriteria</I></P></TD><TD VALIGN="TOP">An expression that determines which grouped records to display.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
HAVING is optional.</P>
<P></P>
HAVING is similar to WHERE, which determines which records are selected. After records are grouped with GROUP BY, HAVING determines which records are displayed:</P>
<BR></P>
<PRE>SELECT CategoryID,Sum(UnitsIn Stock)
FROM Products<BR>GROUP BY CategoryID<BR>HAVING Sum(UnitsIn Stock) &gt; 100 AND LIKE BOS*;<BR></PRE>
A HAVING clause can contain up to 40 expressions linked by logical operators, such as <B>And</B> and <B>Or</B>.</P>
See Also</P>
GROUP BY Clause, SELECT Statement, SELECT...INTO Statement, SQL Aggregate Functions.</P>
Example</P>
Some of the following examples assume the existence of a hypothetical Department field in an Employees table. </P>
This example selects the job titles in the Production department assigned to more than 50 employees.</P>
<BR></P>
<PRE>SELECT Title, Count(Title) FROM Employees <BR>WHERE Department = 'Production' GROUP BY Title HAVING Count(Title) &gt; 50;
</PRE>
This example selects departments with more than 100 employees.</P>
<BR></P>
<PRE>SELECT Department, Count([Department]) FROM Employees <BR>GROUP BY Department HAVING Count(Department) &gt; 100;
</PRE>
</P></BODY>
</HTML>
