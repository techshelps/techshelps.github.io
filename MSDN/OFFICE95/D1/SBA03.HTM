<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Property</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>SQL Property</H2>Applies To</P>
<B>QueryDef </B>Object.</P>
Description</P>
Sets or returns the SQL statement that defines the query executed by a <B>QueryDef</B> object.</P>
Settings and Return Values</P>
The setting or return value is a string expression that contains an SQL statement. The data type is <B>String</B>.</P>
<P></P>
Remarks</P>
The <B>SQL</B> property contains the SQL statement that determines how records are selected, grouped, and ordered when you execute the query. You can use the query to select records to include in a dynaset- or snapshot-type <B>Recordset</B> object. You can also define bulk queries to modify data without returning records.</P>
Using the ORDER BY or WHERE clause to sort or filter a <B>Recordset</B> object is more efficient than using the <B>Sort</B> and <B>Filter</B> properties.</P>
The SQL syntax used in a query must conform to the SQL dialect as defined by the Microsoft Jet database engine unless you create an SQL pass through query.</P>
Using a <B>QueryDef</B> object is the preferred way to perform SQL pass through operations on ODBC databases. By setting the <B>QueryDef</B> object's <B>Connect</B> property to an ODBC data source, you can specify non-Microsoft Jet database SQL in the query passed to the external server. For example, you can use TRANSACT SQL statements (with Microsoft SQL Server or Sybase SQL Server databases) in the <I>value</I> argument, which won't be processed by the Jet database engine.</P>
If the SQL statement includes parameters for the query, you must set these before you execute the query. Until you reset the parameters, the same parameter values are applied each time you execute the query. Set the parameters by accessing the <B>Parameters</B> collection of the <B>QueryDef</B> object using the following code.</P>
<BR></P>
<PRE>qdfOrders.Parameters("Order Date") = "10/11/94"   ' Set parameters.
qdfOrders.Parameters("Ship Date") = "11/4/94"
</PRE>
See Also</P>
<B>CreateQueryDef </B>Method,<B> Filter </B>Property,<B> OpenRecordset </B>Method,<B> Parameter </B>Object,<B> Recordset </B>Object,<B> Sort </B>Property.</P>
Example</P>
This example creates a query based on an Orders table. The query selects all orders that have a Freight value greater than 10.</P>
<BR></P>
<PRE>Dim dbsNorthwind As Database, qdfLargeFrt As QueryDef
Dim rstFromQuery As Recordset
Set dbsNorthwind =  DBEngine.Workspaces(0).OpenDatabase("Northwind.mdb")
Set qdfLargeFrt = dbsNorthwind.CreateQueryDef("Large Freight")
qdfLargeFrt.SQL = "SELECT * FROM Orders WHERE Freight &gt; 10;"
Set rstFromQuery = qdfLargeFrt.OpenRecordset(dbOpenSnapshot)
</PRE>
Example (Microsoft Access)</P>
The following example creates a parameter query based on an Orders table. The query selects all orders for which the order date falls between the dates entered by the user.</P>
<BR></P>
<PRE>Sub RangeOfOrders()
    Dim dbs As Database, qdf As QueryDef, rst As Recordset
</PRE>
<P></P>
<BR></P>
<PRE>    ' Return Database variable that points to current database.
    Set dbs = CurrentDb
    Set qdf = dbs.CreateQueryDef("RangeOfOrders")
    ' Construct SQL statement including parameters.
    qdf.SQL = "PARAMETERS [Start] DATETIME, [End] DATETIME; " &amp; _
        "SELECT * FROM Orders WHERE [OrderDate] BETWEEN " &amp; _
        "[Start] AND [End];"
    qdf.Parameters("Start") = #1/1/95#
    qdf.Parameters("End") = #1/31/95#
    ' Create snapshot-type Recordset object from QueryDef object.
    Set rst = qdf.OpenRecordset(dbOpenSnapshot)
End Sub
</PRE>
Example (Microsoft Excel)</P>
See the <B>CreateQueryDef</B> method example.</P>
</P>
</P></BODY>
</HTML>
