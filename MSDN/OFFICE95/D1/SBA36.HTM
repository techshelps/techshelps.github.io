<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SELECT Statement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>SELECT Statement</H2>Description</P>
Instructs the Microsoft Jet database engine to return information from the database as a set of records.</P>
<P></P>
Syntax</P>
SELECT [<I>predicate</I>] { * | <I>table</I>.* | [<I>table</I>.]<I>field1</I> [AS alias1] [, [<I>table</I>.]<I>field2 <BR>    </I>[AS alias2] [, ...]]}<BR>    FROM <I>tableexpression</I> [, ...] [IN <I>externaldatabase</I>]<BR>    [WHERE... ]<BR>    [GROUP BY... ]<BR>    [HAVING... ]<BR>    [ORDER BY... ]<BR>    [WITH OWNERACCESS OPTION]</P>
The SELECT statement has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="105pt" VALIGN="TOP"><COL WIDTH="243pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>predicate</I></P></TD><TD VALIGN="TOP">One of the following predicates: ALL, DISTINCT, DISTINCTROW, or TOP. You use the predicate to restrict the number of records returned. If none is specified, the default is ALL.</P></TD></TR><TR><TD VALIGN="TOP"><I>*</I></P></TD><TD VALIGN="TOP">Specifies that all fields from the specified table or tables are selected.</P></TD></TR><TR><TD VALIGN="TOP"><I>table</I></P></TD><TD VALIGN="TOP">The name of the table containing the fields from which records are selected.</P></TD></TR><TR><TD VALIGN="TOP"><I>field1</I>,<I> field2</I></P></TD><TD VALIGN="TOP">The names of the fields to retrieve data from. If you include more than one field, they are retrieved in the order listed.</P></TD></TR><TR><TD VALIGN="TOP"><I>alias1</I>,<I> alias2</I></P></TD><TD VALIGN="TOP">The names to use as column headers instead of the original column names in <I>table</I>.</P></TD></TR><TR><TD VALIGN="TOP"><I>tableexpression</I></P></TD><TD VALIGN="TOP">The name of the table or tables containing the data you want to retrieve.</P></TD></TR><TR><TD VALIGN="TOP"><I>externaldatabase</I></P></TD><TD VALIGN="TOP">The name of the database containing the tables in <I>tableexpression</I> if not in the current database.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
To perform this operation, the Jet database engine searches the specified table or tables, extracts the chosen columns, selects rows that meet the criterion, and sorts or groups the resulting rows into the order specified.</P>
SELECT statements don't change data in the database.</P>
SELECT is usually the first word in an SQL statement. Most SQL statements are either SELECT or SELECT... INTO statements.</P>
The minimum syntax for a SELECT statement is:</P>
SELECT <I>fields</I> FROM <I>table</I></P>
You can use an asterisk (*) to select all fields in a table. The following example selects all of the fields in the Employees table:</P>
<BR></P>
<PRE>SELECT * FROM Employees;
</PRE>
<P></P>
If a field name is included in more than one table in the FROM clause, precede it with the table name and the <B>.</B> (dot) operator. In the following example, the Department field is in both the Employees table and the Supervisors table. The SQL statement selects Department from the Employees table and SupvName from the Supervisors table:</P>
<BR></P>
<PRE>SELECT Employees.Department, Supervisors.SupvName
FROM Employees INNER JOIN Supervisors
WHERE Employees.Department = Supervisors.Department;
</PRE>
When a <B>Recordset</B> object is created, the Jet database engine uses the table's field name as the <B>Field</B> object name in the <B>Recordset</B> object. If you want a different field name or a name isn't implied by the expression used to generate the field, use the AS reserved word. The following example uses the title Birth to name the returned <B>Field</B> object in the resulting <B>Recordset</B> object:</P>
<BR></P>
<PRE>SELECT BirthDate<BR>AS Birth FROM Employees;
</PRE>
Whenever you use aggregate functions or queries that return ambiguous or duplicate <B>Field</B> object names, you must use the AS clause to provide an alternate name for the <B>Field</B> object. The following example uses the title Head Count to name the returned <B>Field</B> object in the resulting <B>Recordset</B> object:</P>
<BR></P>
<PRE>SELECT COUNT(EmployeeID)<BR>AS HeadCount FROM Employees;
</PRE>
You can use the other clauses in a SELECT statement to further restrict and organize your returned data. For more information, see the topic for the clause you're working with.</P>
See Also</P>
ALL, DISTINCT, DISTINCTROW, TOP Predicates; DELETE Statement, FROM Clause, GROUP BY Clause, HAVING Clause, IN Clause, INSERT INTO Statement, ORDER BY Clause, SELECT...INTO Statement, SQL Aggregate Functions, UNION Operation, UPDATE Statement, WHERE Clause, WITH OWNERACCESS OPTION Declaration.</P>
Specifics (Microsoft Access)</P>
In Microsoft Access, if you are working in SQL view in the Query window, field names (<I>field1, field2</I>) are used as column headings in Datasheet view. To display a different column heading for a column in the Datasheet, use the AS reserved word. If you use the AS reserved word, then the <I>alias1, alias2 </I>arguments provide the column names to use in displaying the retrieved data in Datasheet view. Using the AS clause is equivalent to setting the <B>Alias</B> property in the field list property sheet in query Design view.</P>
The following example uses the title "Birthday" to head the column in the resulting datasheet.</P>
<BR></P>
<PRE>SELECT [BirthDate] AS Birthday FROM Employees;</PRE>
<P></P>
<BR></P>
<PRE></PRE>
When using aggregate functions or queries that return ambiguous or duplicate field names, you must use the AS clause to provide an alternate name for the field. The following example creates the column heading "Head Count" in Datasheet view.</P>
<BR></P>
<PRE>SELECT COUNT([EmployeeID])
AS [HeadCount] FROM Employees;
</PRE>
If you are working with data access objects in Visual Basic code, the <I>field1, field2 </I>arguments are used to name the <B>Field</B> objects in the <B>Recordset</B> object returned by the query. If you include the AS keyword, then the <I>alias1, alias2 </I>arguments provide the column headings to return as <B>Field</B> object names in the resulting <B>Recordset</B> object.</P>
Example</P>
Some of the following examples assume the existence of a hypothetical Salary field in an Employees table. </P>
This example selects the LastName and FirstName fields of all records in the Employees table.</P>
<BR></P>
<PRE>SELECT LastName, FirstName FROM Employees;
</PRE>
This example selects all fields from the Employees table.</P>
<BR></P>
<PRE>SELECT Employees.* FROM Employees;
</PRE>
This example counts the number of records that have an entry in the PostalCode field and names the returned field Tally.</P>
<BR></P>
<PRE>SELECT Count(PostalCode) AS Tally FROM Customers;
</PRE>
This example shows what the salary would be if each employee received a 10 percent raise. It doesn't change the original salary amounts.</P>
<BR></P>
<PRE>SELECT LastName, Salary AS Current, Salary * 1.1 AS Proposed <BR>FROM Employees;
</PRE>
This example places the title Name at the top of the LastName column. The title Salary is displayed at the top of the Salary column.</P>
<BR></P>
<PRE>SELECT LastName AS Name, Salary FROM Employees;
</PRE>
This example shows the number of employees and the average and maximum salaries.</P>
<BR></P>
<PRE>SELECT Count(*) AS [Total Employees], Avg(Salary) <BR>AS [Average Salary], Max(Salary) AS [Maximum Salary] FROM Employees;
</PRE>
<P></P>
For each record, this example shows the LastName and Salary in the first and last fields. The string "has a salary of" is returned as the middle field of each record.</P>
<BR></P>
<PRE>SELECT LastName, 'has a salary of', Salary FROM Employees;
</PRE>
</P></BODY>
</HTML>
