<HTML>
<HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PARAMETERS Declaration</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->



<H2>PARAMETERS Declaration</H2>Description</P>
Declares the name and data type of each parameter in a parameter query.</P>
Syntax</P>
PARAMETERS <I>name datatype</I> [, <I>name datatype</I> [, ...]]</P>
The PARAMETERS declaration has these parts.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="70pt" VALIGN="TOP"><COL WIDTH="278pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Part</P></TD><TD VALIGN="TOP">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP"><I>name</I></P></TD><TD VALIGN="TOP">The name of the parameter. Assigned to the <B>Name</B> property of the <B>Parameter</B> object and used to identify this parameter in the <B>Parameters</B> collection. You can use <I>name</I> as a string that is displayed in a dialog box while your application runs the query. Use brackets ([ ]) to enclose text that contains spaces or punctuation. For example, [Low price] and [Begin report with which month?] are valid <I>name</I> arguments.</P></TD></TR><TR><TD VALIGN="TOP"><I>datatype</I></P></TD><TD VALIGN="TOP">One of the primary Microsoft Jet SQL data types or their synonyms.</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
Remarks</P>
For queries that you run regularly, you can use a PARAMETERS declaration to create a parameter query. A parameter query can help automate the process of changing query criteria. With a parameter query, your code will need to provide the parameters each time the query is run.</P>
The PARAMETERS declaration is optional but when included precedes any other statement, including SELECT.</P>
If the declaration includes more than one parameter, separate them with commas. The following example includes two parameters:</P>
<BR></P>
<PRE>PARAMETERS [Low price] Currency, [Beginning date] DateTime;
</PRE>
You can use <I>name </I>but not <I>datatype </I>in a WHERE or HAVING clause. The following example expects two parameters to be provided and then applies the criteria to records in the Orders table:</P>
<BR></P>
<PRE>PARAMETERS [Low price] Currency,[Beginning date] DateTime;<BR>SELECT OrderID, OrderAmount<BR>FROM Orders<BR>WHERE OrderAmount &gt; [Low price]<BR>AND OrderDate &gt;= [Beginning date];
</PRE>
Specifics (Microsoft Access)</P>
With a parameter query, Microsoft Access prompts you for the criteria when the query is run. This eliminates the extra step of opening the query in Design view and changing the criteria.</P>
The <I>name </I>argument that you supply with the PARAMETERS declaration provides the text that is displayed in a dialog box when you run the query. Microsoft Access automatically creates this dialog box for you.</P>
<P></P>
Using the PARAMETERS declaration in SQL view is equivalent to defining parameters in the Criteria cell of the query design grid.</P>
Example</P>
This example requires you to provide an employee's last name and then uses that entry as the criteria for the query.</P>
<BR></P>
<PRE>PARAMETERS [Enter a Last Name:] Text; SELECT * FROM Employees <BR>WHERE LastName =  [Enter a Last Name:];
</PRE>
This example requires you to provide a category ID and then uses that entry as the criteria for the query.</P>
<BR></P>
<PRE>PARAMETERS [Enter a Category ID:] Value; <BR>SELECT DISTINCTROW CategoryID, ProductName, <BR>Count([Order Details].OrderID) <BR>AS Tally FROM Products INNER JOIN [Order Details] <BR>ON Products.ProductID = [Order Details].ProductID <BR>GROUP BY CategoryID, ProductName <BR>HAVING CategoryID = [Enter a Category ID:];
</PRE>
</P></BODY>
</HTML>
