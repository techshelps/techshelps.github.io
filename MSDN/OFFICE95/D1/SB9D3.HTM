<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">

<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MoveFirst, MoveLast, MoveNext, MovePrevious Methods</title>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

>


	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->




<H2>MoveFirst, MoveLast, MoveNext, MovePrevious
Methods</h2>

Applies To</p>

Dynaset-Type <b>Recordset </b>Object,<b> Recordset </b>Object,<b>
</b>Snapshot-Type <b>Recordset </b>Object,<b> </b>Table-Type <b>Recordset
</b>Object.</p>

Description</p>

Move to the first, last, next, or previous record in
a specified <b>Recordset</b> object and make that record the
current record.</p>

Syntax</p>

<i>object</i><b>.</b>{<b>MoveFirst</b> | <b>MoveLast</b>
| <b>MoveNext</b> | <b>MovePrevious</b>}</p>

The <i>object</i> placeholder represents an object
expression that evaluates to the name of an open <b>Recordset</b>
object.</p>

Remarks</p>

Use the Move methods to move from record to record
without applying a condition. Use the Find methods to locate
records in a dynaset- or Snapshot-Type <b>Recordset</b> object
that satisfy a certain condition. To locate a record in a
Table-Type <b>Recordset</b> object, use the <b>Seek</b> method.</p>

Caution</p>

If you edit the current record, be sure you save
the changes using the <b>Update</b> method before you move to
another record. If you move to another record without updating,
your changes are lost without warning.</p>

When you open the recordset named by <i>recordset</i>,
the first record is current and the <b>BOF</b> property is set to
<b>False</b>. If the recordset contains no records, the <b>BOF</b>
property is set to <b>True</b>, and there is no current record.</p>

If the first or last record is already current when
you use <b>MoveFirst</b> or <b>MoveLast</b>, the current record
doesn't change.</p>

If you use <b>MovePrevious</b> when the first record
is current, the <b>BOF</b> property is set to <b>True</b>, and
there is no current record. If you use <b>MovePrevious</b> again,
an error occurs; <b>BOF</b> remains <b>True</b>.</p>

If you use <b>MoveNext</b> when the last record is
current, the <b>EOF</b> property is set to <b>True</b>, and there
is no current record. If you use <b>MoveNext</b> again, an error
occurs; <b>EOF</b> remains <b>True</b>.</p>

If <i>recordset</i> refers to a Table-Type <b>Recordset</b>,
movement follows the current index. You can set the current index
using the <b>Index</b> property. If you don't set the current
index, the order of returned records is undefined.</p>

If you use <b>MoveLast</b> on a <b>Recordset</b>
object based on an SQL query or <b>QueryDef</b>, the query is
forced to completion and the <b>Recordset</b> object is fully
populated.</p>

Notes</p>
<SPAN CLASS="list">
<ul>
    <li>You can't use the <b>MoveFirst</b>, <b>MoveLast</b>, or <b>MovePrevious</b>
        methods with a forward-only scrolling snapshot.</li>
    <li>To move the position of the current record in a <b>Recordset</b>
        object a specific number of records forward or backward,
        use the <b>Move</b> method.</li>
</ul>
</SPAN>
See Also</p>

<b>AbsolutePosition </b>Property;<b> BOF</b>,<b> EOF
</b>Properties;<b> FindFirst</b>,<b> FindLast</b>,<b> FindNext</b>,<b>
FindPrevious </b>Methods;<b> Index </b>Property;<b> Move </b>Method;<b>
RecordCount </b>Property;<b> Seek </b>Method.</p>

Example</p>

This example changes the job title of all sales
representatives in a table named Employees. After opening the
table, it uses <b>MoveFirst</b> to locate the first record and <b>MoveNext</b>
to move to the next record. For each record satisfying the title
condition, the example changes the title and saves the change
using the <b>Update</b> method. </p>

It's far more efficient to use the WHERE clause of
an SQL statement to request the records you want to update than
to test each record one at a time. The whole operation could be
accomplished by using a single UPDATE statement, as shown in the
following example.</p>

<br>
</p>

<pre>Dim dbsNorthwind As Database, rstEmployees As Recordset
Dim strSelect as String
Set dbsNorthwind = DBEngine.Workspaces(0).OpenDatabase(&quot;Northwind.mdb&quot;)
strSelect = &quot;Select * FROM Employees WHERE Title = 'Sales Representative' &quot;
' Open recordset.
Set rstEmployees = dbsNorthwind.OpenRecordset(strSelect)
Do Until rstEmployees.EOF    ' Begin loop.
    With rstEmployees
    .Edit    ' Enable editing.
    !Title = &quot;Account Executive&quot;    ' Change title.
    .Update    ' Save changes.
    .MoveNext    ' Locate next record.
    End With
Loop    ' End of loop.
rstEmployees.Close    ' Close table.
dbsNorthwind.Close
</pre>

Tip</p>

Using an update query to change job titles might be
more efficient. For example, you could use the following code to
achieve the same results:</p>

<br>
</p>

<pre>Dim strSelect as String
strSelect = &quot;Update Employees Set Title = 'Account Executive' &quot; _
    &quot;WHERE Title = 'Sales Representative' &quot;
dbsNorthwind.Execute strSelect</pre>

Example (Microsoft Access)</p>

The following example uses the <b>MoveLast</b>
method to populate the <b>Recordset</b> object so the number of
records can be counted. The <b>MoveFirst</b> method then moves
the current record pointer to the first record in the <b>Recordset</b>
object. The procedure prompts the user to enter a record number,
then sets a bookmark for that record.</p>

<br>
</p>

<pre>Sub MoveToRecord()
    Dim dbs As Database, rst As Recordset, intI As Integer
    Dim strNumber As String, strBookmark As String
    ' Return Database variable pointing to current database.
    Set dbs = CurrentDb
    Set rst = dbs.OpenRecordset(&quot;Orders&quot;)
    ' Populate Recordset object.
    rst.MoveLast
    ' Return to first record.
    rst.MoveFirst
    strNumber = InputBox(&quot;Please enter record number.&quot;)
    ' Check that number is within Recordset object.
    If strNumber &lt;= rst.RecordCount And rst.Bookmarkable Then
        For intI = 1 To strNumber
            rst.MoveNext
        Next intI
        strBookmark = rst.Bookmark
    End If
End Sub
</pre>

Example (Microsoft Excel)</p>

This example replaces values in the CON_TITLE field
of the records in the Customer recordset in the NWINDEX.MDB
database, and then it displays how many replacements were made.</p>

To create the NWINDEX.MDB database, run the
Microsoft Excel example for the <b>CreateDatabase</b> method.</p>

<br>
</p>

<pre>Dim db As Database, rs As Recordset, sQLText As String
Set db = Workspaces(0).OpenDatabase(Application.Path &amp; &quot;\NWINDEX.MDB&quot;)
sQLText = &quot;SELECT * FROM  Customer WHERE &quot; _
    &amp; &quot;CON_TITLE =  'Sales Representative';&quot;
Set rs = db.OpenRecordset(sQLText)
i = 0
Do Until rs.EOF
    With rs
        .Edit
        .Fields(&quot;CON_TITLE&quot;).Value = &quot;Account Executive&quot;
        .Update
        .MoveNext
    End With
    i = i + 1
Loop
MsgBox i &amp; &quot; replacements were made.&quot;
rs.Close
db.Close</pre>
</BODY>

</html>
