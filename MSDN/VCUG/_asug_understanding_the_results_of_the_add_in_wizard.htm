<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding the Results of the Add-in Wizard</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_understanding_the_results_of_the_add_in_wizard"></a>Understanding the Results of the Add-in Wizard</h1>
<p>
<a href="_asug_home_page.3a_.developer_studio_add_ins.htm">Home Page (Add-ins)</a>  |&nbsp; <a href="_asug_overview.3a_.developer_studio_add.2d.ins.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i_......_topics.3a_.developer_studio_add.2d.ins.htm">How Do I ... Topics</a>  |&nbsp; <a href="_asug_frequently_asked_questions.3a_.developer_studio_add_ins.htm">FAQ</a>  |&nbsp; <a href="_asug_reference.3a_.developer_studio_add.2d.ins.htm">Reference</a></p>
<p>
The Developer Studio Add-in Wizard creates only the source files for an add-in. When you complete the add-in by building its project, Developer Studio creates a DLL from these source files.</p>
<p>
Additionally, the Developer Studio Add-in Wizard creates classes for each add-in. These classes appear in the ClassView pane of the Project Workspace window and are graphical representations of what the source files contain. If you edit the classes, Developer Studio automatically changes the corresponding files.</p>
<h2><a name="_asug_files_created_by_the_devstudio_add_in_wizard"></a>Files Created by the Developer Studio Add-in Wizard</h2>
<p>
The Developer Studio Add-in Wizard creates multiple files for each add-in. The following table describes these files. Note that <i>Add-in_name</i> represents the name of the add-in created.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=27%><b>File name</b></td>
<td class=label width=73%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=27%><i>Add-in_name</i>.h</td>
<td width=73%>Includes the principal header information for the add-in.</td>
</tr>
<tr valign=top>
<td width=27%><i>Add-in_name</i>.cpp</td>
<td width=73%>Contains the main source code for the add-in DLL. This file includes the OLE entry points required by in-process servers.</td>
</tr>
<tr valign=top>
<td width=27%><i>Add-in_name</i>.odl</td>
<td width=73%>Includes the Object Description Language source code for the type library created by the add-in.</td>
</tr>
<tr valign=top>
<td width=27%><i>Add-in_name</i>.rc</td>
<td width=73%>Lists all Windows resources that the add-in uses. For example, this file includes the sample toolbar bitmap stored in the RES subdirectory. You can edit this file Visual C++.</td>
</tr>
<tr valign=top>
<td width=27%><i>Add-in_name</i>.rc2</td>
<td width=73%>Contains all resources that you cannot edit Visual C++.</td>
</tr>
<tr valign=top>
<td width=27%><i>Add-in_name</i>.def</td>
<td width=73%>Includes definitions required for the add-in to run with Windows. This file contains parameters such as the name and description of the add-in. This file also exports functions from the add-in.</td>
</tr>
<tr valign=top>
<td width=27%><i>Add-in_name</i>.clw</td>
<td width=73%>Contains information used by ClassWizard to edit existing classes or add new classes. ClassWizard also uses this file to store information needed to create and edit message maps and dialog box data maps and to create prototype member functions.</td>
</tr>
<tr valign=top>
<td width=27%>Commands.cpp and<br>
Commands.h</td>
<td width=73%>Contain the <b>Ccommands</b> class that implements the command dispatch interface defined by the <a href="_asug_how_add.2d.ins_connect_and_disconnect.htm#_asug_the_commands_object">Commands</a> object. This interface contains one method for each command the add-in adds to the environment.</td>
</tr>
<tr valign=top>
<td width=27%>Dsaddin.cpp and<br>
Dsaddin.h</td>
<td width=73%>Includes the <b>CDSAddIn</b> class that implements the <b>IDSAddIn</b> interface defined by the <a href="_asug_how_add.2d.ins_connect_and_disconnect.htm#_asug_the_dsaddin_object">DSAddIn</a> object. This interface contains handlers for <a href="_asug_how_add.2d.ins_connect_and_disconnect.htm">connecting</a> the add-in to the development environment and <a href="_asug_how_add.2d.ins_connect_and_disconnect.htm">disconnecting</a> it from the environment.</td>
</tr>
<tr valign=top>
<td width=27%>Resource.h</td>
<td width=73%>Defines new resource IDs. This is the standard header file, and Visual C++ reads and updates this file.</td>
</tr>
<tr valign=top>
<td width=27%>Stdafx.h and<br>
Stdafx.cpp</td>
<td width=73%>Build the precompiled header file <i>Add-in_name</i>.pch.</td>
</tr>
</table><br>
<h2><a name="_asug_classes_created_by_the_devstudio_add_in_wizard"></a>Classes Created by the Developer Studio Add-in Wizard</h2>
<p>
The Developer Studio Add-in Wizard creates multiple classes for each add-in. When you open the add-in, these classes appear in the ClassView pane, and they represent the source files produced for the add-in. You can change the add-in by modifying these files or by adding members to these classes.</p>
<p>
The following table describes these classes. Note that <i>Add-in_name</i> represents the name of the add-in created.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=27%><b>Class name</b></td>
<td class=label width=73%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=27%><b>CCommands</b></td>
<td width=73%>Implements the <b>Icommands</b> interface. In the <b>CCommands</b> class, you add the methods that Developer Studio uses to carry out commands added by the add-in.</td>
</tr>
<tr valign=top>
<td width=27%><b>CDSAddIn</b></td>
<td width=73%>Implements the <b>IDSAddIn</b> interface declared in header files provided with Visual C++. This interface exposes the <a href="_asug_how_add.2d.ins_connect_and_disconnect.htm#_asug_the_dsaddin_object">DSAddIn</a> object that the add-in uses to communicate with the development environment.</td>
</tr>
<tr valign=top>
<td width=27%><b>C</b><i>add-in_name</i><b>App</b></td>
<td width=73%>Registers and initializes the add-in.</td>
</tr>
<tr valign=top>
<td width=27%><b>ICommands</b></td>
<td width=73%>Specifies the interface defined by the <a href="_asug_how_add.2d.ins_connect_and_disconnect.htm#_asug_the_commands_object">Commands</a> object. Through this interface, Visual C++ carries out commands added by the add-in.</td>
</tr>
</table><br>
<p>
For examples of how to use these files and classes, see the <a href="_asug_using_the_sample_add.2d.ins.htm">add-in samples</a>.</p>
</FONT></BODY>
</HTML>
