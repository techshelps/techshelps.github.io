<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Symbols for Watch Variables</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_symbols_for_watch_variables"></a>Symbols for Watch Variables</h1>
<p>
<a href="_asug_home_page.3a_.debugger.htm">Home Page (Debugger)</a>  |&nbsp; <a href="_asug_overview.3a_.the_debugging_interface.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i......_topics.3a_.debugging.htm">How Do I... Topics</a>  </p>
<p>
You can change the display format of variables in the <b>QuickWatch</b> dialog box or in the Watch window using the formatting symbols in the following table.</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=17%><b>Symbol</b></td>
<td class=label width=33%><b>Format</b></td>
<td class=label width=23%><b>Value</b></td>
<td class=label width=27%><b>Displays</b></td>
</tr>
<tr valign=top>
<td width=17%>d,i</td>
<td width=33%><b>signed </b>decimal integer</td>
<td width=23%>0xF000F065</td>
<td width=27%>-268373915</td>
</tr>
<tr valign=top>
<td width=17%>u</td>
<td width=33%><b>unsigned </b>decimal integer</td>
<td width=23%>0x0065</td>
<td width=27%>101</td>
</tr>
<tr valign=top>
<td width=17%>o</td>
<td width=33%><b>unsigned </b>octal integer</td>
<td width=23%>0xF065</td>
<td width=27%>0170145</td>
</tr>
<tr valign=top>
<td width=17%>x,X</td>
<td width=33%>Hexadecimal integer</td>
<td width=23%>61541 (decimal)</td>
<td width=27%>0x0000F065</td>
</tr>
<tr valign=top>
<td width=17%>l,h</td>
<td width=33%><b>long </b>or <b>short </b>prefix for: d, i, u, o, x, X</td>
<td width=23%>00406042,hx</td>
<td width=27%>0x0c22</td>
</tr>
<tr valign=top>
<td width=17%>f</td>
<td width=33%><b>signed </b>floating-point</td>
<td width=23%>3./2.</td>
<td width=27%>1.500000</td>
</tr>
<tr valign=top>
<td width=17%>e</td>
<td width=33%><b>signed </b>scientific notation</td>
<td width=23%>3./2.</td>
<td width=27%>1.500000e+000</td>
</tr>
<tr valign=top>
<td width=17%>g</td>
<td width=33%><b>signed </b>floating-point or <b>signed </b>scientific notation, whichever is shorter</td>
<td width=23%>3./2.</td>
<td width=27%>1.5</td>
</tr>
<tr valign=top>
<td width=17%>c</td>
<td width=33%>Single character</td>
<td width=23%>0x0065</td>
<td width=27%>'e'</td>
</tr>
<tr valign=top>
<td width=17%>s</td>
<td width=33%>String</td>
<td width=23%>0x0012fde8</td>
<td width=27%>“Hello world”</td>
</tr>
<tr valign=top>
<td width=17%>su</td>
<td width=33%>Unicode string</td>
<td width=23%></td>
<td width=27%>“Hello world”</td>
</tr>
<tr valign=top>
<td width=17%>st</td>
<td width=33%>Unicode string or ANSI string, depending on Unicode Strings setting in autoexp.dat.</td>
<td width=23%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=17%>hr</td>
<td width=33%><b>HRESULT</b> or Win32 error code.</td>
<td width=23%>0x00000000L</td>
<td width=27%>S_OK</td>
</tr>
<tr valign=top>
<td width=17%>wc</td>
<td width=33%>Window class flag.</td>
<td width=23%>0x00000040 </td>
<td width=27%>WC_DEFAULTCHAR</td>
</tr>
<tr valign=top>
<td width=17%>wm</td>
<td width=33%>Windows message numbers</td>
<td width=23%>0x0010</td>
<td width=27%>WM_CLOSE</td>
</tr>
</table><br>
<p>
To use a formatting symbol, type the variable name, followed by a comma and the appropriate symbol. For example, if <code>var</code> has a value of <code>0x0065</code>, and you want to see the value in character form, type <code>var,c</code> in the Name column on the tab of the Watch window. When you press ENTER, the character-format value appears:</p>
<pre><code>var,c = 'e'
</code></pre>
<p>
You can use the formatting symbols shown in the following table to format the contents of memory locations.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=16%><b>Symbol</b></td>
<td class=label width=36%><b>Format</b></td>
<td class=label width=48%><b>Displays</b></td>
</tr>
<tr valign=top>
<td width=16%>ma</td>
<td width=36%>64 ASCII characters</td>
<td width=48%>0x0012ffac .4...0...".0W&amp;.......1W&amp;.0.:W..1...."..1.JO&amp;.1.2.."..1...0y....1</td>
</tr>
<tr valign=top>
<td width=16%>m</td>
<td width=36%>16 bytes in hexadecimal, followed by 16 ASCII characters </td>
<td width=48%>0x0012ffac B3 34 CB 00 84 30 94 80 FF 22 8A 30 57 26 00 00 .4...0...".0W&amp;..</td>
</tr>
<tr valign=top>
<td width=16%>mb</td>
<td width=36%>16 bytes in hexadecimal, followed by 16 ASCII characters </td>
<td width=48%>0x0012ffac B3 34 CB 00 84 30 94 80 FF 22 8A 30 57 26 00 00 .4...0...".0W&amp;..</td>
</tr>
<tr valign=top>
<td width=16%>mw</td>
<td width=36%>8 words</td>
<td width=48%>0x0012ffac 34B3 00CB 3084 8094 22FF 308A 2657 0000</td>
</tr>
<tr valign=top>
<td width=16%>md</td>
<td width=36%>4 doublewords</td>
<td width=48%>0x0012ffac 00CB34B3 80943084 308A22FF 00002657</td>
</tr>
<tr valign=top>
<td width=16%>mq</td>
<td width=36%>4 quadwords</td>
<td width=48%>0x0012ffac 7ffdf00000000000 5f441a790012fdd4</td>
</tr>
<tr valign=top>
<td width=16%>mu</td>
<td width=36%>2-byte characters (Unicode)</td>
<td width=48%>0x0012fc60 8478 77f4 ffff ffff 0000 0000 0000 0000</td>
</tr>
</table><br>
<p>
With the memory location formatting symbols, you can type any value or expression that evaluates to a location.</p>
<p>
To display the value of a character array as a string, precede the array name with an ampersand (&amp;):</p>
<pre><code>&amp;yourname
</code></pre>
<p>
A formatting character can follow an expression also:</p>
<pre><code>rep+1,x
alps[0],mb
xloc,g
count,d
</code></pre>
<p>
To watch the value at an address or the value pointed to by a register, use the <b>BY</b>, <b>WO</b>, or <b>DW</b> operator.
<ul type=disc>
<li>
<b>BY </b>returns the contents of the byte pointed to.<br><br></li>
<li>
<b>WO </b>returns the contents of the word pointed to.<br><br></li>
<li>
<b>DW </b>returns the contents of the doubleword pointed to.</li>
</ul>
<p>
Follow the operator with a variable, register, or constant. If the <b>BY</b>, <b>WO</b>, or <b>DW </b>operator is followed by a variable, then the environment watches the byte, word, or doubleword at the address contained in the variable.</p>
<p>
You can also use the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="advanced breakpoint">
</object><a href=JavaScript:alink_1.Click()>context operator</a> <b>{ }</b> to display the contents of any location. </p>
<p>
To display a Unicode string in the Watch window or the <b>QuickWatch</b> dialog box, use the <b>su </b>format specifier. To display data bytes with Unicode characters in the Watch window or the <b>QuickWatch</b> dialog box, use the <b>mu</b> format specifier.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can apply formatting symbols to structures, arrays, pointers, and objects as unexpanded variables only. If you expand the variable, the specified formatting affects all members. You cannot apply formatting symbols to individual members.</p>
</FONT></BODY>
</HTML>
