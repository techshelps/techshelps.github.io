<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding a Property to an MFC ActiveX Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_add_a_property_to_an_mfc_activex_control"></a>Adding a Property to an MFC ActiveX Control</h1>
<p>
<a href="_asug_overview.3a_.working_with_com_interfaces.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i_......_topics.3a_.working_with_com_interfaces.htm">How Do I ... Topics</a></p>
<p>
When defining a property for an MFC ActiveX control interface, you can implement the property with a member variable or with <b>Get</b>/<b>Set</b> methods. Using the member variable implementation provides direct access to the property, whereas using <b>Get </b>and <b>Set </b>methods to implement the property enforces a controlled access. If you do implement the property via a member variable, you can also provide a notification function to alert you when the value of the property changes. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The member variable implementation is not valid for text properties such as <b>Caption</b>.</p>
<p class=label>
<b>To add a property to an MFC ActiveX control</b>
<ol>
<li>
Open the <b>Add Property</b> dialog box in one of the following ways:<ul type=disc>
<li>
In ClassView, rest your cursor on the interface, click the right mouse button to invoke the shortcut menu, then choose <b>Add Property</b>.<br><br></li>
<li>
In ClassWizard, for an automation-enabled class, click the <b>Automation </b>tab, then choose <b>Add Property</b>.</li>
</ul>
</li>
<li>
In the <b>External name</b> box, enter the name you want to use to identify this property to automation clients, or choose from the list of available stock properties.<p class=tl>
To create your own property, type in a unique name. If you choose from the list, you can either use the <b>Stock</b> radio button to use inherited behavior, or you can select the <b>Get/Set</b> methods radio button to override the parent classes with your own function implementation.</P></li>
<li>
For properties you are defining, select a type from the <b>Type </b>drop-down list. <p class=tl>
You cannot modify the type for stock properties.</P></li>
<li>
Choose an <b>Implementation</b> type for the property.<p class=tl>
Your choice is reflected in the two text boxes below the <b>Type </b>drop-down list. By default, <b>Member variable</b> is selected, displaying the <b>Variable name</b> and <b>Notification function</b> text boxes. Selecting <b>Get/Set methods</b> displays the <b>Get function</b> and <b>Set function</b> boxes. </P></li>
<li>
Optionally edit the text boxes that display the implementation functions.<br><br></li>
<li>
For properties you’ve created, specify any custom parameters you’d like this property to take. In the <b>Parameter </b>list area, for each parameter you wish to define:<ul type=disc>
<li>
Enter a name for the parameter in the <b>Name </b>box.<br><br></li>
<li>
Select a valid type from the <b>Type </b>drop-down list.</li>
</ul>
<p class=tl>
The <b>Parameter </b>list area is unavailable for a member variable implementation, since member variables don’t take parameters.</P></li>
<li>
When you’ve completed the property definition, click <b>OK </b>to exit the <b>Add Property</b> dialog box.</li>
</ol>
<p>
The new property is displayed as an icon in ClassView under the dispinterface where it is defined. For custom properties, or stock properties with custom implementations, it is also displayed under the class that implements it. You can double-click the icon under the dispinterface to jump to the .odl file, and you can double-click the icon under the class to jump to the .cpp file.</p>
</FONT></BODY>
</HTML>
