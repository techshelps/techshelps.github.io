<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Variables Window</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_variables_window"></a>Variables Window</h1>
<p>
<a href="_asug_home_page.3a_.debugger.htm">Home Page (Debugger)</a>  |&nbsp; <a href="_asug_overview.3a_.the_debugging_interface.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i......_topics.3a_.debugging.htm">How Do I... Topics</a>  </p>
<p>
The Variables window provides quick access to variables that are important in the program’s current context. The window includes three tabs: 
<ul type=disc>
<li>
The <b>Auto</b> tab displays variables used in the current statement and in the previous statement. It also displays return values when you step over or out of a function.<br><br></li>
<li>
The <b>Locals</b> tab displays the variables that are local to the current function.<br><br></li>
<li>
The <b>This </b>tab displays the object pointed to by <b>this</b>.</li>
</ul>
<p>
Each tab contains a spreadsheet with fields for the variable name and value. The debugger automatically fills in these fields. If a value appears in red, it indicates that the value has recently changed. Only the last value to change appears in red. </p>
<p>
You cannot add variables or expressions to the Variables window (you must use the Watch window — but you can expand or collapse the variables shown using the tree controls. You can expand an array, object, or structure variable in the Variables window if it has a plus sign (+) box in the Name field. If an array, object, or structure variable has a minus sign (–) box in the Name field, the variable is already fully expanded. To expand or collapse the variable, click the + or – box, as described in <a href="_asug_spreadsheet_fields.htm">Spreadsheet Fields</a>. </p>
<p>
If the variable is an object, reference or a C++ pointer to an object, the Variables window automatically expands the variable to show the most important data at the top level. For example, suppose you had the following C++ object:</p>
<pre><code>CString String&nbsp; =&nbsp;&nbsp; {...}
char *&nbsp;&nbsp; m_pchData =0x7ffdf000 "abc"
   int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_nDataLength=4
   int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_nAllocLength=1244628
</code></pre>
<p>
The Variables window would display the following:</p>
<pre><code>String&nbsp; =&nbsp;&nbsp; {"abc"}
</code></pre>
<p>
If the variable is a reference or a C++ pointer to an object, the Variables window automatically downcasts the reference or pointer. The Variables window adds an extra member to the expanded object. This extra member, which looks like another base class, indicates the derived subclass. For example, if a variable declared as a C++ pointer to <b>CObject</b> really points to a <b>CComboBox</b>, the Variables window recognizes this fact and adds an extra member so that you can access the <b>CComboBox</b> members.</p>
<p>
In addition to the tabs, the Variables window has a context box on the toolbar that contains a copy of the current call stack in a drop-down list box. Use this list to specify the current scope of the variables displayed. The <b>Content</b> box is part of a toolbar, which you can hide using the right mouse button.</p>
<h2>Navigating from the Variables Window</h2>
<p>
You can navigate to a function’s source code or disassembled object code from the <b>Context</b> box in the Variables window. This procedure displays the function’s source code, if it is available, in a source window. If source code for the selected function is not available, it displays the function’s object code in the Disassembly window.</p>
<p>
This procedure changes the view of the program displayed in the Variables window and other debugger windows, but does not change the next line of execution or the value stored in the program counter.</p>
<h3>What do you want to do?</h3>
<p>
<a href="_asug_viewing_the_value_of_a_variable.htm">View the value of a variable</a></p>
<p>
<a href="_asug_modifying_the_value_of_a_variable.htm">Modify the value of a variable</a></p>
</FONT></BODY>
</HTML>
