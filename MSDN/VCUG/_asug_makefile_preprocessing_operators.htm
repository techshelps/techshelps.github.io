<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Makefile Preprocessing Operators</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_makefile_preprocessing_operators"></a>Makefile Preprocessing Operators</h1>
<p>
<a href="_asug_home_page.3a_.working_with_projects.htm">Home Page (Projects)</a>  |&nbsp; <a href="_asug_overview.3a_.nmake_reference.htm">Overview (NMAKE Reference)</a>  |&nbsp; <a href="_asug_how_do_i......_topics.3a_.working_with_projects.htm">How Do I... Topics (Projects)</a></p>
<p>
The <b>DEFINED</b> operator is a logical operator that acts on a macro name. The expression <b>DEFINED</b> (<i>macroname</i>) is true if <i>macroname</i> is defined. <b>DEFINED</b> in combination with <b>!IF</b> or <b>!ELSE IF</b> is equivalent to <b>!IFDEF</b> or <b>!ELSE IFDEF</b>. However, unlike these directives, <b>DEFINED</b> can be used in complex expressions using binary logical operators.</p>
<p>
The <b>EXIST</b> operator is a logical operator that acts on a file-system path. <b>EXIST</b> (<i>path</i>) is true if <i>path</i> exists. The result from <b>EXIST</b> can be used in binary expressions. If <i>path</i> contains spaces, enclose it in double quotation marks.</p>
<p>
Integer constants can use the unary operators for numerical negation (–), one's complement (<b>~</b>), and logical negation (<b>!</b>).</p>
<p>
Constant expressions can use the following binary operators.</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b>Operator</b></td>
<td class=label width=27%><b>Description</b></td>
<td class=label width=21%><b>Operator</b></td>
<td class=label width=33%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=19%><b>+</b> </td>
<td width=27%>Addition</td>
<td width=21%><b>||</b> </td>
<td width=33%>Logical OR</td>
</tr>
<tr valign=top>
<td width=19%><b>–</b> </td>
<td width=27%>Subtraction</td>
<td width=21%><b>&lt;&lt;</b> </td>
<td width=33%>Left shift</td>
</tr>
<tr valign=top>
<td width=19%><b>*</b> </td>
<td width=27%>Multiplication</td>
<td width=21%><b>&gt;&gt;</b> </td>
<td width=33%>Right shift</td>
</tr>
<tr valign=top>
<td width=19%><b>/</b> </td>
<td width=27%>Division</td>
<td width=21%><b>==</b> </td>
<td width=33%>Equality</td>
</tr>
<tr valign=top>
<td width=19%><b>%</b> </td>
<td width=27%>Modulus</td>
<td width=21%><b>!=</b> </td>
<td width=33%>Inequality</td>
</tr>
<tr valign=top>
<td width=19%><b>&amp;</b> </td>
<td width=27%>Bitwise AND</td>
<td width=21%><b>&lt;</b> </td>
<td width=33%>Less than</td>
</tr>
<tr valign=top>
<td width=19%><b>|</b> </td>
<td width=27%>Bitwise OR</td>
<td width=21%><b>&gt;</b></td>
<td width=33%>Greater than</td>
</tr>
<tr valign=top>
<td width=19%><b>^</b> </td>
<td width=27%>Bitwise XOR</td>
<td width=21%><b>&lt;=</b> </td>
<td width=33%>Less than or equal to</td>
</tr>
<tr valign=top>
<td width=19%><b>&amp;&amp;</b> </td>
<td width=27%>Logical AND</td>
<td width=21%><b>&gt;=</b> </td>
<td width=33%>Greater than or equal to</td>
</tr>
</table><br>
<p>
To compare two strings, use the equality (<b>==</b>) operator and the inequality (<b>!=</b>) operator. Enclose strings in double quotation marks.</p>
</FONT></BODY>
</HTML>
