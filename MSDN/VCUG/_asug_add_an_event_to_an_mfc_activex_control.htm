<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding an Event to an MFC ActiveX Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_add_an_event_to_an_mfc_activex_control"></a>Adding an Event to an MFC ActiveX Control</h1>
<p>
<a href="_asug_overview.3a_.working_with_com_interfaces.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i_......_topics.3a_.working_with_com_interfaces.htm">How Do I ... Topics</a></p>
<p>
When you use the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ActiveX ControlWizard">
</object><a href=JavaScript:alink_1.Click()>MFC ActiveX Control Wizard</a> to create a control, Visual C++ creates two interfaces, displayed as icons in <a href="_asug_overview.3a_.classview.htm">ClassView</a>. The first is the dispinterface that you use to add properties and methods. The second is the dispinterface that you use to define outgoing events.</p>
<p>
<img src="vc39rh1.gif" border=0></P><p class=label>
<b>To add an event to an MFC ActiveX control</b>
<ol>
<li>
Open the <b>Add Event</b> dialog box in one of the following ways:<ul type=disc>
<li>
In ClassView, rest your cursor on the event interface, click the right mouse button to invoke the shortcut menu, then choose <b>Add Event</b>.<br><br></li>
<li>
In ClassWizard, for an automation-enabled class, select the <b>Automation </b>tab, then choose <b>Add Event</b>.</li>
</ul>
</li>
<li>
For stock events, select a name from the <b>External name</b> list. For new events you wish to define, type in the name in the <b>External name</b> text box.<p class=tl>
This is the name automation clients will use to request an event from the control. The <b>Internal name</b> box displays a suggested member function name. You can optionally change that name.</P></li>
<li>
For stock events, in the <b>Implementation</b> area, specify whether you will use the stock implementation or whether you will customize it. <p class=tl>
If you are defining a new event, this area is unavailable. </P></li>
<li>
For events you are defining, use the <b>Parameter list</b> to specify any parameters you want the event to take. For each parameter you wish to define: <ul type=disc>
<li>
Enter a name for the parameter in the <b>Name </b>box.<br><br></li>
<li>
Choose a valid type from the <b>Type </b>list.</li>
</ul>
</li>
<li>
When you are finished defining the control event, click <b>OK </b>to exit the <b>Add Event</b> dialog box.</li>
</ol>
<p>
The event is visible as an icon in ClassView under the interface. </p>
<p>
<img src="vc39rh2.gif" border=0></P><p>
You can double-click the icon to jump to the definition in the .odl file. For custom events, or stock events with custom implementations, you can double-click the icon under the class that implements the interface (usually the control class) to jump to the .h file.</p>
</FONT></BODY>
</HTML>
