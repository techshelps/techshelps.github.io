<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exporting a Makefile</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_exporting_a_makefile"></a>Exporting a Makefile</h1>
<p>
<a href="_asug_home_page.3a_.working_with_projects.htm">Home Page (Projects)</a>  |&nbsp; <a href="_asug_overview.3a_.working_with_projects.htm">Overviews</a>  |&nbsp; <a href="_asug_how_do_i......_topics.3a_.working_with_projects.htm">How Do I... Topics</a>  |&nbsp; <a href="_asug_overview.3a_.nmake_reference.htm">NMAKE Reference</a></p>
<p>
If you want to use <a href="_asug_overview.3a_.nmake_reference.htm">NMAKE</a> to build a Visual C++ project, instead of building it from within the environment or by using the Visual C++ command line tools, you can it export it as a makefile (<i>ProjectName</i>.mak). However, you no longer need to use NMAKE to build a Visual C++ project from the command line. For more information, see <a href="_asug_building_a_project_from_the_command_line.htm">Building a project from the command line</a>.</p>
<p>
Exporting a .mak file consists of two parts: creating the .mak file and creating or updating a corresponding .dep file. The first time you export a .mak file, Visual C++ creates an NMAKE-style include file (<i>Projectname</i>.dep), which contains information about any included files required to build the project source files. Within the .mak file, Visual C++ adds an <b>!include</b> directive that references the <i>projectname</i>.dep file. Once this .dep file exists, you can specify whether or not you want Visual C++ to export the dependency information when it exports the .mak file. </p>
<p>
You can greatly increase the speed of exporting .mak files by exporting dependency information only when you explicitly want to update the .dep file. You may not wish to update dependency information, for example, if only compiler switches have changed since the last time you built the project. </p>
<p>
By default, the information written to the .dep file is applied to all build configurations. If there are significant differences in the dependencies between build configurations, for example, extra header files for a "Win32 Debug" configuration, you can specify that the dependency information be written on a per-configuration basis.</p>
<p>
You may also wish to create and maintain the .dep files yourself. If so, you must follow the NMAKE naming convention (<i>ProjectName</i>.dep) or your project will not build.</p>
<p>
Here is an example .dep file for <i>MyProject</i>.mak:</p>
<pre><code>FileName.cpp: MyDep1.h, MyDep2.h
FileName2.cpp: YourDep2.h 
</code></pre>
<h3>What do you want to do?</h3>
<p>
<a href="#_asug_to_export_a_makefile">Export a makefile</a></p>
<p>
<a href="#_asug_automatically_exporting_a_makefile">Automatically export a makefile whenever a project is updated</a></p>
<p>
<a href="#_asug_automatically_writing_dependency_information">Automatically write dependency information when exporting a makefile</a></p>
<p>
<a href="#_asug_specifying_per_config_dependencies">Specify different dependency information for different configurations</a></p>
<p class=label>
<b><a name="_asug_to_export_a_makefile"></a>To export a makefile</b>
<ol>
<li>
From the <b>Project</b> menu, select <b>Export Makefile</b>.<br><br></li>
<li>
In the <b>Export Makefile(s)</b> dialog box, select the project(s) for which you want to create a .mak file.<p class=tl>
A separate .mak file is created for each project you select.</P></li>
<li>
If you want Visual C++ to update dependency information, check the <b>Write dependencies when writing makefiles</b> checkbox.</li>
</ol>
<p>
If you know that you want to automatically export the .mak file each time you update this project, use the following procedure.</p>
<p class=label>
<b><a name="_asug_automatically_exporting_a_makefile"></a>To automatically export a makefile when the project is updated</b>
<ol>
<li>
From the <b>Tools</b> menu, choose <b>Options</b>.<br><br></li>
<li>
On the <b>Build</b> tab, check the <b>Export makefile when saving project file</b> checkbox. <p class=tl>
Selecting this option increases the time it takes to save the project. </P></li>
</ol>
<p class=label>
<b><a name="_asug_automatically_writing_dependency_information"></a>To automatically write dependency information every time you export a makefile</b>
<ol>
<li>
From the <b>Tools</b> menu, choose <b>Options</b>.<br><br></li>
<li>
On the <b>Build</b> tab, check the <b>Always write dependencies when writing makefiles</b> checkbox.<p class=tl>
Selecting this option considerably increases the time it takes to write the .mak file.</P></li>
</ol>
<p class=label>
<b><a name="_asug_specifying_per_config_dependencies"></a>To specify per-configuration dependency information</b>
<ol>
<li>
From the <b>Project</b> menu, choose <b>Settings</b>.<br><br></li>
<li>
On the <b>General</b> tab, check the <b>Allow per-configuration dependencies</b> checkbox.<p class=tl>
Selecting this option increases the time it takes to write the dependency information, according to the number of build configurations in the project. </P></li>
</ol>
</FONT></BODY>
</HTML>
