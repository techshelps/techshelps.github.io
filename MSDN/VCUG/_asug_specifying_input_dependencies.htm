<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Specifying Input Dependencies</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_specifying_input_dependencies"></a>Specifying Input Dependencies</h1>
<p>
<a href="_asug_home_page.3a_.working_with_projects.htm">Home Page (Projects)</a>  |&nbsp; <a href="_asug_overview.3a_.working_with_projects.htm">Overviews</a>  |&nbsp; <a href="_asug_how_do_i......_topics.3a_.working_with_projects.htm">How Do I... Topics</a>  |&nbsp; <a href="_asug_overview.3a_.nmake_reference.htm">NMAKE Reference</a></p>
<p>
Specifying input dependencies on a per-file basis is a way to ensure that your build steps run in the order you need them to. For example, you may have a custom build step that creates an output file, MyOutput.h. Another file in the project, MyInput.cpp, may have a build rule that depends on MyOutput.h. You can specify MyOutput.h as an input dependency to MyInput.cpp, and the build system will first ensure that MyOutput.h exists and is up-to-date before running the custom build steps for MyInput.cpp.</p>
<p>
You can specify input dependencies to a file even if the build process doesn't recognize the extension of either the input file or the dependent file.</p>
<p class=label>
<b>To specify input dependencies</b>
<ol>
<li>
On the <b>Project</b> menu, click <b>Settings</b>.<br><br></li>
<li>
Specify the project configuration and select the file for which you want to specify input dependencies.<br><br></li>
<li>
Select the <b>Custom Build</b> tab. <p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the file type is one that is already handled by the build system (such as .cpp, rc., .idl) you need to check the <b>Always use custom build step</b> option on the <b>General</b> tab in order for the <b>Custom Build</b> tab to appear.</p></li>
<li>
Click the <b>Dependencies</b> button.<br><br></li>
<li>
Type all of the input files into the <b>User-defined dependencies</b> dialog box.</li>
</ol>
</FONT></BODY>
</HTML>
