<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AddCommand Method</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_addcommand_method"></a>AddCommand Method</h1>
<p>
<a href="_asug_home_page.3a_.developer_studio_objects.htm">Home Page (Objects)</a>  |&nbsp; <a href="_asug_overview.3a_.developer_studio_objects.htm">Overview</a>  |&nbsp; <a href="_asug_frequently_asked_questions.3a_.developer_studio_objects.htm">FAQ</a>  |&nbsp; <a href="_asug_reference.3a_.developer_studio_objects.htm">Reference</a></p>
<p>
Applies to: <a href="_asug_application_object.htm">Application</a> object</p>
<p>
Adds a command defined by an <a href="_asug_overview.3a_.developer_studio_add.2d.ins.htm">add-in</a> to Developer Studio.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>object</i><b>.AddCommand</b> <b>(</b> <i>command_string</i><b>,</b> <i>method_name</i><b>,</b> <i>bitmap_offset</i><b>,</b> <i>cookie</i> <b>)</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>object</i></p>
<p class=indent>
An expression that evaluates to an <b>Application</b> object. When you use the <b>AddCommand</b> method of the <b>Application</b> object, you can omit <i>object</i> because the name of the <b>Application</b> object is implied when you access its properties and methods.</p>
<p class=dt>
<i>command_string</i></p>
<p class=indent>
A <b>String</b> that contains substrings separated by a newline character ('\n'), which is "Chr(10)" in Visual Basic. In order, the substrings are:
<ul type=disc>
<li>
Name of the command<p class=tl>
This is the command you want to add. If this command conflicts with an existing command, Developer Studio returns <b>False</b>, keeps the existing command, and does not add this command. To prevent conflicts with Developer Studio commands, the add-in should prefix this command with the name of the add-in.</P></li>
<li>
Text displayed on the toolbar button for the command<p class=tl>
If you create a <a href="_asug_addcommandbarbutton_method.htm">toolbar button</a> for carrying out the command, this is the text that goes on the button.</P></li>
<li>
Status bar string<p class=tl>
This is the string displayed on the status bar or in the <b>Customize </b>dialog box when the user selects this command.</P></li>
<li>
Tooltip string<p class=tl>
This is the string displayed in the tooltip when the user holds the mouse pointer over the toolbar button assigned to the command.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Even if the add-in does not provide a toolbar button for a command, the add-in must provide all four substrings, because users can create toolbar buttons for commands added by add-ins.</p></li>
</ul>
<p class=dt>
<i>method_name</i></p>
<p class=indent>
A <b>String</b> that represents the method exposed by the add-in to implement the command.</p>
<p class=dt>
<i>bitmap_offset</i></p>
<p class=indent>
A <b>Long</b> that is the zero - based index into the medium and large command bar button bitmaps for this button image. For example, 0 (zero) represents the first image, 1 represents the second image, and so on. If the add-in does not provide a default image for toolbar buttons assigned to this command, the value of <i>bitmap_offset</i> is -1.</p>
<p class=dt>
<i>cookie</i></p>
<p class=indent>
A <b>Long</b> that is the identifier of the add-in. Developer Studio passes this value to the add-in through the add-in's <a href="_asug_how_add.2d.ins_connect_and_disconnect.htm">OnConnection</a> method.</p>
<p class=label>
<b>Return Values</b></p>
<p>
The <b>AddCommand</b> method returns one of the following values:
<ul type=disc>
<li>
<b>True</b>&nbsp;&nbsp;&nbsp;The command was added.<br><br></li>
<li>
<b>False</b>&nbsp;&nbsp;&nbsp;The command was not added because its name conflicted with the name of an existing command.</li>
</ul>
<p class=label>
<b>Remarks</b></p>
<p>
Only add-ins can call the <b>AddCommand</b> method. <a href="_asug_overview.3a_.vbscript_macros.htm">VBScript macros</a> cannot.</p>
<p class=label>
<b>Example</b></p>
<p>
The following example, written in Visual C++, is the code automatically generated when you create an add-in using the Developer Studio Add-in Wizard:</p>
<pre><code>VARIANT_BOOL bRet;
pApplication-&gt;AddCommand(bszCmdString, bszMethod, 0, m_dwCookie, &amp;bRet);
if (bRet == VARIANT_FALSE)
{
 &nbsp; *OnConnection = VARIANT_FALSE;
 &nbsp; return S_OK;
}
</code></pre>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_asug_addcommandbarbutton_method.htm">AddcommandBarButton</a> method, <a href="_asug_addkeybinding_method.htm">AddKeyBinding</a> method, <a href="_asug_adding_commands_to_developer_studio.htm">Adding Commands to Developer Studio</a>, <a href="_asug_enablemodeless_method.htm">EnableModeless</a> method, <a href="_asug_setaddininfo_method.htm">SetAddInInfo</a> method.</p>
</FONT></BODY>
</HTML>
