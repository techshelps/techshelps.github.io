<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Running to a Location</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_running_to_a_location"></a>Running to a Location</h1>
<p>
<a href="_asug_home_page.3a_.debugger.htm">Home Page (Debugger)</a>  |&nbsp; <a href="_asug_overview.3a_.the_debugging_interface.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i......_topics.3a_.debugging.htm">How Do I... Topics</a>  </p>
<h3>What do you want to do?</h3>
<p>
<a href="#_asug_run_until_a_breakpoint_is_reached">Run until a breakpoint is reached</a> </p>
<p>
<a href="#_asug_run_to_the_cursor">Run to the cursor</a> </p>
<p>
<a href="#_asug_run_to_the_cursor_location_in_object_code">Run to the cursor location in object code</a> </p>
<p>
<a href="#_asug_run_to_the_cursor_location_in_the_call_stack">Run to the cursor location in the call stack</a> </p>
<p>
<a href="#_asug_run_to_a_specified_function">Run to a specified function</a> </p>
<p>
<a href="#_asug_set_the_next_statement_to_execute">Set the next statement to execute</a> </p>
<p>
<a href="#_asug_set_the_next_disassembled_instruction_to_execute">Set the next disassembled instruction to execute</a> </p>
<p class=label>
<b><a name="_asug_run_until_a_breakpoint_is_reached"></a>To run until a breakpoint is reached</b>
<ol>
<li>
Set a breakpoint.<br><br></li>
<li>
On the <b>Build</b> menu, click <b>Start Debug</b>.<br><br></li>
<li>
From the <b>Start Debug</b> menu, choose <b>Go</b>.</li>
</ol>
<p class=label>
<b><a name="_asug_run_to_the_cursor_when_the_debugger_is_not_running"></a>To run to the cursor (while the debugger is not running) </b>
<ol>
<li>
In a source file, move the insertion point to the location where you want the debugger to break.<br><br></li>
<li>
From the <b>Build</b> menu, select <b>Start Debug</b> and <b>Run To Cursor</b>.</li>
</ol>
<p class=label>
<b><a name="_asug_run_to_the_cursor"></a>To run to the cursor (while the debugger is running but halted) </b>
<ol>
<li>
In a source file, move the insertion point to the location where you want the debugger to break.<br><br></li>
<li>
From the <b>Debug</b> menu, choose <b>Run To Cursor</b>. </li>
</ol>
<p class=label>
<b><a name="_asug_run_to_the_cursor_location_in_object_code"></a>To run to the cursor location in disassembly code (while the debugger is running but halted)</b>
<ol>
<li>
In the Disassembly window, move the insertion point to the location where you want the debugger to break.<br><br></li>
<li>
On the <b>Debug</b> menu, click <b>Run To Cursor</b>. </li>
</ol>
<p class=label>
<b><a name="_asug_run_to_the_cursor_location_in_the_call_stack"></a>To run to the cursor location in the call stackcode (while the debugger is running but halted)</b>
<ol>
<li>
In the Call Stack window, select the function name.<br><br></li>
<li>
From the <b>Debug</b> menu, choose <b>Run To Cursor</b>.</li>
</ol>
<p class=label>
<b><a name="_asug_run_to_a_specified_function"></a>To run to a specified function</b>
<ol>
<li>
In the <b>Find</b> box on the standard toolbar, type the function name.<br><br></li>
<li>
On the <b>Build</b> menu, click <b>Start Debug</b>.<br><br></li>
<li>
On the <b>Start Debug</b> menu, click <b>Run To Cursor</b>.</li>
</ol>
<p>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;You can use the <b>Run To Cursor</b> command to return to an earlier statement to retest your application, using different values for variables.</p>
<p class=label>
<b><a name="_asug_set_the_next_statement_to_execute"></a>To set the next statement to execute (while the debugger is running but halted)</b>
<ol>
<li>
In a source window, move the insertion point to the statement or instruction that you want to execute next.<br><br></li>
<li>
Click the right mouse button.<br><br></li>
<li>
On the shortcut menu, click <b>Set Next Statement</b>.</li>
</ol>
<p class=label>
<b><a name="_asug_set_the_next_disassembled_instruction_to_execute"></a>To set the next disassembled instruction to execute (while the debugger is running but halted)</b>
<ol>
<li>
In the Disassembly window, move the insertion point to the disassembled instruction you want to execute next.<br><br></li>
<li>
Click the right mouse button.<br><br></li>
<li>
On the shortcut menu, click <b>Set Next Statement</b>.</li>
</ol>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;You can use the <b>Set Next Statement</b> command to skip a section of code. For instance, a section that contains a known bug — and continue debugging other sections.</p>
<p class=indent>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;The <b>Set Next Statement</b> command causes the program counter to jump to the new location. The intervening code is not executed. Use this command with caution.</p>
</FONT></BODY>
</HTML>
