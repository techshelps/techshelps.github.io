<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting Syntax Coloring</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_set_syntax_coloring"></a>Setting Syntax Coloring</h1>
<p>
<a href="_asug_home_page.3a_text_editor.htm">Home Page (Text Editor)</a>  |&nbsp; <a href="_asug_overviews.3a_.text_editor.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i_......_topics.3a_.text_editor.htm">How Do I ... Topics</a>  |&nbsp; <a href="_asug_frequently_asked_questions.3a_.text_editor.htm">FAQ</a>  |&nbsp; <a href="_asug_reference.3a_.text_editor.htm">Reference</a> </p>
<p>
Syntax coloring uses different colors for various elements of your code, such as keywords or comments. This coloring gives you visual cues about the structure and state of your code.</p>
<h3>What do you want to know more about?</h3>
<p>
<a href="_asug_syntax_coloring.htm">Syntax coloring</a> </p>
<h3>What do you want to do?</h3>
<p>
<a href="#_asug_to_set_syntax_coloring_for_one_source_file">Set syntax coloring for one source file</a> </p>
<p>
<a href="#_asug_to_change_colors_used_for_syntax_coloring">Change colors used for syntax coloring</a> </p>
<p>
<a href="#_asug_to_set_syntax_coloring_for_user.2d.defined_keywords">Set syntax coloring for user-defined keywords</a> </p>
<p>
<a href="#_asug_to_set_syntax_coloring_for_extensionless_header_files">Set syntax coloring for extensionless header files</a> </p>
<p>
<a href="#_asug_to_set_syntax_coloring_for_a_custom_html_variation">Set syntax coloring for a custom HTML variation</a> </p>
<p class=label>
<b><a name="_asug_to_set_syntax_coloring_for_one_source_file"></a>To set syntax coloring for one source file</b>
<ol>
<li>
From the <b>Window</b> menu, select the source window you want to activate.<p class=tl>
If there are multiple windows open on the same source file, select one. Syntax coloring changes will appear in all windows.</P></li>
<li>
From the <b>View</b> menu, choose <b>Properties</b>.<p class=tl>
The <b>Source File Properties</b> page appears. The <b>Language</b> box displays the current language setting for syntax coloring. The drop-down list contains the available language choices.</P></li>
<li>
In the <b>Language</b> box, select the language for which you want to set syntax coloring, or select <b>None</b> to turn syntax coloring off.<br><br></li>
<li>
Close the property page.<p class=tl>
The choice you made takes effect.</P></li>
</ol>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;If you create or save a file with a recognized extension (such as VBS, CPP, or HTM), syntax coloring for the language indicated by that extension takes effect immediately.</p>
<p class=label>
<b><a name="_asug_to_change_colors_used_for_syntax_coloring"></a>To change colors used for syntax coloring</b>
<ol>
<li>
From the <b>Tools</b> menu, choose <b>Options</b>.<br><br></li>
<li>
Select the <b>Format</b> tab.<br><br></li>
<li>
In the <b>Category</b> box, select the type of window for which you want to define formatting.<br><br></li>
<li>
In the <b>Font</b> box, select the font you want.<p class=tl>
The <b>Font</b> box displays the different fonts installed on your system. The text sample in the sample box changes to the font you select.</P></li>
<li>
In the <b>Size</b> box, select the size to be used with the font you selected.<p class=tl>
The <b>Size</b> box displays the sizes available for the selected font. The text sample in the sample box changes to the size you select.</P></li>
<li>
In the <b>Colors</b> box, select the type of text you want to color.<br><br></li>
<li>
In the <b>Background</b> box, select a background color.<br><br></li>
<li>
In the <b>Foreground</b> box, select a foreground color.<p class=tl>
The <b>Background</b> and <b>Foreground</b> boxes display the 16 standard colors and the <b>Automatic</b> setting. The text sample displayed in the <b>Sample</b> box changes to the color you select.</P><p class=tl>
The behavior of the <b>Automatic</b> setting depends on the element selected. For colors that map to standard system elements (such as Foreground Color, Background Color, or Selected Text Color), the <b>Automatic</b> setting sets the element to the appropriate system color. For syntax coloring elements and other non-system defined colors, the <b>Automatic</b> setting indicates that the foreground color or background color from the same category is to be used.</P></li>
<li>
Click <b>OK</b>.</li>
</ol>
<p class=label>
<b><a name="_asug_to_set_syntax_coloring_for_user.2d.defined_keywords"></a>To set syntax coloring for user-defined keywords</b>
<ol>
<li>
In the same directory as msdev.exe, use the Text editor or Windows Notepad to create a text-only file named usertype.dat.<br><br></li>
<li>
Add your keywords to usertype.dat, one keyword per line.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The usertype.dat file is read during initialization. It cannot be renamed, nor can it be reloaded during an editing session. The syntax coloring mechanism checks the usertype.dat file last. Thus, all previously defined color settings take precedence over the user-defined keywords.</p></li>
<li>
Save the file as a text-only file, exit, and then restart Visual Studio.<br><br></li>
<li>
From the <b>Tools</b> menu, choose <b>Options</b>.<br><br></li>
<li>
Select the <b>Format</b> tab.<br><br></li>
<li>
In the <b>Colors</b> box, select <b>User Defined Keywords</b>.<br><br></li>
<li>
Set the font, font size, foreground color, and background color to your preferences.<p class=tl>
For more information, see <a href="#_asug_to_change_colors_used_for_syntax_coloring">To change colors used in syntax coloring</a>. </P></li>
<li>
Click <b>OK</b>.</li>
</ol>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;For any source file, you can use the <b>Source File Properties</b> page to specify which language syntax coloring to apply (or turn off syntax coloring altogether). For more information, see <a href="_asug_set_font_style.2c_.size.2c_.and_color.htm">Setting Font Style, Size, and Color</a>. </p>
<p class=label>
<b><a name="_asug_to_set_syntax_coloring_for_extensionless_header_files"></a>To set syntax coloring for extensionless header files</b>
<ol>
<li>
Open the langext.dat file. This file resides in the same directory as msdev.exe.<br><br></li>
<li>
Add the filenames you want to color to the file.<br><br></li>
<li>
Save the file.</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The langext.dat file pairs filenames with a language. This file is consulted only when extension matching fails. That is, an HTML file is always identified as HTML, not as C/C++, even if it is listed in the C/C++ section of langext.dat.</p>
<p class=label>
<b><a name="_asug_to_set_syntax_coloring_for_a_custom_html_variation"></a>To set syntax coloring for a custom HTML variation</b>
<ol>
<li>
Create a text file with an extension of .hlx in the \msdev\bin\ide directory. <p class=tl>
The first line of the file is a signature that uniquely identifies the type of the file. It contains the name of the variation that will be displayed on the <b>Source File Properties</b> page. After the signature line, the format resembles that of a Windows initialization file. A semicolon at the beginning of a line indicates a comment.</P></li>
<li>
Create three sections in the file: an [Elements] section, an [Attributes] section, and an [Entities] section.<p class=tl>
Each section contains a list of names separated by spaces, carriage returns, or line feeds. The names do not need to be in alphabetical order. You must specify all the elements, attributes, and entities you want to color.</P><p class=tl>
See the <a href="#_asug_sample_hlx_file">example</a> for a general outline of a sample .hlx file.</P></li>
<li>
Save the .hlx file.</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the custom variation you specify in the .hlx file has the same name as a built-in HTML support, it will override the built-in HTML support. There is a 14-character limit to the name of the HTML variation you specify.</p>
<h3><a name="_asug_sample_hlx_file"></a>Sample .hlx file</h3>
<p>
The following example gives the general outline of an .hlx file. For brevity, this example is shortened to omit most names. </p>
<pre><code>@HLX@ "HTML - Custom"
; Custom HTML tagset file.
; Must begin with the "@HLX@" signature and 
; the name of the HTML variant in quotes. The
; name is limited to 14 characters.
;--------------------------------
[Elements]
; Element set, case-insensitive
; HTML tags, e.g. &lt;H1&gt;

A APPLET

; break control
BR NOBR WBR

; headings
H1 H2 H3 H4 H5 H6

; character formatting
B CITE CODE EM I KBD STRIKE STRONG TT U VAR
FONT S SUB SUP SMALL BIG BLINK DFN

; etc. ...

;--------------------------------
[Attributes]
; Attribute set, case-insensitive
; (applied to all elements)

ACTION ALIGN ALINK ALT

; etc. ...

;--------------------------------
[Entities]
; Entity set, case-sensitive
; special characters, e.g. &amp;amp;
; If this section is empty or omitted, the standard set from RFC1866 is used.

gt lt amp quot 
; etc. ...
</code></pre>
</FONT></BODY>
</HTML>
