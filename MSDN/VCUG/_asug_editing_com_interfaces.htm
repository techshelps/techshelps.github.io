<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Editing COM Interfaces</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_editing_com_interfaces"></a>Editing COM Interfaces</h1>
<p>
<a href="_asug_overview.3a_.working_with_com_interfaces.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i_......_topics.3a_.working_with_com_interfaces.htm">How Do I ... Topics</a></p>
<p>
By using commands from the ClassView<b> </b>shortcut menu, you can easily define new methods and properties for the COM interfaces in your Visual C++ projects. In addition, you can define events for ActiveX controls.</p>
<p>
For ATL- and MFC-based COM object classes, you can edit the class implementation at the same time that you edit the interface. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;For interfaces that you have defined outside of the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_atl_Adding_Objects_and_Controls">
</object><a href=JavaScript:alink_1.Click()>ATL Object Wizard</a>, the <b>New Class</b> dialog box, or the MFC ClassWizard, Visual C++ adds the methods or properties to the .idl or .odl file, but doesn’t directly modify your implementation class. </p>
<p>
You can use the <b>Add Method</b>, <b>Add Property</b>, and <b>Add Event</b> dialog boxes, available from ClassView, to customize existing interfaces. Visual C++ detects the project type, and modifies the options in the dialog boxes accordingly:
<ul type=disc>
<li>
For dispinterfaces in projects created by using the MFC AppWizard, or classes created by using ClassWizard, invoking the <b>Add Method</b> or <b>Add Property</b> dialog box provides options specific to MFC and ClassWizard. <p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The MFC variant of these dialog boxes can also be invoked from the <b>OLE Automation</b> tab of the ClassWizard dialog box, for automation-capable classes.</p></li>
<li>
For MFC ActiveX control interfaces, the <b>Add Method</b>, <b>Add Property</b>, and <b>Add Event</b> dialog boxes provide a list of stock methods and properties that you can use as provided or customize for your control.<br><br></li>
<li>
For all other interfaces, the <b>Add Method</b> and <b>Add Property</b> dialog boxes provide options useful in most situations.</li>
</ul>
<h3>What do you want to do?</h3>
<p>
<a href="_asug_add_a_method_to_an_interface_or_non.2d.mfc_dispinterface.htm">Add a method to an interface or non-MFC dispinterface</a></p>
<p>
<a href="_asug_add_a_method_to_an_mfc_dispinterface.htm">Add a method to an MFC dispinterface</a></p>
<p>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_atl_Adding_Connection_Points_to_an_Object">
</object><a href=JavaScript:alink_2.Click()>Implement a connection point for an ATL object</a></p>
<p>
<a href="_asug_add_a_property_to_an_interface_or_non.2d.mfc_dispinterface.htm">Add a property to an interface or non-MFC dispinterface</a></p>
<p>
<a href="_asug_add_a_property_to_an_mfc_dispinterface.htm">Add a property to an MFC dispinterface</a></p>
<p>
<a href="_asug_add_a_method.2c_.property_or_event_to_an_mfc_activex_control.htm">Add a method, property, or event to an MFC ActiveX control</a></p>
</FONT></BODY>
</HTML>
