<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The OnConnection Method</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_the_onconnection_method"></a>The OnConnection Method</h1>
<p>
<a href="_asug_home_page.3a_.developer_studio_add_ins.htm">Home Page (Add-ins)</a>  |&nbsp; <a href="_asug_overview.3a_.developer_studio_add.2d.ins.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i_......_topics.3a_.developer_studio_add.2d.ins.htm">How Do I Topics</a>  |&nbsp; <a href="_asug_frequently_asked_questions.3a_.developer_studio_add_ins.htm">FAQ</a>  |&nbsp; <a href="_asug_reference.3a_.developer_studio_add.2d.ins.htm">Reference</a></p>
<p>
To load an add-in, the Visual C++ Developer Studio environment calls the add-in's <b>OnConnection</b> method. If you use the Developer Studio Add-in Wizard to create an add-in, the wizard automatically creates the code that implements the <b>OnConnection</b> method. In this code, the <b>OnConnection</b> method is in the <a href="_asug_understanding_the_results_of_the_add_in_wizard.htm#_asug_classes_created_by_the_devstudio_add_in_wizard">CDSAddIn</a> class located in the <a href="_asug_understanding_the_results_of_the_add_in_wizard.htm#_asug_files_created_by_the_devstudio_add_in_wizard">Dsaddin.cpp</a> file.</p>
<p>
The syntax for the <b>OnConnection</b> method is:</p>
<p>
<b>VARIANT BOOL</b> <b>OnConnection</b> <b>( Application</b>* <i>pApp</i>, <b>VARIANT BOOL</b> <i>bFirstTime</i>, <b>Long</b> <i>dwCookie</i> <b>)</b></p>
<p>
Developer Studio first passes a pointer (<b>Application</b>*) to the dual interface on the Developer Studio <a href="_asug_application_object.htm">Application</a> object.</p>
<p>
Additionally, Developer Studio provides a cookie. The add-in uses this cookie to identify itself in subsequent calls to Developer Studio. For example, the add-in uses this cookie to call the <a href="_asug_addcommand_method.htm">AddCommand</a> method.</p>
<p>
To connect, the add-in takes the following steps. If you use the Developer Studio Add-in Wizard, it automatically implements these steps:
<ol>
<li>
Uses the <i>pApp</i> parameter to ensure that required objects in the Developer Studio object model are installed. If required objects are not available, the add-in returns <b>VARIANT_FALSE</b>, indicating that it should not be loaded.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Because <b>OnConnection</b> is a COM method, it does not use the typical Visual C++ <b>BOOL</b> type (<b>TRUE</b> or <b>FALSE</b>). Instead it uses the <b>VARIANT_BOOL</b> type (<b>VARIANT_TRUE</b> or <b>VARIANT_FALSE</b>).</p></li>
<li>
Uses the <i>bFirstTime</i> parameter to determine if this is the first time the add-in has been loaded into the environment. If it is the first time, <i>bFirstTime</i> is <b>VARIANT_TRUE</b>, and the add-in can add new toolbar buttons or key sequences for carrying out its commands. Note that if you disconnect the add-in and then reconnect it, <i>bFirstTime</i> is also <b>VARIANT_TRUE</b>.<p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;You only need to add toolbar buttons and keybindings the first time an add-in is loaded because the environment keeps track of them in subsequent loads.</p></li>
<li>
Provides information about itself by calling the <a href="_asug_setaddininfo_method.htm">SetAddInInfo</a> method. If the add-in fails to provide the required information, the environment unloads the add-in by calling the add-in's <a href="_asug_the_ondisconnection_method.htm">OnDisconnection</a> method. Then, the environment displays a message box describing what the add-in failed to do.<br><br></li>
<li>
Connects to events. The add-in locates the appropriate Developer Studio objects and then connects to their events. The Developer Studio Add-in Wizard automatically generates the code for handling events if you choose the <b>Responds to Developer Studio events</b> option.<br><br></li>
<li>
<a href="_asug_adding_commands_to_developer_studio.htm">Adds commands</a> by calling the <b>AddCommand</b> method.<br><br></li>
<li>
Stores the cookie and the pointer (<b>Application*</b>) to the <b>Application</b> object for future use. To store the pointer, the add-in must explicitly call the <b>AddRef</b> function. Storing is recommended because the environment will not pass the pointer to the add-in again.<br><br></li>
<li>
Returns <b>VARIANT_TRUE</b>, indicating that the add-in loaded successfully.</li>
</ol>
</FONT></BODY>
</HTML>
