<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding a Property to an MFC Dispinterface</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_asug_add_a_property_to_an_mfc_dispinterface"></a>Adding a Property to an MFC Dispinterface</h1>
<p>
<a href="_asug_overview.3a_.working_with_com_interfaces.htm">Overview</a>  |&nbsp; <a href="_asug_how_do_i_......_topics.3a_.working_with_com_interfaces.htm">How Do I ... Topics</a></p>
<p>
When defining a property for an MFC dispinterface, you can implement the property with a member variable or with <b>Get</b>/<b>Set</b> methods. Using the member variable implementation provides direct access to the property, whereas using <b>Get </b>and <b>Set</b> methods to implement the property enforces a controlled access. If you do implement the property via a member variable, you can also provide a notification function to alert you when the value of the property changes. </p>
<p class=label>
<b>To add a property to an MFC dispinterface</b>
<ol>
<li>
Open the <b>Add Property</b> dialog box in one of the following ways:<ul type=disc>
<li>
In ClassView, rest your cursor on the interface, click the right mouse button to invoke the shortcut menu, then choose <b>Add Property</b>.<br><br></li>
<li>
In ClassWizard, for an automation-enabled class, select the <b>Automation </b>tab, then choose <b>Add Property</b>.</li>
</ul>
</li>
<li>
In the <b>External Name</b> box, type in a name for the property.<p class=tl>
This is the name automation clients will use to access the property.</P></li>
<li>
Select a type from the <b>Type </b>list. <br><br></li>
<li>
Choose an <b>Implementation </b>type for the property.<p class=tl>
Your choice is reflected in the two text boxes below the <b>Type </b>list. By default, <b>Member variable</b> is selected, displaying the <b>Variable name</b> and <b>Notification function</b> boxes. Choosing <b>Get/Set methods</b> displays the <b>Get function</b> and <b>Set function</b> boxes. </P><p class=tl>
The <b>Stock </b>implementation choice is available only for ActiveX controls. </P></li>
<li>
If you’ve selected a <b>Get</b>/<b>Set</b> property implementation, specify any custom parameters you’d like this property to take. In the <b>Parameter </b>list area, for each parameter you wish to define:<ul type=disc>
<li>
Enter a name for the parameter in the <b>Name </b>box.<br><br></li>
<li>
Select a valid type from the <b>Type</b> list.</li>
</ul>
<p class=tl>
The <b>Parameter </b>list is unavailable for a member variable implementation.</P></li>
<li>
When you’ve completed the property definition, click <b>OK </b>to exit the <b>Add Property</b> dialog box.</li>
</ol>
<p>
The property in its <b>Get</b>/<b>Set</b> or member variable implementation is visible in ClassView under the interface where it is defined, and under the class where it is implemented. Double-click an icon under the interface to jump to the .idl or .odl file. Double-click an icon under the class to jump to the .cpp file.</p>
<p>
<img src="vc39rf1.gif" border=0></P></FONT></BODY>
</HTML>
