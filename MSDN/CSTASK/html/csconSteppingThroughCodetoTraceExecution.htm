<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Stepping Through Code to Trace Execution</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="csconsteppingthroughcodetotraceexecution"></a>Stepping Through Code to Trace Execution</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csconSteppingThroughCodeToTraceExecutionC">
</object></p>
<p>
If you reach a point in your code that calls another procedure (a function, subroutine, or the script associated with an object or applet), you can enter (<i>step into</i>) the procedure or run (<i>step over)</i> it and stop at the next line. At any point, you can jump to the end (<i>step out</i>) of the current procedure and carry on with the rest of the application.</p>
<p>
You may want to step through your code and trace code execution because it may not always be obvious which statement is executed first. Use these techniques to trace the execution of code:
<ul type=disc>
<li>
<b>Step Into</b>: Traces through each line of code and steps into procedures. This allows you to view the effect of each statement on variables.<br><br></li>
<li>
<b>Step Over</b>: Executes each procedure as if it were a single statement. Use this instead of <b>Step Into</b> to step across procedure calls rather than into the called procedure.<br><br></li>
<li>
<b>Step Out</b>: Executes all remaining code in a procedure as if it were a single statement, and exits to the next statement in the procedure that caused the procedure to be called initially.<br><br></li>
<li>
<b>Run To Cursor</b>: Allows you to select a statement in your code where you want execution to stop. This allows you to "step over" sections of code (for example, large loops).</li>
</ul>
<p class=blue>
<b>To trace execution from the current statement</b>
<ul type=disc>
<li>
From the <b>Debug</b> menu, choose <b>Step Into</b>, <b>Step Over</b>, <b>Step Out</b>, or <b>Run To Cursor</b>.</li>
</ul>
<p class=blue>
<b>To trace execution from the beginning of the program</b>
<ul type=disc>
<li>
From the <b>Debug</b> menu, choose <b>Step Into</b>, <b>Step Over</b>, <b>Step Out</b>, or <b>Run To Cursor</b>.</li>
</ul>
</BODY>
</HTML>
