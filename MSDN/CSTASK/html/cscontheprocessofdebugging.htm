<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging Basics</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="cscontheprocessofdebugging"></a>Debugging Basics</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csconTheProcessOfDebuggingC">
</object></p>
<p>
The process of locating and fixing errors in your application is known as <i>debugging</i>. The development environment’s debugging support includes breakpoints, break expressions, watch expressions, and the ability to step through code one statement or one procedure at a time and display the values of variables and properties. Many of the languages supported in the development environment also include special debugging features, such as edit-and-continue capability, setting the next statement to execute, and procedure testing while the application is in break mode. </p>
<p>
Debugging tools are designed to help you with:
<ul type=disc>
<li>
Compile errors that result from incorrectly constructed code. If you incorrectly type a keyword, omit some necessary punctuation, or use an opening identifier without a corresponding closing identifier at design time, these errors are detected when you compile the application.<br><br></li>
<li>
Run-time errors that occur while the application is running and the environment detects an operation that is impossible to carry out. An example of this is division by zero.<br><br></li>
<li>
Logic errors that occur when an application doesn't perform the way it was intended to. An application can have syntactically valid code, run without performing any invalid operations, and yet produce incorrect results. Only by testing the application and analyzing results can you verify that the application is performing correctly.</li>
</ul>
<p>
Debugging tools give you a snapshot of the current state of your application, including:
<ul type=disc>
<li>
Appearance of the user interface.<br><br></li>
<li>
Values of variables and expressions.<br><br></li>
<li>
Active procedure calls.</li>
</ul>
<p>
There are four main windows that you'll use while debugging your application:
<ul type=disc>
<li>
The <i>Immediate window </i>allows you to change the values of variables so that you can immediately see the effect of your changes. When the application is in break mode, you can evaluate expressions by typing in the Immediate window.<br><br></li>
<li>
The <i>Watch window </i>shows the current <i>watch expressions</i>, which are expressions whose values you decide to monitor as the code runs. The Watch window can display a value for a watch expression only if the current statement is in the specified context. Otherwise, the Value column shows a message indicating the statement is not in context.<br><br></li>
<li>
The <i>Locals window</i> shows the value of any variables within the scope of the current procedure. As the execution switches from procedure to procedure, the contents of the Locals window changes to reflect only the variables applicable to the current procedure.<br><br></li>
<li>
The <i>Output window</i> displays status messages at run time. With some language engines, this window is also used to display debugging strings generated in code.</li>
</ul>
<p>
There are also several other debugging windows that you will use in certain situations, depending upon the type of application you are debugging and upon the language engine.
<ul type=disc>
<li>
For multithreaded applications, the <i>Threads window</i> allows you to change the current thread of execution or view the threads in any attached process. The contents of the other debugging windows change to reflect the selected thread.<br><br></li>
<li>
The <i>Call Stack window</i> displays a list of all active procedures or stack frames for the current thread of execution. Active procedures are the uncompleted procedures in a process. For Internet applications, the <i>Running Documents window</i> displays a list of documents that are currently loaded into the process you are debugging. For example, if you load an HTML frameset into the browser, the Running Documents window shows you which pages are currently loaded.</li>
</ul>
</BODY>
</HTML>
