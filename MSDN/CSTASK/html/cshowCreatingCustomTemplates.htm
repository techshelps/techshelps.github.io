<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Custom Templates</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="cshowcreatingcustomtemplates"></a>Creating Custom Templates</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="cshowCreatingCustomTemplates_C">
</object></p>
<p>
Any text file, such as .htm, .asp, or .java files, can be used as a template for creating new similar project items. When creating a file, you can base it on a standard product template or use one of your own custom templates. Creating a template consists of some or all of these steps:
<ul type=disc>
<li>
Customizing template files<br><br></li>
<li>
Creating a .vsz file<br><br></li>
<li>
Creating a .vsdir file<br><br></li>
<li>
Adding templates to projects</li>
</ul>
<h2>Customizing Template Files</h2>
<p>
You can place text in a template file, such as source code, URLs, and script, that will be copied into the new project item you create from the template file.</p>
<p>
You can place source code, URLs, text, script, and other formatting in the template files that will appear in each file you create based on the template file.</p>
<p>
A template can be any text file such as an:
<ul type=disc>
<li>
.htm file<br><br></li>
<li>
.asp file<br><br></li>
<li>
code file<br><br></li>
<li>
.txt file<br><br></li>
<li>
.java file<br><br></li>
<li>
other text file</li>
</ul>
<p class=indent>
<span class=blue><b>Note</b></span>&nbsp;&nbsp;&nbsp;The Template wizard recognizes text files based on the content type registered for the file extension. If the wizard does not recognize a particular file, you need to register the file extension as a text file in the system registry. For more information, see "To create or modify a file type" in Windows Help.</p>
<p>
The Template wizard allows you to prompt users for information based on the parameters you include in your template files. You can create your own custom prompts or you can use one of the unique functions recognized by the Template wizard.</p>
<p class=blue>
<b>To prompt the user for input</b>
<ul type=disc>
<li>
Use delimiters <code>&lt;%#</code> and <code>#%&gt;</code> in the template to create a parameter. Parameters are not case sensitive.<p class=tl>
For example, to prompt your user with a question, place text between the delimiters, as follows:
<pre><code>&lt;B&gt;&lt;%#What is the name of your department?#%&gt; Expense Report&lt;/B&gt;
</code></pre>
<p class=tl>
If the user responds with the input "Marketing" then the new file would contain this line:
<pre><code>&lt;B&gt;Marketing Expense Report&lt;/B&gt;
</code></pre>
</li>
<li>
&lt;%#DataConnection#%&gt;<p class=tl>
Available for Visual InterDev™ templates only. When the Template wizard encounters this parameter, it prompts the template user to select one of the existing project data connections.
</li>
<li>
&lt;%#GUID<i>n</i>#%&gt;<p class=tl>
<i>n</i>=1-9. When the Template wizard encounters this parameter, it generates a Globally Unique Identifier (GUID) string and replaces the parameter with the string. A GUID is a 128-bit (16 byte) number generated by an algorithm designed to ensure uniqueness. Use the GUID parameter to uniquely identify items, such as interfaces, objects, and correctable class Ids, in code each time you create a new file based on a template which contains these items.
<p class=tl>
Each additional time the Template wizard encounters the same GUID parameter, it substitutes the same GUID string. For example, each time the Template wizard finds GUID1, the wizard replaces GUID1 with the correct GUID string. Similarly, each time that the Template wizard encounters GUID2, it replaces GUID2 with the GUID string the wizard generated when it first encountered GUID2.
</li>
</ul>
<p class=indent>
<span class=blue><b>Note</b></span>&nbsp;&nbsp;&nbsp;When you add an .htm or .asp file to a Visual InterDev Web project, Visual InterDev automatically applies the default theme and layout for the project to the page if one has been specified.</p>
<h2>Creating a .vsz File</h2>
<p>
In order to add your files to a project using the Template wizard, you must create a .vsz file. A VSZ file is a text file used to launch wizards. The VSZ file contains information that identifies a wizard and provides custom information for it. For more information about .vsz files, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csconCreatingVSZFiles">
</object><a href=JavaScript:alink_2.Click()>Creating VSZ Files</a>.</p>
<p class=indent>
<span class=blue><b>Note</b></span>&nbsp;&nbsp;&nbsp;If you create single template files that do not contain any user prompts, you can place the file in the default project items directory for the product. Single template files that do not contain user prompts do not require .vsz or .vsdir files.</p>
<p>
To launch the Template wizard, the .vsz file must contain the following text:</p>
<pre><code>VSWizard 6.0
Wizard=VIWizard.CTemplateWizard
Param=&lt;directory path for template files&gt;
</code></pre>
<p>
For example, if you created a template that contains two files, <code>MyTemplate.htm</code> and <code>MyTemplate.asp</code>, and placed them in <code>c:\Program Files\Microsoft Visual Studio\Vintdev98\Templates\MyTemplate </code>directory, the .vsz file would read:</p>
<pre><code>VSWizard 6.0
Wizard=VIWizard.CTemplateWizard
Param=c:\Program Files\Microsoft Visual Studio\Vintdev98\Templates\MyTemplate
</code></pre>
<p>
If you created a template that contains two files, MyTemplate1.java and MyTemplate2.java, and placed them in c:\<code>Program Files\Microsoft Visual Studio\VJ98\Templates\MyTemplate</code> directory, the .vsz file would read:</p>
<pre><code>VSWizard 6.0
Wizard=VIWizard.CTemplateWizard
Param=c:\Program Files\Microsoft Visual Studio\VJ98\Templates\MyTemplate
</code></pre>
<p>
You can optionally indicate which template file should open automatically in the editor when the Template wizard has finished. For example, you can specify that MyTemplate1.java open in the editor by adding a second <code>Param</code> statement to the end of the .vsz file:</p>
<pre><code>Param=MyTemplate1.java
</code></pre>
<p>
For more information, see "Adding Templates to Projects" later in this topic.</p>
<h2>Creating a .vsdir File</h2>
<p>
You can optionally create a VSDIR file or modify an existing .vsdir file to specify the display of .vsz files in the Add Items dialog box. A <i>VSDIR file</i> is a text file that is used to provide information to the Add Item dialog and the New Project dialog boxes. The VSDIR provides information about the items these dialog boxes display, such as the names, descriptions, and the icon to display.</p>
<p>
You can have multiple VSDIR files in a single directory; however, generally one VSDIR file is used to contain information for multiple wizards, folders, or templates.</p>
<p class=indent>
<span class=blue><b>Note</b></span>&nbsp;&nbsp;&nbsp;If you have multiple .vsdir files in a single directory, do not duplicate the same file information in multiple .vsdir files.</p>
<p>
For example, you could create a .vsdir file like the following:</p>
<pre><code>MyTemplate.vsz|{0}|MyTemplate|30|Create a new custom file.|{164B10B9-B200-11D0-8C61-00A0C91E29D5}|287|3|MyTemplate
</code></pre>
<p class=indent>
<span class=blue><b>Note</b></span>&nbsp;&nbsp;&nbsp;The .vsdir file contains line-oriented records.</p>
<p>
For more information about .vsdir files, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="csconCreatingVSDIRFiles">
</object><a href=JavaScript:alink_3.Click()>Creating VSDIR Files</a>.</p>
<h2>Adding Templates to Projects</h2>
<p>
You must place your .vsz and .vsdir files in the correct directories so that the Add Items dialog box can locate the files.</p>
<p class=indent>
<span class=blue><b>Note</b></span>&nbsp;&nbsp;&nbsp;If you create single template files that do not contain any user prompts, you can place the file in the default project items directory for the product. Single template files that do not contain user prompts do not require .vsz or .vsdir files.</p>
<p>
For Visual InterDev, the default project items directory is:</p>
<pre><code>c:\Program Files\Microsoft Visual Studio\VintDev98\Templates\Web Project Items\
</code></pre>
<p>
For Visual J++™, place .vsz files and single template files in:</p>
<pre><code>c:\Program Files\Microsoft Visual Studio\VJ98\VJProjectItems\Other
</code></pre>
<p>
You can also create a custom directory under <code>c:\…\VJProjectItems</code>.</p>
<p>
Each template should have a separate directory to contain only its template files. If the files for a template are not located in the same directory, the Template wizard can not process them.</p>
</BODY>
</HTML>
