<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Drag-and-Drop Operations</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h1><font size="5">Drag-and-Drop Operations</font></h1>

<p>To support a drag-and-drop operation in a rich edit control,
an application must first set an event mask by using the
EM_SETEVENTMASK message to allow the EN_DROPFILES notification to
be sent to the control's parent window. In the RICHED sample,
when the parent window receives this notification, the
DragQueryFile function is called to determine how many files have
been dropped in the rich edit control. This sample allows the
user to drop only one file at a time, so if more than one file
has been dropped, the action is disallowed. If the user has
dropped only one file, the application queries for the filename,
opens the file, and reads it into the rich edit control. As you
can see in the following code, the sample allows the user to drop
only a TXT or an RTF file: </p>

<p><tt>case WM_NOTIFY:<br>
§<br>
// Is the notification a drop notification?<br>
else if (((LPNMHDR)lParam)-&gt;code == EN_DROPFILES)<br>
{ <br>
WORD cFiles;<br>
char lpszFile [80];<br>
HANDLE hDrop;<br>
<br>
// Get the handle to the drop object.<br>
hDrop = ((ENDROPFILES *)lParam)-&gt;hDrop;<br>
// Determine how many objects have been dropped.<br>
cFiles = DragQueryFile (hDrop, 0xFFFF, (LPSTR)NULL, 0);<br>
// If more than one object has been dropped, don't bother.<br>
if (cFiles &gt; 1)<br>
return 0;<br>
// Get the name of the file dropped.<br>
DragQueryFile (hDrop, 0, lpszFile, sizeof (lpszFile));<br>
<br>
// Open the file (TXT or RTF).<br>
if (strstr (lpszFile, &quot;TXT&quot;))<br>
OpenTheFile (hWndRichEdit, SF_TEXT, lpszFile);<br>
else if (strstr (lpszFile, &quot;RTF&quot;))<br>
OpenTheFile (hWndRichEdit, SF_RTF, lpszFile); <br>
DragFinish (hDrop); <br>
return 1; <br>
}<br>
return 0L;<br>
break;</tt> </p>

<p>This code demonstrates one way that an application can handle
a drop operation. Rich edit controls also support OLE drag and
drop through the IRichEditOle and IRichEditOleCallback
interfaces, which allow objects to be embedded in the control.
The subject of embedding objects is beyond the scope of this
book, however, so I will not cover it here. </p>
</body>
</html>
