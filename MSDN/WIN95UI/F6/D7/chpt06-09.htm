<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Find and Replace Common Dialog Boxes</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h1><font size="5">The Find and Replace Common Dialog Boxes</font></h1>

<p>The Find common dialog box, shown in Figure 6-11, prompts the
user to enter a string of text and then searches for that string.
The Replace dialog box, which is quite similar, not only searches
for a specified string but also replaces it with a specified
replace string. Unlike the other common dialog boxes, these two
dialog boxes are modeless, which means that the user can switch
between the dialog box and the window that created it. </p>

<p>The Find and Replace common dialog boxes use the FINDREPLACE
structure. When this structure is initialized, the application
calls the FindText function to display the Find dialog box or the
ReplaceText function to display the Replace dialog box. Within
the FINDREPLACE structure, the application can specify items such
as the owner of the dialog box, an initial string to </p>

<p><b>Figure 6-11.</b> </p>

<p><b><img src="fig6-11.gif" width="362" height="128"></b></p>

<h4><i>The Find common dialog box.</i> </h4>

<p>search for, whether to match the case of the string, whether
to match the entire string, and hook and template information. </p>

<p>For an application to process messages from a Find or a
Replace dialog box, the application must use the
RegisterWindowMessage function to register the dialog box's
unique message, FINDMSGSTRING. The following code from CMNDLG32
handles the FindReplaceMsg message: </p>

<p><tt>LONG APIENTRY MainWndProc (<br>
HWND hWnd, // window handle<br>
UINT message, // type of message<br>
UINT wParam, // additional information<br>
LONG lParam) // additional information<br>
{<br>
§<br>
switch (message) <br>
{<br>
case WM_CREATE:<br>
§<br>
default:<br>
// Handle the special find-replace message (FindReplaceMsg) that<br>
// was registered at initialization time.<br>
if (message == FindReplaceMsg)<br>
{<br>
if (lpFR = (LPFINDREPLACE)lParam)<br>
{<br>
if (lpFR-&gt;Flags &amp; FR_DIALOGTERM) // terminating dialog<br>
return 0;<br>
SearchFile (lpFR);<br>
InvalidateRect (hWnd, NULL, TRUE);<br>
}<br>
return (0);<br>
}<br>
§<br>
}<br>
§<br>
}</tt> </p>

<p>The following example initializes the FINDREPLACE structure
and then calls FindText. The flags specified for the dialog box
stipulate that the Match Case, Up and Down, and Match Whole Word
Only options should be disabled. The hook and template are
enabled if the user has specified them. </p>

<p><tt>void CallFindText (HWND hWnd)<br>
{<br>
frText.lStructSize = sizeof (frText);<br>
frText.hwndOwner = hWnd;<br>
frText.hInstance = (HANDLE)hInst;<br>
frText.lpstrFindWhat = szFindString;<br>
frText.lpstrReplaceWith = (LPTSTR)NULL;<br>
frText.wFindWhatLen = sizeof (szFindString);<br>
frText.wReplaceWithLen = 0;<br>
frText.lCustData = 0;<br>
lpBufPtr = FileBuf;<br>
<br>
switch (wMode)<br>
{<br>
case IDM_STANDARD:<br>
frText.Flags = FR_NOMATCHCASE | FR_NOUPDOWN | FR_NOWHOLEWORD;<br>
frText.lpfnHook = (LPFRHOOKPROC)(FARPROC)NULL;<br>
frText.lpTemplateName = (LPTSTR)NULL;<br>
break;<br>
<br>
case IDM_HOOK:<br>
frText.Flags = FR_NOMATCHCASE | FR_NOUPDOWN | FR_NOWHOLEWORD |<br>
FR_ENABLEHOOK;<br>
frText.lpfnHook = (LPFRHOOKPROC)FindTextHookProc;<br>
frText.lpTemplateName = (LPTSTR)NULL;<br>
break;<br>
<br>
case IDM_CUSTOM:<br>
frText.Flags = FR_NOMATCHCASE | FR_NOUPDOWN | FR_NOWHOLEWORD |<br>
FR_ENABLEHOOK | FR_ENABLETEMPLATE;<br>
frText.lpfnHook = (LPFRHOOKPROC)FindTextHookProc;<br>
frText.lpTemplateName = (LPTSTR) MAKEINTRESOURCE (FINDDLGORD);<br>
break;<br>
}<br>
if ((hDlgFR = FindText (&amp;frText)) == NULL)<br>
ProcessCDError (CommDlgExtendedError (), hWnd);<br>
}</tt> </p>

<p>The Replace common dialog box, shown in Figure 6-12, resembles
the Find dialog box. It lacks Direction options, however, and it
contains three additional controls that let the user specify a
replacement string and choose whether to replace one or all
occurrences of the string. </p>

<p><b>Figure 6-12.</b> </p>

<p><b><img src="fig6-12.gif" width="354" height="180"></b></p>

<h4><i>The Replace common dialog box.</i> </h4>

<p>The code to initialize the FINDREPLACE structure for the
Replace common dialog box is nearly identical to the code that
initializes this structure for the Find common dialog box. The
only difference is that you must include a pointer to a string in
the <i>lpstrReplaceWith</i> member and specify the size of that
string buffer in the <i>wReplaceWithLen</i> member. After you
initialize the FINDREPLACE structure, the application calls the
ReplaceText function to display the dialog box. </p>
</body>
</html>
