<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Simple-Mode Status Bar</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h2>Creating a Simple-Mode Status Bar</h2>

<p>A simple-mode status bar, such as the one shown in Figure 1-2,
is useful for displaying a one-line description of a menu item as
the user highlights the item or for displaying diagnostic
information. To create a simple-mode status bar from a
multiple-part status bar, you must send an SB_SIMPLE message to
the status bar (or use the MFC SetSimple member function). But
bear in mind that simple-mode status bars do not support owner
drawing&#151;so no cute bitmaps in this case. </p>

<p align="left"><b>Figure 1-2.</b> </p>

<p align="center"><img src="fig1-2.gif" width="591" height="130"></p>

<h4><i>A status bar in simple mode.</i> </h4>

<p>The string that a status bar displays in simple mode is
maintained separately from the strings it displays when it is in
multiple-part mode. Thus, as you can see in the STATUS sample,
you can put the window in simple mode, set its text, and switch
back to multiple-part mode without having to reset the text. The
following code demonstrates how to set the status bar mode in
response to a command sent through the Options menu. When you set
the text in the status bar, you should set <i>wParam</i> to 255,
which signals that this is a simple-mode status bar and that the
string should be maintained separately from the strings
originally used in the multiple-part status bar. </p>

<p><tt>case WM_COMMAND:<br>
switch (LOWORD(wParam))<br>
{<br>
case IDM_SIMPLE:<br>
// Set the status bar to simple mode.<br>
SendMessage (hWndStatus, SB_SIMPLE, (WPARAM)TRUE, 0L);<br>
// Set the text of the status bar.<br>
SendMessage (hWndStatus, SB_SETTEXT, 255, <br>
(LPARAM)&quot;We are now in simple mode.&quot;);<br>
// Check the Simple menu option.<br>
CheckMenuItem (GetMenu (hWnd), IDM_SIMPLE, <br>
MF_CHECKED | MF_BYCOMMAND);<br>
// Uncheck the Multiple menu option.<br>
CheckMenuItem (GetMenu (hWnd), IDM_MULTIPLE, <br>
MF_UNCHECKED | MF_BYCOMMAND);<br>
break;<br>
<br>
case IDM_MULTIPLE:<br>
// Reset the status bar to multiple-part mode.<br>
SendMessage (hWndStatus, SB_SIMPLE, (WPARAM)FALSE, 0L);<br>
// Uncheck the Simple menu option.<br>
CheckMenuItem (GetMenu (hWnd), IDM_SIMPLE, <br>
MF_UNCHECKED | MF_BYCOMMAND);<br>
// Check the Multiple menu option.<br>
CheckMenuItem (GetMenu (hWnd), IDM_MULTIPLE, <br>
MF_CHECKED | MF_BYCOMMAND);<br>
break;</tt> </p>

<p>These operations are very similar in the MFC version of the
sample. In that version, however, the SetSimple member function
assumes TRUE by default, so I did not pass any parameters when I
set my status bar to simple mode. When I reset the status bar to
be multiple-part, I simply passed FALSE as the parameter.</p>
</body>
</html>
