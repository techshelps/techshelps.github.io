<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Image Lists</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h1>Image Lists</h1>

<p>An image list helps you manage a collection of images that are
the same size, such as bitmaps or icons. Image lists, which are
designed for use with list view and tree view controls, manage
images but do not display them directly. </p>

<p>You can create the images in an image list in a single, wide
bitmap or as individual bitmaps. If you have produced bitmaps for
a toolbar, you're familiar with the type of bitmap I am referring
to. One difference between creating a toolbar and creating an
image list, however, is that you can set up an empty image list
and add the bitmaps (or icons) to it later, one by one, rather
than providing one long bitmap initially. </p>

<p>In the samples I wrote to demonstrate list view and tree view
controls, I created an empty image list and then added each
bitmap or icon one at a time. Figure 3-1 shows one of the icons I
used. (That odd-looking structure poking up in the air is my
approximation of Seattle's Space Needle.)</p>

<p><b>Figure 3-1.</b> </p>

<p><img src="fig3-1.gif" width="329" height="272"></p>

<h4><i>An icon for an image list.</i> </h4>

<p>To reference a specific image in the bitmap, you use the index
of the image within the image list. You can also include
monochrome bitmaps in an image list to act as masks, which allow
you to draw icons transparently. Or you might want to blend the
icon with the background or with the system highlight color. </p>

<p>You might also want to add overlay masks to your image list.
An overlay mask (which is different from a simple mask) is an
image that is drawn transparently over another image. For
instance, Windows 95 uses an overlay mask when it displays the
image for a shared directory (the image of a hand holding a
folder, shown in Figure 3-2.)</p>

<p><b>Figure 3-2.</b> </p>

<p><img src="fig3-2.gif" width="196" height="29"></p>

<h4><i>An image with an overlay mask.</i> </h4>

<p>You can create either a nonmasked or a masked image list: </p>

<ul>
    <li>A nonmasked image list includes a color bitmap that
        contains one or more images. This is a wide bitmap
        containing small bitmaps, similar to the one you saw in
        the TOOLBAR sample in Chapter 1. When a nonmasked image
        is drawn, it is simply copied into the target device
        context (DC); no special processing occurs. </li>
    <li>A masked image list includes two wide bitmaps of equal
        size. The first is a color bitmap that contains the
        images; the second is a monochrome bitmap that contains a
        series of masks (one for each image in the first bitmap).
        When a masked image is drawn, the mask specified for that
        image is combined with the image itself. This combination
        produces transparent areas in the bitmap in which the
        background color of the target DC shows through. </li>
</ul>

<p>Table 3-1 describes the drawing styles you can use to produce
different effects with your image lists. For instance, if you
want the images in your list to be drawn transparently, you can
specify the ILD_TRANSPARENT drawing style in your call to
ImageList_Draw or to the MFC Draw member function of the
CImageList class. </p>

<table border="1">
    <tr>
        <td valign="top" width="20%"><b>Style</b></td>
        <td valign="top"><b>Description</b></td>
    </tr>
    <tr>
        <td valign="top" width="20%">ILD_BLEND25</td>
        <td valign="top">Draws the image, blending 25 percent
        with the system highlight color. This value has no effect
        unless the image list contains a mask.</td>
    </tr>
    <tr>
        <td valign="top" width="20%">ILD_BLEND50</td>
        <td valign="top">Draws the image, blending 50 percent
        with the system highlight color. This value has no effect
        unless the image list contains a mask.</td>
    </tr>
    <tr>
        <td valign="top" width="20%">ILD_FOCUS</td>
        <td valign="top">Draws the image striped with the
        highlight color to indicate that the image has the focus.
        This flag has no effect unless ILD_SELECTED is also
        specified or unless the image list contains a mask.</td>
    </tr>
    <tr>
        <td valign="top" width="20%">ILD_IMAGE</td>
        <td valign="top">Draws the image.</td>
    </tr>
    <tr>
        <td valign="top" width="20%">ILD_MASK</td>
        <td valign="top">Draws the mask.</td>
    </tr>
</table>

<table border="1">
    <tr>
        <td valign="top">ILD_NORMAL</td>
        <td valign="top">Draws the image using the image list's
        background color. If the background color is CLR_NONE,
        the image is drawn transparently using the mask.</td>
    </tr>
    <tr>
        <td valign="top">ILD_OVERLAYMASK</td>
        <td valign="top">Draws the image transparently as an
        overlay mask.</td>
    </tr>
    <tr>
        <td valign="top">ILD_SELECTED</td>
        <td valign="top">Draws the image dithered with the
        highlight color to indicate that the image is selected.
        This flag has no effect unless the image list contains a
        mask.</td>
    </tr>
    <tr>
        <td valign="top">ILD_TRANSPARENT</td>
        <td valign="top">Draws the image transparently using the
        mask, regardless of the background color. This flag has
        no effect unless the image list contains a mask. To draw
        the masked image, the function first performs a logical
        AND operation between the bits of the image and the bits
        of the mask. Next it performs a logical XOR operation
        between the results of the first operation and the
        background bits of the destination DC. This creates
        transparent areas in the resulting image (that is, each
        white bit in the mask causes the corresponding bit in the
        resulting image to be transparent).</td>
    </tr>
</table>

<p><b>Table 3-1. </b><i>Image list drawing styles.</i> </p>
</body>
</html>
