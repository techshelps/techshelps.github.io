<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Printing</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h1><font size="5">Printing</font></h1>

<p>A rich edit control can format its data to be suitable for use
with devices such as displays and printers. Applications use the
EM_FORMATRANGE message to tell the control how to format its
contents. The FORMATRANGE structure used with this message
specifies the range of text to format as well as the device
context for the target device. </p>

<p>The RICHED sample supports printing through its Print command
on the File menu. The sample uses the PrintDlg function to get
the DC for the printer. It then fills out the FORMATRANGE
structure with the DC, the rectangle to print, and the amount of
data within the rectangle to print. The usual DOCINFO structure
is filled out, and the rest is standard printing code. </p>

<p><tt>void PrintTheContents (HWND hWndRichEdit)<br>
{<br>
FORMATRANGE fr;<br>
DOCINFO docInfo;<br>
LONG lTextOut, lTextAmt;<br>
PRINTDLG pd;<br>
<br>
// Initialize the PRINTDLG structure.<br>
pd.lStructSize = sizeof (PRINTDLG);<br>
pd.hwndOwner = hWndRichEdit;<br>
pd.hDevMode = (HANDLE)NULL;<br>
pd.hDevNames = (HANDLE)NULL;<br>
pd.nFromPage = 0;<br>
pd.nToPage = 0;<br>
pd.nMinPage = 0;<br>
pd.nMaxPage = 0;<br>
pd.nCopies = 0;<br>
pd.hInstance = (HANDLE)hInst;<br>
pd.Flags = PD_RETURNDC | PD_NOPAGENUMS | PD_NOSELECTION |
PD_PRINTSETUP;<br>
pd.lpfnSetupHook = (LPSETUPHOOKPROC)(FARPROC)NULL;<br>
pd.lpSetupTemplateName = (LPTSTR)NULL;<br>
pd.lpfnPrintHook = (LPPRINTHOOKPROC)(FARPROC)NULL;<br>
pd.lpPrintTemplateName = (LPTSTR)NULL;<br>
<br>
// Get the printer DC.<br>
if (PrintDlg (&amp;pd) == TRUE)<br>
{<br>
// Fill out the FORMATRANGE structure for the RTF output.<br>
fr.hdc = fr.hdcTarget = pd.hDC; // HDC<br>
fr.chrg.cpMin = 0; // print <br>
fr.chrg.cpMax = -1; // entire contents<br>
fr.rc.top = fr.rcPage.top = fr.rc.left = fr.rcPage.left = 0;<br>
fr.rc.right = fr.rcPage.right = GetDeviceCaps (pd.hDC, HORZRES);<br>
fr.rc.bottom = fr.rcPage.bottom = GetDeviceCaps (pd.hDC,
VERTRES);<br>
<br>
// Fill out the DOCINFO structure.<br>
docInfo.cbSize = sizeof (DOCINFO);<br>
docInfo.lpszDocName = &quot;(RTF Test)&quot;;<br>
docInfo.lpszOutput = NULL;<br>
<br>
// Be sure that the printer DC is in text mode.<br>
SetMapMode (pd.hDC, MM_TEXT);<br>
<br>
StartDoc (pd.hDC, &amp;docInfo);<br>
StartPage (pd.hDC);<br>
<br>
lTextOut = 0;<br>
lTextAmt = SendMessage (hWndRichEdit, WM_GETTEXTLENGTH, 0, 0);<br>
<br>
while (lTextOut &lt; lTextAmt)<br>
{<br>
lTextOut = SendMessage (hWndRichEdit, EM_FORMATRANGE, TRUE, <br>
(LPARAM)&amp;fr);<br>
<br>
if (lTextOut &lt; lTextAmt)<br>
{<br>
EndPage (pd.hDC);<br>
StartPage (pd.hDC); <br>
fr.chrg.cpMin = lTextOut;<br>
fr.chrg.cpMax = -1;<br>
}<br>
}<br>
<br>
// Reset the formatting of the rich edit control.<br>
SendMessage (hWndRichEdit, EM_FORMATRANGE, TRUE, (LPARAM)NULL);<br>
<br>
// Finish the document.<br>
EndPage (pd.hDC);<br>
EndDoc (pd.hDC);<br>
<br>
// Delete the printer DC.<br>
DeleteDC (pd.hDC);<br>
}<br>
}</tt> </p>

<p>An application can implement <i>banding</i> (that is, dividing
the output into smaller parts in order to overcome printer
buffer-size limitations) by using the EM_DISPLAYBAND message in
concert with the EM_FORMATRANGE message. With the
EM_SETTARGETDEVICE message, the application can also specify the
target device for which the control will format its text. You'll
find this message useful for WYSIWYG (What You See Is What You
Get) formatting, in which an application positions text using the
default printer's font metrics instead of the screen's font
metrics. </p>
</body>
</html>
