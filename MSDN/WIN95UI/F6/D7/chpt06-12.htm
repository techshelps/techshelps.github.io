<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error Detection</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h1><font size="5">Error Detection</font></h1>

<p>Throughout the examples in this chapter, you might have
noticed that whenever an error occurs, the ProcessCDError
function is called. This isn't a system function; rather, it's a
function I wrote that gets the extended error from the common
dialog library and then displays a message box that describes the
problem. When a common dialog function fails, an application can
call the CommDlgExtendedError function, which returns an error
value that identifies the cause of the most recent error. I
created a string ID table containing descriptions of each error.
In a switch statement, I use the error code to determine which
string to load and then display in the message box. </p>

<p><tt>void ProcessCDError(DWORD dwErrorCode, HWND hWnd)<br>
{<br>
WORD wStringID;<br>
char buf [MAX_PATH];<br>
<br>
switch (dwErrorCode)<br>
{<br>
case CDERR_STRUCTSIZE: wStringID = IDS_STRUCTSIZE; break;<br>
case CDERR_INITIALIZATION: wStringID = IDS_INITIALIZATION; break;<br>
case CDERR_NOTEMPLATE: wStringID = IDS_NOTEMPLATE; break;<br>
case CDERR_NOHINSTANCE: wStringID = IDS_NOHINSTANCE; break;<br>
case CDERR_LOADSTRFAILURE: wStringID = IDS_LOADSTRFAILURE; break;<br>
case CDERR_FINDRESFAILURE: wStringID = IDS_FINDRESFAILURE; break;<br>
case CDERR_LOADRESFAILURE: wStringID = IDS_LOADRESFAILURE; break;<br>
case CDERR_LOCKRESFAILURE: wStringID = IDS_LOCKRESFAILURE; break;<br>
case CDERR_MEMALLOCFAILURE: wStringID = IDS_MEMALLOCFAILURE;
break;<br>
case CDERR_MEMLOCKFAILURE: wStringID = IDS_MEMLOCKFAILURE; break;<br>
case CDERR_NOHOOK: wStringID = IDS_NOHOOK; break;<br>
case PDERR_PARSEFAILURE: wStringID = IDS_PARSEFAILURE; break;<br>
case PDERR_RETDEFFAILURE: wStringID = IDS_RETDEFFAILURE; break;<br>
case PDERR_LOADDRVFAILURE: wStringID = IDS_LOADDRVFAILURE; break;<br>
case PDERR_GETDEVMODEFAIL: wStringID = IDS_GETDEVMODEFAIL; break;<br>
case PDERR_INITFAILURE: wStringID = IDS_INITFAILURE; break;<br>
case PDERR_NODEVICES: wStringID = IDS_NODEVICES; break;<br>
case PDERR_NODEFAULTPRN: wStringID = IDS_NODEFAULTPRN; break;<br>
case PDERR_DNDMMISMATCH: wStringID = IDS_DNDMMISMATCH; break;<br>
case PDERR_CREATEICFAILURE: wStringID = IDS_CREATEICFAILURE;
break;<br>
case PDERR_PRINTERNOTFOUND: wStringID = IDS_PRINTERNOTFOUND;
break;<br>
case CFERR_NOFONTS: wStringID = IDS_NOFONTS; break;<br>
case FNERR_SUBCLASSFAILURE: wStringID = IDS_SUBCLASSFAILURE;
break;<br>
case FNERR_INVALIDFILENAME: wStringID = IDS_INVALIDFILENAME;
break;<br>
case FNERR_BUFFERTOOSMALL: wStringID = IDS_BUFFERTOOSMALL; break;<br>
case 0: // user might have clicked Cancel, <br>
return; // or this is a *very* random error<br>
default:<br>
wStringID = IDS_UNKNOWNERROR;<br>
}<br>
<br>
LoadString (NULL, wStringID, buf, sizeof (buf));<br>
MessageBox (hWnd, buf, NULL, MB_OK);<br>
return;<br>
}</tt> </p>
</body>
</html>
