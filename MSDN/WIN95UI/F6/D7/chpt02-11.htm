<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Up-Down Control Messages and Member Functions</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h2>Up-Down Control Messages and Member Functions</h2>

<p>There aren't a lot of messages and member functions for
up-down controls. Table 2-4 lists the messages that can be sent
to up-down controls and the member functions that are supported
by the MFC-supplied class CSpinButtonCtrl. The Win32 SDK and the
MFC 3.1 documentation contain detailed information about
parameters and return values. </p>

<table border="1">
    <tr>
        <td valign="top"><b>Message</b></td>
        <td valign="top"><b>Member Function</b></td>
        <td valign="top"><b>Description</b></td>
    </tr>
    <tr>
        <td valign="top">UDM_GETACCEL</td>
        <td valign="top">GetAccel</td>
        <td valign="top">Retrieves information about the
        accelerators for an up-down control. (You can set
        accelerator keys for this control.)</td>
    </tr>
    <tr>
        <td valign="top">UDM_GETBASE</td>
        <td valign="top">GetBase</td>
        <td valign="top">Retrieves the current base value for an
        up-down control (10 for decimal or 16 for hexadecimal).</td>
    </tr>
    <tr>
        <td valign="top">UDM_GETBUDDY</td>
        <td valign="top">GetBuddy</td>
        <td valign="top">Retrieves the window handle of the
        current buddy control.</td>
    </tr>
    <tr>
        <td valign="top">UDM_GETPOS</td>
        <td valign="top">GetPos</td>
        <td valign="top">Retrieves the current position of an
        up-down control.</td>
    </tr>
    <tr>
        <td valign="top">UDM_GETRANGE</td>
        <td valign="top">GetRange</td>
        <td valign="top">Retrieves the upper and lower bounds for
        an up-down control.</td>
    </tr>
    <tr>
        <td valign="top">UDM_SETACCEL</td>
        <td valign="top">SetAccel</td>
        <td valign="top">Sets the accelerators for an up-down
        control.</td>
    </tr>
    <tr>
        <td valign="top">UDM_SETBASE</td>
        <td valign="top">SetBase</td>
        <td valign="top">Sets the base value for an up-down
        control (10 for decimal or 16 for hexadecimal). The base
        value determines whether the buddy control displays
        numbers in decimal digits or in hexadecimal digits.
        Hexadecimal numbers are unsigned; decimal numbers are
        signed. If the buddy control is a list box, the up-down
        control sets its current selection instead of its text.</td>
    </tr>
    <tr>
        <td valign="top">UDM_SETBUDDY</td>
        <td valign="top">SetBuddy</td>
        <td valign="top">Sets the buddy control for an up-down
        control</td>
    </tr>
</table>

<p><b>Table 2-4. </b><i>(continued)</i> </p>

<p><i>Up-down control messages and member functions.</i> </p>

<table border="1">
    <tr>
        <td valign="top"><b>Message</b></td>
        <td valign="top"><b>Member Function</b></td>
        <td valign="top"><b>Description</b></td>
    </tr>
    <tr>
        <td valign="top">UDM_SETPOS</td>
        <td valign="top">SetPos</td>
        <td valign="top">Sets the current position for an up-down
        control.</td>
    </tr>
    <tr>
        <td valign="top">UDM_SETRANGE</td>
        <td valign="top">SetRange</td>
        <td valign="top">Sets the upper and lower bounds for an
        up-down control.</td>
    </tr>
</table>

<h1>Animation Controls</h1>

<p>When some of you saw the words <i>animation control,</i> you
probably got all excited and wondered what this control could be.
An animation control is simply a window that displays an
audio-video interleaved (AVI) clip. AVI is the standard Windows
audio-video format. An AVI clip is a series of bitmap frames,
something like a movie. Although AVI clips can have sound,
animation controls ignore sound information when they play these
clips. </p>

<p>Because the thread continues to execute while an AVI clip is
being displayed, you'll often see animation controls used to
indicate system activity during a lengthy operation. For example,
the Find dialog box (see Figure 2-8) shows a magnifying glass
moving over a piece of paper. </p>

<p><b>Figure 2-8.</b> </p>

<p align="center"><img src="fig2-8.gif" width="572" height="356"></p>

<h4><i>A dialog box containing an animation control.</i> </h4>

<p>The AVI clip can originate either from an uncompressed AVI
file or from an AVI file that was compressed using run-length
encoding (RLE). You can add the clip to your application as an
AVI resource, or the clip can accompany your application as a
separate AVI file. You can create the AVI file using one of the
many tools on the market, such as those available with the
Microsoft Video for Windows SDK or with Adobe Premier. </p>

<p>Because you are limited by the type of compression (RLE or
none), you won't be able to play some of the really neat
animations&#151;Bugs Bunny, for instance&#151;in the control. If
you need a control to provide multimedia playback and recording
capabilities for your application, you should use the MCIWnd
control instead of an animation control. </p>
</body>
</html>
