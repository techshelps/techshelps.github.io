<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Up-Down Controls</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h1><font size="5">Up-Down Controls</font></h1>

<p>An up-down control is a small window containing up and down
arrows that the user can click to increment or decrement a value.
An up-down control is similar to a scroll bar, but it consists
only of arrows. (It also has a sillier name.) You can use an
up-down control alone as a simplified scroll bar or with another
control (called a <i>buddy control</i>&#151;yet another silly
name). In Figure 2-6 on the next page, the up-down control is
paired with an edit control to create a spin box; when the user
clicks an arrow or presses an arrow key, the up-down control
increments or decrements the value in the edit control. You can
use any type of control as the designated buddy control, however.</p>

<p><b>Figure 2-6.</b> </p>

<p><img src="fig2-6.gif" width="229" height="121"></p>

<h4><i>A dialog box that uses an up-down control and a buddy
control.</i> </h4>

<p>The range of an up-down control specifies the upper and lower
bounds for the position (the integer the user adjusts with the up
and down arrows). Unlike a scroll bar's position, the position of
an up-down control is updated automatically. When the positional
value is updated, the buddy control is also automatically updated
if the up-down control has the UDS_AUTOBUDDY style. If the upper
bound is less than the lower bound, clicking the up arrow
decrements the position, and clicking the down arrow increments
it. </p>

<p>You can specify various window styles to determine the
characteristics of an up-down control or its buddy control. For
example, you can change the way the up-down control positions
itself relative to its buddy control (the UDS_ALIGNLEFT style),
determine whether it sets the text of its buddy control (the
UDS_SETBUDDYINT style), or determine whether it processes the Up
and Down arrow keys on the keyboard (the UDS_ARROWKEYS style). </p>

<p>By default, the position of an up-down control does not change
if the user attempts to increment or decrement it beyond the
upper or lower bound. You can change this behavior by using the
UDS_WRAP style, which wraps the position to the opposite extreme.
(For example, if your range is 1 through 10, incrementing the
position past 10 wraps it back to 1.) </p>

<p>The range of an up-down control cannot exceed 32,767
positions. You can invert the range&#151;that is, the lower bound
of the range can be greater than the upper bound. Note, however,
that the up arrow always moves the current position toward the
upper bound, and the down arrow always moves the current position
toward the lower bound. If the range is 0 (the lower bound is
equal to the upper bound) or the control is disabled, the control
draws dimmed arrows. </p>

<p>The buddy control must have the same parent as the up-down
control. If you use the UDS_ALIGNLEFT or UDS_ALIGNRIGHT style and
the buddy control resizes, you must send the UDM_SETBUDDY message
(or call the MFC SetBuddy member function) to re-anchor the
up-down control on the appropriate border of the buddy control.
The UDS_AUTOBUDDY style calls the GetWindow function with
GW_HWNDPREV to choose the buddy control. In the case of a dialog
resource, the UDS_AUTOBUDDY style chooses the previous control
listed in the resource script. If the z-order of the windows
changes, sending a UDM_SETBUDDY message with a NULL handle causes
a new buddy to be selected; otherwise, the original autobuddy
choice is maintained. </p>

<p>The UPDOWN sample, which I wrote to demonstrate up-down
controls, allows the user to change the number of times the word <i>Welcome!</i>
is written to the client area of the screen. Figure 2-7 shows the
UPDOWN sample. </p>

<p><b>Figure 2-7.</b> </p>

<p align="center"><img src="fig2-7.gif" width="482" height="323"></p>

<h4><i>The UPDOWN sample.</i> </h4>
</body>
</html>
