<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Image List Functions and Member Functions</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h2>Image List Functions and Member Functions</h2>

<p>Because image lists are part of the dynamic-link library for
common controls (COMCTL32.DLL), you must include the common
control header file in your source code files and also link with
the common control export library to use the image list
functions, structures, and macros. If you are developing in MFC,
you need to include the AFXCMN.H file in your STDAFX.H file to
get the definition of the CImageList class. This class provides
the functionality of the image list common control and includes a
data member, <i>m_hImageList</i>, that is a handle containing the
image list attached to the object. The GetSafeHwnd member
function will retrieve <i>m_hImageList</i> if you need to get a
handle to it in your application. </p>

<p>Table 3-2 on the following page describes all the functions
and member functions supported by image list controls. If you
would like more details about the functions or their parameters
and return values, refer to the Win32 SDK or the MFC 3.1
documentation. </p>

<table border="1">
    <tr>
        <td valign="top"><b>Function</b></td>
        <td valign="top"><b>Member Function</b></td>
        <td valign="top"><b>Description</b></td>
    </tr>
    <tr>
        <td valign="top">ImageList_Add</td>
        <td valign="top">Add</td>
        <td valign="top">Adds one or more images to an image
        list. You can add bitmapped images, icons, or cursors.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_AddIcon</td>
        <td valign="top">Add</td>
        <td valign="top">Adds an icon to an image list. Because
        the system does not save the <i>hIcon</i> that is passed
        in, you can destroy <i>hIcon</i> after the function
        returns.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_AddMasked</td>
        <td valign="top">Add</td>
        <td valign="top">Adds one or more images to an image
        list, generating a mask from the given bitmap.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_BeginDrag</td>
        <td valign="top">BeginDrag</td>
        <td valign="top">Begins dragging an image and creates a
        temporary image list used for dragging. The drag image
        combines the specified image and its mask with the
        current cursor. The drag image can be moved using the
        ImageList_DragMove function.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_Create</td>
        <td valign="top">Create</td>
        <td valign="top">Creates a new image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_Destroy</td>
        <td valign="top">DeleteObject</td>
        <td valign="top">Destroys an image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_DragEnter</td>
        <td valign="top">DragEnter</td>
        <td valign="top">Locks the specified area of the screen,
        preventing it from receiving other updates. This function
        is called during a drag operation.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_DragLeave</td>
        <td valign="top">DragLeave</td>
        <td valign="top">Removes any locks on the locked area of
        the screen through a call to ImageList_DragEnter.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_DragMove</td>
        <td valign="top">DragMove</td>
        <td valign="top">Moves the image. This function is
        typically called in response to a WM_MOUSEMOVE message
        during a drag operation.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_DragShow- NoLock</td>
        <td valign="top">DragShow- NoLock</td>
        <td valign="top">Shows or hides the image being dragged.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_Draw</td>
        <td valign="top">Draw</td>
        <td valign="top">Draws an image list item in the
        specified DC. The drawing styles listed in Table 3-1
        (page 69) have no effect on the appearance of a nonmasked
        image, which is copied to the destination DC using the
        SRCCOPY raster operation. The colors in the image appear
        the same regardless of the background color of the DC.</td>
    </tr>
</table>

<p><b>Table 3-2. </b><i>Image list functions and member
functions.</i> <em>(continued)</em></p>

<table border="1">
    <tr>
        <td valign="top"><b>Function</b></td>
        <td valign="top"><b>Member Function</b></td>
        <td valign="top"><b>Description</b></td>
    </tr>
    <tr>
        <td valign="top">ImageList_DrawEx</td>
        <td valign="top">Draw</td>
        <td valign="top">Draws an image based on the flags and
        colors passed into the function.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_EndDrag</td>
        <td valign="top">EndDrag</td>
        <td valign="top">Ends a drag operation. Although this
        function returns the handle of the temporary image list
        that is used for dragging, the temporary image list is
        destroyed, so the handle returned by this function is
        invalid.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_ExtractIcon</td>
        <td valign="top">ExtractIcon</td>
        <td valign="top">Creates an icon based on an image and a
        mask in an image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_GetBkColor</td>
        <td valign="top">GetBkColor</td>
        <td valign="top">Retrieves the current background color
        for an image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_GetDragImage</td>
        <td valign="top">GetDragImage</td>
        <td valign="top">Retrieves the temporary image list used
        for the drag image and the current drag position as well
        as the offset of the drag image relative to the drag
        position.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_GetIcon</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">Retrieves the specified icon in the
        image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_GetIconSize</td>
        <td valign="top">&nbsp;</td>
        <td valign="top">Retrieves the dimensions of each image
        in an image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_GetImage- Count</td>
        <td valign="top">GetImage- Count</td>
        <td valign="top">Retrieves the number of images in an
        image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_GetImage- Info</td>
        <td valign="top">GetImage- Info</td>
        <td valign="top">Retrieves information about an image and
        fills out an IMAGEINFO structure with information about a
        single image. You can use this information to directly
        manipulate the bitmaps for the image.</td>
    </tr>
    <tr>
        <td valign="top">&nbsp;</td>
        <td valign="top">GetSafeHandle</td>
        <td valign="top">Retrieves the handle to the image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_LoadBitmap</td>
        <td valign="top">Create</td>
        <td valign="top">Creates an image list from the given
        bitmap resource.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_LoadImage</td>
        <td valign="top">LoadImage</td>
        <td valign="top">Creates an image list from the specified
        bitmap, cursor, or icon.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_Merge</td>
        <td valign="top">Attach</td>
        <td valign="top">Merges two existing images, creating a
        new image list to store the image. The second image is
        drawn transparently over the first, and the mask for the
        new image is the result of performing a logical OR
        operation between the masks for the two images. You can
        also detach two image lists by using the Detach member
        function.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_Read</td>
        <td valign="top">Read</td>
        <td valign="top">Reads an image list from a stream.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_Remove</td>
        <td valign="top">Remove</td>
        <td valign="top">Removes an image from an image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_Replace</td>
        <td valign="top">Replace</td>
        <td valign="top">Replaces an image in an image list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_ReplaceIcon</td>
        <td valign="top">Replace</td>
        <td valign="top">Replaces an image in an image list,
        using an icon.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_SetBkColor</td>
        <td valign="top">SetBkColor</td>
        <td valign="top">Sets the background color for an image
        list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_SetDrag- CursorImage</td>
        <td valign="top">SetDrag- CursorImage</td>
        <td valign="top">Sets the image of the dragged item.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_SetIconSize</td>
        <td valign="top">SetIconSize</td>
        <td valign="top">Sets the dimensions of the images in an
        image list and removes all images from the list.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_SetOverlay- Image</td>
        <td valign="top">SetOverlay- Image</td>
        <td valign="top">Adds to the image list the index of an
        image that will be used as an overlay mask.</td>
    </tr>
    <tr>
        <td valign="top">ImageList_Write</td>
        <td valign="top">Write</td>
        <td valign="top">Writes an image list to a stream.</td>
    </tr>
</table>
</body>
</html>
