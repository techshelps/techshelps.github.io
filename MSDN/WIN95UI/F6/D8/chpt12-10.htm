<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step Three: Create the Object Class</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h3>Step Three: Create the Object Class</h3>

<p>Next I created the object I needed, CFileView, by using
ClassWizard. The CFileView object is derived from the CCmdTarget
class. This class implements the IUnknown interface for you,
which means one less thing to do. When I created the class, I
selected the OLE Automation and OLE Createable check boxes and
gave the class the external name Nancy's Viewer. ClassWizard
created the FILEVIEW.CPP and FILEVIEW.H files. </p>

<p>ClassWizard puts a curious line in the CPP file: </p>

<p><tt>IMPLEMENT_OLECREATE(CFileView, &quot;NancyViewer&quot;,
0xe83b63c0, 0x6ff5, <br>
0x11ce, 0x99, 0x3c, 0x0, 0xaa, 0x0, 0x4a, 0xdb, 0x6c)</tt> </p>

<p>This is a macro that implements class factory support. The
class factory allows other applications to create your objects.
The numbers listed after the string <i>Nancy's Viewer</i> are
combined to create a GUID for the class: </p>

<p><tt>e83b63c0-6ff5-11ce-993c-00aa004adb6c</tt> </p>

<p>This line is also included in the VIEWERID.H file, albeit in a
somewhat different form: </p>

<p><tt>// ViewerID.H<br>
<br>
#ifndef _CLSID_NancyViewer_<br>
#define _CLSID_NancyViewer_<br>
<br>
DEFINE_GUID (CLSID_NancyViewer, 0xe83b63c0, 0x6ff5, 0x11ce,<br>
0x99, 0x3c, 0x0, 0xaa, 0x0, 0x4a, 0xdb, 0x6c);<br>
<br>
#endif // _CLSID_NancyViewer_</tt> </p>
</body>
</html>
