<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step Five: Implement the IUnknown Interface</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h3>Step Five: Implement the IUnknown Interface</h3>

<p>Both the IFileViewer and the IPersistFile interfaces implement
the standard IUnknown interface. This is a snap once you know
what to do. By using the macros in the preceding code, you create
an embedded class through the local name (FileViewer and
PersistFile), with an uppercase <i>X</i> prepended to the name
(XFileViewer and XPersistFile). This means that the embedded
class for FileViewer is XFileViewer. </p>

<p>Another macro that I use liberally is METHOD_PROLOGUE, which
lets you access the parent&#151;the CCmdTarget derived class,
CFileViewer&#151;through a special pointer, <i>pThis</i>. The
AddRef, Release, and QueryInterface functions can delegate to the
CCmdTarget implementation through a call to ExternalAddRef,
ExternalRelease, and ExternalQueryInterface, respectively. </p>

<p><tt>// IUnknown for IFileViewer<br>
STDMETHODIMP CFileView::XFileViewer::QueryInterface (<br>
REFIID riid, void **ppv)<br>
{<br>
METHOD_PROLOGUE (CFileView, FileViewer);<br>
TRACE (&quot;CFileView::IFileViewer::QueryInterface\n&quot;);<br>
return pThis-&gt;ExternalQueryInterface (&amp;riid, ppv);<br>
}<br>
<br>
STDMETHODIMP_(ULONG) CFileView::XFileViewer::AddRef (void)<br>
{<br>
METHOD_PROLOGUE (CFileView, FileViewer);<br>
return pThis-&gt;ExternalAddRef ();<br>
}<br>
<br>
STDMETHODIMP_(ULONG) CFileView::XFileViewer::Release (void)<br>
{<br>
METHOD_PROLOGUE (CFileView, FileViewer);<br>
return pThis-&gt;ExternalRelease ();<br>
}</tt> </p>
</body>
</html>
