<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>General Guidelines for Supporting Long Filenames</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h1><font size="5">General Guidelines for Supporting Long
Filenames</font></h1>

<p>The following general guidelines for working with long
filenames apply to all file systems supported by the various
Windows systems. An application that follows these guidelines can
create valid names for files and directories regardless of the
file system in use. </p>

<ul>
    <li>You can include any character from the current code page
        in a name, but do not use a path separator, a character
        in the ASCII range 0 through 31, or any character
        disallowed by the specific file system. A name can
        contain characters from the extended character set (ASCII
        128 through 255). </li>
    <li>Use the backslash (\), the forward slash (<b>/</b>), or
        both to separate components in a path. </li>
    <li>Use a period (.) to represent the current directory in a
        path. </li>
    <li>Use two consecutive periods (..) to represent the parent
        of the current directory in a path. </li>
    <li>Separate components in a directory name or in a filename
        with a period (.). </li>
    <li>The following characters are reserved for Windows and
        should not be used in directory names or filenames: </li>
</ul>

<p>&lt; &gt; : &quot; <b>/ </b>\ | </p>

<ul>
    <li>Do not use reserved words, such as <i>aux,</i> <i>con,</i>
        and <i>prn,</i> as filenames or directory names. </li>
    <li>The application should process a path as a
        null-terminated string. The maximum length for a path is
        given by MAX_PATH. The Unicode versions of the
        CreateDirectory, FindFirstFile, GetFileAttributes, and
        SetFileAttributes functions allow paths to exceed the
        MAX_PATH length if the path has the \\?\ or \\?\UNC\
        prefix. These prefixes turn off path parsing. Use the
        \\?\ prefix with paths for local storage devices and the
        \\?\UNC\ prefix with paths having the Universal Naming
        Convention (UNC) format. An example of a UNC path is \\<i>machine</i>\<i>sharename</i>.
    </li>
    <li>Do not assume case sensitivity, because not all file
        systems distinguish case. For example, under NTFS, the
        filenames FILENAME and Filename are considered to be the
        names of two different files; under HPFS, however, these
        two filenames are considered to be the same, although the
        file system preserves the case as entered and allows the
        user to see mixed-case filenames. </li>
</ul>
</body>
</html>
