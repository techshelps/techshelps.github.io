<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining Which File System Is in Use</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h1><font size="5">Determining Which File System Is in Use</font></h1>

<p>To determine under which file system your application is
currently running, the application calls the GetVolumeInformation
function. This function returns information about the current
volume, such as the maximum length of filenames. Once you call
this function, you can use the value returned in the <i>lpMaximumComponentLength</i>
parameter as the maximum file length in your application and
dynamically allocate a buffer for your filenames and paths. This
is preferable to using static buffers for filenames and paths. If
you must use static buffers, however, reserve at least 256
characters for filenames and 260 characters for paths. </p>

<p>Here is the syntax for the GetVolumeInformation function: </p>

<p><tt>BOOL GetVolumeInformation (<br>
LPCTSTR lpRootPathName, <br>
LPTSTR lpVolumeNameBuffer, <br>
DWORD nVolumeNameSize, <br>
LPDWORD lpVolumeSerialNumber, <br>
LPDWORD lpMaximumComponentLength, <br>
LPDWORD lpFileSystemFlags, <br>
LPTSTR lpFileSystemNameBuffer, <br>
DWORD nFileSystemNameSize)</tt> </p>

<p><i>lpRootPathName</i> points to a string containing the root
directory of the volume to be queried. If this parameter is NULL,
the root of the current directory is used. </p>

<p><i>lpVolumeNameBuffer</i> points to a buffer that is filled in
with the name of the volume. This parameter can be NULL if the
volume name is not needed. </p>

<p><i>nVolumeNameSize</i> is the length, in characters, of the
volume name buffer. This parameter is ignored if the volume name
buffer is not supplied. </p>

<p><i>lpVolumeSerialNumber</i> points to a variable that is
filled in with the volume serial number. This parameter can be
NULL if the volume serial number is not needed. </p>

<p><i>lpMaximumComponentLength</i> points to a variable that is
filled in with the maximum length, in characters, of a filename
component (the part of the filename between the backslashes)
supported by the specified file system. </p>

<p><i>lpFileSystemFlags</i> points to a variable that is filled
in with flags associated with the specified file system. This
variable can contain any combination of flags, such as
FS_CASE_SENSITIVE, which specifies that the file system supports
case-sensitive filename lookup. For a description of all the
flags, see the Win32 SDK documentation. </p>

<p><i>lpFileSystemNameBuffer</i> points to a buffer that is
filled in with the name of the file system (such as FAT, HPFS, or
NTFS). This parameter can be NULL if the system name is not
needed. </p>

<p><i>nFileSystemNameSize</i> is the length, in characters, of
the file system name buffer. This parameter is ignored if the
name buffer is not supplied. </p>
</body>
</html>
