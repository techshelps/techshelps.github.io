<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Step Seven: Implement the IPersistFile Interface</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h3>Step Seven: Implement the IPersistFile Interface</h3>

<p>To implement the IPersistFile interface, the file viewer must
implement the following member functions: GetClassID, Load,
GetCurFile, IsDirty, Save, and SaveCompleted. </p>

<h4>GetClassID</h4>

<p>This function returns the document's CLSID. </p>

<p><tt>STDMETHODIMP CFileView::XPersistFile::GetClassID (LPCLSID
pClsID)<br>
{<br>
METHOD_PROLOGUE (CFileView, PersistFile);<br>
<br>
*pClsID = pThis-&gt;m_clsID;<br>
return NOERROR;<br>
}</tt> </p>

<h4>Load</h4>

<p>This function loads the document contained in the given
filename. Load only stores the filename; ShowInitialize actually
opens the file. </p>

<p><tt>STDMETHODIMP CFileView::XPersistFile::Load (<br>
LPCOLESTR pszFileName, DWORD dwMode)<br>
{<br>
METHOD_PROLOGUE (CFileView, PersistFile);<br>
<br>
// No modifications are necessary to this code; it simply<br>
// copies the parameters into the CFileView::m_pszPath and<br>
// m_grfMode members for use in IFileViewer::ShowInitialize<br>
// and IFileViewer::Show later on.<br>
<br>
// You should never be called twice.<br>
if (pThis-&gt;m_pszPath)<br>
pThis-&gt;m_fLoadCalled = FALSE; // handle error case<br>
<br>
if (pszFileName == NULL)<br>
return E_INVALIDARG;<br>
<br>
// Copy the ANSI filename and the mode to use in opening it.<br>
lstrcpy (pThis-&gt;m_pszPath, pszFileName);<br>
<br>
// Remember that this function has been called.<br>
pThis-&gt;m_fLoadCalled = TRUE;<br>
return NOERROR;<br>
}</tt> </p>

<h4>GetCurFile</h4>

<p>This function returns either the absolute path of the
document's currently associated file or the default filename
prompt if there is no currently associated file. GetCurFile
returns E_UNEXPECTED if the Load function has not yet been
called; otherwise, it copies the path and returns NOERROR. </p>

<p><tt>STDMETHODIMP CFileView::XPersistFile::GetCurFile (<br>
LPOLESTR __RPC_FAR *ppszFileName)<br>
{<br>
LPOLESTR psz;<br>
ULONG cb;<br>
<br>
METHOD_PROLOGUE (CFileView, PersistFile);<br>
<br>
// No modifications are necessary to this code; it simply<br>
// copies the CFileView::m_pszPath string into a piece<br>
// of memory and stores the pointer at *ppszFile.<br>
<br>
// Load must be called, of course.<br>
if (pThis-&gt;m_fLoadCalled)<br>
return E_UNEXPECTED;<br>
<br>
if (ppszFileName == NULL)<br>
return E_INVALIDARG;<br>
<br>
cb = (lstrlen (pThis-&gt;m_pszPath) + 1) * sizeof (OLECHAR);<br>
psz = (LPOLESTR) malloc (cb);<br>
<br>
if (NULL == psz)<br>
return E_OUTOFMEMORY;<br>
<br>
return NOERROR;<br>
}</tt> </p>

<h4>IsDirty</h4>

<p>This function checks a document object for changes that might
have been made since the object was last saved. IsDirty can
simply return S_FALSE because a file viewer does not modify the
file. </p>

<p><tt>STDMETHODIMP CFileView::XPersistFile::IsDirty (void)<br>
{<br>
return S_FALSE;<br>
}</tt> </p>

<h4>Save</h4>

<p>The Save function saves a copy of the object to the specified
filename. Both the Save and the SaveCompleted member functions
should return E_NOTIMPL. </p>

<p><tt>STDMETHODIMP CFileView::XPersistFile::Save (<br>
LPCOLESTR pszFileName, BOOL fRemember)<br>
{<br>
return E_NOTIMPL;<br>
}</tt> </p>

<h4>SaveCompleted</h4>

<p>This function signals that the caller has saved the file with
a call to IPersistFile::Save and has finished working with it. </p>

<p><tt>STDMETHODIMP CFileView::XPersistFile::SaveCompleted (<br>
LPCOLESTR pszFileName)<br>
{<br>
return E_NOTIMPL;<br>
}</tt> </p>
</body>
</html>
