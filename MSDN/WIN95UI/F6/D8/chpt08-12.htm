<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Assumption: The filename contains no more than 12 characters.</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF">


<h3>Assumption: The filename contains no more than 12 characters.</h3>

<p>If your operating system supports long filenames, 12-character
buffers might not have enough space for all the characters in the
filename. Consider the following code snippet, in which the
buffer is assumed to be 12 characters long: </p>

<p><tt>char szFile [12] = &quot;\0&quot;;<br>
<br>
// Fill out the OPENFILENAME structure to support a template and
a hook.<br>
OpenFileName.lStructSize = sizeof (OPENFILENAME);<br>
OpenFileName.hwndOwner = hWnd;<br>
OpenFileName.hInstance = g_hInst;<br>
OpenFileName.lpstrFilter = NULL;<br>
OpenFileName.lpstrCustomFilter = NULL;<br>
OpenFileName.nMaxCustFilter = 0;<br>
OpenFileName.nFilterIndex = 0;<br>
OpenFileName.lpstrFile = szFile;<br>
OpenFileName.nMaxFile = sizeof (szFile);<br>
OpenFileName.lpstrFileTitle = NULL;<br>
OpenFileName.nMaxFileTitle = 0;<br>
OpenFileName.lpstrInitialDir = NULL;<br>
OpenFileName.lpstrTitle = &quot;Open a File&quot;;<br>
OpenFileName.nFileOffset = 0;<br>
OpenFileName.nFileExtension = 0;<br>
OpenFileName.lpstrDefExt = NULL;<br>
OpenFileName.lCustData = NULL;<br>
OpenFileName.lpfnHook = ComDlg32DlgProc;<br>
OpenFileName.lpTemplateName = MAKEINTRESOURCE (IDD_COMDLG32);<br>
OpenFileName.Flags = OFN_SHOWHELP | OFN_EXPLORER |<br>
OFN_ENABLEHOOK | OFN_ENABLETEMPLATE;<br>
<br>
// Call the common dialog function.<br>
if (GetOpenFileName (&amp;OpenFileName))<br>
{<br>
§<br>
}<br>
else<br>
{<br>
ProcessCDError (CommDlgExtendedError (), hWnd);<br>
return FALSE;<br>
}</tt> </p>

<p>If the user enters a filename that contains more than 12
characters, the Open common dialog procedure returns an error of
FNERR_BUFFERTOOSMALL, saving you from a nasty trap. But the
buffer size is not the only problem. If you are doing your own
file parsing, and if you accept only the first 12 characters in a
filename, you could open the wrong file. For instance, imagine
that a user enters the filename <i>Marketing Report</i> and that
the current directory contains files named <i>Marketing Report</i>
and <i>Marketing Salaries.</i> If your application accepts only
the first 8 characters of a filename and assumes an extension,
which file will the application open? </p>
</body>
</html>
