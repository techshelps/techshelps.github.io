<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the UpDown Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingupdowncontrol"></a>Using the UpDown Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingUpDownControlC">
</object></p>
<p>
An UpDown control is a pair of arrow buttons that the user can click to increment or decrement a value, such as a scroll position or a number displayed in a <i>buddy</i> control. The buddy control can be any other kind of control, as long as it has a property that can be updated by the UpDown control.</p>
<p>
To the user, an UpDown control and its buddy control often look like a single control. You can specify that an UpDown control automatically position itself next to its buddy control and that it automatically set the value of the buddy control to its current value. For example, you can use an UpDown control with a Textbox control to prompt the user for numeric input. The illustration below shows an UpDown control with a Textbox control as its buddy control, a combination that is sometimes referred to as a spinner control.</p>
<p>
<img src="avtct085.gif" border=0></p>
<h2>Possible Uses</h2>
<ul type=disc>
<li>
To increment or decrement the value of a field in an application.</li>
</ul>
<h2>Basic Operation</h2>
<p>
To use the UpDown control, you must first set the BuddyControl property to another control, and the BuddyProperty to a scrollable property on the other control. The Min and Max properties determine the limits of the control, and the Wrap property determines if the value will wrap when the end user scrolls past the Min or Max values. The Increment property specifies the amount by which the Value property will be changed when either the up or down arrow is clicked.</p>
<h2>Use the AutoBuddy Property to Set a Buddy Control Automatically </h2>
<p>
At design time, setting the AutoBuddy property to True causes the UpDown control to automatically "buddy" with the previous control in the TabOrder.</p>
<p class=label>
<b>To automatically set a buddy control</b>
<ol>
<li>
Draw the buddy control on the form.<br><br></li>
<li>
Draw the UpDown control on the form.<br><br></li>
<li>
Right-click the UpDown control and click <b>Properties </b>to display the <b>Property Pages</b> dialog box.<br><br></li>
<li>
Click <b>Buddy</b> to display the Buddy tab, as seen in Figure 2.43 below.<br><br></li>
<li>
Click the <b>AutoBuddy </b>check box to set the AutoBuddy property to True.<br><br></li>
<li>
Click the <b>SyncBuddy </b>check box to set the SyncBuddy property to True.</li>
</ol>
<p class=label>
<b>Figure 2.43&nbsp;&nbsp;&nbsp;Buddy Tab on the UpDown control property pages</b></p>
<p>
<img src="avtct077.gif" border=0></p>
<h2>Determining the Scroll Behavior</h2>
<p>
The UpDown control includes several events and properties that allow you to determine how the control scrolls.</p>
<h3>The Increment and Wrap Properties</h3>
<p>
The Wrap property determines how the control will behave when the end user holds down either the up or down button. If set to False, when the Max or Min value is reached, the controls ceases to scroll, and stops at the Max or Min value. When set to True, the control will return to either the Min or Max value and continue to increment (or decrement) through the values as determined by the Min and Max properties.</p>
<p>
The Increment property specifies the amount by which the Value property will be changed when either the up or down arrow is clicked. This value cannot be a negative number. One use of this is to toggle a field or OptionButton between True (-1) and False (0), as shown in the code below:</p>
<pre><code>Private Sub Form_Load()
   ' The UpDown control is named "updToggle."
   ' An OptionButton control is named "optToggle."
   With updToggle
      .BuddyControl = optToggle
      .Min = -1
      .Max = 0
      .Increment = 1
      .Wrap = True
   End With
End Sub

' Change the Value of the OptionButton with
' the UpDown control's Value property.
Private Sub updToggle_Change()
   optToggle.Value = updToggle.Value
End Sub
</code></pre>
<h3>The UpClick and DownClick Events</h3>
<p>
Using the UpClick and DownClick events, you can control exactly how the UpDown control scrolls through a series of values. For example, if you want to allow the end user to scroll rapidly upward through the values, but slower going down through the values, you can set reset the Increment property to different values, as shown below:</p>
<pre><code>Private Sub updScroll_UpClick()
   ' The name of the UpDown controls is "updScroll"
   updScroll.Increment = 5
End Sub

Private Sub updScroll_DownClick()
   ' When the user clicks the down button, the
   ' Increment switches to 1 for finer resolution.
   updScroll.Increment = 1
End Sub</code></pre>
</BODY>
</HTML>
