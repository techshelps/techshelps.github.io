<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Form that Lets You View and Update Data from a Data-Aware Class</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreateconnectiontodatasource"></a>Creating a Form that Lets You View and Update Data from a Data-Aware Class</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCreateConnectionToDataSourceC">
</object></p>
<p>
Once you've created a class that can act as a data source, you can easily create applications that let you view and update records from the data source. You can use ActiveX Data Objects (ADO) and the BindingsCollection object to bind the data source to controls on the form, and add command buttons to navigate through records.</p>
<p>
This topic shows how to create a form that lets you view and edit customer address records from the data-aware class you created in the previous topic.</p>
<p class=label>
<b>To create a form that lets you view and update data from a data-aware class</b>
<ol>
<li>
Add text box and label controls to a form.<br><br></li>
<li>
Add code to bind the text box controls to the data source.<br><br></li>
<li>
Add command button controls to navigate through records.</li>
</ol>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>This topic is part of a series that walks you through creating a simple database application that interacts with data in a tab-delimited text file. It begins with the topic <a href="vbcongetdatafromasciifile.htm">Interacting with Data in an ASCII Text File</a>.</p>
<h3>Add Text Box and Label Controls to a Form</h3>
<p>
The first step in viewing and updating data from a data-aware class is to create an interface for interacting with records from the data source. The easiest way to create an interface is to open a new Standard EXE project, then add TextBox and Label controls to a form.</p>
<p>
For example, you can create an interface for viewing customer address information from the Customers.txt file. First, add a "Customer ID:" label to the form, then add a text box control next to the label and set its Name property to txtCustomerID. Repeat the same process for CompanyName, Address, City, Region, PostalCode, and Country controls.</p>
<h3>Add Code to Bind the Text Box Controls to the Data Source</h3>
<p>
Using a data-aware class, ActiveX Data Objects (ADO), and the BindingCollection object, you can bind controls to a data source when the page loads. You can then edit the data and add code to navigate through the records. For example, you can use an instance of your data-aware class and the BindingCollection object to bind the text box controls on your form to fields from the Customers.txt file.</p>
<p>
First, add a reference to the BindingCollection object's type library to your project. To add the reference, select References on the Project menu, then select Microsoft Data Binding Collection in the References dialog box.</p>
<p>
Then declare variables for the data-aware class and a BindingCollection object in your form's Declarations section:</p>
<pre><code>Private objDataSource As CustomerDataSource
Private colBind As BindingCollection
</code></pre>
<p>
To bind the text box controls to fields from the Customers.txt file when the form loads, add code to the form's Load event procedure. An instance of the CustomerDataSource class reads records from the text file into an ADO recordset, and the BindingCollection object binds the text box controls to fields in the recordset:</p>
<pre><code>Private Sub Form_Load()

   Set objDataSource = New CustomerDataSource
   Set colBind = New BindingCollection

   Set colBind.DataSource = objDataSource
   colBind.Add txtCustomerID, "Text", "CustomerID"
   colBind.Add txtCompanyName, "Text", "CompanyName"
   colBind.Add txtAddress, "Text", "Address"
   colBind.Add txtCity, "Text", "City"
   colBind.Add txtRegion, "Text", "Region"
   colBind.Add txtPostalCode, "Text", "PostalCode"
   colBind.Add txtCountry, "Text", "Country"

End Sub
</code></pre>
<h3>Add Command Button Controls to Navigate through Records</h3>
<p>
By binding controls on your form to a public recordset in your data-aware class, you can easily create Next and Previous buttons that let you navigate through records. Each command button requires a single line of code.</p>
<p>
For example, to create a Next button for the form that displays customer records, add a command button to the form and change its Caption and Name properties to Next. Then add the following line to the command button's Next_Click event procedure:</p>
<pre><code>objDataSource.rsCustomers.MoveNext
</code></pre>
<p>
The code uses the MoveNext method of the rsCustomers recordset that serves as the data source for the form's controls. It refers to the recordset as a property of the object variable that represents an instance of the CustomerDataSource class.</p>
<p>
Similarly, you can create Previous, First, and Last buttons by adding command buttons to the form and changing their Caption and Name properties to Previous, First, and Last, respectively. Then add code to the Click event procedure for each command button that invokes the MovePrevious, MoveFirst, and MoveLast methods.</p>
<p>
When you run the form, Visual Basic lets you view and update records from the Customers.txt file and lets you navigate through the recordset.</p>
<h4>Step by Step</h4>
<p>
This topic is part of a series that walks you through using a data-aware class and ADO to create a simple database application that interacts with data in a tab-delimited text file.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>To</b></td>
<td class=label width=69%><b>See</b></td>
</tr>
<tr valign=top>
<td width=31%>Go to the next step</td>
<td width=69%><a href="vbconbindgridcontroltosource.htm">Modifying the Form to Let You Add New Records</a></td>
</tr>
<tr valign=top>
<td width=31%>Start from the beginning</td>
<td width=69%><a href="vbcongetdatafromasciifile.htm">Interacting with Data in an ASCII Text File</a></td>
</tr>
</table><br>
</BODY>
</HTML>
