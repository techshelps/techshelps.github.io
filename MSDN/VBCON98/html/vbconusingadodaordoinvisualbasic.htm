<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADO, DAO and RDO in Visual Basic</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingadodaordoinvisualbasic"></a>ADO, DAO and RDO in Visual Basic</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdhowADOTutorial;mdhowADOTutorial(VB);vbconUsingADODAORDOInVisualBasicC">
</object></p>
<p>
In Visual Basic, three data access interfaces are available to you: ActiveX Data Objects (ADO), Remote Data Objects (RDO), and Data Access Objects (DAO). A data access interface is an object model that represents various facets of accessing data. Using Visual Basic, you can programmatically control the connection, statement builders, and returned data for use in any application.</p>
<p>
Why are there three data access interfaces in Visual Basic? Data access technology is constantly evolving, and each of the three interfaces represent a different state of the art. The latest is ADO, which features a simpler — yet more flexible — object model than either RDO or DAO. For new projects, you should use ADO as your data access interface.</p>
<h2>Why Use ADO?</h2>
<p>
ADO is designed as an easy-to-use application level interface to Microsoft's newest and most powerful data access paradigm, OLE DB. OLE DB provides high-performance access to any data source, including relational and non-relational databases, email and file systems, text and graphics, custom business objects, and more. ADO is implemented for minimal network traffic in key Internet scenarios, and a minimal number of layers between the front-end and data source — all to provide a lightweight, high-performance interface. ADO is called using a familiar metaphor — the OLE Automation interface. And ADO uses conventions and features similar to DAO and RDO, with simplified semantics that make it easy to learn.</p>
<p>
For a brief overview, see <a href="vbconoledbproviders.htm">OLE DB Providers</a>.</p>
<p>
For detailed information about ADO, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdmscADOGSOverview">
</object><a href=JavaScript:alink_2.Click()>Getting Started with ADO 2.0</a>.</p>
<h3>DAO and RDO</h3>
<p>
For backward compatibility, Visual Basic continues to support DAO and RDO for existing projects.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on RDO programming, see <a href="vbconusingremotedataobjectsremotedatacontrol.htm">Using Remote Data Objects and the RemoteData Control</a>. For information on DAO programming, see <a href="vbconusingdataaccessobjectswithremotedatabases.htm">Using Data Access Objects with Remote Databases</a>. Complete DAO reference can also be found at <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="daidxWhatsNewInDAO">
</object><a href=JavaScript:alink_3.Click()>Microsoft DAO 3.51</a>.</p>
<h3>Upgrading from RDO to ADO</h3>
<p>
Consider upgrading if you decide ADO offers benefits your RDO-based application can use. See <a href="vbconadocomparedwithrdodao.htm">ADO Compared with RDO and DAO</a> for a discussion of the differences among the platforms and for guidance on changing an RDO-based project to an ADO project. See <a href="vbconconvertingfromrdotoado.htm">Converting from RDO 2.0 to ADO 2.0</a> for upgrade guidance.</p>
</BODY>
</HTML>
