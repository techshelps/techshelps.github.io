<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Events to a Class</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconevents"></a>Adding Events to a Class</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconEventsC">
</object></p>
<p>
Okay, let's say you've created a dinosaur simulation, complete with Stegosaur, Triceratops, and Tyrannosaur classes. As the final touch, you want the Tyrannosaur to roar, and when it does you want every other dinosaur in your simulation to sit up and take notice.</p>
<p>
If the Tyrannosaur class had a Roar event, you could handle that event in all your other dinosaur classes. This topic discusses the declaration and handling of events in your class modules.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Kids, don't try this at home, at least with more than a few dinosaurs. Connecting every dinosaur with every other dinosaur using events could make your dinosaurs so slow that mammal objects would take over the simulation.</p>
<p>
Properties and methods are said to belong to <i>incoming interfaces</i>, because they're invoked from outside the object. By contrast, events are called <i>outgoing interfaces</i>, because they're initiated within the object, and handled elsewhere.</p>
<p>
The following topics describe the process of declaring, raising, and handling events, with examples.
<ul type=disc>
<li>
<a href="vbcondeclaringraisingevents.htm">Declaring and Raising Events</a>&nbsp;&nbsp;&nbsp;Like procedures, events (and their arguments) have to be declared. In order for a declared event to occur, the object must raise it.<br><br></li>
<li>
<a href="vbconhandlingobjectsevents.htm">Handling an Object's Events</a>&nbsp;&nbsp;&nbsp;The events your objects raise can be handled by other objects using variables declared using the WithEvents keyword.<br><br></li>
<li>
<a href="vbconcomparingwitheventstocontroleventsonforms.htm">Comparing WithEvents to Control Events on Forms</a>&nbsp;&nbsp;&nbsp;Similarities and differences between event procedures associated with WithEvents variables and those associated with controls on forms.<br><br></li>
<li>
<a href="vbconaddingeventtoform.htm">Adding an Event to a Form</a>&nbsp;&nbsp;&nbsp;A short step by step example of adding a custom event to a form.<br><br></li>
<li>
<a href="vbconsummaryofdeclaringraisinghandlingevents.htm">Summary of Declaring, Raising, and Handling Events</a>&nbsp;&nbsp;&nbsp;A summary of the process of using events in classes.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;<i>Creating ActiveX Components,</i> in the <i>Component Tools Guide</i> provided with the Professional and Enterprise editions, discusses the use of events in designing your own software components.</p>
<p>
For a discussion of a better way to handle dinosaurs, see "Polymorphism" later in this chapter.</p>
</BODY>
</HTML>
