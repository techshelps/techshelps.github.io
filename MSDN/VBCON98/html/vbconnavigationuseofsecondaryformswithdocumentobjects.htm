<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Forms and Modules to ActiveX Document Projects</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconnavigationuseofsecondaryformswithdocumentobjects"></a>Adding Forms and Modules to ActiveX Document Projects</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconNavigationUseOfSecondaryFormsWithDocumentObjectsC">
</object></p>
<p>
When you create a Visual Basic project, you are used to starting with a standard Form. When you create an ActiveX document, you are by no means limited to using only ActiveX documents: You can add standard forms and modules to your project, as you would to any other project.</p>
<h2>Modeless Dialog Boxes Sometimes Aren't Allowed</h2>
<p>
When you create an ActiveX DLL, you'll have one limitation: Depending on the container, modeless dialog boxes may or may not be displayed. For example, imagine that you've created an ActiveX DLL that includes an ActiveX document that shows a modeless form. If you view the document in Office Binder, showing the modeless form will present no problems. On the other hand, if you view the same document in Internet Explorer, attempting to display the same modeless form will raise an error.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;With Internet Explorer 4.0 or later, the ability to show modeless forms is dependent on the threading model. This is discussed in "Apartment-Model Threading in Visual Basic" in "Building Code Components."</p>
<h3>Avoid the Problem Using the NonModalAllowed Property</h3>
<p>
However, the problem of not being allowed to display a modeless dialog box can be side-stepped. Using the NonModalAllowed property, you can check before displaying a form, and react appropriately. In short, the NonModalAllowed property (a read-only property), returns True or False, depending on whether or not the App object allows modeless forms to be displayed. Simple code can then be written as in the following example:</p>
<pre><code>Private Sub cmdShowMe_Click()
   If App.NonModalAllowed Then ' Show the form
                                ' modeless.
      frmModeless.Show vbModeless, Me
   Else ' Show the form modally.
      FrmModeless.Show vbModal, Me
   EndIf
End Sub
</code></pre>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more details about displaying forms, see "Displaying Forms from Code Components" in "General Principles of Component Design."</p>
</BODY>
</HTML>
