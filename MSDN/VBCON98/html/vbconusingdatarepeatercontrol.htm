<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the DataRepeater Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingdatarepeatercontrol"></a>Using the DataRepeater Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingDataRepeaterControl_C">
</object></p>
<p>
The DataRepeater control functions as a data-bound container of any user control you create. For example, imagine creating a user control that contains three TextBox controls, and a CheckBox control. This user control is designed to show one record of an employee database — displaying name, birth date, employee number, and marital status of the employee.</p>
<p>
After compiling the control into an .ocx, the DataRepeater control's RepeatedControlName property is set to the user control. The DataRepeater is then bound to a data source, such as the ADO Data Control, which sets up a connection between the user control and the employee database. At run time, the DataRepeater displays several instances of the user control—each in its own row, and each bound to a different record in the database. The result can resemble the figure below.</p>
<p class=label>
<b>Employee Records Repeated in DataRepeater Control</b></p>
<p>
<img src="vb4u931.gif" border=0></p>
<p>
At run time, the user can scroll through a recordset using the HOME, END, PAGEUP, PAGEDOWN, and arrow keys.</p>
<p class=label>
<b>Possible Uses</b>
<ul type=disc>
<li>
To create a catalog that includes images of each product.<br><br></li>
<li>
To create a bankbook application to track personal finances.<br><br></li>
<li>
To create a custom data-bound grid that includes ComboBox controls.</li>
</ul>
<h3>Creating a Data-bound User Control for use in the DataRepeater Control</h3>
<p>
The first step when using the DataRepeater control is to create a data-bound user control. The procedure below creates a simple control that can be repeated in the DataRepeater.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;Details about creating a data-bound user control can be found in "Binding a Control to a Data Source."</p>
<p class=label>
<b>Creating a data-bound User control for use in the DataRepeater Control</b>
<ol>
<li>
Create a new <b>ActiveX Control </b>project.<br><br></li>
<li>
In the <b>Properties </b>window, rename Project1 to <b>ProductsCtl</b>.<br><br></li>
<li>
In the <b>Properties </b>window, rename UserControl1 to <b>ctlProducts</b>.<br><br></li>
<li>
Add two <b>TextBox </b>controls and two <b>Label </b>controls to the form, and set their properties as shown in the table below.<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Object</b></td>
<td class=label width=33%><b>Property</b></td>
<td class=label width=34%><b>Setting</b></td>
</tr>
<tr valign=top>
<td width=33%>Text1</td>
<td width=33%>Name</td>
<td width=34%>txtProductName</td>
</tr>
<tr valign=top>
<td width=33%>Text2</td>
<td width=33%>Name</td>
<td width=34%>txtUnitPrice</td>
</tr>
<tr valign=top>
<td width=33%>Label1</td>
<td width=33%>Caption</td>
<td width=34%>Product Name</td>
</tr>
<tr valign=top>
<td width=33%>Label2</td>
<td width=33%>Caption</td>
<td width=34%>Unit Price</td>
</tr>
</table><br>
<p class=tl>
Because the user control will be repeated, you may want to minimize its height; the simple user control described above looks like this:</P><p>
<img src="vb4u932.gif" border=0></P></li>
<li>
Add the code below to the control to create Let and Get properties of the user control.<pre><code>Public Property Get ProductName() As String
ProductName = txtProductName.Text
End Property

Public Property Let ProductName(ByVal newProductName As String)
txtProductName.Text = newProductName
End Property

Public Property Get UnitPrice() As String
UnitPrice = txtUnitPrice.Text ' Return a String!
End Property

Public Property Let UnitPrice(ByVal newUnitPrice As String)
txtUnitPrice.Text = newUnitPrice ' NewUnitPrice is a String!
End Property

Private Sub txtProductName_Change()
PropertyChanged "ProductName"
End Sub

Private Sub txtUnitPrice_Change()
PropertyChanged "UnitPrice"
End Sub
</code></pre>
<p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Notice in the above code that the <b>UnitPrice </b>property is declared as a string. This is to allow the user of the DataRepeater control to use the DataFormat object to format the string as Currency. If you type the new value as Currency (what you might expect), the formatting supplied by the DataFormat object will be stripped.</p></li>
<li>
Use the <b>Procedure Attributes</b> dialog box to make the properties data-bound.<p class=tl>
On the <b>Tools </b>menu click <b>Procedure Attributes</b>. On the <b>Procedures Attributes </b>dialog box, click <b>Advanced</b>. The <b>Name</b> box contains the property you want to make data-bound, and should contain <b>ProductName</b>. Click <b>Property is data bound</b>, then click <b>Show in DataBindings collection at design time</b>. Click the Name box and click <b>UnitPrice</b>. Once again, click <b>Property is data bound</b>, then click <b>Show in DataBindings collection at design time</b>. Click <b>OK</b> to close the dialog box.</P></li>
<li>
Using the Windows Explorer, create a new folder on your hard disk named <b>ProductsCtl</b>.<br><br></li>
<li>
On the <b>File </b>menu click <b>Save Project</b>. Save the project in the new folder using the names provided in the dialog boxes.<br><br></li>
<li>
On the <b>File </b>menu click <b>Make ProductsCtl.ocx</b>. Save the .ocx to the same folder.</li>
</ol>
<p>
When you compile the user control into an .ocx, Visual Basic registers the control for you, allowing you to use it in the DataRepeater control.</p>
<h3>Using the Data-bound User Control in the DataRepeater Control</h3>
<p>
Once you have built and compiled a data-bound user control, you can have it repeated in the DataRepeater control.</p>
<p class=label>
<b>Using a data-bound user control in the DataRepeater control</b>
<ol>
<li>
Create a new <b>Standard Exe</b> project.<br><br></li>
<li>
Set the following properties for the project and form:<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Object</b></td>
<td class=label width=33%><b>Property</b></td>
<td class=label width=34%><b>Setting</b></td>
</tr>
<tr valign=top>
<td width=33%>Project1</td>
<td width=33%>Name</td>
<td width=34%>prjRepeater</td>
</tr>
<tr valign=top>
<td width=33%>Form1</td>
<td width=33%>Name</td>
<td width=34%>frmRepeater</td>
</tr>
</table><br>
</li>
<li>
Add the <b>DataRepeater </b>control and <b>ADO Data Control</b> to the <b>Toolbox</b>.<p class=tl>
On the Project menu, click <b>Components</b>. In the <b>Components </b>dialog box, click the <b>Controls</b> tab, and check <b>Microsoft Data Repeater Control</b> and <b>Microsoft ADO Data Control</b>. Click <b>OK </b>to close the dialog box.</P></li>
<li>
Draw a <b>DataRepeater </b>control on the form. Make the control large enough to accommodate several "rows" of the control you want to repeat. One "row" is the height of the repeated control, as determined by the size of the UserControl object's designer.<br><br></li>
<li>
Draw an <b>ADO Data Control </b>on the form, beneath the DataRepeater control.<br><br></li>
<li>
Click the <b>ADO Data Control </b>to select it. Then, on the <b>Properties </b>window, click the <b>ConnectionString </b>property. Using the <b>ConnectionString </b>dialog box, create a connection string that accesses the Northwind database.<br><br></li>
<li>
On the <b>Properties </b>window, click <b>Source</b>, and type the following SQL statement:<pre><code>SELECT * FROM Products</code></pre>
</li>
<li>
Click the <b>DataRepeater </b>control to select it. On the <b>Properties </b>window, click <b>DataSource</b>, and click <b>ADODC1</b> to set the data source.<br><br></li>
<li>
In the <b>Properties </b>window, click <b>RepeatedControlName </b>to display a drop-down list of all controls available on the computer. On the list, click <b>ProductsCtl.ctlProducts</b>. The selected control will be repeated in the DataRepeater control.</li>
</ol>
<h4>Binding the User Control Properties to the ADO Data Control</h4>
<p>
Once the user control is contained by the DataRepeater control, you must bind the user control's properties to the record source.
<ol>
<li>
Right-click the DataRepeater control, and then click <b>DataRepeater Properties</b>. On the <b>Property Pages </b>dialog box, click the <b>RepeaterBindings</b> tab.<br><br></li>
<li>
Click the <b>PropertyName</b> box to display a drop-down list of the data-bound properties of the repeated control. Click <b>ProductName</b>.<br><br></li>
<li>
Click the <b>DataField </b>box to display a drop-down list of available data fields from the data source. Click <b>ProductName</b>.<br><br></li>
<li>
Click the <b>Add</b> button to add the pair of property and data field to the <b>RepeaterBindings</b> collection.<br><br></li>
<li>
Repeat steps 2 through 4 for the remaining property (<b>UnitPrice</b>).<br><br></li>
<li>
Click the <b>Format </b>tab.<br><br></li>
<li>
In the <b>Format Item </b>box, click <b>UnitPrice</b>.<br><br></li>
<li>
In the <b>Format Type</b> box, click <b>Currency</b>. In the <b>Symbol</b> box, select a currency character appropriate to your country.<br><br></li>
<li>
Click <b>OK </b>to close the dialog box.<br><br></li>
<li>
Press <b>F5</b> to run the project. You can then use the scroll bar to scroll through the recordset, or click the ADO Data Control's navigation buttons.</li>
</ol>
</BODY>
</HTML>
