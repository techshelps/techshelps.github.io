<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Component Standards and Guidelines</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconolecomponentstandardsguidelines"></a>ActiveX Component Standards and Guidelines</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconOLEComponentStandardsGuidelinesC">
</object></p>
<p>
Your component will be easier to use if your object model is similar in style to those of other components, and if the methods and properties of your objects have the same names as methods and properties that provide the same functionality for objects provided by other components.</p>
<p>
This appendix includes the following topics relating to these issues.</p>
<h2>Topics</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbconobjectnamingguidelines.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconobjectnamingguidelines.htm">Object Naming Guidelines</a><p>
How to select names for constants, for the classes your objects are created from, for the members — properties, methods, and events — of your classes, and for the named arguments of those members.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconolecomponentshutdown.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconolecomponentshutdown.htm">ActiveX Component Shutdown</a><p>
Describes what you have to do to create well-behaved components, and what Visual Basic does to help you. Explains Visual Basic’s shutdown rules for components.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconobjectmodelguidelines.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconobjectmodelguidelines.htm">Object Model Creation Guidelines</a><p>
Offers guidelines for creating robust collection classes and root objects for your component’s object model, and provides references to additional information.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatinginterfacesforusewithimplementsstatement.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatinginterfacesforusewithimplementsstatement.htm">Creating Interfaces for Use With the Implements Statement</a><p>
Rules and guidelines for creating components that are compatible with Visual Basic's Implements statement.</p>
</td>
</tr>
</table><br>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;"Programming with Objects" and "Programming ActiveX Components," in the <i>Visual Basic Programmer’s Guide,</i> contain information you may find helpful in understanding these issues.</p>
</BODY>
</HTML>
