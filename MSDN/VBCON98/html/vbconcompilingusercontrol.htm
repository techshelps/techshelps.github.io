<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiling the ControlDemo Component</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcompilingusercontrol"></a>Compiling the ControlDemo Component</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCompilingUserControlC">
</object></p>
<p>
Once you have created an ActiveX control project containing one or more UserControl objects, you can compile it into an .ocx file and use the controls in other applications. The following procedures demonstrate this.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This topic is part of a series that walks you through creating a sample ActiveX control. It begins with the topic <a href="vbconcreatingactivexcontrol.htm">Creating an ActiveX Control</a>.</p>
<p class=label>
<b>Compiling the ControlDemo project</b>
<ol>
<li>
If the TestCtlDemo project is still in run mode, click the <b>Close </b>button on Form1 to return to design mode.<br><br></li>
<li>
In the <b>Project Explorer</b> window, click <b>ControlDemo</b> to select the project.<br><br></li>
<li>
On the <b>File </b>menu, click <b>Make ControlDemo.ocx</b> to open the <b>Make Project </b>dialog box. Click <b>OK</b> to build the .ocx file.<br><br></li>
<li>
<b>On the File </b>menu, click <b>Remove Project </b>to remove<b> ControlDemo from the project group, so that Visual Basic will use the compiled binary component (.ocx file) instead of the project.</b><p class=tl>
Visual Basic displays a warning message, because the TestCtlDemo project contains a reference to ControlDemo. Click <b>Yes</b> to remove ControlDemo anyway.</P><p class=tl>
When you remove ControlDemo from the project group, Visual Basic looks for ControlDemo.ocx in the Windows Registry. If the .ocx file exists, Visual Basic automatically updates the reference you set in the procedure "Adding the TestCtlDemo Project."</P><p class=tl>
To switch back to using the project instead of the binary component, you can click <b>Add Project</b>, on the <b>File </b>menu, and add the ControlDemo project back to the project group.</P></li>
<li>
Press F5 to run TestCtlDemo using the .ocx file.</li>
</ol>
<p>
When ControlDemo is running from source code, you cannot access the ShapeLabel control from other applications, or from another copy of Visual Basic. This is because ActiveX control components must run in process. Once you have compiled a .ocx component, you can test it from other applications.</p>
<p class=label>
<b>To use ControlDemo.ocx in another copy of Visual Basic</b>
<ol>
<li>
Open a new instance of Visual Basic. In the <b>New Project </b>dialog box, double-click the <b>Standard EXE </b>icon to open an .exe project.<br><br></li>
<li>
On the <b>Project</b> menu, click <b>Components</b> to open the <b>Components</b> dialog box. On the <b>Controls </b>tab, check <b>ActiveX Control Creation Demo,</b> and then click <b>OK</b>.<p class=tl>
The icon for ShapeLabel appears on the Toolbox. You can now add ShapeLabel controls to the default form, and use the <b>Properties </b>window to set their properties. You can also right-click on an instance of ShapeLabel, and choose <b>Properties</b> from the Context menu to edit the control’s properties with the property page.</P></li>
<li>
Press F5 to run the project.<p class=tl>
You can also compile the project and run the .exe.</P></li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;An .ocx file can contain multiple controls and property pages. "Distributing Controls," in "Building ActiveX Controls," discusses control packaging and distribution.</p>
<h3>Step by Step</h3>
<p>
This topic is part of a series that walks you through creating a sample ActiveX control.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>To</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>Go to the next step</td>
<td width=58%><a href="vbconolecontrolcreationrecap.htm">Control Creation Recap</a></td>
</tr>
<tr valign=top>
<td width=42%>Start from the beginning</td>
<td width=58%><a href="vbconcreatingactivexcontrol.htm">Creating an ActiveX Control</a></td>
</tr>
</table><br>
</BODY>
</HTML>
