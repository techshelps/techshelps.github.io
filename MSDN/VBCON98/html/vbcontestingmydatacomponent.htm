<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Testing the MyData Component</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontestingmydatacomponent"></a>Testing the MyData Component</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTestingMyDataComponent_C">
</object></p>
<p>
In the previous topics, we created an ActiveX DLL containing two classes, MyOSPObject and MyDataSource. In this topic we'll use the MyDataComponent object as a data source for the form that we created in an earlier topic.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This topic is part of a series that walks you through creating sample data source components. It begins with the topic <a href="vbconbuildingdatasources.htm">Creating Data Sources</a>.</p>
<p class=label>
<b>To test the MyData control</b>
<ol>
<li>
Select <b>Project 1 (DataSourceTest.vbp)</b> in the <b>Project Explorer</b>.<br><br></li>
<li>
Select <b>References</b> from the <b>Project</b> menu to open the <b>References</b> dialog. Add a reference to <b>MyDataComponent</b>.<br><br></li>
<li>
Add a reference to the <b>Microsoft Data Adapter Library</b>. The Data Adapter object acts as an intermediate layer between OLE DB and OSP.<br><br></li>
<li>
Double-click <b>Form1 </b>in the <b>Project Explorer</b> to open its designer.<br><br></li>
<li>
Select <b>DataGrid</b> in the <b>ToolBox</b> and add a second DataGrid to Form1. You don't need to set any properties for DataGrid2.<br><br></li>
<li>
Double-click <b>Form1</b> to open its code window. In the <b>Object </b>box, select (<b>General</b>). In the <b>Procedure </b>box, select (<b>Declarations</b>) to position yourself at the top of the code module. Add the following code:<pre><code>Option Explicit
Dim da As New DataAdapter
Dim ds As New MyDataSource
</code></pre>
</li>
<li>
In the <b>Object </b>box, select <b>Form</b>. In the <b>Procedure </b>box, select the <b>Load</b> event. Add the following code to the Form_Load event procedure to initialize the MyDataComponent object and assign it to the controls:<pre><code>Private Sub Form_Load()
 &nbsp; ' Set the Object property of the Data Adapter 
 &nbsp; ' to the MyDataSource object
 &nbsp; Set da.Object = ds
 &nbsp; 
 &nbsp; ' Set the DataMember property
 &nbsp; DataGrid2.DataMember = App.Path &amp; "\Customer.txt"
 &nbsp; ' Set the DataSource to the DataAdapter
 &nbsp; Set DataGrid2.DataSource = da
End Sub
</code></pre>
<p class=atl>
<b>Note</b>&nbsp;&nbsp;&nbsp;The above code assumes that the Customer.txt file is located in the same directory as your application. If you have the Customer.txt file in a different location, change the path accordingly. A copy of the Customer.txt file is included with the AXData sample application.</p></li>
<li>
Select <b>Start</b> from the <b>Run</b> menu to run the project.<p class=tl>
Notice that the second DataGrid contains the same data as the first; like the first, you can edit data in the second grid and the changes will be saved. The big difference between the two is that the first DataGrid is bound to a database, but the second DataGrid isn't — it's bound to a text file through the OLE DB Simple Provider interface.</P></li>
</ol>
<p>
That does it for the data sources example. Of course, you could easily expand on this. For example, you might add methods to the MyOSPObject class to navigate through the records, or perhaps methods that validate content or formatting for a particular field. You can take it as far as you want.</p>
<h3>Step by Step</h3>
<p>
This topic is part of a series that walks you through creating sample ActiveX data sources.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>To</b></td>
<td class=label width=50%><b>See</b></td>
</tr>
<tr valign=top>
<td width=50%>Go to the next step</td>
<td width=50%><a href="vbcondatasourcesrecap.htm">Data Sources Recap</a></td>
</tr>
<tr valign=top>
<td width=50%>Start from the beginning</td>
<td width=50%><a href="vbconbuildingdatasources.htm">Creating Data Sources</a></td>
</tr>
</table><br>
</BODY>
</HTML>
