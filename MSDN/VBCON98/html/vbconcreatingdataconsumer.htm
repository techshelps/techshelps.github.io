<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Data Consumer</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreatingdataconsumer"></a>Creating a Data Consumer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCreatingDataConsumer_C">
</object></p>
<p>
In this section, we’ll walk step-by-step through the process of creating a data-aware class that acts as a data consumer. The previous section, "Creating a Data Source," demonstrates how to create a data source to which a data consumer can be bound. This example shows how to create a data consumer class and bind it to the data source created in the previous section.</p>
<p>
The code examples in this section are taken from the Data-aware Classes (Dataware.vbp) sample. You'll find this application in the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_2.Click()>Samples</a> directory.</p>
<h3>Binding a Data Consumer to a Data Source Object</h3>
<p>
This example demonstrates how to create a data consumer class and bind it to a data source class. The example uses the MySource class created in the "Creating a Data Source" topic.
<ol>
<li>
Open the Dataware.vbp project. (Select <b>Open Project</b> from the <b>File</b> menu.)<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you haven’t previously completed the "Creating a Data Source" example this project won’t exist. You can also find a completed version of the Dataware.vbp project in the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_3.Click()>Samples</a> directory.</p></li>
<li>
Insert a new class module by selecting <b>Add Class Module</b> from the <b>Project</b> menu.<br><br></li>
<li>
In the <b>Properties</b> window, set the properties of the new class as follows:<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=29%><b>Property</b></td>
<td class=label width=71%><b>Setting</b></td>
</tr>
<tr valign=top>
<td width=29%>Name</td>
<td width=71%>MyConsumer</td>
</tr>
<tr valign=top>
<td width=29%>DataBindingBehavior</td>
<td width=71%>vbSimpleBound</td>
</tr>
</table><br>
</li>
<li>
Add the following to the <b>Declarations</b> section of the class module:<pre><code>Option Explicit
Private mDirectory As String
</code></pre>
</li>
<li>
Add a pair of Property Get / Property Let procedures for a public DirName property:<pre><code>Public Property Get DirName() As String
 &nbsp; DirName = mDirectory
End Property

Public Property Let DirName(mNewDir As String)
 &nbsp; mDirectory = mNewDir
 &nbsp; ' Display the new value in the Immediate window.
 &nbsp; Debug.Print mDirectory
End Property
</code></pre>
<p class=tl>
Since MySource is a nonvisual class, we need to use a Debug.Print statement in the Property Let procedure to prove that it’s retrieving new values from the data source.</P></li>
<li>
Select Form1 and add the following code to the <b>Declarations</b> section:<pre><code>Option Explicit
Private objSource As MySource
Private objBindingCollection As BindingCollection
Private objConsumer As MyConsumer
</code></pre>
<p class=tl>
The new line of code adds a reference to our consumer class.</P></li>
<li>
Add the following code to the Form Load event procedure:<pre><code>Private Sub Form_Load()
 &nbsp; Set objSource = New MySource
 &nbsp; Set objBindingCollection = New BindingCollection
 &nbsp; Set objConsumer = New MyConsumer

 &nbsp; ' Assign the source class to the Binding
 &nbsp; ' Collection’s DataSource property.
 &nbsp; Set objBindingCollection.DataSource = objSource
 &nbsp; ' Add a binding.
 &nbsp; objBindingCollection.Add txtConsumer, "Text", "Directory"
 &nbsp; objBindingCollection.Add objConsumer, "DirName", "Directory"
</code></pre>
<p class=tl>
The new code creates an instance of the consumer class and adds it to the Binding Collection, binding the DirName property of the consumer to the Directory field of the data source.</P></li>
<li>
Press F5 to run the project. Make sure that the <b>Immediate</b> window is visible.<p class=tl>
As you click the Cycle button, the directory names provided by MySource will appear in both the TextBox and the Immediate window, proving that MyConsumer is bound to MySource.</P></li>
</ol>
</BODY>
</HTML>
