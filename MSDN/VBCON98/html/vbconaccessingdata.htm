<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing Data Using Visual Basic</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconaccessingdata"></a>Accessing Data Using Visual Basic</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAccessingDataC">
</object></p>
<p>
The figure below is a roadmap of data access technologies found in Visual Basic. The figure features "hot" zones, which you can click to find out more information about any particular set of data, access tools or technologies.</p>
<p>
<img src="vb3XV91.gif" width="590" height="221" usemap="#vb3XV91" border="0">
<MAP NAME="vb3XV91">
<AREA SHAPE=RECT COORDS="490,35,536,50" HREF=vbconDataAwareControls.htm ALT="vbconDataAwareControls.htm">
<AREA SHAPE=RECT COORDS="490,56,535,70" HREF=vbconDHTMLVisualBasicDataAccess.htm ALT="vbconDHTMLVisualBasicDataAccess.htm">
<AREA SHAPE=RECT COORDS="490,76,534,92" HREF=vbconUsingMicrosoftDataReportDesigner.htm ALT="vbconUsingMicrosoftDataReportDesigner.htm">
<AREA SHAPE=RECT COORDS="489,98,536,114" HREF=vbconDataBindingInVisualBasic.htm ALT="vbconDataBindingInVisualBasic.htm">
<AREA SHAPE=RECT COORDS="487,131,546,157" HREF=vbconDataBindingInVisualBasic.htm ALT="vbconDataBindingInVisualBasic.htm">
<AREA SHAPE=RECT COORDS="414,33,468,113" HREF=vbconVisualBasicDataSources.htm ALT="vbconVisualBasicDataSources.htm">
<AREA SHAPE=RECT COORDS="449,165,588,221" HREF=vbconVisualBasicDataSources.htm ALT="vbconVisualBasicDataSources.htm">
<AREA SHAPE=RECT COORDS="322,58,387,70" HREF=vbconRemotingFeaturesOfVisualBasic.htm ALT="vbconRemotingFeaturesOfVisualBasic.htm">
<AREA SHAPE=RECT COORDS="286,93,401,128" HREF=vbconRemotingFeaturesOfVisualBasic.htm ALT="vbconRemotingFeaturesOfVisualBasic.htm">
<AREA SHAPE=RECT COORDS="206,135,315,159" HREF=vbconUsingADODAORDOInVisualBasic.htm ALT="vbconUsingADODAORDOInVisualBasic.htm">
<AREA SHAPE=RECT COORDS="134,95,209,130" HREF=vbconMiddleTierComponents.htm ALT="vbconMiddleTierComponents.htm">
<AREA SHAPE=RECT COORDS="212,30,307,84" HREF=vbconCreatingOLEComponents.htm ALT="vbconCreatingOLEComponents.htm">
<AREA SHAPE=RECT COORDS="2,94,106,138" HREF=vbconTheDataViewWindow.htm ALT="vbconTheDataViewWindow.htm">
</MAP>
</P>
<b>Microsoft Visual Data Tools</b></p>
<p>
Using Visual Basic 6.0 you can create components that encapsulate every step in a data access system. Beginning with the data source, Microsoft Visual Data Tools (accessible through the Data View window) give you the ability to view and manipulate tables, views, stored procedures, and database schemas on SQL Server and Oracle systems.</p>
<h3>Middle Tier Components and Microsoft Transaction Server</h3>
<p>
The power of Visual Basic is also leveraged to create the middle tier components in your application, as you make your own ActiveX DLLs and EXEs. Visual Basic now includes enhancements that tailor applications to work with Microsoft Transaction Server.</p>
<h3>ActiveX Data Objects (ADO)</h3>
<p>
The bridge between the data providers and data consumers is through data sources created using Microsoft ActiveX Data Objects (ADO), which is the primary method in Visual Basic to access data in any data source, both relational and non-relational. For backward compatibility and project maintenance, Remote Data Objects (RDO) and Data Access Objects (DAO) are still supported.</p>
<h3>Data Sources and Data Controls</h3>
<p>
On the client side, several new data sources are available, including the Data Environment, a graphical designer that allows you to quickly create ADO Connections and Commands to access your data. The Data Environment designer provides a dynamic programmatic interface to the data access objects in your project. In addition, the Data Environment provides advanced data shaping services — the ability to create hierarchies of related data, aggregates, and automatic groupings, all without code.</p>
<p>
The new ADO Data control is similar to the intrinsic data control and Remote Data control, except that it uses ADO to access data. You can now use an ADO Recordset as a data source for your controls and objects in Visual Basic.</p>
<p>
In Visual Basic you can now create your own data sources either as user controls or classes, to encapsulate business rules or proprietary data structures. The class module now features the DataSourceBehavior property and the GetDataMember event, which allow you to configure a class as a data source.</p>
<h3>Dynamic Data Binding</h3>
<p>
The ability to dynamically bind a data source to a data consumer is now possible in Visual Basic. At run time, you can now set the DataSource property of a data consumer (such as the DataGrid control) to a data source (such as the ADO Data control). This capability, unavailable in previous versions of Visual Basic, allows you to create applications, which can access a multitude of data sources.</p>
<h3>Presenting Data to the End User</h3>
<p>
Visual Basic offers a variety of rich ways to present data to your end users. ADO/OLE&nbsp;DB-based versions of all the data bound controls are included in Visual Basic:
<ul type=disc>
<li>
The DataList and DataCombo controls are the ADO/OLE&nbsp;DB equivalents of DBList and DBCombo controls.<br><br></li>
<li>
The DataGrid is the successor to DBGrid.<br><br></li>
<li>
The Chart control is now data bound.<br><br></li>
<li>
A new version of the FlexGrid control, called the Hierarchical FlexGrid, supports the hierarchical abilities of the Data Environment.<br><br></li>
<li>
The new DataRepeater control functions as a scrolling container of data bound user controls where each control views a single record.</li>
</ul>
<p>
The Data Report is a new ActiveX designer that creates reports from any data source, including the Data Environment. With the Data Report designer, formatted reports can be viewed online, printed, or exported to text or HTML pages.</p>
<h3>Data Formatting and Data Validation</h3>
<p>
The new DataFormat object allows you to display data with custom formatting, but write it back to the database in the native format. For example, you can now display dates in the format appropriate to a country, while the actual data is stored in a date format. Data is formatted coming out of the source, and unformatted going back in. You can also do custom formatting and perform additional checks using the Format and Unformat events.</p>
<p>
Data validation is also enhanced using the CausesValidation property with the Validate event. By setting the CausesValidation property to True, the Validate event for the previous control in the tab order will occur. Thus, by programming the Validate event, you can prevent a control from losing focus until the information it contains has been validated.</p>
<h3>Language Features</h3>
<p>
New data-related enhancements to the Visual Basic language include the ability to pass User-defined Types (UDTs) and arrays across processes. You can now define a UDT and pass it as a parameter to another process, such as an ActiveX EXE or DLL.</p>
<h3>DHTML and Data Access</h3>
<p>
Using Visual Basic, you can create complete web applications for data access. All of the data tools and technologies can also be used in DHTML pages, and on web server (IIS) applications.</p>
<h3>Other Enterprise features</h3>
<p>
For information on data access programming in the enterprise, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconDataAccessStrategies">
</object><a href=JavaScript:alink_2.Click()>Data Access Strategies</a> in <i>Developing for the Enterprise</i>.</p>
</BODY>
</HTML>
