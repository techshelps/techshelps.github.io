<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Connection Objects</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconconnectionobjects"></a>Connection Objects</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdobjConnection;vbconConnectionObjects_C">
</object></p>
<p>
To access data using your Data Environment, you must create a Connection object. Therefore, every Data Environment should include at least one Connection object. A Connection object represents a connection to a remote database that is used as a data source.</p>
<p>
Upon adding a Data Environment to your Visual Basic project, the Data Environment designer automatically includes a new connection, called Connection1. At design time, the Data Environment opens the connection and obtains metadata from the connection, including database object names, table structures, and procedure parameters.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If <b>Show properties immediately after object creation </b>is selected in the <b>Options </b>dialog box, the <b>Data Link Properties</b> dialog box will appear when you add a Data Environment to your project. This option is not selected by default.</p>
<h2>Creating a Connection Object</h2>
<p>
The <b>Add Connection</b> function is available at all times and is independent of the existence of other objects.</p>
<p class=label>
<b>To create a database connection</b>
<ul type=disc>
<li>
Click <b>Add Connection</b> on the Data Environment designer toolbar.<p class=tl>
-or–</P><p class=tl>
Right-click your Data Environment designer and select <b>Add Connection</b> from the shortcut menu.</P><p class=tl>
Once you have added a Connection, the Data Environment is updated to show the new Connection object. The default name for this object is "Connection," followed by a number, such as Connection1.</P><p class=tl>
Use the following procedure to specify Connection object properties.</P></li>
</ul>
<p class=label>
<b>To set the Connection Name and Data Source</b>
<ol>
<li>
In the Visual Basic <b>Properties</b> window, change the default <b>Name</b> to a more meaningful name for your data source database. For example, you may wish to change Connection1 to "Northwind" if the data source is the Northwind database.<br><br></li>
<li>
Right-click the Connection object and choose <b>Properties</b> to access the <b>Data Link Properties</b> dialog box.<br><br></li>
<li>
From the <b>Data Link Properties</b> dialog box, specify the connection information on the <b>Provider</b> and <b>Connection</b> tabs. This is typically a database that contains data or stored procedures. You may select only one source for each Connection object.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Regardless of the selected data source type, the Data Environment accesses all data via ADO and OLE&nbsp;DB interfaces.</p></li>
<li>
Click <b>OK</b> to apply the properties and close the dialog box.</li>
</ol>
<h2>Setting Logon Information</h2>
<p>
Logon information only needs to be supplied if the database being accessed via the Connection object requires authentication information. You can specify a different set of logon information to be used at design time and run time. For example, you might want to develop your application using a system administrator user identification and password, but supply a general guest user identification when the application is run.</p>
<p class=indent>
<b>Note</b>&nbsp;&nbsp;&nbsp;Any logon information specified on the <b>Data Link Properties </b>dialog box is overridden by logon information specified on the Visual Basic <b>Properties </b>window.</p>
<p class=label>
<b>To specify logon information</b>
<ol>
<li>
On the Visual Basic <b>Properties</b> window, specify the user identification and password to be used at <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defdesigntime">
</object><a href=JavaScript:alink_2.Click()>design time</a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defruntime">
</object><a href=JavaScript:alink_3.Click()>run time</a>, if necessary. You can also specify the prompt behavior.<br><br></li>
<li>
Set <b>DesignSaveAuthentication</b> to <b>True</b> if you want the specified information to persist for design time. This information is not written into the built executable file or dynamic-link library (DLL). If this option is <b>False</b>, any information in <b>DesignUserName </b>and <b>DesignPassword </b>is lost once you close and re-open the project.<br><br></li>
<li>
Set <b>RunSaveAuthentication</b> to <b>True</b> if you want the specified authentication used at run time. The authentication information is stored in the properties of the class and persists in the built executable file or DLL. If this option is <b>False</b>, any information in <b>RunUserName </b>and <b>RunPassword </b>is lost once you close and re-open the project.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Since the password is not encrypted, for maximum security you should not specify your password to persist for run time or design time.</p></li>
</ol>
<h2>Setting Miscellaneous Connection Information</h2>
<p>
The miscellaneous connection information consists of advanced options that change how the database is accessed.</p>
<p class=label>
<b>To specify miscellaneous information</b>
<ol>
<li>
On the Visual Basic <b>Properties</b> window, specify the following:<ul type=disc>
<li>
The <b>CursorLocation </b>to be used for the connection. For information on cursors, see <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="veconChoosingManagingCursors">
</object><a href=JavaScript:alink_4.Click()>Choosing and Managing Cursors</a>.<br><br></li>
<li>
Additional parameters for the connection string in <b>ConnectionSource</b>. Any string placed here is appended to the ConnectionString<b> </b>property when connecting to the data source. For example, Database=pubs.</li>
</ul>
</li>
<li>
Right-click the Connection object and choose <b>Properties</b> to access the <b>Data Link Properties</b> dialog box.<br><br></li>
<li>
On the <b>Advanced</b> and <b>All </b>tabs, you can:<ul type=disc>
<li>
Specify the number of seconds for the connection and command timeouts.<br><br></li>
<li>
Indicate permissions and network settings.</li>
</ul>
</li>
<li>
Click <b>OK</b> to apply the properties and close the <b>Data Link Properties</b> dialog box.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;A Connection object is not opened until information is needed from the connection, such as a list of tables. When a Connection object is selected in the Data Environment outline view, the status bar text can be used to determine if the connection is currently established (open).</p></li>
</ol>
<h2>Dragging From a Data View to Your Data Environment</h2>
<p>
You can automatically create Connection objects by dragging a connection from the Data View window to your Data Environment designer. This is an easy and efficient way to create Connection objects that already exist in your Data View.</p>
</BODY>
</HTML>
