<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Format Objects Tutorial</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconformatobjectstutorial"></a>Format Objects Tutorial</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vakeyWithEvents;vbconFormatObjectsTutorialC">
</object></p>
<p>
The following procedure gives you a brief overview of using format objects with bound controls attached to the ADO Data Control. The example uses the Nwind.mdb sample database provided with Visual Basic.</p>
<p>
Note that although this example uses the ADO Data Control, format objects can be used with any data source.</p>
<p class=label>
<b>Using the ADO Data Control with Format Objects</b>
<ol>
<li>
Create an OLEDB Data Source for the Northwind database, named "Northwind".<p class=tl>
If a data source has not been created, follow the steps in <b>Creating the Northwind OLEDB Data Source</b>.</P></li>
<li>
From the Project menu, set references to the Microsoft Data Formatting Object Library and the Microsoft Data Binding Collection.<br><br></li>
<li>
On the Project menu click Components, and check the ADO Data Control.<br><br></li>
<li>
Add the ADO Data control and three TextBox controls to a form.<br><br></li>
<li>
Set property values as shown in the following table.<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Object</b></td>
<td class=label width=33%><b>Property</b></td>
<td class=label width=34%><b>Setting</b></td>
</tr>
<tr valign=top>
<td width=33%>ADO control</td>
<td width=33%>ConnectionString</td>
<td width=34%>northwind.mdl</td>
</tr>
<tr valign=top>
<td width=33%>ADO control</td>
<td width=33%>RecordSource</td>
<td width=34%>select * from Employees</td>
</tr>
<tr valign=top>
<td width=33%>Text1 control</td>
<td width=33%>DataSource</td>
<td width=34%>ADODC1</td>
</tr>
<tr valign=top>
<td width=33%>Text1 control</td>
<td width=33%>DataField</td>
<td width=34%>LastName</td>
</tr>
<tr valign=top>
<td width=33%>Text2 control</td>
<td width=33%>DataSource</td>
<td width=34%>ADODC1</td>
</tr>
<tr valign=top>
<td width=33%>Text2 control</td>
<td width=33%>DataField</td>
<td width=34%>HireDate</td>
</tr>
<tr valign=top>
<td width=33%>Text3 control</td>
<td width=33%>DataSource</td>
<td width=34%>ADODC1</td>
</tr>
<tr valign=top>
<td width=33%>Text3 control</td>
<td width=33%>DataField</td>
<td width=34%>Extension</td>
</tr>
</table><br>
</li>
<li>
Add the following declarations to the form.<pre><code>' Binds textboxes to the ADO control.
Dim bc As New BindingCollection

' We'll add code to the Format event on this object.
Dim WithEvents f1 as StdDataFormat
Dim WithEvents f2 As StdDataFormat
</code></pre>
<p class=tl>
Declaring f2 with the <b>WithEvents</b> statement exposes the object's events. Step 8 shows code using the Format event to work on data as it is passed back and forth between the database and bound object.</P></li>
<li>
Add the following code to the form's Load event.<pre><code>' Connect the BindingCollection object to the datasource.
Set bc.DataSource = ADODC1

'set a long date format string
Set f1 = New StdDataFormat
f1.Type = fmtCustom
f1.Format = "long date"
' Use the BindingCollection object to bind the 2nd text box.
bc.Add Text2, "text", "hiredate", f1

'set a currency format string
Set f2 = New StdDataFormat
f2.Type = fmtCustom
f2.Format = "$0.00"
' Use the BindingCollection object to bind the 3rd text box.
Set bc.DataSource = ADODC1
bc.Add Text3, "text", "extension", f2
</code></pre>
</li>
<li>
Add the following code to the f2 object's Format event.<pre><code>If DataValue.Value &lt; 3000 Then
Text3.ForeColor = vbRed
Else
Text3.ForeColor = vbBlack
End If
</code></pre>
</li>
<li>
Run the project and experiment with the ADO Data control.</li>
</ol>
</BODY>
</HTML>
