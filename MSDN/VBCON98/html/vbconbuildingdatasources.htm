<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Building Data Sources</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconbuildingdatasources"></a>Creating Data Sources</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconBuildingDataSources_C">
</object></p>
<p>
A data source is an object that binds other objects to data from an external source. The foundation for a data source object is a data-aware class module, which is essentially a class module that exposes interfaces to an external source of data. Data-aware classes are covered in depth in "Programming with Objects" in the <i>Programmer's Guide</i>.</p>
<p>
Data-aware classes can also be used as the basis for ActiveX components. One common example of a data-aware component is the ADO Data control, which provides a visual interface for binding controls to a database through ADO. Although you could create a data-aware class that does the same thing as the ADO Data control, sharing that class between multiple applications or multiple programmers could prove difficult.</p>
<p>
A much better approach would be to create an ActiveX component that duplicates or expands on the functionality of the ADO Data control. As with any ActiveX component, this could take any one of several forms: an ActiveX control, an ActiveX DLL, or an ActiveX EXE. In any case, your ActiveX data source can be easily shared, simplifying access to data regardless of where that data resides: in a local database like Access, in a remote database such as SQL Server, or even in a private OLE DB data store.</p>
<p>
The series of step-by-step procedures in this chapter will demonstrate two different approaches to creating data source components. First we'll build an ActiveX data source control, MyDataControl, which emulates the ADO Data control. Next we'll bind the MyDataControl to other controls using both simple and complex binding. Finally, we'll create an ActiveX DLL, MyData, that demonstrates binding to a private data store in an OLE DB simple provider.</p>
<p>
The procedures for creating the data source components build on each other. The sequence in which you perform the procedures is therefore important. You should already be familiar with the basics of building ActiveX components before proceeding with this example.</p>
<h2>Topics</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbconcreatingmydatacontrolproject.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingmydatacontrolproject.htm">Creating the MyDataControl Project</a><p>
Sets up a new project for an ActiveX data source control that duplicates the ADO Data control.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbobjdrawingmydatacontrol.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbobjdrawingmydatacontrol.htm">Drawing the MyData Control</a><p>
Creates the user interface for MyData data source control.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconaddingaxdatasourceproject.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconaddingaxdatasourceproject.htm">Adding the AXDataSource Project</a><p>
Creates a test project and a project group for the MyData data source control.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconaddingdatahandlingcode.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconaddingdatahandlingcode.htm">Adding Data Handling Code</a><p>
Illustrates the data handling procedures required for the MyData data source control.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconrunningmydatacontrolproject.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconrunningmydatacontrolproject.htm">Running the MyDataControl Project</a><p>
Demonstrates the functionality of the MyData data source control using both ODBC and OLE DB interfaces.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingmydatacomponentproject.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingmydatacomponentproject.htm">Creating the MyData Component Project</a><p>
Sets up a project for an ActiveX DLL data source component.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingmyospobjectclass.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingmyospobjectclass.htm">Creating the MyOSPObject Class</a><p>
Creates a class that implements the OLE DB Simple Provider interfaces.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingmydatasourceclass.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingmydatasourceclass.htm">Creating the MyDataSource Class</a><p>
Creates a class that uses the MyOSPObject class to provide data.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbcontestingmydatacomponent.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbcontestingmydatacomponent.htm">Testing the MyData Component</a><p>
Demonstrates the use of the MyDataComponent ActiveX DLL.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbcondatasourcesrecap.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbcondatasourcesrecap.htm">Data Sources Recap</a><p>
Summarizes the concepts involved in creating ActiveX data source components.</p>
</td>
</tr>
</table><br>
<p>
These procedures will be easier to follow if you set up your Visual Basic development environment to show the necessary windows.</p>
<p class=label>
<b>Before You Begin</b>
<ol>
<li>
On the <b>View</b> menu, click <b>Toolbox</b> to open the Toolbox.<br><br></li>
<li>
On the <b>View</b> menu, click <b>Project Explorer</b> to open the <b>Project Explorer</b> window. The <b>Project Explorer</b> window will be used extensively to switch between project files.<br><br></li>
<li>
If the <b>Project Explorer</b> window is in Folder view, click the <b>Toggle Folders</b> button on the <b>Project Explorer</b> window toolbar to turn the folders off.<br><br></li>
<li>
On the <b>View</b> menu, click <b>Properties</b> <b>Window</b> to open the <b>Properties</b> window.<br><br></li>
<li>
On the <b>View</b> menu, click <b>Immediate</b> <b>Window</b> to open the <b>Immediate</b> window. You will need this window open at design time, in order to demonstrate the control's code running at design time.<br><br></li>
<li>
On the <b>Tools </b>menu, click <b>Options </b>to open the <b>Options</b> dialog box.<p class=tl>
Select the <b>Editor</b> tab, and make sure the <b>Require Variable Declaration</b> box is selected. This makes it much easier to catch typing errors.</P><p class=tl>
Select the <b>Environment </b>tab. Make sure <b>Prompt To Save Changes</b> is checked, then click <b>OK</b>. This will make it easy to save the changes to the project as you go along.</P></li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Creating Data-Aware Classes" in "Programming with Objects" in the <i>Programmer's Guide.</i></p>
<h2>Sample application</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><img src="sampapp.gif" border=0></td>
<td width=94%><b>Axdata.vbg</b><p>
Provides a prebuilt example of the data source project discussed in this chapter. In addition, the bitmaps and text file needed for the sample are located in the same directory as the Axdata.vbg sample, which is listed in the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_2.Click()>Samples</a> directory.</p>
</td>
</tr>
</table>
</BODY>
</HTML>
