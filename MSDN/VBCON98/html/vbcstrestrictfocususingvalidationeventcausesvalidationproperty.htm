<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Validating Control Data By Restricting Focus</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcstrestrictfocususingvalidationeventcausesvalidationproperty"></a>Validating Control Data by Restricting Focus</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbcstRestrictFocusUsingValidationEventCausesValidationPropertyC">
</object></p>
<p>
The Validate event and CausesValidation property are used in tandem to verify the input to a control before allowing the user to shift focus away from that control. For example, imagine an application with several text boxes and a Help button. When each text box receives the focus, you want to prevent the user from shifting the focus until the text box's particular validation criteria are met; however, you also want to allow users to click the Help button at any time. To do this, set the validation criteria in the Validate event and set the CausesValidation<b> </b>property of the Help button to False. If the property is set to True (the default setting), the Validate event will occur on the first control. If the property is set to False, the Validate event on the first control will be preempted from occurring.</p>
<p>
The Validate event is more suited to validating data entry than the LostFocus event because the LostFocus event (by definition) occurs after the focus has shifted. In contrast, by using the Validate event you can prevent the focus from ever shifting to another control until all validation rules have been met.</p>
<p class=label>
<b>Possible Uses</b>
<ul type=disc>
<li>
A data entry application needs to perform more sophisticated data entry validation than can be provided by the Masked Edit control, or the validation occurs in a business rule.<br><br></li>
<li>
A form needs to prevent users from moving off a control using the TAB key or an accelerator until data has been entered in a field.<br><br></li>
<li>
An ActiveX document running inside Internet Explorer needs a way for the user to finish an operation on the form before the script moves the focus programmatically.</li>
</ul>
<h3>Control the Focus in the Validate Event</h3>
<p>
The Validate event includes a <i>keepfocus</i> argument. When the argument is set to True, the control will retain the focus. This effectively prevents the user from clicking any other control.</p>
</BODY>
</HTML>
