<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Standard Webclass Events</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconstandardwebclassevents"></a>Standard Webclass Events</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconStandardWebclassEvents_C">
</object></p>
<p>
By default, each template and webitem you add to a webclass has a set of standard events that automatically appear in the Code Editor window. There are three standard events for any webitem:
<ul type=disc>
<li>
Respond — Sets the default action a webitem takes when activated by a user request.<br><br></li>
<li>
ProcessTag — Processes specific tags in a template file and replaces their content with data you specify. The tags to process are identified by the TagPrefix property for the webitem.<br><br></li>
<li>
UserEvent — Processes webclass events created at run time.</li>
</ul>
<p>
The most commonly used of these is the Respond event. This is the default event for templates and webitems. The webclass fires the Respond event in two situations:&nbsp; when the webitem is first activated, or when it receives a request from the browser that does not correspond to a template event. The webitem can be activated from the client or the server. A client-side activation occurs when a request contains a reference to the next webitem that should be called. A server-side activation occurs when the NextItem property is set. In either scenario, the Respond event processes the request and sends a response to the browser.</p>
<p>
For example, if a user accesses a customer inquiry application and submits a query about whether an order has been shipped, the Respond event might retrieve the request data, process the request by reading a database and retrieving the order detail, then write a reply back to the client that contains the retrieved information.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Unlike template events and custom webitem events, the Respond event does not appear in the designer's Detail panel. You access it from the code window's Procedure drop-down list along with other standard events that are not exposed through an external file or from a user's action in the designer.</p>
<p>
Events in an IIS application are fired by actions that occur in the browser. These actions might be initiated by the user selecting an element that contains a URL, or they might be caused by the browser loading a page. For example, when the browser loads a page containing an IMG tag, it fires the event corresponding to that tag when it attempts to resolve the URL for the image and display it. Alternately, a user can select an item such as a hyperlink and manually fire an event. In both cases, the event is fired because the browser accesses a URL that calls the server.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Transitioning Between WebItems" for more information on the NextItem property. See the "Respond Event," "ProcessTag Event," "TagPrefix Property," and "UserEvent Event" topics in the <i>Language Reference</i>. For information on using the ProcessTag event to process text replacements, see "Performing Text Replacements in a Webclass." For information on using the UserEvent event to process dynamically created events, see "Defining Webclass Events at Run-Time".</p>
</BODY>
</HTML>
