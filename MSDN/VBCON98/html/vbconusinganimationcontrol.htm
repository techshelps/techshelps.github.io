<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Animation Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusinganimationcontrol"></a>Using the Animation Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingAnimationControlC">
</object></p>
<p>
The Animation control displays silent Audio Video Interleaved (AVI) clips. An AVI clip is a series of bitmap frames like a movie.</p>
<p>
One example is the piece of paper that "flies" between folders when copying files in the Windows 95 system:</p>
<p>
<img src="avtct068.gif" border=0></p>
<p>
Although AVI clips can have sound, such clips cannot be used with the Animation control, and an error will occur if you try to load such a file. Only silent AVI clips can be used. To play .avi files with sound, use the Multimedia (MCI) control. See "Using the Multimedia Control" later in this chapter for more information about the MCI control.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;A variety of soundless .avi files can be found in the \Graphics\AVI directory of the Visual Basic CD-ROM.</p>
<p>
At run time, the Animation control does not have a visible frame.</p>
<p>
The Animation control maintains a separate thread of execution while it is playing. Therefore, your application will not be blocked, and can continue to execute within its process.</p>
<h2>Possible Uses</h2>
<ul type=disc>
<li>
To create dialog boxes that inform the user of the length and nature of an operation.<br><br></li>
<li>
To play silent instructional video clips about your application.<br><br></li>
<li>
To allow users to play files dropped onto the control.</li>
</ul>
<h2>Basic Operation: Open, Play, Stop, and Close Methods</h2>
<p>
When using the control, you open an .avi file using the Open method, play it using the Play method, and stop it with the Stop method. After a video has played, use the Close method to close the file. You do not need to close the file before opening a new one.</p>
<p>
The following code uses two CommandButton controls, cmdPlay and cmdStop, and a CommonDialog control named dlgOpen. Set the caption of cmdPlay to "Open and Play." The caption of the CommandButton control cmdStop is set to "Stop."</p>
<pre><code>Private Sub cmdPlay_Click()
   ' Configure a CommonDialog control to allow the
   ' user to find .avi files to play. The CommonDialog
   ' control is named "dlgOpen." The Animation control
   ' is named "anmAVI."
   dlgOpen.Filter = "avi files (*.avi)|*.avi"
   dlgOpen.ShowOpen
   anmAvi.Open dlgOpen.FileName
   anmAVI.Play
End Sub
</code></pre>
<p>
This code stops the video playing:</p>
<pre><code>Private Sub cmdStop_Click()
   anmAVI.Stop
End Sub
</code></pre>
<h3>Play Method Arguments: Repeat, Start, and Stop</h3>
<p>
The Play method has three arguments — <i>repeat</i>, <i>start</i>, and <i>stop —</i> which determine how many times a file is played, at which frame to begin playing, and where to stop the file.</p>
<p>
If the repeat argument is not supplied, the file will play continuously. For example, the following code will play a file continuously until the user clicks the cmdStop button:</p>
<pre><code>Private Sub cmdPlay_Click()
   dlgOpen.Filter = "avi files (*.avi)|*.avi"
   dlgOpen.ShowOpen
   anmAVI.Open dlgOpen.FileName
   ' Play the file indefinitely.
   anmAVI.Play
End Sub

Private Sub cmdStop_Click()
   anmAVI.Stop
End Sub
</code></pre>
<p>
The following code plays the file ten times, from the sixth to sixteenth frames (the first frame is frame 0):</p>
<pre><code>anmAVI.Play 10, 5, 15
</code></pre>
<h3>Play Files Automatically Using the AutoPlay Property</h3>
<p>
If the AutoPlay property is set to True, the control will begin playing a file as soon as it is loaded. Conversely, to stop a file from playing, set the AutoPlay property to False, as shown in the following code:</p>
<pre><code>Private Sub cmdPlay_Click()
   ' Setting the AutoPlay property to True plays
   ' the file as soon as it is loaded. Thus there's
   ' no need for a Play method.
   dlgOpen.Filter = "avi files (*.avi)|*.avi"
   dlgOpen.ShowOpen
   anmAvi.AutoPlay = True
   anmAVI.File = dlgOpen.FileName
End Sub

Private Sub cmdStop_Click()
   ' Set AutoPlay to False to stop playing.
   anmAVI.AutoPlay = False
End Sub
</code></pre>
<h3>Center the Play Area Using the Center Property</h3>
<p>
You can specify whether or not to center the video in the control by using the Center property. When the Center property is set to False, the control automatically sizes itself at run time to the size of the video. At design time, the left and top edges of the control define the area where the video will be displayed as seen:</p>
<p>
<img src="avtct069.gif" border=0></p>
<p>
When the Center property is set to True, the control does not resize itself. Instead, the video will be displayed in the center of the area defined by the control, as seen:</p>
<p>
<img src="avtct070.gif" border=0></p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the area defined by the control at design time is smaller than the video, the edges of the video will be clipped.</p>
<p class=indent>
<B><b>Distribution Note</b></B>&nbsp;&nbsp;&nbsp;The <b>Animation</b> control is part of a group of ActiveX controls that are found in the MSCOMCT2.OCX file. To use the <b>Animation</b> control in your application, you must add the MSCOMCT2.OCX file to the project. When distributing your application, install the MSCOMCT2.OCX file in the user’s Microsoft Windows System or System 32 directory. For more information on how to add an ActiveX control to a project, see the <i>Programmer’s Guide</i>.</p>
</BODY>
</HTML>
