<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing Reports with the Microsoft Data Report Designer</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingmicrosoftdatareportdesigner"></a>Writing Reports with the Microsoft Data Report Designer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingMicrosoftDataReportDesignerC">
</object></p>
<p>
The Microsoft Data Report designer is a versatile data report generator that features the ability to created banded hierarchical reports. Used in conjunction with a data source such as the Data Environment designer, you can create reports from several different relational tables. In addition to creating printable reports, you can also export the report to HTML or text files. </p>
<h2>Possible Uses</h2>
<ul type=disc>
<li>
Automatically create reports that are exported in HTML format for instant distribution on the Internet.<br><br></li>
<li>
Create reports that show the sums of transactions occurring on a daily basis.</li>
</ul>
<h2>Data Report Designer Features</h2>
<p>
The Data Report designer has several features:
<ol>
<li>
<b>Drag-and-Drop Functionality for Fields</b>—Drag fields from the Microsoft Data Environment designer to the Data Report designer. When you do this, Visual Basic automatically creates a text box control on the data report and sets the DataMember and DataField properties of the dropped field. You can also drag a Command object from the Data Environment designer to the Data Report designer. In that case, for each of the fields contained by the Command object, a text box control will be created on the data report; the DataMember and DataField property for each text box will be set to the appropriate values.<br><br></li>
<li>
<b>Toolbox Controls</b>—The Data Report designer features its own set of controls. When a Data Report designer is added to a project, the controls are automatically created on a new Toolbox tab named DataReport. Most of the controls are functionally identical to Visual Basic intrinsic controls, and include a Label, Shape, Image, TextBox, and Line control. The sixth control, the Function control, automatically generates one of four kinds of information: Sum, Average, Minimum, or Maximum. For more information about the Function control, see "Adding a Function Control to the Data Report."<br><br></li>
<li>
<b>Print Preview</b>—Preview the report by using the Show method. The data report is then generated and displayed in its own window.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;A printer must be installed on the computer to show the report in print preview mode.</p></li>
<li>
<b>Print Reports</b>—Print a report programmatically by calling the PrintReport method. When the data report is in preview mode, users can also print by clicking the printer icon on the toolbar.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;A printer must be installed on the computer to print a report.</p></li>
<li>
<b>File Export</b>—Export the data report information using the ExportReport method. Formats for export include HTML and text.<br><br></li>
<li>
<b>Export Templates</b>—You can create a collection of file templates to be used with the ExportReport method. This is useful for exporting reports in a variety of formats, each tailored to the report type.<br><br></li>
<li>
<b>Asynchonous Operation</b>—The DataReport object's PrintReport and ExportReport methods are asynchronous operations. Using the ProcessingTimeout event, you can monitor the state of these operations and cancel any that are taking too long.</li>
</ol>
<h2>Topics</h2>
<ul type=disc>
<li>
<a href="vbconpartsofdatareport.htm">Parts of the Data Report</a><br><br></li>
<li>
<a href="vbconcreatingsimpledatareport.htm">Creating a Simple Data Report</a><br><br></li>
<li>
<a href="vbconexportingdatareport.htm">Exporting a Data Report</a><br><br></li>
<li>
<a href="vbconprintingwithdatareport.htm">Printing a Data Report</a><br><br></li>
<li>
<a href="vbconhandlingdatareporterrors.htm">Data Report Events</a><br><br></li>
<li>
<a href="vbconunderstandingcontrolplacementondatareportdesigner.htm">Understanding Control Placement on the Data Report Designer</a></li>
</ul>
<h2>Sample Application</h2>
<p>
The sample application named prjNwind corresponds to the project built in the series of topics that begin with "Creating a Simple Data Report." If you have installed the Visual Basic sample applications, the file can be found in the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_2.Click()>Samples directory</a>. If you have not installed the sample applications, the file can be found on the MSDN™ CD that accompanies Visual Basic.</p>
</BODY>
</HTML>
