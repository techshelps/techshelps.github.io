<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Painting Graphics at Arbitrary Locations</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconpaintinggraphicsatarbitrarylocations"></a>Painting Graphics at Arbitrary Locations</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconPaintingGraphicsAtArbitraryLocationsC">
</object></p>
<p>
You can paint graphics at arbitrary locations on a form, on a picture box, and to the Printer object using the PaintPicture method. The syntax for the PaintPicture method is:</p>
<p>
[<i>object</i>.]<b>PaintPicture</b> <i>pic</i>, <i>destX</i>, <i>destY</i>[, <i>destWidth</i>[, <i>destHeight</i>[, <i>srcX _</i></p>
<p>
<i></i>[, <i>srcY</i>[, <i>srcWidth</i>[, <i>srcHeight</i>[, <i>Op</i>]]]]]]]</p>
<p>
The destination <i>object</i> is the form, picture box, or Printer object where the <i>pic</i> picture is rendered. If <i>object</i> is omitted, the current form is assumed. The <i>pic</i> argument must be a Picture object, as from the Picture property of a form or control. </p>
<p>
The <i>destX</i> and <i>destY</i> arguments are the horizontal and vertical locations where the picture will be rendered in the ScaleMode of <i>object</i>. The <i>destWidth</i> and <i>destHeight</i> arguments are optional and set the width and height with which the picture will be rendered in the destination <i>object</i>.</p>
<p>
The <i>srcX</i> and <i>srcY</i> arguments are optional and define the x-coordinate and y-coordinate of the upper-left corner of a clipping region within <i>pic</i>.</p>
<p>
The optional <i>Op</i> argument defines a raster operation (such as AND or XOR) that is performed on the picture as it is being painted on the destination <i>object</i>.</p>
<p>
The PaintPicture method can be used in place of the BitBlt Windows API function to perform a wide variety of bit operations while moving a rectangular block of graphics from one position to any other position.</p>
<p>
For example, you can use the PaintPicture method to create multiple copies of the same bitmap, and tile them on a form. Using this method is faster than moving picture controls on a form. The following code tiles 100 copies of a picture control and flips every picture horizontally by supplying a negative value for <i>destWidth.</i></p>
<pre><code>For i = 0 To 10
   For j = 0 To 10
      Form1.PaintPicture picF.Picture, j * _
         picF.Width, i * picF.Height, _
         picF.Width, -picF.Height
Next j, i
</code></pre>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "PaintPicture Method" in the <i>Language Reference</i>.</p>
</BODY>
</HTML>
