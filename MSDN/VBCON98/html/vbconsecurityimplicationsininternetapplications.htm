<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Security Implications in Internet Applications</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconsecurityimplicationsininternetapplications"></a>Security and Internet Applications</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconSecurityImplicationsInInternetApplicationsC">
</object></p>
<p>
This section briefly introduces security issues for your Visual Basic Internet applications.</p>
<h2>Security for DHTML Applications</h2>
<p>
DHTML applications are affected by security in the following ways:
<ul type=disc>
<li>
You may encounter zone security in Internet Explorer 4.<i>x</i> when you attempt to download your DHTML application to a client. For an explanation of security zones, see the Internet Client SDK, available on your MSDN CD.<br><br></li>
<li>
When you deploy your DHTML application, you must make sure the deployment files are properly signed and licensed. For more information, see the "Downloading ActiveX Components" chapter.</li>
</ul>
<h2>Security for IIS Applications</h2>
<p>
IIS applications face the same restrictions listed for DHTML applications in the section above. In addition, IIS applications have additional security options based on the fact that all IIS applications use an Active Server Page (ASP) as the entry point into the application. You can secure an ASP page in several ways:
<ul type=disc>
<li>
You can set permissions on the virtual directory on your Web server that contains the ASP page.<br><br></li>
<li>
You can set file access permissions, if you are using the Windows NT File system (NTFS) to determine which users can access the ASP page.<br><br></li>
<li>
You can use client certificates through two protocols known as Secure Sockets Layer (SSL) 3.0 or through Private Communications Technology (PCT). A <i>client certificate</i> is an encrypted number the browser sends to the server when it requests the ASP page.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "An Introduction to Webclasses" in "Developing IIS Applications" for more information on the relationship between IIS applications and ASP pages.</p>
</BODY>
</HTML>
