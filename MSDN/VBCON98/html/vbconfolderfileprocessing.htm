<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing Drives, Folders, and Files</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconfolderfileprocessing"></a>Processing Drives, Folders, and Files</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconFolderFileProcessingC">
</object></p>
<p>
When programming in Windows, it's very important to have the ability to add, move, change, create, or delete folders (directories) and files, and get information about and manipulate drives.</p>
<p>
Visual Basic allows you to process drives, folders, and files in two different ways: through traditional methods such as the Open statement, Write#, and so forth, and through a new set of tools, the File System Object (FSO) object model.</p>
<h2>Topics</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbconintroductiontofilesystemobjectmodel.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconintroductiontofilesystemobjectmodel.htm">Introduction to the File System Object Model</a><p>
An overview of the File System Object model.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconthefilesystemobjects.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconthefilesystemobjects.htm">The File System Objects</a><p>
An introduction to the File System objects.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconprogramminginfsoobjectmodel.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconprogramminginfsoobjectmodel.htm">Programming in the FSO Object Model</a><p>
A discussion of how to program in the FSO object model.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconmanipulatingdrivesfolders.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconmanipulatingdrivesfolders.htm">Working with Drives and Folders</a><p>
Methods for handling drives and folders.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconmanipulatingfiles.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconmanipulatingfiles.htm">Working with Files</a><p>
Methods for handling files.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconprocessingfiles.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconprocessingfiles.htm">Processing Files with Older File I/O Statements and Functions</a><p>
Using older file I/O statements to process files.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconusingsequentialfileaccess.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconusingsequentialfileaccess.htm">Using Sequential File Access</a><p>
How to create sequential files using older file I/O statements.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconusingrandomfileaccess.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconusingrandomfileaccess.htm">Using Random File Access</a><p>
How to create random files using older file I/O statements.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconusingbinaryfileaccess.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconusingbinaryfileaccess.htm">Using Binary File Access</a><p>
How to create binary files using older file I/O statements.</p>
</td>
</tr>
</table>
</BODY>
</HTML>
