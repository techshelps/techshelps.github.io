<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Controls</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconolecontrols"></a>ActiveX Controls</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconOLEControlsC">
</object></p>
<p>
ActiveX controls, formerly called OLE controls, are standard user interface elements that allow you to assemble forms and dialog boxes rapidly. ActiveX controls also bring the Internet alive, adding compelling new functionality to World Wide Web pages.</p>
<p>
Visual Basic has always featured a variety of controls that you could use in your applications. Now you can create your own controls, for use with Visual Basic and other development tools. With ActiveX controls, your investment in Visual Basic carries forward to the Internet.</p>
<p>
Designing an ActiveX control can be as easy as designing a Visual Basic form — you can use familiar Visual Basic graphics commands to paint your control, or create a control group using existing controls.</p>
<p>
ActiveX controls can be debugged in process, so you can step directly from the code for your test form into the code for your ActiveX control project.</p>
<p>
You can add data-binding to your Visual Basic ActiveX control, so that a user can easily bind the individual fields within the control to the appropriate fields in a database or other source of data. You can also use data-binding to create an ActiveX control that other controls can bind to, similar to the Visual Basic Data control.</p>
<p>
Visual Basic makes it easy to create polished ActiveX control packages by adding property pages, named constants, and events to your controls.</p>
<p>
You can compile your ActiveX controls directly into your application’s executable, or into .ocx files that can be used with development tools such as Visual Basic and Microsoft Visual C++, with end user products such as Microsoft Office, and on the Internet.</p>
<p>
"Creating an ActiveX Control" offers a quick step-by-step introduction to control creation — including the radical idea of running code at design time to debug your control’s design-time behavior.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;"Building ActiveX Controls" and "Creating Property Pages for ActiveX Controls" discuss control creation issues in depth. "General Principles of Component Design" and "Debugging, Testing, and Deploying Components" also contain many topics of interest to control designers.</p>
</BODY>
</HTML>
