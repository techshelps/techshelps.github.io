<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the ControlDemo Project</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconaddingnewusercontrolstoproject"></a>Creating the ControlDemo Project</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAddingNewUserControlsToProjectC">
</object></p>
<p>
ActiveX controls can be added to any project type. When a control is compiled as part of an .exe file, however, it cannot be shared with other applications. The ShapeLabel control will be compiled into an .ocx file in a later procedure in this chapter, so it can be shared. Thus the ControlDemo project will be created as an ActiveX control project.</p>
<p>
An ActiveX control project can contain as many controls as you like. When you build the project, the resulting .ocx file contains all the controls you’ve added.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This topic is part of a series that walks you through creating a sample ActiveX control. It begins with the topic <a href="vbconcreatingactivexcontrol.htm">Creating an ActiveX Control</a>.</p>
<p class=label>
<b>To create the ControlDemo project</b>
<ol>
<li>
On the <b>File</b> menu, click <b>New Project</b> to open the <b>New Project</b> dialog box. (This will close your current project or project group; you will be prompted to save any changes you have made.) Double-click the <b>ActiveX Control</b> icon to create a new project.<p class=tl>
Visual Basic automatically adds a UserControl designer to the project. The default name, UserControl1, appears as the caption of the designer.</P><p>
<img src="avtcm019.gif" border=0></P></li>
<li>
On the <b>Project</b> menu, click <b>Project1 Properties</b> to open the <b>Project Properties</b> dialog box. Select the <b>General</b> tab, fill out the information shown below, and then click <b>OK</b>.<p>
<img src="avtcm020.gif" border=0></P></li>
<li>
Double-click <b>UserControl1</b> in the <b>Project Explorer</b> window to bring the designer to the front.<br><br></li>
<li>
In the <b>Properties</b> window, double-click the <b>Name</b> property and change the name of the user control to ShapeLabel. The new name appears in the caption of the designer and in the <b>Project Explorer</b> window.<p class=tl>
The name you specify becomes the class name of your control, just as CommandButton is the class name for a command button. "Building ActiveX Controls" provides guidelines for choosing class names for controls.</P><p class=tl>
Notice that the <b>Properties</b> window looks much as it would for a Visual Basic form. Some properties you’re used to seeing are missing, however, and there are properties not found on ordinary Visual Basic forms. These properties are discussed in "Building ActiveX Controls."</P></li>
<li>
Within the control designer, resize the control using the drag handle at the lower right corner of the control, dragging up and left to make the control smaller.<p class=tl>
This sets the default size of the control. For convenience in later procedures, the ShapeLabel control should be of modest size.</P></li>
<li>
On the <b>File</b> menu, click <b>Save Project</b> to save the project files. Name them as shown in the following table. Visual Basic will provide the indicated extensions automatically.<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>File</b></td>
<td class=label width=40%><b>Filename</b></td>
<td class=label width=27%><b>Extension</b></td>
</tr>
<tr valign=top>
<td width=33%>User control</td>
<td width=40%>ControlDemo_ShapeLabel</td>
<td width=27%>.ctl</td>
</tr>
<tr valign=top>
<td width=33%>Project</td>
<td width=40%>ControlDemo</td>
<td width=27%>.vbp</td>
</tr>
</table><br>
<p class=tl>
Binary information in a control — such as bitmaps — will be saved in a binary file with the same name and an extension of .ctx.</P></li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Setting Up a New Control Project and Test Project" and "Debugging Controls," in "Building ActiveX Controls."</p>
<h3>Step by Step</h3>
<p>
This topic is part of a series that walks you through creating a sample ActiveX control.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=40%><b>To</b></td>
<td class=label width=60%><b>See</b></td>
</tr>
<tr valign=top>
<td width=40%>Go to the next step</td>
<td width=60%><a href="vbconaddingtestproject.htm">Adding the TestCtlDemo Project</a></td>
</tr>
<tr valign=top>
<td width=40%>Start from the beginning</td>
<td width=60%><a href="vbconcreatingactivexcontrol.htm">Creating an ActiveX Control</a></td>
</tr>
</table><br>
</BODY>
</HTML>
