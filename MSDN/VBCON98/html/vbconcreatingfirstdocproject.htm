<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the ActXDoc Project</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreatingfirstdocproject"></a>Creating the ActXDoc Project</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCreatingFirstDocProjectC">
</object></p>
<p>
The first step in authoring the ActXDoc project is to add a single UserDocument object to an ActiveX EXE project. A CommandButton and a TextBox control are then added to the form. Finally, using the Hyperlink object, you add code that navigates to another URL.</p>
<p>
The step-by-step procedures in this chapter build a document object and test it in Internet Explorer, which is included with Visual Basic.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This topic is part of a series that walks you through creating a sample ActiveX document. It begins with the topic <a href="vbconcreatingdocumentobject.htm">Creating an ActiveX Document</a>.</p>
<p class=label>
<b>To create an ActiveX document</b>
<ol>
<li>
On the <b>File</b> menu, click <b>New Project</b> to open the <b>New Project</b> dialog box. (This will close your current project or project group; you will be prompted to save any changes you have made.) Double-click the <b>ActiveX Document EXE</b> icon.<p class=tl>
Visual Basic automatically adds a UserDocument designer to the project. If the designer is not immediately visible, right-click over its default name, <b>UserDocument1</b>, in the <b>Project Explorer</b> window, then click <b>View Object</b>. When the designer appears, its default name is visible in the title bar.</P></li>
<li>
In the <b>Properties</b> window, double-click the <b>Name</b> property and change the name of UserDocument1 to FirstDoc. The new name appears in the title bar of the designer, and in the <b>Project Explorer</b> window.<br><br></li>
<li>
In the <b>Project Explorer</b> window, click the <b>Project1</b> icon. In the <b>Properties</b> window, double-click <b>Name</b>, and change the name of the project to ActXDoc. The title bar of the designer now reads "ActXDoc - FirstDoc (UserDocument)."<br><br></li>
<li>
In the <b>Project Explorer</b> window, double-click the <b>FirstDoc</b> icon to bring it to the front.<br><br></li>
<li>
On the Toolbox, double-click the <b>CommandButton</b> icon to put a CommandButton control on the designer.<br><br></li>
<li>
On the Toolbox, double-click the TextBox icon to put a Textbox control on the designer.<br><br></li>
<li>
Place the two controls as shown in the following illustration:<p>
<img src="avtcm071.gif" border=0></P></li>
<li>
Change the appropriate properties of the two controls according to the following table:<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Command1 property</b></td>
<td class=label width=50%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=50%>Name</td>
<td width=50%>cmdNavigateTo</td>
</tr>
<tr valign=top>
<td width=50%>Caption</td>
<td width=50%>Navigate To</td>
</tr>
</table><br>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Text1 property</b></td>
<td class=label width=50%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=50%>Name</td>
<td width=50%>txtURL</td>
</tr>
<tr valign=top>
<td width=50%>Text</td>
<td width=50%>http://www.microsoft.com</td>
</tr>
</table><br>
</li>
<li>
On the FirstDoc designer, double-click the Navigate To CommandButton control to add the following code to its Click event:<pre><code>Private Sub cmdNavigateTo_Click()
 &nbsp; ' Use the Hyperlink object method NavigateTo
 &nbsp; ' to go to the URL in txtURL.
 &nbsp; Hyperlink.NavigateTo txtURL.Text
End Sub
</code></pre>
<p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;When using the NavigateTo method, you must include the protocol portion of the URL. For example, by default, the above code will navigate to the value of the Text property of the txtURL TextBox control — "http://www.microsoft.com".</p></li>
<li>
On the <b>File</b> menu, click <b>Save Project</b> to save the project files. Name them as shown in the following table. Visual Basic will provide the indicated extensions automatically.<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>File</b></td>
<td class=label width=40%><b>File name</b></td>
<td class=label width=27%><b>Extension</b></td>
</tr>
<tr valign=top>
<td width=33%>User document</td>
<td width=40%>FirstDoc</td>
<td width=27%>.dob</td>
</tr>
<tr valign=top>
<td width=33%>Project</td>
<td width=40%>ActXDoc</td>
<td width=27%>.vbp</td>
</tr>
</table><br>
</li>
</ol>
<h3>Step by Step</h3>
<p>
This topic is part of a series that walks you through creating a sample ActiveX document.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=38%><b>To</b></td>
<td class=label width=62%><b>See</b></td>
</tr>
<tr valign=top>
<td width=38%>Go to the next step</td>
<td width=62%><a href="vbconcompilingdebugging.htm">Running and Debugging the ActXDoc Project</a></td>
</tr>
<tr valign=top>
<td width=38%>Start from the beginning</td>
<td width=62%><a href="vbconcreatingdocumentobject.htm">Creating an ActiveX Document</a></td>
</tr>
</table>
</BODY>
</HTML>
