<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Advantages of IIS Applications</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconadvantagesofiisapplications"></a>Advantages of IIS Applications</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAdvantagesOfIISApplicationsC">
</object></p>
<p>
Building a server-side Internet application in Visual Basic gives you several advantages over other methods of Internet development, including:
<ul type=disc>
<li>
Reduced cost of deployment per user. End users of an IIS application can run the application using only a browser; no special software needs to be installed on their computers for the application to work.<br><br></li>
<li>
A familiar development environment and model. You can leverage your knowledge of Visual Basic by using the Visual Basic programming environment and standard, compiled Visual Basic code. In addition, you can add classes, modules, or any&nbsp; Visual Basic ActiveX component to your project.<br><br></li>
<li>
Access to a broad audience. IIS applications work with a wide variety of browsers and operating systems, so you can easily reach a wide audience.<br><br></li>
<li>
An object model that gives you direct access to the resources of the Internet Information Server. The Active Server Pages framework provides an object model that allows you to directly manipulate the objects at the core of IIS. This allows you to retrieve information from a browser, send information to it, and perform&nbsp; complex operations on the contents of a Web page. For more information on the object model, see "The Object Model for IIS Applications."<br><br></li>
<li>
Reusable components. Once you have created a webclass, you can easily access it in another webclass. For more information, see "Navigating Between Webclasses."<br><br></li>
<li>
Separation of code and HTML. Unlike scripting, your code is not embedded in the HTML document, so you can separate the process of designing the application's user interface from writing, testing, and debugging its code.<br><br></li>
<li>
State management across multiple interactions with the client. You can manage state using objects or a database, or you can shuttle state between the client and the server. For more information, see "State Management in IIS Applications."<br><br></li>
<li>
Streamlined processing. You do not have to create the HTML template files your application sends to the browser, if you do not want to. In Visual Basic Internet application development, the process of designing your user interface is separated from the process of developing and coding your application. You can have a designer create the template files you want to use.</li>
</ul>
</BODY>
</HTML>
