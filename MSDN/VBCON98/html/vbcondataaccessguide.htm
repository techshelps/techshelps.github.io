<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Access Guide</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondataaccessguide"></a>Data Access Guide</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDataAccessGuideC">
</object></p>
<p>
Welcome to the Visual Basic<sup>®</sup> <i>Data Access Guide</i>. This documentation discusses data access and connects to information on related tools and technologies.</p>
<p>
This guide is divided into three parts. The first part covers tools and technology options. The second part presents tutorials that walk you through "scenarios" which employ the tools and technologies in real-world situations. The third part presents information on two older Visual Basic data access technologies, DAO and RDO.</p>
<h2>Chapters</h2>
<ul type=disc>
<li>
<a href="vbconaccessingdata.htm">Accessing Data Using Visual Basic</a><p class=tl>
Introduces the different data access programming models available for accessing data, and discusses system and design issues that enter into a choice of a data access strategy. The emphasis is on ActiveX Data Objects (ADO), the new Microsoft technology.</P></li>
<li>
<a href="vbcondataaccesstoolsinvisualbasic.htm">Data Access Tools in Visual Basic</a><p class=tl>
Introduces mechanisms (such as the Query Designer and Database Designer) and technologies (such as Format Objects) that make data access programming easier.</P></li>
<li>
<a href="vbconusingdataenvironmentdesigner.htm">About the Data Environment Designer</a><p class=tl>
This designer provides an extensive design-time interface that enables you to create and modify Data Environment objects.</P></li>
<li>
<a href="vbconusingmicrosoftdatareportdesigner.htm">Writing Reports with the Microsoft Data Report Designer</a><p class=tl>
This designer allows you to generate data reports from several different relational tables.</P></li>
<li>
<a href="vbconconnecttoisamdatabase.htm">Tutorial: Interacting with Data in a Microsoft Jet/Microsoft Access Database</a><p class=tl>
Demonstrates how to use a data environment to create a Command object based on a Microsoft Access query, bind Visual Basic controls to fields in the query's recordset, create a master/detail form, and create a data-bound report.</P></li>
<li>
<a href="vbconquerysqlserverdatabase.htm">Tutorial: Create a DHTML Application that Interacts with SQL Server Data</a><p class=tl>
Demonstrates how to create an application that adds a table to an SQL Server database; uses HTML pages to enter, view, and update data in the table; and uses an HTML page to view data returned by a stored procedure.</P></li>
<li>
<a href="vbcongetdatafromasciifile.htm">Tutorial: Interacting with Data in an ASCII Text File</a><p class=tl>
Demonstrates how to use a data-aware class and ADO to create a simple database application that interacts with data in a tab-delimited text file.</P></li>
<li>
<a href="vbconconvertingfromrdotoado.htm">Converting from RDO 2.0 to ADO 2.0</a><p class=tl>
Discusses the changes needed to upgrade an existing RDO-based project to Microsoft's new data access technology.</P></li>
<li>
<a href="vbconusingdataaccessobjectswithremotedatabases.htm">Using Data Access Objects with Remote Databases</a><p class=tl>
Data Access Objects (DAO) is an older database technology that can be used either with the standalone Microsoft Jet database engine, or with direct access to remote data sources through the new ODBCDirect option. This section discusses DAO functionality in both modes, emphasizing the special design considerations of large scale client/server applications.</P></li>
<li>
<a href="vbconusingremotedataobjectsremotedatacontrol.htm">Using Remote Data Objects and the RemoteData Control</a><p class=tl>
Remote Data Objects (RDO) is an older database technology that provides a direct Visual Basic interface to remote ODBC data sources, and the RemoteData Control (RDC) makes this functionality available in a simple user interface control. This chapter provides a thorough discussion of the RDO/RDC features and functionality in client/server applications.</P></li>
</ul>
</BODY>
</HTML>
