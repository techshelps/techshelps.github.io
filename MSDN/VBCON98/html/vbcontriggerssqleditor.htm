<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Triggers in the SQL Editor</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontriggerssqleditor"></a>Triggers in the SQL Editor</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTriggersSQLEditor_C">
</object></p>
<p>
A trigger is a special kind of stored procedure that goes into effect when you modify data in a specified table using one or more data modification operations: UPDATE, INSERT, or DELETE. Triggers can query other tables and can include complex SQL statements. They are primarily useful for enforcing complex business rules or requirements. For example, you could control whether to allow an order to be inserted based on a customer's current account status.</p>
<p>
Triggers are also useful for enforcing referential integrity, which preserves the defined relationships between tables when you add, update, or delete the rows in those tables. However, the best way to enforce referential integrity is to define primary key and foreign key constraints in the related tables. If you use database diagrams, you can create a relationship between tables to automatically create a foreign key constraint.</p>
<h3>Advantages of Using Triggers</h3>
<p>
Triggers are useful in these ways:
<ul type=disc>
<li>
Triggers are automatic: they are activated immediately after any modification to the table's data, such as a manual entry or an application action.<br><br></li>
<li>
Triggers can cascade changes through related tables in the database. For example, you can write a delete trigger on the <code>title_id</code> column of the <code>titles</code> table to cause a deletion of matching rows in other tables. The trigger uses the <code>title_id</code> column as a unique key to locate matching rows in the <code>titleauthor</code>, <code>sales</code>, and <code>roysched</code> tables.<br><br></li>
<li>
Triggers can enforce restrictions that are more complex than those defined with check constraints. Unlike check constraints, triggers can reference columns in other tables. For example, a trigger can roll back updates that attempt to apply a discount (stored in the <code>discounts</code> table) to books (stored in the <code>titles</code> table) with a price of less than $10.<p>
<img src="vb4xhp1.gif" border=0></P></li>
</ul>
<h3>Creating a Trigger</h3>
<p>
A trigger is a database object that you create by specifying:
<ul type=disc>
<li>
The current table.<br><br></li>
<li>
The data modification transactions that activate the trigger: adding new data (INSERT), updating existing data (UPDATE), or deleting existing data (DELETE).<br><br></li>
<li>
The actions that the trigger will take immediately following the transactions you specified.</li>
</ul>
<p>
You write triggers in Transact-SQL for Microsoft<sup>®</sup> SQL Server™ databases or PL/SQL for Oracle databases.</p>
<p class=label>
<b>To create a trigger</b>
<ol>
<li>
In Data View (available from the Standard toolbar or the <b>View</b> menu), expand the <b>Tables</b> folder.<br><br></li>
<li>
Right-click the name of the table that you want to create a trigger on. Choose <b>New Trigger</b> from the shortcut menu.<p class=tl>
A new trigger is created with the following SQL statements already defined for you:</P><pre><code>Create Trigger /*Trigger_Name*/
on /*Table_name*/
For /*Insert, Update, Delete*/
As
  print 'Trigger Fired'
</code></pre>
</li>
<li>
Modify the trigger text as follows:<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=14%><b>Line</b></td>
<td class=label width=41%><b>Replace</b></td>
<td class=label width=45%><b>With</b></td>
</tr>
<tr valign=top>
<td width=14%>1</td>
<td width=41%><code>/*Trigger_Name*/</code></td>
<td width=45%>The name you want to assign to the trigger</td>
</tr>
<tr valign=top>
<td width=14%>2</td>
<td width=41%><code>/*Table_name*/</code></td>
<td width=45%>The name of the table you want to attach the trigger to</td>
</tr>
<tr valign=top>
<td width=14%>3</td>
<td width=41%><code>/*Insert, Update, Delete*/</code></td>
<td width=45%>The type of transactions that will activate this trigger</td>
</tr>
</table><br>
<p class=tl>
For example, to create a trigger named <code>employee_insupd</code> for insert and update transactions on the <code>employee</code> table, you would change the first three lines of the trigger text to the following:</P><pre><code>Create Trigger employee_insupd
on employee
For Insert, Update
</code></pre>
</li>
<li>
Write the remaining trigger text in SQL.</li>
</ol>
<p>
For examples of triggers for Microsoft SQL Server databases, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_creating_triggers_tfund06">
</object><a href=JavaScript:alink_2.Click()>Creating Triggers</a> in the SQL Server documentation. For details about the Transact-SQL syntax of triggers, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_create_trigger_statement">
</object><a href=JavaScript:alink_3.Click()>CREATE TRIGGER Statement</a> in the SQL Server documentation.</p>
<h3>Opening a Trigger</h3>
<p>
You can open a trigger to view or edit the text of an existing trigger that is stored in your database. Triggers are scripted in Transact-SQL for Microsoft<sup>®</sup> SQL Server™ databases or PL/SQL for Oracle databases.</p>
<p class=label>
<b>To open a trigger</b>
<ol>
<li>
In Data View, expand the <b>Tables</b> folder.<br><br></li>
<li>
Expand the table whose trigger you want to open.<br><br></li>
<li>
Right-click the name of the trigger that you want to open and click <b>Design</b> on the shortcut menu.<p class=tl>
-or-</P><p class=tl>
Double-click the name of the trigger that you want to open.</P></li>
</ol>
<h3>Saving a Trigger</h3>
<p>
To add a new trigger to the database or to update an existing trigger that you have modified, you can save a trigger.</p>
<p class=label>
<b>To save a trigger</b>
<ol>
<li>
In the SQL Editor, choose <b>Save to Database </b>from the <b>File</b> menu.<br><br></li>
<li>
If you are updating an existing trigger, a message box prompts you to confirm the save action. Choose <b>Yes</b>.</li>
</ol>
<p>
A saved trigger appears in the <b>Tables</b> folder in <b>Data View</b> under the table that it's attached to.</p>
<h3>Deleting a Trigger</h3>
<p>
To disable the actions defined in the trigger that are automatically carried out on your database immediately following the specified transactions, you can delete a trigger.</p>
<p>
You might also want to delete any triggers that enforce referential integrity between related tables if you use database diagrams to design your database. Database diagrams use relationships instead of triggers for this purpose. Thus, if a trigger duplicates a relationship in a database diagram, you should delete either the trigger or the relationship.</p>
<p class=label>
<b>To delete a trigger</b>
<ol>
<li>
In <b>Data View</b>, expand the <b>Tables</b> folder.<br><br></li>
<li>
Expand the table whose trigger you want to delete.<br><br></li>
<li>
Right-click the trigger that you want to delete and choose <b>Delete</b> from the shortcut menu.<br><br></li>
<li>
A message prompts you to confirm the deletion. Choose <b>Yes</b>.<p class=tl>
The trigger is deleted from the database and Data View.</P></li>
</ol>
</BODY>
</HTML>
