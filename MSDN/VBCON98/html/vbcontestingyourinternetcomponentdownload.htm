<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Testing your Internet Component Download</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontestingyourinternetcomponentdownload"></a>Testing your Internet Component Download</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTestingYourInternetComponentDownloadC">
</object></p>
<p>
Testing your download file is more complex than testing a conventional setup program because the software does not install unless one of two things is true:
<ul type=disc>
<li>
The software does not already exist on the user's computer.<p class=tl>
-or-</P></li>
<li>
The software being downloaded is newer than any version that already exists on the user's machine.</li>
</ul>
<p>
Because of this, you must be careful when you test your download to ensure that you test both scenarios. As a developer, you should test your application on multiple machines with varying configurations. At a minimum, you should test the download on both your development machine and on a machine that does not have Visual Basic installed, and on multiple operating systems. In addition, you must check your safety levels.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you do not have a machine without Visual Basic installed, you can simulate one. See "Testing Component Download on Clean Machines" for instructions.</p>
<h2>Setting Safety Levels Prior to Testing</h2>
<p>
Before testing your download, be sure the safety level in Internet Explorer is set to Medium. If the safety level is set to High, the required files will not get downloaded. If you set the safety level to None, all of the missing components will be installed without warning.</p>
<p>
When the safety level is set to Medium, the following warnings occur:
<ul type=disc>
<li>
The browser warns you that an installation attempt is being made and prompts you to install the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefcabfile">
</object><a href=JavaScript:alink_2.Click()>.cab file</a>. If you choose to continue, the browser downloads and expands the .cab.<br><br></li>
<li>
The browser asks if you want to install any dependency files, such as Microsoft Automation or the Microsoft Visual Basic run-time library. The Authenticode screen displays information about these components. If you choose to continue, the browser installs these files.<br><br></li>
<li>
If you are downloading an ActiveX document in a version of Internet Explorer prior to 4.0, a script warning appears warning you that the Web page contains scripting code. This code is necessary in order to view your ActiveX document. If you choose to continue, the download proceeds. This warning does not appear in Internet Explorer 4.0 or later.</li>
</ul>
<p>
These warnings are all part of the Internet Explorer's safety mechanisms. If you do not receive all of these warnings, do not be alarmed. You may not receive a warning if a necessary component is already installed on the client machine or a security level option in Internet Explorer is set to something other than the defaults.</p>
<p class=label>
<b>To check the safety level in Internet Explorer 4.<i> x</i></b>
<ol>
<li>
Click <b>Internet</b> <b>Options</b> from the <b>View</b> menu.<br><br></li>
<li>
From the <b>Options</b> dialog box, click the <b>Security</b> tab.<br><br></li>
<li>
Click the appropriate safety level, then click <b>OK</b>.</li>
</ol>
<p class=label>
<b>To check the safety level in Internet Explorer 3.<i>x</i></b>
<ol>
<li>
Click <b>Options</b> from the <b>View</b> menu.<br><br></li>
<li>
From the <b>Options</b> dialog box, click the <b>Security</b> tab.<br><br></li>
<li>
Click the <b>Safety Levels</b> button.<br><br></li>
<li>
Click the appropriate safety level, then click <b>OK</b>.<br><br></li>
<li>
Click <b>OK</b> to return to the browser.</li>
</ol>
<h2>Testing Safety Levels</h2>
<p>
You can check safety levels by creating additional <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefcabfile">
</object><a href=JavaScript:alink_3.Click()>.cab files</a> and HTML pages for testing, as suggested in the following table:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=37%><b>To test pages with</b></td>
<td class=label width=63%><b>Create a page that hosts a control with</b></td>
</tr>
<tr valign=top>
<td width=37%>No initialization or scripting </td>
<td width=63%>No PARAM values or other variables set by the control.</td>
</tr>
<tr valign=top>
<td width=37%>Initialization only</td>
<td width=63%>PARAM values assigned to a control.</td>
</tr>
<tr valign=top>
<td width=37%>Scripting only </td>
<td width=63%>PARAM values set by VBScript only.</td>
</tr>
<tr valign=top>
<td width=37%>Scripting and initialization </td>
<td width=63%>Initial PARAM values set and then modified by VBScript.</td>
</tr>
</table><br>
</BODY>
</HTML>
