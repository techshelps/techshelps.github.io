<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File Packaging with the Package and Deployment Wizard</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconpackagingfileswithsetupwizard"></a>File Packaging with the Package and Deployment Wizard</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconPackagingFileswithSetupWizard_C;vbconUsingSetupWizardToPrepareSoftwareForDownloadC">
</object></p>
<p>
You can use the Visual Basic Package and Deployment Wizard to quickly and easily package your ActiveX components for Internet component download. The Package and Deployment Wizard packages your components into a file that the browser can recognize, and creates a Web page from which the user can download the page. You then deploy the resulting materials to a Web server where users can access it.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Before using the Package and Deployment Wizard to package your own ActiveX control for Internet component download, you should become familiar with several important concepts, including component safety and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefdigitalsignature">
</object><a href=JavaScript:alink_2.Click()>digital signatures</a>.</p>
<h2>Files Created by the Package and Deployment Wizard</h2>
<p>
The Package and Deployment Wizard creates two main sets of files when it packages code for Internet component download: distribution files and support files. Distribution files are located in the directory you specify when you begin the wizard. This directory typically contains the .cab file and any .htm files associated with it.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you make any changes to the project after you build the .cab file, such as modifying the list of files to include with the download or digitally signing the components, you may need to rebuild the .cab file.</p>
<p>
The wizard creates a directory for support files and places the input file (.inf file) for the .cab in this directory. In addition, the support files directory contains the Diamond Directives (.ddf) file, and other files needed for the download.</p>
<p>
The following table lists all the file types created by the wizard:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=17%><b>Extension</b></td>
<td class=label width=83%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=17%>.cab</td>
<td width=83%>Windows setup file or "cabinet" file that contains the .ocx file, the .inf file and other dependent files. You can digitally sign this file to prevent tampering.</td>
</tr>
<tr valign=top>
<td width=17%>.htm</td>
<td width=83%>HTML file used to display a Web page. This file contains a link to the .cab file and is used to launch the download process. </td>
</tr>
<tr valign=top>
<td width=17%>.ddf</td>
<td width=83%>Diamond Directives file. This is the project file for creating the .cab files.</td>
</tr>
<tr valign=top>
<td width=17%>.inf</td>
<td width=83%>Code download information file. This file includes information on how the control should be installed. It permits customization of installation.</td>
</tr>
<tr valign=top>
<td width=17%>.ocx</td>
<td width=83%>ActiveX control. You can digitally sign this file to prevent tampering.</td>
</tr>
<tr valign=top>
<td width=17%>.dll</td>
<td width=83%>ActiveX document or code component.</td>
</tr>
</table><br>
<h2>HTML Created by the Package and Deployment Wizard</h2>
<p>
The following fragment from an .htm file illustrates what the Package and Deployment Wizard produces in a typical Internet component download.</p>
<pre><code>&lt;HTML&gt;
&lt;!--   If any of the controls on this page require licensing, you must create a license package file.
   Run LPK_TOOL.EXE in the tools directory to create the required LPK file.

&lt;OBJECT CLASSID="clsid:5220cb21-c88d-11cf-b347-00aa00a28331"&gt;
   &lt;PARAM NAME="LPKPath" VALUE="LPKfilename.LPK"&gt;
&lt;/OBJECT&gt;
--&gt;
&lt;OBJECT
   classid="clsid:F651BF93-239B-11D0-8908-00A0C90395F4"
   id=ShapeLabel
   codebase="ControlDemo.CAB#version=1,0,0,1"&gt;
&lt;/OBJECT&gt;
&lt;/HTML&gt;
</code></pre>
<p>
Examine the second Object tag in the example above. This tag contains a reference to a control with the ID ShapeLabel. It has a class ID of F651BF93-239B-11D0-8908-00A0C90395F4. Each ActiveX control you create will have a different class ID. The class ID is used to create an instance of the control on the HTML page, similar to the process of placing a control on a Visual Basic form.</p>
<p>
Internet Explorer uses the class ID to check the registry to see if the control exists. When it does not exist or when the version number of the control is less than the version specified in the CODEBASE attribute, Internet Explorer downloads and installs the specified file.</p>
<p>
The important parts of the Object tag include:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=24%><b>Tag Attributes</b></td>
<td class=label width=76%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=24%>CLASSID</td>
<td width=76%>Class identifier, contains the class ID for the component.</td>
</tr>
<tr valign=top>
<td width=24%>ID</td>
<td width=76%>Name of the component. Used in scripting, this is equivalent to the Name property of a control on a Visual Basic form.</td>
</tr>
<tr valign=top>
<td width=24%>CODEBASE</td>
<td width=76%>Minimum version number of the control required and the location of an installation point.</td>
</tr>
</table><br>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Distributing your Applications" in the <i>Programmer's Guide</i> for instructions on using the Package and Deployment Wizard to package your controls. See http://www.w3c.org for more information about the OBJECT tag and its use. See http://www.microsoft.com/workshop/prog/cab/ for more information on .cab files.</p>
</BODY>
</HTML>
