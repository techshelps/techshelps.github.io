<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Databases in Webclasses</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingdatabasesinwebclasses"></a>Using Databases with Webclasses</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingDatabasesInWebclassesC">
</object></p>
<p>
You can use the ADO features of Visual Basic to retrieve and manipulate information stored in a database in response to user requests. Using webclasses in this way can help you create a powerful application. With ADO, you can open a connection to the database, build recordsets, retrieve data, and update information in the database.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you are working with a database, you must have the appropriate database program on your Web server. In addition, you should make use of ODBC connection pooling and ADO disconnected recordsets when accessing a database. For more information on these features, see the ActiveX Data Objects documentation in your MSDN library.</p>
<p>
There are multiple ways you might use databases in your applications. For example, you might create an application in which a series of images for a catalog are stored in a database. When users in your IIS application select a link from the catalog table of contents, the webclass can intercept that link, open a connection to the database, retrieve the image, and return it to the browser. Or you might use a search page to query a database for matching items and display the results in a generated table.</p>
<p>
You can use the Respond event or another event for the appropriate webitem to handle your database connection and processing. For example, the following code shows how you would open a connection to an ADO database, create a recordset, and retrieve information from it:</p>
<pre><code>Private Sub AuthorList_Respond()

   'Declare object variables for the database connection and recordset
   Dim cn As New ADODB.Connection
   Dim rs As New ADODB.Recordset

'Open the database connectioncn.ConnectionString = "DSN=csmith;UID=sa;PWD=sa;DATABASE=pubs"cn.Open
'Create the recordsetrs.Open "select * from customer", cn, adOpenStatic, adLockReadOnly

   'Write resulting information to a table, record by record
   With Response
      .Write "&lt;HTML&gt;"
      .Write "&lt;BODY&gt;"
      .Write "&lt;TABLE BORDER CELLSPACING=1 CELLPADDING=7&gt;"

      Do While rs.EOF = False
         .Write "&lt;TR&gt;&lt;TD&gt;"
         .Write rs("authorlast") &amp; ", " &amp; rs("authorfirst")
         .Write "&lt;/TD&gt;&lt;TD&gt;"
         .Write rs("title")
         .Write "&lt;/TD&gt;&lt;TD&gt;"
         .Write rs("publisher")
         .Write "&lt;/TD&gt;&lt;TR&gt;"
         rs.MoveNext
      Loop
      .Write "&lt;/TABLE&gt;"
      .Write "&lt;/BODY&gt;"
      .Write "&lt;/HTML&gt;"

   End With

   'Close the recordset and the database connection
   rs.Close
   cn.Close
  
End Sub
</code></pre>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on ADO processing, search for "ActiveX Data Objects" in the MSDN Library.</p>
</BODY>
</HTML>
