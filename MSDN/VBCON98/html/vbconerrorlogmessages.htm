<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Form Load Error Log Messages</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconerrorlogmessages"></a>Form Load Error Log Messages</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconErrorLogMessages_C">
</object></p>
<p>
The following error messages can appear in an error log file. Note that these error messages deal only with problems that can occur when Visual Basic loads the form description. They do not indicate any problems that can exist in event procedures, general procedures, or any other part of the Basic code.</p>
<p class=dt>
<b>Cannot load Menu menuname.</b></p>
<p class=indent>
This message appears if Visual Basic finds a menu control whose parent menu is defined as a menu separator. Menu controls that act as parents for menu controls in a submenu cannot be menu separators. Visual Basic does not load the menu control.</p>
<p class=indent>
This message also appears if Visual Basic finds a menu control whose parent menu has its Checked property set to True. Menu controls that act as parents for menu controls in a submenu cannot be checked. Visual Basic does not load the menu control.</p>
<p class=dt>
<b>Cannot set Checked property in Menu menuname.</b></p>
<p class=indent>
This message appears if Visual Basic finds a top-level menu control with its Checked property set to True. Top-level menus cannot have a checkmark. Visual Basic loads the menu control, but doesn’t set its Checked property.</p>
<p class=dt>
<b>Cannot set Shortcut property in menuname.</b></p>
<p class=indent>
This message appears if Visual Basic finds a top-level menu control with a shortcut key defined. Top-level menus cannot have a shortcut key. Visual Basic loads the menu control, but doesn’t set the Shortcut property.</p>
<p class=dt>
<b>Class classname in control controlname is not a loaded control class.</b></p>
<p class=indent>
This message appears if Visual Basic finds a class name it doesn’t recognize.</p>
<p class=dt>
<b>Control controlname could not be loaded.</b></p>
<p class=indent>
This message appears if Visual Basic encounters an unknown type of control in the form description. Visual Basic creates a picture box to represent the unknown control, giving that picture box any valid properties from the unknown control description. When this message appears, a number of invalid property errors are likely to follow.</p>
<p class=dt>
<b>Control controlname has a quoted string where the property name should be.</b></p>
<p class=indent>
This message appears if Visual Basic finds text inside quotation marks instead of a property name, which you do not place inside quotation marks. For example:</p>
<pre><code>"Caption" = "Start Demo"
</code></pre>
<p class=indent>
In this case, the property name Caption should not have been enclosed in quotation marks. Visual Basic ignores the line in the form description that produced this error.</p>
<p class=dt>
<b>The control name controlname is invalid.</b></p>
<p class=indent>
This message appears if the name of a control is not a valid string in Visual Basic. Visual Basic will not load the control.</p>
<p class=dt>
<b>Control name too long; truncated to controlname.</b></p>
<p class=indent>
This message appears if Visual Basic finds a control name longer than 40 characters. Visual Basic loads the control, truncating the name.</p>
<p class=dt>
<b>Did not find an index property and control controlname already exists. Cannot create this control.</b></p>
<p class=indent>
This message appears if Visual Basic finds a control without an index that has the same name as a previously loaded control. Visual Basic doesn’t load the control.</p>
<p class=dt>
<b>Form formname could not be loaded.</b></p>
<p class=indent>
This message appears if Visual Basic encounters the end of file unexpectedly or if the first Begin statement is missing.</p>
<p class=dt>
<b>The Form or MDIForm name formname is not valid; cannot load this form.</b></p>
<p class=indent>
This message appears if the name of a form is not a valid string in Visual Basic. Visual Basic will not load the form.</p>
<p class=indent>
Valid strings must start with a letter; can include only letters, numbers and underscores; and must have 40 or fewer characters.</p>
<p class=dt>
<b>The property name propertyname in control controlname is invalid.</b></p>
<p class=indent>
This message appears if the name of a property is not a valid string in Visual Basic or is longer than 30 characters. Visual Basic will not set the property.</p>
<p class=dt>
<b>Property propertyname in control controlname could not be loaded.</b></p>
<p class=indent>
This message appears if Visual Basic encounters an unknown property. Visual Basic skips this property when loading the form.</p>
<p class=dt>
<b>Property propertyname in control controlname could not be set.</b></p>
<p class=indent>
This message appears if Visual Basic cannot set the property of the specified control as indicated by the form description.</p>
<p class=dt>
<b>Property propertyname in control controlname had an invalid value.</b></p>
<p class=indent>
This message appears if Visual Basic encounters an invalid value for a property. Visual Basic changes the property value to the default value for that property.</p>
<p class=dt>
<b>Property propertyname in control controlname has an invalid file reference.</b></p>
<p class=indent>
This message appears if Visual Basic couldn’t use a file name reference. This will happen if the referenced file (probably a binary data file for the form) is not found at the specified directory.</p>
<p class=dt>
<b>Property propertyname in control controlname has an invalid property index.</b></p>
<p class=indent>
This message appears if Visual Basic finds a property name with a property index greater than 255. For example:</p>
<pre><code>Prop300 = 5436
</code></pre>
<p class=indent>
Visual Basic ignores the line in the form description that produced this error.</p>
<p class=dt>
<b>Property propertyname in control controlname has an invalid value.</b></p>
<p class=indent>
This message appears if Visual Basic finds a property with a value that is not correct for that control. For example:</p>
<pre><code>Top = Cahr(22)        ' Really wanted Char(22).
</code></pre>
<p class=indent>
Visual Basic sets the property with its default value.</p>
<p class=dt>
<b>Property propertyname in control controlname must be a quoted string.</b></p>
<p class=indent>
This message appears if Visual Basic finds a property value without quotation marks that should appear inside quotation marks. For example:</p>
<pre><code>Caption = Start Demo
</code></pre>
<p class=indent>
Visual Basic ignores the line in the form description that produced this error.</p>
<p class=dt>
<b>Syntax error: property propertyname in control controlname is missing an '='.</b></p>
<p class=indent>
This message appears if Visual Basic finds a property name and value without an equal sign between them. For example:</p>
<pre><code>Text        "Start Demo"
</code></pre>
<p class=indent>
Visual Basic doesn’t load the property.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;Additional information on errors encountered during form load is available by clicking the Help button in the error dialog box or by pressing F1.</p>
</BODY>
</HTML>
