<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Controls You Can Use As Constituent Controls</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcontrolsyoucanuseasconstituentcontrols"></a>Controls You Can Use As Constituent Controls</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconControlsYouCanUseAsConstituentControlsC">
</object></p>
<p>
You can place any of the controls supplied with Visual Basic on a UserControl, with the exception of the OLE container control.</p>
<p>
Any ActiveX control you've purchased, or any control written to the older OLE specification, can be placed on a UserControl.</p>
<p>
As long as you're authoring a control for your own use, that's all you need to know. However, if you're going to distribute your control to others, even if you're giving it away, you need to consider distribution and licensing issues.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Toolbox objects other than controls, such as insertable objects — for example, Microsoft Excel Charts — cannot be placed on UserControl objects.</p>
<h3>The Easy Part — UserControl and Intrinsics</h3>
<p>
The UserControl object and the Visual Basic intrinsic controls are created by the Visual Basic run-time DLL. Anyone who installs your .ocx file will automatically get a copy of the run-time DLL and support files, so if you author your controls using just the UserControl and intrinsic controls, you have no further licensing or distribution issues to worry about.</p>
<p>
The intrinsic controls include: PictureBox, Label, TextBox, Frame, CommandButton, CheckBox, OptionButton, ComboBox, ListBox, HScrollBar, VScrollBar, Timer, DriveListBox, DirListBox, FileListBox, Shape, Line, Image, and Data.</p>
<p>
ActiveX controls included with the Professional Edition of Visual Basic are subject to licensing rules, as explained below.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The Microsoft User Forms in Microsoft Office applications include a set of controls similar to the intrinsic controls. These controls may be used on a UserControl; however, you must distribute the support DLL for Microsoft User Forms in your Setup program.</p>
<h3>Distributing Constituent Controls</h3>
<p>
An instance of your control is composed of a UserControl object and its constituent controls, as explained in "The UserControl Object," earlier in this chapter. In order to add an instance of your control to a form, a developer must be able to create these objects.</p>
<p>
SetupWizard makes this task easy. When you create a Setup program for your .ocx file, SetupWizard includes all the .ocx files for the constituent controls, along with the Visual Basic run-time DLL and any necessary support files.</p>
<p>
When a developer runs your Setup program, the .ocx files that provide the constituent controls are installed on his computer. The only other thing he needs to worry about is whether he has the legal right to use them.</p>
<p>
If none of the constituent controls require a license, the developer is set. However, if you used controls you purchased, or any of the ActiveX controls included with Visual Basic, Professional Edition, there are licensing requirements to be met.</p>
<h3>Licensing Constituent Controls</h3>
<p>
When you purchase a control, you generally acquire the right to distribute instances of that control royalty-free as part any application you create. However, such license agreements do <i>not</i> give you the right to sell or give away the control to other developers — which is what you're doing when you use it as a constituent control.</p>
<p>
So the rule is: In order to use your control, a developer must have licenses for all the licensed controls you've used as constituent controls.</p>
<h4>Most ActiveX Controls Included with Visual Basic Are Exempted</h4>
<p>
The licensing rule stated above applies to the DBGrid control. Any of the other ActiveX controls included with the Professional Edition of Visual Basic can be used as constituent controls of a control you intend to distribute to other developers.</p>
<p>
For example, if you use the TreeView control as a constituent control, anyone who is licensed to use your control is licensed to use TreeView <i>as part of your control.</i> (If you didn't include licensing support when you made your .ocx, this means that anyone can use your control. See "Licensing Issues for Controls," later in this chapter.)</p>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Your license agreement for Visual Basic states that in order to distribute any redistributables included with Visual Basic, the software you author must add significant and primary functionality. This means that a control that uses TreeView as a constituent control must do significantly more than TreeView does by itself. Consult your Microsoft License Agreement for details.</p>
<p>
For more information about how to use ActiveX controls included with the Professional and Enterprise Editions, see "Using ActiveX Controls."</p>
<h3>Distribution and Licensing Examples</h3>
<p>
Applying the rule yields the following examples.</p>
<h4>ActiveX Controls Included with Visual Basic</h4>
<p>
Suppose you author some controls using some of the ActiveX controls included with Visual Basic, Professional Edition. SetupWizard adds the necessary .ocx files to your Setup program.</p>
<p>
As long as you didn't use the DBGrid control, anyone who runs SetupWizard can use your controls. That's not always the case if you used DBGrid as a constituent control, as these scenarios show:
<ul type=disc>
<li>
A developer who has a copy of Visual Basic, Professional Edition buys your .ocx and installs it. She already has the supporting .ocx files for DBGrid, and the license for it, so she has everything she needs.<br><br></li>
<li>
A student who has a copy of Visual Basic, Learning Edition buys your control and installs it. He now has the supporting .ocx file for DBGrid, but doesn't have the license to use it.<br><br></li>
<li>
A stock market analyst who has a copy of Microsoft Excel buys your control and installs it. She now has the supporting .ocx files for DBGrid, but doesn't have the license to use it.</li>
</ul>
<h4>ActiveX Controls You've Purchased</h4>
<p>
Suppose you purchase MegaDino.ocx from Late Cretaceous Computing, and use the Tyrannosaur and Velociraptor controls from this .ocx to develop your own UltimatePredator control. You package this control in UPred.ocx, and you give it away.</p>
<p>
Anyone to whom you give a copy of UPred.ocx must have purchased and installed MegaDino.ocx in order to use the UltimatePredator control legally. This is true regardless of the development software they're using.</p>
<p>
In fact, if the creators of MegaDino.ocx and DinoRama.ocx used the standard registry key licensing scheme, people to whom you give UPred.ocx will be <i>unable</i> to use the UltimatePredator control unless they have MegaDino.ocx installed.</p>
<h4>Shareware Controls</h4>
<p>
Suppose you author your control using a shareware control.</p>
<p>
If you sell your control component (.ocx file), the purchaser must also pay the author of the shareware control the appropriate license fee.</p>
<p>
If you distribute your control component as shareware, a person who wants to use it must pay the appropriate license fees to you and to the author of the shareware control you used.</p>
<h4>Constituent Controls and the Internet</h4>
<p>
If you want people to be able to use your control on World Wide Web pages, remember that the rule for Web servers is exactly the same as the rule for developers. That is, in order to use your control, a Web server must have licenses for all the licensed controls you've used as constituent controls.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;Licensing issues, including how to add licensing support for the controls you author, how licensing support works, and the mechanism for using licensed controls with the World Wide Web are discussed in "Licensing Issues for Controls," later in this chapter.</p>
</BODY>
</HTML>
