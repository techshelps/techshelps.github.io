<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging In-Process Components</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconhowtodebuginprocesscomponents"></a>Debugging In-Process Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconHowToDebugInProcessComponentsC">
</object></p>
<p>
This topic describes debugging procedures for most objects provided by in-process components. ActiveX documents, however, cannot be debugged as described here. See "Building ActiveX Documents."</p>
<p class=label>
<b>To debug an in-process component</b>
<ol>
<li>
Set breakpoints and watch expressions as needed in your class module or UserControl code.<br><br></li>
<li>
Run the project group by pressing CTRL+F5 or clicking <b>Start With Full Compile </b>on the <b>Run </b>menu.<p class=tl>
The in-process component will compile, but Sub Main will not run until the first object is created in response to a client request.</P><p class=tl>
While debugging, you can step from the test project directly into code in the component project.</P></li>
<li>
When you’re finished with the debugging session, click the Close button on test project’s main window to return to design mode.<p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Closing the test project by clicking the <b>End</b> button will cause all projects to close. Objects in the component will not receive Terminate events. Shutting down in this fashion will not correctly test the shutdown behavior of your component.</p></li>
</ol>
<h2>Start With Full Compile</h2>
<p>
You may find it more convenient to start the project group by pressing CTRL+F5, or by clicking Start With Full Compile on the Run menu, so that all compilation errors are resolved before your component begins supplying objects to your test application.</p>
<p>
The default in Visual Basic is to compile code on demand. This means that there may be code in your component which is not compiled until the client calls it. Some compile errors cannot be fixed without returning to design mode, which means returning the whole project group to design mode.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To disable demand compilation, select Options from the Tools menu, select the General tab of the Options dialog box, and clear Compile On Demand. This affects the current session as well as future instances of Visual Basic.</p>
<h2>Shutting Down an In-Process Component</h2>
<p>
In-process components will not unload while running in the development environment, even if all references to objects are released by the test project, and all other component shutdown conditions are met. The only way to test DLL unloading behavior is with the compiled component.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;"Using Break on Error in Components" explains how to use the Error Trapping options with component projects. ActiveX control projects must be debugged while the client is in design mode, as well as run mode. See "Debugging Controls" in "Building ActiveX Controls." ActiveX Documents cannot be debugged without a browser or other active document container. See "Building ActiveX Documents." See "Testing and Debugging ActiveX Components" for a list of topics related to testing and debugging.</p>
</BODY>
</HTML>
