<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Toolbar Scenario 2: Set the Text Alignment of a RichTextBox Control Using Grouped Buttons</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontoolbarscenario2"></a>Toolbar Scenario 2: Set the Text Alignment of a RichTextBox Control Using Grouped Buttons</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconToolbarScenario2C">
</object></p>
<p>
This scenario builds upon the previous scenario, where a Toolbar control is used to open a file loaded into a RichTextBox control. In this scenario, you will add three buttons to the Toolbar control with icons for left-aligned, center-aligned, and right-aligned.</p>
<p>
<img src="avtct037.gif" border=0></p>
<p>
The three buttons are all a part the ButtonGroup (tbrButtonGroup) style which allows only one of the three to be pressed at any time.</p>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;To specify which buttons are part of a button group, you must "enclose" the group with two other buttons which have the Separator (tbrSeparator) style. For example, if there are three buttons in a group, and they are the fourth through the sixth buttons, then the third and seventh buttons must have the Separator style to enclose the group.</p>
<p>
When the user clicks in the RichTextBox control, the SelChange event occurs. In that event, the code checks the SelAlignment property which returns the alignment of the current selection. That value is used to depress the appropriate button in the Toolbar control.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Style Property (Button Object)" for more information about the ButtonGroup style.</p>
<p>
The following objects are used in this scenario:
<ul type=disc>
<li>
Form object named "frmRTF"<br><br></li>
<li>
Toolbar control named "tlbRTF"<br><br></li>
<li>
RichTextBox control named "rtfData"<br><br></li>
<li>
ImageList control named "imlToolbar"</li>
</ul>
<p class=label>
<b>To create a toolbar that sets text alignment</b></p>
<p>
(The following operations are described at a high-level. For more specific information, see "Using the Toolbar Control.")</p>
<ol>
<li>
At design time, insert the appropriate images into an ImageList control associated with the Toolbar control.<br><br></li>
<li>
Create the Button objects using the <b>Property Pages</b> dialog box.</li>
<li>
In the ButtonClick event, use the Select Case statement to determine which button was pressed, and set the alignment appropriate to the button.</li>
<li>
In the RichTextBox control's SelChange event, use the Select Case statement to reflect alignment.</li>
</ol>
<h2>Insert the Appropriate Images into an ImageList Control Associated with the Toolbar Control</h2>
<p>
As in the previous Toolbar Control Scenario, you must first insert the appropriate images for the button group into an ImageList control.</p>
<p class=label>
<b>To add to the ImageList control at design time</b>
<ol>
<li>
Right-click on the ImageList control and click <b>Properties</b>.<br><br></li>
<li>
In the <b>Property Pages </b>dialog box, click the <b>Images </b>tab.<br><br></li>
<li>
Click <b>Insert Picture </b>to display the <b>Select Picture </b>dialog box which allows you to find the images you need. This scenario uses images found in the Tools\Bitmaps\Tlbr_W95 directory. The images used are named: Lft.bmp, Cnt.bmp, and Rt.bmp.<br><br></li>
<li>
For each image you insert, type an appropriate key for the image in the <b>Key </b>box. In this scenario, the images and their keys are as follows:<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Image</b></td>
<td class=label width=65%><b>Key</b></td>
</tr>
<tr valign=top>
<td width=35%>Lft.bmp</td>
<td width=65%>"left"</td>
</tr>
<tr valign=top>
<td width=35%>Cnt.bmp</td>
<td width=65%>"center"</td>
</tr>
<tr valign=top>
<td width=35%>Rt.bmp</td>
<td width=65%>"right"</td>
</tr>
</table><br>
</li>
<li>
Associate the ImageList with the Toolbar control by right-clicking the Toolbar control and clicking <b>Properties</b>, then selecting the ImageList control from the drop-down box <b>ImageList</b>.</li>
</ol>
<h2>Create the Button Objects Using the Property Pages Dialog Box</h2>
<p>
You can create Button objects at design time by using the Toolbar control's Property Pages dialog box. For specific information on how to do this, see "Toolbar Control Scenario 1: Provide an RTF Text Editor an OpenFile Button."</p>
<p>
To create a group of three buttons, you must actually create five buttons, three of which are enclosed by two Button objects with the Separator style. The Style, Key, ToolTipText, and Image properties for the five buttons should be set as shown in the table below:</p>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows>
<tr valign=top>
<td class=label width=15%><b>Button</b></td>
<td class=label width=25%><b>Style</b></td>
<td class=label width=16%><b>Key</b></td>
<td class=label width=24%><b>ToolTipText</b></td>
<td class=label width=20%><b>Image</b></td>
</tr>
<tr valign=top>
<td width=15%>1</td>
<td width=25%>tbrSeparator</td>
<td width=16%>[none]</td>
<td width=24%>[none]</td>
<td width=20%>[none]</td>
</tr>
<tr valign=top>
<td width=15%>2</td>
<td width=25%>tbrButtonGroup</td>
<td width=16%>left</td>
<td width=24%>Align Left</td>
<td width=20%>1</td>
</tr>
<tr valign=top>
<td width=15%>3</td>
<td width=25%>tbrButtonGroup</td>
<td width=16%>center</td>
<td width=24%>Center</td>
<td width=20%>2</td>
</tr>
<tr valign=top>
<td width=15%>4</td>
<td width=25%>tbrButtonGroup</td>
<td width=16%>right</td>
<td width=24%>Align Right</td>
<td width=20%>3</td>
</tr>
<tr valign=top>
<td width=15%>5</td>
<td width=25%>tbrSeparator</td>
<td width=16%>[none]</td>
<td width=24%>[none]</td>
<td width=20%>[none]</td>
</tr>
</table><br>
<h2>Use the Select Case Statement to Determine Which Button was Pressed, and Set the Alignment Appropriate to the Button</h2>
<p>
The ButtonClick event occurs when the user clicks on any Button object (except buttons with the Separator or Placeholder styles). Use the Select Case statement with the Key property to determine which button was clicked, and set the alignment of the RichTextBox using the SelAlignment property of the RichTextBox control. After setting the alignment, return the focus to the control by using a SetFocus method, as shown in the code below:</p>
<pre><code>Private Sub tlbRTF_ButtonClick(ByVal Button _
As Button)
   ' Use the Select Case statement with the Key 
   ' property to determine which button was clicked.
   Select Case Button.Key
   Case "left"
      rtfData.SelAlignment = rtfLeft
      rtfData.SetFocus ' Return focus to RichTextBox.
   Case "center"
      rtfData.SelAlignment = rtfCenter
      rtfData.SetFocus
   Case "right"
      rtfData.SelAlignment = rtfRight
      rtfData.SetFocus
   Case Else
      ' Handle other cases here.
   End Select
End Sub
</code></pre>
<h2>Use the Select Case Statement to Reflect Alignment</h2>
<p>
When the user clicks on a line in the RichTextBox control, the Toolbar buttons will reflect the alignment of the line. This can be accomplished using the RichTextBox control's SelChange event, as shown in the code below.</p>
<pre><code>Private Sub rtfData_SelChange()
   ' When the insertion point changes, set the Toolbar
   ' buttons to reflect the attributes of the line 
   ' where the cursor is located.
   Select Case rtfData.SelAlignment
   Case rtfLeft ' 0
      tlbRTF.Buttons("left").Value = tbrPressed
   Case rtfRight ' 1
      tlbRTF.Buttons("right").Value = tbrPressed
   case Else ' Null—no buttons are shown pressed.
      tlbRTF.Buttons("left").Value = tbrUnpressed
      tlbRTF.Buttons("center").Value = tbrUnpressed
      tlbRTF.Buttons("right").Value = tbrUnpressed
   End Select
End Sub
</code></pre>
<h2>Running the Code</h2>
<p>
You can now run the project. Use the Open File button (created in "Toolbar Scenario 1: Provide an RTF Text Editor with an OpenFile Button") to open a file. You can also click the three grouped buttons to change the alignment of the text.</p>
</BODY>
</HTML>
