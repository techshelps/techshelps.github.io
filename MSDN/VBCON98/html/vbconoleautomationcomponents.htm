<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Components</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconoleautomationcomponents"></a>ActiveX Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconOLEAutomationComponentsC">
</object></p>
<p>
An <i>ActiveX component </i>is a unit of executable code, such as an .exe, .dll, or .ocx file, that follows the ActiveX specification for providing objects. ActiveX technology allows programmers to assemble these reusable software components into applications and services.</p>
<p>
You can buy ActiveX components that provide generic services, such as numerical analysis or user interface elements. You can create components that encapsulate your own business transactions, and combine these with generic components. Reusing tested, standardized code in this fashion is called <i>component software development.</i></p>
<p>
Component software development using ActiveX technology should not be confused with object-oriented programming (OOP). OOP is a way to build object-based software components; ActiveX is a technology that allows you to combine object-based components created using many different tools. To put it another way, OOP is concerned with creating objects, while ActiveX is concerned with making objects work together.</p>
<p>
For example, you can use an OOP tool such as Microsoft Visual C++<sup>®</sup> to construct a set of useful objects. These objects can be used and further extended by other C++ developers. If you package your objects in an ActiveX component, however, they can be used and further extended with any programming tool that supports ActiveX technology.</p>
<p>
This chapter introduces the components you can build with Microsoft Visual Basic, and lists the portions of <i>Creating ActiveX Components </i>that apply to each.</p>
<h2>Topics</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbcontheyrenotjustoleserversanymore.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbcontheyrenotjustoleserversanymore.htm">They’re Not Just OLE Servers Any More</a><p>
You can now create a variety of software components using Visual Basic.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconolecomponentsyoucancreatewithvisualbasic.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconolecomponentsyoucancreatewithvisualbasic.htm">Features of Visual Basic ActiveX Components</a><p>
Lists key features Visual Basic provides for creating first-class components.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconolecontrols.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconolecontrols.htm">ActiveX Controls</a><p>
Describes the main features of ActiveX controls created using Visual Basic.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbcondocumentobjects.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbcondocumentobjects.htm">ActiveX Documents</a><p>
Introduces ActiveX documents, and explains how they are used in Internet-enabled applications.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcodecomponents.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcodecomponents.htm">Code Components</a><p>
Code components provide objects other applications and components can create and use. This topic describes the features of Visual Basic code components.</p>
</td>
</tr>
</table><br>
<p>
Readers of this book should be familiar with the material in "Programming with Objects" and "Programming with ActiveX Components" in the <i>Visual Basic Programmer’s Guide.</i></p>
</BODY>
</HTML>
