<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating ActiveX Components</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreatingolecomponents"></a>Creating ActiveX Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCreatingOLEComponentsC">
</object></p>
<p>
Component software development cuts programming time and produces more robust applications, by allowing developers to assemble applications from tested, standardized components. The move to component software, sparked by the success of products like Microsoft Visual Basic, is one of the most prominent trends in the software industry.</p>
<p>
Microsoft has led the effort to define an open, extensible standard for software interoperability. The Component Object Model (COM), including Automation and the ActiveX specification, makes it possible for software components you create to work smoothly with software components you buy off the shelf.</p>
<p>
Visual Basic makes ActiveX component creation happen. ActiveX controls, ActiveX Documents, code components, and applications that provide objects — Visual Basic gives you the tools to rapidly create, debug, and deploy software components.</p>
<h2>Getting Started</h2>
<p>
Before you begin, you should know how to use class modules to define new classes, how to create objects from classes, and how to use ActiveX components. These subjects are discussed in "Programming with Objects" and "Programming with ActiveX Components," in the <i>Visual Basic Programmer’s Guide.</i></p>
<h2>Chapters</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbconoleautomationcomponents.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconoleautomationcomponents.htm">ActiveX Components</a><p>
Outlines what you can do with Visual Basic’s component software features.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatinganinprocesscomponent.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconcreatinganinprocesscomponent.htm">Creating an ActiveX DLL</a><p>
Provides step by step procedures that get you off to a running start with in-process debugging, multiple projects, global objects, object lifetime concepts, and circular references.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingoleserver.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingoleserver.htm">Creating an ActiveX Exe Component</a><p>
Provides step by step procedures that introduce threads, events in class modules, call-backs, and out-of-process debugging.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingactivexcontrol.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingactivexcontrol.htm">Creating an ActiveX Control</a><p>
Provides a series of step by step procedures that create a simple control. Introduces ActiveX control concepts, raising events, debugging design-time behavior, and property pages.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingdocumentobject.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingdocumentobject.htm">Creating an ActiveX Document</a><p>
Provides a series of step by step procedures that create a simple ActiveX document, and demonstrate ActiveX document concepts, navigation, properties and methods, menus, and debugging techniques.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbcongeneralprinciplesofcomponentdesign.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbcongeneralprinciplesofcomponentdesign.htm">General Principles of Component Design</a><p>
Contains information of importance to all component designers, including terminology, concepts, instancing for class modules, polymorphism, and object models.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbcondebuggingtestingdeployingcomponents.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbcondebuggingtestingdeployingcomponents.htm">Debugging, Testing, and Deploying Components</a><p>
Contains more general information, such as setting up test projects, debugging features, adding Help, version compatibility, and localization.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconbuildingcodecomponents.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconbuildingcodecomponents.htm">Building Code Components</a><p>
Takes OLE servers into a new world, providing in depth discussions of in-process and out-of-process components, threading, instancing, call-backs, and events.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconbuildingolecontrols.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconbuildingolecontrols.htm">Building ActiveX Controls</a><p>
Contains in-depth explanations of how Visual Basic ActiveX controls work, what features you can implement, subtleties of debugging, discussions of implementation techniques, and all the other things you expect of a cool new feature.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingpropertypagesforolecontrols.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingpropertypagesforolecontrols.htm">Creating Property Pages for ActiveX Controls</a><p>
Provides in-depth discussion of property pages, including implementation techniques and design guidelines.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconbuildingdocumentobjects.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconbuildingdocumentobjects.htm">Building ActiveX Documents</a><p>
Provides in-depth discussions of terminology, concepts, Internet features, navigation, debugging, migrating from forms, and in-process vs. out-of-process implementation.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconbuildingdatasources.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconbuildingdatasources.htm">Building Data Sources</a><p>
Provides in-depth discussion and step-by-step procedures for creating ActiveX components that can act as data sources. </p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconolecomponentstandardsguidelines.htm"><img src="folder.gif" border=0></a></td>
<td width=94%><a href="vbconolecomponentstandardsguidelines.htm">ActiveX Component Standards and Guidelines</a><p>
Contains updated guidelines for object naming, component shutdown, implementing collections and Application objects, and other object model issues.</p>
</td>
</tr>
</table><br>
</BODY>
</HTML>
