<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Providing a Reference Point for Binary Version Compatibility</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconprovidingreferencepointforcompatibility"></a>Providing a Reference Point for Binary Version Compatibility</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconProvidingReferencePointForCompatibilityC">
</object></p>
<p>
To determine the degree of compatibility between two versions of a component, Visual Basic needs a reference point. You provide this reference point by entering the path to a previously compiled version of your component in the Version Compatibility box on the tab of the Project Properties dialog box.</p>
<p>
You need to do this whenever you begin work on a new version of a component you have shipped, put into production, or used as part of an application.</p>
<p class=label>
<b>To specify a reference version of the component type library</b>
<ol>
<li>
Open the project.<br><br></li>
<li>
From the <b>Project</b> menu, choose <b>Project Properties</b> to open the <b>Project Properties</b> dialog box, and select the <b>Component</b> tab.<br><br></li>
<li>
Click <b>Binary Compatibility</b> to lock down the class IDs in the project.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;As explained in "Project Compatibility: Avoiding MISSING References," the <b>Project Compatibility</b> setting actually has nothing to do with the Version Compatibility feature.</p></li>
<li>
Update the box at the bottom of the <b>Version Compatibility</b> frame with the full path and name of the most recent version of your component.</li>
</ol>
<p>
Whenever you make a new executable from your component project, Visual Basic compares the new interfaces of your classes to the ones described in the file you have specified. Visual Basic updates the type library version number according to the level of compatibility between the interfaces.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;"Using Binary Version Compatibility" describes when and how to use the feature, problems you may encounter, and messages you may get from Visual Basic. See "Version Compatibility" for a list of topics related to this feature.</p>
</BODY>
</HTML>
