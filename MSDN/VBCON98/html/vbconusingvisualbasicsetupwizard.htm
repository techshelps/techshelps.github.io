<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Starting the Visual Basic Package and Deployment Wizard</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingvisualbasicsetupwizard"></a>Starting the Package and Deployment Wizard</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingVisualBasicSetupWizardC">
</object></p>
<p>
The Visual Basic Package and Deployment Wizard makes it easy for you to create the necessary .cab files and setup programs for your application. Like other wizards, the Package and Deployment Wizard prompts you for information so that it can create the exact configuration you want.</p>
<p>
There are three ways you can start the Package and Deployment Wizard:
<ul type=disc>
<li>
You can run it from within Visual Basic as an add-in. If you run the wizard as an add-in, you must first set the necessary references in the Add-In Manager to load the wizard. When you use the wizard as an add-in, Visual Basic assumes that you want to work with the project you currently have open. If you want to work with another project, you must either open that project before starting the add-in, or use the wizard as a stand-alone component.<br><br></li>
<li>
You can run it as a stand-alone component from outside the development environment. When you run the wizard as a stand-alone component, you are prompted to choose the project on which you want to work.<br><br></li>
<li>
You can start it in silent mode by launching it from a command prompt. See "Running the Wizard in Silent Mode" in this topic for more information. </li>
</ul>
<p>
After you start the wizard, a series of screens prompt you for information about your project and let you choose options for the package. Each screen explains how it is to be used, including which information is optional, and what information must be entered before you can move to the next screen. If you find that you need more information on any screen, press F1 or click the Help button.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You should save and compile your project before running the Package and Deployment Wizard.</p>
<p>
In most cases, the Package and Deployment Wizard is all you need to create a package that is ready for deployment. However, if you want to customize your packaging process further or provide functionality not supported by the Package and Deployment Wizard, you can modify the Setup Toolkit Project.</p>
<p class=label>
<b>To start the Package and Deployment Wizard from within Visual Basic</b>
<ol>
<li>
Open the project you want to package or deploy using the wizard.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you are working in a project group or have multiple projects loaded, make sure that the project you want to package or deploy is the current project before starting the wizard.</p></li>
<li>
Use the Add-In Manager to load the Package and Deployment Wizard, if necessary: Select <b>Add-In Manager</b> from the <b>Add-Ins</b> menu, select <b>Package and Deployment Wizard</b> from the list, then click <b>OK</b>.<br><br></li>
<li>
Select <b>Package and Deployment Wizard</b> from the <b>Add-Ins</b> menu to launch the wizard.<br><br></li>
<li>
On the main screen, select one of the following options:<ul type=disc>
<li>
If you want to create a standard package, Internet package, or dependency file for the project, click <b>Package</b>.<br><br></li>
<li>
If you want to deploy the project, click <b>Deploy</b>.<br><br></li>
<li>
If you want to view, edit, or delete scripts, click <b>Manage Scripts</b>.</li>
</ul>
<p class=tl>
For an introduction to these options, see "The Package and Deployment Wizard."</P></li>
<li>
Proceed through the wizard screens.</li>
</ol>
<p class=label>
<b>To start the Package and Deployment Wizard as a stand-alone component</b>
<ol>
<li>
If the project you want to package is open, save it and close Visual Basic.<br><br></li>
<li>
Click the <b>Start</b> button, and then click <b>Package and Deployment Wizard </b>from the Visual Basic submenu.<br><br></li>
<li>
In the <b>Project</b> list on the initial screen, choose the project you want to package.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can click <b>Browse</b> if your project is not in the list.</p></li>
<li>
On the main screen, select one of the following options:<ul type=disc>
<li>
If you want to create a standard package, Internet package, or dependency file for the project, click <b>Package</b>.<br><br></li>
<li>
If you want to deploy the project, click <b>Deploy</b>.<br><br></li>
<li>
If you want to view, edit, or delete scripts, click <b>Manage Scripts</b>.</li>
</ul>
</li>
<li>
Proceed through the wizard screens.</li>
</ol>
<h2>Running the Wizard in Silent Mode</h2>
<p>
Using scripts, you may package and deploy your project files in <i>silent mode. </i>In silent mode, the wizard runs without your having to attend it to make choices and move through screens. The wizard packages and deploys your project using the settings contained in a script.</p>
<p>
Silent mode is especially useful if you are packaging and deploying as part of a batch process. For example, early in the development of your project, you may use the Package and Deployment Wizard to package your project and deploy it to a test location. You can later create a batch file to perform the same packaging and deployment steps periodically as you update your project.</p>
<p class=label>
<b>To package and deploy in silent mode</b>
<ol>
<li>
Open an MS-DOS prompt.<br><br></li>
<li>
Type the name of the wizard executable, pdcmdln.exe, followed by the path and file name of your Visual Basic project, and the appropriate command line arguments, as shown in the following example:<pre><code>PDCmdLn.exe C:\Project1\Project1.vbp /p "Internet Package" 
 &nbsp; /d Deployment1 /l "C:\Project1\Silent Mode.log"
</code></pre>
<p class=tl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can perform packaging and deployment in a single silent session by specifying both the /p and the /d arguments, as shown in the example above. Otherwise, use either /p or /d.</P><table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Argument</b></td>
<td class=label width=69%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=31%><b>/p <i>packagingscript</i> </b></td>
<td width=69%>Type <b>/p</b> followed by the name of a previously saved packaging script to package the project silently according to the specified script.</td>
</tr>
<tr valign=top>
<td width=31%><b>/d <i>deploymentscript</i></b> </td>
<td width=69%>Type <b>/d</b> followed by the name of a previously saved deployment script to deploy the project silently according to the specified script.</td>
</tr>
<tr valign=top>
<td width=31%><b>/l <i>path</i></b></td>
<td width=69%>Specifies that the wizard should store all output from the wizard, such as error messages and success reports, to a file rather than displaying them on the screen.<p>
Type <b>/l </b>followed by the path and file name of a file in which output should be stored. If the file does not exist, the wizard creates it.</p>
</td>
</tr>
</table><br>
</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Any file or script name that includes spaces should be enclosed in quotation marks, as shown in the example above.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Application Packaging with the Wizard" for instructions on how to use the wizard to package your project. See "Application Deployment with the Wizard" for instructions on how to use the wizard to deploy your projects. See "Modifying the Setup Project" for more information on customizing the installation process.</p>
</BODY>
</HTML>
