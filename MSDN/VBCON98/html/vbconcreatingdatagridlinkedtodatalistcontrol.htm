<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a DataGrid Linked to a DataList Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreatingdatagridlinkedtodatalistcontrol"></a>Creating a DataGrid Linked to a DataList Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCreatingDataGridLinkedToDataListControlC">
</object></p>
<p>
A common use of the DataGrid is to show "details" supplied by one table in a database. For example, the Northwind (Nwind.mdb) database includes two tables, one named "Suppliers," and the other named "Products." In this example, we'll use the DataList control to show the company names of suppliers from the "Suppliers" table. When the user clicks on any company name, the DataList control will furnish the SupplierID for the company. Using that ID, a query can be constructed to retrieve all records in the "Products" table which have a matching SupplierID. In other words, when the user clicks on a company (in the DataList control), all of the products produced by that company will appear in the DataGrid control.</p>
<p class=label>
<b>To fill a DataGrid Control with products from a particular supplier</b>
<ol>
<li>
Ensure that an OLE DB data source for the Northwind database is present on the machine; if such a datas source has not been created, follow the steps in "Creating the Northwind OLE DB Data Link."<br><br></li>
<li>
Create a new standard EXE project in Visual Basic.<p class=tl>
If the <b>DataGrid </b>and <b>DataList </b>and <b>ADO Data </b>controls are not present in the Toolbox, right-click the <b>Toolbox</b>, and click <b>Components</b>.<b> </b>In the <b>Components</b> dialog box double-click <b>Microsoft DataGrid Control</b>, <b>Microsoft DataList Controls</b> and <b>Microsoft ADO Control</b>.</P></li>
<li>
Place an instance of the <b>DataGrid</b> and <b>DataList </b>controls on the blank form.<p class=tl>
Place the <b>DataList</b> control in the top left corner of the form, and place the DataGrid control somewhat below it.</P></li>
<li>
Place two instances of the <b>ADO Data control</b> on the form.<p class=tl>
Select the first <b>ADO Data control </b>and press F4 to display its Properties page. Set the <b>Name</b> property of the control to <b>adoSuppliers</b>. Select the second <b>ADO Data control </b>and set its <b>Name</b> property to <b>adoProducts</b>. Place the first control directly underneath the <b>DataList Control</b>, and the second directly below the <b>DataGrid</b> control.</P></li>
<li>
Set the <b>ConnectionString </b>property of the two <b>ADO Data controls </b>to the Northwind OLE DB data source.<p class=tl>
Select the control named <b>adoSuppliers </b>and set the <b>ConnectionString </b>property to the Northwind OLE DB data source (Northwind.udl). Select the control named <b>adoProducts</b> and repeat the operation.</P></li>
<li>
Set the <b>RecordSource</b> property of the two <b>ADO Data controls</b>.<p class=tl>
Select <b>adoSuppliers </b>and click <b>RecordSource </b>on the <b>Properties </b>page. Type <code>Select * From Suppliers</code>. This query instructs the <b>ADO Data control</b> to return all records in the Suppliers table. Select <b>adoProducts</b>,<b> </b>click <b>RecordSource</b>, and type <code>Select * From Products</code>. This query returns all the records from the Products table.</P></li>
<li>
Set the <b>RowSource</b> property of the <b>DataList </b>Control to <b>adoSuppliers</b>.<p class=tl>
The <b>RowSource</b> property determines which data source supplies the data for the <b>ListField</b> property.</P></li>
<li>
Set the <b>ListField</b> property of the DataList control to <b>CompanyName</b>.<p class=tl>
The <b>ListField</b> property is set to the name of a field in the table named Suppliers. At run-time, the <b>DataList </b>control displays the value of the field specified in this property. In this example, the property will display the name of a company found in the Suppliers table.</P></li>
<li>
Set the <b>BoundColumn </b>property of the DataList control to <b>SupplierID</b>.<p class=tl>
The BoundColumn property is set to a second field in the Suppliers table. In this case, the property is set to the SupplierID field. When the DataList control is clicked, the BoundText property returns the value of the SupplierID field associated with the company displayed in the DataList control. This value will be used in a query of the Products table, which provides data for the <b>DataGrid </b>control.</P></li>
<li>
Set the <b>DataSource </b>property of the <b>DataGrid </b>control to <b>adoProducts</b>.<p class=tl>
The DataSource property specifies the data source for the control. In this case, the property is set to the ADO Data control named adoProducts, which returns all of the records in the Products table.</P></li>
<li>
In the code module for the form, add the following:<pre><code>Private Sub Datalist1_Click()
 &nbsp; ' Declare a string variable that will contain a new query. The 
 &nbsp; ' new query uses the BoundText property of the DataList control 
 &nbsp; ' to supply a SupplierID value. The new query simply asks for 
 &nbsp; ' all products with the same SupplierID. This query is assigned 
 &nbsp; ' to the RecordSource property of the ADO Data control named 
 &nbsp; ' adoProducts. After refreshing the control, the DataGrid is 
 &nbsp; ' updated with the new recordset of all products that are 
 &nbsp; ' supplied by the same company.

 &nbsp; Dim strQuery As String
 &nbsp; strQuery = "Select * FROM Products WHERE SupplierID = " &amp; _
 &nbsp; Datalist1.BoundText
 &nbsp; 
 &nbsp; With adoProducts
 &nbsp;&nbsp;&nbsp;&nbsp; .RecordSource = strQuery
 &nbsp;&nbsp;&nbsp;&nbsp; .Refresh
 &nbsp; End With
 &nbsp; 
 &nbsp; With DataGrid1
 &nbsp;&nbsp;&nbsp;&nbsp; .ClearFields
 &nbsp;&nbsp;&nbsp;&nbsp; .ReBind
 &nbsp; End With
End Sub
</code></pre>
</li>
<li>
Run the project.<p class=tl>
Click any company name in the <b>DataList</b> control, and the <b>DataGrid</b> control is automatically updated with all products supplied by the company.</P></li>
</ol>
</BODY>
</HTML>
