<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Files You Need to Distribute</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondeterminingfilesyouneedtodistribute"></a>Files You Need to Distribute</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDeterminingFilesYouNeedToDistributeC">
</object></p>
<p>
The first step in creating a custom setup program is to determine which files to distribute. All Visual Basic applications need a minimum set of files, referred to as <i>bootstrap</i> <i>files</i>, that are needed before your application can be installed. In addition, all Visual Basic applications require application-specific files, such as an executable file (.exe), data files, ActiveX controls, or .dll files.</p>
<p>
There are three main categories of files needed to run and distribute your application:
<ul type=disc>
<li>
Run-time files<br><br></li>
<li>
Setup files<br><br></li>
<li>
Application-specific files</li>
</ul>
<h2>Run-Time Files</h2>
<p>
Run-time files are files your application must have in order to work correctly after installation. These files are needed by all Visual Basic applications. The following are the run-time files for Visual Basic projects:
<ul type=disc>
<li>
Msvbvm60.dll<br><br></li>
<li>
Stdole2.tlb<br><br></li>
<li>
Oleaut32.dll<br><br></li>
<li>
Olepro32.dll<br><br></li>
<li>
Comcat.dll<br><br></li>
<li>
Asyncfilt.dll<br><br></li>
<li>
Ctl3d32.dll</li>
</ul>
<p>
While these files are needed by all Visual Basic applications, they may not be necessary for every type of installation package. For example, when creating an Internet package, the Package and Deployment Wizard assumes that any computer capable of performing an Internet download already has all of these files except for Msvbvm60.dll. Therefore this is the only run-time file that the wizard includes in an Internet package.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Run-time files can be further classified by their installation location. See "Where to Install Files on the User's Machine" for more information.</p>
<h2>Setup Files for Standard Packages</h2>
<p>
Setup files are all of the files required to set up your standard application on the user's machine. These include the setup executables (setup.exe and setup1.exe), the setup file list (Setup.lst), and the uninstall program (st6unst.exe).</p>
<p>
Visual Basic applications that are designed to be distributed on disk, on CD, or from a network location use the same setup files, regardless of whether you use the Package and Deployment Wizard or the Setup Toolkit to create your setup programs. These files are listed below.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>File name</b></td>
<td class=label width=72%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%>setup.exe</td>
<td width=72%>Program that the user runs to pre-install the files that are needed for your application to be installed on the user's machine. For example, the setup.exe file installs the setup1.exe file, the Visual Basic run-time DLL, and other files without which the rest of the setup process cannot run.</td>
</tr>
<tr valign=top>
<td width=28%>setup1.exe </td>
<td width=72%>The setup program for your Visual Basic application. This executable file is generated by the Setup Toolkit and included in the package by the Package and Deployment Wizard. You can rename this file as long as the new name is reflected in the Setup.lst file.</td>
</tr>
<tr valign=top>
<td width=28%>Setup.lst</td>
<td width=72%>Text file that contains installation instructions and lists all the files to be installed on the user's machine.</td>
</tr>
<tr valign=top>
<td width=28%>Vb6stkit.dll</td>
<td width=72%>Library containing various functions used in Setup1.exe.</td>
</tr>
<tr valign=top>
<td width=28%>St6unst.exe</td>
<td width=72%>Application removal utility.</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Applications designed to be delivered over the Internet generally do not use any of these files. See "Internet Packages" earlier in this chapter for more information on the files involved in Internet delivery.</p>
<h2>Application Dependencies</h2>
<p>
In order to run your application, end users will need certain files in addition to the common run-time files and special setup files. Many of these files will be obvious to you: the executable file, any data files, and any ActiveX controls that you used. The less obvious files are your project's other dependent files. For example, some of the ActiveX controls used by your project may in turn require other files. One of the tasks of the Package and Deployment Wizard is to determine the complete list of such required files.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Dependency Files" earlier in this chapter for information on using the Package and Deployment Wizard to create dependency files for your application.</p>
</BODY>
</HTML>
