<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing Code Using Dynamic HTML</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconwritingcodeusingdynamichtml"></a>Writing Code Using Dynamic HTML</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUnderstandingPageDesignersObjectModelC;vbconWritingCodeUsingDynamicHTML_C">
</object></p>
<p>
When you create a DHTML application in Visual Basic, you use the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="IDH_vbdefDynamicHTML">
</object><a href=JavaScript:alink_2.Click()>Dynamic HTML</a> object model to access and manipulate anything within the page. The HTML elements in the page are available as individual objects, which means you can examine and modify an element and its attributes by reading and setting properties and by calling methods.</p>
<p>
The object model also makes user actions — such as clicking, double-clicking, or right-clicking an element, pressing keys, and loading forms — available as events. You can intercept and process these and other events by creating event procedures in your Visual Basic code.</p>
<p>
For a Visual Basic programmer, there are many aspects of the Dynamic HTML object model that are unfamiliar. The following sections present an overview of some of the key differences between Visual Basic’s programming model and the Dynamic HTML object model. The following table explains some of the areas where you may encounter differences and lists the sections to which you can go for more information.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=44%><b>If you need help</b></td>
<td class=label width=56%><b>See </b></td>
</tr>
<tr valign=top>
<td width=44%>Understanding the object model</td>
<td width=56%>"<a href="vbconthedynamichtmlobjectmodel.htm">The Dynamic HTML Object Model in Visual Basic</a>"</td>
</tr>
<tr valign=top>
<td width=44%>Understanding what Visual Basic events the events in Dynamic HTML correspond to</td>
<td width=56%>"<a href="vbconeventsindynamichtml.htm">Events in Dynamic HTML</a>"</td>
</tr>
<tr valign=top>
<td width=44%>Making elements on your page programmable</td>
<td width=56%>"<a href="vbconmakingpageelementsprogrammable.htm">Making Page Elements Programmable</a>"</td>
</tr>
<tr valign=top>
<td width=44%>Working with styles</td>
<td width=56%>"<a href="vbconsettingretrievingpropertiesforwebpage.htm">Setting and Retrieving Properties for a Web Page</a>" or "<a href="vbcondynamichtmlclientinternetapplications.htm">Dynamic HTML in Visual Basic</a>"</td>
</tr>
<tr valign=top>
<td width=44%>Working with text elements in your pages</td>
<td width=56%>"<a href="vbconhandlingtextinpagedesigner.htm">Handling Text in the Page Designer</a>"</td>
</tr>
<tr valign=top>
<td width=44%>Retrieving data from a form or other elements within an HTML page</td>
<td width=56%>"<a href="vbconretrievingdatafromhtmlpage.htm">Retrieving Data from an HTML Page</a>"</td>
</tr>
<tr valign=top>
<td width=44%>Navigating among pages</td>
<td width=56%>"<a href="vbconnavigatingindhtmlapplications.htm">Navigating in DHTML Applications</a>"</td>
</tr>
<tr valign=top>
<td width=44%>Creating elements on the fly and inserting them, with events, onto the HTML page</td>
<td width=56%>"<a href="vbcondynamicallycreatingelementsevents.htm">Dynamically Creating Elements and Events</a>"</td>
</tr>
<tr valign=top>
<td width=44%>Storing and retrieving state information</td>
<td width=56%>"<a href="vbconhandlingstateinclientinternetapplications.htm">Managing State in DHTML Applications</a>" </td>
</tr>
</table><br>
</BODY>
</HTML>
