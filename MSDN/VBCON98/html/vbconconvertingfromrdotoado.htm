<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Converting from RDO to ADO</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconconvertingfromrdotoado"></a>Converting from RDO 2.0 to ADO 2.0</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconConvertingFromRDOToADO_C">
</object></p>
<p>
One of Microsoft's newest data access technologies is ActiveX Data Objects (ADO). ADO is a replacement for the older DAO and, in particular, RDO data access interfaces, and gives you additional features not found in either.</p>
<p>
This chapter assumes that you're currently using RDO for data access and that you're considering migrating to ADO, and it provides you with information on how to convert your application to use ADO.</p>
<h2>Topics</h2>
<ul type=disc>
<li>
<a href="vbconadocomparedwithrdodao.htm">ADO Compared with RDO and DAO</a><br><br></li>
<li>
<a href="vbconhowtoreferenceadoinvisualbasic.htm">How to Reference ADO 2.0 in Visual Basic</a><br><br></li>
<li>
<a href="vbcontheadoobjectmodel.htm">The ADO 2.0 Object Model</a><br><br></li>
<li>
<a href="vbconrdoversusadoincommondataaccessscenarios.htm">RDO Versus ADO in Common Data Access Scenarios</a><br><br></li>
<li>
<a href="vbconmoreadvancedrdoadodataaccessscenarios.htm">Advanced RDO/ADO Data Access Scenarios</a></li>
</ul>
</BODY>
</HTML>
