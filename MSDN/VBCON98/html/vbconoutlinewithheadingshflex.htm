<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying an Outline with Headings using the Hierarchical FlexGrid</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconoutlinewithheadingshflex"></a>Displaying an Outline with Headings using the Hierarchical FlexGrid</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconOutlineWithHeadingsHFlex_C">
</object></p>
<p>
In this scenario you can use the Hierarchical FlexGrid to create an outline-style display with heading items that you can collapse or expand.</p>
<p class=label>
<b>To create this data display</b>
<ol>
<li>
Set the properties of the Hierarchical FlexGrid.<br><br></li>
<li>
Create the data.<br><br></li>
<li>
Add collapse and expand functionality.</li>
</ol>
<p>
To complete the scenario, follow the procedures in this section in the order shown.</p>
<h2>Setting the Properties of the Control</h2>
<p>
Set four column headings using the <b>FormatString</b> property. Set the first column as narrow and empty (like a spreadsheet) and the other three to contain data (include the spacing between each heading). In addition, set the following:</p>
<p class=label>
<b>MSHFlexGrid control</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Property</b></td>
<td class=label width=50%><b>Setting</b></td>
</tr>
<tr valign=top>
<td width=50%>Name</td>
<td width=50%>Fg3</td>
</tr>
<tr valign=top>
<td width=50%>Cols</td>
<td width=50%>4</td>
</tr>
<tr valign=top>
<td width=50%>Rows</td>
<td width=50%>2</td>
</tr>
<tr valign=top>
<td width=50%>Selection Mode</td>
<td width=50%>1 – By Row</td>
</tr>
<tr valign=top>
<td width=50%>FillStyle</td>
<td width=50%>1 – Repeat</td>
</tr>
<tr valign=top>
<td width=50%>FocusRect</td>
<td width=50%>0 – None</td>
</tr>
<tr valign=top>
<td width=50%>GridLines</td>
<td width=50%>0 – None</td>
</tr>
<tr valign=top>
<td width=50%>GridLinesFixed</td>
<td width=50%>2 – Inset</td>
</tr>
<tr valign=top>
<td width=50%>FormatString</td>
<td width=50%>^ |Description |&gt;Date |&gt;Amount</td>
</tr>
<tr valign=top>
<td width=50%>FontName</td>
<td width=50%>Arial</td>
</tr>
</table><br>
<h2>Creating an Outline Display with Headings</h2>
<p>
Use the following procedure to complete the scenario of creating an outline display with headings using the Hierarchical FlexGrid.</p>
<p class=label>
<b>To create an outline display with headings</b>
<ol>
<li>
Create the sample data, and set the headings, column, and row properties. To do this, insert the following code into the Form_Load event of the <b>Code Editor </b>window. This creates sample data, sets up and calculates the headings at the top of the control, and sets the <b>Col</b> and <b>Row</b> properties to select the first cell at run time.<pre><code>Sub Form_Load ()
 &nbsp; Dim i As Integer, tot As Integer
 &nbsp; Dim t As String, s As String

<b> &nbsp; '</b> Create sample data.
 &nbsp; t = Chr(9)
 &nbsp; Fg3.Rows = 1

 &nbsp; Fg3.AddItem "*" + t + "Airfare"
 &nbsp; s = "" +t+ "SFO-JFK" +t+ "9-Apr-95" +t+ "750.00"
 &nbsp; For i = 0 to 5
 &nbsp;&nbsp;&nbsp;&nbsp; Fg3.AddItem s
 &nbsp; Next

 &nbsp; Fg3.AddItem "*" + t + "Meals"
 &nbsp; s = "" +t+ "Flint's BBQ" +t+ "25-Apr-95" _
 &nbsp; +t+ "35.00"
 &nbsp; For i = 0 to 5
 &nbsp;&nbsp;&nbsp;&nbsp; Fg3.AddItem s
 &nbsp; Next

 &nbsp; Fg3.AddItem "*" +t+ "Hotel"
 &nbsp; s = "" +t+ "Center Plaza" +t+ "25-Apr-95" _
 &nbsp; +t+ "817.00"
 &nbsp; For i = 0 to 5
 &nbsp;&nbsp;&nbsp;&nbsp; Fg3.AddItem s
 &nbsp; Next

 &nbsp; ' Add up totals and format heading entries.
<b> &nbsp; </b>For i = Fg3.Rows - 1 To 0 Step -1
 &nbsp;&nbsp;&nbsp;&nbsp; If Fg3.TextArray(i * Fg3.Cols) = "" Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tot = tot + Val(Fg3.TextArray _
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (i * Fg3.Cols + 3))
 &nbsp;&nbsp;&nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.Row = i
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.Col = 0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.ColSel = Fg3.Cols - 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.CellBackColor = &amp;HC0C0C0
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.CellFontBold = True
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.CellFontWidth = 8
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.TextArray(i * Fg3.Cols + 3) = _
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Format(tot, "0")
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tot = 0
 &nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp; Next
 &nbsp; Fg3.ColSel = Fg3.Cols - 1

 &nbsp; ' Format Grid
 &nbsp; Fg3.ColWidth(0) = 300
 &nbsp; Fg3.ColWidth(1) = 1500
 &nbsp; Fg3.ColWidth(2) = 1000
 &nbsp; Fg3.ColWidth(3) = 1000

End Sub
</code></pre>
<p class=tl>
At run time, the rows are sorted into three divisions, grouped by their respective headings: Air Fare, Meals, and Hotels, as shown in the following figure:</P><p>
<img src="vb536f1.gif" border=0></P></li>
<li>
Add collapse and expand functionality to the row headings by inserting the following code in the <b>DblClick</b> event procedure of the Hierarchical FlexGrid:<pre><code>Sub Fg3_DblClick ()
 &nbsp; Dim i As Integer, r As Integer

<b> &nbsp; '</b> Ignore top row.
 &nbsp; r = Fg3.MouseRow
 &nbsp; If r &lt; 1 Then Exit Sub

<b> &nbsp; ' </b>Find field to collapse or expand.
 &nbsp; While r &gt; 0 And Fg3.TextArray(r * Fg3.Cols) = ""
 &nbsp;&nbsp;&nbsp;&nbsp; r = r - 1
 &nbsp; Wend

<b> &nbsp; ' </b>Show collapsed/expanded symbol on first column.
 &nbsp; If Fg3.TextArray(r * Fg3.Cols) = "*" Then
 &nbsp;&nbsp;&nbsp;&nbsp; Fg3.TextArray(r * Fg3.Cols) = "+"
 &nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp; Fg3.TextArray(r * Fg3.Cols) = "*"
 &nbsp; End If

<b> &nbsp; ' </b>Expand items under current heading.
 &nbsp; r = r + 1
 &nbsp; If Fg3.RowHeight(r) = 0 Then
 &nbsp;&nbsp;&nbsp;&nbsp; Do While Fg3.TextArray(r * Fg3.Cols) = ""
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.RowHeight(r) = -1 <b>' </b>Default row height.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r = r + 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If r &gt;= Fg3.Rows Then Exit Do
 &nbsp;&nbsp;&nbsp;&nbsp; Loop

<b> &nbsp; ' </b>Collapse items under current heading.
 &nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp; Do While Fg3.TextArray(r * Fg3.Cols) = ""
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fg3.RowHeight(r) = 0<b> &nbsp; '</b> Hide row.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r = r + 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If r &gt;= Fg3.Rows Then Exit Do
 &nbsp;&nbsp;&nbsp;&nbsp; Loop
 &nbsp; End If
End Sub
</code></pre>
<p class=tl>
Once all the steps in this scenario are complete, you can expand and collapse the row headings by double clicking on the "+" or "*" symbols in the first column at run time, as shown in the following figure:</P><p>
<img src="vb536f2.gif" border=0></P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can modify this example to show images instead of the "+" and "*" characters, or to add additional levels to the outline.</p></li>
</ol>
</BODY>
</HTML>
