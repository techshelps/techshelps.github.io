<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Programming with Objects</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconprogrammingwithobjects"></a>Programming with Objects</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconProgrammingWithObjectsC">
</object></p>
<p>
Objects are central to Visual Basic programming. Forms and controls are objects. Databases are objects. There are objects everywhere you look.</p>
<p>
If you've used Visual Basic for a while, or if you've worked through the examples in the first five chapters of this book, then you've already programmed with objects — but there's a lot more to objects than what you've seen so far.</p>
<p>
In this chapter, user-defined types will take on personalities of their own, and become classes. You'll see how easy it is to create your own objects from the classes you define, and to use objects to simplify your coding and increase code reuse.</p>
<h2>Contents</h2>
<p>
The following topics introduce the possibilities opened by programming with objects.
<ul type=disc>
<li>
What You Need to Know About Objects in Visual Basic<br><br></li>
<li>
Finding Out About Objects<br><br></li>
<li>
Creating Your Own Classes<br><br></li>
<li>
Adding Properties and Methods to a Class<br><br></li>
<li>
Adding Events to a Class<br><br></li>
<li>
Naming Properties, Methods, and Events<br><br></li>
<li>
Creating Data-Aware Classes<br><br></li>
<li>
Polymorphism<br><br></li>
<li>
Programming with Your Own Objects<br><br></li>
<li>
Object Models<br><br></li>
<li>
Creating Your Own Collection Classes<br><br></li>
<li>
ActiveX Designers</li>
</ul>
<p>
And it doesn't stop here. Chapter 10, "Programming with Components," takes the next step, showing how you can use Visual Basic to control objects provided by other applications.</p>
<h2>Sample Applications: ProgWOb.vbp, Dataware.vbp</h2>
<p>
Some of the code examples in this chapter are taken from the Programming with Objects (ProgWOb.vbp) and Data-aware Classes (Dataware.vbp) samples. The sample applications are listed in the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_2.Click()>Samples</a> directory. </p>
<h2>Topics</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbconobjectsinvisualbasic.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconobjectsinvisualbasic.htm">What You Need to Know About Objects in Visual Basic</a><p>
Reviews the correct terms to use for creating, working with, and talking about objects. Introduces the Collection object, the With statement, and other techniques for working with objects.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconfindingoutaboutobjects.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconfindingoutaboutobjects.htm">Finding Out About Objects</a><p>
Explains how to use the Object Browser to discover an object's properties, methods, and events; to find things in projects and libraries; and to add descriptions of your own objects.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingyourownclasses.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingyourownclasses.htm">Creating Your Own Classes</a><p>
Creating classes is easy — you may be surprised to learn that you've already done it. A step by step procedure introduces object creation and lifetime issues.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconaddingpropertiesmethodstoclass.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconaddingpropertiesmethodstoclass.htm">Adding Properties and Methods to a Class</a><p>
Explains how to use property procedures to create properties that can validate the values that are assigned to them, and shows how to create many different kinds of properties.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconevents.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconevents.htm">Adding Events to a Class</a><p>
Your objects can raise events that you handle in forms or in other objects.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconnamingpropertiesmethodsevents.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconnamingpropertiesmethodsevents.htm">Naming Properties, Methods, and Events</a><p>
Following a few simple rules can make your objects much easier to use, reuse, and share.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingdata-awareclasses.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingdata-awareclasses.htm">Creating Data-Aware Classes</a><p>
It’s easy to bind your object to a database or other source of data. Classes can act as either a source or a consumer of data.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconinheritancepolymorphismallthat.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconinheritancepolymorphismallthat.htm">Polymorphism</a><p>
It's useful to be able to treat both a Tyrannosaur and a Flea as Animals. Polymorphism lets you do this through multiple interfaces — which also provide new ways to let your programs evolve.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconprogrammingwithyourownobjects.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconprogrammingwithyourownobjects.htm">Programming with Your Own Objects</a><p>
Once you've created objects, how do you incorporate them into programs, keep track of them, and clean up after them?</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconobjectmodels.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconobjectmodels.htm">Object Models</a><p>
How do the objects you create from your classes relate to each other? Object models express the way objects contain other objects; this can be a powerful organizing principle for your programs.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcreatingyourowncollectionclasses.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingyourowncollectionclasses.htm">Creating Your Own Collection Classes</a><p>
Exposes some limitations with the Visual Basic Collection object, and shows how you can create your own collection classes.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconactivexdesigners.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconactivexdesigners.htm">ActiveX Designers</a><p>
Designers are what put the "visual" in Visual Basic. You've used Form designers, but there's a whole new world of possibilities being opened up by ActiveX Designers.</p>
</td>
</tr>
</table><br>
<p>
And it doesn't stop here. "Programming with Components" takes the next step, showing how you can use Visual Basic to control objects provided by other applications.</p>
<h2>Sample application</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><img src="sampapp.gif" border=0></td>
<td width=94%><b>ProgWOb.vbp, Dataware.vbp</b><p>
Some of the code examples in this chapter are taken from the Programming with Objects (ProgWOb.vbp) and Data-aware Classes (Dataware.vbp) samples. You'll find these applications listed in the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_3.Click()>Samples</a> directory. .</p>
</td>
</tr>
</table>
</BODY>
</HTML>
