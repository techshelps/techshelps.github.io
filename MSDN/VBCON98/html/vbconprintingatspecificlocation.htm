<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Print Output at a Specific Location</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconprintingatspecificlocation"></a>Displaying Print Output at a Specific Location</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconPrintingAtSpecificLocationC">
</object></p>
<p>
You can control placement of Print output by specifying the drawing coordinates, using either or both of these techniques:
<ul type=disc>
<li>
Use the Cls (clear) method to erase a form or picture box and reset the drawing coordinates to the origin (0,0).<br><br></li>
<li>
Set drawing coordinates with the CurrentX and CurrentY properties.</li>
</ul>
<h2>The Cls Method</h2>
<p>
All the text and graphics on the object that were created with Print and graphics methods can be deleted with the Cls method. The Cls method also resets the drawing coordinates to the origin (0,0), which is the upper-left corner by default. For example, these statements clear:
<ul type=disc>
<li>
A picture box named Picture1:<pre><code>Picture1.Cls
</code></pre>
</li>
<li>
The current form:<pre><code>Cls
</code></pre>
</li>
</ul>
<h2>Setting Drawing Coordinates</h2>
<p>
You can set the drawing coordinates of forms and picture boxes directly with the CurrentX and CurrentY properties. For example, these statements reset the drawing coordinates to the upper-left corner for Picture1 and for the current form:
<ul type=disc>
<li>
A picture box named Picture1:<pre><code>Picture1.CurrentX = 0
Picture1.CurrentY = 0
</code></pre>
</li>
<li>
The current form:<pre><code>CurrentX = 0
CurrentY = 0
</code></pre>
</li>
</ul>
<p>
Any new text you print appears on top of any text and graphics already at that location. To erase text selectively, draw a box with the Line method and fill it with the background color. Keep in mind that the drawing coordinates specified by CurrentX and CurrentY usually change location when you use a graphics method.</p>
<p>
By default, forms and picture boxes use a coordinate system where each unit corresponds to a twip (1,440 twips equal an inch, and approximately 567 twips equal a centimeter). You may want to change the ScaleMode property of the form, picture box, or Printer object from twips to points, because text height is measured in points. Using the same unit of measure for the text and for the object where you will print the text makes it easier to calculate the position of the text.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information about twips and drawing coordinates, see "Understanding the Coordinate System" later in this chapter.</p>
<h2>The TextHeight and TextWidth Methods</h2>
<p>
Before using the Print method, you can use the TextHeight and TextWidth methods to determine where to position the CurrentX and CurrentY properties. TextHeight returns the height of a line of text, taking into account the object’s font size and style. The syntax is:</p>
<p>
[<i>object</i>.]<b>TextHeight</b>(<i>string</i>)</p>
<p>
If the <i>string</i> argument contains embedded carriage-return characters (Chr(13)), then the text corresponds to multiple lines, and TextHeight returns the height of the number of lines of text contained in the string. If there are no embedded carriage returns, TextHeight always returns the height of one line of text.</p>
<p>
One way to use the TextHeight method is to set the CurrentY property to a particular line. For example, the following statements set the drawing coordinates to the beginning of the fifth line:</p>
<pre><code>CurrentY = TextHeight("sample") * 4
CurrentX = 0
</code></pre>
<p>
Assuming there are no carriage returns in the sample text, you would use this syntax to set CurrentY to the <i>nth</i> line:</p>
<p>
<b>CurrentY</b> <b>=</b> [<i>object</i>.]<b>TextHeight</b>(<i>string</i>) <b>*</b> (<i>n</i> – 1)</p>
<p>
If <i>object</i> is omitted, the method applies to the current form. The <i>object</i> argument can be a form, a picture box, or the Printer object.</p>
<p>
The TextWidth method returns the width of a string, taking into account the object’s font size and style. This method is useful because many fonts have proportional-width characters. The TextWidth method helps you determine whether the width of the string is larger than the width of the form, picture box, or Printer object.</p>
<p>
For example, the following statements use TextWidth and TextHeight to center the text in a box by positioning CurrentX and CurrentY. The name of the box in this example is MealCard.</p>
<pre><code>CurrentX = (BoxWidth - TextWidth("MealCard")) / 2
CurrentY = (Boxheight - TextHeight("MealCard")) / 2
</code></pre>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "TextHeight Method" and "TextWidth Method" in the <i>Language Reference</i>.</p>
</BODY>
</HTML>
