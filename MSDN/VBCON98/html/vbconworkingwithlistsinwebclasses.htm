<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Lists in Webclasses</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconworkingwithlistsinwebclasses"></a>Working with Lists in Webclasses</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconWorkingWithListsInWebclasses_C">
</object></p>
<p>
One common scenario is to populate the contents of a list or select element at run time, using text replacement. List elements and select elements produce elements on your HTML page that are similar to the list box and combo box controls you use on Visual Basic forms.</p>
<h2>Prepopulating Select Elements</h2>
<p>
Select elements in HTML have the following syntax:</p>
<pre><code>&lt;select name="List1" id="List1" value="List1"&gt;
   &lt;option value="List"&gt;First list item
   &lt;option value="List"&gt;Second list item
   &lt;option value="List"&gt;Third list item
&lt;/select&gt;</code></pre>
<p>
This select element is prepopulated with the list items indicated between the &lt;select&gt; and &lt;/select&gt; tags. </p>
<h2>Populating a List Element in Code</h2>
<p>
Select elements have a restriction that only &lt;option&gt; tags may appear between the opening and closing &lt;select&gt; tags. Therefore, to populate such an element at run time using text replacements, you would do the following:
<ul type=disc>
<li>
Modify your HTML to remove the select element and put text replacement tags in its place.<br><br></li>
<li>
Write code in the ProcessTags event procedure that would insert the select element and its option tags when the tag prefix is processed.</li>
</ul>
<p>
Your resulting HTML code might look like this:</p>
<pre><code>&lt;WC@SelectElement&gt;&lt;/WC@SelectElement&gt;</code></pre>
<p>
Your code in the ProcessTags procedure would take the form:</p>
<pre><code>If TagName = "wc@SelectElement" Then
      'Code here using Response.Write to add a select element and its
      'contents to the page.
EndIf </code></pre>
<p>
<B><b>For More Information</b></B>  See "Performing Text Replacements in a Webclass" for more information on tag prefixes, the ProcessTags procedure, and replacing elements in your templates.</p>
</BODY>
</HTML>
