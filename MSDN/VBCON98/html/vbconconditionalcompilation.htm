<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Conditional Compilation</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconconditionalcompilation"></a>Using Conditional Compilation</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconConditionalCompilationC">
</object></p>
<p>
Conditional compilation lets you selectively compile certain parts of the program. You can include specific features of your program in different versions, such as designing an application to run on different platforms, or changing the date and currency display filters for an application distributed in several different languages.</p>
<h2>Structuring Code for Conditional Compiling</h2>
<p>
To conditionally compile a part of your code, enclose it between #If...Then and #EndIf statements, using a Boolean constant as the branching test. To include this code segment in compiled code, set the value of the constant to –1 (True).</p>
<p>
For example, to create French language and German language versions of the same application from the same source code, embed platform-specific code segments in #If...Then statements using the predefined constants conFrenchVersion and conGermanVersion.</p>
<pre><code>#If conFrenchVersion Then
   ' &lt;code specific to the French language version&gt;.
#ElseIf conGermanVersion then   
   ' &lt;code specific to the German language version&gt;.
#Else
   ' &lt;code specific to other versions&gt;.
#End If
</code></pre>
<p>
If the value of the conFrenchVersion constant is set to True at compile time, the conditional code for the French language version will be compiled. If the value of the conGermanVersion constant is set to True, the compiler uses the German language version.</p>
<h2>Declaring Conditional Compilation Constants</h2>
<p>
There are three ways to set conditional compilation constants: in the Conditional Compilation Arguments field of the Make tab on the Project Properties dialog box, on a command line, or in code.</p>
<p>
Conditional compilation constants have a special scope and cannot be accessed from standard code. How you set a conditional compilation constant may depend on the scope you want the constant to have.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>How Set</b></td>
<td class=label width=55%><b>Scope</b></td>
</tr>
<tr valign=top>
<td width=45%>Project Properties dialog box</td>
<td width=55%>Public to all modules in the project</td>
</tr>
<tr valign=top>
<td width=45%>Command line</td>
<td width=55%>Public to all modules in the project</td>
</tr>
<tr valign=top>
<td width=45%>#Const statement in code</td>
<td width=55%>Private to the module in which they are declared</td>
</tr>
</table><br>
<h3>Setting Constants on the Project Properties Dialog Box</h3>
<p>
Before creating the executable file, from the Project menu, choose Project Properties, click the Make tab on the Project Properties dialog box, and enter an argument, such as conFrenchVersion = –1, in the Conditional Compilation Arguments field (if you are compiling your application for the French language version). When you compile the program, this argument will satisfy the #If...Then condition, and the code between the #If...Then and #EndIf statements will be included in the compiled program.</p>
<p>
If you have a complex #If...Then statement, containing one or more #ElseIf statements, you will need to set additional constants. You can set multiple constants by separating them with colons, as in the following example:</p>
<pre><code>conFrenchVersion=-1:conANSI=0
</code></pre>
<h3>Setting Constants on the Command Line</h3>
<p>
If you want to start compilation from a command line, use the /d switch to enter conditional compilation constants, as shown here:</p>
<p>
<b>vb6.exe /make MyProj.vbp /d conFrenchVersion=–1:conANSI=0</b></p>
<p>
No space is required between the /d switch and the first constant. Command-line declarations override declarations entered on the Project Properties dialog box, but do not erase them; arguments set on the Project Properties dialog box remain in effect for subsequent compilations.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "#If…Then…#Else Directive" and "#Const Statement."</p>
</BODY>
</HTML>
