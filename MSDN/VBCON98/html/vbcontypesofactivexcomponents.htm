<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Types of ActiveX Components</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontypesofactivexcomponents"></a>Types of ActiveX Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTypesOfActiveXComponentsC">
</object></p>
<p>
ActiveX components give you the power to put together sophisticated applications from pieces that already exist. Your Visual Basic applications can include several types of ActiveX components:
<ul type=disc>
<li>
Applications that support ActiveX technology, such as Microsoft Excel, Microsoft Word, and Microsoft Access, provide objects that you can manipulate programmatically from within your Visual Basic application. For example, you can use the properties, methods, and events of a Microsoft Excel spreadsheet, Microsoft Word document, or Microsoft Access database in your application.<br><br></li>
<li>
Code components provide libraries of programmable objects. For example, a code component could include a library of specialized financial functions for spreadsheet users, or user-interface elements, such as dialog boxes, that are common to multiple applications. Unlike an object in an ActiveX-enabled application, an object in a code component can run in the same process as your application, allowing faster access to the object.<br><br></li>
<li>
You can add features without having to create them yourself by using ActiveX controls as components. ActiveX controls are available from a variety of vendors to provide many specialized features, such as displaying a calendar on a form or reading data in a particular format.<br><br></li>
<li>
ActiveX documents let you create interactive Internet applications. You can create forms that can be contained within Internet Explorer. ActiveX documents can show message boxes and secondary forms and contain ActiveX controls. ActiveX documents can also function as code components. For a step-by-step introduction to ActiveX documents, see "Creating an ActiveX Document" in the <i>Component Tools Guide, </i>available in the Professional and Enterprise editions.</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In addition to Internet applications using ActiveX documents, you can create both client-based and server-based Internet applications using a combination of Visual Basic code and HTML pages. See "Introduction to Internet Applications" in "Building Internet Applications" in the <i>Components Tools Guide </i>for more information on your options for creating Internet and intranet applications.</p>
<p>
Some ActiveX components run in the same process as your application, while others run in a separate process. For more information, see "In-Process and Out-of-Process Servers."</p>
<p>
In addition to components in existing ActiveX-enabled applications, code component libraries, ActiveX controls, and ActiveX documents, you can create your own components. For more information on creating your own ActiveX components, see "Creating ActiveX Components" in the <i>Component Tools Guide, </i>available in the<i> </i>Professional and Enterprise editions.</p>
</BODY>
</HTML>
