<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the rdoEnvironment Object to Manage Transactions</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingrdoenvironmentobjecttomanagetransactions"></a>Using the rdoEnvironment Object to Manage Transactions</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingRdoEnvironmentObjectToManageTransactionsC">
</object></p>
<p>
The BeginTrans, CommitTrans, and RollbackTrans methods are all supported on the rdoEnvironment object to begin, commit, or roll back ODBC distributed transactions. These methods are implemented using the Distributed Transaction Coordinator (DTC) on systems that support this technology. At this time, only Microsoft SQL Server 6.5 supports DTC. All connections in the rdoConnections collection for the rdoEnvironment object participate in the distributed transaction.</p>
<h2>The Microsoft Distributed Transaction Coordinator (MS DTC)</h2>
<p>
This new feature of Microsoft SQL Server coordinates transactions across a network of Microsoft Windows NT– and Microsoft Windows 95–based systems. With MS DTC, SQL Server can:
<ul type=disc>
<li>
Update data that resides on two or more SQL Server 6.5 systems.<br><br></li>
<li>
Participate in transactions that are controlled by X/Open DTP XA-compliant transaction-processing monitors, such as Transarc's Encina, AT&amp;T Global Information Solutions Company's Top End, and Tuxedo.<br><br></li>
<li>
Provide an easy-to-use graphical user interface for distributed transactions.</li>
</ul>
<p>
You can also use MS DTC by using the Distributed Transaction Coordinator command from the Server menu.</p>
<p>
Microsoft Distributed Transaction Coordinator addresses the challenges of processing transactions over a distributed set of software components that exist on a system of networked computers. MS DTC is fully integrated with Microsoft SQL Server 6.5 and provides a transaction manager in SQL Enterprise Manager at each computer that manages distributed transactions.</p>
<h2>RDO DTC-Independent Transaction Management</h2>
<p>
If the DTC is not available, or if the current ODBC driver cannot handle a distributed transaction, these methods force RDO to perform a serialized transaction across all connections in the rdoConnections collection. But these transactions are not atomic — that is, operations executed against one rdoConnection could complete, but those against another might not. In this case, the committed operations are not rolled back. Because of this, their success or failure is not interdependent.</p>
<p>
Because the rdoEnvironment object determines transaction scope in your application, committing an rdoEnvironment transaction commits all pending transactions on all open rdoConnection databases (which are opened on that rdoEnvironment object and their corresponding open rdoResultset objects). This does not imply a two-phase commit operation. It simply means that individual rdoConnection objects are instructed to commit any pending transactions — one at a time.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The ODBC transaction model does <i>not</i> support nested transactions. That is, you cannot execute a second BeginTrans method before the previous transaction is either committed or rolled back. However, if your ODBC data source supports it, you can use SQL statements to execute nested transactions. This is supported by all Microsoft SQL Server systems.</p>
<p>
When you use ODBC transactions, transactions do not span connections: Transactions begun and committed on one connection do not affect transactions pending on other connections, even if both connections are made to the same server and database.</p>
<h2>Trapping rdoEnvironment Transaction Events</h2>
<p>
The rdoEnvironment object fires an event whenever a transaction operation has completed. These events can be used to synchronize other processes with the transaction state. Basically, the BeginTrans, CommitTrans, and RollbackTrans event fire after the corresponding method has fired.</p>
</BODY>
</HTML>
