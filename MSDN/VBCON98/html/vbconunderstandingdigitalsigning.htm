<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Digital Signing for ActiveX Components</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconunderstandingdigitalsigning"></a>Digital Signing for ActiveX Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUnderstandingDigitalSigningC">
</object></p>
<p>
Internet Explorer's default security settings require that any software available for download must have a digital signature before download can occur. A digital signature provides a way to verify:
<ul type=disc>
<li>
The contents of a file.<br><br></li>
<li>
That the file comes from a responsible source.</li>
</ul>
<p>
Signatures verify content by providing a means of ensuring that a file's contents have not been altered since it was first made available for download. A digital signature verifies the source by identifying the legal entity that created the software. When you include a signature with a piece of downloadable software, you are the legal entity. The legal entity may be held responsible for any destruction caused by signed software when it is downloaded or run.</p>
<h2>Software That Should Be Signed</h2>
<p>
There are five types of files to which you can apply a digital signature:
<ul type=disc>
<li>
.exe files<br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefcabfile">
</object><a href=JavaScript:alink_2.Click()>.cab files</a><br><br></li>
<li>
.dll files<br><br></li>
<li>
.ocx files<br><br></li>
<li>
.vbd files</li>
</ul>
<p>
If you are providing one of these types of files for download, you should establish a digital signature for it.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Normally, it is sufficient to sign only the .cab file in which your components are packaged. However, if you intend to distribute an .ocx, .exe, .vbd or .dll without packaging it in a .cab file, you should sign the component itself.</p>
<p>
You provide a digital signature by purchasing a certificate from a <i>certificate authority</i>. A certificate authority is a company that validates your identity and issues a certificate to you. The certificate contains your digital signature and is a verification of your credentials. In the event of any problems, the certificate authority becomes a witness to your identity.</p>
<h2>Public Keys and Private Keys</h2>
<p>
You use a technology called <i>Authenticode</i>™ when working with digital signatures. The goal of Authenticode is to deter the distribution of potentially harmful code by creating accountability. Authenticode verifies the publisher of a piece of code to&nbsp; Internet end users who are downloading it. In addition, Authenticode ensures users that the code has not been altered after the signature was applied.</p>
<p>
Authenticode technology is derived from public key signature technology. Public key signature technology uses what are known as <i>key pairs</i> to encrypt data. Key pairs are used to encrypt and decrypt files. In public key technology, a public key and a private key ensure the privacy of files. A <i>public key</i> is used to encrypt the data, and a <i>private</i> key is used to decrypt it. While this is a successful means of protecting smaller files such as e-mail messages, the process is time consuming for larger files. Authenticode is the modified form of this technology, designed for use with larger files.</p>
<h2>Authenticode and Signing</h2>
<p>
The following steps occur in the Authenticode process:
<ol>
<li>
When the developer signs the file, a number called a <i>hash </i>is calculated. The hash number represents the total bytes in the file. This number is encrypted using a private key and inserted into the file. The developer then packages and deploys the file to a Web server.<br><br></li>
<li>
When a user downloads or installs the file, their computer calculates a second hash number and compares it to the original. If the numbers match, the content is verified.<br><br></li>
<li>
The browser uses the public key to determine your identity and the certificate authority that provided the digital signature.<br><br></li>
<li>
The certificate authority verifies the source's identity and issues a certificate that contains the source's name encrypted with the private key.<br><br></li>
<li>
The browser uses the private key to decrypt the file. Installation proceeds.</li>
</ol>
<p>
The Authenticode software utility you need to apply a digital signature can be found in the ActiveX SDK, available for download from Microsoft's Internet site. The digital signature must be obtained from an issuing authority such as GTE or VeriSign, Inc.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See the Internet Client SDK on your MSDN Library CD-ROM, or at http://www.microsoft.com/workshop/prog/inetsdk/ for more information on how to download the ActiveX SDK. For more information on public and private encryption, search the Internet for RSA or public-key signatures.</p>
<h2>Safeguarding Your Certificate</h2>
<p>
It is very important to keep your certificate safe because your firm guarantees any file signed with the certificate, regardless of whether the signature was authorized or not. You should keep the certificate with the certificate authority that issued it and send files there for signing or, if you keep the certificate on site, strictly control access to it.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See the Authenticode link on the Microsoft Security Advisor table of contents on the Microsoft Web site at http://www.microsoft.com/security to learn the latest about security and digital signing.</p>
<h2>How to Sign Your Code</h2>
<p>
You can sign any .ocx, .exe, .dll, .vbd or .cab file you intend to distribute. There are two main steps to perform when you sign code. First, you must apply for a certificate, then you sign your code.</p>
<p class=label>
<b>To sign your code</b>
<ol>
<li>
Apply for a certificate from a certificate authority. See http://www.microsoft.com/workshop/prog/security/authcode/certs.htm for instructions on obtaining a certificate.<br><br></li>
<li>
Get the latest version of the ActiveX SDK from http://www.microsoft.com/workshop/prog/sdk/. This contains the tools you need to sign your code.<br><br></li>
<li>
Prepare you files to be signed. If you are signing any .exe, .ocx, .vbd or .dll file, you do not need to do anything special. If you are signing a .cab file, you must add the following entry to your .ddf file and remake your .cab file:<pre><code>.Set ReservePerCabinetSize=6144
</code></pre>
</li>
<li>
Sign your files using the tools in the ActiveX SDK. The following is an example of how you might sign a file:<pre><code>Signcode -prog <i>myfilename </i>-name <i>displayname</i> -info <i>http://www.mycompany.com</i> - spc <i>mycredentials.spc</i> -pvk <i>myprivatekey.pvk</i>
</code></pre>
</li>
<li>
Test your signature:<ul type=disc>
<li>
To test a signed .exe, .dll, .vbd or .ocx file, run chktrust <i>filename <br>
</i>where <i>filename</i> is the name of the file you signed.<br><br></li>
<li>
To test a signed .cab file, run chktrust -c <i>cabfilename</i>.cab<br>
where <i>cabfilename</i> is the name of the .cab file you signed.</li>
</ul>
</li>
</ol>
<p>
If your signing process was successful, either of these tests will display your certificate.</p>
</BODY>
</HTML>
