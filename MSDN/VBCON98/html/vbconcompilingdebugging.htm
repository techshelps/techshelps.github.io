<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiling and Debugging the ActXDoc Project</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcompilingdebugging"></a>Running and Debugging the ActXDoc Project</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCompilingDebuggingC">
</object></p>
<p>
In order to view the FirstDoc document, you must first run the ActXDoc project, then run another container application in which to view the FirstDoc document. In this procedure, you will run Internet Explorer (included with Visual Basic), and navigate to a .vbd file to open the ActiveX document (a .vbd file is automatically generated for every ActiveX document in a project whenever the project is run).</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This topic is part of a series that walks you through creating a sample ActiveX document. It begins with the topic <a href="vbconcreatingdocumentobject.htm">Creating an ActiveX Document</a>.</p>
<p class=label>
<b>To view the FirstDoc ActiveX document</b>
<ol>
<li>
Run the project by pressing F5.<p class=tl>
The project is now running. If you use Windows Explorer to view the directory where Visual Basic resides, you will find a FirstDoc.vbd file.</P></li>
<li>
If this is the first time you've run the project, the <b>Project Properties</b> dialog box will appear. Click <b>Start Browser with URL</b>, and type the path of the FirstDoc.vbd file, which should be in the directory where you installed Visual Basic. Internet Explorer will open and display your ActiveX document.<br><br></li>
<li>
Note in the text box that the default URL is http://www.microsoft.com. You can replace this URL with another of your choice.<br><br></li>
<li>
Click the <b>Navigate To</b> button. The Web page at the URL in the text box will appear in the browser.</li>
</ol>
<h2>Debugging the FirstDoc ActiveX Document</h2>
<p>
Debugging an ActiveX document is similar to debugging other ActiveX components. You can use all the tools available in Visual Basic — setting breakpoints, watching variables, using debug statements, and so on.</p>
<p>
It's also important to remember that the container hosting the ActiveX document is its client — using objects the ActiveX document provides. While the host container is accessing the ActiveX document, stopping the project will cause an error in the host container. To avoid this, at the end of each of these procedures you will quit Internet Explorer to release the reference.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For alternatives that cause Internet Explorer to release your ActiveX document, see "Debugging ActiveX Documents" in "Building ActiveX Documents."</p>
<h3>Putting Your Project Into Break Mode</h3>
<p>
If you are running a project and are viewing it in Internet Explorer, you can put it into break mode (by pressing CTRL+BREAK) without causing any errors in the host application. However, be aware that modifying any code that causes Visual Basic to reset the project should be avoided.</p>
<p class=label>
<b>To add a Stop statement to an ActiveX document</b>
<ol>
<li>
In Internet Explorer, click the <b>Back</b> button to return to the FirstDoc ActiveX document.<br><br></li>
<li>
Press alt+tab to switch back to Visual Basic.<br><br></li>
<li>
Press CTRL+BREAK to pause the program.<br><br></li>
<li>
In the <b>Code</b> window, find the Click event for the cmdNavigateTo button, and place a Stop statement before the existing line of code, as shown:<pre><code>Private Sub cmdNavigateTo_Click()
 &nbsp; Stop ' &lt;--- Add this to the procedure.
 &nbsp; Hyperlink.NavigateTo txtURL.Text
End Sub
</code></pre>
</li>
<li>
Press f5 to continue.<br><br></li>
<li>
Press alt+tab to return to Internet Explorer.<br><br></li>
<li>
Click <b>Navigate To</b>. Visual Basic will return to the front of your desktop with the Code window visible, and the Stop statement highlighted.<br><br></li>
<li>
Press f5 to continue. Note that the Web page has been revisited.</li>
</ol>
<h3>Step by Step</h3>
<p>
This topic is part of a series that walks you through creating a sample ActiveX document.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=37%><b>To</b></td>
<td class=label width=63%><b>See</b></td>
</tr>
<tr valign=top>
<td width=37%>Go to the next step</td>
<td width=63%><a href="vbconaddingsecond.htm">Adding a Second ActiveX Document to the ActXDoc Project</a></td>
</tr>
<tr valign=top>
<td width=37%>Start from the beginning</td>
<td width=63%><a href="vbconcreatingdocumentobject.htm">Creating an ActiveX Document</a></td>
</tr>
</table>
</BODY>
</HTML>
