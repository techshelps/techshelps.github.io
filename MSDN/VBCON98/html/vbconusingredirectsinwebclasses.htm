<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Redirects in Webclasses</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingredirectsinwebclasses"></a>Navigating Between Webclasses</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingRedirectsInWebclassesC">
</object></p>
<p>
On occasion, you may want to create an application that has more than one webclass. You might do this if you want to encapsulate certain functionality within one webclass and reuse it in other locations. For example, you might want to use a webclass to handle customer order processing, then access this application from another webclass that also must perform these same processes.</p>
<p>
If you are working in an IIS application with multiple webclasses, you can use the Redirect method to navigate from one webclass to another. A redirect is generally placed in the Respond event for a webitem. When a redirect is called in an event procedure, the run-time DLL suspends processing on the current webclass, shifts focus to the indicated webclass, and launches its BeginRequest event. Control can be returned to the original webclass by using another redirect.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Each webclass in your project has its own .asp file, generated when you test or compile your project. You should specify the full path to this file in your redirect statement.</p>
<p>
The following code shows an example of a redirect. The code in this example responds to the Click event for a button named "SearchForm" on a template called "OrderSearch." The webclass checks to see whether the action was fired as a result of a search request. If so, it uses the Request object to retrieve information from the form. If not, the server redirects to the first page in the application.</p>
<pre><code>Private Sub OrderSearch_SearchForm()
   'if a search was initialized, retrieve form arguments
   If Request.Form("ACTION") = "Search" Then
      sCustMun = Request.Form("custNO")
      sOrderNum = Request.Form("orderNO")
      sLastName = Request.Form("custLN")
      'Navigate to an order status page
      Set NextItem = OrderStatus
   Else
      'if not, redirect to the opening page
      Response.Redirect "http://www.myserver.com/mydirectory/
      Project1_Welcome.asp"
   End If
End Sub
</code></pre>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "An Introduction to Webclasses" for more information about how an ASP page is used in a webclass.</p>
</BODY>
</HTML>
