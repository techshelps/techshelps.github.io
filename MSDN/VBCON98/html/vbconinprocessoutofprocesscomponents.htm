<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>In-Process and Out-of-Process Components</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconinprocessoutofprocesscomponents"></a>In-Process and Out-of-Process Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconInProcessOutOfProcessComponentsC">
</object></p>
<p>
An application or component that uses objects provided by another component is called a <i>client.</i></p>
<p>
Components are characterized by their location relative to clients. An <i>out-of-process</i> component is an .exe file that runs in its own process, with its own thread of execution. Communication between a client and an out-of-process component is therefore called <i>cross-process</i> or <i>out-of-process</i> communication.</p>
<p>
An <i>in-process</i> component, such as a .dll or .ocx file, runs in the same process as the client. It provides the fastest way of accessing objects, because property and method calls don’t have to be marshaled across process boundaries. However, an in-process component must use the client’s thread of execution.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;"Building Code Components" discusses in-process and out-of-process components in depth, including thread-safe DLLs and multithreaded EXE components. Control components (.ocx files) are always in-process, as discussed in depth in "Building ActiveX Controls." Components that provide active documents can run in process or out of process, as discussed in "Building ActiveX Documents."</p>
</BODY>
</HTML>
