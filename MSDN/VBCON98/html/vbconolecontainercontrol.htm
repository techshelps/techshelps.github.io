<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the OLE Container Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconolecontainercontrol"></a>Using the OLE Container Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconOLEContainerControlC">
</object></p>
<p>
You can link or embed any object that supports Automation (formerly called OLE Automation) into the OLE container control. Using this control, your Visual Basic application can display and manipulate data from other Windows–based applications, such as Microsoft Excel and Microsoft Word for Windows.</p>
<p class=label>
<b>Figure 7.38&nbsp;&nbsp;&nbsp;The OLE container control</b></p>
<p>
<img src="avp07015.gif" border=0></p>
<p>
The OLE container control is used to create a document-centered application. In such an application, the user combines data from different applications to create a single document. This type of application may be a word processor that allows the user to enter text and then embed a spreadsheet or chart.</p>
<p>
The OLE container control allows you to add objects from other applications to your Visual Basic applications. With this control, you can:
<ul type=disc>
<li>
Create a placeholder in your application for an object. You can create the object that appears within the OLE container control at run time, or you can change an object you have placed in the OLE container control at design time.<br><br></li>
<li>
Create a linked object in your application.<br><br></li>
<li>
Bind the OLE container control to a database.<br><br></li>
<li>
Perform an action if the user moves, sizes, or updates the object in the OLE container control.<br><br></li>
<li>
Create objects from data that was copied onto the Clipboard.<br><br></li>
<li>
Display objects as icons.<br><br></li>
<li>
Provide backward compatibility with an application that includes many OLE container controls (called OLE client controls in previous versions of Visual Basic).</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Using a Component's Visual Interface" "Programming with Components" for a detailed discussion and examples of how the OLE container control is used.</p>
</BODY>
</HTML>
