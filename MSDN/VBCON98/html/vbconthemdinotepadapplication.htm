<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The MDI NotePad Application</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconthemdinotepadapplication"></a>The MDI NotePad Application</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTheMDINotePadApplicationC">
</object></p>
<p>
The MDI NotePad sample application is a simple text editor similar to the NotePad application included with Microsoft Windows. The MDI NotePad application, however, uses a multiple-document interface (MDI). At run time, when the user requests a new document (implemented with the New command on the application's File menu), the application creates a new instance of the child form. This allows the user to create as many child forms, or documents, as necessary.</p>
<p>
To create a document-centered application in Visual Basic, you need at least two forms — an MDI form and a child form. At design time, you create an MDI form to contain the application and a single child form to serve as a template for the application's document.</p>
<p class=label>
<b>To create your own MDI NotePad application</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>New Project</b>.<br><br></li>
<li>
From the <b>Project</b> menu, choose <b>Add MDI Form</b> to create the container form.<p class=tl>
The project should now contain an MDI form (MDIForm1) and a standard form (Form1).</P></li>
<li>
Create a text box (Text1) on Form1.<br><br></li>
<li>
Set properties for the two forms and the text box as follows.<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Object</b></td>
<td class=label width=34%><b>Property</b></td>
<td class=label width=35%><b>Setting</b></td>
</tr>
<tr valign=top>
<td width=31%>MDIForm1</td>
<td width=34%>Caption</td>
<td width=35%>MDI NotePad</td>
</tr>
<tr valign=top>
<td width=31%>Form1</td>
<td width=34%>Caption<br>
MDIChild</td>
<td width=35%>Untitled<br>
True</td>
</tr>
<tr valign=top>
<td width=31%>Text1</td>
<td width=34%>MultiLine<br>
Text<br>
Left<br>
Top</td>
<td width=35%>True<br>
(Empty)<br>
0<br>
0</td>
</tr>
</table><br>
</li>
<li>
Using the <b>Menu Editor</b> (from the <b>Tools</b> menu), create a File menu for MDIForm1.<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Caption</b></td>
<td class=label width=34%><b>Name</b></td>
<td class=label width=35%><b>Indented</b></td>
</tr>
<tr valign=top>
<td width=31%>&amp;File</td>
<td width=34%>mnuFile</td>
<td width=35%>No</td>
</tr>
<tr valign=top>
<td width=31%>&amp;New</td>
<td width=34%>mnuFileNew</td>
<td width=35%>Yes</td>
</tr>
</table><br>
</li>
<li>
Add the following code to the mnuFileNew_Click procedure:<pre><code>Private Sub mnuFileNew_Click ()
' Create a new instance of Form1, called NewDoc.
Dim NewDoc As New Form1
' Display the new form.
NewDoc.Show
End Sub
</code></pre>
<p class=tl>
This procedure creates and then displays a new instance (or copy) of Form1, called NewDoc. Each time the user chooses New from the File menu, an exact duplicate (instance) of Form1 is created, including all the controls and code that it contains.</P></li>
<li>
Add the following code to the Form_Resize procedure for Form1:<pre><code>Private Sub Form_Resize ()
' Expand text box to fill the current child form.
Text1.Height = ScaleHeight
Text1.Width = ScaleWidth
End Sub
</code></pre>
<p class=tl>
The code for the Form_Resize event procedure, like all the code in Form1, is shared by each instance of Form1. When several copies of a form are displayed, each form recognizes its own events. When an event occurs, the code for that event procedure is called. Because the same code is shared by each instance, you might wonder how to reference the form that has called the code — especially since each instance has the same name (Form1). This is discussed in "Working with MDI Forms and Child Forms," later in this chapter.</P></li>
<li>
Press F5 to run the application.</li>
</ol>
<p class=indent>
<b><B>Tip</B>&nbsp;&nbsp;&nbsp;</b>The Mdinote.vbp sample application contains examples of many MDI techniques besides those mentioned in this chapter. Take some time to step through the example code to discover these techniques. The Sdinote.vbp sample application is an implementation of the same application converted to the SDI style; compare the two samples to learn the differences between MDI and SDI techniques.</p>
</BODY>
</HTML>
