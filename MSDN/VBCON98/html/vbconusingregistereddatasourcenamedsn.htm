<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Registered Data Source Name (DSN)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingregistereddatasourcenamedsn"></a>Using a Registered Data Source Name (DSN)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingRegisteredDataSourceNameDSNC">
</object></p>
<p>
The simplest way to establish a connection is to use a registered Data Source Name (DSN) to hold information about the server. Since a DSN contains no information about the user or application, you need to provide that information either in the connect string or by using one of the prompt options that gathers the information from the user.</p>
<p>
DSN entries are created either through the Windows Control Panel or the rdoRegisterDataSource method. However, using the Windows Data Sources dialog box is the preferred way to create, modify, or delete data source names. To open this dialog box, double-click 32-bit ODBC in the Windows Control Panel.</p>
<p>
Registered DSN entries are referred to by name in the:
<ul type=disc>
<li>
OpenConnection method's <b><i>dsName</i></b> argument.<br><br></li>
<li>
Database property of the RemoteData control.<br><br></li>
<li>
Connect string passed to the OpenConnection method as the <b><i>connect</i></b> argument.<br><br></li>
<li>
Connect property of the rdoConnection object used with the EstablishConnection method.<br><br></li>
<li>
Connect property of the RemoteData control.</li>
</ul>
<p>
The connect string always takes precedence.</p>
<p>
Note that the DSN contains a number of arguments that can only be set using ODBC API functions programmatically, using the rdoRegisterDataSource function, or using the Windows Control Panel. These options cannot be set via connect string arguments. For example, the OEMTOANSI and NETWORK settings can't be set with connect string arguments.</p>
<p>
You cannot use an ODBC driver that has not been installed and registered. This process is already part of the Visual Basic setup procedure but also needs to be included in your application's setup procedure.</p>
<p>
The following example registers a SQL Server data source named <i>Example</i>, on a server named <i>SEQUEL</i>, and then opens the database <i>WorkDB</i> on that server. </p>
<pre><code>Private Sub RegisterDataSource()
Dim en As rdoEnvironment
Dim cnTest As rdoConnection
Dim strAttribs As String
' Build keywords string.
strAttribs = "Description=" _ 
      &amp; "SQL Server on server SEQUEL" _ 
   &amp; Chr$(13) &amp; "OemToAnsi=No" _ 
   &amp; Chr$(13) &amp; "SERVER=SEQUEL" _ 
   &amp; Chr$(13) &amp; "Network=DBNMPNTW" _ 
   &amp; Chr$(13) &amp; "Database=WorkDB" _ 
   &amp; Chr$(13) &amp; "Address=\\SEQUEL\PIPE\SQL\QUERY"

' Create new registered DSN.
rdoEngine.rdoRegisterDataSource "Example", _ 
      "SQL Server", True, strAttribs
' Open the database.
Set en = rdoEngine.rdoEnvironments(0)
Set cnTest = en.OpenConnection( _ 
   dsname:="Example", _ 
   Prompt:=rdDriverNoPrompt, _ 
   Connect:="UID=;PWD=;")
End Sub
</code></pre>
</BODY>
</HTML>
