<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Editing Cells in a Hierarchical FlexGrid Spreadsheet</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconeditingcellsinhflexsprdsht"></a>Editing Cells in a Hierarchical FlexGrid Spreadsheet</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconEditingCellsInHFlexSprdsht_C">
</object></p>
<p>
In this scenario, you can edit cells in a Hierarchical FlexGrid spreadsheet. This scenario illustrates some of the capabilities of the Hierarchical FlexGrid's control events and containers, and shows how this control can be used to create a spreadsheet with in-cell editing using standard Visual Basic controls.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The sample application (Flex.vbp) demonstrates the functionality necessary for navigating around and selecting ranges of cells.</p>
<p class=label>
<b>To create this data display</b>
<ol>
<li>
Create Hierarchical FlexGrid and TextBox controls.<br><br></li>
<li>
Set the properties of these controls.<br><br></li>
<li>
Add row and column headings to the Hierarchical FlexGrid.<br><br></li>
<li>
Add in-cell editing to the Hierarchical FlexGrid.<br><br></li>
<li>
Add functionality to the TextBox control (the "edit" box) for updating the data.<br><br></li>
<li>
Copy the data from the text box to the Hierarchical FlexGrid.</li>
</ol>
<p>
To complete the scenario, follow the procedures in this section in the order shown.</p>
<h2>Creating the Controls</h2>
<p>
Add a Hierarchical FlexGrid to your project, and then add a TextBox control to it to create a parent-child relationship, as shown:</p>
<p>
<img src="vb536e1.gif" border=0></p>
<h2>Setting the Properties of the Controls</h2>
<p>
Set the properties of the Hierarchical FlexGrid and TextBox controls as follows:</p>
<p class=label>
<b>MSHFlexGrid control</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Property</b></td>
<td class=label width=50%><b>Setting</b></td>
</tr>
<tr valign=top>
<td width=50%>Name</td>
<td width=50%>Fg2</td>
</tr>
<tr valign=top>
<td width=50%>Cols</td>
<td width=50%>6</td>
</tr>
<tr valign=top>
<td width=50%>Rows</td>
<td width=50%>20</td>
</tr>
<tr valign=top>
<td width=50%>FillStyle</td>
<td width=50%>1 – Repeat</td>
</tr>
<tr valign=top>
<td width=50%>FocusRect</td>
<td width=50%>2 – Heavy</td>
</tr>
<tr valign=top>
<td width=50%>FontName</td>
<td width=50%>Arial</td>
</tr>
<tr valign=top>
<td width=50%>FontSize</td>
<td width=50%>9</td>
</tr>
</table><br>
<p class=label>
<b>TextBox control</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Property</b></td>
<td class=label width=50%><b>Setting</b></td>
</tr>
<tr valign=top>
<td width=50%>Name</td>
<td width=50%>TxtEdit</td>
</tr>
<tr valign=top>
<td width=50%>FontName</td>
<td width=50%>Arial</td>
</tr>
<tr valign=top>
<td width=50%>FontSize</td>
<td width=50%>9</td>
</tr>
<tr valign=top>
<td width=50%>BorderSize</td>
<td width=50%>0 – None</td>
</tr>
<tr valign=top>
<td width=50%>Visible</td>
<td width=50%>False</td>
</tr>
</table><br>
<h2>Editing Cells in a Spreadsheet</h2>
<p>
Use the following procedures to edit cells in your Hierarchical FlexGrid.</p>
<p class=label>
<b>To edit cells in a spreadsheet</b>
<ol>
<li>
Modify your Hierarchical FlexGrid, so it resembles a spreadsheet, by adding the following code to the Form_Load procedure in the <b>Code Editor </b>window:<pre><code>Sub Form_Load ()
 &nbsp; Dim i As Integer

<b> &nbsp; ' </b>Make first column narrow.
 &nbsp; Fg2.ColWidth(0) = Fg2.ColWidth(0) / 2
 &nbsp; Fg2.ColAlignment(0) = 1&nbsp;&nbsp; ' Center center.

<b> &nbsp; '</b> Label rows and columns.
 &nbsp; For i = Fg2.FixedRows To Fg2.Rows - 1
 &nbsp;&nbsp;&nbsp;&nbsp; Fg2.TextArray(fgi(i, 0)) = i
 &nbsp; Next
 &nbsp; For i = Fg2.FixedCols To Fg2.Cols - 1
 &nbsp;&nbsp;&nbsp;&nbsp; Fg2.TextArray(fgi(0, i)) = i
 &nbsp; Next

<b> &nbsp; '</b> Initialize edit box (so it loads now).
 &nbsp; txtEdit = ""
End Sub
</code></pre>
</li>
<li>
Create a function to calculate an index for the <b>TextArray</b> property as follows:<pre><code>Function Fgi (r As Integer, c As Integer) As Integer
 &nbsp; Fgi = c + Fg2.Cols * r
End Function
</code></pre>
</li>
<li>
Add the following code to the Hierarchical FlexGrid's <b>KeyPress</b> and <b>DblClick</b> events:<pre><code>Sub Fg2_KeyPress (KeyAscii As Integer)
 &nbsp; MSHFlexGridEdit Fg2, txtEdit, KeyAscii
End Sub

Sub Fg2_DblClick ()
 &nbsp; MSHFlexGridEdit Fg2, txtEdit, 32 ' Simulate a space.
End Sub
</code></pre>
</li>
<li>
Add the following routine to initialize the text box and pass the focus from the Hierarchical FlexGrid to the TextBox control:<pre><code>Sub MSHFlexGridEdit (MSHFlexGrid As Control, _
Edt As Control, KeyAscii As Integer)

<b> &nbsp; '</b> Use the character that was typed.
 &nbsp; Select Case keyascii

<b> &nbsp; '</b> A space means edit the current text.
 &nbsp; Case 0 To 32
 &nbsp;&nbsp;&nbsp;&nbsp; Edt = MSHFlexGrid
 &nbsp;&nbsp;&nbsp;&nbsp; Edt.SelStart = 1000

<b> &nbsp; ' </b>Anything else means replace the current text.
 &nbsp; Case Else
 &nbsp;&nbsp;&nbsp;&nbsp; Edt = Chr(keyascii)
 &nbsp;&nbsp;&nbsp;&nbsp; Edt.SelStart = 1
 &nbsp; End Select

<b> &nbsp; ' </b>Show Edt at the right place.
 &nbsp; Edt.Move MSHFlexGrid.Left + MSHFlexGrid.CellLeft, _
 &nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.Top + MSHFlexGrid.CellTop, _
 &nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.CellWidth - 8, _
 &nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.CellHeight - 8
 &nbsp; Edt.Visible = True

<b> &nbsp; ' </b>And make it work.
 &nbsp; Edt.SetFocus
End Sub
</code></pre>
</li>
<li>
Add updating data functionality to the text box by adding the following routines to its <b>KeyPress</b> and <b>DblClick</b> events:<pre><code>Sub txtEdit_KeyPress (KeyAscii As Integer)
<b> &nbsp; ' </b>Delete returns to get rid of beep.
 &nbsp; If KeyAscii = Asc(vbCr) Then KeyAscii = 0
End Sub

Sub txtEdit_KeyDown (KeyCode As Integer, _
Shift As Integer)
 &nbsp; EditKeyCode Fg2, txtEdit, KeyCode, Shift
End Sub

Sub EditKeyCode (MSHFlexGrid As Control, Edt As _
Control, KeyCode As Integer, Shift As Integer)

<b> &nbsp; '</b> Standard edit control processing.
 &nbsp; Select Case KeyCode

 &nbsp; Case 27&nbsp;&nbsp; ' ESC: hide, return focus to MSHFlexGrid.
 &nbsp;&nbsp;&nbsp;&nbsp; Edt.Visible = False
 &nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.SetFocus

 &nbsp; Case 13&nbsp;&nbsp; ' ENTER return focus to MSHFlexGrid.
 &nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.SetFocus

 &nbsp; Case 38&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Up.
 &nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.SetFocus
 &nbsp;&nbsp;&nbsp;&nbsp; DoEvents
 &nbsp;&nbsp;&nbsp;&nbsp; If MSHFlexGrid.Row &gt; MSHFlexGrid.FixedRows Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.Row = MSHFlexGrid.Row - 1
 &nbsp;&nbsp;&nbsp;&nbsp; End If

 &nbsp; Case 40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Down.
 &nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.SetFocus
 &nbsp;&nbsp;&nbsp;&nbsp; DoEvents
 &nbsp;&nbsp;&nbsp;&nbsp; If MSHFlexGrid.Row &lt; MSHFlexGrid.Rows - 1 Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MSHFlexGrid.Row = MSHFlexGrid.Row + 1
 &nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp; End Select
End Sub
</code></pre>
<p class=tl>
Next, you need to instruct the Hierarchical FlexGrid what to do with the data when it is entered into the text box. The focus returns to the control after the user enters the data and either presses enter or clicks a different cell in the Hierarchical FlexGrid. Therefore, you must copy the data from the text box into the active cell; to do this, continue with the following steps.</P></li>
<li>
Copy the data from the text box to the Hierarchical FlexGrid by adding the following code to the <b>GotFocus</b> and <b>LeaveCell</b> event procedures:<pre><code>Sub Fg2_GotFocus ()
 &nbsp; If txtEdit.Visible = False Then Exit Sub
 &nbsp; Fg2 = txtEdit
 &nbsp; txtEdit.Visible = False
End Sub

Sub Fg2_LeaveCell ()
 &nbsp; If txtEdit.Visible = False Then Exit Sub
 &nbsp; Fg2 = txtEdit
 &nbsp; txtEdit.Visible = False
End Sub
</code></pre>
<p class=tl>
Once the procedures in this scenario are complete, data can be entered into individual cells at run time, as shown in the following figure.</P></li>
</ol>
<p>
<img src="vb536e2.gif" border=0></p>
</BODY>
</HTML>
