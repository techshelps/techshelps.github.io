<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Programming with Components</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconprogrammingwithcomponents"></a>Programming with Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconProgrammingWithComponentsC">
</object></p>
<p>
Do you sometimes need to provide the same analysis and calculation capabilities as Microsoft Excel in your Visual Basic application? Or, perhaps you'd like to format a document using Microsoft Word formatting tools, or store and manage data using the Microsoft Jet database engine. Even better, would you like to be able to create or buy standard components, then use them in multiple applications without having to modify them?</p>
<p>
All this and more can be accomplished by building your applications using ActiveX components. An <i>ActiveX component</i> is a reusable piece of programming code and data made up of one or more objects created using ActiveX technology. Your applications can use existing components, such as those included in Microsoft Office applications, code components, ActiveX documents, or ActiveX controls (formerly called OLE controls) provided by a variety of vendors. Or, if you have the Visual Basic, Professional or Enterprise Edition, you can create your own ActiveX controls.</p>
<p>
For components that support object linking and embedding, you can insert objects into your application without writing any code by using the component's visual interface. You can insert an OLE-enabled object into your application by using the OLE container control or by adding the object's class to the Toolbox.</p>
<p>
To fully understand ActiveX components, you should first be familiar with how to work with classes, objects, properties, and methods, which are explained in "Programming with Objects."</p>
<h2>Topics</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbcontypesofactivexcomponents.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbcontypesofactivexcomponents.htm">Types of ActiveX Components</a><p>
Introducing the different types of ActiveX components.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconinprocessoutofprocessservers.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconinprocessoutofprocessservers.htm">In-Process and Out-of-Process Servers</a><p>
The difference between in-process and out-of-process components.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconworkingwithactivexcomponents.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconworkingwithactivexcomponents.htm">Working with ActiveX Components</a><p>
The basics of working with most objects provided by ActiveX components.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconassigningreferencetoactivexcomponentobject.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconassigningreferencetoactivexcomponentobject.htm">Creating a Reference to an Object</a><p>
How to declare and set object variables for objects provided by components.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconusingactivexcomponentspropertiesmethodsevents.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconusingactivexcomponentspropertiesmethodsevents.htm">Using an Object's Properties, Methods, and Events</a><p>
The basics of manipulating an object's properties, methods, and events.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconreleasingactivexcomponent.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconreleasingactivexcomponent.htm">Releasing an ActiveX Component</a><p>
Clearing an object variable so it can be released from memory.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconnavigatingobjectmodels.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconnavigatingobjectmodels.htm">Navigating Object Models</a><p>
Working with objects in large components that supply an object hierarchy.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconhandlingruntimeerrors.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconhandlingruntimeerrors.htm">Handling Run-Time Errors in ActiveX Components</a><p>
Trapping errors when you work with ActiveX components.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconhandlingrequestspendingtoactivexcomponent.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconhandlingrequestspendingtoactivexcomponent.htm">Handling Requests Pending to an ActiveX Component</a><p>
Handling requests to an ActiveX component that may not be finished immediately.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconusinganactivexcomponentsvisualinterface.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconusinganactivexcomponentsvisualinterface.htm">Using an ActiveX Component's Visual Interface</a><p>
How to link or embed component objects in your application without writing code.</p>
</td>
</tr>
</table><br>
<h2>Sample applications</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><img src="sampapp.gif" border=0></td>
<td width=94%><b>Geofacts.vbp and Olecont.vbp</b><p>
Many of the concepts in this chapter are demonstrated in the sample applications Geofacts.vbp and Olecont.vbp. The sample applications are listed in the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_2.Click()>Samples</a> directory. </p>
</td>
</tr>
</table>
</BODY>
</HTML>
