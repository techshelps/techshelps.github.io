<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the rdoOpenResultset Method</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingrdoopenresultsetmethod"></a>Using the OpenResultset Method</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingRdoOpenResultsetMethodC">
</object></p>
<p>
No matter which type of query you execute, or which type of result set you create, you must use the OpenResultset method to build an rdoResultset to fetch and navigate through the data rows. The connection and specific cursor type used to create the rdoResultset depends on the properties of the object referenced with the OpenResultset method. For example, if you execute the OpenResultset against the rdoQuery object, RDO uses the connection specified in its ActiveConnection property and the cursor type specified in its CursorDriver property.</p>
<p>
The OpenResultset method accepts the following arguments:
<ul type=disc>
<li>
When you use the OpenResultset method with an rdoConnection object, you must specify the <b><i>name</i></b> argument — basically the name argument string specifies an SQL query. When you use OpenResultset against an rdoQuery object, the SQL statement is drawn from the rdoQuery object's SQL property so the <b><i>name</i></b> argument is not needed. When OpenResultset is used against the rdoTable object, the query is assumed to include all rows from the specified table. If your SQL query needs to include parameters, see "Creating RDO Parameter Queries" later in this chapter for more information about choosing the right SQL syntax for parameter queries.<br><br></li>
<li>
The <b><i>type</i></b> argument specifies the type of cursor — unless you have disabled cursor creation on this connection by specifying rdUseNone for the CursorDriver property. If you do not indicate a cursor type, rdOpenForwardOnly is assumed. The <b><i>type</i></b> argument can also specify keyset, dynamic, static, or forward-only cursor types.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Not all cursor libraries are capable of implementing all cursor types. For example, the ODBC client-side cursor library (rdUseODBC) is incapable of creating keyset or dynamic cursors. When a driver is incapable of creating a cursor, the driver generally uses a fall-back strategy that selects another cursor that it is capable of creating.</p></li>
<li>
The <b><i>locktype</i></b> argument specifies the type of locking used to support concurrency. Generally, this option determines how and when pages and rows are locked by the remote server. For example, using the <b><i>locktype</i></b> argument, you can select several types of optimistic locking, one type of pessimistic locking, or no locking at all, as when you select rdConcurReadOnly (the default). For more information, see "OpenResultset Method" in the <i>Language Reference</i>".<br><br></li>
<li>
The <b><i>options</i></b> argument specifies if the query should be executed asynchronously and the ODBC function used to execute the query. By default, the query is executed synchronously and the SQLPrepare and SQLExecute API functions are used.</li>
</ul>
<h2>Choosing a Cursor Type</h2>
<p>
Using arguments of the OpenResultset method or properties of the rdoQuery object, you can specify the type of cursor (if any) and other attributes of the rdoResultset object. However, in many cases, cursors are not the best way to retrieve data as they negatively affect performance and resource utilization.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "OpenResultset Method," "Type Property," and "SQL Property" in the <i>Language Reference</i>".</p>
</BODY>
</HTML>
