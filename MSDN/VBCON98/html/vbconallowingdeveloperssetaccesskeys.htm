<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Allowing Developers to Set Access Keys for Your Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconallowingdeveloperssetaccesskeys"></a>Allowing Developers to Set Access Keys for Your Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAllowingDevelopersSetAccessKeysC">
</object></p>
<p>
Placing ampersand characters (&amp;) in the captions of Label controls and CommandButton controls creates access keys with which the end user of an application can shift focus to the control. You can create a similar effect in your ActiveX controls.</p>
<p>
For example, suppose you have created a user-drawn button. In the Property Let for your button's Caption property, you can examine the text of the caption the user has entered. If there's an ampersand in front of a letter, you can assign that letter to the AccessKeys property of the UserControl object.</p>
<p>
When the end user presses one of the access keys enabled in this fashion, your UserControl object receives an AccessKeyPress event. The argument of this event contains the access key that was pressed, allowing you to support multiple access keys on a control.</p>
<h3>Access Keys for Control Assemblies</h3>
<p>
Control assemblies may contain constituent controls that can get the focus, and that support access keys of their own. You can use this fact to provide access key functionality.</p>
<p>
Suppose you've authored a general-purpose control that consists of a text box and a label; you want the user to be able to set an access key in the label's caption, and forward the focus to the text box. You can accomplish this by giving the label and text box TabIndex values of zero and one (the TabIndex values on the UserControl are not visible outside your control), and delegating the Caption property of your control to the label, thus:</p>
<pre><code>Property Get Caption() As String
   Caption = Label1.Caption
End Property

Property Let Caption(NewCaption As String)
   Label1.Caption = NewCaption
   PropertyChanged "Caption"
End Property
</code></pre>
<p>
When a developer assigns the text "&amp;Marsupial" to your Caption property, the label control will do all the access key work for you.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When the end user presses an access key on one of your constituent controls, the UserControl does <i>not</i> receive an AccessKeyPress event.</p>
<h3>Control Assemblies with Fixed Text</h3>
<p>
For fixed-purpose control assemblies, such as an Address control, you can put ampersand characters (&amp;) in the captions of constituent controls. Unfortunately, these hard-coded access keys may conflict with other access key choices the user wishes to make on a form.</p>
<p>
In a more sophisticated variation of this scheme, you might add an AccessKeyXxxx property to your control for the appropriate constituent controls. That is, if the caption of the label next to the txtLastname control was "Last Name," you would add an AccessKeyLastName property. The developer using your control could assign any character from the label's caption to this property, and in the Property Let code you could change the caption to contain the ampersand.</p>
</BODY>
</HTML>
