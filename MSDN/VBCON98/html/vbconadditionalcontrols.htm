<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Additional Controls</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconadditionalcontrols"></a>Additional Controls</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAdditionalControlsC">
</object></p>
<p>
Several other standard controls are included in the Visual Basic toolbox. Some controls are useful for working with large amounts of data contained in an external database. Other controls can be used to access the Windows file system. Still other controls defy categorization, but are useful nonetheless.</p>
<p>
You can also use ActiveX controls, previously called custom or OLE controls, in a Visual Basic application in the same way that you use the standard controls. The Professional and Enterprise editions of Visual Basic include several ActiveX controls as well as the capability to build your own controls. Additional ActiveX controls for just about any purpose imaginable are available for purchase from numerous vendors.</p>
<p>
<b><B>For More Information</B>&nbsp;&nbsp;&nbsp;</b>For additional information on using ActiveX controls, see "Managing Projects."</p>
<h2>Data Access Controls</h2>
<p>
In today's business, most information is stored in one or more central databases. Visual Basic includes several data access controls for accessing most popular databases, including Microsoft Access and SQL Server.
<ul type=disc>
<li>
The ADO Data control is used to connect to a database. Think of it as a pipeline between the database and the other controls on your form. Its properties, methods, and events allow you to navigate and manipulate external data from within your own application.<br><br></li>
<li>
The DataList control is similar to the list box control. When used in conjunction with an ADO Data control, it can be automatically filled with a list of data from a field in an external database.<br><br></li>
<li>
The DataCombo control is like a combination of the DataList control and a text box. The selected text in the text box portion can be edited, with the changes appearing in the underlying database.<br><br></li>
<li>
The DataGrid control displays data in a grid or table. When used in conjunction with an ADO Data control, it presents fully editable data from multiple fields in an external database.<br><br></li>
<li>
The Microsoft Hierarchical FlexGrid control is a unique control for presenting multiple views of data. Think of it as a combination of a grid and a tree or outline control. At run time, the user can rearrange columns and rows to provide different views of the data.</li>
</ul>
<p>
<b><B>For More Information</B>&nbsp;&nbsp;&nbsp;</b>For additional information on data access controls, see "Using Visual Basic's Standard Controls." For more information on working with external data, see the <i>Visual Basic</i> <i>Data Access Guide</i>.</p>
<h2>File System Controls</h2>
<p>
Visual Basic includes three controls for adding file handling capabilities to your application. These controls are normally used together to provide a view of drives, directories and files; they have special properties and events that tie them together.
<ul type=disc>
<li>
The DriveListBox control looks like a combo box. It provides a drop-down list of drives from which the user can select.<br><br></li>
<li>
The DirListBox is similar to a list box control, but with the built-in capability of displaying a list of directories in the currently selected drive.<br><br></li>
<li>
The FileListBox control also looks like a list box with a list of file names in a selected directory.</li>
</ul>
<p class=indent>
<b><B>Note</B>&nbsp;&nbsp;&nbsp;</b>These controls are provided primarily for backward compatibility with applications created in earlier versions of Visual Basic. The common dialog control provides an easier method of working with file access. For more information on common dialog control, see "Miscellaneous Controls" later in this chapter.</p>
<h2>Miscellaneous Controls</h2>
<p>
Several other standard controls are included in Visual Basic. Each serves a unique purpose.
<ul type=disc>
<li>
The timer control can be used to create an event in your application at a recurring interval. This is useful for executing code without the need for user interaction.<br><br></li>
<li>
The OLE container control is an easy way to add capabilities like linking and embedding to your application. Through the OLE container control, you can provide access to the functionality of any OLE-enabled application such as Microsoft Excel, Word and many others.<br><br></li>
<li>
The common dialog control adds built-in dialog boxes to your application for the selection of files, colors, fonts, and printing functions.</li>
</ul>
<p>
<b><B>For More Information</B>&nbsp;&nbsp;&nbsp;</b>For additional information on any of the standard controls, see "Using Visual Basic's Standard Controls."</p>
</BODY>
</HTML>
