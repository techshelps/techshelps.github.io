<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating an ActiveX Document</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreatingdocumentobject"></a>Creating an ActiveX Document</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCreatingDocumentObjectC">
</object></p>
<p>
The series of step-by-step procedures in this chapter builds a simple combination of two ActiveX documents and two forms. The project is not intended to be a functioning application, but building it will quickly demonstrate object lifetime, global objects, and a set of components working together in Internet Explorer. You will also see how to debug an ActiveX document using Visual Basic's debugging tools.</p>
<p>
All of the subjects introduced in these procedures are covered in greater depth in later chapters. References to in-depth material will be found in each procedure. In addition, "Building ActiveX Documents" shows how you can use the ActiveX Document Wizard to make building an ActiveX document even easier.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To complete the step-by-step procedures in this chapter, you must have Microsoft Internet Explorer and access to the Internet or an intranet. You can install Internet Explorer from the Tools directory of your Visual Basic CD-ROM.</p>
<p class=indent>
The procedures for creating the ActXDoc project build on each other, so the sequence in which you perform the procedures is important.</p>
<h2>Topics</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbconcreatingfirstdocproject.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcreatingfirstdocproject.htm">Creating the ActXDoc Project</a><p>
Shows how to create a single ActiveX document in the ActXDoc project.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconcompilingdebugging.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconcompilingdebugging.htm">Running and Debugging the ActXDoc Project</a><p>
Explains how to run the ActXDoc project and view the ActiveX document in Internet Explorer.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconaddingsecond.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconaddingsecond.htm">Adding a Second ActiveX Document to the ActXDoc Project</a><p>
Shows how to add a second ActiveX document named SecndDoc to the project.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconaddform.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconaddform.htm">Adding a Form to the ActXDoc Project</a><p>
Illustrates how to add a standard form to the project.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconaddpropertymethod.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconaddpropertymethod.htm">Adding a Property to the UserDocument</a><p>
Explains how to add a public property and two methods to the ActiveX document. These are exposed and can be used by the SecndDoc ActiveX document or by a form.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconsavingpropertiestopropertybag.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconsavingpropertiestopropertybag.htm">Saving Properties to the PropertyBag</a><p>
Illustrates how to save property values of the UserDocument object to the PropertyBag through the WriteProperties event and retrieve property values through the ReadProperties event.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconaddmenutoactivexdocument.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconaddmenutoactivexdocument.htm">Adding a Menu to the ActXDoc Project</a><p>
Shows how to add a menu that will be visible in the host application to the FirstDoc ActiveX document.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconlifecycleofdocumentobject.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconlifecycleofdocumentobject.htm">Life Cycle of a UserDocument</a><p>
Explains the sequence of events for an ActiveX document</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbcondocumentobjectcreationrecap.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbcondocumentobjectcreationrecap.htm">ActiveX Document Creation Recap</a><p>
Outlines the typical process of designing and creating an ActiveX document.</p>
</td>
</tr>
</table><br>
<h2>Sample application</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><img src="sampapp.gif" border=0></td>
<td width=94%><b>ActXDoc.vbp</b><p>
This application fills in all the properties, methods, and events required to create an ActiveX document. It shows additional ActiveX document creation features, at the expense of some of the basic material covered in the step-by-step procedures. The sample applications are listed in the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbsamples">
</object><a href=JavaScript:alink_2.Click()>Samples</a> directory.</p>
</td>
</tr>
</table>
</BODY>
</HTML>
