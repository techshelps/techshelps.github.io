<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transitioning Between WebItems</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontransitioningbetweenwebitems"></a>Transitioning Between WebItems</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTransitioningBetweenWebItems_C">
</object></p>
<p>
You use the NextItem property to shift processing from one webitem to another on the server. You might do this if there are several processes you want to perform before returning a response to the browser. Normally, the webclass performs these steps when it receives a request:
<ol>
<li>
Intercepts the request and matches it to a webitem in the application.<br><br></li>
<li>
Identifies the proper event to fire on the webitem, then fires it.<br><br></li>
<li>
Processes any code for that event.<br><br></li>
<li>
Returns a response to the browser. </li>
</ol>
<p>
NextItem is used to add an extra step to this process. After the webclass processes the code for the event it matches to the request, the NextItem property can pass processing along to another webitem. This allows the application to perform additional processing before returning a response to the user. The process is now this:
<ol>
<li>
Intercepts the request and matches it to a webitem in the application.<br><br></li>
<li>
Identifies the proper event to fire on the webitem, then fires it.<br><br></li>
<li>
Processes any code for that event.<br><br></li>
<li>
Processes the NextItem property and shifts processing to another webitem and fires its Respond event.<br><br></li>
<li>
Returns a response to the browser.</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;No matter where the NextItem property occurs in the event procedure, Visual Basic finishes processing that procedure before it shifts processing to the indicated webitem. This is the main difference between setting the NextItem and directly calling an event subroutine in another webitem.</p>
<p>
The following code shows NextItem used in a Respond event:</p>
<pre><code>Private Sub Feedback_Respond()
   ' Code to process the contents of the feedback form
   ' inserted here.
   ' Transition:
   Set NextItem = Thankyou
End Sub
</code></pre>
<p>
This procedure is fired when the user submits the contents of a page containing a feedback form. In response, Visual Basic transitions to another webitem containing a thank-you page.</p>
<p>
There are three situations in which the webclass ignores the NextItem property. If you use the property in event procedures for the following events, the webclass will not process the NextItem property:
<ul type=disc>
<li>
EndRequest<br><br></li>
<li>
ProcessTag<br><br></li>
<li>
FatalErrorResponse</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "NextItem Property" in the <i>Language Reference</i>.</p>
</BODY>
</HTML>
