<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Data Environment Extensibility Object Model</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondeextensobjectmodel"></a>The Data Environment Extensibility Object Model</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDEExtensObjectModel_C">
</object></p>
<p>
Using the Data Environment Extensibility Object Model you can programmatically manipulate your DataEnvironment object at <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defdesigntime">
</object><a href=JavaScript:alink_2.Click()>design time</a>. Extensibility is the capacity to extend the function of the development environment, thereby adding something to it that didn't exist there before. The Data Environment has an easy-to-understand modular system for customizing its environment through a programming interface known as the Extensibility Object Model. Using this model you can create add-in extensions to the Visual Basic Integrated Development Environment (IDE).</p>
<p>
All functionality that is available through the Data Environment designer's user interface is also available through its Extensibility Object Model.</p>
<p>
To prevent the display of user interface when using the Extensibility Object Model to add and delete objects, you must set the option properties directly from the Data Environment. For example, to ensure that no deletion confirmation user interface appears, set the PromptDelete property of the DataEnvironment object to False.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This example changes the confirmation setting for all DataEnvironment objects on your system and is not automatically reset. Therefore, you should return this to its default setting when complete.</p>
<p>
Before you can use the Data Environment Extensibility Object Model, you must reference it in Visual Basic.</p>
<p class=label>
<b>To reference the Data Environment Extensibility Object Model</b>
<ol>
<li>
On the <b>Project </b>menu in Visual Basic, click <b>References</b>.<br><br></li>
<li>
From the <b>References </b>dialog box, select <b>Microsoft Data Environment Extensibility Objects 1.0</b>, and then click <b>OK</b>.</li>
</ol>
<p>
When using the Extensibility Object Model, the DesignerID of the Data Environment designer is <code>DEDesigner.DataEnvironment</code>, and the object reference is <code>DEExtDesigner</code>.</p>
<p>
All Data Environment methods, objects, and properties available to you through the Extensibility Object Model are documented in the Visual Basic <i>Language Reference</i>. See the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjDEExtDesigner">
</object><a href=JavaScript:alink_3.Click()>DEExtDesigner Object</a>.</p>
<h2>Using Your Data Environment in an Add-in</h2>
<p>
By using the Extensibility Object Model you can use your Data Environment in an add-in. The add-in can be:
<ul type=disc>
<li>
A wizard to create a DataEnvironment object and automatically bind it to a form.<br><br></li>
<li>
An alternative interface (other than the Data Environment) to create and modify DataEnvironment objects.<br><br></li>
<li>
A means to programmatically obtain information about an existing DataEnvironment object.<br><br></li>
<li>
A way to programmatically create a hierarchical set of Command objects using properties, and then obtain the ShapeText property to obtain the valid SHAPE Command generated by the DataEnvironment object.</li>
</ul>
</BODY>
</HTML>
