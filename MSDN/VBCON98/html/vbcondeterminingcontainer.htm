<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining the ActiveX Document's Container Programmatically</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondeterminingcontainer"></a>Determining the ActiveX Document's Container Programmatically</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDeterminingContainerC">
</object></p>
<p>
The characteristics of your user's target application have a large impact on your ActiveX document design. Consequently, your code should verify which container is being used in order to react appropriately. For example, if you intend your document to be viewed in the Visual Basic Development Environment Tool Window, your code should check the container before accessing extensibility objects (which are unavailable in Internet Explorer).</p>
<p>
To determine the container of the ActiveX document, use the TypeName statement with the Parent property of the UserDocument. A simple example of this is shown:</p>
<pre><code>Dim strContainer As String
strContainer = TypeName(UserDocument.Parent)
</code></pre>
<p>
The following table shows the three possible strings returned by Internet Explorer, Microsoft Binder, and the window created by the CreateToolWindow function in the Visual Basic development environment:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=47%><b>Container</b></td>
<td class=label width=53%><b>Return String</b></td>
</tr>
<tr valign=top>
<td width=47%>Internet Explorer</td>
<td width=53%>IwebBrowserApp</td>
</tr>
<tr valign=top>
<td width=47%>Microsoft Binder</td>
<td width=53%>Section</td>
</tr>
<tr valign=top>
<td width=47%>Window</td>
<td width=53%>Window</td>
</tr>
</table><br>
<h2>Defensive Programming</h2>
<p>
Because you may never know which container the user will actually use to view an ActiveX document, you should prepare for the "wrong" container (a container which lacks the features your ActiveX document needs to function optimally). Although the TypeName function will not return the version of the container, it will at least allow you to determine if the container is unequivocally "wrong." In that case, you may inform the user that some functionality is not available with the container, and that she should use the "right" container to view the document.</p>
<p>
Because the Show event occurs when an ActiveX document is sited on the container, it is the best event for determining the container. Be aware, however, that the Show event occurs whenever the document is shown (and this behavior varies according to the container application). To sidestep this problem, declare a module level variable to function as a flag. After verifying the container, the flag is reset. Subsequent Show events will then check the flag, and avoid redundantly checking the container again.</p>
<pre><code>Option Explict
Private mblnSHOWN As Boolean

Private Sub UserDocument_Show()
   If Not mblnSHOWN Then
      Dim strContainer As String
      strContainer = TypeName(UserDocument.Type)
      ' Use the Select Case statement to test.
      Select Case strContainer
         Case "IwebBrowserApp"
         ' Supported container: continue to open app.
      Case "Section"
         ' Supported container: continue to open app.
      Case Else ' Handle other unknown containers.
         ' Unsupported container: exit gracefully.
         MsgBox "Sorry, please open this " &amp; _
         "document with Internet Explorer " &amp; _
         "3.0 or later."
         End Select
      mblnSHOWN = True ' Reset the flag
   End If
End Sub
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can't use the Initialize event to test the container because when that event fires the document is not yet sited. For an explanation of when the document is sited, see "Key Events in the Life of a UserDocument" in this chapter.</p>
</BODY>
</HTML>
