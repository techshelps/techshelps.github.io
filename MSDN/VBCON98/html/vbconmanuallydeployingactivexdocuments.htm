<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Manually Deploying ActiveX Documents</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconmanuallydeployingactivexdocuments"></a>Manually Deploying ActiveX Documents</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconManuallyDeployingActiveXDocuments_C">
</object></p>
<p>
The process for deploying ActiveX documents manually differs depending on whether you are deploying for Internet Explorer 3.<i>x</i> or 4.<i>x</i>.</p>
<h2>Deploying ActiveX Documents in Internet Explorer 3.<i>x</i></h2>
<p>
You perform these steps to deploy an ActiveX document manually in Internet Explorer 3.<i>x</i>:
<ol>
<li>
Create an HTML page that will be used to download the ActiveX document.<br><br></li>
<li>
In an existing HTML page from your application or Web site, create a link to the page you just created.<br><br></li>
<li>
In the HTML page used to download the ActiveX document, use the OBJECT tag to provide a means for the browser to download, register, and navigate to the ActiveX document.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;See "Manually Deploying ActiveX Controls" for an example of the object tag.</p></li>
<li>
In the download page, insert VBScript that instructs Internet Explorer to navigate immediately to the ActiveX document through its .vbd file. The following code shows an example:<pre><code>&lt;HTML&gt; 
&lt;OBJECT ID="SampleDoc1" 
CLASSID="CLSID:11111111-1111-1111-1111-111111111111" CODEBASE="Project1.CAB#version=1,0,0,0"&gt; 
&lt;/OBJECT&gt; 
&lt;SCRIPT LANGUAGE="VBScript"&gt; 
Sub Window_OnLoad 
Location.Href = "SampleDoc1.VBD" 
End Sub 
&lt;/SCRIPT&gt; 
&lt;/HTML&gt;
</code></pre>
<p class=tl>
In this code fragment, only the name of the .vbd file is given, rather than a fully qualified path. Internet Explorer looks for it in the same directory as the .htm file containing the VBScript.</P></li>
</ol>
<h2>Downloading ActiveX Documents in Internet Explorer 4.<i>x</i></h2>
<p>
If you want to manually set up an ActiveX document for deployment on systems using Internet Explorer 4.0 or later, you can use a tool called the CodeBase Fixup Utility. CodeBase Fixup Utility is a tool that adds codebase information to a .vbd file or other ActiveX documents. The code information specifies the version number of the ActiveX document and the URL of the server used to download it. This approach presents several advantages:
<ul type=disc>
<li>
You no longer need a separate HTML page to launch your download.<br><br></li>
<li>
You can now mail the URL to the .vbd file and users can select it to view the ActiveX document in the browser.<br><br></li>
<li>
The browser can automatically download the latest version of the ActiveX document if it is not installed on the user's machine.</li>
</ul>
<p>
The Package and Deployment Wizard automatically configures your ActiveX documents using the CodeBase Fixup Utility. If you are using the wizard to package your components for download, you do not need to perform this procedure.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For instructions on how to use the CodeBase Fixup Utility tool, see the Readme.txt file installed with the tool in the Tools directory, or on the Visual Basic owner's Web site at http://www.microsoft.com/vstudio.</p>
</BODY>
</HTML>
