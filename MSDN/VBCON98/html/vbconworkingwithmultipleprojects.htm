<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Multiple Projects</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconworkingwithmultipleprojects"></a>Working with Multiple Projects</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconWorkingWithMultipleProjectsC">
</object></p>
<p>
You can create many applications by working with a single project. However, as your applications become more complex, you may want to work with multiple projects in the same session of the programming environment. For example, you may want to use one project to build an application's executable file, and a second project to serve as a "scratch pad" for testing code before you add it to the application.</p>
<p>
You can add a new or existing project to your current editing session by adding it to a <i>project group</i>. You can then save the project group and work with it in subsequent editing sessions. You can open either the project group or an individual project in the project group, or add the project group or its individual projects to another project group.</p>
<p>
In a project group, one executable project serves as a startup project. When a project group is open and you choose Start from the Run menu, click the Start button on the toolbar, or press F5, Visual Basic runs the startup project.</p>
<p>
In the Professional or Enterprise edition, you can use project groups to create and debug multiple-component applications. For example, you can create and debug project groups containing standard executable projects, ActiveX executable projects, ActiveX dynamic-link library projects, or ActiveX control projects. For more information, see "Creating ActiveX Components" in the <i>Component Tools Guide </i>included with the Professional and Enterprise Editions of Visual Basic.</p>
<h2>Adding or Removing a Project</h2>
<p>
When you create a new project either at startup or by selecting the New Project command on the File menu, Visual Basic automatically creates a project group for it. You can then add additional new or existing projects to the project group.</p>
<p class=label>
<b>To add a new project to a project group</b>
<ul type=disc>
<li>
Click the <b>Add Project</b> button on the Toolbar or choose <b>Add Project</b> from the <b>File</b> menu.<p class=tl>
In Visual Basic, Learning edition, Visual Basic automatically adds a new executable project to the project group. In the Professional and Enterprise editions, you can select the type of project you want to add from the popup menu of the <b>Add Project</b> button, or the icons displayed in the <b>New</b> tab of the <b>Add Project</b> dialog box.</P></li>
</ul>
<p class=label>
<b>To add an existing project to a project group</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>Add Project</b>.<p class=tl>
Visual Basic displays the <b>Add Project</b> dialog box.</P></li>
<li>
Click the <b>Existing</b> tab.<br><br></li>
<li>
Select a project file, then choose <b>Open</b>.<p class=tl>
Visual Basic adds the selected project to the project group.</P></li>
</ol>
<p>
Visual Basic displays multiple projects in the Project window in a hierarchical view. Each project appears at the top level, with the project's forms, modules, controls, property pages, or document objects grouped under it in the hierarchical view.</p>
<p class=label>
<b>Figure 8.1&nbsp;&nbsp;&nbsp;The Project window with multiple projects</b></p>
<p>
<img src="avp08003.gif" border=0></p>
<p class=label>
<b>To remove a project from a project group</b>
<ol>
<li>
Select the name of the project in the <b>Project</b> window.<br><br></li>
<li>
From the <b>File</b> menu, choose <b>Remove Project</b>.<p class=tl>
Visual Basic removes the selected project from the project group.</P></li>
</ol>
<p>
In the Professional and Enterprise editions of Visual Basic, you can change the type of a project by selecting the Project Properties command on the Project menu, then changing the Project Type option on the General tab in the Project Properties dialog box.</p>
<p class=label>
<b>Figure 8.2&nbsp;&nbsp;&nbsp;The General tab in the Project Properties dialog box</b></p>
<p>
<img src="avp08004.gif" border=0></p>
<h2>Specifying a Startup Project</h2>
<p>
Because a project group contains multiple projects, Visual Basic needs to know which project to run when you choose Start from the Run menu, click the Start button on the toolbar, or press F5. By default, Visual Basic runs the first executable (.exe) project that is added to a project group. However, you can specify a different startup component.</p>
<p class=label>
<b>To specify a startup component</b>
<ol>
<li>
In the <b>Project</b> window, select a project.<br><br></li>
<li>
Click the right mouse button and select <b>Set as Start Up</b> from the context menu.</li>
</ol>
<p>
Visual Basic displays the startup project's name in bold type in the Project window.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;Debugging multiple projects is discussed in "Debugging, Testing, and Deploying Components," in "Creating ActiveX Components" in the <i>Component Tools Guide</i> included with the Professional and Enterprise editions of Visual Basic.</p>
</BODY>
</HTML>
