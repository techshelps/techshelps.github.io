<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using RDO to Execute Stored Procedures</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconexecutingstoredprocedureswithrdo"></a>Using RDO to Execute Stored Procedures</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconExecutingStoredProceduresWithRDOC">
</object></p>
<p>
Stored procedures are one of the most effective ways to manage and protect complex relational databases. They play a vital role in systems that support large databases, large numbers of users, or both. Using stored procedures, you can protect critical data from random access, those with malicious intent, and those with innocent intent but destructive tendencies. In many sites, stored procedures are the only way to access or update data — access to base tables is strictly prohibited.</p>
<p>
One of the most powerful and important features of RDO is its ability to execute and manage the results returned by stored procedures, regardless of their complexity. The following topics discuss how to best use this feature.</p>
<p>
Stored procedures usually require one or more parameters, and while some stored procedures return rows, not all do. RDO provides a number of ways to handle these variations; however, if you must capture the stored procedure return status or output parameters, you <i>must</i> use the ODBC CALL syntax as described in "Creating RDO Parameter Queries."</p>
<p>
A stored procedure can return any number of result sets — and stored procedures can invoke other stored procedures. Your code needs to be prepared to manage all of these result sets, some containing rows, some just returning parameters, some returning only the number of rows affected, and some all three.</p>
</BODY>
</HTML>
