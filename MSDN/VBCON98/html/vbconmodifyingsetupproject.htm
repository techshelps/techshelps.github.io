<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Modifying the Setup Project</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconmodifyingsetupproject"></a>Modifying the Setup Project</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconModifyingSetupProject_C">
</object></p>
<p>
You can modify the Setup1.vbp project if you want to add new screens, prompts, or events to the installation sequence created by the Package and Deployment Wizard. You write code in the setup program just as you would in any other Visual Basic program. A number of function calls are available that are especially useful in setup routines.</p>
<p>
Some examples of situations in which you might modify the Setup Toolkit project include:
<ul type=disc>
<li>
You need to add special user prompts during installation.<br><br></li>
<li>
You want to create a customized look and feel for your setup program.<br><br></li>
<li>
You want to display billboards during installation. Billboards present information about your product's features, service and support, registration, and other related information.<br><br></li>
<li>
You want to use your own compression utility to copy your application's files to the distribution media.</li>
</ul>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Because the Package and Deployment Wizard uses the files in the Setup Toolkit project, you should always make a backup of the project before making any changes. In addition, you should back up the full contents of the Setup1 directory.</p>
<p class=label>
<b>To modify the Setup Toolkit project</b>
<ol>
<li>
Create a backup of \Wizards\PDWizard\setup1.exe and all contents of the \Wizards\PDWizard\Setup1 directory before making any changes.<br><br></li>
<li>
Open the setup1.vbp project from the \Wizards\PDWizard\Setup1 directory.<br><br></li>
<li>
Make any changes to the code, forms, or modules in this project.<br><br></li>
<li>
Save the project and compile it to create setup1.exe.<br><br></li>
<li>
If you are using the Package and Deployment Wizard to package your application, launch the Package and Deployment Wizard and create a package for your application.<br><br></li>
<li>
If you are creating your own custom setup package, continue through the steps outlined in "The Setup Toolkit."<p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Any time you create a package, using either the Package and Deployment Wizard or the Setup Toolkit project, you should be sure that the version numbers for your project have been set on the Make tab of the Project Properties dialog box in Visual Basic. This is especially important if you are distributing a new version of an existing application — without the appropriate change in version numbers, the end user's computer may determine that critical files do not need to be updated.</p></li>
</ol>
</BODY>
</HTML>
