<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the DateTimePicker Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingdatetimepickercontrol"></a>Using the DateTimePicker Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingDateTimePickerControlC">
</object></p>
<p>
The DateTimePicker control displays date and/or time information and acts as the interface through which users can modify date and time information. The control's display consists of fields that are defined by the control's format string. When the DateTimePicker is dropped down, a MonthView calendar is displayed.</p>
<p>
The control has two different modes:
<ul type=disc>
<li>
Dropdown Calendar mode (default) – enables the user to display a dropdown calendar that can be used to select a date.<br><br></li>
<li>
Time Format mode – enables the user to select a field in the date display (i.e. the month, day, year, etc.) and press the up/down arrow to the right of the control to set its value.</li>
</ul>
<p>
You can use the control to display the date in various preset formats including Short Date (11/14/97), LongDate (Friday, November 14, 1997) and Time (7:00:00 PM). You can also specify custom formats using formatting strings, or create your own formats with <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefcallbackfield">
</object><a href=JavaScript:alink_2.Click()>callback fields</a>.</p>
<p class=label>
<b>DateTimePicker control in Dropdown Calendar Mode</b></p>
<p>
<img src="vb2yjv1.gif" border=0></p>
<p class=label>
<b>DateTimePicker control in Time Format Mode</b></p>
<p>
<img src="vb2yjv2.gif" border=0></p>
<h3>Possible Uses</h3>
<ul type=disc>
<li>
To present date information where a restricted or specially formatted field is required, such as in a payroll or scheduling application.<br><br></li>
<li>
To give users the ability to select a date with the click of a mouse instead of typing a date value.</li>
</ul>
<h4>Using the Two Modes of the Control</h4>
<p>
The DateTimePicker operates as a masked edit control for entering date and time values. Each part of the date or time is treated as a separate field within the edit portion of the control. As the user clicks on each field, it is highlighted and they can use the up and down arrow keys to increment or decrement the value of the field. The user can also type values directly into the control, where applicable.</p>
<p>
The <b>UpDown</b> property determines which mode the control is in. When UpDown is set to <b>False</b>, the control is in Dropdown Calendar mode. (The default value) When the UpDown property is set to <b>True</b>, the DateTimePicker is in Time Format mode.</p>
<p>
In Time Format mode, two scroll arrows appear on the right side of the control. The user can click these arrows with the mouse to increment or decrement the value of the currently selected field. In Dropdown Calendar mode, the control drops down a calendar that the user can use to select dates.</p>
<p>
The dropdown calendar has most of the features of the <b>MonthView</b> control. See "Using The MonthView Control" for more information on how to set up and format the dropdown calendar portion of the DateTimePicker control.</p>
<h4>Setting and Returning Dates</h4>
<p>
The currently selected date in the control is determined by the <b>Value</b> property. You can set the <b>Value</b> of the control before it is displayed (for example, at design time or in the Form_Load event) to determine which date will be initially selected in the control:</p>
<pre><code>DTPicker1.Value = "10/31/97"
</code></pre>
<p>
By default, the control's <b>Value</b> is set to the current date. If you change the DateTimePicker's <b>Value</b> in code, the control is automatically updated to reflect the new setting.</p>
<p>
The <b>Value</b> property returns a raw date value, or a null value. The DateTimePicker control has several properties that return specific information about the displayed date:
<ul type=disc>
<li>
The <b>Month</b> property returns the integer value (1-12) of the month containing the currently selected date.<br><br></li>
<li>
The <b>Day</b> property returns the day number (1-31) currently selected.<br><br></li>
<li>
The <b>DayOfWeek</b> property returns a value indicating the day of the week the selected date falls on (values correspond to the values of <i>vbDayOfWeek</i> constants.)<br><br></li>
<li>
The <b>Year</b> property returns the year containing the selected date as an integer value.<br><br></li>
<li>
The <b>Week</b> property returns the number of the week containing the selected date.</li>
</ul>
<p>
Use the <b>Change</b> event to determine when the user has changed the date value in the control.</p>
<h4>Using The Checkbox to Select No Date</h4>
<p>
The <b>CheckBox</b> property makes it possible to specify whether the control returns a date. By default, <b>CheckBox</b> is set to False and the control always returns a date.</p>
<p>
To enable the user to specify no date, set the CheckBox property to <b>True</b> (for example, if you are using the DateTimePicker to enter the completion date of a project but the project has not yet been completed).</p>
<p>
When <b>CheckBox</b> is set to True, a small check box appears in the edit portion of the control to the left of the date and time. If the box is not checked, the <b>Value</b> property returns a null value. If the user checks this checkbox, the control returns the displayed date through its <b>Value</b> property.</p>
<h4>Working With Date &amp; Time Formats</h4>
<p>
The DateTimePicker gives you a tremendous amount of flexibility in formatting the display of dates and times in the control. You can use all the standard Visual Basic formatting strings, or you can create custom formats by using callback fields.</p>
<p>
The <b>Format</b> property determines how the control formats the raw date value. You can choose from one of the predefined formatting options, or use the custom formatting feature of the control.</p>
<p>
The <b>CustomFormat</b> property defines the format expression used to display the contents of the control. You specify a format string that tells the control how to format the date output. The DateTimePicker controls supports the following format strings:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=37%><b>String</b></td>
<td class=label width=63%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=37%>d</td>
<td width=63%>The one- or two-digit day.</td>
</tr>
<tr valign=top>
<td width=37%>dd</td>
<td width=63%>The two-digit day. Single digit day values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=37%>ddd</td>
<td width=63%>The three-character day-of-week abbreviation.</td>
</tr>
<tr valign=top>
<td width=37%>dddd</td>
<td width=63%>The full day-of-week name.</td>
</tr>
<tr valign=top>
<td width=37%>h</td>
<td width=63%>The one- or two-digit hour in 12-hour format.</td>
</tr>
<tr valign=top>
<td width=37%>hh</td>
<td width=63%>The two-digit hour in 12-hour format. Single digit values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=37%>H</td>
<td width=63%>The one- or two-digit hour in 24-hour format.</td>
</tr>
<tr valign=top>
<td width=37%>HH</td>
<td width=63%>The two-digit hour in 24-hour format. Single digit values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=37%>m</td>
<td width=63%>The one- or two-digit minute.</td>
</tr>
<tr valign=top>
<td width=37%>mm</td>
<td width=63%>The two-digit minute. Single digit values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=37%>M</td>
<td width=63%>The one- or two-digit month number.</td>
</tr>
<tr valign=top>
<td width=37%>MM</td>
<td width=63%>The two-digit month number. Single digit values are preceded by a zero.</td>
</tr>
<tr valign=top>
<td width=37%>MMM</td>
<td width=63%>The three-character month abbreviation.</td>
</tr>
<tr valign=top>
<td width=37%>MMMM</td>
<td width=63%>The full month name.</td>
</tr>
<tr valign=top>
<td width=37%><i>s</i></td>
<td width=63%>The one- or two- digit seconds.</td>
</tr>
<tr valign=top>
<td width=37%><i>ss</i></td>
<td width=63%>The two-digit seconds. Single digit values are proceeded by a zero.</td>
</tr>
<tr valign=top>
<td width=37%>t</td>
<td width=63%>The one-letter AM/PM abbreviation (that is, "AM" is displayed as "A").</td>
</tr>
<tr valign=top>
<td width=37%>tt</td>
<td width=63%>The two-letter AM/PM abbreviation (that is, "AM" is displayed as "AM").</td>
</tr>
<tr valign=top>
<td width=37%>X</td>
<td width=63%>A callback field that gives programmer control over the displayed field (see below.) Multiple 'X' characters can be used in series to signify unique callback fields.</td>
</tr>
<tr valign=top>
<td width=37%>y</td>
<td width=63%>The one-digit year (that is, 1996 would be displayed as "6").</td>
</tr>
<tr valign=top>
<td width=37%>yy</td>
<td width=63%>The last two digits of the year (that is, 1996 would be displayed as "96").</td>
</tr>
<tr valign=top>
<td width=37%>yyy</td>
<td width=63%>The full year (that is, 1996 would be displayed as "1996").</td>
</tr>
</table><br>
<p>
You can add body text to the format string. For example, if you want the control to display the current date with the format "Today is: 05:30:31 Friday Nov 14, 1997". The format string you would use is "'Today is: 'hh':'m':'s ddddMMMdd', 'yyy". Body text must be enclosed in single quotes.</p>
<h4>Creating Custom Formats with Callback Fields</h4>
<p>
One of the custom format fields described above is a callback field. A callback field allows you to customize the output of certain parts of a format string. To declare a callback field, you must include one or more 'X' characters (ASCII Code 88) anywhere in the body of the format string. Callback fields are displayed in left-to-right order.</p>
<p>
When a new date is displayed in a format that includes one or more callback fields, The <b>Format</b> and <b>FormatSize</b> events are raised for each callback field. You can use the <b>Format</b> event to specify a custom response string, and the <b>FormatSize</b> event to determine the space needed to display the string. This behavior gives you complete control of how a callback field is displayed.</p>
<p>
Each sequence of X’s has a unique meaning. For example, X might mean "st/nd/rd/th" (for "1st" "2nd" "3rd" "4th" etc) and "XX" may mean "first" "second" "third" "fourth" etc. These fields do not format the users’ text, they format the date into a displayable format.</p>
<p>
For example, let's say you want to display the month in Spanish as well as English, using a format like this:</p>
<pre><code>July (Julio) 29
</code></pre>
<p>
You would create a format string that looked like this:</p>
<pre><code>MMMM XXXX d
</code></pre>
<p>
When processing the <b>Format</b> and <b>FormatSize</b> events, you can check which callback field is being called by comparing the input format sting with "XXXX". If the field string matches, an output string "(Julio)" can be built and the length of the output string can be supplied. The number of Xs is only used by an application to determine what text to supply for a callback field. When processing the <b>FormatSize</b> event, the size of the text can be programmatically calculated.</p>
<p>
The <b>Format</b> event is called whenever the control needs to fill in the callback field, such as when the user selects a different date from that of the dropdown calendar. However, the <b>FormatSize</b> event is called only when there is a change to the format string (for instance, if you change it from "XX" to "XXXX".) This means that when you calculate the size of the callback field in the <b>FormatSize</b> event, you must take into account any possible value that can be returned by the <b>Format</b> event.</p>
<p>
For example, you would use the following process to implement the callback field in the format string mentioned above.
<ol>
<li>
In the (General)(Declarations) section of the form, declare an array variable to hold the lookup table for the names of the Spanish months:<pre><code>Private sSpMonth(12) As String
</code></pre>
</li>
<li>
In the Load event of the form, populate the lookup table and set the DTPicker to use the custom format string:<pre><code>sSpMonth(0) = "Enero"
sSpMonth(1) = "Febrero"
sSpMonth(2) = "Marzo"
sSpMonth(3) = "Abril"
sSpMonth(4) = "Mayo"
sSpMonth(5) = "Junio"
sSpMonth(6) = "Julio"
sSpMonth(7) = "Agusto"
sSpMonth(8) = "Septiembre"
sSpMonth(9) = "Octubre"
sSpMonth(10) = "Noviembre"
sSpMonth(11) = "Diciembre"

DTPicker1.Format = dtpCustom
DTPicker1.CustomFormat = "MMMM (XXX) dd, yy"
</code></pre>
</li>
<li>
In the <b>FormatSize</b> event, search through the list of possible return values to find the longest one. Specify this as the length of the formatted string. This will prevent clipping of the Spanish month name when the value in the control is changed.<pre><code>Private Sub DTPicker1_FormatSize(ByVal CallbackField As String,
Size As Integer)
Dim iMaxMonthLen As Integer
Dim iC As Integer
Select Case CallbackField
Case "XXX"
iMaxMonthLen = 0
For iC = 0 To 11
If iMaxMonthLen &lt; Len(sSpMonth(iC)) Then
iMaxMonthLen = Len(sSpMonth(iC))
End If
Next iC
End Select
Size = iMaxMonthLen
End Sub
</code></pre>
</li>
<li>
In the <b>Format</b> event, return the appropriate value as the formatted string:<pre><code>Private Sub DTPicker1_Format(ByVal CallbackField As String,
FormattedString As String)
Select Case CallbackField
Case "XXX"
FormattedString = sSpMonth(DTPicker1.Month - 1)
End Select
End Sub
</code></pre>
</li>
</ol>
<p>
You can create unique callback fields by repeating the "X" character. Thus, the format string "XX dddd MMM dd', 'yyy XXX" contains two callback fields. You can use Select or If statements to process multiple callback strings in the <b>Format</b> and <b>FormatSize</b> events.</p>
<p>
Callback fields are treated as valid fields, so the application must be prepared to handle the <b>CallbackKeyDown</b> event. You can use this event to process individual keystrokes in the callback field and to provide keystroke validation or automated entry completion. For example, if the user was entering a month and they had typed the letter "D", you could use the <b>CallbackKeyDown</b> event to fill in the callback field with the word "December."</p>
<h4>Formatting the Calendar Control</h4>
<p>
There are many options for formatting the calendar drop-down portion of the control. All the properties of the DateTimePicker that are preceded by the word "Calendar" affect the formatting of the calendar drop down. These properties correspond to properties in the MonthView control. For example, the DateTimePicker's <b>CalendarTitleTextColor</b> property is comparable to the <b>TitleTextColor</b> property of the MonthView. See the topic Using The MonthView Control for more information about calendar formatting issues.</p>
<h4>Keyboard Interface</h4>
<p>
The Calendar control can be manipulated with the keyboard. The following table describes the different actions you can perform with the control at run time.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=37%><b>Key</b></td>
<td class=label width=63%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=37%>LEFT ARROW</td>
<td width=63%>Selects the next field to the left. If this key is pressed when the left-most field is selected, the selection wraps to the right-most field.</td>
</tr>
<tr valign=top>
<td width=37%>RIGHT ARROW</td>
<td width=63%>Selects the next field to the right. If this key is pressed when the right-most field is selected, the selection wraps to the left-most field.</td>
</tr>
<tr valign=top>
<td width=37%>UP ARROW</td>
<td width=63%>Increments the value of the selected field.</td>
</tr>
<tr valign=top>
<td width=37%>DOWN ARROW</td>
<td width=63%>Decrements the value of the selected field.</td>
</tr>
<tr valign=top>
<td width=37%>HOME</td>
<td width=63%>Changes the value of the selected field to its upper limit.</td>
</tr>
<tr valign=top>
<td width=37%>END</td>
<td width=63%>Changes the value of the selected field to its lower limit.</td>
</tr>
<tr valign=top>
<td width=37%>UP ARROW</td>
<td width=63%>Increments the value for the selected field.</td>
</tr>
<tr valign=top>
<td width=37%>DOWN ARROW</td>
<td width=63%>Decrements the value of the selected field.</td>
</tr>
<tr valign=top>
<td width=37%>PLUS (+) on Numeric Keypad</td>
<td width=63%>Increments the value of the selected field.</td>
</tr>
<tr valign=top>
<td width=37%>MINUS (-) on Numeric Keypad</td>
<td width=63%>Decrements the value of the selected field.</td>
</tr>
</table><br>
<p>
The following table describes the different actions you can perform while the dropdown calendar is displayed.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=37%><b>Key</b></td>
<td class=label width=63%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=37%>LEFT ARROW</td>
<td width=63%>Selects the next day</td>
</tr>
<tr valign=top>
<td width=37%>RIGHT ARROW</td>
<td width=63%>Selects the previous day</td>
</tr>
<tr valign=top>
<td width=37%>UP ARROW</td>
<td width=63%>Selects the same day of week in the previous week</td>
</tr>
<tr valign=top>
<td width=37%>DOWN ARROW</td>
<td width=63%>Selects the same day of week in the next week</td>
</tr>
<tr valign=top>
<td width=37%>PAGE UP</td>
<td width=63%>Scrolls the display to past months.</td>
</tr>
<tr valign=top>
<td width=37%>PAGE DOWN</td>
<td width=63%>Scrolls the display to future months.</td>
</tr>
<tr valign=top>
<td width=37%>CTRL+PAGE UP</td>
<td width=63%>Scrolls the display to the previous year.</td>
</tr>
<tr valign=top>
<td width=37%>CTRL+PAGE DOWN</td>
<td width=63%>Scrolls the display to the next year.</td>
</tr>
</table><br>
<p class=indent>
<B><b>Distribution Note</b></B>&nbsp;&nbsp;&nbsp;The <b>DateTimePicker</b> control is part of a group of ActiveX controls that are found in the MSCOMCT2.OCX file. To use the DateTimePicker control in your application, you must add the MSCOMCT2.OCX file to the project. When distributing your application, install the MSCOMCT2.OCX file in the user's Microsoft Windows System or System32 directory. For more information on how to add an ActiveX control to a project, see the <i>Programmer's Guide</i>.</p>
</BODY>
</HTML>
