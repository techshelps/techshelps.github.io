<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scenarios For Using the Data Environment Designer</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconuserscenariosforde"></a>Scenarios For Using the Data Environment Designer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUserScenariosForDE_C">
</object></p>
<p>
This section presents scenarios that illustrate how you can use the Data Environment designer. Among the features highlighted are creating a hierarchy, adding aggregates, grouping, and binding to a Hierarchical FlexGrid.</p>
<h2>Creating a Relation Hierarchy Between a Customer and an Order Table</h2>
<p class=label>
<b>To create a relation hierarchy between a Customer and an Order table</b>
<ol>
<li>
Create Command object, connected to the Northwind database.<br><br></li>
<li>
Select the Customers table as the Command object's source. Change the Command object name to "Customers."<br><br></li>
<li>
Create a child Command off the Customer Command object. Select the Orders table as the child's source. Change the child Command object's name to "Orders."<br><br></li>
<li>
Click the <b>Relation </b>tab, and then link the parent and child Command objects using their CustomerID fields.</li>
</ol>
<p>
To view the results, see "Binding Your Data Environment to a Hierarchical FlexGrid Control" later in this topic.</p>
<h2>Adding an Aggregate to the Customer Command Object</h2>
<p class=label>
<b>To add an aggregate to the Customer Command object to obtain the SUM of the order amounts for all orders per customer</b>
<ol>
<li>
Edit the Customer Command object's properties.<br><br></li>
<li>
Click the <b>Aggregate </b>tab, and then click <b>Add</b>.<br><br></li>
<li>
Name the aggregate "OrdersTotal."<br><br></li>
<li>
Select Sum as the function.<br><br></li>
<li>
Select the <b>Aggregate On</b> item "Orders".<br><br></li>
<li>
Select OrderID as the <b>Field</b> to Sum.</li>
</ol>
<p>
The OrdersTotal aggregate is added to the DataEnvironment object as a new Field object. At <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defruntime">
</object><a href=JavaScript:alink_2.Click()>run time</a>, the OrdersTotal aggregate will contain a calculated value for each customer.</p>
<p>
To view the results, see "Binding Your Data Environment to a Hierarchical FlexGrid Control" later in this topic.</p>
<h2>Grouping the Customer Command Object by State</h2>
<p class=label>
<b>To group the customer Command object by state</b>
<ol>
<li>
Edit the Customer Command object's properties.<br><br></li>
<li>
Click the <b>Grouping </b>tab, and select <b>Group Command Object</b>.<br><br></li>
<li>
Name the grouping Command object "ByCountry."<br><br></li>
<li>
Select "Country" from the <b>Fields in Command </b>list, and then click <b>&gt;</b> to move it into the <b>Fields Used for Grouping</b> list.</li>
</ol>
<p>
An additional Recordset object, ByCountry, is exposed on top of the Customers Command object. When binding to the Hierarchical FlexGrid, you should bind to the ByCountry Recordset, not to the Customers Command object.</p>
<p>
To view the results, see "Binding Your Data Environment to a Hierarchical FlexGrid Control" later in this topic.</p>
<h2>Adding an Aggregate to Count the Number of Customers per State</h2>
<p class=label>
<b>To add an aggregate to count the number of customers per state</b>
<ol>
<li>
Edit the Customer Command object's properties.<br><br></li>
<li>
Click the <b>Aggregates </b>tab, and click <b>Add</b>.<br><br></li>
<li>
Name the aggregate "CustCount."<br><br></li>
<li>
Select Count as the function.<br><br></li>
<li>
Select the <b>Aggregate On</b> item "Grouping".<br><br></li>
<li>
Select CustID as the <b>Field</b> to Count.</li>
</ol>
<p>
Another field is added to the summary (grouping) Command object. This Field object contains a calculated value that counts the number of customers per state.</p>
<p>
To view the results, see "Binding Your Data Environment to a Hierarchical FlexGrid Control" later in this topic.</p>
<h2>Adding a Grand Total Aggregate to Count the Number of States with Customers</h2>
<p class=label>
<b>To add a Grand Total Aggregate to count the number of states with customers</b>
<ol>
<li>
Edit the Customer Command object's properties.<br><br></li>
<li>
Click the <b>Aggregates </b>tab, and then click <b>Add</b>.<br><br></li>
<li>
Name the aggregate "NumStatesWithCustomers."<br><br></li>
<li>
Select Count as the function.<br><br></li>
<li>
Select <b>GrandTotal</b> as the <b>Aggregate On</b> item.<br><br></li>
<li>
Select the "State" as the <b>Field</b>.<br><br></li>
<li>
Name the <b>Grand Total </b>"CustomerGrandTotal."</li>
</ol>
<p>
An additional Recordset object, NumStatesWithCustomers, is exposed on top of the Customers Command object. This new object contains the number of states that have customers.</p>
<p>
To view the results, see the following section.</p>
<h2>Binding Your Data Environment to a Hierarchical FlexGrid Control</h2>
<p>
The following scenario is provided so you can view the results of the previous scenarios. See the <a href="vbconhflexgridcontrol.htm">Hierarchical FlexGrid Control</a> for more information.</p>
<p class=label>
<b>To bind your Data Environment to a Hierarchical FlexGrid control</b>
<ol>
<li>
Once you have completed the previous Data Environment scenarios, drag an <b>MSHFlexGrid</b> control onto a Visual Basic form.<br><br></li>
<li>
From the Visual Basic property sheet, set the <b>DataSource</b> property to the DataEnvironment object that contains the Command object that you want to bind to the Hierarchical FlexGrid control. For example, specify DataEnvironment1.<br><br></li>
<li>
From the Visual Basic Properties window, set the <b>DataMember</b> property to a parent Command object in your Data Environment. Your data is now bound to a Hierarchical FlexGrid control.<br><br></li>
<li>
To view the data in the Hierarchical FlexGrid, select <b>Start</b> from the <b>Run</b> menu or press f5. The structure is retrieved and displays in the Hierarchical FlexGrid.</li>
</ol>
</BODY>
</HTML>
