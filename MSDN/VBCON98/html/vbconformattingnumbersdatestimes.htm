<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Formatting Numbers, Dates, and Times</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconformattingnumbersdatestimes"></a>Formatting Numbers, Dates, and Times</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconFormattingNumbersDatesTimesC">
</object></p>
<p>
Visual Basic provides great flexibility in displaying number formats, as well as date and time formats. You can easily display international formats for numbers, dates, and times.</p>
<p>
The Format function converts the numeric value to a text string and gives you control over the string’s appearance. For example, you can specify the number of decimal places, leading or trailing zeros, and currency formats. The syntax is:</p>
<p>
<b>Format</b>(<i>expression</i>[, <i>format</i>[, <i>firstdayofweek</i>[, <i>firstweekofyear</i>]]])</p>
<p>
The <i>expression</i> argument specifies a number to convert, and the <i>format</i> argument is a string made up of symbols that shows how to format the number. The most commonly used symbols are listed in the table below.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=24%><b>Symbol</b></td>
<td class=label width=76%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=24%>0</td>
<td width=76%>Digit placeholder; prints a trailing or a leading zero in this position, if appropriate.</td>
</tr>
<tr valign=top>
<td width=24%>#</td>
<td width=76%>Digit placeholder; never prints trailing or leading zeros.</td>
</tr>
<tr valign=top>
<td width=24%>. </td>
<td width=76%>Decimal placeholder.</td>
</tr>
<tr valign=top>
<td width=24%>,</td>
<td width=76%>Thousands separator.</td>
</tr>
<tr valign=top>
<td width=24%>– + $ ( ) space</td>
<td width=76%>Literal character; characters are displayed exactly as typed into the format string.</td>
</tr>
</table><br>
<p>
The <i>firstdayofweek</i> argument is a constant that specifies the first day of the week; the <i>firstweekofyear</i> argument is a constant that specifies the first week of the year. Both arguments are optional. For more information about these constants, see "Format Function" in the <i>Language Reference</i>.</p>
<h2>Named Formats</h2>
<p>
Visual Basic provides several standard formats to use with the Format function. Instead of designating symbols in the <i>format</i> argument, you specify these formats by name in the <i>format</i> argument of the Format function. Always enclose the format name in double quotation marks (<code>""</code>).</p>
<p>
The following table lists the format names you can use.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>Named format</b></td>
<td class=label width=75%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=25%>General Number</td>
<td width=75%>Displays number with no thousand separator.</td>
</tr>
<tr valign=top>
<td width=25%>Currency</td>
<td width=75%>Displays number with thousand separator, if appropriate; display two digits to the right of the decimal separator. Output is based on user's system settings.</td>
</tr>
<tr valign=top>
<td width=25%>Fixed</td>
<td width=75%>Displays at least one digit to the left and two digits to the right of the decimal separator.</td>
</tr>
<tr valign=top>
<td width=25%>Standard</td>
<td width=75%>Displays number with thousand separator, at least one digit to the left and two digits to the righseparator.</td>
</tr>
<tr valign=top>
<td width=25%>Percent</td>
<td width=75%>Multiplies the value by 100 with a percent sign at the end.</td>
</tr>
<tr valign=top>
<td width=25%>Scientific</td>
<td width=75%>Uses standard scientific notation.</td>
</tr>
<tr valign=top>
<td width=25%>General Date</td>
<td width=75%>Shows date and time if <i>expression</i> contains both. If <i>expression</i> is only a date or a time, the missing information is not displayed. Date display is determined by user's system settings.</td>
</tr>
<tr valign=top>
<td width=25%>Long Date</td>
<td width=75%>Uses the Long Date format specified<p>
by user's system settings.</p>
</td>
</tr>
<tr valign=top>
<td width=25%>Medium Date</td>
<td width=75%>Uses the <i>dd-mmm-yy</i> format (for example, 03-Apr-93). Date display is determined by user's system settings.</td>
</tr>
<tr valign=top>
<td width=25%>Short Date</td>
<td width=75%>Uses the Short Date format specified by user's system settings.</td>
</tr>
<tr valign=top>
<td width=25%>Long Time</td>
<td width=75%>Displays a time using user's system's long-time format; includes hours, minutes, seconds.</td>
</tr>
<tr valign=top>
<td width=25%>Medium Time</td>
<td width=75%>Shows the hour, minute, and "AM" or "PM" using the "<i>hh:mm</i> AM/PM" format.</td>
</tr>
<tr valign=top>
<td width=25%>Short Time</td>
<td width=75%>Shows the hour and minute using the <i>hh:mm</i> format.</td>
</tr>
<tr valign=top>
<td width=25%>Yes/No</td>
<td width=75%>Any nonzero numeric value (usually –1) is Yes. Zero is No.</td>
</tr>
<tr valign=top>
<td width=25%>True/False</td>
<td width=75%>Any nonzero numeric value (usually –1) is True. Zero is False.</td>
</tr>
<tr valign=top>
<td width=25%>On/Off</td>
<td width=75%>Any nonzero numeric value (usually –1) is On. Zero is Off.</td>
</tr>
</table><br>
<p>
The Format function supports many other special characters, such as the percentage placeholder and exponents.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Format Function" in the <i>Language Reference</i>.</p>
<h2>Number Formats</h2>
<p>
The following number conversions assume that the country in the Windows Control Panel is set to "English (United States)."</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>Format syntax</b></td>
<td class=label width=55%><b>Result</b></td>
</tr>
<tr valign=top>
<td width=45%>Format(8315.4, "00000.00")</td>
<td width=55%>08315.40</td>
</tr>
<tr valign=top>
<td width=45%>Format(8315.4, "#####.##")</td>
<td width=55%>8315.4</td>
</tr>
<tr valign=top>
<td width=45%>Format(8315.4, "##,##0.00")</td>
<td width=55%>8,315.40</td>
</tr>
<tr valign=top>
<td width=45%>Format(315.4,"$##0.00")</td>
<td width=55%>$315.40</td>
</tr>
</table><br>
<p>
The symbol for the decimal separator is a period (.), and the symbol for the thousands separator is a comma (,). However, the separator character that is actually displayed depends on the country specified in the Windows Control Panel.</p>
<h2>Printing Formatted Dates and Times</h2>
<p>
To print formatted dates and times, use the Format function with symbols representing date and time. These examples use the Now and Format functions to identify and format the current date and time. The following examples assume that the Regional Settings dialog box of the Windows Control Panel is set to "English(United States)".</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=47%><b>Format syntax</b></td>
<td class=label width=53%><b>Result</b></td>
</tr>
<tr valign=top>
<td width=47%>Format(Now, "<i>m/d/yy</i>")</td>
<td width=53%>1/27/93</td>
</tr>
<tr valign=top>
<td width=47%>Format(Now, "<i>dddd, mmmm dd, yyyy</i>")</td>
<td width=53%>Wednesday, January 27, 1993</td>
</tr>
<tr valign=top>
<td width=47%>Format(Now, "<i>d-mmm</i>")</td>
<td width=53%>27-Jan</td>
</tr>
<tr valign=top>
<td width=47%>Format(Now, "<i>mmmm-yy</i>")</td>
<td width=53%>January-93</td>
</tr>
<tr valign=top>
<td width=47%>Format(Now, "<i>hh:mm</i> AM/PM")</td>
<td width=53%>07:18 AM</td>
</tr>
<tr valign=top>
<td width=47%>Format(Now, "<i>h:mm:ss</i> a/p")</td>
<td width=53%>7:18:00 a</td>
</tr>
<tr valign=top>
<td width=47%>Format(Now, "<i>d-mmmm h:mm</i>")</td>
<td width=53%>3-January 7:18</td>
</tr>
</table><br>
<p>
By using the Now function with the format "<i>ddddd</i>" and "<i>ttttt,</i> " you can print the current date and time in a format appropriate for the selection in the Regional Settings dialog box of the Windows Control Panel.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=27%><b>Country</b></td>
<td class=label width=38%><b>Format syntax</b></td>
<td class=label width=35%><b>Result</b></td>
</tr>
<tr valign=top>
<td width=27%>Sweden</td>
<td width=38%>Format(Now, "<i>ddddd ttttt</i>")</td>
<td width=35%>1992-12-31 18.22.38</td>
</tr>
<tr valign=top>
<td width=27%>United Kingdom</td>
<td width=38%>Format(Now, "<i>ddddd ttttt</i>")</td>
<td width=35%>31/12/92 18:22:38 </td>
</tr>
<tr valign=top>
<td width=27%>Canada (French)</td>
<td width=38%>Format(Now, "<i>ddddd ttttt</i>")</td>
<td width=35%>92-12-31 18:22:38</td>
</tr>
<tr valign=top>
<td width=27%>United States</td>
<td width=38%>Format(Now, "<i>ddddd ttttt</i>")</td>
<td width=35%>12/31/92 6:22:38 PM</td>
</tr>
</table><br>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information about international considerations when using the Format function, see "Locale-Aware Functions" in "International Issues. " For more information about dates based on system locale, see "Writing International Code in Visual Basic" in "International Issues. "</p>
</BODY>
</HTML>
