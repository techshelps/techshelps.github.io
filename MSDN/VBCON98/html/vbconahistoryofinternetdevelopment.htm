<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A History of Development on the Internet</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconahistoryofinternetdevelopment"></a>A History of Development on the Internet</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAHistoryOfInternetDevelopmentC">
</object></p>
<p>
Visual Basic programming technology represents a new set of approaches to Web technology, focused on the Visual Basic developer. This section offers a brief history of the Web's evolution from linked static content to the dynamic, compiled environment of Visual Basic Internet applications.</p>
<h2>Static Content</h2>
<p>
The first applications on the Internet consisted of static pages that delivered their content to the browser and did not react dynamically to any actions the user performed. Although this model provides ready access to nicely formatted pages of information for your employees or potential customers, it provides limited interaction between the user and the Web server — and the static pages have to be manually edited to update their content.</p>
<h2>Dynamic Content through Gateway Programming</h2>
<p>
The development of gateway interfaces such as Common Gateway Interface (CGI), Internet Server Application Programming Interface (ISAPI), and others allowed users to add dynamic content to the Web. With dynamic content, a browser can send a request for information. The server, instead of returning a static page, runs a script or application and returns HTML that reflects up-to-date, accurate information.</p>
<p>
The disadvantage of gateway programs is that they are difficult to create and change. Gateway programs are not integrated into HTML files; in fact, they require an entirely different design process than do HTML files. In addition, all processing in a gateway program happens entirely on the server. This can increase server load and lead to backlogs in processing.</p>
<h2>Scripting</h2>
<p>
Scripting enables dynamic content by embedding executable scripts directly in an HTML page. Rather than querying the server for an executable, the browser can process scripts as it loads the HTML page. These scripts can be processed on either the client or the Web server. The most common languages for client-side scripting are VBScript and JavaScript. A common framework used for server-side scripting is called Active Server Pages, or ASP.</p>
<p>
In the ASP scripting model, HTML development and scripting development are part of the same process. This translates into tangible benefits, enabling Web providers to provide interactive business applications rather than merely publishing content. For example, a travel agency can go beyond just publishing flight schedules; it can use ASP scripting to enable customers to check available flights, compare fares, and reserve a seat on a flight.</p>
<p>
With ASP scripting, you can use any scripting language for which an appropriate scripting engine is available. ASP supplies scripting engines for Microsoft Visual Basic Scripting Edition (VBScript) and Microsoft JScript. You can incorporate sophisticated functionality using ActiveX components to process data and generate useful information.</p>
<h2>Visual Basic Internet Applications</h2>
<p>
Visual Basic Internet technology takes the process one step further by allowing you to link standard Visual Basic code to a user interface of HTML pages. This provides an extremely powerful mechanism for associating programming functionality with your Web pages, while allowing you to create dynamic, interactive content. With Visual Basic Internet technology, you can perform complex business operations while avoiding some of the intricacies of gateway programming or scripting. You can also enjoy all the benefits of working in Visual Basic, such as using class modules, controls, and designers, and debugging your code.</p>
<p>
There are two main types of Visual Basic Internet applications: IIS applications and DHTML applications:
<ul type=disc>
<li>
IIS applications, named for Microsoft Internet Information Server, reside on a Web server and are used to process incoming requests from a browser. IIS applications process the requests, run associated Visual Basic code, and return responses to the user. All processing for an IIS application happens on the server.<br><br></li>
<li>
DHTML applications, named for <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefdynamichtml">
</object><a href=JavaScript:alink_2.Click()>Dynamic HTML</a>, let you write Visual Basic code that handles events on any element of an HTML page. Most processing in a DHTML application can happen on the browser computer, although the application can make calls to the server if necessary. </li>
</ul>
<p>
DHTML applications require the end user to have Microsoft Internet Explorer version 4.0 or later, while IIS applications are browser- and operating system—independent to the end user. Because of this, IIS applications are the appropriate choice when you want to develop an application that reaches a broad audience. DHTML applications may be the more appropriate choice for intranet applications or applications that need to support remote or offline usage.</p>
<p>
There are also other types of applications you can create in Visual Basic that make use of the Internet. For example, you can create ActiveX components that can be used on the Internet. These include ActiveX controls that can be used on Web pages, ActiveX documents that can run in a browser, and ActiveX code components that can be deployed on a Web server for behind-the-scenes processing. In addition, you can use the WebBrowser control to use HTML pages within a forms-based application. </p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Other Internet Technologies in Visual Basic" for more information on incorporating ActiveX components into your Internet applications. For information on using the WebBrowser control, see the Internet Client SDK on the MSDN Library CD, under the heading "SDK Documentation."</p>
</BODY>
</HTML>
