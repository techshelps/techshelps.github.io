<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Columns</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconworkingwithcolumns"></a>Working with Columns</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconWorkingWithColumnsC">
</object></p>
<p>
You can dynamically change the data displayed in the DataGrid control by changing the DataSource property. For example, you can display a different table from the same database. If you do so, the DataGrid control will display the data with only default properties.</p>
<h2>Adding, Deleting, or Hiding Columns</h2>
<p>
You can programmatically add, delete, or hide Columns by using the properties and methods of the Columns collection and the Column object.</p>
<h3>Adding and Deleting a Column</h3>
<p>
To add a column at run time, use the Add method. If you first declare a variable and assign the new object to the variable, you can set various properties with concise code.</p>
<pre><code>Private Sub AddColumn()
   ' Add a column in the rightmost position. Then set its Visible, Width, 
   ' Caption, and Alignment properties. The DataField property specifies 
   ' which field the column will be bound to.
   Dim c As Column
   Set c = DataGrid1.Columns.Add(DataGrid1.Columns.Count)
   With c
      .Visible = True
      .Width = 1000
      .Caption = "My New Column"
      .DataField = Adodc1.Recordset.Fields("ProductName").Name
      .Alignment = dbgRight
   End With
End Sub
</code></pre>
<p>
You can delete any column by using the Remove method. Be sure to specify which column using the ColIndex argument. The following code will remove the clicked column.</p>
<pre><code>Private Sub DataGrid1_HeadClick(ByVal ColIndex As Integer)
   DataGrid1.Columns.Remove ColIndex
End Sub
</code></pre>
<h3>Hiding a Column</h3>
<p>
You can hide any column by setting its Visible property to False. This is especially useful when you want to limit columns that the user can view or edit. The example below simply iterates through the Columns collection, hiding all but a few columns.</p>
<pre><code>Private Sub HideColumns()
   ' Use the DataField property to determine which column is being 
   ' tested. Show only three columns: ProductName, UnitPrice, and 
   ' UnitsInStock. 
   
   Dim c As Column
   For Each c In DataGrid1.Columns
      Select Case c.DataField
      Case "ProductName"
         c.Visible = True
      Case "UnitPrice"
         c.Visible = True
      Case "UnitsInStock"
         c.Visible = True
         c.Caption = "In Stock" ' Change the column header.
      Case Else ' Hide all other columns.
         c.Visible = False
      End Select
   Next c
End Sub
</code></pre>
</BODY>
</HTML>
