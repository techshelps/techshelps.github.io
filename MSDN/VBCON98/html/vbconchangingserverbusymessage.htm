<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changing the Component Busy or Request Pending Messages</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconchangingserverbusymessage"></a>Changing the Component Busy or Request Pending Messages</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconChangingServerBusyMessageC">
</object></p>
<p>
The Component Busy and Component Request Pending dialog boxes are provided by Visual Basic as simple default messages. There are many situations where these dialog boxes may not meet your needs.
<ul type=disc>
<li>
Your program may call a method of an object provided by a component that has no user interface. Components created using Visual Basic, Professional or Enterprise Editions, for example, may run in the background without any visible forms.<br><br></li>
<li>
The component you call may have been created using the Remote Automation features of Visual Basic, Enterprise Edition, and may be running on another computer located at some distance from the user.<br><br></li>
<li>
If your program has loaded a Microsoft Excel workbook using the GetObject function, the workbook will not be visible when the user switches to Microsoft Excel. In fact, Microsoft Excel itself may not be visible, in which case the Switch To button does nothing.</li>
</ul>
<p>
In these situations, the Switch To button is inappropriate and may confuse the user of your program. You can specify a substitute message for either or both of the timeouts. Your messages will be displayed in a simple message box, without a Switch To button.</p>
<p>
For the request pending condition, the message box has only an OK button. For the component busy condition, an OK button and a Cancel button are provided. If the user presses Cancel, error -2147418111 (&amp;h80010001) will be raised in the procedure in which you made the request.</p>
<p>
The following properties of the App object determine whether the Component Busy or Component Request Pending dialog box will be replaced by a message box and allow you to specify the text and caption of the message box.</p>
<h2>OLEServerBusyMsgText Property</h2>
<p>
Specifies the message text to be displayed when the component busy condition occurs. Setting this property causes the alternate message box to be used in place of the usual Component Busy dialog box.</p>
<h2>OLEServerBusyMsgTitle Property</h2>
<p>
Specifies the caption to be used if an alternate message is supplied for the component busy condition. (Only setting this property will not cause the alternate message box to be used.)</p>
<h2>OLERequestPendingMsgText Property</h2>
<p>
Specifies the message text to be displayed when the request pending condition occurs. Setting this property causes the alternate message box to be used in place of the usual Component Request Pending dialog box.</p>
<h2>OLERequestPendingMsgTitle Property</h2>
<p>
Specifies the caption to be used if an alternate message is supplied for the request pending condition. (Only setting this property will not cause the alternate message box to be used.)</p>
<p>
The following example sets titles and message texts for both the component busy and pending request conditions, completely overriding the Component Busy and Component Request Pending dialog boxes.</p>
<pre><code>Public Const APP_TITLE = "Demo Application"

Private Sub cmdLongTransaction_Click()
   On Error Goto LongTransaction_Error
   ' You may wish to set the titles once, in Sub Main.
   App.OLEServerBusyMsgTitle = APP_TITLE

   App.OLERequestPendingMsgTitle = APP_TITLE
   ' Message texts specific to this request.
   App.OLEServerBusyMsgText = "The component for _
      the " &amp; "Long Transaction has not responded. _
      If " &amp; "you have been waiting more than five " _
      &amp; "minutes, you may wish to cancel this " _
      &amp; "request and try it later." &amp; vbCrLf _
      &amp; "Call Network Services to verify that the " _
      &amp; "component is running, or to report problems."
   App.OLERequestPendingMsgText = "Your request " _
      &amp; "is still executing. " &amp; vbCrLf _
      &amp; "Call Network Services to verify that the " _
      &amp; " component is running, or to report _
      problems."
   ' Code to make a request and use results...
   ' ...
LongTransaction_Cleanup:
   ' Code to perform any necessary cleanup...
   ' ...
   Exit Sub

LongTransaction_Error:
   If Err.Number = &amp;h80010001 Then
      MsgBox "Transaction cancelled"
   Else
      ' Code to handle other errors.
   End If
   Resume LongTransaction_Cleanup
End Sub
</code></pre>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;The length of your messages may be limited by the operating system. Messages more than a thousand characters in length can be used when the target operating system is Windows NT or Windows 95.</p>
</BODY>
</HTML>
