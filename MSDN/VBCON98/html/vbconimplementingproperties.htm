<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing Properties in Components</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconimplementingproperties"></a>Implementing Properties in Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconImplementingPropertiesC">
</object></p>
<p>
Adding Properties to a Class," in "Programming with Objects," in the <i>Visual Basic Programmer’s Guide </i>discusses in detail the many kinds of properties you can add to your classes, including simple data values, read-only properties, and property arrays.</p>
<p>
"Adding Properties to a Class" also describes the two ways you can declare properties: as public variables, or as property procedures.</p>
<p>
<i>In general, properties of objects provided by components should be implemented as property procedures.</i> Property procedures are more robust than data members. A property whose type is an enumeration, for example, cannot be validated unless implemented as a Property Get and Property Let.</p>
<p>
The only exception to this rule is a simple numeric or string property which requires no validation and which, when changed, does not immediately affect other properties of the object.</p>
<p>
An object property — that is, any property that contains an object reference instead of an ordinary data type — should almost always be implemented with property procedures. An object property implemented as a public object variable can be set to Nothing accidentally, possibly destroying the object. This is discussed in "Organizing Objects: The Object Model," later in this chapter.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Internally, Visual Basic generates a pair of property procedures for every public variable you declare. For this reason, declaring public variables doesn’t provide any size or performance benefits.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Adding Properties to a Class," in "Programming with Objects," in the <i>Programmer’s Guide.</i></p>
</BODY>
</HTML>
