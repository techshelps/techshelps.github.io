<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding the Page Designer Treeview</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconunderstandingpagedesignertreeview"></a>Understanding the Page Designer Treeview</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUnderstandingPageDesignerTreeviewC">
</object></p>
<p>
The designer window for your DHTML applications consists of two parts — the detail panel, on the right and the treeview panel, on the left. The detail panel shows the HTML page as it will appear in the browser and is the area you use to draw and manipulate your page's appearance. The treeview is used to show the elements that make up the HTML page and their relationship to the overall object model for the application. When you first begin a project for a DHTML application, the treeview contains three elements — the Document, the Body, and a paragraph, or &lt;P&gt;, tag.</p>
<p>
After you reference an existing HTML page or begin creating your own in the page designer, the treeview displays a listing for each tag on the HTML page. This includes all visible elements on the page, such as buttons, text, images, checkboxes, and options boxes, and a series of tags, such as text formatting tags for bold, italic, and underline, organizational tags such as <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="IDH_vbdefDIV">
</object><a href=JavaScript:alink_2.Click()>DIV</a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="IDH_vbdefSPAN">
</object><a href=JavaScript:alink_3.Click()>SPAN</a>, and other tags.</p>
<p>
Although all elements on a page are displayed in the treeview, you can only write code for those elements that contain an <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="IDH_vbdefIDAttribute">
</object><a href=JavaScript:alink_4.Click()>ID attribute</a>. The treeview displays in bold the elements with ID attributes. For each element, the page designer lists the ID, if one exists; the type of element; and in some cases the beginning of the content for that element. If an element does not have an ID, you can assign one to it in the Properties window.</p>
<p>
The treeview provides three valuable shortcuts:
<ul type=disc>
<li>
When you select an item in the treeview, Visual Basic highlights the appropriate item in the detail panel and in the Properties window. This can help you determine at a glance the correspondence between elements in the treeview and on the page. Note that this works in reverse as well: When you select an element on the detail panel or in the Properties window, Visual Basic highlights the corresponding element in the treeview and scrolls the treeview accordingly.<br><br></li>
<li>
You can double-click an element in the treeview to open the Code Editor window for that element. The system selects the default event for the element.<br><br></li>
<li>
For ActiveX controls that do not have a visible user interface at run time (such as the common dialog control), the treeview is the only way you can select and manipulate these elements after adding them to your page.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Making Elements Programmable" in this chapter for more information on how to work with element IDs.</p>
</BODY>
</HTML>
