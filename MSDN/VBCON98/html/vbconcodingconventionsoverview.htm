<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual Basic Coding Conventions</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcodingconventionsoverview"></a>Visual Basic Coding Conventions</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCodingConventionsOverviewC">
</object></p>
<p>
This appendix presents a set of suggested coding conventions for Visual Basic programs.</p>
<p>
Coding conventions are programming guidelines that focus not on the logic of the program but on its physical structure and appearance. They make the code easier to read, understand, and maintain. Coding conventions can include:
<ul type=disc>
<li>
Naming conventions for objects, variables, and procedures.<br><br></li>
<li>
Standardized formats for labeling and commenting code.<br><br></li>
<li>
Guidelines for spacing, formatting, and indenting.</li>
</ul>
<p>
In the sections that follow, each of these areas are discussed, along with examples of good usage.</p>
<h2>Topics</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=6%><a href="vbconwhycodingconventions.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconwhycodingconventions.htm">Why Coding Conventions?</a><p>
The main reason for using a consistent set of coding conventions is to standardize the structure and coding style of an application so that you and others can easily read and understand the code.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconobjectnamingconventions.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconobjectnamingconventions.htm">Object Naming Conventions</a><p>
Objects should be named with a consistent prefix that makes it easy to identify the type of object. This section lists recommended conventions for controls, data access objects, and menus.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconconstantvariablenamingconventions.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconconstantvariablenamingconventions.htm">Constant and Variable Naming Conventions</a><p>
This topic lists recommended conventions for constants and variables supported by Visual Basic. It also discusses the issues of identifying data type and scope.</p>
</td>
</tr>
<tr valign=top>
<td width=6%><a href="vbconstructuredcodingconventions.htm"><img src="leaf.gif" border=0></a></td>
<td width=94%><a href="vbconstructuredcodingconventions.htm">Structured Coding Conventions</a><p>
In addition to naming conventions, structured coding conventions, such as code commenting and consistent indenting, can greatly improve code readability. This topic discusses standards for these areas.</p>
</td>
</tr>
</table>
</BODY>
</HTML>
