<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Control Creation Basics</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconolecontrolcreationbasics"></a>Control Creation Basics</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconOLEControlCreationBasicsC">
</object></p>
<p>
If you're used to developing Visual Basic applications, the world of control creation may at first seem upside down and backward. Events flow in the opposite direction from what you're used to. Many properties you're used to setting as a consumer of controls are suddenly off limits. Focus is — well, we'll get to focus in due time.</p>
<p>
In short, you're not the owner of an application any more — you're just a widget, a cog in somebody else's machine. Relax. Let things unfold naturally.</p>
<p>
The topics in this section provide the basic facts and concepts you need to master this new way of thinking about controls.
<ul type=disc>
<li>
<a href="vbcontheusercontrolobject.htm">The UserControl Object</a>&nbsp;&nbsp;&nbsp;Introduces the UserControl object, which is the basis of all ActiveX controls created with Visual Basic. If you read no other topic, read this one.<br><br></li>
<li>
<a href="vbconthreewaystobuildactivexcontrols.htm">Three Ways to Build ActiveX Controls</a>&nbsp;&nbsp;&nbsp;Discusses the three models for building controls in Visual Basic, and their different purposes and requirements.<br><br></li>
<li>
<a href="vbcontwowaystopackageactivexcontrols.htm">Two Ways to Package ActiveX Controls</a>&nbsp;&nbsp;&nbsp;You can package your controls to be shared, or compile them into your executables.<br><br></li>
<li>
<a href="vbconwerenotinkansasanymore.htm">Understanding Control Lifetime and Key Events</a>&nbsp;&nbsp;&nbsp;If you're used to creating forms in Visual Basic, you'll need to adjust to a new set of key events, and new ideas of control lifetime.</li>
</ul>
</BODY>
</HTML>
