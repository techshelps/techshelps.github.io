<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Plotting Points</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconplottingpoints"></a>Plotting Points</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconPlottingPointsC">
</object></p>
<p>
Controlling an individual pixel is a simple graphics operation. The PSet method sets the color of a pixel at a specified point:</p>
<p>
[<i>object.</i>]<b>PSet</b> <b>(</b><i>x</i>, <i>y</i><b>)</b>[, <i>color</i>]</p>
<p>
The <i>x</i> and <i>y</i> arguments are single precision, so they can take either integer or fractional input. The input can be any numeric expression, including variables.</p>
<p>
If you don’t include the <i>color</i> argument, PSet sets a pixel to the foreground color (ForeColor). For example, the following statements set various points on the current form (the form to which the code is attached), MyForm, and picPicture1:</p>
<pre><code>PSet (300, 100)
PSet (10.75, 50.33)
MyForm.PSet (230, 1000)
picPicture1.PSet (1.5, 3.2)
</code></pre>
<p>
Adding a <i>color</i> argument gives you more control:</p>
<pre><code>' Set 50, 75 to bright blue.
PSet (50, 75), RGB(0, 0, 255)
</code></pre>
<p>
The Blanker application plots points with randomly selected colors to create the Confetti demo. The PSetDemo procedure creates the confetti:</p>
<pre><code>Sub PSetDemo ()
   ' Set Red to random value.
   R = 255 * Rnd
   ' Set Green to random value.
   G = 255 * Rnd
   ' Set Blue to random value.
   B = 255 * Rnd
   ' Set horizontal position.
   XPos = Rnd * ScaleWidth
   ' Set vertical position.
   YPos = Rnd * ScaleHeight
   ' Plot point with random color.
   PSet (XPos, YPos), RGB(R, G, B)
End Sub
</code></pre>
<p>
The resulting confetti display is shown in Figure 12.13.</p>
<p class=label>
<b>Figure 12.13&nbsp;&nbsp;&nbsp;Confetti display in the Blanker application</b></p>
<p>
<img src="avp12013.gif" border=0></p>
<p>
To "erase" a point, set it to the background color:</p>
<pre><code>PSet (50, 75), BackColor
</code></pre>
<p>
As described in "Drawing Lines and Shapes" later in this chapter, you can precede the (<i>x</i>, <i>y</i>) coordinates by Step, which makes the point relative to the last location drawn.</p>
<p>
The Point method is closely related to the PSet method, but it returns the color value at a particular location:</p>
<pre><code>PointColor = Point (500, 500)
</code></pre>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information, see "PSet Method" and "Point Method" in the <i>Language Reference</i>.</p>
</BODY>
</HTML>
