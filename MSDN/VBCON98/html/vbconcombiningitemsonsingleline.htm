<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Displaying Different Items on a Single Line</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcombiningitemsonsingleline"></a>Displaying Different Items on a Single Line</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCombiningItemsOnSingleLineC">
</object></p>
<p>
The items you display or print can include property values, constants, and variables (either string or numeric). The Print method, discussed in "Displaying Text on Forms and Picture Boxes," prints the value of numeric items. Positive number values have a leading and a trailing space. Negative numeric values display their sign instead of a leading space.</p>
<p>
Use a semicolon (;) or a comma (,) to separate one item from the next. If you use a semicolon, Visual Basic prints one item after another, without intervening spaces. If you use a comma, Visual Basic skips to the next tab column.</p>
<p>
For example, the following statement prints to the current form:</p>
<pre><code>Print "The value of X is "; X; "and the value of Y _
   is "; Y
</code></pre>
<p>
If <code>X</code> contains the value 2 and <code>Y</code> contains the value 7, the statement produces this output:</p>
<pre><code>The value of X is 2 and the value of Y is 7
</code></pre>
<p>
By default, each Print method prints the text and moves to the next line. If there are no items, Print simply skips a line. A series of Print statements (in the following example, for a picture box named picLineCount) automatically uses separate lines:</p>
<pre><code>picLineCount.Print "This is line 1."
picLineCount.Print "This is line 2."
</code></pre>
<p>
By placing a semicolon (or comma) at the end of the first statement, however, you cause the output of the next Print statement to appear on the same line:</p>
<pre><code>picLineCount.Print "This all appears ";
picLineCount.Print "on the same line."
</code></pre>
</BODY>
</HTML>
