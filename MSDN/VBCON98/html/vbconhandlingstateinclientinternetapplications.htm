<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Managing State in DHTML Applications</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconhandlingstateinclientinternetapplications"></a>Managing State in DHTML Applications</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconHandlingStateInClientInternetApplicationsC">
</object></p>
<p>
Typically, Internet applications are <i>stateless,</i> in that the protocol that passes requests and responses between the browser and Web server is not capable of maintaining&nbsp; information between each request. Therefore, the protocol does not "remember" any information from previous requests when it receives a new request. This is also generally true of DHTML applications, in that the browser does not usually store detailed information between actions.</p>
<p>
Because the protocol itself cannot maintain state, you must use other means to store information you want the application to remember between requests. In a DHTML application, you use the GetProperty and PutProperty functions to store and retrieve data. These functions store data as long as the end user's Web browser window is open.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The GetProperty and PutProperty functions are part of the modDHTML module that is added to your project when you create a new project using the DHTML Application template.</p>
<p>
You store information using the PutProperty function. In this function, you identify the name of the property in which you want to store information, and the value to store. The browser stores the indicated data in a client-side <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefcookie">
</object><a href=JavaScript:alink_2.Click()>cookie</a>. The PutProperty function exposes cookie functionality in a way that is simpler to use than directly coding cookies in your event procedures. </p>
<p>
You retrieve information using the GetProperty function. In this function, you identify the name of an existing property that you want to retrieve from the client-side cookie. You can assign this value to fields on the page, or use it in your calculations.</p>
<h2>Example:&nbsp; Saving and Retrieving State</h2>
<p>
For example, suppose you want to build a simple application that will store and retrieve data across page boundaries. The application will consist of two pages: one to store values, and one to retrieve them.</p>
<p>
The first page in the application contains a text field into which the end user can enter a value, and a button that stores the value to the cookie. The code for the button, called StoreButton1, would look like this:</p>
<pre><code>Private Function StoreButton1_onclick() As Boolean
   PutProperty BaseWindow.Document, "Property1", TextField1.Value
End Function
</code></pre>
<p>
The second page in the same application contains a button that, when clicked, retrieves the property from the cookie. The code for that button, called "GetButton1", would look like this:</p>
<pre><code>Private Function GetButton1_onclick() As Boolean
   MyValue.innerText = "The value of the property is " &amp; _
      GetProperty(BaseWindow.Document, "Property1")
End Function
</code></pre>
<p>
This function uses the innerText property of Dynamic HTML to replace the contents of a DIV tag, called "MyValue," with a sentence which contains the retrieved property.</p>
</BODY>
</HTML>
