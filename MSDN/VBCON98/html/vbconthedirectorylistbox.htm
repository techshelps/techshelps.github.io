<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Directory List Box</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconthedirectorylistbox"></a>The Directory List Box</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTheDirectoryListBoxC">
</object></p>
<p>
The directory list box displays the directory structure of the current drive on the user's system, beginning with the top-level directory. Initially, the name of the current directory appears highlighted and indented from directories above it in the hierarchy, back to the root. Subdirectories are indented beneath the current directory in the directory list box. As a user moves up or down the list, each of the items is highlighted in turn.</p>
<h2>Identifying Individual Directories</h2>
<p>
Each directory in the box has an integer identifier associated with it that allows you to identify individual directories. This capability is not provided by the common dialog control. The directory specified by the Path property (<code>Dir1.Path</code>) always has the ListIndex value of – 1. The directory immediately above it has the ListIndex value of – 2, the one above that of – 3, and so on up to the root. The first subdirectory of <code>Dir1.Path</code> has the ListIndex 0. If there are multiple directories at the first subdirectory level, the next has the ListIndex value of 1, then 2, and so on, as shown in Figure 7.18.</p>
<p class=label>
<b>Figure 7.18&nbsp;&nbsp;&nbsp;A directory structure displayed in the directory list box</b></p>
<p>
<img src="avp07036.gif" border=0></p>
<h2>Setting the Current Directory</h2>
<p>
Use the Path property of the directory list box to set or return the current directory in the box (ListIndex = – 1). For example, if you assign "c:\payroll" to <code>Drive1.Path</code> in Figure 7.18, the \Payroll directory becomes selected as the current working directory.</p>
<p>
Similarly, you can assign the Drive property of the drive list box to the Path property of the directory list box:</p>
<pre><code>Dir1.Path = Drive1.Drive
</code></pre>
<p>
When this assignment is executed, the directory list box displays all the available directories and subdirectories on that drive. By default, the directory list box also displays all directories above, and any subdirectories immediately below, the current directory of a drive assigned to the <code>Dir1.Path</code> property. The directory list box doesn't <i>set</i> the current directory at the operating system level; it merely highlights the directory and gives it the ListIndex value of – 1.</p>
<p>
To set the current working directory, use the ChDir statement. For example, the following statement changes the current directory to the one displayed in the directory list box:</p>
<pre><code>ChDir Dir1.Path
</code></pre>
<p>
In an application that uses file controls, you can set the current directory to the directory where the application's executable (.exe) file is located with the Application object:</p>
<pre><code>ChDrive App.Path   ' Set the drive.
ChDir App.Path      ' Set the directory.
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The Path property is available only at run time, not at design time.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "App Object" for more information on the Application object.</p>
<h2>Clicking a Directory Item</h2>
<p>
When a user clicks an item in a directory list box, that item is highlighted. When an item is double-clicked, it is assigned to the Path property, its ListIndex property gets the value –1, and the directory list box is redrawn to show its immediate subdirectories.</p>
<h2>Finding a Directory's Relative Position</h2>
<p>
The ListCount property returns the number of directories below the currently expanded directory, not the total number of items in the directory list box. Because the ListIndex value of the currently expanded directory is always –1, you can write code to determine how far down from the root the currently expanded directory is in the hierarchy. For example:</p>
<pre><code>' Initialize for currently expanded directory.

GoHigher = 0   
' Dir1.List(x) returns empty string if the directory 
' doesn't exist.
Do Until Dir1.List(GoHigher) = ""
   GoHigher = GoHigher - 1
Loop
' Convert to positive number, if desired.
LevelsAbove = Abs(GoHigher)
</code></pre>
</BODY>
</HTML>
