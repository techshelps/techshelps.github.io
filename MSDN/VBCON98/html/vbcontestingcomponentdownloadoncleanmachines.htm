<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Testing Component Download on Clean Machines</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontestingcomponentdownloadoncleanmachines"></a>Testing Component Download on Clean Machines</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTestingComponentDownloadOnCleanMachines_C">
</object></p>
<p>
By testing your download on a clean machine — one that does not already have Visual Basic installed — you get an accurate look at the download experience your users are likely to encounter. This is an essential part of the testing process. You can simulate a clean machine by removing certain files and registry settings from one of your development machines, then restoring those files and settings after you have finished testing.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The procedures in this section require a copy of regsvr32.exe to be installed on your machine. If it is not, you can find it on the Visual Basic installation CD-ROM.</p>
<h2>Simulating a Clean Machine</h2>
<p>
One of the systems you test should be a machine that does not have Visual Basic or the Visual Basic Run-time Library installed — a "clean machine". If you do not have access to this type of machine, you can simulate one by following the instructions in this section. These steps may also be taken to clean a client machine that has been exposed to one or more of the files in the download.</p>
<p class=indent>
<B><b>Warning</b></B>&nbsp;&nbsp;&nbsp;Removing, renaming, or unregistering files as described below can impact other programs on your machine. Before deleting, renaming, or unregistering any files, it is advisable to copy these files to a safe alternate location from which you can restore them.</p>
<p>
This process requires a copy of Regsvr32.exe. This file may be installed onto your development machine; if it is not, it may be found on the Visual Basic installation CD-ROM.</p>
<p class=label>
<b>To simulate a clean machine</b>
<ol>
<li>
From the <b>Start</b> menu, click <b>Run</b>.<br><br></li>
<li>
In the Run dialog, type in the following command;<pre><code>Regsvr32.exe /U &lt;Path to Windows folder&gt;\System\Msvbvm60.dll
</code></pre>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you are running on a Windows NT machine, the Msvbvm60.dll is installed into the Windows\System32 folder.</p></li>
<li>
From the <b>Start</b> menu, click <b>Find</b>, and then select <b>Files or Folder</b>.<br><br></li>
<li>
Delete or rename the following two files, located in either your System or System32 directory:<p class=tl>
Msvbvm60.dll<br>
Asycfilt.dll</P><p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Do not delete other versions of these files in alternative locations. </p></li>
<li>
Unregister and delete or rename the item to be downloaded and any remaining dependency files installed on the client machine:<ul type=disc>
<li>
If you are using Internet Explorer 4.0 or later, access the Downloaded Program Files folder in either the Windows or the Winnt40 directory, right click the control, and select Remove. The system automatically removes the item and any of its dependencies.<br><br></li>
<li>
If you are using a version of Internet Explorer prior to 4.0, use the following syntax:<p class=tl>
<b>Regsvr32.exe /U &lt;PATH&gt;\System\<i>file</i></b></P></li>
</ul>
<p class=atl>
where <i>file </i>is the name of the file to unregister.</p><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Most controls install into the Windows\System, Windows\System 32, Windows\OCCache, or the Downloaded Program Files folders. However, some downloaded controls are not visible in Explorer's file view after download. It is necessary for these files to open a DOS window, navigate to the Downloaded Program Files folder, then run regsvr32 for those .ocx files to unregister them. You can then delete them at the DOS prompt.</p><p class=atl>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;For a list of dependency files, open the .inf file created by the Package and Deployment Wizard and look in the Add.Code section. If you are uncertain whether a file needs to be unregistered, you can run REGSVR32.EXE with the /U switch. If you receive an error, the file does not need to be unregistered.</p></li>
</ol>
<p class=label>
<b>To test your download on a simulated clean machine</b>
<ul type=disc>
<li>
Once all of the dependency files have been unregistered and renamed or deleted, access the Web page the Package and Deployment Wizard created. The component should download.</li>
</ul>
<h2>Restoring Your Simulated Clean Machine</h2>
<p>
You can reverse all the changes you made when you simulated a clean machine, if necessary. Normally, you do not need to do this because downloading the component you were testing should install and register the necessary files. However, if something goes wrong during download, you can restore the files yourself.</p>
<p>
There are two steps to restoring your machine: You must rename or restore any files you deleted or renamed, and you must re-register the files you removed from the registry. When you restore, you must rename or restore any file you deleted or renamed.</p>
<p class=label>
<b>To retrieve a file you deleted</b>
<ul type=disc>
<li>
Retrieve it from the Windows Recycle Bin.<p class=tl>
-or-</P></li>
<li>
Obtain a fresh copy from the Visual Basic CD-ROM, if it was originally obtained as part of your installation.<p class=tl>
-or-</P></li>
<li>
Obtain a fresh copy from the appropriate third party, if the file did not come from the Visual Basic installation.</li>
</ul>
<p>
Once the necessary files have been restored, you can run Regsvr32.exe to register those files that you unregistered. For example, to register the Visual Basic Run-time Library, execute the following command from the run dialog:</p>
<pre><code>Regsvr32 &lt;Path to Windows&gt;\System\Msvbvm60.dll
</code></pre>
<p class=label>
<b>To register a file you unregistered</b>
<ul type=disc>
<li>
Use the Regsvr32.exe program to register the file, as shown in the previous example.</li>
</ul>
</BODY>
</HTML>
