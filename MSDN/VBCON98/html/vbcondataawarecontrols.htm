<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Forms and Data-Aware Controls</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondataawarecontrols"></a>Forms and Data-Aware Controls</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDataAwareControls_C">
</object></p>
<p>
To create interfaces for data entry, data editing, or data viewing, Visual Basic forms and controls have always offered versatility and ease of programming.</p>
<p>
In version 6.0, several new data-aware (data-bound) controls have been added. In addition to these new controls, the new Validate event and CausesValidation property prevent a control from losing focus until all data has been validated. For example, you can create data-entry forms that validate data by preventing the user from tabbing off the form until all fields have been filled in.</p>
<p>
Another enhancement always available to you is the Microsoft Data Formatting Object Library. This new object library allow you to format data and preserve the underlying format to write back to the database.</p>
<h3>New Data-Aware Controls</h3>
<p>
Several new ActiveX controls, specifically designed to view and/or edit data, have been added. These include:
<ul type=disc>
<li>
<a href="vbconusingdatagridcontrol.htm">DataGrid Control</a> — a new grid control that can work with the ADO Data Control or ADO Recordset objects.<br><br></li>
<li>
<a href="vbconusingdataboundcontrolsdbcomboboxdbgriddblistbox.htm">DataList Control</a> — a control that functions exactly like the DBList control, but is optimized for use with OLE DB data sources.<br><br></li>
<li>
<a href="vbconusingdataboundcontrolsdbcomboboxdbgriddblistbox.htm">DataCombo Control</a> — functions like the DBCombo control, but can use OLE DB data sources.<br><br></li>
<li>
<a href="vbconhflexgridcontrol.htm">Hierarchical FlexGrid Control</a> — capable of displaying hierarchical cursors created with the Data Environment.<br><br></li>
<li>
<a href="vbconusingdatarepeatercontrol.htm">DataRepeater Control</a> — lets you use a user control to display data, and "repeats" the control to view multiple records.<br><br></li>
<li>
<a href="vbconusingmonthviewcontrol.htm">MonthView Control</a> — displays dates graphically as a calendar.<br><br></li>
<li>
<a href="vbconusingdatetimepickercontrol.htm">DateTimePicker Control</a> — similarly to the MonthView control, it displays dates in a text box; clicking the text box causes a graphic calendar to drop down for selection of a new date.</li>
</ul>
<h3>Data Binding Capabilities Added to Existing Controls</h3>
<p>
Intrinsic controls and many ActiveX Controls have new data properties associated with them now, in addition to the DataSource and DataField properties that have always existed. These are the four properties of interest:
<ul type=disc>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproDataSource">
</object><a href=JavaScript:alink_2.Click()>DataSource Property</a>: Returns or sets the source of data for a control. You can now dynamically set the DataSource of a control or object at runtime to any valid data source, for example: an ADO Recordset, the DataEnvironment, a class that’s a data source, or to a data source control on the form.<br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproDataMemberProperty">
</object><a href=JavaScript:alink_3.Click()>DataMember Property</a>: Returns or sets the specific data set within the source to use. Data sources in Visual Basic 6.0 can contain multiple sets of data, and the DataMember property lets you specify which set of data to use. (Not all data sources have multiple members, for example the ADO Data Control returns only a single recordset.) The Data Environment, on the other hand, returns a DataMember for each Command defined. Visual Basic displays a list of available data members when this property is selected. <br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="daproDataField">
</object><a href=JavaScript:alink_4.Click()>DataField Property</a>: Returns or sets the specific field to bind a control to. (Same functionality as in previous versions of Visual Basic.)<br><br></li>
<li>
<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproDataFormatProperty">
</object><a href=JavaScript:alink_5.Click()>DataFormat Property</a>: Lets you define the automatic formatting of data as its retrieved from the data source.</li>
</ul>
<p>
The first three properties narrow in scope, from the DataSource down to the DataField, qualifying the source of the data. However, for complex data consumers such as the DataGrid, the DataField and DataFormat properties aren’t required, as the control handles them for you. For more information about the difference between simple-bound and complex-bound controls, see <a href="vbconcreatingdata-awareclasses.htm">Creating Data-Aware Classes</a>.</p>
<p>
The controls which can be data bound using some or all of these properties include:
<ul type=disc>
<li>
CheckBox Control<br><br></li>
<li>
ComboBox Control<br><br></li>
<li>
DataCombo Control (new)<br><br></li>
<li>
DataGrid Control (new)<br><br></li>
<li>
DataList Control (new)<br><br></li>
<li>
DataRepeater Control (new)<br><br></li>
<li>
DateTimePicker Control (new)<br><br></li>
<li>
DBCombo Control<br><br></li>
<li>
DBList Control<br><br></li>
<li>
FlexGrid Control<br><br></li>
<li>
Hierarchical FlexGrid Control (new)<br><br></li>
<li>
Image Control<br><br></li>
<li>
ImageCombo Control (new)<br><br></li>
<li>
Label Control<br><br></li>
<li>
ListBox Control<br><br></li>
<li>
Masked Edit Control<br><br></li>
<li>
MonthView Control (new)<br><br></li>
<li>
MSChart Control<br><br></li>
<li>
PictureBox Control<br><br></li>
<li>
RichTextBox Control<br><br></li>
<li>
TextBox Control</li>
</ul>
<p>
Additionally, the new Extender object also includes the DataSource, DataMember, and DataField properties. The Extender object is used to program controls added dynamically to your forms. For more information on the Extender and adding controls at run time, see <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbmthAddMethod(ControlsCollection)">
</object><a href=JavaScript:alink_6.Click()>Add Method (Controls Collection)</a> and <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjExtenderObject">
</object><a href=JavaScript:alink_7.Click()>Extender Object</a>.</p>
<h3>Validation Enhancements</h3>
<p>
Data validation is now easier using the Validate event with the CausesValidation property. Using the two new features in tandem, you can prevent a control from losing focus until the information it contains has been validated. For more information about these features, see <a href="vbcstrestrictfocususingvalidationeventcausesvalidationproperty.htm">Validating Control Data by Restricting Focus</a>.</p>
</BODY>
</HTML>
