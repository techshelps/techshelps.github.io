<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the TestThing Test Project</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontestingyouroledll"></a>Creating the TestThing Test Project</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTestingYourOLEDLLC">
</object></p>
<p>
In order to test the ThingDemo component, you need a test project. The test project creates instances of the classes a component provides, and exercises their properties, methods, and events.</p>
<p>
To enable debugging of in-process components, Visual Basic allows you to load two or more projects into a <i>project group.</i> In addition to enabling in-process debugging, the project group makes it easier to load your component project and test project.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This topic is part of a series that walks you through creating a sample ActiveX DLL. It begins with the topic <a href="vbconcreatinganinprocesscomponent.htm">Creating an ActiveX DLL</a>.</p>
<p class=label>
<b>To add a test project to the project group</b>
<ol>
<li>
On the <b>File</b> menu, click <b>Add Project</b> to open the <b>Add Project</b> dialog box.<p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;Do not click <b>Open Project</b> or <b>New Project</b>, as these will close your ActiveX DLL project.</p></li>
<li>
Double-click the <b>Standard EXE</b> icon to add an ordinary EXE project. You can now see both projects in the <b>Project Explorer</b> window, and the caption of the <b>Project Explorer</b> window shows the default project group name.<p>
<img src="avtcm010.gif" border=0></P><p class=tl>
Notice that ThingDemo appears in bold-face type in the <b>Project Explorer</b> window. This means ThingDemo is the <i>Startup project </i>— that is, the project that will be run when you press f5.</P></li>
<li>
In the <b>Project Explorer </b>window, right-click on <b>Project1 </b>to open the context menu. Click <b>Set as Start Up </b>to make the EXE project the Startup project for the project group.<p class=atl>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;The test project must be the Startup project for the group. If the DLL project is the Startup project for the group, the test project will never be run.</p></li>
<li>
On the <b>Project</b> menu, click <b>References</b> to open the <b>References</b> dialog box. Check <b>ThingDemo</b>, then click <b>OK</b>.<p>
<img src="avtcm011.gif" border=0></P><p class=tl>
If <b>ThingDemo</b> doesn’t appear in the list of available references, click <b>Cancel</b> to close the dialog box. In the <b>Project Explorer</b> window click <b>Project1</b> to make it the active project, and then repeat Step 3.</P><p class=tl>
When working with project groups, make sure you have the right project active before clicking the <b>Project</b> menu.</P></li>
<li>
Press F2 to open the <b>Object Browser</b>. In the Project/Library list, select ThingDemo to show its modules and classes. You can use the Object Browser to examine the Thing object and its properties and methods.<p class=tl>
Click <b>Close</b> to close the <b>Object Browser</b> when you’re done.</P></li>
<li>
On the <b>File</b> menu, click <b>Save Project Group</b> to save the test project and the project group. Name the files as shown below. Name the test project ThingTest. Name the project group ThingDemo. Visual Basic will give the project group file a .vbg extension.<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>File</b></td>
<td class=label width=40%><b>File name</b></td>
<td class=label width=27%><b>Extension</b></td>
</tr>
<tr valign=top>
<td width=33%>Form</td>
<td width=40%>ThingTest_Form1</td>
<td width=27%>.frm</td>
</tr>
<tr valign=top>
<td width=33%>Project</td>
<td width=40%>ThingTest</td>
<td width=27%>.vbp</td>
</tr>
<tr valign=top>
<td width=33%>Project group</td>
<td width=40%>ThingDemo</td>
<td width=27%>.vbg</td>
</tr>
</table><br>
</li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;Test projects for DLLs are discussed in more detail in "Creating a Test Project for an In-Process Component" in "Debugging, Testing, and Deploying Components."</p>
<h3>Step by Step</h3>
<p>
This topic is part of a series that walks you through creating a sample ActiveX DLL.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=38%><b>To</b></td>
<td class=label width=62%><b>See</b></td>
</tr>
<tr valign=top>
<td width=38%>Go to the next step</td>
<td width=62%><a href="vbconcreatingtestingobjects03.htm">Creating and Testing Thing Objects</a></td>
</tr>
<tr valign=top>
<td width=38%>Start from the beginning</td>
<td width=62%><a href="vbconcreatinganinprocesscomponent.htm">Creating an ActiveX DLL</a></td>
</tr>
</table><br>
</BODY>
</HTML>
