<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Check Box Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcheckboxcontrol"></a>Using the Check Box Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCheckBoxControlC">
</object></p>
<p>
The check box control displays a check mark when it is selected. It is commonly used to present a Yes/No or True/False selection to the user. You can use check box controls in groups to display multiple choices from which the user can select one or more.</p>
<p class=label>
<b>Figure 7.5&nbsp;&nbsp;&nbsp;The check box control</b></p>
<p>
<img src="avp07001.gif" border=0></p>
<p>
The check box control is similar to the option button control in that each is used to indicate a selection that is made by the user. They differ in that only one option button in a group can be selected at a time. With the check box control, however, any number of check boxes may be selected.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Selecting Individual Options with Check Boxes" in "Forms, Controls, and Menus" for a simple demonstration of the check box control.</p>
<h2>The Value Property</h2>
<p>
The Value property of the check box control indicates whether the check box is checked, unchecked, or unavailable (dimmed). When selected, the value is set to 1. For example:</p>
<p>
<img src="avp03009.gif" border=0></p>
<p>
The following table lists the values and equivalent Visual Basic constants that are used to set the Value property.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Setting</b></td>
<td class=label width=33%><b>Value</b></td>
<td class=label width=34%><b>Constant</b></td>
</tr>
<tr valign=top>
<td width=33%>Unchecked</td>
<td width=33%>0</td>
<td width=34%>vbUnchecked</td>
</tr>
<tr valign=top>
<td width=33%>Checked</td>
<td width=33%>1</td>
<td width=34%>vbChecked</td>
</tr>
<tr valign=top>
<td width=33%>Unavailable</td>
<td width=33%>2</td>
<td width=34%>vbGrayed</td>
</tr>
</table><br>
<p>
The user clicks the check box control to indicate a checked or unchecked state. You can then test for the state of the control and program your application to perform some action based on this information.</p>
<p>
By default, the check box control is set to vbUnchecked. If you want to preselect several check boxes in a series of check boxes, you can do so by setting the Value property to vbChecked in the Form_Load or Form_Initialize procedures.</p>
<p>
You can also set the Value property to vbGrayed to disable the check box. For example, you may want to disable a check box until a certain condition is met.</p>
<h2>The Click Event</h2>
<p>
Whenever the user clicks on the check box control, the Click event is triggered. You can then program your application to perform some action depending upon the state of the check box. In the following example, the check box control's Caption property changes each time the control is clicked, indicating a checked or unchecked state.</p>
<pre><code>Private Sub Check1_Click()
   If Check1.Value = vbChecked Then
      Check1.Caption = "Checked"
   ElseIf Check1.Value = vbUnchecked Then
      Check1.Caption = "Unchecked"
   End If
End Sub
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the user attempts to double-click the check box control, each click will be processed separately; that is, the check box control does not support the double-click event.</p>
<h2>Responding to the Mouse and Keyboard</h2>
<p>
The Click event of the check box control is also triggered when the focus is shifted to the control with the keyboard by using the TAB key and then by pressing the SPACEBAR.</p>
<p>
You can toggle selection of the check box control by adding an ampersand character before a letter in the Caption property to create a keyboard shortcut. For example:</p>
<p>
<img src="avp07033.gif" border=0></p>
<p>
In this example, pressing the ALT+C key combination toggles between the checked and unchecked states.</p>
<h2>Visually Enhancing the Check Box Control</h2>
<p>
The check box control, like the command button and option button controls, may be visually enhanced by altering the setting of the Style property and then using the Picture, DownPicture, and DisabledPicture properties. For example, you may want to add an icon or bitmap to a check box or display a different image when the control is clicked or disabled.</p>
</BODY>
</HTML>
