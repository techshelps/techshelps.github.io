<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Slider Scenario 2: Selecting a Range of Values With the Slider</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconsliderscenario2"></a>Slider Scenario 2: Select a Range of Values with the Slider</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconSliderScenario2C">
</object></p>
<p>
Another feature of the Slider control is the ability to select a range of values. In this implementation, when the user presses the shift key while clicking on the Slider control, the MouseDown event occurs. Code in that event sets the SelectRange and SelStart properties. When the user releases the mouse button, the MouseUp event occurs, and in that code the SelLength property is set, from which a range of values can be extracted.</p>
<p>
The code below uses the following objects:
<ul type=disc>
<li>
Form named "frmSlider"<br><br></li>
<li>
Slider control named "sldSelect"</li>
</ul>
<p class=label>
<b>To select a range of values with the Slider control</b>
<ol>
<li>
Set the Slider control's <b>SelectRange</b> property to <b>True</b>.<br><br></li>
<li>
In the MouseDown event, test to see if the shift key is down.<br><br></li>
<li>
In the MouseUp event, set the <b>SelLength</b> property to <b>Value</b> - <b>SelStart</b>.</li>
</ol>
<h2>Set the Slider Control's SelectRange Property to True</h2>
<p>
To enable the selection of a range of values, the SelectRange property must be set to True. One place to do this is the Form object's Load event, as shown below:</p>
<pre><code>Private Sub Form_Load()
   sldSelect.SelectRange = True
End Sub
</code></pre>
<p>
Alternatively, you can set the property to True at design time by right-clicking on the control, and clicking on Properties to display the Property Pages dialog box.</p>
<h2>MouseDown Event: Test to See if the Shift Key is Down</h2>
<p>
In order to select a range, the user must hold down the shift key while moving the slider's thumb. The MouseDown event has a <i>shift</i> argument, which allows you to determine if the shift key is being held down. The If statement can be used to test for this possibility, as shown below:</p>
<pre><code>Private Sub sldSelect_MouseDown _
(Button As Integer, Shift As Integer, _
x As Single, y As Single)

   If Shift = 1 Then 
      ' If the user has the Shift key down, 
      ' handle it here.
   End If
End Sub
</code></pre>
<h2>MouseDown Event: Set the SelStart and SelLength Properties</h2>
<p>
If the shift key is being held down by the user, the code then sets the SelStart and SelLength properties to appropriate values. The SelStart property specifies where a selection of values will begin. In the present context, the SelStart property would be set to where the thumb is placed — the Slider control's Value property.</p>
<p>
The SelLength property specifies a range of values to select; this property begins at the SelStart value. In the MouseDown event, a new range is being selected, so any previous range must be deselected by setting the SelLength property to 0. This is shown in the code below:</p>
<pre><code>sldSelect.SelStart = SldResize.Value 
' Set previous SelLength (if any) to 0.
sldSelect.SelLength = 0 
</code></pre>
<h2>MouseUp Event: Set the SelLength to the Value - SelStart Property</h2>
<p>
To select a range, the user must hold the shift key down while dragging the mouse. The code to set the new range is therefore found in the MouseUp event, which occurs when the end user releases the slider thumb. The code below sets the SelLength property with a simple formula, the value of the thumb minus the SelStart property:</p>
<pre><code>sldSelect.Value - sldSelect.SelStart
</code></pre>
<p>
However, it is possible for the user to release the shift key while selecting a range. In that case no selection should occur. Therefore the above code will only execute if the shift key is still down. As with the MouseDown event, an If statement can test for this possibility:</p>
<pre><code>Private Sub sldSelect_MouseUp _
(Button As Integer, Shift As Integer, _
x As Single, y As Single)
   
   If Shift = 1 Then
   ' If user selects backwards from a point, 
   ' an error will occur.
   On Error Resume Next
   ' Else set SelLength using SelStart and 
   ' current value.
      sldSelect.SelLength = _
      sldSelect.Value - sldSelect.SelStart
   Else
      'If user lifts SHIFT key, set SelLength 
      ' to 0 (to deselect the SelRange) and exit.
      sldSelect.SelLength = 0
   End If
End Sub
</code></pre>
<h2>The Complete Code</h2>
<p>
The complete code is shown below:</p>
<pre><code>Private Sub Form_Load()
   sldSelect.SelectRange = True
End Sub

Private Sub sldSelect_MouseDown _
(Button As Integer, Shift As Integer, _
x As Single, y As Single)

   If Shift = 1 Then
      sldSelect.SelStart = sldSelect.Value
      ' Set previous SelLength (if any) to 0.
      sldSelect.SelLength = 0
   End If
End Sub

Private Sub sldSelect_MouseUp _
(Button As Integer, Shift As Integer, _
x As Single, y As Single)

   If Shift = 1 Then
   ' If user selects backwards from a point,
   ' an error will occur.
   On Error Resume Next
   ' Else set SelLength using SelStart and
   ' current value.
      sldSelect.SelLength = _
      sldSelect.Value - sldSelect.SelStart
   Else
      'If user lifts SHIFT key, set SelLength
      ' to 0 (to deselect the SelRange) and exit.
      sldSelect.SelLength = 0
   End If
End Sub
</code></pre>
</BODY>
</HTML>
