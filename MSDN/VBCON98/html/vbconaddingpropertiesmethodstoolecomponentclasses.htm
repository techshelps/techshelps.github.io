<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Properties and Methods to Classes</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconaddingpropertiesmethodstoolecomponentclasses"></a>Adding Properties and Methods to Classes</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAddingPropertiesMethodsToOLEComponentClassesC">
</object></p>
<p>
The default interface of a class in your component is simply the set of all public properties, methods, and events in the class module, UserControl, or UserDocument that defines the class.</p>
<p>
Adding properties and methods is easy — a method is any Public Sub or Public Function procedure you declare in the module that defines your class; a property is any public property procedure or public variable you declare.</p>
<p>
The following related topics examine the issues you should be aware of when declaring interface elements in a component.
<ul type=disc>
<li>
<a href="vbconimplementingproperties.htm">Implementing Properties in Components</a>&nbsp;&nbsp;&nbsp;Factors to be aware of when creating properties for classes provided by components.<br><br></li>
<li>
<a href="vbconimplementingmethods.htm">Implementing Methods in Components</a>&nbsp;&nbsp;&nbsp;Factors to be aware of when creating methods for classes provided by components.<br><br></li>
<li>
<a href="vbcondatatypesusedinpropertiesmethods.htm">Data Types Allowed in Properties and Methods</a>&nbsp;&nbsp;&nbsp;The interface for a class provided by a component follows more strict rules than those required for private objects; at stake is the stability of client programs.<br><br></li>
<li>
<a href="vbconchoosingdefaultpropertyforclassmodule.htm">Choosing a Default Property or Method for a Class</a>&nbsp;&nbsp;&nbsp;You can select either a property or a method as the default member for a class.</li>
</ul>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;The following names cannot be used as property or method names, because they belong to the underlying IUnknown and IDispatch interfaces: QueryInterface, AddRef, Release, GetTypeInfoCount, GetTypeInfo, GetIDsOfNames, and Invoke. These names will cause a compilation error.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;The mechanics of property and method declaration are discussed in "Adding Properties to a Class" and "Adding Methods to a Class," in "Programming with Objects," in the <i>Visual Basic Programmer’s Guide.</i></p>
</BODY>
</HTML>
