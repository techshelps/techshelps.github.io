<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add-In Troubleshooting</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconaddintroubleshooting"></a>Add-In Troubleshooting</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAddInTroubleshootingC">
</object></p>
<p>
If you get an error when creating or activating your add-in, check the following:
<ul type=disc>
<li>
Make sure that the add-in was created as an ActiveX DLL or ActiveX EXE project.<br><br></li>
<li>
Make sure the add-in component is registered on the machine on which you are going to use it<p class=tl>
<B><b>For more information</b></B> about registering your add-in, see "Registering Add-Ins" in this chapter.</P></li>
<li>
Make sure that Microsoft Visual Basic Extensibility is selected in the References dialog box. (In Visual Basic, click the Project menu, then click References.) This is because the VBIDE collection and VBA object are part of that type library. If it’s not active, references to extensibility (add-in) objects cannot be resolved properly, and you’ll get errors at compile time.<br><br></li>
<li>
If your add-in uses command bars, make sure that Microsoft Office 8.0 Object Library is selected in the References dialog box. This gives your program access to the command bar objects, collections, properties, and events.<br><br></li>
<li>
Make sure that the project name written to the Vbaddin.ini file add-in entry <i>exactly</i> matches the name of your project.<p class=tl>
You can view or set the project name by clicking the Project menu, then clicking <i>project name </i>Properties. Enter the project name in the Project Name box.</P></li>
<li>
Make sure that the Name property of your class module that exposes the IDTExtensibility interface matches the name written to the Vbaddin.ini file entry.<br><br></li>
<li>
Make sure that the Visual Basic run-time DLL and any other necessary files are on file paths that are available to your add-in. (This shouldn’t be an issue if you run the Visual Basic setup program.)<br><br></li>
<li>
Make sure that your add-in’s class module contains procedures for the OnConnection, OnDisconnection, OnStartupComplete, and OnAddInsUpdate events. Add-ins require that these four event procedures be present, even if they contain only a comment. The procedures must contain at least one line of code, otherwise the compiler will remove the empty procedures from the class module, and the add-in will not work correctly.</li>
</ul>
</BODY>
</HTML>
