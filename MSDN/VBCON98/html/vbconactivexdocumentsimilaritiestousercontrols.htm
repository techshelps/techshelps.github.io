<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Document Similarities to ActiveX Controls</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconactivexdocumentsimilaritiestousercontrols"></a>ActiveX Document Similarities to ActiveX Controls</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconActiveXDocumentSimilaritiesToUserControlsC">
</object></p>
<p>
In many ways, ActiveX documents resemble ActiveX controls. Knowing how they are similar can be of some benefit, as the programming techniques, caveats, and strategies apply to both.</p>
<p>
Here are a few of the relevant similarities:
<ul type=disc>
<li>
Like an ActiveX control, an ActiveX document can't exist without a container. Whereas an ActiveX control is contained in a form, UserDocument, or UserControl, the ActiveX document is contained in a container such as Internet Explorer or Microsoft Binder.<br><br></li>
<li>
The author of a control cannot know for sure which development environment the control will eventually be used in. Likewise, the developer of an ActiveX document cannot know which container will be used to view the ActiveX document.<br><br></li>
<li>
The UserDocument object also features several events that are also found on the UserControl object. The common events include: Initialize, InitProperties, ReadProperties, EnterFocus, ExitFocus, WriteProperties, and the Terminate event.</li>
</ul>
<p>
Because of the great similarity between ActiveX documents and ActiveX controls, much of what is written in "Building ActiveX Controls," also applies to building ActiveX documents. The following topics are of particular relevance:
<ul type=disc>
<li>
"The UserControl Object," discusses the core document for ActiveX controls. This object has great similarities to the UserDocument object.<br><br></li>
<li>
"Controls You Can Use As Constituent Controls" discusses the controls that can be placed on a UserControl. These same points can generally be applied to an ActiveX document.<br><br></li>
<li>
"Object Models for Controls" discusses a strategy of dealing with complex controls, which can also be applied to ActiveX documents.<br><br></li>
<li>
"Adding Internet Features to Controls" explains, in detail, the AsyncRead method, the AsyncReadComplete event, and the Hyperlink object. These same features are available for ActiveX documents.<br><br></li>
<li>
"Adding Properties to Controls" and "Adding Methods to Controls" show you how and why to add public properties and methods to controls. The same methods apply (in part) to ActiveX documents.<br><br></li>
<li>
"Creating Robust Controls" gives a thorough list of do's and don'ts for creating robust controls. Many of the principles apply to ActiveX Documents as well.</li>
</ul>
</BODY>
</HTML>
