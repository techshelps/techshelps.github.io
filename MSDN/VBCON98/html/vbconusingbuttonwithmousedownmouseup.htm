<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Button with MouseDown and MouseUp</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingbuttonwithmousedownmouseup"></a>Using Button with MouseDown and MouseUp</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingButtonWithMouseDownMouseUpC">
</object></p>
<p>
You use the <i>button</i> argument with MouseDown to determine which button is being pressed and with MouseUp to determine which button has been released. Because only one bit is set for each event, you can't test for whether two or more buttons are being used at the same time. In other words, MouseDown and MouseUp only recognize one button press at a time.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In contrast, you can use the MouseMove event to test for whether two or more buttons are being pressed simultaneously. You can also use MouseMove to test for whether a particular button is being pressed, regardless of whether or not another button is being pressed at the same time. For more information, see "Using Button with MouseMove" later in this chapter.</p>
<p>
You can specify which button causes a MouseDown or MouseUp event with simple code. The following procedure tests whether <i>button</i> equals 1, 2, or 4:</p>
<pre><code>Private Sub Form_MouseDown (Button As Integer, _
      Shift As Integer, X As Single, Y As Single)
   If Button = 1 Then Print "You pressed _
      the left button."
   If Button = 2 Then Print "You pressed _
      the right button."
   If Button = 4 Then Print "You pressed _
      the middle button."
End Sub
</code></pre>
<p>
If the user presses more than one button, Visual Basic interprets that action as two or more separate MouseDown events. It sets the bit for the first button pressed, prints the message for that button, and then does the same for the next button. Similarly, Visual Basic interprets the release of two or more buttons as separate MouseUp events.</p>
<p>
The following procedure prints a message when a pressed button is released:</p>
<pre><code>Private Sub Form_MouseUp(Button As Integer, _
      Shift As Integer, X As Single, Y As Single)
   If Button = 1 Then Print "You released _
      the left button."
   If Button = 2 Then Print "You released _
      the right button."
   If Button = 4 Then Print "You released _
      the middle button."
End Sub
</code></pre>
</BODY>
</HTML>
