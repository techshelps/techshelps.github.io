<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Performing a Stored Procedure That Returns Multiple Resultsets</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconperformingstoredprocedurethatreturnsmultipleresultsets"></a>Running a Stored Procedure That Returns Multiple Resultsets</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconPerformingStoredProcedureThatReturnsMultipleResultsets_C">
</object></p>
<h2>RDO</h2>
<p>
This example illustrates how to perform a query that returns more than one resultset. It’s common for a stored procedure to return more than a single set of rows or a resultset that contains results from an action query. As a result, your code must deal with each of the resultsets individually, or else you won’t be able to use the product of your query. In RDO, you use the MoreResults method to step through the resultsets one at a time. Each call to MoreResults closes the current resultset and moves to the next (if there is one).</p>
<pre><code>Private Sub MultipleRSButton_Click()
 &nbsp; sql = "Select * from Authors Where year_born is not null; " _
 &nbsp;&nbsp; &amp; "Select * from Authors where year_born is&nbsp; null"
 &nbsp; Set rs = cn.OpenResultset(sql)
 &nbsp; rdoGrid1.ShowData rs

 &nbsp; i = MsgBox("Ready for next results?", vbYesNoCancel)
 &nbsp; If i = vbYes Then
 &nbsp;&nbsp;&nbsp;&nbsp; If rs.MoreResults Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rdoGrid1.ShowData rs
 &nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp; End If
End Sub
</code></pre>
<h2>ADO</h2>
<p>
The following code illustrates how to handle SPs that return multiple resultsets in ADO. ADO’s approach is different from the RDO approach in that ADO uses the NextRecordset method in which you assign the next recordset in the batch to an ADO Recordset object. The next recordset read doesn't overwrite the first one, as it does in RDO. ADO also allows for multiple recordsets, if the data provider supports it.</p>
<pre><code>Private Sub MultipleRSButton_Click()
 &nbsp; Dim rs As New ADODB.Recordset
 &nbsp; sql = "Select * from Authors Where year_born is not null; " _
 &nbsp;&nbsp; &amp; "Select * from Authors where year_born is&nbsp; null"
 &nbsp; rs.Open sql, cn
 &nbsp; Do
 &nbsp;&nbsp;&nbsp;&nbsp; i = MsgBox("Ready for results?", vbYesNoCancel)
 &nbsp;&nbsp;&nbsp;&nbsp; If i = vbYes Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ADOGrid1.ShowData rs
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set rs = rs.NextRecordset
 &nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp; Loop Until rs.State = adStateClosed
End Sub
</code></pre>
</BODY>
</HTML>
