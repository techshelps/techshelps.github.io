<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StatusBar Scenario: Show Various Properties of a Database</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconstatusbarscenario1"></a>StatusBar Scenario: Show Various Properties of a Database</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconStatusBarScenario1C">
</object></p>
<p>
When editing records of a database, a possible application of the StatusBar control would be to inform the user of various properties such as the name of the table being edited, its creation date, and the date of the last update.</p>
<p>
The code below uses the following objects:
<ul type=disc>
<li>
Form named "frmDataviewer"<br><br></li>
<li>
StatusBar Control named "sbrData"<br><br></li>
<li>
Data control named "datData"</li>
</ul>
<p class=label>
<b>To add a StatusBar that shows database properties</b>
<ol>
<li>
Use the Add method to create a collection of Panel objects.<br><br></li>
<li>
Configure each Panel object with the AutoSize property.<br><br></li>
<li>
Use the Panel object's Text property to display database properties. <br><br></li>
<li>
Reset the properties using the Select Case statement in the PanelClick event.</li>
</ol>
<h2>Use the Add Method to Create a Collection of Panel Objects</h2>
<p>
To create a collection of Panel objects at run time, use the Add method. First, declare a variable as type Panel. As you add each Panel object, the variable will contain the reference to the newly created object. The code below uses the Form object's Load event to create three Panel objects.</p>
<pre><code>Private Sub Form_Load()
   Dim pnlX As Panel
   Dim i As Integer
   For i = 1 to 3 ' First panel already exists.
      Set pnlX = sbrData.Panels.Add()
   Next i
End Sub
</code></pre>
<p>
Note that after adding three Panel objects to the collection, there are really four panels on the control because the control creates one by default.</p>
<h2>Configure Each Panel Object with the AutoSize Property</h2>
<p>
One of the features of the StatusBar control is the ability of panels to automatically resize according to their contents. The example iterates through all the Panel objects, and sets the AutoSize property for each to sbrSpring (1). With this setting, each panel "springs" to share the total width of the control.</p>
<pre><code>Private Sub Form_Load()
   Dim pnlX As Panel
   Dim i As Integer
   For i = 1 to 3 ' First panel already exists.
      Set pnlX = sbrData.Panels.Add()
   Next i
   
   ' Change the AutoSize of all panels.
   For i = 1 to 4                ' &lt; -- New code
      sbrData.Panels(i).AutoSize = sbrSpring ' New
   Next i                               ' New
End Sub
</code></pre>
<h2>Use the Panel Object's Text Property to Display Database Properties</h2>
<p>
To change the information displayed in any panel, set the Text property of the Panel object. The code below displays information about a database that has been opened with Data Access Objects.</p>
<p>
In the Form object's Load event, database variables are first created and assigned to an open database ("Biblio.mdb") and a recordset ("Authors"). The code then assigns the Name, DateCreated, LastUpdated, and LockEdit properties to each Panel object's Text property.</p>
<pre><code>' Declare database variables.
Dim myDB As Database, myRs As Recordset
' Set the Database to the BIBLIO.MDB database.
Set myDB = DBEngine.Workspaces(0). _
OpenDatabase("BIBLIO.MDB")
' Set the recordset variable to the Authors table.
Set myRs = _
myDB.OpenRecordset("Publishers", dbOpenTable)
' Set Text properties with recordset properties.
sbrData.Panels(1).Text = "name: " &amp; myRs.Name
sbrData.Panels(2).Text = "Date Created: " &amp; _
myRs.DateCreated
sbrData.Panels(3).Text = "Last Updated " &amp; _
myRs.LastUpdated
sbrData.Panels(4).Text = "Lockedits: " &amp; myRs.LockEdits 
</code></pre>
<h2>Reset Properties Using the Select Case Statement in the PanelClick Event</h2>
<p>
The StatusBar control can also be used to reset the properties that are being displayed. In the present scenario, a DataGrid control is bound to the Data control. For more information on how to data-bind controls, see "Using the ADO Data Control" in "Using Visual Basic's Standard Controls" of the Programmer's Guide. Among the properties displayed in the StatusBar, only the LockEdits property can be reset. To accomplish this, use a Select Case statement within the PanelClick event to determine which Panel object was clicked. The PanelClick event contains a reference to the Panel that the user clicked. Using this reference, you can reset the Text property of the clicked Panel object.</p>
<p>
The code below first creates a variable of type Recordset and sets it to the recordset opened with the Data control. The Select Case statement is then used to test the Panel object's Index property. If the Index is 4, the LockEdits property is toggled between -1 (True) and 0 (False). Finally, the Panel object's Text property is updated with the new information.</p>
<pre><code>Private Sub sbrData_PanelClick(ByVal Panel As Panel)
   Dim myRs As Recordset ' Declare Recordset variable.
   ' The Data control is named "datData"
   Set myRs = datData.Recordset ' Set variable.
    
   Select Case Panel.Index
   Case 1 to 3   
      ' Can't set these panels.
   Case 4 ' Updateable Property is settable.
      ' Toggle the property.
      myRs.LockEdits = Abs(myRs.LockEdits) - 1
      ' Update the Panel object's Text property.
      sbrData.Panels(4).Text = "LockEdits: " _
      &amp; myRs.LockEdits
   End Select
End Sub
</code></pre>
</BODY>
</HTML>
