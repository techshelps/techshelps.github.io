<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Button to Enhance Graphical Mouse Applications</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingbuttontoenhancegraphicalmouseapplications"></a>Using Button to Enhance Graphical Mouse Applications</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingButtonToEnhanceGraphicalMouseApplicationsC">
</object></p>
<p>
You can use the <i>button</i> argument to enhance the Scribble application described in "The MouseMove Event" earlier in this chapter. In addition to drawing a continuous line when the left mouse button is pressed and stopping when the button is released, the application can draw a straight line from the last point drawn when the user presses the right button.</p>
<p>
When writing code, it is often helpful to note each relevant event and the desired response. The three relevant events here are the mouse events:
<ul type=disc>
<li>
Form_MouseDown: This event takes a different action depending on the state of the mouse buttons: If the left button is down, set <code>DrawNow</code> to True and reset drawing coordinates; If the right button is down, draw a line.<br><br></li>
<li>
Form_MouseUp: If the left button is up, set <code>DrawNow</code> to False.<br><br></li>
<li>
Form_MouseMove: If <code>DrawNow</code> is True, draw a line.</li>
</ul>
<p>
The variable <code>DrawNow</code> is declared in the Declarations section of the form:</p>
<pre><code>Dim DrawNow As Boolean
</code></pre>
<p>
The MouseDown procedure has to take a different action, depending on whether the left or right mouse button caused the event:</p>
<pre><code>Private Sub Form_MouseDown (Button As Integer, _
      Shift As Integer, X As Single, Y As Single)
   If Button = vbLeftButton Then
      DrawNow = True
      CurrentX = X
      CurrentY = Y
   ElseIf Button = vbRightButton Then
      Line -(X, Y)
   End If
End Sub
</code></pre>
<p>
The following MouseUp procedure turns off drawing only when the left button is released:</p>
<pre><code>Private Sub Form_MouseUp (Button As Integer, _
      Shift As Integer, X As Single, Y As Single)
   If Button = vbLeftButton Then DrawNow = False
End Sub
</code></pre>
<p>
Note that within the MouseUp procedure, a bit set to 1 (vbLeftButton) indicates that the corresponding mouse button is released and drawing is turned off.</p>
<p>
The following MouseMove procedure is identical to the one in the version of the Scribble application found in "The MouseMove Event" earlier in this chapter.</p>
<pre><code>Private Sub Form_MouseMove (Button As Integer, _
      Shift As Integer, X As Single, Y As Single)
   If DrawNow Then Line -(X, Y)
End Sub
</code></pre>
</BODY>
</HTML>
