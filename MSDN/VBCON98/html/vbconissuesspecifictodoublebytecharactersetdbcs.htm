<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Issues Specific to the Double Byte Character Set (DBCS)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconissuesspecifictodoublebytecharactersetdbcs"></a>Issues Specific to the Double-Byte Character Set (DBCS)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconIssuesSpecificToDoubleByteCharacterSetDBCSC">
</object></p>
<p>
The <i>double-byte character set</i> (DBCS) was created to handle East Asian languages that use ideographic characters, which require more than the 256 characters supported by ANSI. Characters in DBCS are addressed using a 16-bit notation, using 2 bytes. With 16-bit notation you can represent 65,536 characters, although far fewer characters are defined for the East Asian languages. For instance, Japanese character sets today define about 12,000 characters.</p>
<p>
In locales where DBCS is used — including China, Japan, and Korea — both single-byte and double-byte characters are included in the character set. The single-byte characters used in these locales conform to the 8-bit national standards for each country and correspond closely to the ASCII character set. Certain ranges of codes in these single-byte character sets (SBCS) are designated as <i>lead bytes</i> for DBCS characters. A consecutive pair made of a lead byte and a trail byte represents one double-byte character. The code range used for the lead byte depends on the locale.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;DBCS is a different character set from Unicode. Because Visual Basic represents all strings internally in Unicode format, both ANSI characters and DBCS characters are converted to Unicode and Unicode characters are converted to ANSI characters or DBCS characters automatically whenever the conversion is needed. You can also convert between Unicode and ANSI/DBCS characters manually. For more information about conversion between different character sets, see "DBCS String Manipulation Functions."</p>
<p>
When developing a DBCS-enabled application with Visual Basic, you should consider:
<ul type=disc>
<li>
Differences between Unicode, ANSI, and DBCS.<br><br></li>
<li>
DBCS sort orders and string comparison.<br><br></li>
<li>
DBCS string manipulation functions.<br><br></li>
<li>
DBCS string conversion.<br><br></li>
<li>
How to display and print fonts correctly in a DBCS environment.<br><br></li>
<li>
How to process files that include double-byte characters.<br><br></li>
<li>
DBCS identifiers.<br><br></li>
<li>
DBCS-enabled events.<br><br></li>
<li>
How to call Windows APIs.</li>
</ul>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Developing a DBCS-enabled application is good practice, whether or not the application is run in a locale where DBCS is used. This approach will help you develop a flexible, portable, and truly international application. None of the DBCS-enabling features in Visual Basic will interfere with the behavior of your application in environments using exclusively single-byte character sets (SBCS), and the size of your application will not increase because both DBCS and SBCS use Unicode internally.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For limitations on using DBCS for access and shortcut keys, see "Designing an International-Aware User Interface."</p>
</BODY>
</HTML>
