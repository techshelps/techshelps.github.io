<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Template WebItem Events</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontemplatewebitemevents"></a>Template Webitem Events</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTemplateWebItemEvents_C">
</object></p>
<p>
Tags within an HTML template file can act as event sources if the browser calls the server when the user selects their corresponding HTML elements. Elements call the server if their HTML tags have attributes that contain a URL. For example, when the user selects a hyperlink, the browser sends a URL request to the server to display another page. The hyperlink tag can therefore be treated as an event source in the webclass, because the webclass can intercept this request and process Visual Basic code for it.</p>
<p>
When you add a template, Visual Basic scans the file and makes note of each tag within it that can make a server request. The designer displays the attributes of these tags in the right panel. Most tags have only one attribute that can call the server, but some tags, such as the IMG tag, have multiple attributes that can do so. There are three steps to setting up template webitem events:
<ol>
<li>
You choose which of the tag attributes displayed in the Detail panel you want to treat as events.<br><br></li>
<li>
You perform a process known as "connecting" for each attribute you want to process.<br><br></li>
<li>
You write code for each connected event.</li>
</ol>
<p>
Connecting an attribute means that you are activating it, or enabling the attribute to be treated as an event. Until an attribute is connected, it does not appear in the Code Editor window for the webclass and you cannot write procedures for it. After the tag attribute is connected, it appears in the Procedure drop-down list in the Code Editor window with the other standard events. You can select the template event and write code for it like you would any Visual Basic event.</p>
<p>
A template event differs from a standard event in two main ways:
<ul type=disc>
<li>
Template events are generated from an .htm file. A standard event is predefined and appears automatically for every template in the webclass. Because template events are generated from the HTML, you can have a different set of template events for each template file.<br><br></li>
<li>
Template events must be connected before they can be programmed. Standard events are always available in the Code Editor window.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Adding HTML Templates to the Webclass" for information on adding a template file to the webclass and viewing the tags that can act as events. See "Connecting Events in a Webclass" for instructions on connecting tags to events and webitems.</p>
</BODY>
</HTML>
