<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling Requests Pending to an ActiveX Component</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconhandlingrequestspendingtoactivexcomponent"></a>Handling Requests Pending to an ActiveX Component</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconHandlingRequestsPendingToActiveXComponentC">
</object></p>
<p>
It usually takes only a fraction of a second to set a property or call a method of an object. At times, however, your request may not be finished immediately.
<ul type=disc>
<li>
If you call the Close method of a Workbook in Microsoft Excel while the user has a dialog box open, Microsoft Excel signals that it is busy and cannot execute your request. This can lead to a <i>component busy</i> condition<i>.</i><br><br></li>
<li>
If you call a method that performs a lengthy operation, such as a large amount of database work when the database is very active, you may try to perform another operation while the first operation is still pending. This can lead to a <i>request pending</i> condition<i>.</i><br><br></li>
<li>
If you have two or more programs making calls to a shared component, one call must be completed before another can begin. Components handle such conflicts by <i>serializing</i> the requests, that is, making them wait in line. This can also lead to a request pending condition.</li>
</ul>
<p>
<i>Component busy</i> is like getting a busy signal when you make a telephone call. You know you're not going to get through, so you may as well hang up and try again later.</p>
<p>
<i>Request pending</i> is like having your call go through, and then having the person you're calling keep you talking much longer than you intended. If your request is serialized, then request pending is like having the other party pick up the telephone and say immediately, "Can you hold, please?"</p>
<h2>The Component Busy Condition</h2>
<p>
A component may reject your request because it has a modal dialog box open, or because a user edit operation is in progress. For example, Microsoft Excel rejects requests from a client application while a spreadsheet cell is being edited.</p>
<p>
Visual Basic assumes that the busy condition is temporary and keeps trying the request for a specified timeout interval. When that time is up, Visual Basic displays the Component Busy dialog box, as shown in Figure 10.6.</p>
<p class=label>
<b>Figure 10.6&nbsp;&nbsp;&nbsp;The Component Busy dialog box</b></p>
<p>
<img src="avp10007.gif" border=0></p>
<p>
The user can retry the request, cancel the request, or switch to the component and fix the problem (for example, by dismissing the dialog box). If the user chooses Cancel, the error &amp;h80010001 (RPC_E_CALL_REJECTED) is raised in the procedure that made the request.</p>
<h2>The Request Pending Condition</h2>
<p>
Once a component has accepted your application's request, your application must wait until the request has been completed. If the request takes a long time, the user may attempt to minimize your program or resize it to get it out of the way.</p>
<p>
After a short timeout interval, Visual Basic responds to such attempts by displaying the Component Request Pending dialog.</p>
<p>
The appearance of the Component Request Pending dialog box is slightly different from the Component Busy dialog. The Cancel button is disabled, as shown in Figure 10.7, because the request in progress cannot be canceled.</p>
<p class=label>
<b>Figure 10.7&nbsp;&nbsp;&nbsp;The Component Request Pending dialog box</b></p>
<p>
<img src="avp10008.gif" border=0></p>
<p>
Switching to the component is useful only if it has halted to display an error message as a result of your request. This should not be a common occurrence, because the proper behavior for a component is to return an error condition to the program that called it.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information, see "Changing the Component Busy or Request Pending Messages," "Controlling Timeout Intervals," and "Raising an Error on Component Busy Timeout" later in this chapter.</p>
</BODY>
</HTML>
