<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Drawing the MyData Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbobjdrawingmydatacontrol"></a>Drawing the MyData Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjDrawingMyDataControl_C">
</object></p>
<p>
A data control needs a user interface to allow the user to move back and forth through the data. In this case, we'll duplicate the functionality and appearance of the familiar Data control using four CommandButtons and a Label control, with a PictureBox to act as a container.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This topic is part of a series that walks you through creating sample data source components. It begins with the topic <a href="vbconbuildingdatasources.htm">Creating Data Sources</a>.</p>
<p class=label>
<b>To add constituent controls to the MyData control</b>
<ol>
<li>
In the <b>Project Explorer</b> window, double-click <b>MyData</b> to open its designer.<br><br></li>
<li>
In the <b>Toolbox</b>, double-click the <b>PictureBox</b> control to place a PictureBox control on the MyData designer. Move it near the upper left-hand corner of the designer.<br><br></li>
<li>
In the <b>Properties</b> window, set the following property values for the PictureBox control:<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Property</b></td>
<td class=label width=65%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=35%>BackColor</td>
<td width=65%>&amp;H80000005 (Window Background)</td>
</tr>
<tr valign=top>
<td width=35%>Width</td>
<td width=65%>4500</td>
</tr>
</table><br>
</li>
<li>
With the PictureBox control selected, select the <b>CommandButton</b> control in the <b>Toolbox</b> and draw a CommandButton control on top of Picture1. Repeat the process to add a total of four CommandButton controls (but don't create a control array).<br><br></li>
<li>
In the <b>Properties</b> window, set the following property values for the CommandButton controls. Where multiple values are shown, values represent settings for Command1 through Command4; otherwise, the value applies to all four CommandButton controls:<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Property</b></td>
<td class=label width=65%><b>Values</b></td>
</tr>
<tr valign=top>
<td width=35%>(Name)</td>
<td width=65%>cmdFirst; cmdPrev; cmdNext; cmdLast</td>
</tr>
<tr valign=top>
<td width=35%>Caption</td>
<td width=65%>(Empty)</td>
</tr>
<tr valign=top>
<td width=35%>Picture</td>
<td width=65%>First.bmp; Prev.bmp; Next.bmp; Last.bmp</td>
</tr>
<tr valign=top>
<td width=35%>Style</td>
<td width=65%>1 - Graphical</td>
</tr>
<tr valign=top>
<td width=35%>Width</td>
<td width=65%>300</td>
</tr>
</table><br>
<p class=atl>
<b>Note</b>&nbsp;&nbsp;&nbsp;The bitmaps for the Picture property can be found in the same directory as the AXData sample application.</p></li>
<li>
In the <b>Toolbox</b>, select the <b>Label</b> control draw a label on top Picture1. In the <b>Properties</b> window, set the following property values for the Label control:<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Property</b></td>
<td class=label width=65%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=35%>(Name)</td>
<td width=65%>lblCaption</td>
</tr>
<tr valign=top>
<td width=35%>BackStyle</td>
<td width=65%>0 - Transparent</td>
</tr>
<tr valign=top>
<td width=35%>Caption</td>
<td width=65%>MyData</td>
</tr>
</table><br>
</li>
<li>
Rearrange the Shape and Label controls to look similar to the example shown below. Don't worry about precise placement because the code in the Resize event will take care of that. Select the MyData control and use the grab handles to resize it slightly larger than the area containing the controls.<p>
<img src="vb52ro1.gif" border=0></P></li>
<li>
Double-click the <b>MyData</b> designer to bring the code window to the front, and add the following code to the UserControl_Resize event procedure:<pre><code>Private Sub UserControl_Resize()
 &nbsp; Picture1.Move 0, 0, Width, Height
 &nbsp; cmdFirst.Move 0, 0, cmdFirst.Width, Height - 60
 &nbsp; cmdPrev.Move cmdFirst.Left + cmdFirst.Width, 0, _
 &nbsp;&nbsp;&nbsp;&nbsp; cmdPrev.Width, Height - 60
 &nbsp; cmdLast.Move (Width - cmdLast.Width) - 60, 0, _
 &nbsp;&nbsp;&nbsp;&nbsp; cmdLast.Width, Height - 60
 &nbsp; cmdNext.Move cmdLast.Left - cmdNext.Width, 0, _
 &nbsp;&nbsp;&nbsp;&nbsp; cmdNext.Width, Height - 60

 &nbsp; lblCaption.Height = TextHeight("A")
 &nbsp; lblCaption.Move cmdPrev.Left + _
 &nbsp;&nbsp;&nbsp;&nbsp; cmdPrev.Width, ((Height - 60) _
 &nbsp;&nbsp;&nbsp;&nbsp; / 2) - (lblCaption.Height / 2), _
 &nbsp;&nbsp;&nbsp;&nbsp; cmdNext.Left - (cmdPrev.Left _
 &nbsp;&nbsp;&nbsp;&nbsp; + cmdPrev.Width)
End Sub
</code></pre>
<p class=tl>
This code will execute when the MyData is initialized or whenever it is resized to rearrange the constituent controls and provide a consistent appearance.</P></li>
<li>
Add a pair of Property Let / Property Get procedures to expose the Caption property of lblCaption:<pre><code>Public Property Get Caption() As String
 &nbsp; Caption = lblCaption.Caption
End Property

Public Property Let Caption(ByVal NewCaption As String)
 &nbsp; lblCaption.Caption = NewCaption
 &nbsp; PropertyChanged "Caption"
End Property
</code></pre>
</li>
<li>
In the <b>Object </b>box, select (<b>General</b>). In the <b>Procedure </b>box, select (<b>Declarations</b>) to position yourself at the top of the code module. Add the following code:<pre><code>Option Explicit

' Enumerations for the BOFAction Property.
Public Enum BOFActionType
 &nbsp; adDoMoveFirst = 0
 &nbsp; adStayBOF = 1
End Enum

' Enumerations for the EOFAction Property.
Public Enum EOFActionType
 &nbsp; adDoMoveLast = 0
 &nbsp; adStayEOF = 1
 &nbsp; adDoAddNew = 2
End Enum

' Declare object variables for ADO connection 
' and Recordset objects.
Private cn As ADODB.Connection
Private WithEvents rs As ADODB.Recordset

' Default Property Values:
Const m_def_RecordSource = ""
Const m_def_BOFAction = BOFActionType.adDoMoveFirst
Const m_def_EOFAction = EOFActionType.adDoMoveLast
Const m_def_ConnectionString = ""

'Property Variables:
Private m_RecordSource As String
Private m_BOFAction As BOFActionType
Private m_EOFAction As EOFActionType
Private m_ConnectionString As String</code></pre>
<p class=tl>
</P></li>
<li>
In the <b>Object </b>box, select <b>UserControl</b>. In the <b>Procedure </b>box, select the <b>InitProperties</b> event. Add the following code to the UserControl_InitProperties event procedure:<pre><code>Private Sub UserControl_InitProperties()
 &nbsp; m_RecordSource = m_def_RecordSource
 &nbsp; m_BOFAction = m_def_BOFAction
 &nbsp; m_EOFAction = m_def_EOFAction
 &nbsp; lblCaption.Caption = Ambient.DisplayName
 &nbsp; m_ConnectionString = m_def_ConnectionString
 &nbsp; Set UserControl.Font = Ambient.Font
End Sub
</code></pre>
</li>
<li>
Before we move on, now would be a good time to save your changes. Choose <b>Save Project</b> from the <b>File</b> menu to save your project.</li>
</ol>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Drawing the ShapeLabel Control" and "Adding an Event to the ShapeLabel Control" in "Creating an ActiveX Control."</p>
<h3>Step by Step</h3>
<p>
This topic is part of a series that walks you through creating sample ActiveX data sources.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>To</b></td>
<td class=label width=50%><b>See</b></td>
</tr>
<tr valign=top>
<td width=50%>Go to the next step</td>
<td width=50%><a href="vbconaddingaxdatasourceproject.htm">Adding the AXDataSource Project</a></td>
</tr>
<tr valign=top>
<td width=50%>Start from the beginning</td>
<td width=50%><a href="vbconbuildingdatasources.htm">Creating Data Sources</a></td>
</tr>
</table><br>
</BODY>
</HTML>
