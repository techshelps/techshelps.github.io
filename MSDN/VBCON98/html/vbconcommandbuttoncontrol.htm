<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Command Button Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcommandbuttoncontrol"></a>Using the Command Button Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCommandButtonControlC">
</object></p>
<p>
The command button control is used to begin, interrupt, or end a process. When clicked, it invokes a command that has been written into its Click event procedure.</p>
<p class=label>
<b>Figure 7.10&nbsp;&nbsp;&nbsp;The command button control</b></p>
<p>
<img src="avp07003.gif" border=0></p>
<p>
Most Visual Basic applications have command buttons that allow the user to simply click them to perform actions. When the user chooses the button, it not only carries out the appropriate action, it also looks as if it's being pushed in and released and is therefore sometimes referred to as a push button.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Clicking Buttons to Perform Actions" in "Forms, Controls, and Menus" for a simple demonstration of the Command Button control.</p>
<h2>Adding a Command Button to a Form</h2>
<p>
You will likely use one or more command buttons in your application. To add command buttons to a form, draw them on as you would any other control. Command buttons can be sized with the mouse or by setting their Height and Width properties.</p>
<h3>Setting the Caption</h3>
<p>
To change the text displayed on the command button, use the Caption property. At design time, you can set this property by selecting it from the control's Properties window. When you set the Caption property at design time, the button text will be updated dynamically.</p>
<p>
You can set the Caption property up to 255 total characters. If your caption exceeds the width of the command button, it will wrap to the next line. However, it will be clipped if the control cannot accommodate its overall height.</p>
<p>
You can change the font displayed on the command button by setting its Font property.</p>
<h3>Creating Keyboard Shortcuts</h3>
<p>
You can use the Caption property to create access key shortcuts for your command buttons by adding an ampersand (&amp;) before the letter you want to use as the access key. For example, to create an access key for the caption "Print" you add an ampersand before the letter "P": "&amp;Print". At run time, the letter "P" will be underlined and the user can select the command button by simultaneously pressing ALT+P.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To include an ampersand in a caption without creating an access key, include two ampersands (&amp;&amp;). A single ampersand is displayed in the caption and no characters are underlined.</p>
<h3>Specifying the Default and Cancel Properties</h3>
<p>
On each form, you can select a command button to be the default command button — that is, whenever the user presses the ENTER key the command button is clicked regardless of which other control on the form has the focus. To specify a command button as default set the Default property to True.</p>
<p>
You can also specify a default cancel button. When the Cancel property of a command button is set to True, it will be clicked whenever the user presses the ESC key, regardless of which other control on the form has the focus.</p>
<h2>Selecting the Command Button</h2>
<p>
A command button can be selected at run time by using the mouse or keyboard in the following ways:
<ul type=disc>
<li>
Use a mouse to click the button.<br><br></li>
<li>
Move the focus to the button by pressing the TAB key, and then choose the button by pressing the SPACEBAR or ENTER.<br><br></li>
<li>
Press an access key (ALT+ the underlined letter) for a command button.<br><br></li>
<li>
If the command button is the <i>default</i> <i>command button</i> for the form, pressing ENTER chooses the button, even if you change the focus to a different control.<br><br></li>
<li>
If the command button is the <i>default Cancel button</i> for the form, then pressing ESC chooses the button, even if you change the focus to another control.</li>
</ul>
<h3>The Value Property</h3>
<p>
Whenever the command button is selected, its Value property is set to True and the Click event is triggered. False (default) indicates the button isn't chosen. You can use the Value property in code to trigger the command button's Click event. For example:</p>
<pre><code>cmdClose.Value = True
</code></pre>
<h3>The Click Event</h3>
<p>
When clicked, the command button's Click event is triggered and the code you've written in the Click event procedure is invoked.</p>
<p>
Clicking a command button control also generates the MouseDown and MouseUp events. If you intend to attach event procedures for these related events, be sure that their actions don't conflict. The order in which these three events occur varies from control to control. In the command button control, these events occur in this order: MouseDown, Click, MouseUp.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the user attempts to double-click the command button control, each click will be processed separately; that is, the command button control does not support the double-click event.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Responding to Mouse and Keyboard Events" for more information on the MouseDown and MouseUp events.</p>
<h2>Visually Enhancing the Command Button</h2>
<p>
The command button control, like the check box and option button controls, may be visually enhanced by altering the setting of the Style property and then using the Picture, DownPicture and DisabledPicture properties. For example, you may want to add an icon or bitmap to a command button or display a different image when the button is clicked or disabled.</p>
</BODY>
</HTML>
