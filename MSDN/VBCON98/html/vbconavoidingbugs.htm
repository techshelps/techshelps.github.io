<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Avoiding Bugs</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconavoidingbugs"></a>Avoiding Bugs</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAvoidingBugsC">
</object></p>
<p>
There are several ways to avoid creating bugs in your applications:
<ul type=disc>
<li>
Design your applications carefully by writing down the relevant events and the way your code will respond to each one. Give each event procedure and each general procedure a specific, well-defined purpose.<br><br></li>
<li>
Include numerous comments. As you go back and analyze your code, you'll understand it much better if you state the purpose of each procedure in comments.<br><br></li>
<li>
Explicitly reference objects whenever possible. Declare objects as they are listed in the Classes/Modules box in the Object Browser, rather than using a Variant or the generic Object data types.<br><br></li>
<li>
Develop a consistent naming scheme for the variables and objects in your application. For more information, see "Coding Conventions."<br><br></li>
<li>
One of the most common sources of errors is incorrectly typing a variable name or confusing one control with another. You can use Option Explicit to avoid misspelling variable names. For more information on requiring explicit variable declaration, see "Introducing Variables, Constants, and Data Types" in "Programming Fundamentals."</li>
</ul>
</BODY>
</HTML>
