<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Choosing a DAO Query Processor with Jet</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconchoosingqueryprocessor"></a>Choosing a DAO Query Processor for Use with Jet</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconChoosingQueryProcessorC">
</object></p>
<p>
Once the database engine has been initialized and the connection established, your application can begin to fetch information from the database. When working with remote database engines that are capable of executing SQL queries, you can usually choose how and where the query is processed. The query used to build a cursor can be run by either the Jet query processor on the client machine, or by the remote database query processor on the server. In some cases you have no choice, because the type of query (or another consideration) forces you to use a particular option.</p>
<p>
The query processor you use can have a significant impact on the performance of your application. For most queries the Jet query processor breaks down your query and submits intelligent subqueries to the remote server for processing. These subqueries return subsets of the data used to complete the query on the workstation. However, when Jet is unable to perform this type of query management, it might try to bring entire tables (or large portions of those tables) back to the workstation for further processing. If this happens, your query might exhaust all workstation resources or exceed query timeout limitations.</p>
<p>
By forcing Jet to perform queries entirely on the remote server, you can prevent resource-constrained queries from overwhelming your application. However, in many cases, a redesign of your application's approach to the query might prove to be just as beneficial for performance. For example, if your query returns more than a few hundred rows from the server, running the query on the server might improve performance, but the resource demands on the workstation and the network might still be fairly significant.</p>
</BODY>
</HTML>
