<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Raising an Error on Component Busy Timeout</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconraisingerroronserverbusytimeout"></a>Raising an Error on Component Busy Timeout</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconRaisingErrorOnServerBusyTimeoutC">
</object></p>
<p>
For the component busy condition, you can bypass both the Component Busy dialog box and the replacement message by setting the Boolean OLEServerBusyRaiseError property of the App object to True. Visual Basic will retry your request for the length of time specified by the OLEServerBusyTimeout property, and then raise an error in the procedure that made the Automation request, just as if the user had pressed the Cancel button on the Component Busy dialog box.</p>
<p>
The error returned is –2147418111 (&amp;h80010001). In the error handler for the procedure, you can then take whatever action is most appropriate. For example, you could display a complex dialog box that offered the user several retry options or alternatives.</p>
<p>
This property will be particularly useful for components designed to run on remote network computers, using the Remote Automation feature of Visual Basic, Enterprise Edition. Such a component may call on other components, and it must handle errors in those calls without displaying any forms.</p>
<p>
There is no corresponding property for the request pending condition. Once an Automation request has been accepted by the component, the client program must wait until the request is complete.</p>
</BODY>
</HTML>
