<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Testing Component Download on Development Machines</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontestingcomponentdownloadondevelopmentmachines"></a>Testing Component Download on Development Machines</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTestingComponentDownloadOnDevelopmentMachines_C">
</object></p>
<p>
You can test your component download on your development machines to make sure that the download file installs correctly. However, because your development machines are likely to have some of the necessary components or files already installed, you may not experience the same download as your end users will. In addition to testing on your machines, it is important to also test your installation on a machine that does not have Visual Basic installed.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you do not have a machine without Visual Basic installed, you can simulate one. See "Simulating a Clean Machine" for instructions.</p>
<h2>Testing Installation of the Component on the Development Machine</h2>
<p>
The simplest way to check your download is to remove the software registration from the registry, then access the page generated by the wizard.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The procedures in this section require a copy of regsvr32.exe to be installed on your machine. If it is not, you can find it on the Visual Basic installation CD-ROM.</p>
<p class=label>
<b>To test installation on the development machine</b>
<ul type=disc>
<li>
If you are using Internet Explorer 4.0 or later, access the <b>Downloaded Program Files</b> folder in either the Windows or the Winnt40 directory, right-click the control, and select <b>Remove</b>. The system automatically removes and unregisters the item and any of its dependencies.<br><br></li>
<li>
If you are using a version of Internet Explorer prior to 4.0, run Regsvr32 to unregister the component, as in the following example:<pre><code>regsvr32 /u controldemo.ocx
</code></pre>
</li>
</ul>
<p class=indent>
If regsvr32.exe is not in your path, provide the full path to the file in your statement. Access the Web page the Package and Deployment Wizard created. The component should download.</p>
<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Remember to select Binary Compatibility in your Visual Basic project settings to prevent multiple, different class IDs for your software.</p><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you leave the <code>DestDir=</code> line in the .inf file blank, the component file should appear in your Occache&nbsp; or Downloaded Program Files directory. You may find other copies in subdirectories called conflict directories, such as Occache\Conflict.2. The date and time of each file will differ, indicating different builds of the control and different class IDs. Care must be taken to ensure that the Class ID remains the same between the builds.</p><p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Version Compatibility in ActiveX Documents" in the Component Tools Guide for more information on binary compatibility.</p>
<h2>Testing the Installation of Support Files on the Development Machine</h2>
<p>
In addition to removing the component registry, you should test that all of the necessary support files also install and register correctly. To do so, temporarily unregister everything in your system directory and your Occache or Downloaded Program Files directories.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The procedures in this section require a copy of regsvr32.exe to be installed on your machine. If it is not, you can find it on the Visual Basic installation CD-ROM.</p>
<p class=label>
<b>To test installation of support files on the development machine</b>
<ol>
<li>
Unregister the support files:<ul type=disc>
<li>
If you are using Internet Explorer 4.0 or later, access the Downloaded Program Files folder in either the Windows or the Winnt40 directory, right click the file, and select Remove. The system automatically removes and unregisters the item and any of its dependencies.<br><br></li>
<li>
If you are using a version of Internet Explorer prior to 4.0, run Regsvr32 to unregister the files. Use the following command line in each applicable directory to unregister the necessary files:<pre><code>for %f in (*.ocx *.dll) do regsvr32 /u /s %f
</code></pre>
</li>
</ul>
</li>
<li>
Once all of the support files have been unregistered, access the Web page the Package and Deployment Wizard created. The component should download.</li>
</ol>
<p class=label>
<b>To reregister support files after testing</b>
<ul type=disc>
<li>
Use the following command to restore the original entries:<pre><code>for %f in (*.ocx *.dll) do regsvr32 /s %f
</code></pre>
</li>
</ul>
</BODY>
</HTML>
