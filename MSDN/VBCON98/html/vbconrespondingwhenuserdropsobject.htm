<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Responding When the User Drops the Object</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconrespondingwhenuserdropsobject"></a>Responding When the User Drops the Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconRespondingWhenUserDropsObjectC">
</object></p>
<p>
When the user releases the mouse button after dragging a control, Visual Basic generates a DragDrop event. You can respond to this event in many ways. Remember that the control doesn't automatically move to the new location, but you can write code to relocate the control to the new location (indicated by the last position of the gray outline). See "Changing the Position of a Control" for more information.</p>
<p>
Two terms are important when discussing drag-and-drop operations: <i>source</i> and <i>target.</i></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Term</b></td>
<td class=label width=72%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=28%>Source</td>
<td width=72%>The control being dragged. This control can be any object except a menu, timer, line, or shape.</td>
</tr>
<tr valign=top>
<td width=28%>Target</td>
<td width=72%>The object onto which the user drops the control. This object, which can be a form or control, recognizes the DragDrop event.</td>
</tr>
</table><br>
<p>
A control becomes the target if the mouse position is within its borders when the button is released. A form is the target if the pointer is in a blank portion of the form.</p>
<p>
The DragDrop event provides three arguments: <i>source</i>, <i>x</i>, and <i>y</i>. The <i>source</i> argument is a reference to the control that was dropped onto the target.</p>
<p>
Because <i>source</i> is declared As Control, you use it just as you would a control — you can refer to its properties or call one of its methods.</p>
<p>
The following example illustrates how the source and target interact. The source is an Image control with its Picture property set to load a sample icon file representing a few file folders. Its DragMode property has been set to 1-Automatic and its DragIcon property to a sample drag-and-drop icon file. The target, also an image control, contains a picture of an open file cabinet.</p>
<p>
Add the following procedure to the second image control's DragDrop event:</p>
<pre><code>Private Sub Image2_DragDrop(Source As Control, _
      X As Single, Y As Single)
   Source.Visible = False
   Image2.Picture = LoadPicture("c:\Program _
      Files\Microsoft Visual _
      Basic\Icons\Office\Files03a.ico")
End Sub
</code></pre>
<p>
Dragging and dropping Image1 onto Image2 causes Image1 to vanish and Image2 to change its picture to that of a closed file cabinet. Using the <i>source</i> argument, the Visible property of Image1 was changed to False.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You should use the <i>source</i> argument carefully. Although you know that it always refers to a control, you don't necessarily know which type of control. For example, if the control is a text box and you attempt to refer to <code>Source.Value</code>, the result is a run-time error because text boxes have no Value property.</p>
<p>
You can use the If...Then...Else statement with the TypeOf keyword to determine what kind of control was dropped.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "If…Then…Else" in the <i>Language Reference</i> and see "Programming with Objects."</p>
</BODY>
</HTML>
