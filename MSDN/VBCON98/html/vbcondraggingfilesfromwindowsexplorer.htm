<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dragging Files From the Windows Explorer</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondraggingfilesfromwindowsexplorer"></a>Dragging Files From the Windows Explorer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDraggingFilesFromWindowsExplorerC">
</object></p>
<p>
You can use OLE drag-and-drop to drag files from the Windows Explorer into an appropriate Visual Basic control, or vice versa. For example, you can select a range of text files in the Windows Explorer and then open them all in a single text box control by dragging and dropping them onto the control.</p>
<p>
To illustrate this, the following procedure uses a text box control and the OLEDragOver and OLEDragDrop events to open a range of text files using the Files property and the vbCFFiles data format of the DataObject object.</p>
<p class=label>
<b>To drag text files into a text box control from the Windows Explorer</b>
<ol>
<li>
Start a new project in Visual Basic.<br><br></li>
<li>
Add a text box control to the form. Set its OLEDropMode property to Manual. Set its MultiLine property to True and clear the Text property.<br><br></li>
<li>
Add a function to select and index a range of files. For example:<pre><code>Sub DropFile(ByVal txt As TextBox, ByVal strFN$)
Dim iFile As Integer
iFile = FreeFile

Open strFN For Input Access Read Lock Read _ 
Write As #iFile
Dim Str$, strLine$
While Not EOF(iFile) And Len(Str) &lt;= 32000
Line Input #iFile, strLine$
If Str &lt;&gt; "" Then Str = Str &amp; vbCrLf
Str = Str &amp; strLine
Wend
Close #iFile

txt.SelStart = Len(txt)
txt.SelLength = 0
txt.SelText = Str

End Sub
</code></pre>
</li>
<li>
Add the following procedure to the OLEDragOver event. The GetFormat method is used to test for a compatible data format (vbCFFiles).<pre><code>Private Sub Text1_OLEDragOver(Data As _ 
VB.DataObject, Effect As Long, Button As Integer, _ 
Shift As Integer, X As Single, Y As Single, State _ 
As Integer)
If Data.GetFormat(vbCFFiles) Then
'If the data is in the proper format, _
inform the source of the action to be taken
Effect = vbDropEffectCopy And Effect
Exit Sub
End If
'If the data is not desired format, no drop
Effect = vbDropEffectNone

End Sub
</code></pre>
</li>
<li>
Finally, add the following procedure to the OLEDragDrop event.<pre><code>Private Sub Text1_OLEDragDrop(Data As _ 
VB.DataObject, Effect As Long, Button As Integer, _ 
Shift As Integer, X As Single, Y As Single)
If Data.GetFormat(vbCFFiles) Then
Dim vFN

For Each vFN In Data.Files
DropFile Text1, vFN
Next vFN
End If
End Sub
</code></pre>
</li>
<li>
Run the application, open the Windows Explorer, highlight several text files, and drag them into the text box control. Each of the text files will be opened in the text box.</li>
</ol>
</BODY>
</HTML>
