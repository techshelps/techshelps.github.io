<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating an HTML Page for Viewing and Updating Data</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreatesqltableusingdesigner"></a>Creating an HTML Page for Viewing and Updating Data</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mdproCursorType;mdproLockType;vbconCreateSQLTableUsingDesignerC">
</object></p>
<p>
To work with existing data in a SQL Server database, you can create an HTML page that lets you view and edit the data. You can use the DHTML Page designer to create a new HTML page or modify an existing page. Then write code that uses ADO and the BindingsCollection object to handle data processing.</p>
<p>
This topic shows how to create an HTML page to view and edit data in the Customers table you created and populated in the previous topic in this scenario. It shows how to use a data environment Command object, ADO code, and the BindingsCollection object to directly update SQL Server data from the HTML page.</p>
<p class=label>
<b>To create an HTML page for viewing and update data</b>
<ol>
<li>
Add labels and TextField elements to a new HTML page.<br><br></li>
<li>
Modify the data environment Command object to allow data updating.<br><br></li>
<li>
Add code to display records on the HTML page.<br><br></li>
<li>
Add Button elements to navigate through records.<br><br></li>
<li>
Load the HTML page.</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This topic is part of a series that walks you through creating a simple database application that interacts with data in an SQL Server database. It begins with the topic <a href="vbconquerysqlserverdatabase.htm">Creating a DHTML Application that Interacts with SQL Server Data</a>.</p>
<h3>Add Labels and TextField Elements to a New HTML Page</h3>
<p>
The first step in creating an HTML page for viewing and updating data is to open a new HTML page, by selecting Add DHTML Page from the Project menu.</p>
<p>
You can use the DHTML Page designer to add labels and TextField elements to the HTML page. For example, to create an HTML page for viewing and updating data in the Customers table in the Pubs sample database, follow the steps in the <a href="vbconcreatedatainputform.htm">Creating a Data Entry HTML Page</a> topic.</p>
<h3>Modify the Data Environment Command Object to Allow Data Updating</h3>
<p>
When you create a Command object using the Data Environment designer, the Command object by default allows you to read but not update the Command object's data source. To allow data updating, you must change the Command object's CursorType, CursorLocation, and LockType properties.</p>
<p>
For example, you can change the Customers Command object's CursorType, CursorLocation, and LockType properties to allow data in the Customers table to be updated directly from your HTML page. In the Data Environment designer, select the Customers Command object and click the Properties button on the Data Environment toolbar. Click the Advanced tab, and then set the CursorLocation property to Use server-side cursors, the CursorType property to Keyset, and the LockType property to Optimistic.</p>
<h3>Add Code to Display Records on the HTML Page</h3>
<p>
Using the data environment, ADO, and the BindingCollection object, you can bind elements on an HTML page to SQL Server data when the page loads. You can then edit the data, and add code to update the underlying recordset or navigate through the records. For example, you can use a BindingCollection object with an ADO Recordset object to bind the TextField elements on your HTML Page to fields in the Customers table.</p>
<p>
First, add a reference to the BindingCollection object's type library to your project. To add the reference, select References on the Project menu, then select Microsoft Data Binding Collection in the References dialog box. Then declare a BindingCollection object variable in the HTML Page object's Declarations section:</p>
<pre><code>Dim colBind As BindingCollection
</code></pre>
<p>
To bind the elements to the table fields when the HTML page loads in your browser, add code to the DHTML Page object's Load event procedure. As you saw in the "Creating a Data Entry HTML Page" topic, your data environment can provide the "middle tier" between the table and the HTML page.</p>
<p>
Use the BindingCollection object to bind the elements on the HTML page to fields in the recordset:</p>
<pre><code>Private Sub DHTMLPage_Load()

   ' Create a BindingCollection object, then set its 
   ' DataSource property to your data environment and its 
   ' DataMember property to the Customers command object.
   Set colBind = New BindingCollection
   With colBind
      Set .DataSource = MyDataEnvironment
      .DataMember = "Customers"

      ' Bind the Value property of elements on the HTML page 
      ' to fields in the Customers recordset.
      .Add CustomerID, "Value", "CustomerID"
      .Add CompanyName, "Value", "CompanyName"
      .Add Address, "Value", "Address"
      .Add City, "Value", "City"
      .Add Region, "Value", "Region"
      .Add PostalCode, "Value", "PostalCode"
      .Add Country, "Value", "Country"
   End With

End Sub
</code></pre>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjBindingCollectionCollections">
</object><a href=JavaScript:alink_2.Click()>BindingCollection object</a> in the <i>Language Reference</i>.</p>
<h3>Add Button Elements to Navigate through Records</h3>
<p>
After you've established data binding between your data environment and the object on the HTML page, you can easily create Button elements for navigating through records by using the recordset's MoveNext and MovePrevious methods. For example, to create a Next button for your HTML page, use the DHTML Page designer to add a Button element to the HTML page. Change its id and Name properties to Next. Then add the following line to the Button element's Next_onclick event procedure:</p>
<pre><code>MyDataEnvironment.rsCustomers.MoveNext
</code></pre>
<p>
Similarly, you can create a Previous button by adding a Button element to the HTML page and change its id and Name properties to Previous. Then add the following code to the Button element's Previous_onclick event procedure:</p>
<pre><code>MyDataEnvironment.rsCustomers.MovePrevious
</code></pre>
<p>
When you load the HTML page, Visual Basic displays the records in the Customers table and lets you move forward and backward through the recordset.</p>
<h3>Load the HTML Page</h3>
<p>
To view the finished page in Internet Explorer, press the F5 key or click the Start button on the Standard toolbar. You can also explicitly make a dynamic-link library and HTML page for the project by setting properties on the Make tab of the Project Properties dialog box, then selecting Make .dll from the File menu.</p>
<h4>Step by Step</h4>
<p>
This topic is part of a series that walks you through creating a simple DHTML application that interacts with data in an SQL Server database.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>To</b></td>
<td class=label width=69%><b>See</b></td>
</tr>
<tr valign=top>
<td width=31%>Go to the next step</td>
<td width=69%><a href="vbconcreatenewqueryusingdesigner.htm">Creating an HTML Page that Runs a Stored Procedure</a></td>
</tr>
<tr valign=top>
<td width=31%>Start from the beginning</td>
<td width=69%><a href="vbconquerysqlserverdatabase.htm">Creating a DHTML Application that Interacts with SQL Server Data</a></td>
</tr>
</table><br>
</BODY>
</HTML>
