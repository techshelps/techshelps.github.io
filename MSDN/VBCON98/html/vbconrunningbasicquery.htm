<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Running a Basic Query</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconrunningbasicquery"></a>Running a Basic Query</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconRunningBasicQuery_C">
</object></p>
<h2>RDO</h2>
<p>
This event procedure returns a resultset based on an SQL statement. It performs a restricted query and passes the resultset to a control that inserts the resultant data into an MSHFlexGrid control. Note that building a resultset requires an open connection.</p>
<pre><code>Private Sub RunButton_Click()
 &nbsp; Dim rs As rdoResultset
 &nbsp; Set rs = cn.OpenResultset("select * from titles where title _
 &nbsp;&nbsp; like '%h'")
 &nbsp; rdoGrid1.ShowData rs
 &nbsp; rs.Close
End Sub
</code></pre>
<h2>ADO</h2>
<p>
Once the database connection is open, you can run a query against it. The following event procedure is very similar to the previous RDO code. In this case, however, you use the new ADO Open method that takes the SQL query and the ADO Connection object as arguments, rather than using the rdoConnection object's OpenResultset method. You can also opt to use the ADO Connection object’s Execute method, just as you could in RDO (as long as it didn’t return a rowset).</p>
<p>
A primary difference of ADO2 compared with RDO2 is that ADO2 allows you to create a recordset and set its properties <i>before</i> you open the recordset.</p>
<pre><code>Private Sub RunButton_Click()
 &nbsp; Dim rs As New ADODB.Recordset
 &nbsp; rs.Open "select * from titles where title like '%h'", cn
 &nbsp; ADOGrid1.ShowData rs
 &nbsp; rs.Close
End Sub
</code></pre>
<p>
You can run this query and process its resultset asynchronously in ADO. That is, when you specify the adFetchAsynch option on rs.Open, ADO causes the cursor provider to automatically populate the resultset in the background.</p>
</BODY>
</HTML>
