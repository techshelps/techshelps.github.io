<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Controls to a Project</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconaddingcontrolstoproject"></a>Adding Controls to a Project</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAddingControlsToProjectC">
</object></p>
<p>
The set of controls available in the toolbox can be customized for each project. Any given control must be in the toolbox before you can add it to a form in the project. The basic set of standard controls that always appear in the toolbox is described in "Forms, Controls, and Menus."</p>
<h2>Adding ActiveX Controls to a Project</h2>
<p>
You can add ActiveX controls and insertable objects to your project by adding them to the toolbox.</p>
<p class=label>
<b>To add a control to a project's toolbox</b>
<ol>
<li>
From the <b>Project</b> menu, choose <b>Components</b>.<p class=tl>
The <b>Components</b> dialog box is displayed, as shown in Figure 4.3. The items listed in this dialog box include all registered ActiveX controls, insertable objects, and ActiveX designers.</P></li>
<li>
To add a control (.ocx file name extension) or an insertable object to the toolbox, select the check box to the left of the control name.<p class=tl>
To view controls with .ocx file name extensions, select the <b>Controls</b> tab. To view insertable objects, such as a Microsoft Excel Chart, select the <b>Insertable Objects</b> tab.</P></li>
<li>
Choose <b>OK</b> to close the <b>Components</b> dialog box. All of the ActiveX controls that you selected will now appear in the toolbox.</li>
</ol>
<p class=label>
<b>Figure 4.3&nbsp;&nbsp;&nbsp;The Components dialog box</b></p>
<p>
<img src="avp04003.gif" border=0></p>
<p>
To add ActiveX controls to the Components dialog box, choose the Browse button, and search other directories for files with a .ocx file name extension. When you add an ActiveX control to the list of available controls, Visual Basic automatically selects the check box.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Each ActiveX control is accompanied by a file with an .oca extension. This file stores cached type library information and other data specific to the control. The .oca files are typically stored in the same directory as the ActiveX controls and are recreated as needed (file sizes and dates may change).</p>
<h2>Removing Controls from a Project</h2>
<p class=label>
<b>To remove a control from a project</b>
<ol>
<li>
From the <b>Project</b> menu, choose <b>Components</b>.<p class=tl>
The <b>Components</b> dialog box is displayed.</P></li>
<li>
Clear the check box next to each control you want to remove.<p class=tl>
The control icons will be removed from the toolbox.</P></li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You cannot remove any control from the toolbox if an instance of that control is used on any form in the project.</p>
<h2>Using Other Applications' Objects</h2>
<p>
You can also use objects from other applications, such as those included in the Microsoft Excel object library, either as controls in the toolbox or as programmable objects in your code. To add objects to the toolbox, see "Adding Controls to a Project" earlier in this chapter.</p>
<p>
To make another application's objects available in your code, but not as controls, set a reference to that application's object library.</p>
<p class=label>
<b>To add a reference to another application's object library</b>
<ol>
<li>
From the <b>Project</b> menu, choose <b>References</b>.<p class=tl>
The <b>References</b> dialog box is displayed, as shown in Figure 4.4.</P></li>
<li>
Select the check box next to each reference you want to add to your project.<p class=tl>
To add references to applications not listed in the <b>References</b> dialog box, choose the <b>Browse</b> button, and then select the application.</P></li>
<li>
Choose <b>OK</b> to add the selected references to your project.</li>
</ol>
<p class=label>
<b>Figure 4.4&nbsp;&nbsp;&nbsp;The References dialog box</b></p>
<p>
<img src="avp04004.gif" border=0></p>
<p>
If you are not using any objects in a referenced library, you should clear the check box for that reference to minimize the number of object references Visual Basic must resolve, thus reducing the time it takes your project to compile.</p>
<p>
Once you have set references to the object libraries you want, you can find a specific object and its methods and properties in the Object Browser by choosing Object Browser from the View menu. You can use any object listed in the Object Browser in your code.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;" For information on the Object Browser, see "Finding Out About Objects" in "Programming with Objects."</p>
<h2>Using a Resource File</h2>
<p>
A resource file allows you to collect all of the version-specific text and bitmaps for an application in one place. This can include constant declarations, icons, screen text, and other material that may change between localized versions or between revisions or specific configurations.</p>
<p class=label>
<b>To add a file to a project</b>
<ol>
<li>
From the <b>Project </b>menu, select <b>Add</b> <b>File</b>.<p class=tl>
The <b>Add File </b>dialog box is displayed.</P></li>
<li>
Select an existing resource file (.res) and choose <b>Open</b>.</li>
</ol>
<p>
A single project can have only one resource file; if you add a second file with a .res extension, an error occurs.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on the contents of a resource file, see "International Issues."</p>
</BODY>
</HTML>
