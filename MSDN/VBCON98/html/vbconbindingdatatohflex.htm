<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Binding Data to the Hierarchical FlexGrid</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconbindingdatatohflex"></a>Binding Data to the Hierarchical FlexGrid</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconBindingDataToHFlex_C">
</object></p>
<p>
Before you can use its features, you must bind data to the Hierarchical FlexGrid. You can bind data to this control either using Visual Basic's new Data Binding Manager or programmatically.</p>
<p>
Once your Hierarchical FlexGrid is bound to a data source, the design-time display within the Hierarchical FlexGrid is a single blank column and single blank row. The field and band information is not automatically retrieved (to obtain this information, see <a href="vbconretrievingstructure.htm">Retrieving Structure</a>). If the Hierarchical FlexGrid is run without field and band information, the data displays using the default property settings. That is, if the Hierarchical FlexGrid is bound to a hierarchical Command, the bands of data display horizontally with each band containing a column for each field in the Recordset.</p>
<p class=label>
<b>Hierarchical FlexGrid bound to the Data Source</b></p>
<p>
<img src="vb53661.gif" border=0></p>
<h2>Using the Visual Basic Data Binding Manager to Bind Data to the Hierarchical FlexGrid</h2>
<p>
This section describes how to use the Visual Basic Data Binding Manager to bind data to your Hierarchical FlexGrid. This Data Binding Manager provides a user interface that promotes ease-of-use when binding data.</p>
<p class=label>
<b>To set the DataSource using the Visual Basic Data Binding Manager</b>
<ol>
<li>
Create a source of data for your Hierarchical FlexGrid.<p class=tl>
The data source can be a DataEnvironment object or an ActiveX<sup>®</sup> Data Object (ADO) Data Control, a new Visual Basic feature. For this procedure, create the data source as a DataEnvironment object.</P></li>
<li>
On the Visual Basic toolbox, click the <b>MSHFlexGrid</b> control, and then drop it on a Visual Basic <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defform">
</object><a href=JavaScript:alink_2.Click()>form</a>.<p class=tl>
-or-</P><p class=tl>
On the Visual Basic toolbox, double-click the <b>MSHFlexGrid</b> control to drop it on a Visual Basic form.</P></li>
<li>
On the Visual Basic Properties window, set the <b>DataSource</b> property to the DataEnvironment object that contains the Command object that you want to bind to the Hierarchical FlexGrid.<p class=atl>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;If the <b>DataSource</b> is reset, any user-defined modified data in the Hierarchical FlexGrid cells is lost.</p></li>
<li>
On the Visual Basic Properties window, set the <b>DataMember</b> property to a Command object in the Data Environment. If you want to view hierarchical data in your Hierarchical FlexGrid, you must specify a top-most, parent Command object in a Command hierarchy as <b>DataMember</b>.<br><br></li>
<li>
To view the data in the Hierarchical FlexGrid, on the <b>Run </b>menu, select <b>Start</b>.<p class=tl>
-or-</P><p class=tl>
Press f5.</P></li>
</ol>
<h2>Programmatically Binding Data to the Hierarchical FlexGrid</h2>
<p>
This section describes how to bind data to the Hierarchical FlexGrid programmatically.</p>
<p class=label>
<b>To set the DataSource programmatically</b>
<ol>
<li>
On the Visual Basic toolbox, double-click the <b>MSHFlexGrid</b> control to place it on a Visual Basic form.<br><br></li>
<li>
Right-click your Hierarchical FlexGrid and select <b>View Code</b> from the shortcut menu. The <b>Code Editor </b>window appears.<br><br></li>
<li>
In the Form_Load event, add code to create an ADO Recordset and assign it to the Hierarchical FlexGrid. This code is provided in the following sub-steps.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To set the data source programmatically, the project must have a reference to Microsoft ActiveX Data Objects: On the <b>Project</b> menu, choose <b>Select References</b>, and then select <b>Microsoft ActiveX Data Objects 2.0 Library</b>.</p><ul type=disc>
<li>
Create an ADO Connection and Recordset by inserting the following code, replacing the comments as appropriate (for example, replace <code>&lt;myDataSource&gt;</code> with the actual name of your data source):<pre><code>DIM Cn As New Connection, Rs As New Recordset

' You need to replace &lt;myDataSource&gt; with a valid
' DSN on your system.
Cn.ConnectionString = "DSN=&lt;myDataSource&gt;"

' Use the following code for SHAPE Commands
Cn.Provider = "MSDataShape"
Cn.CursorLocation = adUseNone

' Alternatively, for SQL Commands, use the following code
Cn.CursorLocation = adUseNone

Cn.Open

' You need to specify a valid data source for 
' your Recordset for the Connection created above
Rs.Source = "&lt;valid SQL SELECT command&gt;"

' Now associate the Command with the Connection
' and execute them.
Set Rs.ActiveConnection = Cn
Rs.Open
</code></pre>
</li>
<li>
Assign the open Recordset in Rs to the Hierarchical FlexGrid by inserting the following code:<pre><code>Set MSHFlexGrid1.DataSource = Rs
</code></pre>
</li>
</ul>
</li>
<li>
To view the data in the Hierarchical FlexGrid, on the <b>Run </b>menu, select <b>Start</b>.<p class=tl>
-or-</P><p class=tl>
Press f5.</P></li>
</ol>
</BODY>
</HTML>
