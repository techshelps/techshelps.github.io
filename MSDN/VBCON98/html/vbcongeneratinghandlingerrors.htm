<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Generating and Handling Errors</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcongeneratinghandlingerrors"></a>Generating and Handling Errors in ActiveX Components</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconGeneratingHandlingErrorsC">
</object></p>
<p>
There’s no such thing as an unhandled error in a component. Untrapped errors in a method of your component, or errors you generate using the Raise method of the Err object, will be raised in the client application that called the method.</p>
<p>
Raising errors or returning error codes to the client is the appropriate behavior for components. A well behaved component does not intrude on the client application’s user interface by displaying message boxes containing error text.</p>
<p>
Users of an application may be blissfully unaware that your component is part of the application they’re using. Seeing error messages from a program unknown to them will not improve their day, or help them solve the problem.</p>
<p>
The following topics discuss the strategies and mechanics of returning error information to the client application, for the application’s developer to deal with as she chooses.
<ul type=disc>
<li>
<a href="vbcondecidinghowtogenerateerrormessages.htm">Deciding How to Generate Error Messages</a>&nbsp;&nbsp;&nbsp;Discusses two major strategies — raising errors (Basic-style) versus returning error codes (Windows API-style).<br><br></li>
<li>
<a href="vbconraisingerrorsfromyourcomponent.htm">Guidelines for Raising Errors from Your Component</a>&nbsp;&nbsp;&nbsp;Discusses the correct format for information in errors raised by components.<br><br></li>
<li>
<a href="vbconhandlingerrorsincomponent.htm">Handling Errors in a Component</a>&nbsp;&nbsp;&nbsp;How to handle internal errors, in particular those raised by components your component is using.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;The basics of error handling are discussed in "Debugging Your Code and Handling Errors," in the <i>Visual Basic Programmer’s Guide.</i></p>
</BODY>
</HTML>
