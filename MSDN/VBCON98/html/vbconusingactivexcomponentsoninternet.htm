<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using ActiveX Components on the Internet</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingactivexcomponentsoninternet"></a>Other Internet Technologies in Visual Basic</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingActiveXComponentsOnInternetC">
</object></p>
<p>
In addition to DHTML applications and IIS applications, there are other types of Internet functionality you can add to your projects in Visual Basic, including:
<ul type=disc>
<li>
ActiveX components that can be used on HTML pages, either as part of an IIS or DHTML application or not. ActiveX components include controls, code components, and ActiveX documents. Using some or all of these solutions, you can create highly functional Internet solutions for your business needs.<br><br></li>
<li>
Internet extensions for Visual Basic applications. You can use special controls that provide some Internet-related functionality. These include the Internet Transfer control, the WebBrowser control, and the WinSock Control.</li>
</ul>
<h2>ActiveX Controls</h2>
<p>
ActiveX controls enliven and add power to your HTML pages. In addition to creating your own controls, you can use the Internet controls provided with the Professional and Enterprise editions of Visual Basic to extend standard applications with Internet technology. For example, you can use ActiveX controls on a Web page to add customized menus to your Web pages, add a scrolling banner you can use to present advertisements or important announcements, or add animated effects.</p>
<p>
Using HTML and VBScript, you can include ActiveX controls on an HTML page, set their properties, call their methods, and handle their events.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See the "Building ActiveX Controls" chapter in the "Creating ActiveX Components" book of the <i>Component Tools Guide</i> for information on developing ActiveX controls for your Visual Basic applications.</p>
<h2>ActiveX Code Components</h2>
<p>
You can use ActiveX code components (.dll or .exe files) to add functionality to an HTML page on either the client or server. Code components on the client can offer an increase in speed, since users' commands do not need to be routed back to the server. Server components also have the benefit of being able to show user interface elements.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See the "Creating an ActiveX DLL," "Creating an ActiveX EXE Component," or "Building Code Components" chapters in the "Creating ActiveX Components" book of the <i>Component Tools Guide</i> for information on developing ActiveX components for your Visual Basic applications.</p>
<h2>ActiveX Documents</h2>
<p>
ActiveX documents integrate tightly with the other elements of your Internet or intranet site. You can use ActiveX documents in conjunction with DHTML applications, IIS applications, or HTML pages that are not associated with a Visual Basic Internet application. You can deploy these components so that users can navigate transparently between ActiveX documents and other pages in your application or Web site.</p>
<p>
You might use ActiveX documents within your Internet applications for two reasons:
<ul type=disc>
<li>
If you need to use the Visual Basic programming model rather than the programming model used in DHTML or IIS applications.<br><br></li>
<li>
If you want to have control over the whole frame of the browser window, rather than just a part of it. When you display a Web page in the browser, the HTML you write to display the page lets you specify the appearance of only the page itself. You cannot write HTML to control the menu, the scroll bar, or any other part of the browser window. When you use an ActiveX document, you can control additional pieces of the window: You can add menus, toolbars, scroll bars, and other items. For example, if you want one page of your DHTML application to contain a custom menu, you might use an ActiveX document.</li>
</ul>
<p>
As is the case with the elements of an HTML page, ActiveX documents that are not installed on users' computers can be automatically downloaded when users navigate to them — and upgraded automatically if the versions on the server are more recent.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp; See the "Building ActiveX Documents" chapter in the "Creating ActiveX Components" book of the <i>Component Tools Guide</i> for information on creating an ActiveX document.</p>
<h2>Internet Extensions for Standard Applications</h2>
<p>
The Professional and Enterprise Editions of Visual Basic also include controls designed specifically to encapsulate Internet-related technology. These include:
<ul type=disc>
<li>
Internet Transfer Control — Packages three common Internet protocols: HyperText Transfer Protocol (HTTP), File Transfer Protocol (FTP), and Gopher.<br><br></li>
<li>
WinSock Control — Allows you to connect to a remote computer and exchange data using either the User Datagram Protocol (UDP) or the Transmission Control Protocol (TCP).</li>
</ul>
<p>
In addition, a WebBrowser control that is available when you install Internet Explorer 4.<i>x</i> allows you to run Web pages as part of a Visual Basic form.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For information about the Internet Transfer control and the WinSock control, see "Using ActiveX Controls" in the <i>Component Tools Guide</i>. For information on using the WebBrowser control, see the Internet Client SDK on the MSDN Library CD, under the heading "SDK Documentation."</p>
</BODY>
</HTML>
