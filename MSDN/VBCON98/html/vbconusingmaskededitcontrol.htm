<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the MaskedEdit Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingmaskededitcontrol"></a>Using the MaskedEdit Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingMaskedEditControlC">
</object></p>
<p>
The MaskedEdit control is used to prompt users for data input using a mask pattern. You can also use it to prompt for dates, currency, and time, or to convert input data to all upper- or lowercase letters. For example, to prompt the user to enter a phone number, you can create the following input mask: "(___) - ___ - ____". If you don't use an input mask, the MaskedEdit control behaves much like a standard text box.</p>
<p>
When you define an input mask using the Mask property, each character position in the MaskedEdit control maps to a placeholder of a specified type, or to a literal character. Literal characters, or literals, give visual cues about the type of data being used. For example, the parentheses surrounding the area code of a telephone number are literals: (206).</p>
<p>
The input mask prevents users from entering invalid characters into the control. If the user attempts to enter a character that conflicts with the input mask, the control generates a ValidationError event.</p>
<p>
The MaskedEdit control is a bound control and can be used with a data control to display or update field values in a data set.</p>
<h2>Possible Uses</h2>
<ul type=disc>
<li>
To prompt for date/time, number, or currency information.<br><br></li>
<li>
To prompt for custom mask formats such as a telephone number or any other input that follows a pattern.<br><br></li>
<li>
To format the display and printing of mask input data.<br><br></li>
<li>
To work with a data control to display and update field values in a data set.</li>
</ul>
<h2>The Mask Property</h2>
<p>
The Mask property determines the type of information that is input into the MaskedEdit control. The Mask property uses characters such as the pound sign (#), backslash (\), comma (,), and ampersand (&amp;) as placeholders that define the type of input. The following table lists all the characters you can use to set the Mask property:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=20%><b>Mask<br>
character</b></td>
<td class=label width=80%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=20%>#</td>
<td width=80%>Digit placeholder.</td>
</tr>
<tr valign=top>
<td width=20%>.</td>
<td width=80%>Decimal placeholder. The actual character used is the one specified as the decimal placeholder in your international settings. This character is treated as a literal for masking purposes.</td>
</tr>
<tr valign=top>
<td width=20%>,</td>
<td width=80%>Thousands separator. The actual character used is the one specified as the thousands separator in your international settings. This character is treated as a literal for masking purposes.</td>
</tr>
<tr valign=top>
<td width=20%>:</td>
<td width=80%>Time separator. The actual character used is the one specified as the time separator in your international settings. This character is treated as a literal for masking purposes.</td>
</tr>
<tr valign=top>
<td width=20%>/</td>
<td width=80%>Date separator. The actual character used is the one specified as the date separator in your international settings. This character is treated as a literal for masking purposes.</td>
</tr>
<tr valign=top>
<td width=20%>\</td>
<td width=80%>Treat the next character in the mask string as a literal. This allows you to include the '#', '&amp;', 'A', and '?' characters in the mask. This character is treated as a literal for masking purposes.</td>
</tr>
<tr valign=top>
<td width=20%>&amp;</td>
<td width=80%>Character placeholder. Valid values for this placeholder are ANSI characters in the following ranges: 32-126 and 128-255.</td>
</tr>
<tr valign=top>
<td width=20%>&gt;</td>
<td width=80%>Convert all the characters that follow to uppercase.</td>
</tr>
<tr valign=top>
<td width=20%>&lt;</td>
<td width=80%>Convert all the characters that follow to lowercase.</td>
</tr>
<tr valign=top>
<td width=20%>A</td>
<td width=80%>Alphanumeric character placeholder (entry required). For example: a&nbsp;&nbsp; z, A&nbsp;&nbsp; Z, or 0&nbsp;&nbsp; 9.</td>
</tr>
<tr valign=top>
<td width=20%>a</td>
<td width=80%>Alphanumeric character placeholder (entry optional).</td>
</tr>
<tr valign=top>
<td width=20%>9</td>
<td width=80%>Digit placeholder (entry optional). For example: 0&nbsp;&nbsp; 9.</td>
</tr>
<tr valign=top>
<td width=20%>C</td>
<td width=80%>Character or space placeholder (entry optional).</td>
</tr>
<tr valign=top>
<td width=20%>?</td>
<td width=80%>Letter placeholder. For example: a&nbsp;&nbsp; z or A&nbsp;&nbsp; Z.</td>
</tr>
<tr valign=top>
<td width=20%>Literal</td>
<td width=80%>All other symbols are displayed as literals; that is, as themselves.</td>
</tr>
</table><br>
<p>
To create an input mask, you combine mask characters with literal characters. Literal characters are characters which rather than representing some data type or format, are used as themselves. For example, to create an input mask for a phone number you define the Mask property as follows:</p>
<pre><code>MaskEdBox1.Mask = (###) - ### - ####
</code></pre>
<p>
The pound sign (a digit placeholder) is used with the left and right parentheses and the hyphen (literal characters). At run time, the MaskedEdit control would look like the following:</p>
<p class=label>
<b>A MaskedEdit control with a phone number mask</b></p>
<p>
<img src="avtct096.gif" border=0></p>
<p>
When you define an input mask, the insertion point automatically skips over literals as you enter data or move the insertion point.</p>
<h3>The Text and ClipText Properties</h3>
<p>
All data entered in the MaskedEdit control is contained in and can be retrieved from the Text property. This is a run time only property and includes all the literal and prompt characters of the input mask. For instance, retrieving data from the Text property of the example above returns the string "(555) - 555 - 5555" – the phone number that was entered.</p>
<p>
The ClipText property also returns data entered in the MaskedEdit control, but without the literal and prompt characters. Using the example above, retrieving data from the ClipText property returns the string "5555555555". The ClipText property is available only at run time.</p>
<h3>Defining the Input Character</h3>
<p>
By default, all mask characters are underlined. This indicates to the user that the character is a placeholder for data input. When the user enters a valid character, the underline disappears. If you want the underline to remain, you can set the FontUnderline property of the MaskedEdit control to True.</p>
<p>
You can also change the underline input character to a different character by using the PromptChar property. For example, to change the underline (_) character to the asterisk (*) character, you simply redefine the value of the PromptChar property:</p>
<pre><code>MaskEdBox1.PromptChar = "*"
</code></pre>
<h3>Using Mask Characters as Literals</h3>
<p>
If you want to use a mask character as a literal, you can precede the mask character with a backslash (\). For example, if you want the pound sign (#) to display, you set the mask as follows:</p>
<pre><code>MaskEdBox1.Mask = "\##"
</code></pre>
<p>
This would produce a mask that displays a pound sign (#) followed by a blank space for entering a number.</p>
<h2>The Format Property</h2>
<p>
You can modify how the MaskedEdit control is displayed and printed using the Format property. The Format property provides you with standard formats for displaying number, currency, and date/time information.</p>
<p>
The following table lists the standard formats you can use with the Format property:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b>Data type</b></td>
<td class=label width=31%><b>Value</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=19%>Number</td>
<td width=31%>(Default) Empty string</td>
<td width=50%>General Numeric format. Displays as entered.</td>
</tr>
<tr valign=top>
<td width=19%>Number</td>
<td width=31%>$#,##0.00;($#,##0.00)</td>
<td width=50%>Currency format. Uses thousands separator; displays negative numbers enclosed in parentheses.</td>
</tr>
<tr valign=top>
<td width=19%>Number</td>
<td width=31%>0</td>
<td width=50%>Fixed number format. Displays at least one digit.</td>
</tr>
<tr valign=top>
<td width=19%>Number</td>
<td width=31%>#,##0</td>
<td width=50%>Commas format. Uses commas as thousands separator.</td>
</tr>
<tr valign=top>
<td width=19%>Number</td>
<td width=31%>0%</td>
<td width=50%>Percent format. Multiplies value by 100 and appends a percent sign.</td>
</tr>
<tr valign=top>
<td width=19%>Number</td>
<td width=31%>0.00E+00</td>
<td width=50%>Scientific format. Uses standard scientific notation.</td>
</tr>
<tr valign=top>
<td width=19%>Date/Time</td>
<td width=31%>(Default) c</td>
<td width=50%>General Date and Time format. Displays date, time, or both.</td>
</tr>
<tr valign=top>
<td width=19%>Date/Time</td>
<td width=31%>dddddd</td>
<td width=50%>Long Date format. Same as the Long Date setting in the International section of the Microsoft Windows Control Panel. Example: Tuesday, May 26, 1992.</td>
</tr>
<tr valign=top>
<td width=19%>Date/Time</td>
<td width=31%>dd-mmm-yy</td>
<td width=50%>Medium Date format. Example: 26-May-92.</td>
</tr>
<tr valign=top>
<td width=19%>Date/Time</td>
<td width=31%>ddddd</td>
<td width=50%>Short Date format. Same as the Short Date setting in the International section of the Microsoft Windows Control Panel. Example: 5/26/92.</td>
</tr>
<tr valign=top>
<td width=19%>Date/Time</td>
<td width=31%>ttttt</td>
<td width=50%>Long Time format. Same as the Time setting in the International section of the Microsoft Windows Control Panel. Example: 05:36:17 A.M.</td>
</tr>
<tr valign=top>
<td width=19%>Date/Time</td>
<td width=31%>hh:mm A.M./P.M.</td>
<td width=50%>Medium Time format. Example: 05:36 A.M.</td>
</tr>
<tr valign=top>
<td width=19%>Date/Time</td>
<td width=31%>hh:mm</td>
<td width=50%>Short Time format. Example: 05:36.</td>
</tr>
</table><br>
<p>
You use the Format property with the Mask property. For example, to create a mask that prompts for a Short Date input that displays in the Long Date format, you set the Mask and Format properties as follows:</p>
<pre><code>MaskEdBox1.Mask = "##-##-##"
MaskEdBox1.Format = "dddddd"
</code></pre>
<p>
When the user enters the date in the short format (06-27-96, for instance), the MaskedEdit control verifies that the entered data is valid, and then, when the focus passes to the next control, it is displayed as "Thursday, June 27, 1996".</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To automatically shift the focus to the next control when the data has been verified as valid, set the AutoTab property of the MaskedEdit control to True.</p>
<p>
The Format property also allows you to specify custom formatting using the same format expressions defined by the Visual Basic Format function.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Format Function" or "Format Property (MaskedEdit control)."</p>
<h2>Setting Properties at Design Time</h2>
<p>
You can set the property values at design time using the MaskedEdit control Property Pages. Click the Custom option in the Properties window of the MaskedEdit control to bring up the Property Pages dialog box, as shown below:</p>
<p class=label>
<b>Setting the Mask property at design time</b></p>
<p>
<img src="avtct097.gif" border=0></p>
<p>
You enter the mask and format patterns as in the run time examples above. The Format drop down list allows you to select any of the predefined standard formats shown above. This dialog box also allows you to easily set such properties as PromptChar, ClipMode, and MaxLength.</p>
<p>
A MaskedEdit field can have a maximum of 64 characters (the valid range is 1 to 64 characters). This includes literal characters as well as mask characters. You can set this value using the MaxLength property. At design time, this property is set automatically to the number of characters in the pattern when you enter a mask pattern.</p>
<p>
The ClipMode property specifies whether or not literal characters are included when doing a cut or copy command. By default, when a selection in the MaskedEdit control is copied to the Clipboard, the entire selection, including the literals, is transferred. To limit the copy operation to only the data entered by the user, set the ClipMode property to True.</p>
<h2>The ValidationError Event</h2>
<p>
The ValidationError event occurs when the MaskedEdit control receives invalid input, as determined by the input mask. For example, if you've defined an input mask that prompts for numbers, a ValidationError event will occur if the user attempts to enter a letter. Unless you write an event handler to respond to the ValidationError event, the MaskedEdit control will simply remain at the current insertion point — nothing will happen.</p>
<p>
Mask characters are validated as they are entered and the insertion point is shifted to the right. When a character is entered or deleted out of sequence (when a digit is inserted or deleted after the phone number has been entered, for example), all nonliteral characters shift either to the right or left. When the shift occurs, if an invalid character replaces the position of a valid character, the ValidationError event is triggered.</p>
<p>
For example, suppose the Mask property is defined as "?###", and the current value of the Text property is "A12." If you attempt to insert the letter "B" before the letter "A," the "A" would shift to the right. Since the second value of the input mask requires a number, the letter "A" would cause the control to generate a ValidationError event.</p>
<p>
The MaskedEdit control also validates the values of the Text property at run time. If the Text property settings conflict with the input mask, the control generates a run-time error.</p>
<p>
You can select text in the same way you would with a standard text box control. When selected text is deleted, the control attempts to shift the remaining characters to the right of the selection. However, any remaining character that might cause a validation error during this shift is deleted, and no ValidationError event is generated.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "ValidationError Event."</p>
<h2>Using MaskedEdit as a Bound Control</h2>
<p>
The MaskedEdit control is a bound control. This means that it can be linked to a data control and display field values for the current record in a data set. The MaskedEdit control can also write out values to a data set.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When the value of the field referenced by the DataField property is read, it is converted to a Text property string, if possible. If the recordset is updatable, the string is converted to the data type of the field.</p>
<p>
The MaskedEdit control has three bound properties: DataChanged, DataField, and DataSource.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Using the ADO Data Control" in "Using Visual Basic's Standard Controls" in the <i>Programmer's Guide</i> for information on using bound controls.</p>
</BODY>
</HTML>
