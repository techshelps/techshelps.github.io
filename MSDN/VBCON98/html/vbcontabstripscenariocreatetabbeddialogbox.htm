<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tabstrip Scenario: Create a Tabbed Dialog Box</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontabstripscenariocreatetabbeddialogbox"></a>Tabstrip Scenario: Create a Tabbed Dialog Box</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTabstripScenarioCreateTabbedDialogBoxC">
</object></p>
<p>
The TabStrip control is used to create dialog boxes which contain a number of tabs. Each tab usually has some relationship to a larger theme, and is therefore related to other tabs in the same dialog box. In this scenario, we create a tabbed dialog box which sets the fonts, and indents of a RichTextBox.</p>
<p>
The following objects are used in the code below:
<ul type=disc>
<li>
Form object named "frmRTF"<br><br></li>
<li>
RichTextBox control named "rtfData"<br><br></li>
<li>
TabStrip control named "tabRTF"<br><br></li>
<li>
Form object named "frmTab"<br><br></li>
<li>
Frame control named "fraTab"<br><br></li>
<li>
ComboBox named "cmbFonts"<br><br></li>
<li>
OptionButton control named "optNormal"<br><br></li>
<li>
OptionButton control named "optBullet"</li>
</ul>
<p class=label>
<b>To create a Tabbed Dialog Box</b>
<ol>
<li>
Create two forms, one named "frmRTF" to contain the RichTextbox, and a second named "frmTab" to contain the TabStrip control.<br><br></li>
<li>
At design time, create two Tab objects on the TabStrip control.<br><br></li>
<li>
Create a Frame control array named "fraTab" on frmTab.<br><br></li>
<li>
Draw the ComboBox on fraTab(0) and two OptionButton controls on fraTab(1).<br><br></li>
<li>
Use the Move method in the Load event to position the Frame controls.<br><br></li>
<li>
In the TabStrip control's Click event, use the SelectedItem property to determine the Index of the clicked Tab.<br><br></li>
<li>
Use the Index with the ZOrder method to bring the right Frame to the front.</li>
</ol>
<h2>Create two Forms, One Named "frmRTF" to Contain the RichTextbox, and a Second Named "frmTab" to Contain the TabStrip Control</h2>
<p>
This scenario requires two forms: the first is named "frmRTF," and contains the RichTextBox control, the second, named "frmTab", contains the TabStrip control.</p>
<p class=label>
<b>To create two Form objects</b>
<ol>
<li>
On the <b>File</b> menu, click <b>New Project </b>to display the <b>New Project </b>dialog box.<br><br></li>
<li>
Double-click the <b>Standard EXE Project</b> icon, and a new form named Form1 will be created for you.<br><br></li>
<li>
If the <b>Properties</b> window is not showing, press f4 to display it.<br><br></li>
<li>
Click the <b>Name</b> box and type "frmRTF."<br><br></li>
<li>
Draw a RichTextBox control on the form.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You must have the RichTextBox (RichTx32.ocx) loaded into the Toolbox. See "Loading ActiveX Controls" for more information.</p></li>
<li>
On the <b>Properties</b> page window, click the <b>Name</b> box and type "rtfData"<br><br></li>
<li>
On the <b>Project Explorer</b> window, click <b>Add</b> <b>Form</b> to display the <b>Add Form</b> dialog box.<br><br></li>
<li>
Double-click the Form icon to insert another form into the project.<br><br></li>
<li>
On the <b>Properties</b> window, click the name box and type "frmTab."<br><br></li>
<li>
Draw a TabStrip control on frmTab, and name it "tabRTF."</li>
</ol>
<p>
You must also have some code that shows the second form. A quick way to do this would be to place a Show method in the DblClick event of the first Form object (frmRTF), as shown below:</p>
<pre><code>Private Sub Form_DblClick()
   frmTab.Show
End Sub
</code></pre>
<h2>At Design time, Create Two Tab Objects on the TabStrip Control</h2>
<p>
You can create Tab objects at design time and at run time. In this scenario, you should create the two tabs at design time. Right-click on the TabStrip control and click Properties to display the Property Pages dialog box. Then click the Tabs tab and click Insert Tab twice. Be sure to give the tabs appropriate captions — "Fonts," and "Indents."</p>
<h2>Create a Control Array Named "fraTab" on frmTab</h2>
<p>
A TabStrip control functions by managing Tab objects. Each Tab object is associated with a container control that appears in the tab's client area. It's most efficient to use a control array to create the container controls. In this scenario, draw a Frame control on the same form as the TabStrip control, and name it "fraTab."</p>
<p class=label>
<b>To create a control array</b>
<ol>
<li>
Draw a Frame control on frmTab.<br><br></li>
<li>
Click the <b>Name </b>box on the <b>Properties </b>window and type "fraTab."<br><br></li>
<li>
Click the Frame control and copy it to the clipboard by either pressing ctrl+c or clicking <b>Copy</b> from the <b>Edit </b>menu.<br><br></li>
<li>
Paste the same control back on the form by pressing ctrl+v. A dialog box will ask you if you want to create a control array. Click <b>Yes</b>.</li>
</ol>
<h2>Draw the ComboBox on fraTab(0) and Two OptionButton controls on fraTab(1)</h2>
<p>
On the control named fraTab(0), draw a ComboBox control, and name it "cmbFonts." To populate the ComboBox with all available fonts on your system, use the following code:</p>
<pre><code>Private Sub Form_Load()
   Dim i&nbsp;&nbsp; ' Declare variable.
   ' Determine number of fonts.
   For i = 0 To Printer.FontCount - 1
      ' Put each font into list box.
      cmbFonts.AddItem Printer.Fonts(I) 
   Next i
   cmbFonts.ListIndex = 0
End Sub
</code></pre>
<p>
To set the SelFontName property of the RichTextBox control, use the following code:</p>
<pre><code>Private Sub cmbFonts_Click()
   frmRtf.rtfData.SelFontName = cmbFonts.Text
End Sub
</code></pre>
<p>
Draw two OptionButton controls on the second Frame control named fraTab(0). Name the first OptionButton control "optNormal," and change its Caption property to "Normal." Name the second control "optBullet," and set its Caption property to "Bullet." The code for these controls sets the SelBullet property to True or False. The code for each is shown below:</p>
<pre><code>Private Sub optBullet_Click()
   ' The Form object's ScaleMode is set to Twips.
   frmRTF.rtfData.BulletIndent = 500
   frmRTF.rtfData.SelBullet = True
End Sub

Private Sub optNormal_Click()
   frmRTF.rtfData.SelBullet = False 
End Sub
</code></pre>
<h2>Use the Move Method in the Load Event to Position the Frame Controls</h2>
<p>
To position the Frame controls over the client area, use the Move method in the Form object's Load event, as shown below:</p>
<pre><code>Private Sub Form_Load()
   ' The name of the TabStrip is "tabRTF."
   ' The Frame control is named "fraTab."
   For i = 0 To    fraTab.Count - 1
   With fraTab(i)
      .Move tabRTF.ClientLeft, _
      tabRTF.ClientTop, _
      tabRTF.ClientWidth, _
      tabRTF.ClientHeight
   End With
   Next I
   
   ' Bring the first fraTab control to the front.
   fraTab(0).ZOrder 0
End Sub
</code></pre>
<h2>In the TabStrip Control's Click Event, Use the SelectedItem Property to Determine the Index of the Clicked Tab</h2>
<p>
To determine which Tab object, use the SelectedItem property. This property returns a reference to the clicked tab. However, the Tabs collection is a 1-based collection (the collection index begins with 1), and the fraTab array is a 0-based collection. To make sure the two are synchronized, subtract 1 from the Index, as shown below.</p>
<pre><code>Private Sub tabRTF_Click()
fraTab(tabRTF.SelectedItem.Index - 1).ZOrder 0
End Sub
</code></pre>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;At design time, you can set the Index property of the Frame control array to become a 1-based array. Thus the code above would read:</p>
<pre><code>fraTab(tabRTF.SelectedItem.Index).ZOrder 0
</code></pre>
<h2>The Complete Code</h2>
<p>
The complete code is shown below:</p>
<pre><code>Private Sub Form_Load()
   Dim i As Integer' Declare variable.
   ' Determine number of fonts.
   For i = 0 To Printer.FontCount - 1
      ' Put each font into list box.
      cmbFonts.AddItem Printer.Fonts(i) 
   Next i

   cmbFonts.ListIndex = 0
   
   ' The name of the TabStrip is "tabRTF."
   ' The Frame control is named "fraTab."
   For i = 0 To fraTab.Count - 1
   With fraTab(i)
      .Move tabRTF.ClientLeft, _
      tabRTF.ClientTop, _
      tabRTF.ClientWidth, _
      tabRTF.ClientHeight
   End With
   Next i

   ' Bring the first fraTab control to the front.
   fraTab(0).ZOrder 0
End Sub

Private Sub cmbFonts_Click()
   frmRTF.rtfData.SelFontName = cmbFonts.Text
End Sub

Private Sub optBullet_Click()
   frmRTF.rtfData.BulletIndent = 500
   frmRTF.rtfData.SelBullet = True
End Sub

Private Sub optNormal_Click()
   frmRTF.rtfData.SelBullet = False
   
End Sub

Private Sub tabRTF_Click()
   fraTab(tabRTF.SelectedItem.Index - 1).ZOrder 0
End Sub
</code></pre>
<p>
This following code goes into the form named "frmRTF."</p>
<pre><code>Private Sub Form_DblClick()
   frmTab.Show
End Sub
</code></pre>
</BODY>
</HTML>
