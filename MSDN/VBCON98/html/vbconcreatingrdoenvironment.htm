<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating an rdoEnvironment Object</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreatingrdoenvironment"></a>Creating an rdoEnvironment Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCreatingRdoEnvironmentC">
</object></p>
<p>
In most cases, your application need not create an additional rdoEnvironment object — the default rdoEnvironments(0) should suffice for most operations. However, if your application expects to support more than one transaction scope, or separate user name and password contexts, you should use the rdoCreateEnvironment method to create a new rdoEnvironment object with specific user name and password values. This method accepts a unique name, a user name, and password. If the name you choose matches the name of an existing member of the rdoEnvironments collection, a trappable error results.</p>
<p>
The default rdoEnvironments(0) is created automatically when the RemoteData control is initialized, or when the first RDO object is referenced in code. The Name property of rdoEnvironments(0) is "Default_Environment." The user name and password for rdoEnvironments(0) are both zero-length strings ("").</p>
<p>
Newly created rdoEnvironment objects are automatically appended to the rdoEnvironments collection if you provide a unique name. You can also use a zero-length string for the <b><i>name</i></b> argument of the rdoCreateEnvironment method. In this case, the new rdoEnvironment is <i>not</i> appended to the rdoEnvironments collection.</p>
<h2>Cached Logon Information</h2>
<p>
The user name and password information from the rdoEnvironment is used to establish the connection if these values are not supplied in the <b><i>connect</i></b> argument of the OpenConnection method, or in the Connect property of the RemoteData control.</p>
<p>
For example, the default user name (Fred) and password (Blond) can be used to establish a connection in the En environment:</p>
<pre><code>Dim En As rdoEnvironment
Set En = rdoCreateEnvironment("", "Fred", "Blond")
</code></pre>
<p>
An rdoEnvironment object logically corresponds to an ODBC <i>environment</i>. You can refer to an rdoEnvironment object using the ODBC API functions, by referencing an rdoEnvironment object's hEnv property. However, because ODBC implementations only allow one environment handle per application, the actual lifetime of the ODBC environment handle is tied to the lifetime of the rdoEngine.</p>
</BODY>
</HTML>
