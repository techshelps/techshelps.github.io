<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Element Appearance in DHTML Applications</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconelementappearanceindhtmlapplications"></a>Element Appearance in DHTML Applications</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconElementAppearanceInDHTMLApplications_C">
</object></p>
<p>
Dynamic HTML allows you to create richer, more interactive user interfaces by allowing you to:
<ul type=disc>
<li>
Use additional measurement units, for finer control over the positioning of page elements.<br><br></li>
<li>
Create elements that wrap around other elements, nest within them, or act as blocks.<br><br></li>
<li>
Have finer control over tables.<br><br></li>
<li>
Support additional types of graphics , including <i>.mpg files</i> (movie clips) and <i>.png files</i> (portable network graphics designed to address some of the shortcomings of .gif files), and other media types registered with the browser.</li>
</ul>
<p>
In addition, you can make use of dynamic styles and dynamic content to fine-tune the appearance of your page.</p>
<h2>Dynamic Styles</h2>
<p>
Originally, HTML was intended to provide a way to separate the structure and content of a Web page from its presentation. That is, the HTML code that defined a page's content and structure was not intended to also define the physical appearance of elements on the page. In earlier version of HTML, this separation was not possible. The only way to allow users to control the formatting of page elements was to introduce tags such as bold &lt;B&gt; and italic &lt;I&gt; and a variety of attributes that controlled such things as font style and size.</p>
<p>
With Dynamic HTML, the original intent of HTML is realized in that you can use <i>cascading style sheets</i> (CSS) to format your page elements. The code controlling the appearance of page elements can be stored in a style sheet. This style sheet is kept separate from the HTML code controlling the page's content and structure.</p>
<p>
A style sheet is a collection of properties that control the appearance of elements on a Web page. Style sheets can apply a style to a group of elements, or to a single element. In addition, you can apply multiple styles to each element on the page. There are three main types of styles you can use in your DHTML applications:
<ul type=disc>
<li>
<i>Inline styles </i>are styles applied to a single element and applied within the element's HTML tag. This is the least flexible way to use styles.<br><br></li>
<li>
<i>Global style sheets</i> are defined at the beginning of an HTML file and set and apply styles for all elements within the page. This is a flexible way to set all styles for a single page.<br><br></li>
<li>
<i>Linked style sheets</i> are stored in a separate file and can apply to multiple pages. This is the most powerful and flexible way to set styles for an application that uses more than one page.</li>
</ul>
<p>
The advantage of using style sheets is that it is very easy to make changes to a page's appearance without writing code. That is, you can change a single line of code in the style sheet — such as increasing the font size of an element — and have that change be reflected in multiple locations throughout your page or in multiple pages. In previous version of HTML, you would have had to make the same change in each location where you wanted to alter the page's appearance. Because of this, it is preferable to avoid using inline styles as much as possible, and store your style information in either a global or a linked style sheet.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;To define global style sheets in your DHTML applications, you need to edit your application's HTML pages in an external editor, as Visual Basic does not provide a way to define styles sheets within the designer. However, if you use the designer to open a page that references a style sheet, the styles for that document appear in the toolbar.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on using style sheets in your applications, see "Dynamic Styles" in the "Dynamic HTML" section of the Internet Client SDK.</p>
<h2>Dynamic Content</h2>
<p>
Dynamic content means that you can customize or replace the contents of a page after the page has been loaded, without making a trip to the server. In past version of HTML, any change to a page's contents required the browser to submit a request to the Web server and then wait for a new version of the page to be sent. Customization required more processing time, and it was often difficult to retain context for the page's contents.</p>
<p>
Using the properties and methods provided in Dynamic HTML, you can easily add new elements with events or remove existing elements. In addition, you can change portions of existing elements by inserting new content within them.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on using style sheets in your applications, see "Dynamic Content" in the "Dynamic HTML" section of the Internet Client SDK.</p>
</BODY>
</HTML>
