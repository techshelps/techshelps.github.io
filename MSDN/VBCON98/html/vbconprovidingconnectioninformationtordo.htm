<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Providing Connection Strings to RDO</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconprovidingconnectioninformationtordo"></a>Providing Connection Strings to RDO</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconProvidingConnectionInformationToRDOC">
</object></p>
<p>
In order to tell the ODBC Driver Manager which driver to use and to tell the selected driver which data source to use, your code must provide a number of arguments in the form of a <i>connect string</i> or RemoteData Control property settings. In most cases, a connect string is used to direct RDO to a specific server, database, and user.</p>
<p>
The connect string contains a series of semi-colon delimited arguments as defined by the ODBC interface — including the ODBC driver itself. That is, all ODBC drivers have specific argument requirements so you should consult the documentation included with the driver for specific information. This connect string is passed to the ODBC API SQLDriverConnect function along with the hEnv for the associated rdoEnvironment object.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you are converting existing DAO or ODBCDirect code, be sure to remove the ODBC argument from the front of the connect string. In addition, the LOGINTIMEOUT argument is not supported — you have to use the LoginTimeout property of the rdoEnvironment object instead.</p>
<p class=indent>
Generally, the connect string arguments include, but are not limited to, the following:</p>
<p class=label>
<b>ODBC Connect Strings</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>ODBC connect string arguments</b></td>
<td class=label width=69%><b>What the argument specifies</b></td>
</tr>
<tr valign=top>
<td width=31%>DSN=</td>
<td width=69%>Registered ODBC Data Source Name. The DSN keyword is not used if DRIVER is used.</td>
</tr>
<tr valign=top>
<td width=31%>UID=</td>
<td width=69%>User name as established on the server. In SQL Server this is the logon name.</td>
</tr>
<tr valign=top>
<td width=31%>PWD=</td>
<td width=69%>Password that corresponds with the logon name.</td>
</tr>
<tr valign=top>
<td width=31%>DATABASE=</td>
<td width=69%>Requested default database (optional).</td>
</tr>
<tr valign=top>
<td width=31%>SERVER=</td>
<td width=69%>The network name of the data source server. On a Microsoft Windows NT computer, "(local)" can be entered as the server. In this case, a local copy of SQL&nbsp;Server can be used, even when this is a non-networked version.</td>
</tr>
<tr valign=top>
<td width=31%>DRIVER=</td>
<td width=69%>Name of data source driver. Microsoft SQL Server uses {SQL Server. The DRIVER keyword is not used if DSN is used.</td>
</tr>
<tr valign=top>
<td width=31%>APP=</td>
<td width=69%>The name of the application (optional).</td>
</tr>
<tr valign=top>
<td width=31%>WSID=</td>
<td width=69%>The workstation ID. Typically, this is the network name of the computer on which the application resides (optional).</td>
</tr>
<tr valign=top>
<td width=31%>LANGUAGE=</td>
<td width=69%>The national language to be used by SQL&nbsp;Server (optional).</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Some of these arguments are specific to SQL Server. For Oracle or other ODBC data sources, other arguments might be required or optional.</p>
<h2>What's <i>Not</i> in the Connect String</h2>
<p>
Note that the connect string does <i>not</i> include arguments to set the following options:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>Option</b></td>
<td class=label width=55%><b>Default behavior</b></td>
</tr>
<tr valign=top>
<td width=45%>Network Address</td>
<td width=55%>Not needed. Handled by server name.</td>
</tr>
<tr valign=top>
<td width=45%>Network Protocol</td>
<td width=55%>Defaults to Named Pipes on SQL Server drivers.</td>
</tr>
<tr valign=top>
<td width=45%>OEMTOANSI switch</td>
<td width=55%>Defaults to "Off"</td>
</tr>
<tr valign=top>
<td width=45%>Use Trusted Connection Option</td>
<td width=55%>Defaults to "Off"</td>
</tr>
<tr valign=top>
<td width=45%>Generate Stored Procedure for Prepared Statement</td>
<td width=55%>Defaults to "Off"</td>
</tr>
</table><br>
<p>
All of these and other driver-dependent options are set in the Data Source Name dialog launched from the Windows Control Panel. Unless you use a DSN to establish your connection, you must accept the default settings for each of these arguments.</p>
<h2>Providing the User ID and Password Values</h2>
<p>
To gain access to most ODBC data sources, you must provide a valid User ID and corresponding password. These values are initially registered by the system administrator but can be changed by your application. By setting appropriate prompt arguments of the OpenConnection or EstablishConnection methods, you can simply prompt the user for these values. However, this approach often leads to security problems because users are permitted any number of attempts to enter a correct user ID/password combination.</p>
<p>
Another approach uses a special User ID and password assigned specifically to your application. This technique assumes that access to the application is limited to specific users who have permission to access the data source or workstation.</p>
<p>
If you choose to use domain-managed security, you should use empty arguments for the UID and PWD parameters of the OpenConnection or EstablishConnection <b><i>connect</i></b> argument. This type of security passes your Windows NT logon ID and password to the data source. These values are collected from the user when they log in to Windows 95 or Windows NT. If your database administrator has implemented integrated or mixed security, this technique should permit you to log on to the data source — assuming you have been granted permission to do so. For example, using the preceding sample code, a domain-managed security <b><i>connect</i></b> argument is coded as follows:</p>
<pre><code>Conn$ = "DSN=MyRemote;UID=;PWD=;"
</code></pre>
<h2>Specifying the Default Database</h2>
<p>
The database associated with an rdoConnection object is determined initially by the DATABASE connect string argument. If this is not supplied, the default database assigned to the user by the server administrator or specified in the DSN is used.</p>
<p>
You can also change the default database after the connection is made by executing a Transact SQL (TSQL) <code>USE database </code>query. In any case, you must have permission to access the selected database. If this permission is denied, a trappable error is raised.</p>
<p>
For example, the following code changes the default database to "Pubs" on the <i>cn</i> connection:</p>
<pre><code>cn.Execute "Use Pubs"
</code></pre>
<h2>Passing the Connect String to RDO or the RemoteData Control</h2>
<p>
Once complete, the connect string is passed as one of the following:
<ul type=disc>
<li>
The <i><b>Connect</b> </i>argument of the OpenDatabase method.<br><br></li>
<li>
The Connect property of the RemoteData Control.<br><br></li>
<li>
The Connect property of the rdoConnection object when used with the EstablishConnection method.</li>
</ul>
<p>
The RemoteData control provides several specific properties to pass this information to RDO, but they are not needed if a connect string is passed in the RemoteData control Connect property. Values provided in the connect string override values provided in RemoteData control properties.</p>
</BODY>
</HTML>
