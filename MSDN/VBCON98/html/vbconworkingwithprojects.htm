<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Projects</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconworkingwithprojects"></a>Working with Projects</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconWorkingWithProjectsC">
</object></p>
<p>
As you develop an application, you work with a project to manage all the different files that make up the application. A project consists of:
<ul type=disc>
<li>
One project file that keeps track of all the components (.vbp).<br><br></li>
<li>
One file for each form (.frm).<br><br></li>
<li>
One binary data file for each form containing data for properties of controls on the form (.frx). These files are not editable and are automatically generated for any .frm file that contains binary properties, such as Picture or Icon.<br><br></li>
<li>
Optionally, one file for each class module (.cls).<br><br></li>
<li>
Optionally, one file for each standard module (.bas).<br><br></li>
<li>
Optionally, one or more files containing ActiveX controls (.ocx).<br><br></li>
<li>
Optionally, a single resource file (.res).</li>
</ul>
<p>
The <i>project file</i> is simply a list of all the files and objects associated with the project, as well as information on the environment options you set. This information is updated every time you save the project. All of the files and objects can be shared by other projects as well.</p>
<p>
When you have completed all the files for a project, you can convert the project into an executable file (.exe): From the File menu, choose the Make <i>project.exe</i> command.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;With the Professional and Enterprise editions of Visual Basic, you can also create other types of executable files such as .ocx and .dll files. References in this chapter assume a standard .exe project; for additional information related to other project types see the <i>Component Tools Guide</i>, available in the Professional and Enterprise editions.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more details about creating executables, see "Making and Running an Executable File," later in this chapter. For information about binary data files and project files, see "Visual Basic Specifications, Limitations, and File Formats."</p>
<h2>The Project Explorer</h2>
<p>
As you create, add, or remove editable files from a project, Visual Basic reflects your changes in the Project Explorer window, which contains a current list of the files in the project. The Project Explorer window in Figure 4.1 shows some of the types of files you can include in a Visual Basic project.</p>
<p class=label>
<b>Figure 4.1&nbsp;&nbsp;&nbsp;The Project Explorer window</b></p>
<p>
<img src="avp04001.gif" border=0></p>
<h2>The Project File</h2>
<p>
Each time you save a project, Visual Basic updates the project file (.vbp). A project file contains the same list of files that appears in the Project Explorer window, as well as references to the ActiveX controls and insertable objects that are used in the project. </p>
<p>
You can open an existing project file by double-clicking its icon, by choosing the Open Project command from the File menu, or by dragging the file and dropping it on the Project Explorer window.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;The specific format of information stored in the .vbp file is described in "Visual Basic Specifications, Limitations, and File Formats."</p>
</BODY>
</HTML>
