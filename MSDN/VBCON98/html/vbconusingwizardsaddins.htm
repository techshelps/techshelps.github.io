<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Wizards and Add-Ins</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingwizardsaddins"></a>Using Wizards and Add-Ins</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingWizardsAddInsC">
</object></p>
<p>
Visual Basic allows you to select and manage <i>add-ins</i>, which are extensions to Visual Basic. These extensions add capabilities to the Visual Basic development environment, for example, special source code control capabilities.</p>
<p>
Microsoft and other developers have created add-ins you can use in your applications. Wizards are a type of add-in that can simplify certain tasks, such as creating a form. Several wizards are included in Visual Basic.</p>
<p>
To have an add-in appear on the Add-In Manager dialog box, the developer of the add-in must ensure that it is installed properly.</p>
<h2>Using the Add-In Manager</h2>
<p>
You can add or remove an add-in to your project by using the Add-In Manager, which is accessible from the Add-Ins menu. The Add-In Manager dialog box lists the available add-ins.</p>
<p class=label>
<b>To install an add-in</b>
<ol>
<li>
From the <b>Add-Ins</b> menu, choose <b>Add-In Manager</b>.<br><br></li>
<li>
Highlight an add-in from the list and click the desired behaviors in Load Behavior. To unload an add-in or prevent it from loading, clear all Load Behavior boxes.<br><br></li>
<li>
When you are finished making your selections, choose <b>OK</b>.<p class=tl>
Depending upon your Load Behavior selections, Visual Basic connects the selected add-ins and disconnects the cleared add-ins.</P></li>
</ol>
<p>
Visual Basic saves your add-in selections between editing sessions.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Selecting an add-in may add menu items to the Visual Basic Add-Ins menu.</p>
<h2>Using Wizards</h2>
<p>
Wizards make working with Visual Basic even easier by providing task-specific assistance. For example, the Application Wizard included in Visual Basic helps you to create the framework for an application by presenting a series of questions or choices. It generates the forms and the code behind the forms based on your choices; all you need to do is add code for your own specific functionality.</p>
<p>
The Professional and Enterprise editions of Visual Basic include other wizards, including a Data Form Wizard for creating forms to be used with databases, and an ActiveX Document Wizard for converting forms for use in Internet applications.</p>
<p>
Wizards are installed or removed using the Add-in Manager. Once installed, they will appear as selections on the Add-Ins menu. Some of the wizards also appear as icons in the related dialog boxes; for example, the Application Wizard can also be accessed using its icon in the New Project dialog box.</p>
<p class=label>
<b>To start the Application Wizard</b>
<ul type=disc>
<li>
From the <b>Add-Ins</b> menu, choose <b>Application Wizard</b>.<p class=tl>
–or–</P></li>
</ul>
<ol>
<li>
From the <b>File</b> menu, choose <b>New Project</b>.<br><br></li>
<li>
Select the <b>Application Wizard</b> icon.</li>
</ol>
</BODY>
</HTML>
