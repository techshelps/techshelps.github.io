<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE DB Providers</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconoledbproviders"></a>OLE DB Providers</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconOLEDBProvidersC">
</object></p>
<p>
OLE DB is a new low-level interface that introduces a "universal" data access paradigm. That is, OLE DB is not restricted to ISAM, Jet, or even relational data sources, but is capable of dealing with any type of data regardless of its format or storage method. In practice, this versatility means you can access data that resides in an Excel spreadsheet, text files, or even on a mail server such as Microsoft Exchange.</p>
<p>
In Visual Basic 6.0, you leverage the flexibility of OLE&nbsp;DB through ADO, the programmer interface to OLE&nbsp;DB. You can even create your own OLE&nbsp;DB Providers in Visual Basic.</p>
<h3>OLE DB and ADO</h3>
<p>
OLE DB is not designed to be accessed directly from Visual Basic due to its complex interfaces. Instead ActiveX Data Objects (ADO) encapsulates and exposes virtually all of OLE DB’s functionality.</p>
<h3>OLE DB Providers</h3>
<p>
Visual Basic does allow you to create your own OLE DB Provider by setting the DataSourceBehavior property to vbOLEDBProvider in an ActiveX DLL project. (See <a href="vbconcreatingmyospobjectclass.htm">Creating the MyOSPObject Class</a>.) By doing so, the OnDataConnection event becomes available to provide notification a connection has been made. For more information, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproDataSourceBehaviorProperty">
</object><a href=JavaScript:alink_2.Click()>DataSourceBehavior property</a>.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more background on OLE&nbsp;DB see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dasdkoledboverview">
</object><a href=JavaScript:alink_3.Click()>Microsoft OLE DB Overview</a>.</p>
</BODY>
</HTML>
