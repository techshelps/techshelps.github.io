<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Document Conventions</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondocumentconventionsbol"></a>Document Conventions</h1>
<p>
This manual uses the following typographic conventions.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>Example of convention</b></td>
<td class=label width=55%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=45%>Sub, If, Case Else, Print, True, BackColor, Click, Debug, Long</td>
<td width=55%>Words with initial letter capitalized indicate language-specific keywords. </td>
</tr>
<tr valign=top>
<td width=45%><b>setup</b></td>
<td width=55%>Words you’re instructed to type appear in bold.</td>
</tr>
<tr valign=top>
<td width=45%><i>event-driven</i></td>
<td width=55%>In text, italic letters can indicate defined terms, usually the first time they occur in the book. Italic formatting is also used occasionally for emphasis.</td>
</tr>
<tr valign=top>
<td width=45%><i>variable</i></td>
<td width=55%>In syntax and text, italic letters can indicate placeholders for information you supply. </td>
</tr>
<tr valign=top>
<td width=45%>[<i>expressionlist</i>]</td>
<td width=55%>In syntax, items inside square brackets are optional.</td>
</tr>
<tr valign=top>
<td width=45%>{<b>While | Until</b>}</td>
<td width=55%>In syntax, braces and a vertical bar indicate a choice between two or more items. You must choose one of the items unless all of the items also are enclosed in square brackets.</td>
</tr>
<tr valign=top>
<td width=45%><pre><code>Sub HelloButton_Click()
Readout.Text = _
"Hello, world!"
End Sub</code><pre></pre>
</pre>
</td>
<td width=55%>This font is used for code.</td>
</tr>
<tr valign=top>
<td width=45%>ENTER</td>
<td width=55%>Capital letters are used for the names of keys and key sequences, such as ENTER and CTRL+R. </td>
</tr>
<tr valign=top>
<td width=45%>ALT+F1</td>
<td width=55%>A plus sign (+) between key names indicates a combination of keys. For example, ALT+F1 means to hold down the ALT key while pressing the F1 key.</td>
</tr>
<tr valign=top>
<td width=45%>DOWN ARROW</td>
<td width=55%>Individual direction keys are referred to by the direction of the arrow on the key top (LEFT, RIGHT, UP, or DOWN). The phrase "arrow keys" is used when describing these keys collectively.</td>
</tr>
<tr valign=top>
<td width=45%>BACKSPACE, HOME</td>
<td width=55%>Other navigational keys are referred to by their specific names.</td>
</tr>
<tr valign=top>
<td width=45%>c:\Vb\Samples\Calldlls.vbp</td>
<td width=55%>Paths and file names are given in mixed case.</td>
</tr>
</table><br>
<h2>Programming Style in This Manual</h2>
<p>
The following guidelines are used in writing programs in this manual. For more information, "Programming Fundamentals" in the <i>Programmer's Guide</i>.
<ul type=disc>
<li>
Keywords appear with initial letters capitalized:<pre><code>' Sub, If, ChDir, Print, and True are keywords.
Print "Title Page"
</code></pre>
</li>
<li>
Line labels are used instead of line numbers. The use of line labels is restricted to error-handling routines:<pre><code>ErrorHandler:
Power = conFailure
End Function
</code></pre>
</li>
<li>
An apostrophe (<code>'</code>) introduces comments:<pre><code>' This is a comment; these two lines 
' are ignored when the program is running.
</code></pre>
</li>
<li>
Control-flow blocks and statements in Sub, Function, and Property procedures are indented from the enclosing code:<pre><code>Private Sub cmdRemove_Click ()
Dim Ind As Integer

Ind = lstClient.ListIndex    ' Get index.
' Make sure list item is selected.
If Ind &gt;= 0 Then
lstClient.RemoveItem Ind    ' Remove it
' from list box.
' Display number.
lblDisplay.Caption = lstClient.ListCount
Else
Beep                     ' If nothing selected, beep.
End If
End Sub
</code></pre>
</li>
<li>
Lines too long to fit on one line (except comments) may be continued on the next line using a line-continuation character, which is a single leading space followed by an underscore ( _):<pre><code>Sub Form_MouseDown (Button As Integer, _
Shift As Integer, X As Single, Y As Single)
</code></pre>
</li>
<li>
Intrinsic constant names are in a mixed-case format, with a two-character prefix indicating the object library that defines the constant. Constants from the Visual Basic (VB) and Visual Basic for applications (VBA) object libraries are prefaced with a "vb"; constants from the data access (DAO) object library are prefaced with a "db"; constants from the Microsoft Excel object library are prefaced with an "xl". For example:<pre><code>vbTileHorizontal
dbAppendOnly
xlDialogBorder
</code></pre>
<p class=tl>
Throughout this book, user-defined constants are usually prefaced with "con" and are mixed case. For example:</P><pre><code>conYourOwnConstant
</code></pre>
<p class=tl>
When using Windows API constants, however, the code examples still follow the same conventions as in previous versions of Visual Basic. For example:</P><pre><code>EM_LINESCROLL
</code></pre>
</li>
</ul>
</BODY>
</HTML>
