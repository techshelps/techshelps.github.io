<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Drawing Lines and Shapes</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondrawinglinesshapes"></a>Drawing Lines and Shapes</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDrawingLinesShapesC">
</object></p>
<p>
Although clearing the drawing area and plotting individual points can be useful, the most interesting graphics methods draw complete lines and shapes.</p>
<h2>Drawing Lines</h2>
<p>
To draw a line between two coordinates, use the simple form of the Line method, which has this syntax:</p>
<p>
[<i>object</i>.]<b>Line</b> [(<i>x1, y1</i>)]–(<i>x2, y2</i>)[, <i>color</i>]</p>
<p>
<i>Object</i> is optional; if omitted, the method draws on the form to which the code is attached (the current form). The first pair of coordinates is also optional. As with all coordinate values, the <i>x</i> and <i>y</i> arguments can be either integer or fractional numbers. For example, this statement draws a slanted line on a form.</p>
<pre><code>Line (500, 500)–(2000, 2000)
</code></pre>
<p>
Visual Basic draws a line that includes the first end point, but not the last end point. This behavior is useful when drawing a closed figure from point to point. To draw the last point, use this syntax:</p>
<p>
<b>PSet [Step] </b>(0, 0)[, <i>color</i>]</p>
<p>
The first pair of coordinates (<i>x1, y1</i>) is optional. If you omit these coordinates, Visual Basic uses the object’s current <i>x, y</i> location (drawing coordinates) as the end point. The current location can be specified with the CurrentX and CurrentY properties, but otherwise it is equal to the last point drawn by a previous graphics or Print method. If you haven’t previously used a graphics or Print method or set CurrentX and CurrentY, the default location is the object’s upper-left corner.</p>
<p>
For example, the following statements draw a triangle by connecting three points.</p>
<pre><code>' Set x-coordinate of starting point.
CurrentX = 1500
' Set y-coordinate of starting point.
CurrentY = 500
' Draw line down and right of starting point.
Line -(3000, 2000)
' Draw line to the left of current point.
Line -(1500, 2000)   
' Draw line up and right to starting point.
Line -(1500, 500)
</code></pre>
<p>
The results are shown in Figure 12.14.</p>
<p class=label>
<b>Figure 12.14&nbsp;&nbsp;&nbsp;A triangle drawn with the Line method</b></p>
<p>
<img src="avp12014.gif" border=0></p>
<p>
The Blanker application uses the Line method to create interesting patterns. To view this, from the Options menu, choose Crossfire, and then choose the Start Demo button.</p>
<h2>The Step Keyword</h2>
<p>
The PSet, Line, and Circle methods specify one or more points using this syntax:</p>
<p>
(<i>x</i>, <i>y</i>)</p>
<p>
You can precede each of these points with the Step keyword, specifying that the location of the point is relative to the last point drawn. Visual Basic adds the <i>x</i> and <i>y</i> values to the values of the last point drawn. For example, the statement:</p>
<pre><code>Line (100, 200)–(150, 250)
</code></pre>
<p>
is equivalent to:</p>
<pre><code>Line (100, 200)–Step(50, 50)
</code></pre>
<p>
In many situations, the Step keyword saves you from having to constantly keep track of the last point drawn. Often you may be more interested in the relative position of two points than their absolute position.</p>
<h2>Using the Color Argument</h2>
<p>
To vary the color of the line, use the optional <i>color</i> argument with graphics methods. For example, this statement draws a dark blue line:</p>
<pre><code>Line (500, 500)–(2000, 2000), RGB(0, 0, 255)
</code></pre>
<p>
If you omit the <i>color</i> argument, the ForeColor property for the object where the line is being drawn determines its color.</p>
</BODY>
</HTML>
