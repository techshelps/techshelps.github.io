<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding Internet Basics</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontheinternetdevelopmentenvironment"></a>Understanding Internet Basics</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconTheInternetDevelopmentEnvironmentC">
</object></p>
<p>
You can program for the Web, using your skills as a Visual Basic programmer, no matter what your level of experience with Internet technology. If you are new to the Internet or unfamiliar with its technology, Visual Basic allows you to quickly and easily produce functional applications. If you are more experienced with Internet technology, you can work at a more advanced level.</p>
<p>
From one perspective, Internet technology simply provides another area for your development efforts. When you deploy Internet applications on the Web, you may go about it differently — incorporating HTML pages with your Visual Basic code, providing security features, and so on — but you're still calling methods, setting properties, and handling events. In this way, all of your knowledge as a Visual Basic developer can be carried into the Internet arena.</p>
<p>
From another perspective, applying Internet technology enables you to extend your development skills in exciting new ways. For example, writing Visual Basic code that manipulates HTML pages allows you to decrease deployment costs, reduce client maintenance problems, and reach the broad audience of the Internet.</p>
<h2>Internet Clients and Servers</h2>
<p>
A common way to think about Internet development is in terms of client/server relationships. In this case, the client is the browser, and the server is the Web server. Most interactions on the Internet or an intranet can be thought of in terms of requests and responses. The browser makes a request to the Web server (usually to display a page the user wants to see) and the Web server returns a response (usually an HTML page, an element, or an image) to the browser.</p>
<h2>Internet vs. Intranet</h2>
<p>
The Internet encompasses two categories: the Internet and the intranet. The Internet is a global, distributed network of computers operating on a protocol called TCP/IP. An intranet is also a network of computers operating on the TCP/IP protocol, but it is not global. Generally, intranets are restricted to a particular set of users and are not accessible by the outside world. For example, many corporations use a corporate intranet to provide information to their employees, and run another Internet site for external users. Users within the company can access both the intranet sites and the Internet, but users outside the company can access only the company's Internet sites.</p>
<h2>HTML Pages</h2>
<p>
HTML (HyperText Markup Language) is a language that allows you to display documents in a Web browser. You use HTML to create .htm files that are displayed in a browser. When you create an Internet application in Visual Basic, your user interface is usually made up of HTML pages rather than forms. In many ways, an .htm file (which allows you to display HTML pages) is similar to a Visual Basic .frm file (which allows you to display a Visual Basic form).</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;While the user interface is generally made up of HTML pages, it can also contain a mix of Visual Basic forms and HTML pages.</p>
<p>
An .htm file is a text document that contains a series of tags that tell the browser how to display the file. These HTML tags supply information about the page's structure, appearance, and content. The following figure shows the relationship between page in the browser and its HTML tags:</p>
<p class=label>
<b>HTML Page and Source HTML</b></p>
<p>
<img src="vb4q2d1.gif" border=0></p>
<p>
In addition to describing the structural relationships among page elements, some HTML tags also contain attributes. Attributes provide details about a particular tag. For example, the tag that inserts an image onto a page contains an attribute that specifies the name of the file to insert. The tag is shown below.</p>
<p class=label>
<b>HTML Tags and Attributes</b></p>
<p>
<img src="vb4q2d2.gif" border=0></p>
<h2>Internet Object Models</h2>
<p>
You use the concepts of object-oriented programming in your Visual Basic Internet applications just as you do in forms-based Visual Basic applications. In Visual Basic Internet applications, you use Internet-related object models to access and manipulate information and controls on your HTML pages.</p>
<p>
There are two types of Visual Basic Internet applications: IIS applications and DHTML applications. In IIS applications, you make use of the Active Server Pages (ASP) object model to retrieve information from the user, send information to the browser, and maintain information about the current session. In DHTML applications, you use the Dynamic HTML (DHTML) object model to manipulate the elements on an HTML page.</p>
<p>
The important point to remember is that you access the information on your HTML pages through objects, regardless of whether the objects themselves are ASP or DHTML. The object models are explained in much greater detail in the chapters describing each type of application.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp; See "A History of Development on the Internet" for more information on the differences between IIS and DHTML applications. See the "Developing DHTML Applications" chapter for more information on using Dynamic HTML objects. See the "Developing IIS Applications" chapter for more information on using ASP objects. See the MSDN™ Web site at http://www.microsoft.com/msdn for details on using HTML and Internet technologies.</p>
</BODY>
</HTML>
