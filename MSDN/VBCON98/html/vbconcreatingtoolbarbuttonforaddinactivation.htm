<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Toolbar Button for Add-In Activation</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcreatingtoolbarbuttonforaddinactivation"></a>Creating a Toolbar Button for Add-In Activation</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCreatingToolbarButtonForAddInActivationC">
</object></p>
<p>
As explained earlier, a toolbar is simply another form of command bar object. So to convert our example add-in from appearing as a menu entry to appearing as a button on a toolbar, make the following code changes:</p>
<pre><code>' This line puts a command bar as a button on the 
' toolbar before the 20th item, in this case, the 
' form coordinates box.
Set mcbMenuCommandBarCtrl = _ 
VBInst.CommandBars("Standard").Controls.Add(1, , , 20)
</code></pre>
<p>
If you want to put the add-in on the Add-In toolbar rather than the Standard toolbar, first activate the Add-In toolbar in the Add-In Manager, then change the reference name of the CommandBar object. The following code adds a button in the first position (leftmost side) of the Add-In toolbar.</p>
<pre><code>' This line puts a command bar as a button on the 
' Add-in toolbar.
Set mcbMenuCommandBarCtrl = _ 
VBInst.CommandBars("Add-Ins").Controls.Add(1)
</code></pre>
</BODY>
</HTML>
