<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Storing State in Databases</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconstoringstateindatabases"></a>Storing State in Databases</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconStoringStateInDatabases_C">
</object></p>
<p>
You can use Visual Basic's ActiveX Data Objects (ADO) technology to store state information for your IIS application in a database. When you store state information in a database, you write records to a database table each time you receive a request from the browser, and retrieve information from those records as needed. This is useful when you have a webclass that is not set up to stay instantiated between requests.</p>
<p>
Storing state information in a database involves several things:
<ul type=disc>
<li>
Opening a connection to the database and writing information to a record there when you want to store your information.<br><br></li>
<li>
Opening a connection to the database, retrieving records, and manipulating their data when you want to retrieve the state information.</li>
</ul>
<p>
Database state storage can allow you to retain information for long periods of time. For example, suppose you are working in an IIS application that manages the transactions and processing associated with an online bookstore. You have a series of pages in your application that gather information about the buyer. You could use databases to store the buyer information offline and save it for future visits by the same user. When a previous user shows up for a subsequent session, even if the next visit is weeks or even months later, the webclass can retrieve the user information from the database by using the login name and password the user supplies.</p>
<p>
In addition, you can use the databinding properties of Visual Basic to manage some state. Because webclasses are Visual Basic objects, they can expose properties that can be bound to a database using the DataBinding and DataFormat objects. This means that property values can be transferred between the webclass and the database automatically through getting and setting those properties.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For more information on ADO processing, search for "ActiveX Data Objects" in the MSDN Library.</p>
</BODY>
</HTML>
