<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing HTML  in Webclasses</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconwritinghtmlinwebclasses"></a>Sending HTML to the Browser</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconWritingHTMLInWebclassesC">
</object></p>
<p>
When the webclass processes a request from the browser, it must send the browser a response. Generally, that response is a stream of HTML that the browser displays to the user. You can return HTML to the browser in two ways:
<ul type=disc>
<li>
You can send the contents of an HTML template file directly to the browser using the WriteTemplate method.<br><br></li>
<li>
You can produce the HTML stream with Visual Basic code.</li>
</ul>
<h2>Sending HTML from a Template</h2>
<p>
The WriteTemplate method is the simplest way to send HTML to the browser in response to a user action. When the webclass launches an event procedure for a template event that contains this method, it sends the template's HTML back to the browser. The resulting page appears to the user.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If the template that you want to send to the browser contains any replacement indicators, the webclass fires the ProcessTag event before it sends the response. This happens automatically as part of WriteTemplate method processing.</p>
<p>
The following code shows an example of how you would use this method in code:</p>
<pre><code>Private Sub OrderSearch_Respond()
   OrderSearch.WriteTemplate
End Sub
</code></pre>
<p>
In this code, a webitem named OrderSearch has an HTML template file associated with it. When Visual Basic fires the Respond event for this webitem, it writes the contents of that template to the browser, which displays it to the end user.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The WriteTemplate method does not fire the Respond event if called from an event in another webitem. In order to keep the webclass code organized, you will often want to invoke the WriteTemplate method within a Respond event.</p>
<p>
The WriteTemplate method can take one optional argument called Template that allows you to specify a different template file to return to the browser. This is helpful when you need to choose from a group of templates with common events. For example, you may have a set of news articles that are formatted similarly and contain a common series of hyperlinks and other tag elements, no matter what the story content. These articles are stored in template files available to a webclass. You can hook up the appropriate tag elements to events in your webclass, but then use the Template argument in a WriteTemplate call to specify the appropriate template file to retrieve for a user request.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "Performing Text Replacements in a Webclass" for more information on the ProcessTag event and its processing as part of a Respond event. See "WriteTemplate Method" in the <i>Language Reference</i> for more information on using the WriteTemplate method and its arguments.</p>
<h2>Sending HTML from Code</h2>
<p>
If you know HTML well, you can also write HTML line by line in your event procedures and send it to the browser using the Response object. This is a more complicated way of sending HTML than the WriteTemplate method, but it is useful in situations where you do not have a template to work with (such as if you are working with a custom webitem) or in which you want to generate a customized response.</p>
<p>
The following sample shows how you use the Response object's Write method to send HTML to the browser. In this procedure, the webclass retrieves user information from a database and writes it to an HTML table:</p>
<pre><code>Private Sub CustomerList_Respond()
   With Response
      'Write the HTML header information and start a table
      .Write "&lt;HTML&gt;"
      .Write "&lt;BODY&gt;"
      .Write "&lt;TABLE BORDER CELLSPACING=1 CELLPADDING=7&gt;"

      'Fill in cells until the end of file is reached in the recordset
      Do While rs.EOF = False

         'Write the user's name and address to a row in the table
         .Write "&lt;TR&gt;"
         .Write "&lt;TD&gt;" &amp; rs("lastname") &amp; "," &amp; rs("firstname") &amp; "&lt;/TD&gt;"
         .Write "&lt;TD&gt;" &amp; rs("address") &amp; "&lt;/TD&gt;"
         .Write "&lt;TD&gt;" &amp; rs("city") &amp; "&lt;/TD&gt;"
         .Write "&lt;TD&gt;" &amp; rs("state") &amp; "&lt;/TD&gt;"
         .Write "&lt;TD&gt;" &amp; rs("zipcode") &amp; "&lt;/TD&gt;"
         .Write "&lt;/TR&gt;"

         'Move to the next record in the recordset, then loop
         rs.MoveNext

      Loop

      'End the table, then write closing tags for the page. 
      .Write "&lt;/TABLE&gt;"
      .Write "&lt;/BODY&gt;"
      .Write "&lt;/HTML&gt;"
   End With
End Sub
</code></pre>
<p>
A few notes on using the Write method:
<ul type=disc>
<li>
Items to be sent to the browser must be enclosed in quotes. This includes both text and HTML tags. For example: "&lt;/TD&gt;&lt;/TR&gt;", or "&lt;P&gt;Please enter your name.&lt;/P&gt;" If you want to insert a quotation mark as part of your response, you must use two quotation marks together. For example, "" inserts a quotation mark. Three quotation marks (""") insert a quotation mark and open or close another set of quotation marks.<br><br></li>
<li>
You might find it simpler to use the With statement, as shown above, when writing HTML in code.<br><br></li>
<li>
You do not need to break your Write statements as shown above. You can put all of your HTML in a single Write statement, or break them into separate statements for easier readability.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;See "The Object Model for IIS Applications" for more information on using ASP objects in your webclass code.</p>
</BODY>
</HTML>
