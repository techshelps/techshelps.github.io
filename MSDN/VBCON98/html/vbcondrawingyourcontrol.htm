<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Drawing Your Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondrawingyourcontrol"></a>Drawing Your Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDrawingYourControlC">
</object></p>
<p>
The way you draw your control's appearance depends on the control creation model you're using.</p>
<p>
If you're creating a user-drawn control, you have to do all the drawing yourself. You have to know when to draw your control, what state it's in (for example, clicked or unclicked), and whether you should draw a focus rectangle.</p>
<p>
If you're enhancing an existing control or creating a control assembly, on the other hand, your UserControl's constituent controls provide your control's appearance. The constituent controls draw themselves automatically, and all you have to worry about is whether they're positioned correctly on the UserControl.</p>
<p>
The following topics outline the basic techniques required for each model.
<ul type=disc>
<li>
<a href="vbconuserdrawncontrols.htm">User-Drawn Controls</a>&nbsp;&nbsp;&nbsp;Describes where to put your drawing code, and visual behavior like button clicks, default buttons, and focus rectangles.<br><br></li>
<li>
<a href="vbconprovidingappearanceusingconstituentcontrols.htm">Providing Appearance Using Constituent Controls</a>&nbsp;&nbsp;&nbsp;Outlines the use of the Resize event, including the handling of minimum control size.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;Control creation models are discussed in "Control Creation Basics," earlier in this chapter.</p>
</BODY>
</HTML>
