<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Advantages of Visual Basic Internet Applications</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconadvantagesofvisualbasicinternetapplications"></a>Advantages of Visual Basic Internet Applications</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconAdvantagesOfVisualBasicInternetApplicationsC">
</object></p>
<p>
There are many ways to develop applications for the Internet. Prior to Visual Basic 6.0, developers relied on CGI programs, on ActiveX functionality, or on Active Server Pages to create dynamic, interactive Internet applications. Internet application development in Visual Basic offers several key advantages over those approaches:
<ul type=disc>
<li>
You can greatly reduce the cost of deployment per user. End users of an IIS Internet application can run the application using only a browser; no special software aside from the appropriate browser needs to be installed on their computers. End users of a DHTML Internet application need only the appropriate browser and the Visual Basic run-time on their computers. These necessary pieces are installed automatically.<br><br></li>
<li>
You can leverage your knowledge of Visual Basic and use the Visual Basic programming environment. You do not have to learn scripting or manipulate HTML tags to develop a highly functional Web-based application.<br><br></li>
<li>
You can separate designing the user interface from writing the code for a form or page. In previous Web-based applications, developers had to insert their script directly into an HTML document that was also used to generate the user interface. The end result was code that could be difficult to read and maintain.<br><br></li>
<li>
In IIS applications, you can reuse pages in different contexts. Unlike HTML, where information to move from page to page must be embedded in the HTML itself, navigation information for a page in a Visual Basic Internet application is stored separately from the page itself. This allows you to reuse the page in several places in your application, changing the navigation each time depending on the context.<br><br></li>
<li>
You can lessen download time and therefore reduce your network load, because the system does not need to download large components to run the application.<br><br></li>
<li>
You can easily maintain application state, such as the user's name or account number, between client requests. Depending on the type of application, you can manage state on the client, the server, or both.<br><br></li>
<li>
You can debug your IIS and DHTML applications using Visual Basic's standard debugging tools. Script and CGI-based Internet applications, on the other hand, can be very difficult to debug.</li>
</ul>
</BODY>
</HTML>
