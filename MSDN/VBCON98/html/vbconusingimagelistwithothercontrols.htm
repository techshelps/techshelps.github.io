<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the ImageList with Other Controls</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingimagelistwithothercontrols"></a>Using the ImageList with Other Controls</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingImageListWithOtherControlsC">
</object></p>
<p>
You can use the ImageList control as a repository of images for use by other Windows Common Controls and by controls with a Picture property.</p>
<h2>Using the ImageList with Other Windows Common Controls</h2>
<p>
The ImageList control can be used to supply images for the following controls using certain of their properties, as listed in the following table.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Windows <br>
Common Control</b></td>
<td class=label width=22%><b>Control Object</b></td>
<td class=label width=47%><b>Properties Settable with ImageList Images</b></td>
</tr>
<tr valign=top>
<td width=31%>ImageCombo control</td>
<td width=22%>ComboItem</td>
<td width=47%>Image and SelImage</td>
</tr>
<tr valign=top>
<td width=31%>ListView control</td>
<td width=22%>ListItem</td>
<td width=47%>SmallIcon and Icon properties</td>
</tr>
<tr valign=top>
<td width=31%>TreeView control</td>
<td width=22%>Node</td>
<td width=47%>Image and SelectedImage properties</td>
</tr>
<tr valign=top>
<td width=31%>Toolbar control</td>
<td width=22%>Button</td>
<td width=47%>Image property</td>
</tr>
<tr valign=top>
<td width=31%>Toolbar control</td>
<td width=22%>Button</td>
<td width=47%>HotImageList property</td>
</tr>
<tr valign=top>
<td width=31%>Toolbar control</td>
<td width=22%>Button</td>
<td width=47%>DisabledImageList property</td>
</tr>
<tr valign=top>
<td width=31%>TabStrip control</td>
<td width=22%>Tab</td>
<td width=47%>Image property</td>
</tr>
</table><br>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For examples of using the ImageList with the ImageCombo, TreeView, ListView, Toolbar, and TabStrip controls, see the scenario topics for those controls. (For example, see "TreeView Control Scenario: Bind the TreeView to the Biblio.mdb Database.")</p>
<p>
To use the ImageList with these controls, you must first associate the ImageList with the other control, and then assign either the Key or Index property to one of the properties listed in the table above. This can be done at design time or run time. All of the Windows Common controls, except the ListView control (discussed in this topic), have an ImageList property that can be set with the name of the ImageList control you are using.</p>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;You should populate the ImageList control with images before you associate it with another control. Once you have associated an ImageList with a control, and assigned any image to a property of the control, the ImageList control will not allow you to add any more images.</p>
<p class=label>
<b>To associate the ImageList control with the TreeView, TabStrip, or Toolbar control at design time</b>
<ol>
<li>
Right-click on the control using images from the ImageList control and click <b>Properties</b> to display the <b>Property Pages</b> dialog box.<br><br></li>
<li>
On the <b>General</b> tab, select the name of the ImageList control from the <b>ImageList </b>box.</li>
</ol>
<p>
To associate the ImageList control at run time, you might use the following code:</p>
<pre><code>' Associate an ImageList named "imlImages" with a
' TreeView control named "tvwDB."
Set tvwDB.ImageList = imlImages
</code></pre>
<p>
Once you have associated an ImageList control with another control, you can set properties for various objects using either the Key or Index property of an image in the ImageList control. For example, the following code sets the Image property of a TreeView control's Node object to an ImageList image with the Key property "leaf."</p>
<pre><code>Private Sub Form_Load()
   ' The TreeView is named "tvwData." 
   ' Add a node and set its Image property.
   ' The Key value of the image is "leaf."
   tvwData.Nodes.Add , ,"1 node","Top","leaf"   
End Sub
</code></pre>
<h3>Using the ImageList Control with the ListView Control</h3>
<p>
The ListView control can use two ImageList controls simultaneously. Instead of having a single ImageList property, the ListView control has an Icons and a SmallIcons property, each of which can be associated with an ImageList control. This can be done at design time or at run time.</p>
<p class=label>
<b>To associate two ImageList controls with the ListView control at design time</b>
<ol>
<li>
Right-click on the ListView control and click <b>Properties </b>to display the <b>Property Pages</b>.<br><br></li>
<li>
Click the <b>ImageLists </b>tab.<br><br></li>
<li>
In the <b>Normal </b>box, select the name of an ImageList control.<br><br></li>
<li>
In the <b>Small</b> box, select the name of another ImageList control.</li>
</ol>
<p>
You can also assign the ImageList controls at run time with code like that shown in the following example:</p>
<pre><code>' Assuming the ListView control is named "lvwDB", the 
' first ImageList is named "imlSmallImages," and the
' second is named "imlImages."
Set lvwDB.SmallIcons = imlSmallImages
Set lvwDB.Icons = imlImages
</code></pre>
<p>
The ImageList control used depends on the display mode determined in the View property of the ListView control. When the ListView control is in Icon view, it uses the images supplied by the ImageList named in the Icons property. In any of the other views (List, Report, or SmallIcon), the ListView uses the images from the ImageList named in the SmallIcons property.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For details about the ListView control see "Using the ListView Control" later in this chapter.</p>
<h3>Assigning ListImage Objects By Index or Key Property</h3>
<p>
After you have associated the ImageList control with one of the Windows Common Controls, you can specify a particular image using the image's Index or Key property.</p>
<p>
For example, if you are using the ImageList with a TreeView control, the following code will assign the third ListImage object (which has an Index value of 3) to a new Node object's Image property:</p>
<pre><code>' The TreeView control is named "tvwDB."
' The fifth argument of the Add method
' specifies an image by either the ListImage
' object's Index or Key property.
tvwDB.Nodes.Add , , ,"node x", 3
</code></pre>
<p>
On the other hand, you could use the Key property to achieve the same end:</p>
<pre><code>' Assuming the Key property is "open."
tvwDB.Nodes.Add , , ,"node x", "open"
</code></pre>
<p>
Because the ListImage object's Key property must be a unique string, at run time, you can then use the Key property instead of the Index property to reference the image. This results in code that is easier to read.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Because the Key must be a unique string, using a descriptive name for each ListImage object will make your code easier to read and debug.</p>
<h2>Using the ImageList Control with Controls Not Part of the Windows Common Controls</h2>
<p>
You can also use the ImageList as an image repository for objects which have a Picture property. These include the following:
<ul type=disc>
<li>
CommandButton control<br><br></li>
<li>
OptionButton control<br><br></li>
<li>
Image control<br><br></li>
<li>
PictureBox control<br><br></li>
<li>
CheckBox control<br><br></li>
<li>
Form object <br><br></li>
<li>
Panel object (StatusBar control)</li>
</ul>
<p>
The ListImage object's Picture property returns a Picture object, which can be assigned to another control's Picture property. For example, the following code will display the third ListImage object in a PictureBox control named "picBox":</p>
<pre><code>Set picBox.Picture = ImageList1.ListImages(3).Picture
</code></pre>
</BODY>
</HTML>
