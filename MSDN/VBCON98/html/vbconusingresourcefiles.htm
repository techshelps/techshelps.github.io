<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Resource Files for Localization</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconusingresourcefiles"></a>Using Resource Files for Localization</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUsingResourceFilesC">
</object></p>
<p>
A resource file is a useful mechanism for separating localizable information from code in Visual Basic.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can have only one resource file in your project. If you attempt to add more than one resource file, Visual Basic generates an error message.</p>
<h3>Advantages of Storing Strings in Resource Files</h3>
<p>
When you are writing Visual Basic code, you can use the LoadResString, LoadResPicture, and LoadResData functions in place of references to string literals, pictures, and data. Storing such elements in a resource file offers two benefits:
<ul type=disc>
<li>
Performance and capacity are increased because strings, bitmaps, icons, and data can be loaded on demand from the resource file, instead of all being loaded at once when a form or a module is loaded.<br><br></li>
<li>
The resources that need to be translated are isolated in one resource file. There is no need to access the source code or recompile the application.</li>
</ul>
<p class=label>
<b>To create a resource file</b>
<ol>
<li>
Select <b>Add New Resource File</b> from the <b>Project</b> menu.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This command is only available when the Resource Editor Add-In is loaded. To load the Resource Editor Add-In, select <b>Add-In Manager</b> from the <b>Add-Ins</b> menu. In the <b>Add-In Manager</b> dialog box, select <b>VB6 Resource Editor </b>and check the<b> Loaded/Unloaded </b>box.</p></li>
<li>
In the <b>Open A Resource File</b> dialog box, enter a name for the resource file. The resource file will be added to the <b>Related Documents</b> node in <b>the Project Explorer</b>.</li>
</ol>
<p>
Visual Basic recognizes resource files by the .res file name extension. If the resource file does not have the appropriate file name extension, Visual Basic won't load it. Conversely, if any file uses the .res file name extension, Visual Basic interprets that it is a resource file when adding it to the project. If the file does not follow the standard format for a resource file, Visual Basic generates an error message the first time you attempt to use the resource file support functions (LoadResString, LoadResPicture, and LoadResData), or when you try to make an .exe file. Visual Basic will generate the same error message if you try to add a 16-bit resource file to a project.</p>
<p>
The .res file, before and after you compile the .exe file, is a standard <i>Windows resource file</i>, which means the resources contained in the file can be loaded in any standard Windows-based resource editor.</p>
<p class=label>
<b>To edit a resource file</b>
<ol>
<li>
Select <b>Resource Editor</b> from the <b>Tools</b> menu.<p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This command is only available when the Resource Editor Add-In is loaded. To load the Resource Editor Add-In, select <b>Add-In Manager</b> from the <b>Add-Ins</b> menu. In the <b>Add-In Manager</b> dialog box, select <b>VB6 Resource Editor </b>and check the<b> Loaded/Unloaded </b>box.</p></li>
<li>
Select a button from the <b>Resource Editor Toolbar</b> to edit an existing resource or add a new one. To learn more about editing resources, see the Resource Editor Add-In documentation.</li>
</ol>
<h3>Locking Resource Files</h3>
<p>
Visual Basic uses file locking on the .res file to prevent problems with multiple applications trying to use the file at the same time. Visual Basic will lock the .res file whenever:
<ul type=disc>
<li>
Visual Basic is in run mode or break mode.<br><br></li>
<li>
You create an .exe file.</li>
</ul>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;For an example of how a resource file can be used to create an application that works in several locales, see "The Automated Teller Machine Sample Application" later in this chapter. For background information about programming with resource files, see "Working with Resource Files" in "More About Programming."</p>
</BODY>
</HTML>
