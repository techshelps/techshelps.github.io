<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Toolbar Scenario 1: Provide an RTF Text Editor with an OpenFile Button</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcontoolbarscenario1"></a>Toolbar Scenario 1: Provide an RTF Text Editor with an OpenFile Button</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconToolbarScenario1C">
</object></p>
<p>
With the RichTextBox control, you can create applications that incorporate an RTF text editor to allow end users to edit documents without starting up a second application. When you incorporate such a text editor into the application, you can provide a toolbar that gives the end user access to common operations such as opening a file and changing font characteristics. This simple scenario populates the Toolbar control with only one Button object. When the user clicks the button, the Open File dialog box is opened.</p>
<p>
The following objects are used in this scenario:
<ul type=disc>
<li>
Form object named "frmRTF"<br><br></li>
<li>
Toolbar control named "tlbRTF"<br><br></li>
<li>
RichTextBox control named "rtfData"<br><br></li>
<li>
ImageList control named "imlToolbar"<br><br></li>
<li>
CommonDialog control named "dlgOpenFile"</li>
</ul>
<p class=label>
<b>To incorporate a toolbar into your application</b></p>
<ol>
<li>
At design time, populate an ImageList control with appropriate images.<br><br></li>
<li>
Associate the ImageList control with the Toolbar control.<br><br></li>
<li>
Create buttons for the toolbar at design time.<br><br></li>
<li>
Create a File menu with an Open menu item named "mnuOpen."</li>
<li>
In the Form_Load event, configure a CommonDialog control to open Rich Text Format (RTF) files.</li>
<li>
In the mnuOpen_Click event, use the CommonDialog control to open a file.</li>
<li>
In the Toolbar control's Button_Click event, use the Select Case statement with the Key property to identify the clicked Button object and invoke the mnuOpen_Click event.</li>
</ol>
<h2>Populate an ImageList Control with Appropriate Images</h2>
<p>
At design time, populate the ImageList control with the images you will need to populate your Toolbar control. This is easily accomplished.</p>
<p class=label>
<b>To populate an ImageList at design time</b>
<ol>
<li>
Right-click on the ImageList control, then click <b>Properties</b> to open the <b>Property Pages</b> dialog box.<p class=tl>
–or–</P></li>
<li>
Click the ImageList control, then press f4 to get the <b>Properties Window</b>, and double-click the <b>Custom</b> property.<br><br></li>
<li>
Click the <b>Images </b>tab.<br><br></li>
<li>
Click <b>Insert Picture</b>. In the <b>Select Picture</b> dialog box, find the image you wish to have appear in the Toolbar control. Repeat this until you have all the images you require. (The sample application uses the bitmap named "open.bmp.")</li>
</ol>
<h2>Associate the ImageList Control with the Toolbar Control</h2>
<p>
Also at design time, after you have populated the ImageList control, you must associate it with the Toolbar control.</p>
<p class=label>
<b>To associate the ImageList control with the Toolbar control at design time</b>
<ol>
<li>
Right-click on the ImageList control, then click <b>Properties</b> to open the <b>Property Pages </b>dialog box.<p class=tl>
–or–</P></li>
<li>
Click the ImageList control, then press f4 to get the <b>Properties Window</b>, and double-click the <b>Custom</b> property.<br><br></li>
<li>
On the <b>General</b> tab, click the <b>ImageList</b> box and select the ImageList control that you have just populated.</li>
</ol>
<h2>Create Buttons for the Toolbar at Design Time</h2>
<p>
Once you have populated the ImageList control and associated it with the Toolbar control, you can begin to create the Button objects themselves. In this scenario, we will create two buttons, one with the Placeholder style, and a second with the Default style.</p>
<p class=label>
<b>To add buttons to the Toolbar Control at design time</b>
<ol>
<li>
Right-click on the Toolbar control, then click <b>Properties</b><br><br></li>
<li>
In the Property Pages dialog box, click the <b>Buttons </b>tab.<br><br></li>
<li>
Click <b>Insert Button</b>.<br><br></li>
<li>
Click the <b>Style </b>box and select Separator.<br><br></li>
<li>
Click <b>Insert Button </b>again — the style is set to Default automatically.<br><br></li>
<li>
In the <b>Key </b>box, type <b>openFile</b>.<br><br></li>
<li>
In the <b>Description </b>box, type <b>Open File</b>.<br><br></li>
<li>
In the <b>Image </b>box and type <b>1</b>.<br><br></li>
<li>
Click <b>OK</b>.</li>
</ol>
<h2>Create a File Menu with an Open Menu Item Named "mnuOpen"</h2>
<p>
Because the Open File operation is commonly invoked from a menu bar, we must create a menu first.</p>
<p class=label>
<b>To create a menu</b>
<ol>
<li>
Select the form "frmRTF."<br><br></li>
<li>
Press ctrl+e to display the <b>Menu Editor</b> dialog box.<br><br></li>
<li>
In the <b>Caption </b>box, type <b>File</b>.<br><br></li>
<li>
In the <b>Name </b>box, type <b>mnuFile</b>.<br><br></li>
<li>
Click the <b>Next </b>button.<br><br></li>
<li>
In the <b>Caption </b>box, type <b>Open</b>.<br><br></li>
<li>
In the <b>Name </b>box, type <b>mnuOpen</b>.<br><br></li>
<li>
Click the right-pointing arrow to indent the menu item.</li>
</ol>
<h2>Configure a CommonDialog Control to Open Rich Text Format (RTF) Files</h2>
<p>
Use the CommonDialog control to create an Open File dialog box. This can be done in the Form object's Load event, as shown below:</p>
<pre><code>Private Sub Form_Load()
   ' Configure dlgOpenFile for opening and 
   ' saving files.
   With dlgOpenFile
      .DefaultExt = ".rtf"
      .Filter = "RTF file (*.RTF) | *.RTF"
   End With
End Sub
</code></pre>
<h2>Use the CommonDialog Control to Open a File</h2>
<p>
In the present scenario, the Toolbar control's single button simply represents a common operation, an Open File function, that is also found on the menu bar. Thus, the code for the Open File operation should be placed in the mnuOpen object's Click event, as shown below:</p>
<pre><code>Private Sub mnuOpen_Click()
   ' Declare a string variable to hold the file name.
   ' Then invoke the ShowOpen method to show 
   ' the dialog box. Set the variable to the Filename 
   ' property. Finally, load the RichTextBox control.
   Dim strOpen As String
   dlgOpenFile.ShowOpen
   strOpen = dlgOpenFile.Filename
   rtfData.LoadFile strOpen, rtfRTF
End Sub
</code></pre>
<h2>Use the Select Case Statement with the Key Property to Identify the Clicked Button Object and Invoke the mnuOpen_Click Event</h2>
<p>
When any Button object on the Toolbar control is clicked, the ButtonClick event occurs. To determine which Button object was clicked, use the Select Case statement with either the Key property or the Index property.</p>
<p>
The example below uses the Key property of the Button object.</p>
<pre><code>Private Sub tlbRTF_ButtonClick _
(ByVal Button As Button)
   Select Case Button.Key
   ' User clicked "open file" button.
   Case "openFile"
      mnuOpen_Click ' Invoke the mnuOpen Click event
   End Select
End Sub
</code></pre>
<p>
You can now run the project and open an RTF file by clicking the button on the toolbar.</p>
</BODY>
</HTML>
