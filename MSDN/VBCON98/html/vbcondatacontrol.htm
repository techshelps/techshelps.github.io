<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Data Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcondatacontrol"></a>Using the Data Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconDataControlC">
</object></p>
<p>
The intrinsic Data control implements data access by using the Microsoft Jet Database engine –the same database engine that powers Microsoft Access. This technology gives you seamless access to many standard database formats and allows you to create data-aware applications without writing any code. The intrinsic Data control is best suited to smaller (desktop) databases, such as Access and ISAM databases. </p>
<p>
You can use the intrinsic Data control to create applications that display, edit, and update information from many types of existing databases, including Microsoft Access, Btrieve, dBASE, Microsoft FoxPro<sup>®</sup>, and Paradox. You can also use it to access Microsoft Excel, Lotus 1-2-3, and standard ASCII text files as if they were true databases. In addition, the data control allows you to access and manipulate remote Open Database Connectivity (ODBC) databases such as Microsoft SQL Server and Oracle.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Both the Data control and Remote Data control are included with Visual Basic for backward compatibility. However, because of the flexibility of ActiveX Data Objects (ADO), it's recommended that you create new database applications using the ADO Data control. For more details, see "Using the ADO Data Control."</p>
<p class=indent>
The Data control, Remote Data control, and the ADO Data control are all conceptually similar: all three are "data controls" that connect a data source to a data-bound control. All three also share the same appearance — a set of four buttons that allow the user to go immediately to the beginning of the recordset, end of the recordset, and scroll backwards and forwards through the recordset.</p>
<h3>Creating a Simple Database Application with the Data Control</h3>
<p class=label>
<b>To create a simple database application with the Data control</b>
<ol>
<li>
Draw a <b>Data</b> control on the form. The Data control is an intrinsic control and is always available.<br><br></li>
<li>
Click the <b>Data</b> control to select it, and press F4 the display the <b>Properties</b> window.<br><br></li>
<li>
In the <b>Properties</b> window, set the <b>Connect</b> property to the type of database you want to use.<br><br></li>
<li>
In the <b>Properties</b> window, set the <b>DatabaseName</b> property to the file or directory name of the database you want to connect to.<br><br></li>
<li>
On the <b>Properties</b> window, set the <b>RecordSource</b> property to the name of the database table you want to access.<br><br></li>
<li>
Draw a <b>TextBox </b>control on the form.<br><br></li>
<li>
Click the <b>TextBox </b>control to select it, and on the <b>Properties </b>window set the <b>DataSource </b>property to the Data control.<br><br></li>
<li>
On the <b>Properties </b>window, set the <b>DataField </b>property to the name of the field in the database you want to view or modify.<br><br></li>
<li>
Repeat steps 6, 7, and 8 for each additional field you want to access.<br><br></li>
<li>
Press F5 to run the application.</li>
</ol>
<h3>Setting Data-Related Properties of the Data Control</h3>
<p>
The following data-related properties can be set at design time. The list suggests a logical order for setting the properties:</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Database technology is a complex science, and the suggestions below are not meant to be taken as rules.
<ol>
<li>
<b>RecordsetType</b> — The RecordsetType property determines if the recordset is a table, dynaset, or snapshot. The choice affects what recordset properties are available. For example, snapshot-type recordsets are more limited than dynaset recordsets.<br><br></li>
<li>
<b>DefaultType </b>— The DefaultType property specifies whether JET or ODBCDirect workspaces are used.<br><br></li>
<li>
<b>DefaultCursorType</b> — The DefaultCursorType property determines the location of the cursor. You can allow the ODBC driver to determine the cursor location, or specify server or ODBC cursors. The DefaultCursorType property is valid only when using ODBCDirect workspaces.<br><br></li>
<li>
<b>Exclusive</b> — Determines if the data is for a single- or multi-user environment.<br><br></li>
<li>
<b>Options</b> — The property determines the characteristics of the recordset. For example, in a multi-user environment, you can set the Options property to deny changes made by others.<br><br></li>
<li>
<b>BOFAction, EOFAction</b> — These two properties determine what will happen when the control is at the beginning and end of the cursor. Choices include staying at the beginning or end, moving to the first or last record, or adding a new record (at the end only).</li>
</ol>
</BODY>
</HTML>
