<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding Control Placement on the Data Report Designer</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconunderstandingcontrolplacementondatareportdesigner"></a>Understanding Control Placement on the Data Report Designer</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconUnderstandingControlPlacementOnDataReportDesigner_C">
</object></p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You will understand this topic better if you read the Data Report tutorial first, beginning at <a href="vbconcreatingsimpledatareport.htm">Creating a Simple Data Report</a>.</p>
<p>
One way of creating a data report is to:
<ol>
<li>
Create a Data Environment designer containing a hierarchy of <b>Command</b> objects.<br><br></li>
<li>
Set the <b>DataSource</b> property of the Data Report designer to the Data Environment designer.<br><br></li>
<li>
Set the <b>DataMember</b> property to the topmost <b>Command</b> object.<br><br></li>
<li>
Right-click the Data Report designer and click <b>Retrieve Structure</b>.<p class=tl>
After retrieving the structure, an appropriate number of Group headers and footers will be created, and each header/footer pair is assigned a name that corresponds to a Command object.</P></li>
<li>
Drag Command objects from the Data Environment designer to the corresponding section on the Data Report designer.<p class=tl>
All of the data fields contained by a Command object are automatically created on the data report as TextBox controls on the section where the Command object is dropped. The DataMember and DataField properties of each TextBox are set in accordance with the Command object and its data fields.</P></li>
<li>
Drag TextBox controls from the section where each was created onto a different section of the Data Report designer.<br><br></li>
<li>
Add Function controls as needed to the report.</li>
</ol>
<p>
When the data report is bound to a data environment, the rules for placement of controls on the report are not immediately apparent. This topic explains how the hierarchy created in the data environment relates to the system of group headers and footers constructed in the data report.</p>
<h3>Command Object Corresponds to Group Header/Footer or Details Section</h3>
<p>
With two exceptions, every Command object in the data environment corresponds either to a pair of group header and footer sections, or to the Detail section. The exceptions are discussed later in this topic.</p>
<h3>Hierarchy Versus Headers, Footers, and Detail</h3>
<p>
The figure below shows a schematic view of the Data Environment designer with four Command objects, each in a parent/child relationship with at least one other command. The data fields that belong to the table are not shown.</p>
<p>
<img src="vb4xxm1.gif" border=0></p>
<p>
The Data Report designer, on the other hand, is constructed as a series of sections. And each section can be categorized into one of four types: Report header/footers, Page header/footers, Group header/footers, and the Detail section. For the purposes of instruction, we can disregard the Report and Page header/footer pairs. This leaves the Group headers/footers and the Detail section.</p>
<p>
The Detail section, the innermost section of the designer, corresponds to the lowest-level Command object. As you go up through the hierarchy, the Detail section is bracketed by pairs of sections, with each pair associated with a single Command object. The figure below correlates the Command objects with the sections:</p>
<p class=label>
<b>Sections Corresponding to Command Objects</b></p>
<p>
<img src="vb4xxm2.gif" border=0></p>
<p>
Thus the figure shows that the hierarchy of the data environment actually corresponds to an expanding series of brackets, with the innermost (Detail) section corresponding to the lowest level of the hierarchy, and the outermost corresponding to the highest-level Command object.</p>
<h3>Controls Can Be Placed in Any Section in a Lower Level</h3>
<p>
The placement of a control is governed by what section (or pair of sections) it belongs to. In brief, a control can be placed in the section where it originates, and in all sections that are at a level lower than itself. For example, if a control belongs to the Command1 section pair, it can also be placed in the section pairs for Commands 2, 3, and 4. A second example: A control that originates in section 3 can also be placed in section 4, but not in sections 1 and 2. Taken to its conclusion, controls that originate in the Command 4 section (the Details section) cannot be placed anywhere else except in the Details section.</p>
<h2>Placing the Function Control</h2>
<p>
The Function control has three exceptions to the above guidelines regarding control placement. The Function control is not directly bound to the recordset, as is the TextBox control. Instead, the Function control calculates its value as the report is generated. For this reason, a Function control can only be placed in Footer sections of the report.</p>
<p>
A second exception for the Function control: it can only be placed in any section pair that is one level <b>above </b>its own. For example, if the Command 3 object contains a Quantity field, you can place a Function control that sums the Quantity values onto the footer section for Command 2, or the footer section for Command 1.</p>
<p>
The third exception concerning the Function control is this: unlike the other data-bound control (the TextBox control), the Function control can be placed in the Report Footer section. When you do so, the scope of the control's calculation will be increased to include the whole report. For example, a Function control placed in the Report footer to calculate the sum of the Quantity field will calculate the sum of every Quantity control on the report.</p>
<h2>The Exceptions: Grouping and Grand Total Aggregate</h2>
<p>
With two exceptions, every Command object in the Data Environment corresponds to a pair of group headers and footers. The first exception occurs when you use the Grouping feature of the Data Environment designer.</p>
<h3>Grouping Fields</h3>
<p>
When you create grouping fields, the Data Environment designer creates two folders under a single Command object. The first contains the grouping fields, and the second contains the Detail fields. Even though a new Command object is not created for the grouping fields, you must create a new group header/footer pair on the data report and this requirement qualifies it as an exception.</p>
<h3>Grand Total Aggregate Fields</h3>
<p>
The second exception occurs when you create a Grand Total aggregate field in the data environment. As happens when creating a grouping field, a new folder is created for the Command object. The new folder contains any Grand Total aggregate fields created, and you must add a new group header/footer pair to the data report.</p>
<p>
<B><b>For More Information</b></B>&nbsp;&nbsp;&nbsp;Details about creating aggregate field can be found in "Creating Aggregates" in "Using the Data Environment Designer." </p>
<h2>Checking the Hierarchy</h2>
<p>
If you are in doubt as to the hierarchy of the Data Environment Command objects, you have two ways of ensuring that the data report has the correct group header/footer structure:</p>
<p>
<b>Retrieve Structure</b>—If you have not placed many controls onto the Data Report designer, and you can tolerate the restructuring of your data report, use the Retrieve Structure command to automatically create the right number of group headers and footers.</p>
<p>
<b>ADO Hierarchy Information—</b>Right-click the topmost <b>Command</b> object in the Data Environment designer and click <b>Hierarchy Info</b> to display the <b>Hierarchy Information</b> dialog box. Click the <b>View ADO Hierarchy</b> tab to see a graphical representation of the <b>Command</b> objects' hierarchy.</p>
</BODY>
</HTML>
