<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RichTextBox Scenario 1: Change Fonts, FontSize, and FontColor</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconrichtextboxscenario1"></a>RichTextBox Scenario: Change Fonts, FontSize, and FontColor</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconRichTextBoxScenario1C">
</object></p>
<p>
With the RichTextBox control the end user can change various attributes of text such as font, font size, and font color. In this scenario, three ComboBox controls appear on an application's toolbar to show attributes of text in the RichTextBox control:</p>
<p>
<img src="avtct051.gif" border=0></p>
<p>
Using these ComboBox controls, the user can select a font, font color, and font size to apply to selected text.</p>
<p>
The following objects are used in this scenario:
<ul type=disc>
<li>
Form object named "frmRTF"<br><br></li>
<li>
Toolbar control named "tlbRTF"<br><br></li>
<li>
ComboBox control named "cmbFontColor"<br><br></li>
<li>
ComboBox control named "cmbFontName"<br><br></li>
<li>
ComboBox control named "cmbFontSize"<br><br></li>
<li>
RichTextBox control named "rtfData"</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The following steps are a general outline of the creation process. Each step is explained in greater detail later in this topic.</p>
<p class=label>
<b>To create three combo boxes that display attributes</b>
<ol>
<li>
Set the Form object's ScaleMode to centimeters.<br><br></li>
<li>
Create a Toolbar control.<br><br></li>
<li>
Create three ComboBox controls on the Toolbar control.<br><br></li>
<li>
In the Form object's Load event, populate the ComboBox controls.<br><br></li>
<li>
In the ComboBox controls' Click event, set the SelFontName, SelFontColor, or SelFontSize property.<br><br></li>
<li>
In the RichTextBox control's SelChange event, use the SelFontName, SelFontColor, or SelFontSize property to change the appropriate ComboBox control's List property.</li>
</ol>
<h3>Set the Form Object's ScaleMode to Centimeters</h3>
<p>
The Form object's ScaleMode property determines which measurement unit is used for certain properties. On the RichTextBox control, the SelIndent. SelHangingIndent, and other properties, use the ScaleMode unit. For these properties, it's more convenient to use centimeters rather than twips. In addition, when creating Button objects with the PlaceHolder style, the ScaleMode property determines how the Button object's width is measured.</p>
<p class=label>
<b>To set the form object's ScaleMode property to centimeters</b>
<ol>
<li>
Click the Form object.<br><br></li>
<li>
Press F4 to display the <b>Properties</b> window.<br><br></li>
<li>
Click the ScaleMode property and select 7 (centimeters).</li>
</ol>
<h3>Create a Toolbar Control</h3>
<p>
On the Toolbox, double-click the Toolbar control icon. In the Properties window, double-click <b>Name</b> and change the name of the control to tlbRTF.</p>
<h3>Create Three ComboBox Controls</h3>
<p>
Three ComboBox controls will be placed on the Toolbar. Each ComboBox control will be populated with font attributes.</p>
<p class=label>
<b>To create three ComboBox controls</b>
<ol>
<li>
On the Toolbox, click the <b>ComboBox</b> control icon.<br><br></li>
<li>
Draw a ComboBox control on the Toolbar control.<br><br></li>
<li>
Set the Name property for each of the three ComboBox controls according to the following table:<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=34%><b>ComboBox</b></td>
<td class=label width=33%><b>Property</b></td>
<td class=label width=33%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=34%>ComboBox1</td>
<td width=33%>Name</td>
<td width=33%>cmbFontName</td>
</tr>
<tr valign=top>
<td width=34%>ComboBox2</td>
<td width=33%>Name</td>
<td width=33%>cmbFontSize</td>
</tr>
<tr valign=top>
<td width=34%>ComboBox3</td>
<td width=33%>Name</td>
<td width=33%>cmbFontColor</td>
</tr>
</table><br>
</li>
</ol>
<h3>Populate the ComboBox Controls</h3>
<p>
The ComboBox controls must also be populated with appropriate values. The following code populates each ComboBox control in the Form_Load event.</p>
<pre><code>Private Sub Form_Load()
   ' Add colors to cmbFontColor.
   With cmbFontColor
   .AddItem "Black"
   .AddItem "Blue"
   .AddItem "Red"
   .AddItem "Green"
   .ListIndex = 0
   End With
   
   Dim i As Integer
   With cmbFontName
      For i = 0 to Screen.FontCount - 1
         .AddItem Screen.Fonts(i)
      Next i
      ' Set ListIndex to 0.
      .ListIndex = 0
   End With

   With cmbFontSize
      ' Populate the combo with sizes in
      ' increments of 2.
      For i = 8 To 72 Step 2
         .AddItem i
      Next i
      ' Set ListIndex to 0
      .ListIndex = 1 ' size 10.
   End With
End Sub
</code></pre>
<h3>In the ComboBox Controls' Click event: Set the SelFontName, SelColor, or SelFontSize Property</h3>
<p>
To set the font, color, and font size for a RichTextBox control, use the SelFontName, SelColor, and SelFontSize properties. For each of the ComboBox controls, set the appropriate property in the Click event. After setting the property, you may want to set the focus back to the RichTextBox control:</p>
<pre><code>Private Sub cmbFontName_Click()
   rtfData.SelFontName = cmbFont
   rtfData.SetFocus
End Sub

Private Sub cmbFontSize_Click()
   rtfData.SelFontSize = cmbFontSize.Text
   rtfData.SetFocus
End Sub

Private Sub cmbFontColor_Click()
   ' Change font colors of text using the
   ' Select Case statement with the ListIndex of the 
   ' ComboBox control. Set the colors with
   ' the intrinsic constants for color.
   Me.Show
      With rtfData
   Select Case cmbFontColor.ListIndex
   Case 0
      .SelColor = vbBlack
   Case 1
      .SelColor = vbBlue
   Case 2
      .SelColor = vbRed
   Case 3
      .SelColor = vbGreen
   End Select
   End With
   ' Return focus to the RichTextbox control.
   rtfData.SetFocus
End Sub
</code></pre>
<h3>In the SelChange Event: Use the SelFontName, SelColor, or SelFontSize property to change the appropriate ComboBox control's List property</h3>
<p>
The ComboBox control can also be used to notify the user of text attributes as the insertion point is moved in the RichTextBox control. The SelChange event occurs either when the insertion point is moved, or when selected text is changed. Thus, in the SelChange event, check the SelFontName, SelFontColor, and SelFontSize properties and reset the appropriate ComboBox control.</p>
<pre><code>Private Sub rtfData_SelChange()
   ' SelFontSize returns the font size, or Null if 
   ' it's mixed. 
   If Not IsNull(rtfData.SelFontSize) Then
      cmbFontSize.Text = rtfData.SelFontSize
   End If

   ' Show Font name in the ComboBox.
   cmbFont.Text = rtfData.SelFontName

' Show color of text in the ComboBox. Use the 
' intrinsic constants for color to determine
' the color of the text.
   Select Case rtfData.SelColor
      Case vbBlack
         cmbFontColor.ListIndex = 0
      Case vbBlue
         cmbFontColor.ListIndex = 1
      Case vbRed
         cmbFontColor.ListIndex = 2
      Case vbGreen
         cmbFontColor.ListIndex = 3
   End Select
End Sub

</code></pre>
</BODY>
</HTML>
