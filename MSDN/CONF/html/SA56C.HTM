<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Basic Indexing Features</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Basic Indexing Features</H2><p>Index Server provides the following basic indexing features:</P>
<UL><LI><B><I>Indexes full text in Web pages and also indexes HTML tags as properties</I></B>. This allows Index Server to make use of the structure of the document, rather than just the raw content. </LI><LI><B><I>Indexes full text in formatted data such as Microsoft Excel or Word documents</I></B>. Index Server also has the ability to look inside private data formats via the open standard IFilter interface. Unlike some other systems that are limited to text files, Index Server can read a variety of document formats. </LI><LI><B><I>Incrementally refreshes indexes</I></B>. This means that if a user only changes one document, only one document is indexed, conserving system resources. </LI><LI><B><I>Controls indexing on an IIS virtual directory basis</I></B>. This allows users to have control over how much of their document collection they want to index. For example, users could only index and make available only their public data. It also allows users to block indexing of a directory containing a large quantity of dynamic information which would not be useful for a search.</LI><LI><B><I>Indexes file and document property values</I></B>. This allows users to query for author, date, and other properties.</LI><LI><B><I>Indexes text in seven supported languages</I></B>. Index Server handles multi-lingual documents and can change languages on the fly as it is indexing a document. For example, the system can switch from English to German to French, and back to English again. </LI><LI><B><I>Automatic index updates</I></B>. The system indexes documents in the background as they are being modified. So there is no need to update documents manually; the system is tracking changes and indexing them as they are made. This allows documents to stay more current.</LI><LI><B><I>Performance monitoring</I></B>. Server administration. This allows administrators to know the number of indexers, the status of the indexing in progress, the number of documents indexed, and other operational criteria. </LI><LI><B><I>Zero-Maintenance</I></B>. By design, Index Server offers 7 x 24 reliability, with automatic corruption detection and recovery.</LI><LI><B><I>Low overhead</I></B>. A major goal has been to keep the impact of Index Server on the system as low as possible.</LI></UL><p>Indexing is controlled on a per-virtual-root basis. An index is built over a set of virtual roots, and their child directories. It is possible to incrementally refresh an index, that is, refresh an index by indexing only changed files. Index Server doesn't need to index all documents to pick up just a few changes. Index Server also provides zero-maintenance design, so that the system runs as autonomously as possible, maintaining its own statistics regarding the state of the indexes and optimizing them when necessary. This provides peace of mind for server administrators who can install Index Server with the confidence that the machine can handle routine operations automatically. </P>
<p>Index Server is also designed to support indexing and searching for documents in an international information environment  Full support for seven languages is built in, and additional languages can be added through an open specification.</P></BODY></HTML>
