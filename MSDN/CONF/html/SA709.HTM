<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Convert Code Carefully</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Convert Code Carefully</H3><p>One of the biggest sources of slow running code is code that has been converted from running on a Microsoft Jet database (.MDB) and is now running against ODBC data. One of the worst of these is code that loops through a table modifying single records at a time instead of using a single pass-through Structured Query Language (SQL) statement to do the same operation. </P>
<p>File-based databases, such as Microsoft Jet's .MDB files, are relatively efficient at these operations, and so this code may run at an acceptable speed against an .MDB file when compared with the SQL statement approach. The same code, however, is likely to be extremely slow against ODBC data because of the large amount of network traffic involved versus sending a single SQL statement to the server.</P>
<p>Other operations that may help converted code run faster include:</P>
<P><ul><li>    Cache multiple inserts locally and update the server in one operation.</P>
<P><li>    Place transactions around multiple updates to help data integrity and ease programming complexity.</P>
<P><li>    Use parameterized queries to reduce query compilation and execution time.</P></ul>
<p>More information on using these techniques is provided below.</P></BODY></HTML>
