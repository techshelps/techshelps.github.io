<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Process Model</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Process Model</H3><p>The MSF process model is a product life cycle model adapted specifically for success in a client-server environment. It consists of four high-level milestones, each of which will be owned by one or more of the team project roles discussed above. To distinguish it from a more traditional "waterfall" process model, the MSF process model can be represented with a spiral diagram as shown in Figure 5.</P>
<P><img src="40937.gif"></P>
<P>Figure 5: The MSF Process Model</P>
<p>Here's a brief description of each of the high-level milestones.</P>
<UL><LI><B>Vision/Scope Approved</B> This milestone is owned by product management. The vision statement provides an opportunity for customers and team to agree upon a high-level vision of the application: the business requirements for the application, the problems it will solve and major constraints that it must satisfy.</LI><LI><B>Functional Specification Approved </B>Program management owns the functional specification. For custom applications, the functional specification should in principle provide enough detail to commit to a fixed-price estimate and a delivery schedule. Since the next major process phase is construction, the functional specification clearly needs to contain a sufficient blueprint for the development team to begin coding. In custom database applications, this should include all supporting system architecture documents (entity/relationship, process flow, screen specifications, pseudo-code, and so on).</LI><LI><B>Code Complete</B> The construction phase, concluded with the code complete milestone, is jointly owned by the development and user education project roles. At this milestone, product features and development have been frozen and support plans and documentation are in place.</LI><LI><B>Release</B> Testing and quality assurance should have been taking place before the code complete milestone is reached, but after that milestone the project focus is almost solely on testing and QA. The release milestone is jointly owned by the test/QA and logistics project roles.</LI></UL><p>In Figure 6 we show a more traditional life cycle diagram which suggests the Gantt view often associated with project methodologies. This figure makes clear the responsibility of the different project roles for the four major milestones, and also stresses that each of the six roles has important work to do in most of the project's phases.</P>
<P><img src="40938.gif"></P>
<P>Figure 6: A modified Gantt view of the MSF Process Model</P>
<p>There are several critical assumptions underlying the MSF process model, along with some caveats to be aware of. Here are some of particular importance to Visual Basic development projects:</P>
<UL><LI>    Your project infrastructure needs to be in place before things start: don't expect to figure out how to do version control or testing or naming conventions during the construction phase. Since you've already (supposedly) committed to a fixed bid, this is a great way to blow the budget.</LI><LI>    Notice how overlapping the team's roles are. Test/QA needs to be involved up-front as we've discussed, since at least outlining a test plan is critical input in the functional specification. Also notice how development is involved even in putting together the vision/scope document. In Visual Basic, development's contributions of early prototypes are critical in gathering customer input in design and completely specifying that design. </LI></UL><p><B>Tip: Be realistic about fixed bids.</B> To us, the functional specification is usually the most critical deadline. With what we've discussed about testing alone, it's often impossible to commit to a fixed-bid estimate, unless you accept that you'll be doing post-release debugging gratis. So be realistic, and build yourself outs:</P>
<p>Avoid fixed bids if possible, but prepare a functional specification as if for a fixed bid.</P>
<p>If you have to work on a fixed bid basis, limit post-release debugging/technical support to a fixed time period and build that into your overall project costs.</P></BODY></HTML>
