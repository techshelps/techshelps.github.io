<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Should I Develop My Administrative Tools for MMC Now?</TITLE> <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>



	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Should I Develop My Administrative Tools for MMC Now? </H2><p>Developers should begin building all administrative tools using MMC. The single largest benefit of MMC is that it enables you to quickly build tools. Even better, because MMC will eventually become part of the SDK, you can build a Snap-In once and ship it either stand-alone, bundled with other product, or as an extension of yet other products (for example, a reporting product can run stand-alone, can ship with Microsoft Exchange Server, or can extend an already-released ISV product). </P>
<p>Because tools are shipped as documents, you can, as part of your many "canned tools," make use of Microsoft Snap-Ins&mdash;for example, you can ship a tool that uses Microsoft's file server manager, log viewer, or other Snap-Ins. </P>
<p>MMC supports integration with the tools that Microsoft and other ISVs offer. You also benefit from the work done by Microsoft to define standard methods of task delegation, task orientation, tool integration, and tool customization. </P>
<p>Microsoft will be working with vendors in the near timeframe to coordinate Snap-In creation and integration.</P></BODY></HTML>
