<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>General Client-Server Strategies</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>General Client-Server Strategies</H2><p>Data Access Objects (DAO) has a number of options and features that allow you to optimize your programs to run more efficiently against an Open Database Connectivity (ODBC) data source. Applying some general overall design strategies, however, will allow far greater gains than what can be achieved by merely tweaking settings. Many articles have been written that document these in more detail (see the references section of this paper for a few), but this section highlights some of the more important strategies.</P></BODY></HTML>
