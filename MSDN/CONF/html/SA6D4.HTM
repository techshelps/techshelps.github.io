<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Preface</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Preface</H2><p>Microsoft&reg; Access relational database management system relies on Wizards to help users perform complicated tasks easily. All the Wizards in Microsoft&nbsp;Access version 2.0 are constructed using ordinary Access Basic code and Access forms. The code and User Interface (UI) for these Wizards reside in library databases that are loaded when Microsoft&nbsp;Access starts. Microsoft&nbsp;Access provides an open architecture for you to further augment and customize the native Microsoft&nbsp;Access environment by building your own Wizards. You can write Wizards to help users build forms, reports, tables, and queries. You can also write Wizards that help users construct controls on forms and reports, set properties, or perform general tasks, such as managing attached tables, build spell checkers, etc. Our goal was to make it easy for an independent developer to build custom-tailored tools that are fast, easy to install, and easy for the user to discover. Making them easy to use is up to you. </P>
<p>We will start with a brief overview of the different kinds of Wizards you can build. Then we'll discuss the details of building a simple Builder that helps a user set a form property, and focus on the new development tools available to you in Microsoft&nbsp;Access version 2.0. These include code modules that are scoped to a single form or report, like Microsoft Visual Basic&reg;, and enhanced debugging tools for working with library databases. Finally, we'll discuss the new Add-in Manager and demonstrate how it can help you distribute your Wizards and Add-ins easily. </P></BODY></HTML>
