<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Custom Builders for Visual Class Libraries</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Custom Builders for Visual Class Libraries</H2><p>Builders in Visual FoxPro are programs that interact with a form or any of its controls while in the Form Designer or Class Designer. Builders allow direct manipulation of properties and methods while in design mode. The general difference between Wizards and Builders is that Wizards are designed to quickly step you from point A to point B for a particular process while Builders are used to edit methods and properties of live objects in the Form/Class design mode.</P>
<p>Builders are re-entrant, which means they interact with existing properties and methods of an object or objects and often act like a user-friendly object editor. Visual FoxPro 3.0 ships with many built-in builders for classes on the Standard control toolbar (Textbox, Editbox, Grid, Combobox, Listbox, etc.) along with special Builders such as the Form Builder and the AutoFormat Builder. The built-in Visual FoxPro Builders are packed in an application called BUILDER.APP.</P>
<p>When using _BUILDER="&lt;path&gt;BUILDER.APP," BUILDER.APP will check the selected object for a custom property called Builder. If a custom property called Builder of type "character" exists and contains a valid .PRG, .FXP, .APP, or .SCX file name, then the builder specified by the Builder property will be executed. The purpose of the reserved Builder property is for declaring a specific builder within a class definition using the Visual Class Designer (VCX). This will allow custom Builders to be distributed along with class libraries. Simply keep the associated Builders in the same directory as the class libraries (VCXs) to allow a specific Builder to be executed. Creating a custom Builder property can be useful with custom class libraries (VCXs) when subclassing in the Class Designer or adding object instances in the Form Designer since the Builder can act as a high-level interface between the developer and any method and/or property members of the class.</P></BODY></HTML>
