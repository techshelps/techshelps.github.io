<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Internet Publishing</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Internet Publishing</H3><p>The sole function of some applications is to present information. The information may be prepared, formatted, and displayed at the user's request, or it may be selected dynamically in response to a user's query. Read-only bulletin boards, online manuals and newsletters, and document archives are examples of this application category. These applications fall into the area of the classic Web Page, or browser display. You can make these applications, or just the documents themselves,  Internet capable in the following ways :</P>
<p><I>Make current information available on the web by placing the existing documents into a web directory.</I> <BR>Use the Web server's "Allow directory browsing" option to display a listing of the documents, making sure the documents have fully descriptive (typically long) file names.  Make an ActiveX Document Viewer available to the users. Depending on the type of documents, this document viewer could be an off-the-shelf Word or PowerPoint viewer, or a simple custom application that allows the user to view the contents of a database as a form or data sheet.<BR><B>Technology:</B> None, except for possible development of custom document viewer in  C/C++.</P>
<p><I>Convert existing documents to HTML and place into a Web directory</I><B>.<BR>Technology:</B>  SQL Server Web Wizard for database files. For very simple document conversions, and standard  tools, such as Internet Assistant for Word.</P>
<p><I>Develop server-side "applications" to convert existing documents to HTML, on-the-fly. That is, at the time of the http client request.</I><BR><B>Technology:</B> ISAPI Filters for data conversion.</P>
<p><I>Dynamically create HTML, at the time of HTTP client request (URL receipt), from information stored in a database or elsewhere.</I><B> <BR>Technology:</B>  ISAPI application that "reads" source data and prepares HTML output.  HTML could come from templates such as the .HTX files used by the Internet Database Connector, Active Server Page (code-named <I>Denali</I>) scripting, and Common Gateway Interface (CGI).</P>
<p>On a scheduled or periodic basis, create either HTML or another ActiveX-format document and place it in a Web directory.<BR>For example, a corporate sales information system could output a weekly sales report this way. This option uses HTML as a reporting "format" like paper, paper images, or other file types that may have been used in the past. <BR><B>Technology:</B>   Any scheduled process for HTML "report" preparation that could run on the Internet server or any other computer that could "place" the generated HTML files into the Web Servers directories.  The process could be a stored procedure either created by the SQL Web Wizard or written directly, and scheduled by an SQL Server "Trigger." In all cases, it supports content indexing of any data that is part of the application, either by supporting the IFilter:: interface or by storing its information in compound files and populating the Summary Information Stream.</P></BODY></HTML>
