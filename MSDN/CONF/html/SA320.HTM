<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Design Application</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Design Application</H3><p>The building of the application depends on the query manager. This should be the first specification written. Once this is done, the application can be designed, based on this manager. The forms and data structures should be organized to match the queries: One form, one frame, or one data structure equals one query per unit of work.</P>
<p>The ability to restart applications and use arriving result sets is not difficult to implement with a query manager and should be considered.</P>
<p><img src="40837.gif"></P>
<H4> </A>Reusable Code</H4><p>The agents are reusable from project to project with little difficulty because there is nothing that is application-specific. The query manager can be made semi-independent of the application by placing all of the application-specific code in the hand shaking routines:</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">QueryManager_ReturnQuery2App</font></pre>
<p>This permits the same functionality to be added to other projects easily.</P></BODY></HTML>
