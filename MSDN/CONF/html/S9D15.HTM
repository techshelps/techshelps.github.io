<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting ATM Natively</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Supporting <BR>ATM Natively</H2><p>Looking ahead, Microsoft plans to extend the Network Driver Interface Specification (NDIS) to support ATM natively in the operating system. The NDIS 4.1 extensions will provide kernel-mode drivers with direct access to connection-oriented media such as ATM. The extensions add a connection-oriented call plane with full QoS support, so a VC can be established with QoS. It then adds a connection-oriented data plane for sending and receiving data on that VC.</P>
<p>The new architecture will extend native ATM support for Windows Sockets (WinSock) 2.0 through the creation of a null transport layer which maps WinSock APIs to NDIS, extending direct ATM access to user-mode applications. WinSock, designed by the WinSock working group and developed by Microsoft, Intel, and other industry leaders, is a Win32&reg; programming API that enables development of transport-independent network applications. The ATM Forum membership in April 1996 approved that the WinSock 2 API's ATM extension is a legitimate syntax mapping to the ATM Forum API specification.</P>
<P><img src="38816.gif"></P>
<P>Figure 1. Microsoft plans to extend the Network Driver Interface Specification (NDIS) to support ATM natively in the operating system. On the left is NDIS today. Third-party ATM solution vendors provide their own LAN Emulation Clients (LEC), UNI Call Manager, and Hardware Interface software. On the right is the Windows architecture view of native ATM support,(IETF RFC 1577) in which Microsoft will provide the LEC, UNI Call Manager and IP over ATM natively in the operating system. The WinSock 2 service provider for ATM will also enable more QoS-based applications to run over ATM with Windows.</P>
<p>Also included will be the User Network Interface (UNI) 3.1 call manager. UNI 3.1 is the signaling protocol standardized by the ATM Forum. NDIS 4.1 will also accommodate "pluggable" call managers for media-specific call signaling.</P>
<p>In addition, the new architecture calls for support of classical IP over ATM networks, as described in the IETF standard RFC 1577, which enables IP-based applications to work over ATM networks.</P>
<p>Microsoft has also entered into licensing agreements with FORE Systems and Olicom, providing additional resources for ATM developers and vendors. Microsoft has licensed Olicom's UNI 3.1 call manager, and FORE System's <I>ForeThought </I>ATM LAN Emulation Client software for integration with future versions of Microsoft's Windows operating system products. These licensed technologies provide ATM solution developers with an additional path for bringing their products to market as quickly and as inexpensively as possible.</P></BODY></HTML>
