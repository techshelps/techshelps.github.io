<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Form and Report Modules</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Form and Report Modules</H2><p>Microsoft Access 2.0 adds modules for forms and reports to the global modules that existed in Microsoft Access 1.x. Form and report modules are "built in" to forms and reports. Every form or report in Microsoft Access has a module automatically associated with it. This module is used for code that responds to events on the form or report. This new feature is referred to as "Code Behind Forms" or CBF.</P>
<p>CBF in Microsoft Access is very similar to CBF in the Microsoft Visual Basic&reg; programming system. Both support "event procedures," which are Basic procedures that are run in response to events. These event procedures follow the same syntax in both Microsoft Access and Visual Basic, as the following examples show:</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">Sub Form_Open( Cancel As Integer )
   'User code for responding to open for a form in Microsoft Access
End Sub
Sub ControlFoo_KeyPress ( KeyAscii As Integer )
    'User code for responding to press of a key in the control
    'named ControlFoo.  
End Sub</font></pre>
<p>These procedure templates are generated for you by Microsoft Access. All you need to do is add your code to respond to the event.</P></BODY></HTML>
