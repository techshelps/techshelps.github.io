<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scenario 1: Enterprise Console Launches MMC</TITLE> <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>



	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H4>Scenario 1: Enterprise Console Launches MMC</H4>
<p>Because most enterprise consoles are supported on Windows NT, it's possible to have MMC be the tool of choice to manage Windows clients. For example, you could imagine looking at the physical map view of one of these consoles and seeing a Windows NT Server computer flashing red. When an administrator opens a Windows NT Server object, an MMC saved tool would be launched. This takes advantage of the strengths of the enterprise console in managing the heterogeneous network, and the strengths of MMC and associated ISV Snap-Ins at managing the Windows platform.</P></BODY></HTML>
