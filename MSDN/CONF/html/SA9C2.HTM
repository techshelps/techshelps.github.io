<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Extending Functionality</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Extending Functionality</H3><p>Another reason to create a class would be to create something that simply does not exist. A good example of this would be a class that combines controls to create a new type of control. For example, we could create a text box and a timer control to create a stop watch. Either object, working on its own, cannot provide the full functionality a stop watch would require. If we put them together, we come up with a new control called a Stop Watch that would track the time and display it for use. We'll see an example of a stop watch object in our discussion of how to model an entity, define responsibilities, and finally code the class.</P></BODY></HTML>
