<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Components and the Internet</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Components and the Internet</H2>
<h3>Businesses want to use Internet protocols to link component-based applications across public and private networks, projecting a presence of their business systems out onto <BR>the Web.</H3><p>The simplicity, ubiquity, and industry momentum of standard Internet protocols like HTTP make it an ideal technology for linking components together for applications that span machine boundaries. HTTP is easy to program, is inherently cross-platform, and supports an accessible, universal naming service. Much of the excitement around the Java language derives from its potential as a mechanism to build distributed component applications on the Internet. </P>
<p>For example, many companies have built investment portfolio management systems that rely upon an Internet-based data streams, such as Pointcast for stock information. This enables a low cost way to leverage and integrate existing services and applications into an in-house solution based on browser and Web technology. Developers can simply "plug-in" the services of a remote component communicating over the Internet as a low-cost means to enhance the functionality of an in-house solution.</P>
<p>DCOM enables component applications to operate across the Internet. Microsoft is working with Internet standards bodies, including the IETF and the W3C, to offer DCOM to the Internet community as an open technology. </P>
<p>DCOM is ideally positioned to become a mainstream, Internet technology for business applications because it is:</P>
<UL><LI><B>Transport neutral&mdash;</B>DCOM enables components to communicate with each other over any network transport, both connection-oriented and connectionless, including TCP/IP, UDP/IP, IPX/SPX, AppleTalk, and HTTP.</LI><LI><B>Provides distributed Java today&mdash;</B>Since DCOM is language neutral, Java applets can communicate directly with each other (and any other ActiveX component, regardless of authoring language) via DCOM over the Internet.</LI><LI><B>Evolutionary technology&mdash;</B>In addition to Java support, DCOM enables components written in other languages, including C, COBOL, Basic, and Pascal, to communicate over the Internet, providing a growth path for existing applications to support Web technology.</LI><LI><B>Common components for the browser and Web server</B>&mdash;Since ActiveX components can be embedded into browser-based applications, DCOM enables a rich application infrastructure for distributed Internet applications that leverage the latest browser technology.</LI><LI><B>Security&mdash;</B>DCOM integrates Internet certificate-based security with an even richer level of Windows&nbsp;NT-based security, combining the best of both worlds.</LI><LI><B>Standards-based&mdash;</B>DCOM is based on the Open Group DCE RPC, an open and widely-deployed communications technology. The DCOM wire protocol extensions have been submitted as an Internet draft and can be downloaded at &lt;http://ds.internic.net/Internet-drafts/draft-brown-dcom-v1-spec-00.txt&gt;.</LI></UL></BODY></HTML>
