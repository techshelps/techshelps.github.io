<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Optimization Tips &amp; Tricks</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Optimization Tips &amp; Tricks</H2><P CLASS="lp1">Here we'll briefly catalog a few things you can do to optimize the performance of your applications. Optimization can often be important, but don't lose the forest for the trees: often an "optimized" approach is more code intensive than a simpler alternative, and with developer time as expensive as it is, optimization can be a loser from a deadline and budget standpoint. When you do decide to spend developer time optimizing your Visual Basic projects, remember to make your code as generic and re-usable as possible.</P></BODY></HTML>
