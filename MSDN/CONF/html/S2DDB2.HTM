<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scenario 2: MMC Offers Views Into an Enterprise Console</TITLE> <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>



	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H4>Scenario 2: MMC Offers Views Into an Enterprise Console</H4>
<p>Given MMC's ability to host Snap-Ins, it's easy to envision portions of enterprise console applications making themselves available through the MMC user interface. In fact, when one thinks of what comprises an enterprise console implementation, the bulk of the offering is base management infrastructure and services: inventory, device auto-discovery, software distribution, alert collection and suppression, help desk, etc. The UI associated with this behavior can quite easily be offered as MMC Snap-Ins. Microsoft's future approach will be to have Microsoft System Management Server hosted within MMC. The same applies to other Microsoft BackOffice products. </P></BODY></HTML>
