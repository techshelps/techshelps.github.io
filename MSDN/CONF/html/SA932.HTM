<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Agent API Design</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Agent API Design</H3><p>The host agent is simple: It receives queries in a specified format and returns the results. I would suggest that the host agent does not process more than one query at a time. Multiple queries are significantly more complex and may have less throughput.</P>
<p>Remote agent may become very complex because of application interface issues. Much of the complexity can be removed by doing a layered and structured design.</P>
<p>Ideally, both synchronous and asynchronous modes should be supported. Once the asynchronous mode is done, the synchronous mode is simple. For synchronous access, the agent connects directly to the data source and creates the result set directly.</P></BODY></HTML>
