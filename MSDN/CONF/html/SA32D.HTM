<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Day 1: Importing the Data and Building an Application</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Day 1: Importing the Data and Building an Application</H3><p>Our first step is to extract all needed data from the mainframe and to transfer it to a Microsoft Access database. This is done to prevent our development from affecting real data and to isolate the development process from the mainframe. The creation of this database can be done in very few lines of Microsoft Access Basic code once the ODBC connection is set up. </P>
<H4> </A>Defining an ODBC Source</H4><p>Before we can import data from the mainframe, we must tell ODBC how to connect to the mainframe. The first step is to click the ODBC Admin button.</P>
<p><img src="40890.gif"></P>
<p>After we click the ODBC Admin button, we are presented with the existing defined sources.</P>
<p><img src="40891.gif"></P>
<p>If our source is not defined, we click the Add button to add a new source. If our mainframe driver is not installed, we would click the Drivers button first. After we click the Add button, we are presented with a list of installed drivers.</P>
<p><img src="40892.gif"></P>
<p>Select the appropriate driver, and complete any setup forms. Close the ODBC Administrator by closing the Add Data Source dialog box.</P>
<p>The tables to be imported from the mainframe must be entered next. Enter the needed table names in the table at the bottom of the form.</P>
<H4> </A>Cloning the Data from the Mainframe</H4><p>Once we have entered the table names, we fill in the top two text boxes with the ODBC connection information. For most ODBC drivers, you will keep the database type as &lt;SQL Database&gt;. The ODBC Attach String field is determined by the ODBC driver.</P>
<p><img src="40893.gif"></P>
<p>Clicking the Clone Tables button will download the specified tables. The Table tab in the Microsoft Access database will display all the tables that have been successfully downloaded. </P>
<p><img src="40894.gif"></P>
<p>The download code is very simple:</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">Sub VB207_CloneTables ()
Dim DB As Database
Dim RS As Recordset, GoOn%, CR$
CR$ = Chr$(13) + Chr$(10)
Set DB = dbengine(0)(0)
Set RS = DB.OpenRecordset("VB207_tblMainFrame")
On Error GoTo Button24_Problems
While (Not RS.eof) And (GoOn% &lt;&gt; 7)
    DoCmd TransferDatabase A_Import, VB207Action.DBType, VB207Action.ODBCConn, A_TABLE, RS("TableName"), RS("TableName")
    RS.MoveNext
Wend
RS.Close
On Error GoTo 0

Exit Sub
Button24_Problems:
GoOn% = MsgBox(Error$ + " Should we continue?" + CR$ + VB207Action.DBType + CR$ + VB207Action.ODBCConn, 16 + 4, "Error")
Resume Next
End Sub</font></pre>
<p>This code simply transfers the data from the mainframe to the Microsoft Access database using the <B>TransferDatabase</B> command. If a problem occurs&mdash;for example, a bad ODBC connection string&mdash;our error handler permits us to exit the routine immediately.</P>
<H5 CLASS="h4"> </A>Preparing the Data</H5><p>After we have downloaded the actual data, we need to add back two pieces of information: the table indices and the relationship. The indices are simple to add by going into design mode on the imported tables. </P>
<p>The relationships between the tables on the mainframe can be added by using the relationship editor. The relationship table should appear something like the sample below after all the relationships are added.</P>
<p><img src="40895.gif"></P>
<H5 CLASS="h4"> </A>Adding Queries</H5><p>The mainframe can contain views of the data that we wish to create in our Microsoft Access database. We use <I>query by example</I> (QBE) to create these needed views. For example, suppose we wish to have a list of stores, titles, authors, and quantities of books.  We drop the tables we want into the QBE dialog box and then select these fields (au_lname, au_fname, title, stor_name, and qty). Our QBE screen looks like this:</P>
<p><img src="40896.gif"></P>
<p>Now, for those of you who prefer not to use QBE and prefer to be <I>real programmers</I> and code in SQL code only, try this code:</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">SELECT DISTINCTROW Authors.au_lname, 
   Authors.au_fname, 
   Titles.title, 
   stores.stor_name, 
   Sum(sales.qty) AS SumOfqty 
FROM (Titles INNER JOIN 
   (Authors INNER JOIN titleauthor 
      ON Authors.au_id = titleauthor.au_id) 
   ON Titles.title_id = titleauthor.title_id) 
   INNER JOIN 
   (stores INNER JOIN sales ON stores.stor_id = sales.stor_id) 
   ON Titles.title_id = sales.title_id 
GROUP BY Authors.au_lname, 
   Authors.au_fname, 
   Titles.title, 
   stores.stor_name
ORDER BY Authors.au_lname, 
   Authors.au_fname;</font></pre>
<p>The SQL code approach usually takes seven times longer than the QBE method.</P>
<p>We create all the queries we need (using either the SQL code or the QBE method) and a few that we suspect we may need (it's hard to stop when you are having fun!). When we are finished, we are ready to create forms and reports.</P>
<H4>Creating a Preliminary Prototype</H4><p>Creating forms and reports is easy and fast if you exploit the Wizards in Microsoft Access to create screens for each table and query. The field names in the tables and queries are used as captions on the forms and reports. These computer names are not ideal, but we will correct that shortly.</P>
<p>Simply click the AutoCreate Forms and AutoCreate Reports buttons and all your forms will be created. The form created for our query example is shown below:</P>
<p><img src="40897.gif"></P>
<p>The form creation code is very easy because we use the existing Wizard code.</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">Set DB = dbengine(0)(0)
'Do tables next.
If 7 &lt;&gt; MsgBox("Do you wish forms for each table?", 48 + 4, "Auto Forms") Then
DB.TableDefs.Refresh
cObj = DB.TableDefs.count
If (cObj &gt; 0) Then
    For iDoc = 0 To cObj - 1
        stname = ""
        stname = DB.TableDefs(iDoc).name
        If (Not (stname Like VB207Table)) And (Not (stname Like SYSTEMTABLE)) And (Not (stname Like STTMPCLIPPFX)) And (Not (Len(stname) = 0)) Then
            GoSub MakeForm
        End If
    Next iDoc
End If
End If
[code for queries]
MakeForm:
    StartCount% = Forms.count
    rc = zwAutoForm(stname)
    'Success?
    If StartCount% &lt; Forms.count Then
        Set NewForm = Screen.activeForm
        FrmName = "frm" + stname
        
        On Error Resume Next 'Remove old copy if any.
        DoCmd DeleteObject A_Form, FrmName
        On Error GoTo 0
        If StrComp(NewForm.Caption, stname, 1) = 0 Then
            NewForm.SetFocus
            SendKeys "^{F4}Y"
            SendKeys FrmName + "~", True
        End If
    End If
Return</font></pre>
<p>The appearance of these forms may be modified by changing parameters or by opening the .MDA files and changing the code. </P>
<H5 CLASS="h4"> </A>Structuring Forms and Reports</H5><p>After we have created the forms, we need to spend an hour organizing the forms and reports based on the nature of the data and what we know about the user's business needs. Use any suitable drawing package to create an organization chart of forms and reports.</P>
<p><img src="40898.gif"></P>
<p>We create any needed lookup screens or menus by hand. To build a menu, we place controls and then answer the Wizard's questions. A sample menu is shown below:</P>
<p><img src="40899.gif"></P>
<p>Now we have a rough application ready to show tomorrow morning.</P></BODY></HTML>
