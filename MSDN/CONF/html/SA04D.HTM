<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limitations of Transactions</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Limitations of Transactions</H3><p>Although using transactions can improve the functionality and performance of your client/server applications, they have several limitations.</P>
<H4>Don't Nest Transactions</H4><p>Very few servers support nested transactions (for example, SQL Server and Oracle do not). Because of this, Microsoft Jet doesn't support any transaction nesting against ODBC data and will ignore attempts to nest transactions. This is a common code change to make when porting code that runs against MDB data sources to ODBC data sources.</P>
<H4>Check Pass-through Queries</H4><p>Some pass-through queries may not be allowed within a transaction. For example, Microsoft SQL Server doesn't allow data-definition, permission, or backup-related statements within transactions. Check your server's documentation to determine these limits.</P>
<H4>Don't Use Server Transaction Commands</H4><p>Microsoft Jet often conserves connections by sharing them between queries. If you use server-specific transaction commands in pass-through queries, they can confuse the internal tracking of server transactions performed by Jet as well as providing you with unexpected results. For example, on SQL Server don't use the SQL Server command "BEGIN TRAN". Instead, use the BeginTrans method. Jet translates these transaction methods into the equivalent server commands.</P>
<H4>Be Aware of Server Limits</H4><p>Locks get placed on the server for every operation you perform inside a transaction. Be aware of the number of locks you're requesting and make sure your server is configured to handle it.</P>
<H4>Isolate Transactions If Needed</H4><p>Remote data used within the Workspace objects does not have an isolated transaction space. For example, if you use two Workspace objects to open tables attached to an ODBC data source, transaction methods on one Workspace will affect transactions on the other. Since its unusual to have two different sets of transactions used concurrently, this is not likely to affect much code.</P>
<p>If you want to have multiple concurrent transactions on your server, you can force each workspace to have a distinct remote transaction space by setting the IsolateODBCTrans property of the Workspace object to True. This prevents the workspace from sharing connections with other workspaces, thus guaranteeing transaction isolation. For details on the IsolateODBCTrans property, search the Microsoft&nbsp;Access Readme Help for "IsolateODBCTrans."</P></font></BODY></HTML>
