<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows Sockets in Windows NT</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Windows Sockets in Windows&nbsp;NT</H3><p>The key to transport-independent Windows Sockets support in Windows&nbsp;NT is a common kernel-mode transport interface called <I>Transport Device Interface</I>, or TDI for short. All of the networking components of Windows&nbsp;NT go through TDI to access a transport protocol's services. TDI abstracts key differences between protocols, such as the format of transport addresses, and provides common entry points for typical transport features like sending data.</P>
<P><img src="40735.gif"></P>
<P>Networking architecture of Windows&nbsp;NT</P>
<p>All the kernel-mode networking components of Windows&nbsp;NT use the TDI interface to speak to the transport layers below them. This use of a common interface allows easy addition or removal of transport protocols, since each transport protocol is completely separated from the layers which use it; in fact, each transport is packaged as a separate driver file.</P>
<p>However, TDI is not the only kernel-mode transport interface available in Windows&nbsp;NT. There is also the <I>Streams</I> interface, which is based on the AT&amp;T&reg; SVR4 Streams environment. Streams is useful for porting existing transport protocols to Windows&nbsp;NT quickly and easily. However, it does impose a performance overhead on all transactions, since there is a mapping layer between the TDI calls made by upper layers and the internal interfaces used by Streams. The TCP/IP and IPX/SPX transport protocols supplied with the original release of Windows&nbsp;NT existed in the Streams environment, but Daytona, the next release of Windows&nbsp;NT, will include native TDI implementations of these transport protocols for improved performance.</P>
<p>The use of TDI as the interface underneath Windows Sockets solves most of the issues with multiple transport support, but some additional issues do remain. For example, because each transport protocol uses a different address format, how could Windows Sockets know which addresses are broadcast addresses? How can the Windows Sockets DLL know which transport device name corresponds to a given type of socket? And how can transports supply their own unique socket options like TCP/IP's SO_DONTROUTE option?</P>
<p>The answer is the use of user-mode "helper DLLs" which the Windows Sockets DLL (WSOCK32.DLL) uses for carefully defined functionality. Each of the TDI transport protocols exposed through Windows Sockets supplies one of these helper DLLs as well as placing information in Windows&nbsp;NT's registry about where to find the helper DLLs and what sorts of sockets each supports. The Windows Sockets DLL then calls into the helper DLL's entry points to learn about the format of transport addresses, to process transport-specific socket options, and more. </P>
<P><img src="40736.gif"></P>
<P>Windows Sockets architecture of Windows&nbsp;NT</P>
<p>In addition to 32-bit Windows Sockets applications supported through WSOCK32.DLL, Windows&nbsp;NT also supports 16-bit Windows Sockets applications through the file WINSOCK.DLL. This file is composed of minimal entry points which call into Windows&nbsp;NT's "WOW" (Windows-on-Windows) subsystem, which widens the parameters to 32-bits and calls into WSOCK32.DLL for the actual networking support. Thus, WINSOCK.DLL acts as a "thunking layer" between 16-bit applications and the rest of the operating system, which is all 32-bit.</P></BODY></HTML>
