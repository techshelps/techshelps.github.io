<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows Sockets on Windows NT</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Windows Sockets on Windows&nbsp;NT</H3><p>Although the initial focus of Windows Sockets was for Windows 3.1 16-bit applications, Windows&nbsp;NT supports Windows Sockets as well. To run existing 16-bit Windows Sockets applications, Windows&nbsp;NT supplies WINSOCK.DLL. In addition, Windows&nbsp;NT offers 32-bit Windows Sockets support in the DLL called WSOCK32.DLL. In general, all of the Windows Sockets routines in the 32-bit DLL are identical to their 16-bit counterparts, although their parameters are widened to 32-bits. </P>
<p>The most significant difference in programming Windows Sockets applications for Windows&nbsp;NT is that Windows&nbsp;NT is a fully preemptive, multithreaded operating system. Therefore, if an application blocks on a Windows Sockets call, the rest of the system is not negatively impacted. In addition, it is feasible to write a multithreaded application which uses one thread to process user input and another to block on sockets calls. Such an application could use the blocking sockets calls and still be responsive to user input.</P>
<p>The asynchronous Windows Sockets calls are still advantageous in Windows&nbsp;NT. The most significant advantage is that they allow an application to be fully event-driven, fitting better within the Windows programming paradigm. In addition, 32-bit versions of Windows Sockets will soon be available for Win32s&reg;. An application written to use the asynchronous routines can be easily ported to Win32s without the negative system impacts of blocking calls.</P></BODY></HTML>
