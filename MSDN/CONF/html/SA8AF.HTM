<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NDIS Wrapper</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>NDIS Wrapper</H3><P><img src="40661.gif"></P>
<p>In Windows&nbsp;NT, NDIS has been implemented in a module called NDIS.SYS, which is referred to as the NDIS wrapper.</P>
<p>The NDIS wrapper is a small piece of code surrounding all of the NDIS device drivers. The wrapper provides a uniform interface between protocol drivers and NDIS device drivers and contains support routines that make the development of an NDIS driver easier.</P>
<p>Previous implementations of NDIS required a Protocol Manager (PROTMAN) to control access to the network adapter. The primary function of PROTMAN was to control the settings on the network adapter and the bindings to specific protocol stacks. Windows&nbsp;NT does not need a PROTMAN module because adapter settings and bindings are stored in the registry and configured using the Network icon in the Control Panel. </P>
<p>Because the NDIS wrapper controls how protocols communicate with the adapter, the protocols communicate with the NDIS wrapper rather than with the network adapter card itself. This is an example of the modularity of the layered device model. The adapter is independent from the protocols; therefore, a change in protocols does not require changing the adapter configuration.</P></BODY></HTML>
