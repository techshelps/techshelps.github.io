<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ATM Traffic Control</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>ATM Traffic Control</H3><p>Traffic control refers to a set of actions performed by the network to avoid congestion and to achieve predefined network performance objectives (for example, in terms of cell transfer delays or cell loss probability). </P>
<p>The ITU (International Telecommunications Union, formerly called CCITT) has defined a standard rule, called the Generic Cell Rate Algorithm (GCRA), to define the traffic parameters. This rule is used to unambiguously differentiate between conforming and nonconforming cells; that is, it provides a formal definition of traffic conformance to the negotiated traffic parameters.</P>
<H4> </A>Generic Cell Rate Algorithm</H4><p>ITU recommendation I.371 defines two equivalent versions of the Generic Cell Rate Algorithm: the virtual scheduling (VS) algorithm, and continuous-state leaky bucket (LB) algorithm. For any sequence of cell arrival times, both algorithms determine the same cells to be conforming or non conforming.</P>
<p>GCRA uses the following parameters:</P>
<p>t<SUB>a</SUB> = cell arrival times</P>
<p>I = increment, or the distance between two consecutive cells</P>
<p>L = limit, represents a certain tolerance value</P>
<p>TAT = theoretically predicted cell arrival time</P>
<p>At the arrival of a cell, the VS algorithm calculates the theoretical arrival time of the cell, assuming equally spaced cells when the source is active. If the actual arrival time of a cell is after TAT - L, then the cell is conforming; otherwise, the cell arrived too early and is considered nonconforming.</P>
<p>The continuous-state leaky bucket algorithm can be viewed as a finite capacity bucket whose contents leak out at a continuous rate of 1 per time unit and whose contents are increased by I for each conforming cell. If at a cell arrival the content of the bucket is less than L, then the cell is conforming, otherwise it is non conforming. The capacity of the bucket is L + I. </P>
<p>For more information about the CGRA algorithm, refer to the ITU recommendation I.371.</P>
<H4> </A>Traffic Control Objectives</H4><p>ATM traffic control has the following objectives:</P>
<P>To support a set of QoS classes sufficient for existing and foreseeable services</P>
<P>To maximize network resource utilization</P>
<P>To use network resources efficiently under any traffic circumstance </P>
<p>Two basic traffic control functions that ATM networks use to manage traffic are connection admission control (CAC) and usage parameter control (UPC), described below.</P>
<H5 CLASS="h4"> </A>Connection Admission Control </H5><p>Connection admission control (CAC) represents a set of actions carried out by the network during the call setup phase to accept or reject an ATM connection. If there are sufficient resources to accept the call request, and if the call assignment does not affect the performance quality of existing network services, then the call is granted. At call setup time, the user negotiates with the network to select the desired traffic characteristics.</P>
<H5 CLASS="h4"> </A>Usage Parameter Control and Network Parameter Control </H5><p>Using usage parameter control (UPC) and network parameter control (NPC), the network monitors user traffic volume and cell path validity. It monitors users' traffic parameters to ensure that they do not exceed the values negotiated at call setup time, and also monitors all connections crossing the user-network interface (UNI) or network-network interface (NNI).</P>
<p>The UPC algorithm must be capable of monitoring illegal traffic conditions, determining whether or not the confirmed parameters exceed the negotiated range limits, and must deal quickly with parameter usage violations. To deal with usage violations, the network can apply several measures, for example, discarding the cells in question or removing the connection that contains those cells.</P>
<H5 CLASS="h4"> </A>Additional Control Functions</H5><p>The following functions are used to support the actions of CAC and UPC/NPC.</P>
<P CLASS="term1"><B><B>Priority Control (PC)</B><B> </B></B></P>
<p>Users can employ the cell loss priority (CLP) bit to create traffic flows of different priorities, allowing the network to selectively discard cells with low priority if necessary to protect those with high priority.</P>
<P CLASS="term1"><B><B>Traffic Shaping (TS)</B></B></P>
<p>Alters traffic characteristics of a stream of cells on a VC or VP connection. This can be used to ensure, for example, that the traffic connection crossing the user-network interface (UNI) is compliant to the user-network traffic or to maximize bandwidth resource utilization. Examples of traffic shaping include peak cell reduction, burst length limiting, and reduction of cell delay variation by suitably spacing cells over time.</P>
<P CLASS="term1"><B><B>Network Resource Management (NRM)</B></B></P>
<p>Represents provisions made to allocate network resources to separate network traffic flows according to service characteristics.<I> </I></P>
<p></P></BODY></HTML>
