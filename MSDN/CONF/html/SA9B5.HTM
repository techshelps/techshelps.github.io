<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE Automation</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h2>OLE Automation</h2>
<h3>Introduction</H3><p>Since the introduction of Microsoft&reg; FoxPro&reg; for Windows&reg;, developers have enjoyed the ability to embed or link documents from other applications directly into FoxPro tables thanks to OLE technology. While you still have this capability with OLE, the new specification goes much, much further than that. In fact, Microsoft has publicly stated that the future of all Microsoft Windows-based products, as well as future versions of Windows itself, will be based on this technology. This session will focus on OLE Automation, showing you how to use it to incorporate the power built into other Microsoft Office products like Microsoft Word and Microsoft Excel into your own FoxPro application. </P></BODY></HTML>
