<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What's Happening?</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>What's Happening?</H3><H4> </A>_BUILDER</H4><p>FoxPro provides a system variable,<I> </I><I>_Builder</I>, where you register the name of the program that will execute when the Builders are invoked. When you call a Builder, the product looks to the contents of <I>_Builder</I> and tries to run this program. By default on installation, <I>_Builder</I> is set to BUILDER.APP and is placed in the directory where FoxPro is installed.</P>
<p>To call a different Builder program, change the value of <I>_Builder</I>:</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">_Builder = "c:\mydir\mybldr.app"</font></pre>
<H4> </A>BUILDER.APP&mdash;Duties and Architecture</H4><p>BUILDER.APP is a basic driver program which performs various "housekeeping" duties, including saving and restoring many environment settings. Its fundamental task is to find the Builder appropriate to run at the moment it is called, invoke that Builder, and then clean up and return you to the Form Designer.</P>
<H4> </A>The Registration Table</H4><p>BUILDER.APP looks to a registration table called BUILDER.DBF (and its memo file, BUILDER.FPT), which by default is installed in the \WIZARDS subdirectory. The registration table is where the Builders that ship with the product are registered and the place where you register any custom Builders you write. The basic registration approach is the same as used for registering Wizards and the structure of the Builder registration table is the same as the Wizard registration table:</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="64pt" VALIGN="TOP"><COL WIDTH="60pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P><B>Field Name</B></P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P><B>Data Type</B></P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P><B>Description</B></P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Name</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Character</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Name of the Builder </P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Descript</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Memo</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Description of the Builder </P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Bitmap</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Character</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>N/A for Builders</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Type</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Character</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>The internal call invoked by VFP</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Program</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Memo</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Any specific program or app to invoke a specific Builder</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Classlib</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Memo</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>The VCX file that contains the Builder</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Classname</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Memo</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>The class name of the Builder</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Parms</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Memo</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Parameters(s) passed to _BUILDER if necessary</P></TD>

</TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><p>Note the registration table's Data Type field which contains the word that identifies the Builder class. For the Builders that ship with FoxPro, these map to the BaseClass property of the native controls on which these Builders are designed to operate.</P>
<p>When BUILDER.APP is called, it looks first to the Class and then to the BaseClass properties of the selected control(s) on the form being designed. BUILDER.APP then looks to the Type field of the registration table to find a Builder match type. If it finds only one, it simply invokes that Builder. If it finds more than one applicable Builder, it will bring up a list offering users a choice of Builders. If no applicable Builders are found, it will state that there are no registered Builders for this type and return you to the Form Designer.</P>
<p>The registration table's Program, Classname and Classlib fields offer one way to register builders. If your specific Builder is in the form of an .APP, put the name of the .APP in the Program field and BUILDER.APP will run this application. If the Builder is a class in a class library, put the class name and class library name in their respective fields, and BUILDER.APP will create an instance of this class and show it.</P>
<H4> </A>"Builder" Property</H4><p>Another and completely different way to register a Builder is to give a subclassed control a custom property named "Builder," and register the desired Builder for this control class in this property. If the property exists and has a value, BUILDER.APP will attempt to run this program, bypassing the normal registration table process entirely.</P>
<p>Because you can add a custom property such as "Builder" only in the Class Designer, the control cannot be a native BaseClass control, but instead needs to be a class residing in a class library.</P></BODY></HTML>
