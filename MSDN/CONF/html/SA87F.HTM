<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Cost of Graphics</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>The Cost of Graphics</H2><p>Having a graphical output (like the ball demo) is very nice, but what does it cost? There are two costs: the programming effort and the CPU time required.</P>
<p>The programming effort really isn't such a big deal compared to the time it saves in having an interactive program. A proficient programmer can create an interactive tool that easily pays for its development time by saving on the time it takes when using the tool to investigate a problem.</P>
<p>But&mdash;if the tool itself uses lots of complex graphics to represent the results of some calculation, it's possible that the CPU time required to create the image may be far higher than that required to compute the parameters of the image. A good example of this might be a three-dimensional rendering of the inside view of a house. We might vary the texture of the floor covering as a parameter and have the image of the inside of the house redrawn to reflect the change. Creating the surface and rendering the new image is going to take a lot of time, so there is no way you're going to twiddle some control and see the image change rapidly before your eyes. </P>
<p>Many other graphical representations are much less demanding. Take the spectrum analyzer in TAP for example. It spends most of its time doing the FFT and very little time actually displaying the result despite the complex look of the screen image. Here, the benefits of a graphical display are obvious. The display format can be very meaningful where a list of numbers would be very tedious to interpret.</P>
<p>I'm sure most of this is preaching to the converted, but the folks I want to convince are the ones who think all this is too hard to do, so although they can see the advantages, they won't commit to doing the work. </P>
<p></P></BODY></HTML>
