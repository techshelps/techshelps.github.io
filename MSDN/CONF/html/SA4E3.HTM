<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Component Object Model</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Component Object Model</H3><p>Active Directory objects are COM objects. Active Directory programming is COM programming. In its most basic form, programmers interact with COM objects by calling one of the standard OLE procedures to obtain a pointer to an object's<B> IUnknown</B><I> </I>interface. They then call<B> QueryInterface </B>to obtain a pointer to the specific interface of interest. </P>
<p>Active Directory interfaces can all be called using this standard COM model by using traditional compiled languages such as, Microsoft C and Microsoft C/C++. Active Directory providers a "helper" function, <B>OleDsGetObject</B>, to simplify the process of obtaining the desired interface pointer from a given Active Directory object.</P>
<p><B>Example 1: Creating a User (C/C++)</B></P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">IOleDsContainer    *pContainer;
IOleDs        *pNewObject;
IOleDsContainer    *pContainer;
IOleDs        *pNewObject;
IOleDsUser        *pUser;
IOleDsUserAccountRestrictions *pAcctRestr;

//
// Bind to the known container.
//
OleDsGetObject(TEXT"@WinNT!MSFT",
IID_IOleDsContainer,
(void**)&amp;pContainer);

//
// Create the new Active Directory User object.
//
pContainer-&gt;Create(TEXT"User",
TEXT"Jane",
&amp;pNewObject);

//
// Get the IOleDsUser interface from the user object.
//
pNewObject-&gt;QueryInterface(IID_IOleDsUser, &amp;pUser);

//
// Set Jane's password.
//
pUser-&gt;AccountRestrictions(&amp;pAcctRestr);
pAcctRestr-&gt;SetPassword(TEXT"Argus");

//
// Complete the operation to create the object.
//
pUser-&gt;SetInfo();

//
// Cleanup.
//
pContainer-&gt;Release();
pNewObject-&gt;Release();
pUser-&gt;Release();
pAcctRestr-&gt;Release();</font></pre></BODY></HTML>
