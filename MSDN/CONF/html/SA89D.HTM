<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Why Instrument with SNMP ?</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Why Instrument with SNMP ?</H2><p>When implementing a network component, be it software services or a hardware device, sooner or later it becomes necessary to determine how you will manage the component. Inevitably you are faced with the question of whether or not it should be remotely managed and, if so, what network protocol should be used. Early network developers had little choice but to "roll their own" API sets and implement them remotely through some proprietary protocol encapsulated in their favorite network protocol. They would then write both the instrumentation of the controlled component (the agent) and the controlling console (the manager) and deliver these modules with the component itself. </P>
<p>As mentioned earlier, network administrators, the component developers' customers, eventually began to demand that all these proprietary management schemes work together. To have these schemes working together would enable an administrator to manage any network device, regardless of the manufacturer, from a single management console. Several management schemes have been developed to address this need, SNMP thus far being the most widely accepted.</P>
<p>The advantages of using SNMP as the management protocol for your network component include:</P>
<P><ul><li>    SNMP is a well understood and proven technology</P>
<P><li>    It is not necessary to develop management UI if you are not interested in tool development</P>
<P><li>    SNMP is easily integrated with other networking tools</P>
<P><li>    It can be easily incorporated into larger management frameworks.</P></ul>
<p>Because SNMP provides a mechanism by which management consoles can dynamically learn about new components and new component instrumentation, consoles that were written years ago are capable of managing components developed today. </P></BODY></HTML>
