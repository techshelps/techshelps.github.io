<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Gordian Knot Summary</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Gordian Knot Summary</H3><p>The separation of the user interface from data integrity reduces a very knotty problem into two parts that are easier to handle. If this cannot be done, a three-part solution is possible using ODS. The ODS option keeps an either-or situation from being forced on the mainframe and permits gradual implementation of the new architecture. The ODS option has a significant humanware development and maintenance cost. ODBC is the cheapest and fastest solution.</P>
<p>The business rules should not be left in the application. Business rules should move to the database or the ODS server. Leaving the business rules in the application will result in increasing evolutionary maintenance costs and a rapid regeneration of the knot.</P></BODY></HTML>
