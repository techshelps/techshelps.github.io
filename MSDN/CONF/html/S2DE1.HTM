<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The First Question: Stand-alone or Extension Snap-In?</TITLE> <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>



	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H1>The First Question: Stand-alone or Extension Snap-In?</H1><p>As described previously in this document, MMC supports two types of Snap-In behavior: stand-alone mode and extension mode.</P>
<p>Many of the same design considerations apply to extension Snap-Ins as they do to stand-alone Snap-Ins. The major difference is that an extension Snap-In will generally operate on some objects controlled by its parent Snap-In and should therefore follow the design decisions made by its parent. The decisions required to build an extension Snap-In are a subset of those required to build a stand-alone Snap-In. Therefore, the rest of this paper will concentrate on building a stand-alone Snap-In.</P></BODY></HTML>
