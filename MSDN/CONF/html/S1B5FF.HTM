<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing Directory Services Using Microsoft Windows NT Server: Part 1</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>



	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H1>Implementing Directory Services Using Microsoft Windows NT Server: Part 1</H1><H2>Windows NT Server Directory Services and The Enterprise Challenge</H2><p><img src="59278.gif"></P>
<p>Network planners face the challenge of designing a network that allows users and administrators to: access shared resources with a single log on and password, manage resources and accounts from a single location, and implement services that automatically update network account and security information. </P>
<h3> </A>The Windows NT Directory Services Solution</H3><p>Windows NT&reg; Server Directory Services are the solution to these challenges. The Directory Services provide:</P>
<ul><li>Single User Logon</LI><li>Universal Resource Access</LI><li>Centralized Administration</LI><li>Replicated and Partitioned Directory Database</LI><li>BackOffice Integration</LI></UL></SPAN><H3>Domains and Trust Relationships</H3><p><img src="59279.gif"></P>
<p>Before exploring Windows NT Server Directory Services further, it is necessary to introduce domains and trust relationships&mdash;the Windows NT Server features that work together to make directory services possible. </P>
<h3>Domains</H3><p>Windows&nbsp;NT Server directory services are based upon the configuration and use of Windows&nbsp;NT Server domains&mdash;logical groupings of users and computers for administrative purposes.</P>
<h3> </A>Organizing Domains</H3><p>The group of computers that make up a domain can be organized in several ways depending on the structure of the company and the needs of the users. The design could be based on an administrative model, a geographic model or some other logical or common purpose. Experienced planners think of domains in terms of administrative units. In a large company, for example, each department could create its own domain. Thus, Human Resources and the Finance department could each have their own domains.</P>
<h3> </A>Trusts</H3><p>Trust relationships provide a secure communication channel between two domains. With a trust relationship, a domain will accept user accounts created in other domains as valid accounts and allow those accounts to access to local resources.</P>
<P CLASS="nt"><B>Note:</B>   Domains and trusts are explained in detail in Sections 2 and 3.</P>
<h3> </A>The Directory Services Components and Features</H3><p><img src="59280.gif"></P>
<p>The Windows NT Server Directory Services make it possible for network planners, managers, and users to:</P>
<ul><li>Cross domain boundaries to access resources anywhere on the network</LI><li>Work in and manage the entire network environment from one location</LI><li>Integrate both Windows NT and Novell environments into a single enterprise</LI></UL></SPAN><p>Looking at each of these components and features separately will provide a more detailed picture of the Windows NT Server Directory Services environment.</P>
<h3> </A>One User, One Account</H3><p><img src="59281.gif"></P>
<p>Windows NT Server Directory Services maintain the concept of "one user, one account." Because the Windows NT environment recognizes accounts outside of the domain in which they were created, users are able to cross trusts and access resources in any domain for which they have the appropriate permissions. This is true no matter where in the network the account is located. If the network operating system could not maintain the "one user, one account" concept, duplicate accounts could have conflicting permissions.</P>
<h3> </A>The Advantages of the Single Account</H3><p>To illustrate the advantages of maintaining just one account for each user, suppose an employee from a large organization travels worldwide. The organization has multiple domains based on geographical locations. The employee can use a notebook computer to log on with only one account name no matter where the employee is located.</P>
<p>The scenario illustrated in the slide is a good example. A businesswoman whose home domain is in North America logs on while in Europe (1). In this case, the European domain controller will forward the logon request to the North American domain (2) for validation (3).</P>
<h3> </A>Account Validation</H3><p>Once the user's home domain validates the account, the user can access resources anywhere on the network where he or she has the appropriate permissions. </P>
<p>Validating accounts across domains, a process called "pass-through authentication," makes "one user, one account" possible.</P>
<h3> </A>Universal Resource Access</H3><p><img src="59282.gif"></P>
<p>Trusts in Windows NT Server Directory Services make it possible for an administrator to grant access to shared resources regardless of their location. The ability to access resources anywhere on the network is called universal resource access, and it eliminates the need for multiple network accounts and passwords.</P>
<p>For example, when a user has an account on Domain A and attempts to access a resource in Domain B (1), one of the domain controllers in Domain B contacts a domain controller in Domain A to verify that the user has a valid network account (2). If the controller in Domain A validates the user, the server with the target resource verifies that the user from Domain A either has permissions to use the resource or is a member of a group that has permissions to use the resource (3).</P>
<h3> </A>Multiple Account Administration</H3><p>Because trusts make the "one user, one account" concept possible, the user in the example above only needs to maintain a single account rather than multiple accounts.</P>
<p>Multiple accounts make it difficult to keep track of permissions. For example, when a user with one account in Domain A and another account in Domain B logs on in Domain B and attempts to access a resource in Domain B, one of the controllers in Domain B will validate the user. However, if permissions to the resource were only assigned to the account in Domain A, the user would not be allowed access to the resource because the user logged on as an account from Domain B, and permissions have not been granted to accounts from Domain B.</P>
<p>In a multiple account environment, users and administrators not only have to keep track of several accounts but multiple resource permissions and passwords as well. </P>
<h3> </A>Centralized Administration</H3><p><img src="59283.gif"></P>
<p>With directory services, a single network administrator in one location can access any trusting domain in the network. Once in a domain, the administrator can use User Manager for Domains and Server Manager to manage:</P>
<ul><li>User accounts</LI><li>Domains</LI><li>Computers within domains
<P CLASS="nt"><B>Note:</B>  When a trust has been established, the administrator of the trusted domain can not administer a trusting domain until that administrator's account is made a member of the Administrators group in the trusting domain.</P></LI></UL></SPAN><h3> </A>User Manager for Domains</H3><p>With the User Manager for Domains utility, an administrator can sit at any computer on the network that supports User Manager for Domains and manage any user account regardless of where the account is located.</P>
<h3> </A>Server Manager</H3><p>The Windows NT Server's Server Manager is an application that uses directory services to support enterprise network operations including managing servers and computers.</P>
<H4> </A>Directory services in remote domain management</H4><p>To illustrate the role of directory services in remote domain management, suppose the administrator for the London domain of a large, multi-domain network is going on vacation. The backup administrator has the flu. To ensure smooth network operation in their absence, the London administrator can use User Manager for Domains to add the Paris domain administrator to the London Administrators group. This makes it possible for the Paris administrator to manage both the Paris and London domains.</P>
<h3> </A>Directory Database Synchronization and Partitioning</H3><p><img src="59284.gif"></P>
<p>Windows NT Server Directory Services provides synchronization and partitioning of the database to ensure smooth network operation automatically.</P>
<H4> </A>Directory database synchronization</H4><p>A domain administrator creates user accounts only once, on the Primary Domain Controller (PDC). The Account information is replicated (copied) automatically to the Backup Domain Controller(s) (BDC). When a user logs on, a domain controller (either the PDC or a BDC) validates the logon, checking its copy of the directory database for the correct user account, password, and any logon restrictions. Synchronizing the database eliminates any single point of failure for users logging on to the network.</P>
<H4> </A>Partitioning the database</H4><p>In an enterprise network consisting of multiple domains, each domain will have a directory services database consisting of users, groups, and computer accounts within that domain. This capability allows the directory database to have multiple partitions within the entire network. Through multiple partitions of the database, the original large data base can be divided into smaller data bases which are easier to manage.</P>
<h3> </A>Service Manager for NetWare (DSMN)</H3><p><img src="59285.gif"></P>
<p>In a NetWare environment with multiple servers, users are required to remember:</P>
<ul><li>The name of each server to which they want to log on.</LI><li>Their account name and password for each server.</LI></UL></SPAN><p>To maintain user accounts and passwords in the Novell environment, the Supervisor must manage each server's bindery (the Novell account database) separately.</P>
<p>To simplify this, Directory Service Manager for NetWare (DSMN) provides a single network Logon for NetWare users by synchronizing accounts across all NetWare servers. Users need to remember only one account name and password for access to both Novell and Windows NT Server file, print, and application network resources.</P>
<p>DSMN allows administrators to copy NetWare user accounts to the Windows NT Server directory. This enables administrators to manage all network accounts from User Manager for Domains. </P>
<p>With DSMN, Administrators can:</P>
<ul><li>Specify which NetWare user and group accounts to centrally manage from Windows&nbsp;NT Server. 
<P CLASS="lp1">The specified accounts are moved to the Windows NT&nbsp;Server domain and copied to the directory database. These accounts become Windows&nbsp;NT Server NetWare-compatible accounts and assume the account policy of the Windows&nbsp;NT Server domain.</P></LI><li>Merge account names from multiple NetWare servers.
<P CLASS="lp1">If a user has accounts on two NetWare servers and these accounts have different user names, the administrator can merge the accounts' names when adding them to the domain. For example, DavidS and DavidSm could become DavidS, a single account.</P></LI><li>Specify which Windows&nbsp;NT Server domain accounts (user and group) to copy back to the NetWare server. This ensures that changes made to domain accounts are <I>synchronized</I> with the NetWare server.
<P CLASS="nt"><B>Note:</B>  For more information about DSMN, refer to the Integrating Windows NT Server with NetWare Networks course.</P></LI></UL></SPAN><h3> </A>BackOffice Integration</H3><p><img src="59286.gif"></P>
<p>The BackOffice applications were developed to take advantage of Windows NT Server Directory Services. </P>
<h3> </A>Services of BackOffice Single Account Management</H3><p>BackOffice single account management incorporates two separate services:</P>
<ul><li>User authentication, which guarantees the identity of users logging on to the system</LI><li>Control of permission to access network resources such as files or application data such as mail folders</LI></UL></SPAN><h3> </A>BackOffice Advantages in the Directory Services Environment</H3><p>BackOffice applications in the Windows NT Server Directory Services environment offer several advantages including:</P>
<ul><li>Windows NT Server Directory Services manages authentication for both the NOS (network operating system) and the BackOffice applications.</LI><li>Users that have been validated at logon are not required to provide a second logon to access any of the BackOffice applications. Administrators can avoid the expense and complexity of managing and synchronizing separate accounts for each application. </LI></UL></SPAN><h3> </A>BackOffice Security in the Directory Services Environment</H3><p>Because Windows NT Server Directory Services provides single-user access to network services and applications across the enterprise, BackOffice application developers can:</P>
<ul><li>Leave user authentication to the network operating system</LI><li>Avoid writing code with duplicate functionality</LI><li>Still have thorough security in their applications</LI></UL></SPAN><h3> </A>Controlling Access in BackOffice</H3><p>Because BackOffice applications have unique data access requirements, each BackOffice application:</P>
<ul><li>Controls permissions to its own data.</LI><li>Handles its own permissions.</LI></UL></SPAN><p>For example, suppose the network administrator has created a group called SQLUsers, which contains all the users that need access to SQL Server. The SQL Server administrator uses the SQL Security Manager to grant the SQLUsers group access to SQL Server. </P>
<p>When a new employee starts work, and needs access to SQL Server, the network administrator will create a new account for the user and make him or her a member of the SQLUsers group. Nothing else needs to be done.</P>
<H2> </A>Implementing Windows NT Server Directory Services</H2><p><img src="59287.gif"></P>
<p>To implement directory services, a network designer will need to perform the following tasks:</P>
<ul><li>Design and implement the appropriate Windows NT Server domain model for a given network design.</LI><li>Establish and maintain trust relationships, thereby making possible the concept of one user, one account.</LI><li>Determine the optimum number and location of servers.</LI></UL></SPAN><p>As the slide indicates, the rest of the course provides the concepts, components, and hands-on experience to prepare network planners and administrators to use Windows NT Server Directory Services to meet these challenges.</P>
<H2> </A>Section 2: Overview</H2><p><img src="59288.gif"></P>
<h3> </A>Objectives</H3><p>At the end of this section, you will be able to:</P>
<ul><li>Determine when to implement a one-way or two-way trust relationship.</LI><li>Differentiate between a trusted (accounts) domain and a trusting (resource) domain.</LI><li>Determine whether a task can be performed in a one-way trust relationship.</LI><li>Recognize the disadvantages of not using the directory services and distinguish between the different types of Windows NT accounts.</LI><li>Determine the options for logging on when a trust relationship is implemented.</LI><li>Identify which accounts and groups are available across trust relationships.</LI><li>Trace pass-through authentication in the log on process.</LI><li>Use both local and global groups in a multiple domain environment where trust relationships are established.</LI></UL></SPAN><h3> </A>Introduction to Trust Relationships</H3><p><img src="59289.gif"></P>
<p>In an environment where users and administrators are spread out across a network, resource sharing needs to be fast and simple, and network administration needs consolidation options. Toward this end, Windows NT Server Directory Services provide:</P>
<ul><li>Single log on.</LI><li>Universal resource access.</LI><li>Centralized network administration.</LI></UL></SPAN><p>Trust relationships make this possible.</P>
<h3> </A>The Function of Trust Relationships</H3><p>Trust relationships provide a secure communications channel between two domains. With a trust relationship, one domain accepts user accounts as valid accounts and allows access to local resources. This occurs even though the account does not exist in the local domain. For example, if a user has an account in Domain A, but needs to access a resource in Domain B where he doesn't have an account, a trust relationship can be established that allows resource sharing across domains. This happens through the user's single account in Domain A.</P>
<p>With trusts, the divisions between domains become invisible and allow administrators to see the network as one large organization rather than as a collection of LANs which must be managed separately. When trust relationships are properly established between domains, they allow a user to access the entire network through one user account.</P>
<p>Trust relationships move centralized administration to the enterprise level, rather than just the domain level. They simplify administration by essentially combining two domains into a single administrative unit. A user has to log on and provide a password only once to access any shared resources on the network for which the user account has been granted permissions.</P>
<H2> </A>One and Two-Way Trust Relationships</H2><p><img src="59290.gif"></P>
<p>Trust relationships can be set up as one or two-way relationships. In a one-way trust relationship, accounts in one domain can be given permission to access resources in another domain. One-way trust relationships are typically used in networks where user accounts must be centrally controlled in one domain, but resources require distributed control. For example, a company is migrating to Windows NT Server. They want centralized control over all the employee accounts, but want each department to control their own servers and workstations. To provide this, a corporate domain is created and all user accounts are placed in that domain. Each department then creates its own domain for their servers and workstations. By establishing a one-way trust relationship between the resource domains and the accounts domain, the users can be given permission to access resources in the departmental domains.</P>
<p>When the domains are joined by two one-way trusts, it is known as a two-way trust relationship. Accounts and resources are administered in each domain but can be given permission to access resources in the other domain. For example, the ABC company has two independent business units that want total control over their users, servers, and workstations. Each business unit can create its own domain with user accounts and resources. By establishing a two-way trust relationship between the domains, the two domains can have access to resources in the other domain.</P>
<h3> </A>Representing Trusts Between Domains</H3><p>When diagramming trusts and domains, trusts are always indicated with an arrow. In a one-way trust, the point or head of the arrow always points to the trusted domain, where the accounts reside, and away from the trusting domain, which usually contains shared resources. </P>
<p>In a two-way trust relationship, indicated by two arrows pointing in opposite directions, both domains contain user accounts that may access resources in the other domain. </P>
<h3> </A>Trusting vs. Trusted Domains</H3><p><img src="59291.gif"></P>
<p>In all trust relationships one domain is always the <I>trusted</I> domain while the other is the <I>trusting</I> domain.</P>
<ul><li>Trusted Domain&mdash;The key to understanding all trusts lies in the phrase "Arrows point to people you can trust." The arrows in all trust diagrams will point to the domains where accounts are kept. These domains will be known as trusted or account domains.</LI><li>Trusting Domain&mdash;The arrows will point away from the trusting domain. Resources are usually located in trusting domains which are also known as resource domains.</LI></UL></SPAN><p>The concepts of <I>trusted</I> versus <I>trusting</I> can be thought of in terms of users and resources. The domain with the resources is trusting users from a remote domain and will allow them to use the resources if the proper trust relationship has been established, and permissions are assigned.</P>
<p>If your neighbor wanted to use your VCR while you were on vacation, you would give your neighbor the key to your house, and your neighbor could enter your house and use your VCR while you were gone.</P>
<p>You have set up a one-way trust relationship with your neighbor where you trust your neighbor.</P>
<p>Your neighbor with the key (or user account database) represents the trusted domain. You represent the trusting domain with the VCR (resources). In a diagram of this arrangement, the arrow would point from you to your neighbor.</P>
<H2> </A>Planning Considerations</H2><p><img src="59292.gif"></P>
<p>Setting up trusts properly requires knowledge and planning. Before setting up a trust relationship consider the following:</P>
<ul><li>Trust relationships can be established only between Microsoft Windows&nbsp;NT Server domains.</LI><li>Determine the number of one-way trusts. For example, do you want trusted domains to also be trusting and vice versa?</LI><li>Where the users are physically or logically located is not important. It only matters where their accounts reside. As long as a user has an account in the trusted domain the user can log on from anywhere in any domain, provided that the domain is connected by a trust to the account domain. In other words, users can log on at any trusting domain as long as they log on from the trusted account domain.</LI></UL></SPAN><H2> </A>Group Strategies Across Trusts</H2><p><img src="59293.gif"></P>
<p>Using local and global groups across trusts is one way to make your network easier to administer and maintain. Keep in mind that your group strategy can be the same regardless of the domain model you implement.</P>
<h3> </A>The Role of Groups and Trusts</H3><p>When there are trust relationships between domains, global groups in a trusted domain can become members of a local group in a trusting domain. The trusting domain's local group can then be assigned permissions to resources, or administrative tasks, in the trusting domain.</P>
<p>The effect of this strategy is that the members of the global group from the trusted domain have the permissions that are granted to the local group in the trusting domain. The key is having global groups from a trusted domain join a local group in a trusting domain.</P>
<p>In an environment where multiple domains are connected by trust relationships, the primary group strategy is the same as that of a single domain: putting Users into Global Groups and Global Groups into Local Groups. However, across trust relationships, the global groups are defined in the trusted domain, and the local groups exist in all domains. The appropriate use of trust relationships, and global and local groups, can easily centralize administration in a multiple domain environment.</P>
<H2> </A>The Key to Enterprise Management</H2><p><img src="59294.gif"></P>
<p>Using Windows NT Server Directory Services to manage large networks can be summed up in the following sentence: "Global accounts go into global groups, which go into local groups, which get permissions." </P>
<p>It explains how to implement a directory services structure which will manage any Windows NT network involving more than a single domain structure. It can be abbreviated with the letters A, G, L, and P.</P>
<h3> </A>A. G. L. P.</H3><p>The four letters stand for:</P>
<ul><li>Accounts&mdash;global accounts as opposed to local accounts</LI><li>Global groups</LI><li>Local groups</LI><li>Permissions</LI></UL></SPAN><p>When an administrator coordinates the four components correctly, they make it possible to manage even the largest enterprise network from a single computer.</P>
<p>To clarify how this works, it is necessary to look at each component.</P>
<H4> </A>A&mdash;Accounts</H4><p><img src="59295.gif"></P>
<p>In Windows NT Server Directory Services, the network management process begins with global accounts. Global accounts can cross trusts, as opposed to local accounts which can function only in the domain in which they were created.</P>
<p>Because global accounts can cross trusts, they can move from domain to domain to access resources in any domain on the network. </P>
<p>Suppose, for example, a network consisted of two domains: Domain A and Domain B. The administrator should create accounts that can access resources in both domains, unless there is a compelling reason not to. Therefore, the administrator should create global accounts. Local accounts, on the other hand, would only be able to access resources in the domain in which they were created. A local account created in Domain B, for example, would only be able to access resources in Domain B. This local account would not be able to cross a trust to access resources in Domain A.</P>
<p>Using local accounts leads to a multiple-account environment and all the problems involved in having to keep track of multiple accounts, duplicate logons, separate permissions, and several passwords.</P>
<p>So, in a multi-domain environment, global accounts are essential to efficient account management. Yet, once global accounts have been created in one domain, the question remains, how do global accounts actually get across trusts form their home domain to a remote resource domain?</P>
<H4> </A>G&mdash;Global Groups</H4><p><img src="59296.gif"></P>
<p>Global accounts can move from domain to domain on their own, but it is much more efficient to include them in groups which can also move from domain to domain. This is because groups are easier to manage than separate individuals. </P>
<p>If, for example, 35 users need to use a resource in a remote domain, it is far easier for the administrator to include them all in a global group and only have the one group to manage than it would be to manage 35 separate users all trying to use same resource. </P>
<p>Therefore, to get accounts from one domain to the next, the administrator creates global accounts and puts them in a global group. This way, accounts can go from one domain to the next in a neat, organized manner. </P>
<p>But one of the problems with global groups is that they cannot be granted permissions to use resources. Therefore, the question remains, once the members of a global group get to a remote domain, how can they get permissions to use resources in that remote domain?</P>
<H4> </A>L&mdash;Local Groups</H4><p><img src="59297.gif"></P>
<p>Local groups can be granted permissions to use resources in the domain in which they were created. When a local group is assigned to use a resource, the permission to use that resource automatically extends to everyone in the local group.</P>
<p>For example, Office Support is a local group consisting of Margie Davis, Pete Thomas, Diane Lennon, and Ed Barret. Rather than give each of these accounts separate permissions to access information in a database, the administrator added them to the local group, Office Support, and gave Office Support access to the database. By giving the local group access to the database, the administrator automatically gave Margie Davis, Pete Thomas, Diane Lennon, and Ed Barret access to the database.</P>
<p>Not only can individual accounts be assigned to local groups, but global groups can also be assigned to local groups. This is the first half of the real key to managing large networks. The second half of the key involves permissions, and it will be described on the next page.</P>
<p>To answer the question from the previous page, then, the administrator would assign the global group to a local group which had access to the resource in the remote domain. Once the global group becomes a member of the local group, all the members of the global group automatically have access to the resource. This means that since all members of the local group have access to the resource, all members of the global group will automatically have access to the resource as well. </P>
<p>However, the question remains, what kind of access will members of the global group have in the resource, and how can that access be determined? If the resource is a database, for example, will they only be able to read the information or will they be able to change or even delete it?</P>
<H4> </A>P&mdash;Permissions</H4><p><img src="59298.gif"></P>
<p>Permissions can be assigned to local groups, and this will automatically include all members of the local group. Permissions can not, however, be granted to global groups. Therefore, to grant permissions to users in global groups, the global groups must be added to local groups.</P>
<p>Once global groups have been added to local groups, any permissions that the local group has will automatically be given to any global group assigned to it, and those permissions will extend to members of the global group.</P>
<p>If a global group were made a part of the local group that has access to a resource, all the members of the global group would automatically have the same access to the resource as the members of the local group. This is the second half of the key to managing large networks.</P>
<p>In a well-planned, efficient, enterprise network that uses the strategy of putting global groups into local groups and granting permissions to local groups, an administrator only has to grant permissions to one component, the local group. In this way, the administrator automatically grants those permissions to:</P>
<ul><li>Members of the local group</LI><li>Members of the global group assigned to the local group</LI></UL></SPAN><p>Considering the potential numbers of accounts in local and global groups, an administrator only has to grant permissions once, to a local group, in order to grant permissions to tens of thousands of users from every domain in the network.</P>
<p>Therefore, by combining four Windows NT components (global Accounts, Global groups, Local groups, Permissions&mdash;A,G,L,P), an administrator can simplify account and resource management in even the largest network.</P>
<h3> </A>Planning a Group Strategy</H3><p><img src="59299.gif"></P>
<p>In a multiple domain environment connected by trust relationships, use the following guidelines when implementing groups:</P>
<ul><li>Determine what you need to accomplish. Is it one of the following?

<UL><LI CLASS="ULI2">A network responsibility (assigning administrative tasks, creating users)</LI><LI CLASS="ULI2">Assigning permissions to resources</LI></UL></LI><li>Use built-in global and local groups where possible. Determine whether there is an existing group that can perform the task.</LI><li>On the primary domain controller of any trusted domain:

<UL><LI CLASS="ULI2">Create any new user accounts and global groups that are necessary</LI><LI CLASS="ULI2">Assign the appropriate users to existing or newly created global groups for domain-wide and multidomain access</LI></UL></LI><li>On the Windows&nbsp;NT Server-based computers in your domain or trusting domain:

<UL><LI CLASS="ULI2">Create any new local groups where needed</LI><LI CLASS="ULI2">Add global groups from trusted domains to the appropriate local groups</LI><LI CLASS="ULI2">Assign the local group to user rights and resource permissions</LI></UL></LI></UL></SPAN><p>After you have a group strategy, you are ready to implement it.</P>
<H2> </A>The Effects of Not Using Directory Services</H2><p><img src="59300.gif"></P>
<p>In an enterprise network without directory services trusts, domains would exist as independent network entities unable to communicate easily with each other. Each domain would have to be managed separately. This affects not only network traffic and resource access, but the type of accounts the network can use as well.</P>
<h3> </A>Account Types and Trusts</H3><p>An environment in which domains are unconnected by trusts would require separate network accounts for each domain. These accounts would be able to access resources only in their own domains. Such accounts, called local accounts, do exist in Windows NT Server. </P>
<p>However, in an environment where it is essential to share resources across domains, Windows NT provides another more versatile type of user account called a global account.</P>
<h3> </A>Global Accounts</H3><p>In the Windows NT Server environment, global accounts can cross trusts to access resources in different domains. Therefore, global accounts are essential to the concept of "one user, one account." Global accounts are the default account type when creating new users on a domain controller.</P>
<h3> </A>Local Accounts</H3><p>Local accounts are limited accounts that only have access to resources in the domain in which they were created. They enable users from an untrusted domain to access resources in the local account's domain. For example, a user in Domain A needs access to resources in Domain B and there is no trust relationship between the two domains. The Domain B administrator creates a new user, duplicating as much of the user's account information from Domain A as possible. The administrator then specifies that this new user's account is a local account type. This allows the user to access the resources in Domain B.</P>
<h3> </A>Creating and Using Local Accounts</H3><p><img src="59301.gif"></P>
<p>Local accounts are created the same way global (regular) accounts are. Local accounts, however, are not default accounts. As illustrated in the slide, the administrator must make a choice to designate an account as local.</P>
<h3> </A>Special Uses for Local Accounts</H3><p>Despite the restrictions, local accounts provide functions which can be valuable in the following situations:</P>
<ul><li>A user who has an account in an untrusted domain needs access to resources in a remote domain.</LI><li>A user can access resources on a Windows NT Server domain from a network not participating in trusts, such as Microsoft LAN Manager.</LI></UL></SPAN><h3> </A>Local Accounts and Directory Services</H3><p>While local accounts clearly have their place, they are not part of directory services. There are two primary reasons for this:</P>
<ul><li>Local accounts cannot cross trusts.</LI><li>Local accounts require their own individual passwords.
<P CLASS="lp1">When a user changes the password in their home domain, the user will also have to change passwords in every domain where he or she has a local account. If users don't do this, they will be prompted for a password when they try to access a resource where they have a local account.</P></LI></UL></SPAN><H2> </A>Establishing Trust Relationships</H2><p><img src="59302.gif"></P>
<p>There are two keys to establishing one and two-way trust relationships:</P>
<ul><li>One domain must allow another domain to access its user accounts.</LI><li>The second domain must confirm that permission has been granted to access the first domain.</LI></UL></SPAN><p>Once trusts relationships have been established between domains, permissions can be granted across trusts.</P>
<P CLASS="nt"><B>Important:</B>  The trust relationship will not be complete until both domains have done their part to establish the trust relationship. The trust may be initiated from either domain.</P>
<h3> </A>Setting Up a One-Way Trust</H3><p><img src="59303.gif"></P>
<p>To set up a one-way trust relationship, start User Manager for Domains, and then, from the Policies menu, choose Trust Relationships. There are two sections in the Trust Relationships dialog box:</P>
<ul><li>The Trusted Domains box is completed by the trusting domain. This section specifies "what domain do I trust," that is, "who is my trusted domain."</LI><li>The Permitted to Trust this Domain box is completed by the trusted domain. It specifies the names of the trusting domains, that is, "who is permitted to trust me."</LI></UL></SPAN><p>The order in which trusts are established is not critical. However, it is better to establish the Permitted to Trust this Domain relationship first, and then establish the Trusted Domains relationship. This way, the new trust relationship takes effect immediately. If the Trusted Domains relationship is established before the Permitted to Trust this Domain relationship, it can take up to 15 minutes for the trust relationship to take effect.</P>
<p>Below is a recommended sequence that ensures that the administrator from the trusting domain receives a verification of a successfully established trust relationship:</P>
<OL>1.    The administrator in a trusted (account) domain initiates a trust by adding the name of a trusting (resource) domain in the Permitted to Trust this Domain box.</LI><LI CLASS="OLI1">2.    The administrator in the trusting domain completes the trust by adding the name of the trusted (account) domain in the Trusted Domains box. </LI></OL></SPAN><h3> </A>Setting Up a Two-Way Trust</H3><p><img src="59304.gif"></P>
<p>Setting up a two-way trust relationships is very much like setting up one-way trust relationships.</P>
<OL>Establish a one-way trust.</LI><LI CLASS="OLI1">Set up another one-way trust, but reverse the roles of trusted and permitted to trust.
<P CLASS="lp1">When a two-way trust is established, the same domain name appears in both the Trusted Domains and the Permitted to Trust this Domain boxes.</P></LI></OL></SPAN><h3> </A>Passwords</H3><p>The administrator in the trusted (account) domain may provide a password as part of implementing the trust. The administrator in the trusting (resource) domain must enter this password when it is time for the trusting domain to complete the trust. That is the only time the trusting domain administrator needs to enter the password.</P>
<p>This password is another form of security. The trusted domain administrator uses the password to control which domains will be allowed to participate in trust relationships.</P>
<P CLASS="nt"><B>Note:</B>  Turning a computer off will not affect trusts. As long as there is one domain controller running in the trusted domain the trust will remain in effect. If all domain controllers are off, starting one will reestablish the trust.</P>
<h3> </A>Granting Permissions Across Trusts</H3><p><img src="59305.gif"></P>
<p>Once a trust has been established, an administrator can grant permissions across the trust. Permissions can be set at the time a user or a group is added to a domain, or permissions can be modified at a later time.</P>
<p>Permissions are added and modified through File Manager as described in previous Windows NT Server courses.</P>
<h3> </A>Pass-Through Authentication</H3><p><img src="59306.gif"></P>
<p>Pass-through authentication makes it possible for users to log on to computers or domains in which they have no account. With pass-through authentication, a user with an account on one domain can access the entire network&mdash;including all domains that trust the user's account domain. Once logged on, the user is known on the network as <I>DomainName</I>\<I>Username</I>, where dominate is the domain that contains the user's account and authenticates the logon request. For example, in a large network consisting of several domains tied together by trust relationships, a user can log on at a computer in Domain B and be verified by the user account database in Domain A.</P>
<p>Pass-through authentication can occur during either of the following instances:</P>
<ul><li>At initial logon when a user is logging on to a trusted domain.</LI><li>When connecting to a resource in a trusting domain.</LI></UL></SPAN><p>The trusted domain logon process is done in the following sequence:</P>
<OL>The Windows&nbsp;NT computer starts. When its Net Logon service starts, it locates a Windows NT Server domain controller in its domain (Domain B).</LI><LI CLASS="OLI1">User1 attempts to log on at a computer in Domain B with a user account from Domain A by changing the From entry in the log on dialog box to Domain A.</LI><LI CLASS="OLI1">The Windows&nbsp;NT Server domain controller in Domain B can't authenticate the request because the request is for a Domain A user account.</LI><LI CLASS="OLI1">The authentication request is passed through the trust to a Windows&nbsp;NT&nbsp;Server domain controller in Domain A. This Windows&nbsp;NT Server domain controller checks Domain A's account database for the existence of User1's account and for correct password information.</LI><LI CLASS="OLI1">The domain controller in Domain A authenticates User1's request and passes SID (security ID) and group information about User1 back to the domain controller in Domain B. The domain controller in Domain B then passes the information to User1's Windows&nbsp;NT-based computer and completes the logon process.</LI></OL></SPAN><h3> </A>Non-transitive and Broken Trusts</H3><p><img src="59307.gif"></P>
<p>Two types of problems can interfere with trust functions in an enterprise system:</P>
<ul><li>The non-transitive nature of trusts</LI><li>Broken trusts</LI></UL></SPAN><h3> </A>Trusts are Non-transitive</H3><p>Windows NT trust relationships are non-transitive meaning permissions between two domains cannot be passed through to a third domain. For example, if the Research domain trusts the Production domain, and the Production domain trusts the Marketing domain, then the Research domain does not automatically trust the Marketing domain.</P>
<p>A user with an account in the Marketing domain who attempts to log on while physically located in the Research domain will not be authenticated because pass-through authentication will not occur between Research and Marketing. Marketing and Research have to set up their own trust relationship before pass-through authentication can occur between them.</P>
<h3> </A>Broken Trusts</H3><p>A trust can be successfully implemented, function correctly for a period of time, and then fail or brake. A failed or broken trust is rare, but it could be caused by the following:</P>
<ul><li>Renaming one of the domains in the trust</LI></UL></SPAN><H2> </A>Trust Relationship Issues</H2><p><img src="59308.gif"></P>
<p>When creating, maintaining, and using trust relationships, there are a number of issues that can inhibit proper use of the trust. Following is a list of common trust relationship issues and possible resolutions:</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Issue</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Possible resolution</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Cannot establish a trust relationship.</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Verify that the primary domain controllers in each domain are running.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Cannot verify the trust relationship.</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>The trusted domain must permit the trusting domain before the trusting domain can attempt to establish the trust relationship. </P>
<P>Verify that no session exists with the primary domain controller.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>The trust relationship is broken.</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>If a trust relationship is broken, trusted accounts will not be available for use anymore. Re-establish the trust relationship.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Cannot re-establish a broken trust.</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Verify that the primary domain controllers in each domain are running. </P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Cannot use trusted accounts.</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>The trust relationship may have been established in the wrong direction. Break the existing relationship, and have the trusted domain permit the trusting domain, and the trusting domain to trust the trusted domain.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Cannot administer another domain.</P></TD>

<TD COLSPAN="2" VALIGN="TOP"><P>Verify that the trusted domain's Domain Admins group is added to the local Administrators group.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Access is denied when using trusted accounts.</P></TD>

<TD COLSPAN="2" VALIGN="TOP"><P>Check to see if the same account name exists in both domains. In a trust relationship, each account should only appear in one domain, the trusted domain or the local domain, but not both.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>Can access other domain resources when using a local account.</P></TD>

<TD COLSPAN="2" VALIGN="TOP"><P>Check if the same account name exists in both domains. In a trust relationship, each account should only appear in one domain, the trusted domain or the local domain, but not both.</P></TD>

</TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><p></P></BODY></HTML>
