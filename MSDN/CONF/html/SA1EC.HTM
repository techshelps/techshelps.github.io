<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Microsoft Access Basic to Send Mail Messages</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Using Microsoft&nbsp;Access Basic to Send Mail Messages</H3><p>Using the different methods above, you allow Microsoft&nbsp;Access to set up the message, package up the attachment and call the MAPI interface to send out the message. Extending this functionality requires the use of the Microsoft Windows operating system API capabilities in Microsoft&nbsp;Access. There are calls that you make to MAPI, passing in informational structures, to initiate the mail process. </P>
<p>There are three important structures that you'll be using to send and receive messages. These are:</P>
<P><B>w</B>    MAPIMessage </P>
<P><B>w</B>    MAPIRecip</P>
<P><B>w</B>    MAPIFile</P>
<p>These are outlined next.</P>
<H4> </A>The MAPIMessage Structure</H4><p>When you create a message, you fill out a structure that will be passed to the MAPI routines. This structure defines the different aspects of the mail message, what it contains and how it is handled. </P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">Type MAPIMessage
    Reserved As Long
    Subject As String
    NoteText As String
    MessageType As String
    DateReceived As String
    ConversationID As String
    Flags As Long
    RecipCount As Long
    FileCount As Long
End Type</font></pre>
<p>The MAPI message structure defines more than just the visible components of the message. It also provides information about the MessageType and the number of recipients and attachments, indicated by FileCount.</P>
<H5 CLASS="h4"> </A>Message Types</H5><p>MessageTypes are a means of identifying classes of messages. Message types are made up of three distinct portions. The format of a message class can be seen with this example Schedule Plus meeting request message:</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">IPM.Microsoft Schedule.MtgReq</font></pre>
<p>This message class is registered in your MSMAIL.INI file, identifying it to the MSMail client. The client software then knows how to work with this message class, and that it is to be treated differently from other message classes on your system. </P>
<p>The prefix, the first three characters of the message class, can be one of the following types:</P>
<P><B>w</B>    Inter-Personal Messages (IPM) - these messages are the messages that show up in the current MSMail 3.x client software. These messages are the typical messages that include schedule plus messages, mail messages created with the MSMail 3.x client, etc. </P>
<P><B>w</B>    Inter-Process Communication (IPC) - these messages are designed to be sent from one process to another. An example of this might be a message created by your Microsoft&nbsp;Access system that updates another Microsoft&nbsp;Access system. The update can be sent as an IPC message and retrieved by the remote system. IPC messages do not show up in the MSMail 3.x client. You have to retrieve IPC messages by message class.</P>
<p>It's important to understand that both message types are delivered using the MAPI subsystem. The prefix merely specifies how the message will be managed by the recipient's system. </P>
<p>When you create a message class, use the second section, "Microsoft Schedule" above, to indicate the broad classification of the type of message. For example, if you're creating a system to send Financial Reports and there are several different types of messages, a message class might be:</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">IPM.Financial Reports.Updates
IPM.Financial Reports.Stocks
IPM.Financial Reports.Bonds
IPM.Financial Reports.Annual</font></pre>
<p>The third section should indicate the specific type of message as it relates to the general classification. In other words, the final portion of the message class is used to specify the most detailed description of the message contents or purpose. </P>
<H4> </A>The MAPIRecip Structure</H4><p>When you establish a message, you must indicate where the message is headed. You indicate the intended recipients of the message by filling out the MAPIRecip structure. </P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">Type MAPIRecip
    Reserved As Long
    RecipClass As Long
    Name As String
    Address As String
    EIDSize As Long
    EntryID As String
End Type</font></pre>
<p>All recipients are defined in this structure whether they be primary, CC or BCC recipients. You indicate the type of recipient by setting up the RecipClass property. The property has the following values:</P>
<P CLASS="ttl"><B>MAPIRecip.RecipClass Settings</B></P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="68pt" VALIGN="TOP"><COL WIDTH="296pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P><B>Setting</B></P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P><B>Description</B></P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>MAPI_ORIG</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>This setting, a value of 0, specifies the recipient as the originator. You'll refer to recipients of this type when you are reading messages that have been received at your workstation.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>MAPI_TO</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>This setting, a value of 1, specifies that this recipient is a primary, non CC or BCC recipient.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>MAPI_CC</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>This setting has a value of 2 and specifies that the recipient is a carbon copy, or CC, recipient for the message.</P></TD>

</TR><TR><TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>MAPI_BCC</P></TD>

<TD VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica" SIZE="2"><P>This setting's value is 3. It sets up the recipient as a blind carbon copy, or BCC, recipient of the message.</P></TD>

</TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><p>You'll be passing an array of the MAPIRecip structure type to the MAPI layer when you send a message. Set the total number of recipients in the MAPIMessage structure RecipCount property, telling the MAPI interface how many instances of the MAPIRecip structure will be forthcoming. </P>
<H4> </A>The MAPIFile Structure</H4><p>When you attach files to a mail message, you provide information about the file in the MAPIFile structure. This structure includes information about the location of the file, the type of file, etc. In addition, it includes information about where in the message the file will be located.</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">Type MAPIFile
    Reserved As Long
    Flags As Long
    Position As Long
    PathName As String
    FileName As String
    FileType As String
End Type</font></pre>
<p>An important note here is that you must have at least one character in your message before you can successfully attach a file to the message. If you're only sending the attachment, be sure to set the NoteText to at least a space, " " prior to attaching your file. </P>
<p>You add one MAPIFile structure for each item you are attaching. In the MAPIMessage structure, you define how many attachments are to be included by incrementing the FileCount property. </P></BODY></HTML>
