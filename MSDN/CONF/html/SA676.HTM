<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Alternate Sessions</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Alternate Sessions</H3><p>Tuesday's alternate sessions cover:</P>
<UL><LI><I>Developing Distributed Applications, Part 1:</I> This session will show you how to build distributed applications using Viper. We will demonstrate Viper mechanisms with easy-to-understand Visual Basic components. (Part 2 of this discussion will be held at 3:15 today.)</LI><LI><I>Windows NT Networking Structure and APIs from a UNIX Perspective:</I> Come hear about Windows NT domain and workgroup models, protocols, APIs (such as RPC, sockets, NetBIOS, mail slots, named pipes, and more), and network security.</LI><LI><I>SNA - Host Connectivity:</I> You can use the host connectivity and services provided by the Microsoft&reg; SNA Server for more than terminal emulation. Learn how to access, integrate, and publish host data to your desktop and server applications.</LI><LI><I>COM/DCOM from a CORBA Point of View:</I> This session provides a comparative discussion of COM from a CORBA perspective.</LI><LI><I>Developing Distributed Applications, Part 2:</I> This session expands on Part 1 to show how to build Internet/intranet applications, and explains how to make your distributed applications scalable.</LI><LI><I>New Technology for Mainframe Application Technology:</I> This session will show you how to use a new technology called Cedar to access mainframe applications from standard Viper clients.  We will demonstrate how to specify interfaces and how a Visual Basic client can easily make use of the Viper/Cedar combination to transparently invoke a mainframe application program.<I> </I></LI><LI>Programming SMS 1.2: This session looks at the Microsoft&reg; Systems Management Server(SMS) product. In this session you'll learn how to leverage the capabilities and functions of SMS. We'll cover the SMS SDK and information on integrating your applications into SMS. </LI></UL></BODY></HTML>
