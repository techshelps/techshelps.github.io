<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing the Security Provider</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Initializing the Security Provider</H2><p>This section describes how applications-level protocols initialize and use the Security Support Provider Interface. The section describes various stages of a secure network connection setup. The stages include:</P>
<UL><LI>Initializing the SSPI</LI><LI>Establishing an authenticated connection</LI><LI>Ensuring communication integrity during message exchange</LI><LI>"Security quality of service" to service a client request</LI></UL><p>These stages are described in the following sections.</P>
<H3> </A>Initializing the SSPI</H3><p>Both the client and server use the same sequence of operations to initialize the security provider and select the appropriate security package.</P>
<p>Initializing the security interface involves the following steps:</P>
<UL><LI>Load the security provider DLL</LI><LI>Get a pointer to the provider initialization function</LI><LI>Use the initialization function to get a reference to the provider's security function table</LI><LI>Get specific information about the security package, such as the maximum token size</LI></UL><p>The security function table contains the SSPI entry points for the security package. The function table is used to invoke the calls implemented by the security package.</P></BODY></HTML>
