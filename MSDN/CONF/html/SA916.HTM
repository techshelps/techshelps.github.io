<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Performing the Mail Merge</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Performing the Mail Merge</H3><p>After users select the form letter and its recipients, they click on the OK button to retrieve the records specified and to merge them with the Word document. The code that handles this is in the cmdOK_Click subroutine.</P>
<p>This subroutine uses the AdvancedFilter method to retrieve the specified records. This code is nearly identical to that used in the previous section, except that it requires a CriteriaRange argument. which contains the criteria for selecting records. </P>
<p>BulkMail's criteria range is a single column whose first entry indicates the selected option button: Last Names, Companies, or States. The remaining entries indicate the items that users selected from the list box. The AdvancedFilter method retrieves records that match these criteria and copies them into the CopyToRange.</P>
<p>After selecting the recipients' records, BulkMail uses OLE automation to perform a mail merge in Word. Although Word normally lets you use a Microsoft Excel database as the data source for a mail merge, it doesn't let you do this under OLE automation. Why? Because Word itself uses DDE to communicate with Microsoft Excel during such a mail merge, and you can't DDE Microsoft Excel from inside an OLE automation operation controlled by Microsoft Excel. </P>
<p>As a workaround, BulkMail creates a temporary Word document (called TMP.DOC), paste the selected records from Microsoft Excel into this document, performs the mail merge, and then deletes the temporary file.</P>
<p>The code for cmdOK_Click follows. The WordBasic code is non-bold so it's easy to spot.</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">Sub cmdOK_Click()
On Error GoTo OKError

    Dim i As Integer
    Dim iRow As Integer
    Dim strDocDirectory As String
    Dim strFormLetter As String
    Dim objAddresses As Object

'Read selected names from list box and use these as
'criteria for AdvancedFilter method.
    iRow = 2
    objDatabase.Cells(iRow, 12).Value = strField
    With objCriteriaList
        For i = 1 To .ListCount
            If .Selected(i) Then
                iRow = iRow + 1
                objDatabase.Cells(iRow, 12).Value = .List(i)
            End If
       Next i
    End With
    
'Run advanced filter.
    With objDatabase
        .Range("Database").AdvancedFilter Action:=xlFilterCopy, _<BR>          CriteriaRange:=.Cells(2, 12).CurrentRegion, _<BR>          CopyToRange:=.Cells(2, 14), Unique:=False
        
'Set object variable to extracted data range and trim off
'column headings.
        Set objAddresses = .Cells(2, 14).CurrentRegion
        objAddresses.Rows(1).Delete

'Clear criteria range.
        .Cells(2, 12).CurrentRegion.ClearContents
    End With
    
'Do mail merge with extracted data.
'Get path and name of mail merge letter.
    strDocDirectory = objDocDirectory.Caption
    strFormLetter = objDocList.Text
    
'Copy extracted data to clipboard.
    objAddresses.Copy
    
    Set objWord = CreateObject("Word.Basic")
    With objWord
        .ScreenUpdating 0
        
'Create temporary document and paste mail merge data in it.
        .FileNew Template:="Normal"
        .EditPaste
        .FileSaveAs Name:=strDocDirectory &amp; "tmp.doc"
        
'Open the mail merge letter.
        .FileOpen Name:=strDocDirectory &amp; strFormLetter
        
'Do mail merge.
        .MailMergeOpenDataSource Name:=strDocDirectory &amp; "tmp.doc"
        .MailMerge CheckErrors:=2, Destination:=0, MergeRecords:=0, Suppression:=0, MailMerge:=True

'Close the mail merge letter.
        .Activate strFormLetter
        .FileClose 2

'Close the temporary document.
        .Activate "tmp.doc"
        .FileClose 2
        .ScreenUpdating 1
    End With

'Delete the temporary document.
    Kill strDocDirectory &amp; "tmp.doc"
    
'Clear the range containing the extracted data.
    Application.CutCopyMode = False
    objAddresses.ClearContents
    Set objAddresses = Nothing
   
CleanUp:
    ClearObjectVariables
    Exit Sub
       
OKError:
    If Err &lt;&gt; 0 Then
        GlobalErrorMsg "cmdOK_Click", Err
        Resume CleanUp
    End If
End Sub</font></pre>
<p></P></BODY></HTML>
