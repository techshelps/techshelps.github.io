<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Context Menus</TITLE> <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>



	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H1>Context Menus</H1><p>MMC provides structure on the context menus considerably beyond that found in the shell. For any given node in the tree there are three types of actions provided on the context menus:</P>
<P>Actions provided by the console itself; such as changing views, turning on or off the tree view, changing the window state, etc.</P>
<P>Actions provided by the primary Snap-In; these are actions provided by the Snap-In that created the node</P>
<P>Actions provided by extension Snap-Ins; any Snap-In that extends the particular node type is able to place actions on its context menu</P>
<p>In addition to specifying who can place items on the context menus, the console specifies where these items can be placed. The following picture illustrates this:</P>
<P><img src="14611.gif"></P>
<p>This picture shows only the "Create New" menu, but the same organization applies to the "Tasks" menu.</P>
<p>There are a few rules for Snap-Ins that extend the context menu:</P>
<P>No Snap-In may add a separator; the separators indicate the different areas for items to be added.</P>
<P>Snap-Ins may add cascading menu items on the <B>Create New</B> and <B>Tasks</B> menus, but not on the first context menu.</P>
<P>Items appear in the order that they are loaded; it is not possible for a Snap-In to push its items to the top of the list, nor for a user to rearrange them.</P>
<p>At this point, the areas of the menu have been defined, but no guidelines have been given as to what goes into those areas. The <B>Create New</B> menu is intended to be filled with any new object or action that can be taken on an object. For instance, if a node in the tree knows how to create a new folder then that would appear in the <B>Create New</B> menu.</P>
<p>The other special section of the context menu is the <B>Tasks </B>menu. The tasks in this menu are in many ways similar to those exposed on the taskpads (described later), but the major difference is that taskpad tasks may not take a particular selection context, whereas context menu tasks can. In the <B>Tasks</B> menu your Snap-In should place any actions which do not create new objects. This should include any wizards, etc. which are appropriate to the currently selected object, even if those wizards actually end up taking the user to a different object.</P>
<p>A couple of the most important actions, and properties, should be placed on the first level of the context menu as well as in the <B>Create</B> <B>New</B> or <B>Tasks</B> submenus. The decision as to which actions to promote to this first level is made by the Snap-In designer. Only the Snap-In which owns the currently selected node may place items on this first level of context menu; extensions to the current Snap-In may not do so.</P></BODY></HTML>
