<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Objects</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Objects</H2><p>The base unit we will be working with is called an <I>object</I>. In real terms, an object can be anything. For example, a computer is an object. So is a house, a car, a telephone, a candle, you name it.</P>
<p>Sometimes an object is a collection of other objects. For example, a computer may be an object, but it is made up of a keyboard, processor, disk drives, etc.&mdash; each of which is an independent object as well.</P>
<p>The common denominator of all objects is that they know everything they need to know to do what they do. For example, a car has everything it needs to do what it has to do. For example, the steering mechanism accepts information from the driver and the car knows how to interpret the drivers actions into the movement of the car. The shocks adjust to the input of the road, the engine drives the wheels, etc.</P>
<p>Objects used in software development are more abstract than the examples presented here. For example, we can define an object called <I>customer</I> in which we define what the object contains and does. Another object used in OOP would be an object used in a form (called a control). Typical examples of these objects would be push buttons, radio buttons, text boxes (GET fields), and more.</P>
<p>We'll look at the customer and push button objects some more as we go through each topic in our discussion of OOP.</P></BODY></HTML>
