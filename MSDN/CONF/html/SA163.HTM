<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Server Connectivity Reusable Code: VBODBC</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Server Connectivity Reusable Code: VBODBC</H3><p>VBODBC is a Visual Basic library that provides an easy method of accessing data from an ODBC data source. It has the following characteristics:</P>
<P><ul><li>    Maintains all database handles internally</P>
<P><li>    Supports asynchronous query execution (if the driver supports it), so the user can perform tasks in other applications while the server is processing</P>
<P><li>    A global error buffer, VBODBC_LastErr, containing detailed information regarding the last ODBC error</P>
<P><li>    Supports only one open database and one open SQL statement per client per application at a time</P>
<P><li>    Has been tested only with SQL Server and Microsoft&nbsp;Access</P>
<P><li>    It also includes all ODBC constant and function declarations</P></ul>
<H4> </A>Files</H4><P>1.    VBODBC.BAS Visual Basic module</P>
<P>2.    VBODBC1.FRM Visual Basic logon form </P>
<P>3.    VBODBC2.FRM Visual Basic query executing form </P>
<H4> </A>Function APIs</H4><P>1.    VBODBC_OpenDatabaseDialog() - Establishes an ODBC database connection, prompting the user for connection information.</P>
<P>2.    VBODBC_OpenSqlStmt() - Executes a SQL statement.</P>
<P>3.    VBODBC_GetNextRow() - Retrieves another row of the SQL statement's result set. The row is retrieved into a variant array parameter, with each element corresponding to the equivalent column number. Element 0 contains all column values separated by tabs.</P>
<P>4.    VBODBC_CloseSqlStmt() - Closes the SQL statement.</P>
<P>5.    VBODBC_CloseDatabase() - Closes the database connection.</P>
<P><img src="40296.gif"></P>
<P>VBODBC Function Flow Chart</P>
<H4> </A>Instructions</H4><P>1.    Add VBODBC.BAS, VBODBC1.FRM, VBODBC2.FRM to your project.</P>
<P>2.    Verify that you have a proper ODBC data source configured.</P>
<P>3.    Follow the function flowchart within your code. Note that only one SQL statement and one database connection can be active at a time, so that you don't have to maintain any handles.</P>
<P>4.    Inspect the global structure VBODBC_LastErr if you encounter an error.</P>
<P>5.    Inspect the global structure VBODBC_ColDesc for a description of the last SQL statements columns.</P></BODY></HTML>
