<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADD OBJECT vs. CREATEOBJECT()</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>ADD OBJECT vs. CREATEOBJECT()</H3><p>There is a very important difference between ADD OBJECT at the class template and CREATEOBJECT() for a member declared as a property at the class template level. The rule is that when you use ADD OBJECT in a class definition, the object becomes a member of the container and can use the Parent property to refer to the immediate container object.</P>
<p>When using CREATEOBJECT on an instance variable of an object, that property is simply being used as a reference to the instance of the newly created object, but is not a member of the container and therefore cannot use the "parent" property since the object is not part of the container. </P></BODY></HTML>
