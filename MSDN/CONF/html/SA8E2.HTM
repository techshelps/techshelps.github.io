<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error Handling</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Error Handling </H3><p>In order to provide a consistent mechanism for reporting errors and to ensure safety of Windows Sockets applications in multithreaded versions of Windows (like Windows&nbsp;NT), the <I>WSAGetLastError() </I>API was introduced as a means to get the code for the last network error on a particular thread. Under Windows 3.x, thread safety is not an issue, although <I>WSAGetLastError()</I> is still the appropriate way to check for extended error codes. Many functions in the Windows Sockets API set return an error code in the event that there was a problem, and rely on the application to call <I>WSAGetLastError()</I> to get more detailed information on the failure. The following code illustrates how an application might report an error to a user:</P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3">LPHOSTENT        host_info;
char         user_buf[MAX_BUF],    appl_buf[MAX_BUF];
.
.
.
/* Attempt to resolve hostname specified by <I>user_buf,</I>return meaningful */
/* message to the user in the event of an error. */

host_info=gethostbyname(user_buf);
if(host_info==NULL){
    sprintf(buf,"Windows Sockets error %d: Hostname: %s couldn't be resolved.",
         WSAGetLastError(),user_buf);
    MessageBox (hWnd,buf,"Windows Sockets Error",MB_OK);}
.
.
.</font></pre>
<p>In addition to the <I>WSAGetLastError() </I>API, an application may choose to use the <I>WSASetLastError()</I> API to set a network error condition which will be returned by a subsequent <I>WSAGetLastError() </I>call. Obviously, any Windows Sockets calls made between a <I>WSASetLastError() </I>and <I>WSAGetLastError() </I>pair will override the code set by the <I>WSASetLastError()</I> call.</P></BODY></HTML>
