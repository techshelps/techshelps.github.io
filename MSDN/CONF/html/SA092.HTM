<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Overview</H3><p>This session will break down into three sections:</P>
<P><ul><li>    First we will discuss the benefits of upsizing and the steps one needs to take before the upsizing process begins.</P>
<P><li>    We will then detail the upsizing process, discussing exactly what the Upsizing Tool can do and cannot do.</P>
<P><li>    Finally, we will discuss the next steps required after upsizing in order to complete your client-server application.</P></ul>
<p>The application used in the demonstrations will be available on your Tech<FONT FACE="Symbol"> </FONT>Ed CD. The application is for your personal use: You may learn from it and reuse code segments. <I>They cannot be redistributed, however, for production use.</I></P>
<p>The reader is assumed to be familiar with the design of Microsoft&nbsp;Access 2.0–based applications and conversant with Microsoft&nbsp;Access Basic programming techniques. No prior experience with using SQL database data sources is assumed for this session.</P>
<p>This session focuses on the use of the Microsoft&nbsp;Access Upsizing Tools. The tools, which were released in October of 1994, are an add-on for Microsoft&nbsp;Access 2.0. The tools are designed to work with Microsoft SQL Server database management system version 4.<I>x</I>. These three products are necessary in order to use the Upsizing Tools and to take advantage of much of what is discussed below. At this time, the tools do not support any other back-end databases. This is because the tools use SQL Passthrough, which is specific to Microsoft SQL Server.</P>
<p>The Upsizing Tools consist of two major components:</P>
<P><ul><li>    Upsizing Wizard</P>
<P><li>    SQL Server Browser</P></ul>
<p>Below is a description of these two major components that we will be discussing throughout the session.</P>
<H4> </A>Upsizing Wizard</H4><p>The first component of the Upsizing Tools is the Upsizing Wizard. It takes a Microsoft&nbsp;Access database and creates an equivalent database on SQL Server with the same table structure, data, and many other attributes of the original Microsoft&nbsp;Access database.</P>
<p>This will allow developers who design client-server applications on their desktop in Microsoft&nbsp;Access to generate a SQL Server database from their prototype. Also, developers who have existing Microsoft&nbsp;Access–based applications will be able to "grow" those applications to SQL Server and gain the benefits of a client-server architecture.</P>
<H4> </A>SQL Server Browser</H4><p>The SQL Server Browser allows developers to view, create, and edit SQL Server objects including tables, views, defaults, rules, stored procedures, and triggers. The Browser can be used to manage a SQL Server database created by the Upsizing Wizard or any other existing SQL Server objects. </P>
<p>This paper and session will focus on the Upsizing Wizard portion of the Upsizing Tools.</P></BODY></HTML>
