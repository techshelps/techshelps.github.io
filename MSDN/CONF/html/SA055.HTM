<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reducing Connection Use</TITLE>
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	
<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H3>Reducing Connection Use</H3>
<p>Jet shares connections whenever possible. Jet will share connections in which the DSN value and the DATABASE value are identical. (Omission of the DATABASE value in the connect strings qualifies as identity.) A chunk-fetching operation on two tables, each with its own active connection, can be conducted over a third shared connection. One connection is devoted to managing the keys (bookmarks) for each of the two simultaneously active tables, and the third connection is used to retrieve or send row data corresponding to the active fetch or update operation.</P>
<p>Some servers support powerful connections that can handle multiple partially completed queries at the same time (ORACLE Server is one example). Other servers provide connections requiring fewer resources, but each connection can process only one query at a time (Microsoft SQL Server and SYBASE SQL Server are examples). However, regardless of the server's capabilities, the Jet database engine allows multiple queries and manages your connections automatically. </P>
<p>If your server supports multiple queries on a single connection, you generally won't have to worry about connection usage because Microsoft Jet uses just one connection to the server for the entire application. However, if your server doesn't support such queries, you should try to reduce the number of connections your application requires. This section describes ways to limit your use of connections.</P>
<p>A server database that permits only a single connection from a client and does not support multiple statements on the connection can return rows only to non-updatable Snapshot Recordset objects, unless the set has less than 100 records.</P>
<H4>Limiting Dynasets to 100 Records</H4>
<p>If your server uses multiple connections to process more than one query at the same time (for example, SQL Server), you can reduce connection use by limiting dynasets to 100 records. A dynaset containing 100 or fewer records requires only a single connection. In contrast, a dynaset containing more than 100 records requires two connections: Microsoft Jet uses one connection to fetch the key values from the server and another to fetch the data associated with those keys for the records visible on screen. Other dynasets can share the second connection but can't share the first, because not all key values may have been retrieved from the server. </P>
<p>As an example, three dynasets each containing more than 100 records require a total of four connections. When all of the key values for any of these dynasets have been fetched, or when the dynaset is closed, the corresponding connection is released. In contrast, three dynasets each containing 100 or fewer records require only one connection.</P>
<p>Note that if your server allows multiple statements on a single connection (for example, Oracle), then the above does not apply.</P>
<H4>Releasing Connections</H4>
<p>Another way to reduce the number of connections is to close the connections your application is no longer using. You can cause a recordset to finish execution and thereby close connections by doing one of the following:</P>
<UL>
<LI>    In Microsoft&nbsp;Access, in the Open event procedure of a form based on the recordset, add the following statement:</LI>
<P>            Me.RecordsetClone.MoveLast</P>
<P>In Microsoft Basic, you would leave the RecordSource of the form blank, and place the following code in the Load event procedure of the form:</P>
<BR><FONT FACE="Courier New" SIZE="2">Dim MyRS As Dynaset<P>Data1.RecordSource = "SELECT ... FROM ..."
<BR>Data1.Refresh
<BR>Set MyRS = Data1.Recordset.Clone<P>MyRS.MoveLast
<BR>MyRS.Close</FONT><BR>
<li>    Use a TOP 100 PERCENT query to return 100 percent of the records. (This is especially useful for filling list boxes and combo boxes.) For more information, search Help for <I>TOP (SQL)</I> in the Microsoft&nbsp;Access help file. </P>
<p>Although they reduce connection usage, these techniques cause forms to open more slowly. This technique isn't recommended if your recordsets are very large.</P></ul></font></BODY></HTML>
