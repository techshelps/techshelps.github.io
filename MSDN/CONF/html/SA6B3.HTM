<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Store infrequently updated tables in the local MDB</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Store infrequently updated tables in the local MDB</H3><p>Often, an application contains several forms that use the same remote table&mdash;for example, as the source for a list box or combo box. If the data in the table doesn't change frequently, you can speed up form loading and reduce server load by using one of the following techniques:</P>
<P><ul><li>    If the table contains a small amount of data that never changes (such as the names and two-letter abbreviations of the 50 states), you should store it in the local application database. If the table is joined in queries with remote tables, you should also keep a copy of it on the server to avoid heterogeneous joins.</P>
<P><li>    If the data in the table changes rarely (such as a list of buildings in a company), it should reside both on the server and in the local application database; in addition, your application should provide a way for the user to download the table when the data does change.</P>
<P><li>    If the data in the table changes occasionally (that is, less than daily, such as the employees in a small company or department), you should store it both on the server and in the local application database, and your application should automatically refresh the local version each time it starts. This method uses extra time when the application starts but speeds up queries when the application is running.</P></ul>
<p>There is no code example for this fragment as it depends so much on the scenario involved.</P></BODY></HTML>
