<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Support</TITLE> <META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H3>Application Support</H3>
<p>The ICM API is designed to be controlled and used at the application level. With ICM 2.0, there are now two levels of color management support available at the application level: inside the DC and outside the DC. This means application vendors can choose the level of support necessary for themselves and their users. It is neither necessary nor appropriate for an application to support both versions of the ICM API.</P>
<UL><LI><B>ICM inside the DC functions:</B> These color management functions are designed to be very straightforward to integrate into your application. However, this ease of integration has a price, and these functions are not appropriate for everyone. Since all of the color management is done inside a device context in GDI, RGB is the only supported color space. (Available in Windows&nbsp;95, and the upcoming Windows&nbsp;NT 5.0 and Windows releases.)</LI><LI><B>ICM outside the DC functions:</B> These color management functions are new with ICM 2.0. They are designed to be very flexible for applications that need to have very broad control of color and broad support for color spaces. (Available in the upcoming Windows&nbsp;NT 5.0 and Windows releases.)</LI></UL>
</P></BODY></HTML>
