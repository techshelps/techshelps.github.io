<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TCP/IP Tools to Communicate with UNIX Hosts</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>TCP/IP Tools to Communicate with UNIX Hosts</H3><p>The next area we look at is interoperability with UNIX servers. There are three flavors of communications with UNIX hosts. There are the "ARPA Services" and the "Berkeley Services." Some may view this as "native" UNIX communications. The other is communicating with UNIX servers running LAN Manager for UNIX. We look at both in the context of the TCP/IP transport protocol. Some UNIX systems can support the NetBEUI protocol stack, but this is not a common installation.</P>
<p>We have already seen some of the components of TCP/IP in our discussion of the Microsoft Windows&nbsp;NT architecture. TCP/IP is made up of a number of different protocols that interoperate to provide network services. Microsoft Windows&nbsp;NT does provide IP support. IP is a "connectionless" oriented protocol with no guaranteed delivery. The ARP protocol is supported for address resolution within the local area network. ICMP (Internet Control Message Protocol) is support for such activities as ECHO (commonly known as PING). Above IP there is support for the UDP protocol. User Datagram Protocol is also a connectionless protocol and is supported by the Sockets interface. TCP (Transmission Control Protocol) is a connection-oriented guaranteed delivery protocol. It too is supported by the Socket programming interface.</P>
<p>Building on the lower-level protocols provided, Microsoft Windows&nbsp;NT also supplies a number of application utilities. The File Transfer Protocol (FTP) utility is a full, 32-bit implementation. Microsoft Windows&nbsp;NT provides the FTP client and FTP server. Thus, Microsoft Windows&nbsp;NT can use FTP to transfer files with a UNIX server, and a UNIX workstation can use FTP to transfer files with a Microsoft Windows&nbsp;NT server. In addition to FTP, Microsoft Windows&nbsp;NT also provides Trivial File Transfer Protocol (TFTP). TFTP copies files but doesn't perform access-control checking, and it uses UDP rather than TCP as the underlying protocol. Telnet provides a virtual terminal service for remote interactive sessions. Basic terminal emulation of TTY (scrolling), VT-100 (ANSI), and VT-52 terminals are supported. This allows a user to make remote connections with UNIX systems that are running the Telnet server component. Microsoft Windows&nbsp;NT does not supply a Telnet server component. Simple Network Management Protocol (SNMP) is supported by Microsoft Windows&nbsp;NT. Management Information Blocks-II (MIB-II) and the LAN Manager extension MIBs are fully supported. MIBs for DHCP and WINS are also included. Here, Microsoft Windows&nbsp;NT is simply an SNMP agent. Finally, Microsoft Windows&nbsp;NT supplies a Domain Name Resolver (DNR) for resolving names.</P>
<p>The Berkeley services are extensions to the ARPA services, which were added by work done at the University of California at Berkeley. Remote Copy (RCP) may be used to copy files to and from remote UNIX systems and between two remote UNIX systems. Local copy through RCP is not supported. Also the -p option (preserve timestamp) is not supported in the Microsoft Windows&nbsp;NT version. Remote Shell (RSH) allows a user to establish a session with a host computer. RSH supplies only the user name for validation on the remote host. Remote Execute (REXEC) allows a user to execute commands on a remote host and prompts for and sends a password in clear text for remote authentication.</P>
<p>Microsoft Windows does provide a sockets programming interface, called Windows Sockets, which is a definition of the sockets' interfaces defined by a committee of TCP/IP on Windows providers (including Microsoft). The programming interface is virtually identical to the existing sockets API set defined by UC Berkeley. Modifications allow for the nonblocking activities needed to support the Microsoft Windows messaging paradigm. Windows Sockets is supported in all sub-systems, thus an MS-DOS, Win16, Win32, or POSIX program can all make Windows Sockets calls and reach the TCP/IP protocol stack. XTI (X/Open Transport Interface) is an up-and-coming API interface for applications to access the transport layer of protocol stacks. Microsoft Windows&nbsp;NT does not currently support the XTI API set, however, it is identified as a future enhancement.</P></BODY></HTML>
