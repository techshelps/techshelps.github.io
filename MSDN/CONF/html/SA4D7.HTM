<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Directory Services Today</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Directory Services Today</H2><p>It is common to find a variety of directories&mdash;many playing an administrative role&mdash;that are deployed within a single organization. These include network resource directories such as and LDAP-based directory, DCE Cell Directory Service, Banyan StreetTalk, Microsoft Windows&nbsp;NT&reg; operating system Directory Service, and Novell Directory Services, as well as application specific directories, such as, Lotus Notes, cc:Mail, or Microsoft Mail. Although a single directory for an entire organization is desirable, no product available today can fill this very large requirement.</P>
<P><img src="38974.gif"></P>
<P CLASS="cap"><B>Figure 1 - The Directory Challenge</B></P>
<p>Multiple directories in the organization pose complex challenges to users, administrators, and developers. These problems have limited wide directory deployment. End users face multiple logons and a variety of interfaces to information across multiple directories. Administrators face the complexity of managing multiple directories. End users and administrators want application developers to use an existing administrative directory, but developers face a dilemma&mdash;which one should they use? Each directory offers unique application interfaces. Developers must choose a specific directory implementation, or support multiple versions of their application. As a result, developers seldom use existing directory services.</P>
<p>Microsoft has a strategy for helping to solve these customer problems noted above&mdash;the Open Directory Services Interface (ODSI). ODSI is a set of WOSA<SUP>1</SUP> application programming interfaces (APIs) that will make it easy for customers and Independent Software Vendors (ISVs) to build applications that register with, access, and manage multiple directory services with a single set of well-defined interfaces.</P>
<p>One of the most familiar WOSA APIs is Open Data Base Connectivity (ODBC). ODBC provides open interfaces for relational databases, thus allowing developers to write applications and tools that will work with any data base that supports ODBC. Because of the thriving ODBC development community, every major relational data base now supports ODBC. ODSI is "ODBC for directory services."</P>
<p>ODSI gives developers access to multiple directory service providers via an open set of interfaces. Applications written to ODSI will work with any directory service that offers an ODSI provider. ODSI addresses the problems outlined above with five APIs. All are part of WOSA:</P>
<OL><LI>Network Provider Interface for supporting automatic logon to multiple namespaces</LI><LI>Windows Sockets Registration for service registration </LI><LI>Windows Sockets Resolution (RnR) for resolution </LI><LI>RPC OLE DB for rich query</LI><LI>Active Directory<B> </B>for directory object manipulation </LI></OL><P><img src="38975.gif"></P>
<P CLASS="cap"><B>Figure 2 - The Open Solution</B></P>
<p>The remainder of this document presents the concepts, features, benefits, and architecture of Active Directory, and provides examples of Active Directory usage.</P>
<p></P>
<P CLASS="foot"><SUP>1</SUP> Windows Open Services Architecture</P></BODY></HTML>
