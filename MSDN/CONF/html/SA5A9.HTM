<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting a Broad Range of Applications</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Supporting a Broad Range of Applications</H3><p>To meet the needs of a wide range of users, a CTI API must support a broad range of applications. These include both "telephony-centric" applications, which have the management of telephone calls as their primary focus (from the simplest dialer or data communications application to complex call center management applications), and "telephony-enabled" applications&mdash;those which allow access to telephony features but do not have telephony as their primary focus. Examples of a "telephony-enabled" application would be a personal information manager or database management toolkit with rudimentary ability to place and track calls, most likely by leveraging the user's preferred telephony-centric ("call manager") application.</P>
<p>Some CTI architectures are focused on one facet of the problem, such as call centers (automatic call distribution, predictive dialing, and so on) or ISDN calls from personal computers. Widespread success of CTI requires a broad range of commercial applications&mdash;and those applications will never be produced unless developers are convinced that drivers will be available for a wide range of underlying hardware. If the only drivers available are for large PBXs with ACD and predictive dialing features, or for specific ISDN interface boards, major software developers will be reluctant to make the investment to produce applications for that API.</P>
<p>The Windows Telephony API focuses on the "desktop"&mdash;generally, a single PC and telephone, however, the capability of performing "third-party" call control (on behalf of other desktops) is preserved where needed. The desktop is assumed, in the parameter structure of API functions, to be one endpoint of each call, thereby simplifying the API and making it easier for programmers to learn and use. The underlying protocol used to control the telephone network or PBX can be either first-party or third-party.</P></BODY></HTML>
