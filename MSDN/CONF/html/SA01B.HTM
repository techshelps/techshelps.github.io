<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Combo and List Box Techniques</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Combo and List Box Techniques</H2><p>Combo boxes and list boxes are among the most powerful yet complicated controls. You'll probably find it easiest in Microsoft&nbsp;Access 2.0 to use Control Wizards to create combo and list boxes, but it's also convenient to understand the important combo and list box properties so you can easily customize them. </P>
<p>This section discusses some common combo and list box functionality you might want to put into your own forms. Most of the techniques described here can be used with combo or list boxes, although combo boxes are used in the examples.</P>
<p>During the discussion, keep in mind the distinction between ControlSource, which is the table or query field to and from which the control saves and loads data, and RowSource, which is the source of the data displayed in the list. Other properties central to the discussion are ColumnCount, ColumnWidths, BoundColumn, and RowSourceType. </P></BODY></HTML>
