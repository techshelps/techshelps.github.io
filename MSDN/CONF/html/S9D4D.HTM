<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DCOMThe Distributed Component Object Model</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H1>DCOM: The Distributed Component Object Model</H1><p><B>A Business Overview</B></P>
<P>The information contained the in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be intrepreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication.</P>
<H2>DCOM:  The Distributed Component Object Model </H2><p>[This paper provides a business overview of DCOM&mdash;the Distributed Component Object Model&mdash;a technology that enables software components to communicate directly with each other across networks, including the Internet and intranets. </P>
<H2>Introduction</H2><p>With the advent of the Java programming language and the growth of the Internet, IT (Information Technology) managers are once again excited at the prospect of using component software technology&mdash;the idea of breaking large, complex software applications into a series of pre-built and easily developed, understood, and changed software modules called <I>components&mdash;</I>as a means to deliver software solutions much more quickly and at a lower cost.</P>
<p>The goal is to achieve <I>economies of scale</I> for software deployment across the industry. A component architecture for building software applications will enable this by:</P>
<UL><LI><B>Speeding development&mdash;</B>enabling programmers to build solutions faster by assembling software from pre-built parts</LI><LI><B>Lowering integration costs</B><I>&mdash;</I>providing a common<I> </I>set of interfaces for software programs from different vendors means less custom work is required to integrate components into complete solutions</LI><LI><B>Improving deployment flexibility</B><I>&mdash;</I>making it easier to customize a software solution for different areas of a company by simply changing some of the components in the overall application</LI><LI><B>Lowering maintenance costs</B>&mdash;isolating software function into discreet components provides a low-cost, efficient mechanism to upgrade a component without having to retrofit the entire application</LI></UL><p>A <I>distributed</I> component architecture applies these benefits across a broader scale of multiuser applications. The Distributed Component Object Model (DCOM) has three unique strengths that make it a key technology for achieving this:</P>
<UL><LI><B>DCOM is based on the most widely-used component technology today</B><BR>DCOM is simply "COM with a longer wire"&mdash;a low-level extension of the Component Object Model, the core object technology within Microsoft&reg; ActiveX&trade;. The ActiveX Web site can be found at http://www.microsoft.com/activex/default.htm. Major development tools vendors&mdash;including Microsoft, Borland, Powersoft/Sybase, Symantec, ORACLE, IBM, and Micro Focus&mdash;already sell software development tools that produce ActiveX components. These tools and the applications they produce automatically support DCOM, providing the broadest possible industry support. Additionally, over 1,000 existing commercial software components that will work with DCOM are already available for use by developers. </LI><LI><B>DCOM is the best networking technology to extend component applic</B><B>a</B><B>tions across the Internet </B><BR>Because it is an ActiveX technology, DCOM works natively with Internet technologies like TCP/IP, the Java language, and the HTTP network protocol, providing "object glue" that will enable business applications to work across the Web. <I>DCOM enables distributed Java today without r</I><I>e</I><I>quiring any communications-specific code or add-ons such as "remote classes."</I></LI><LI><B>DCOM is an open technology that runs on multiple platforms<BR></B>Microsoft is openly licensing DCOM technology to other software companies to run on all of the major operating systems, including multiple implementations of UNIX-based systems. Software AG, has DCOM running on the Solaris-based operating system today. Additionally, Microsoft is seeking to work with the Internet standards bodies, including the IETF and the W3C, to promote DCOM as a public Internet technology. The <I>I</I><I>n</I><I>ternet Draft</I> technical publication that contains a publicly available description of the DCOM network protocol can be found at http://ds.internic.net/Internet-drafts/draft-brown-dcom-v1-spec-00.txt.</LI></UL><p>The combination of these three factors&mdash;the largest installed base, native support for Internet protocols, and open support for multiple platforms&mdash;means that businesses can realize the benefits of a modern component application architecture without having to replace investments in existing systems, staff, and infrastructure.</P></BODY></HTML>
