<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Next-Generation Applications</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Next-Generation Applications</H3><p>Increasingly, companies have to deal with a heterogeneous mix of computers that are spread throughout the world. At the same time, individuals have the need to work within groups, and often remotely. The Internet is also rapidly changing the way companies do business. All these factors contribute to a need for a new generation of scalable applications that provide a secure, robust, and high-performance flow of information. Microsoft is leading the way with products and technologies that allow you to create applications that can handle your business needs. </P>
<p>At this point, we cannot predict what the next generation of applications will look like. The new technologies open up a world of possibilities, limited only by your imagination. For example, a next-generation application might include the following:</P>
<UL><LI>Web Pages with Microsoft<FONT FACE="Symbol">Ò</FONT> ActiveX<FONT FACE="Symbol">Ô</FONT> controls.</LI><LI>An ISAPI-based application component (could be script-level Active Server Pages).</LI><LI>Use of server-side ActiveX controls to allow access to data, formatting of output, and interaction with "the outside world."</LI><LI>Access to a database or other server service.<BR></LI></UL><p>At minimum, next-generation applications would do the following: </P>
<UL><LI>Contain a Web page with one ActiveX control that communicates with a server.</LI><LI>Use either RPC, Windows Sockets, or DCOM to talk to its server.<BR></LI></UL><p>A more sophisticated application could also do the following:</P>
<UL><LI>Use OLE DB to access its data.</LI><LI>Use COM for intercomponent interaction.</LI><LI>Have some components on other computers, accessed transparently with DCOM.</LI><LI>Present multiple ActiveX controls on a page, and orchestrate the behavior of those controls with Visual Basic Script or another scripting language. These controls could be developed in-house or by another party. </LI></UL></BODY></HTML>
