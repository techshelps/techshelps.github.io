<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Recommended Sessions</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Recommended Sessions</H3><H4> </A>Microsoft Message Queue Architecture</H4><p>Message queuing is another distributed service that may provide solutions to your application needs. The new Microsoft Message Queue (MSMQ) product provides a framework for building distributed applications without worrying about network issues such as selecting a transport, routing, or dealing with disconnects.</P>
<p>This session compares the traditional synchronous model to the new MSMQ message queuing model, then provides details on the features of MSMQ, including its programming model and administration tools. ( A second session is available Thursday, covering an actual MSMQ application written in both C++ and Visual Basic.)</P>
<H4> </A>DCOM and Security</H4><p>Distributed applications raise new security issues. Since many operations in a distributed network are now physically accessible to anyone with access to the network, access to these operations need to be restricted to a higher level. To solve these issues, DCOM uses the extensible security framework provided by Windows NT. This session looks at DCOM's integration with SSPI and how it uses SSPI. We'll also drill down into the various configuration options for DCOM security and provide detailed discussion of the various options for activation security, call-level security and object security. Issues regarding integrating DCOM runtime security on the MS platform with DCOM on UNIX platforms will also be covered.</P>
<H4> </A>Administration and Packaging of Viper Applications</H4><p>Viper is designed to allow ISVs to develop applications and later deploy them as packages to the customer system. We'll describe the issues and trade-offs associated with separating development from deployment, and we'll use the Viper Explorer to demonstrate the installation and administration of applications on a Viper system.</P></BODY></HTML>
