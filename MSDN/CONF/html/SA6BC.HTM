<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Split .mdb files that have lots of tables to minimize DAO collection initialization time</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Split .mdb files that have lots of tables to minimize DAO collection initialization time</H3><p>When you first reference DAO collections such as Tabledefs, DAO has to retrieve certain basic information about each Tabledef and create a corresponding object. If you have an application with over a hundred tables, say, the time to populate this collection will become significant. A way to avoid this is to split your MDB into several MDB files that contain logically grouped sets of tables and open those databases directly from DAO if you need to access them. This will create separate Tabledef collections in each Database object. Although you will still pay the collection creation hit for each .MDB, you will now have finer granularity over when or if that hit takes place.</P>
<p>Of course you can avoid this hit by not referencing the tabledefs (or querydefs etc.) collections at all, but that generally isn't possible in most applications.</P></BODY></HTML>
