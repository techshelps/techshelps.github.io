<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting LDAP C API</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<H2>Supporting LDAP C API</H2><p>The LDAP API provides a "lowest common denominator" solution for developers who need their applications to work on many different client types today. Similarly, existing LDAP applications will run against next generation Windows&nbsp;NT Directory Services with little or no modification beyond extending the application to support object types unique to next generation Windows&nbsp;NT Directory Services. Developers of LDAP applications are encouraged to migrate to Active Directory Components, which support any LDAP-enabled directory services.</P>
<P>Building Upon the Microsoft Exchange Storage Engine</P>
<p>The Microsoft Exchange 4.0 directory structure and storage engine provide the foundation for next generation Windows&nbsp;NT Directory Services. From this foundation, Microsoft has extended and enhanced that technology to be general purpose directory services that scale from a small installation with a few hundred to a few thousand objects to a very large installation with millions of objects.</P>
<p>The Microsoft Exchange storage engine provides multiple indexes for fast retrieval and an efficient mechanism for storing "sparse" objects, that is, objects that support many different properties but do not always have values for all of them.</P>
<P>Using Domain Trees</P>
<p>The key to the scalability of next generation Windows&nbsp;NT Directory Services is the domain tree<I>. </I>Unlike directory services that consist of a single tree structure and require a complex "top down" partitioning process, next generation Windows&nbsp;NT Directory Services provide a simple and intuitive "bottom up" method for building a large tree. In next generation Windows&nbsp;NT Directory Services, a single domain is a complete partition of the directory. Domains are subdivided into Organizational Units (OUs) for administrative purposes. This can be seen in the figure below.</P>
<P><img src="39257.gif"></P>
<P>Figure 5: Domain Tree and OUs.</P>
<p>A single domain can start very small and grow to contain over 10 million objects. When a more complex organizational structure is required, or a very large number of objects must be stored, multiple Windows&nbsp;NT domains can be easily joined together to form a tree. With next generation Directory Services, a domain tree can contain many millions of objects.</P></BODY></HTML>
