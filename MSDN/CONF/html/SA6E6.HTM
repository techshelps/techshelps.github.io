<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Control Wizards Section</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h3>Control Wizards Section</H3><p>Control Wizards contain five parts. The string to the left of the equals sign is a name that will uniquely identify your Wizard to Microsoft&nbsp;Access. It's never displayed in the UI. The second is the control type that the Wizard creates and / or modifies. The third parameter is that name that is displayed in the Choose Which Builder dialog box that comes up whenever more that one Wizard is registered for a particular control type. The fourth parameter is the name of the Access Basic function that is called to launch the Wizard. The last parameter is either <B>w</B>, or <B>rw</B>, meaning that the control Wizard is <I>write-only</I>, that is, it is only invoked when a new control is created. If this is set to <B>rw</B> then the Wizard will also be launched to edit an existing control. Users do this by selecting the control then choosing the Build...button from the shortcut menu. </P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3"><B>[Control Wizards]</B>
<B>MSListBoxWizard=ListBox, List Box Builder, LST_ENTRY,w</B></font></pre>
<p>Control Wizards are called directly after a control is created. They are called with two-string parameters, the name of the new control and the name of its label. Control Wizards use this information to grab the handle of the control and directly modify its properties. Here's the function declaration for the Command Button Wizard entry function: </P>
<P CLASS="spacing"><BR></P>
<pre><FONT FACE="Courier New" SIZE="3"><B>Function bwEntry (CtlName As String, LblName As String) As Integer</B></font></pre>
<p>As mentioned in the "Object Wizards Section" above, the return value of the entry point function is ignored and is declared as an integer here only to save overhead.</P></BODY></HTML>
