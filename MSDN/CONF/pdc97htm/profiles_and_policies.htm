<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Guide to Microsoft® Windows NT® 4.0 Profiles and Policies</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>



	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="guidetomicrosoftwindowsnt4.0profilespolicies"></a>Guide to Microsoft® Windows NT® 4.0 Profiles and Policies</h1>
<p>
Server Operating System</p>

<b>White Paper</b></p>
<p>
© 1997 Microsoft Corporation. All rights reserved.</p>
<p>
The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication.</p>
<p>
This White Paper is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT.</p>
<p>
Microsoft, the BackOffice logo, MS-DOS, Windows, and Windows NT are registered trademarks of Microsoft Corporation.</p>
<p>
Other product or company names mentioned herein may be the trademarks of their respective owners.</p>
<p>
Microsoft Corporation · One Microsoft Way · Redmond, WA 98052-6399 · USA</p>
<p>
0997 </p>
<h2></h2>
<p>
This guide provides information and procedures for implementing Microsoft® Windows NT® 4.0 Profiles and Policies on client workstations and servers. A Microsoft Windows NT 4.0 User Profile describes the Windows NT configuration for a specific user, including the user&rsquo;s environment and preference settings. A System Policy is a set of registry settings that together define the computer resources available to a group of users or an individual. With the addition of System Policies and the new User Profile structure to Windows NT 4.0, network administrators have a greater ability to control the user environment than they have ever had before. </p>
<p>
This document provides the details that administrators need to know to implement a rollout of User Profiles and System Policies under Windows NT 4.0. Although the primary emphasis is Windows NT, this paper also discusses how User Profiles are handled with Windows&reg; 95 clients and how the two platforms differ. You should use this guide in conjunction with your Windows NT 4.0 documentation and Resource Kits. </p>
<h2><a name="introduction"></a>Introduction</h2>
<p>
Not too many years ago, information technology professionals faced a serious challenge in controlling the mounting costs of mainframe use. It seemed that everyone&mdash;clerks, writers, developers, and systems administrators&mdash;all had terminals and were using the system for everything from numbers crunching to typing letters. Networks became bogged down, and IT professionals were given the task of getting &ldquo;nonessential operations&rdquo; off the mainframe. Their decision was to deploy personal computers in the enterprise&mdash;with emulation software for mainframe access and local software for tasks where central processing or data sharing were not required. Gradually, as PCs became more powerful, more and more operations moved to the desktop. And as PC networking matured, many businesses found that a PC-based network built on commodity hardware and off-the-shelf software was their best business solution. </p>
<p>
Lately, however, we&rsquo;ve come full circle on this. It seems that the <i>total cost of ownership</i> (or TCO)&mdash;the real cost of maintaining a distributed personal computer network&mdash;is far from trivial. TCO includes the initial capital cost of hardware and software, deployment and configuration expense, costs associated with deploying hardware and software updates, training and retraining, day-to-day maintenance and administration, and telephone and on-site technical support. With these escalating costs in mind, Microsoft and others are working together on several initiatives to lower the total cost of ownership of personal computers. </p>
<h3><a name="tcouser"></a>TCO and the User</h3>
<p>
One of the major costs highlighted in recent reports on Total Cost of Ownership (TCO), is lost productivity at the desktop caused by user error, such as changing the system configuration and rendering the computer unworkable, or system distractions and complexities, for example too many features or nonessential applications installed on the desktop. To solve these problems, system administrators need a means to control a user&rsquo;s access to key configuration files and to features and applications that are not required to do that user&rsquo;s particular job. To be successful, this means of control must be flexible and customizable&mdash;the system administrator must be able to control the computer configurations of individuals and groups of users based on user job responsibilities and computer literacy.</p>
<h3><a name="profilespolicieszeroadministrationkit"></a>Profiles, Policies, and the Zero Administration Kit</h3>
<p>
The Zero Administration Kit (ZAK) for the Microsoft Windows NT® version 4.0 operating system is designed to help the corporate administrator address some of the issues arising from user operations. ZAK is a set of methodologies for deploying Microsoft Windows NT 4.0 that greatly reduces the burden of individual desktop management for task-based workers. With ZAK, system administrators can establish user profiles, system policies, and security to reduce some of the administrative costs associated with managing end-users in an enterprise network. </p>
<p>
ZAK&rsquo;s methodologies are based on the underlying technologies and capabilities of Windows NT 4.0, and as such these techniques can readily be adapted to accommodate a corporation&rsquo;s specific computing requirements. In the near future, you will see additional TCO-reducing features appear in Microsoft Windows® 98, Windows NT 5.0, and Microsoft Systems Management Server. Central to these features is the idea of centralized desktop control. This is accomplished through User Profiles and System Policies&mdash;the subject of this paper.</p>
<h3><a name="whatareuserprofilessystempolicies"></a>What are User Profiles and System Policies?</h3>
<p>
A Microsoft Windows NT 4.0 User Profile describes the Windows NT configuration for a specific user, including the user&rsquo;s environment and preference settings. For example, those settings and configuration options specific to the user&mdash;such as installed applications, desktop icons, color options, and so forth&mdash;are contained in a User Profile. This profile is built in part from System Policy information (for example, those things that a user has access to and those things that the user can and cannot change) and in part from permitted, saved changes that a user makes to customize his or her desktop. </p>
<p>
A System Policy is a set of registry settings that together define the computer resources available to a group of users or an individual. Policies define the various facets of the desktop environment that a system administrator needs to control, such as which applications are available, which applications appear on the user&rsquo;s desktop, which applications and options appear in the <b>Start</b> menu, who can change attributes of their desktops and who cannot, and so forth. </p>
<p>
With the addition of System Policies and the new User Profile structure to Windows NT 4.0, network administrators have a greater ability to control the user environment than they ever have had before. Many of the requests that customers submitted, including providing more options in controlling the user&rsquo;s desktop, accessibility to applications and system tools, minimizing administrative overhead, and scalability enhancements, have been added. And, as with every release, Microsoft encourages customer feedback on enhancements to the Windows NT operating system.</p>
<p>
This document provides the details that administrators need to implement a rollout of User Profiles and System Policies under Windows NT 4.0. Although the primary emphasis is Windows NT, this paper also discusses how User Profiles are handled with Windows 95 clients and how the two platforms differ.</p>
<h3><a name="beforeyoubegin"></a>Before You Begin</h3>
<p>
Before proceeding with this document, we recommend that you read Chapters 3 and 4 of the <i>Windows NT 4.0 Concepts and Planning Guide.</i> In addition, you should be familiar with the following terms and concepts.</p>
<h4><a name="keyterminology"></a>Key Terminology</h4>
<p>
<b>Directory Replication</b></p>
<p>
The copying of a master set of directories from a server (called the <i>export </i>server) to specified servers or workstations (called <i>import</i> computers) in the same or other domains. Replication simplifies the task of maintaining identical sets of directories and files on multiple computers, because only a single master copy of the data is maintained. Files are replicated when they are added to an export directory and each time a change is saved to one of the exported files.</p>
<p>
<b>Domain Structure </b></p>
<p>
In Windows NT, a domain is a collection of computers defined by the administrator of a Windows NT Server network that share a common directory database. A domain provides access to the centralized user accounts and group accounts maintained by the domain administrator. Each domain has a unique name.</p>
<p>
<b>Home Directory</b></p>
<p>
A home directory is a directory that is accessible to the user and contains files and programs for that user. A home directory can be assigned to a single user or to a group of users.</p>
<p>
<b>Local Profile </b></p>
<p>
A local profile is specific to a computer. A user who has a local profile on a particular computer can gain access to that profile only while logged on to that computer.</p>
<p>
<b>Mandatory Profile </b></p>
<p>
A mandatory profile is a preconfigured roaming profile that the user cannot change. In most cases, these are assigned to a person or a group of people for whom a common interface and standard configuration is required.</p>
<p>
<b>NetLogon Service</b></p>
<p>
For Windows NT Server, the NetLogon service authenticates domain logons and keeps the domain&rsquo;s directory database synchronized between the primary domain controller (PDC) and the backup domain controllers (BDCs).</p>
<p>
<b>Regedt32.exe</b></p>
<p>
The 32-bit version of the Registry Editor.</p>
<p>
<b>Registry</b></p>
<p>
The registry is a database where Windows NT internal configuration information and machine- and user-specific settings are stored.</p>
<p>
<b>Registry Hive</b></p>
<p>
A hive is a section of the registry that is saved as a file. The registry subtree is divided into <i>hives</i> (named for their resemblance to the cellular structure of a beehive). A hive is a discrete body of keys, subkeys, and values. </p>
<p>
<b>Roaming Profile</b></p>
<p>
A roaming profile is stored on a network share and can be accessed from any computer. A user who has a roaming profile can log on to any computer for which that profile is valid and access the profile. (Note that a profile is only valid on the platform for which it was created&mdash;for example, a Windows NT 4.0 profile cannot be used on a Windows 95 computer.)</p>
<p>
<b>Roaming User</b></p>
<p>
A roaming user is a user who logs on to the network from different computers at different times. This type of user may use a kiosk or may share a bank of computers with other users. A roaming user stores his or her user profile on a network share, and can log on to any networked computer and access that profile.</p>
<p>
<b>System Policy</b></p>
<p>
A System Policy is a set of registry settings that together define the computer resources available to a group of users or an individual. You create system policies with the System Policy Editor. System policies allow an administrator to control user work environments and actions, and to enforce system configurations. </p>
<p>
<b>%systemroot% </b></p>
<p>
An environment variable that expands to become the root directory containing Windows NT files. The directory name is specified when Windows NT is installed (normally, this directory name is c:\winnt).</p>
<p>
<b>%systemroot%\profiles </b></p>
<p>
A folder in the root directory that contains the user profiles for each user of the computer.</p>
<p>
<b>%username% </b></p>
<p>
An environment variable that expands to become the user account ID for the current logged on user. This identifies the user account to Windows NT.</p>
<h3><a name="technicalnotes"></a>Technical Notes</h3>
<p>
Several portions of this guide refer to registry locations that allow you to change certain behaviors of Windows NT and modify settings. For this reason, we include the following warning.</p>
<p>
Caution: </p>
<p>
Using Registry Editor incorrectly can cause system-wide problems that may require you to reinstall  Windows NT to correct them. Microsoft cannot guarantee that any problems resulting from the use of Registry Editor can be resolved.</p>
<p>
In addition, portions of this guide refer to a registry hive called NTuser.xxx. In instances where this is used, .<i>xxx</i> can be replaced with either .dat or .man.</p>
<h2><a name="establishinguserprofilesanoverview"></a>Establishing User Profiles &ndash; An Overview</h2>
<p>
A Microsoft Windows NT 4.0 User Profile describes the Windows NT configuration for a specific user, including the user&rsquo;s environment and preference settings. A User Profile can be <i>local</i>, <i>roaming</i>, or <i>mandatory</i>. A local profile is specific to a given computer. A user who creates a local profile on a particular computer can gain access to that profile only while logged on to that computer. Conversely, a roaming profile is stored on a network share and can be accessed from any networked computer. A user who has a roaming profile can log on to any networked computer for which that profile is valid and access the profile. A mandatory profile is a preconfigured roaming profile that the user cannot change. As a system administrator, you may want to use mandatory profiles for a group of people who require a common interface and standard configuration.</p>
<p>
One of the primary goals of User Profiles is to allow a user&rsquo;s system and desktop customizations to travel with the user from computer to computer, without requiring the user to reconfigure any settings. When a user logs on to any computer that supports his or her roaming profile, the desktop appears&mdash;just as the user left it the last time he or she logged off. With roaming user support, users can share computers, but each user has his or her personal desktop on any computer in the network (both roaming and mandatory profiles support this functionality). </p>
<h3><a name="creatingadministeringuserprofiles"></a>Creating and Administering User Profiles</h3>
<p>
User Profiles can be created and administered in several different ways as will be described next. Note that as a system administrator, you determine whether users can modify their profiles. </p>
<p>
You create a User Profile that is not modifiable for a particular user or group (this is a <i>mandatory</i> profile).</p>
<p>
You establish a network Default User Profile that applies to all new users on Windows NT 4.0 computers. After downloading this default profile and logging on, the user can customize the profile (provided that it is not mandatory).</p>
<p>
You allow a new user to use the local Default User Profile on the  Windows NT 4.0 computer where the user logs on. After logging on, the user can customize the profile (provided that it is not mandatory).</p>
<p>
You copy a template User Profile, and assign the copy to a user. The user can then customize the profile (provided that it is not a mandatory profile).</p>
<p>
Profiles can be stored on a network server or cached on the local machine. (Cached profiles are located in the \%systemroot%\Profiles directory.) Caching a profile reduces the total time to log on and load the profile; however, in a roaming user or kiosk environment, this approach may not be optimal. This option is controlled by the administrator.</p>
<h3><a name="userprofilestructure"></a>User Profile Structure</h3>
<p>
A User Profile is comprised of a Windows NT registry hive and a set of profile directories. The registry is a database used to store machine- and user-specific settings, and portions of the registry can be saved as files, called <i>hives</i>. These hives can then be reloaded for use as necessary. User Profiles take advantage of the hive feature to provide roaming profile functionality. </p>
<p>
The User Profile registry hive is the NTuser.dat in file form, and is mapped to the HKEY_CURRENT_USER portion of the registry when the user logs on.The NTuser.dat hive maintains the user&rsquo;s environment preferences when the user is logged on. It stores those settings that maintain network connections, Control Panel configurations unique to the user (such as the desktop color and mouse), and application-specific settings. The series of profile directories store shortcut links, desktop icons, startup applications, and so forth. Together, these two components record all user-configurable settings that can migrate from computer to computer. Details are provided below.</p>
<h4><a name="configurationpreferencesstoredinregistryhive"></a>Configuration Preferences Stored in the Registry Hive</h4>
<p>
The NTuser.dat file contains the following configuration settings.</p>
<p>
<i>Windows NT Explorer settings</i>. All user-definable settings for Windows NT Explorer, as well as persistent network connections.</p>
<p>
<i>Taskbar</i>. All personal program groups and their properties, all program items and their properties, and all taskbar settings.</p>
<p>
<i>Printer settings</i>. All network printer connections.</p>
<p>
<i>Control Panel</i>. All user-defined settings made in the Control Panel.</p>
<p>
<i>Accessories</i>. All user-specific application settings affecting the  Windows NT environment, including: Calculator, Clock, Notepad, Paint, and HyperTerminal, among others.</p>
<p>
<i>Help bookmarks</i>. Any bookmarks placed in the Windows NT Help system.</p>
<h4><a name="configurationpreferencesstoredinprofiledirectories"></a>Configuration Preferences Stored in Profile Directories</h4>
<p>
The profile directories are designed to contain the following configuration  settings.</p>
<p>
<i>Application data</i>. Application-specific data, such as a custom dictionary for a word processing program. Application vendors decide what data to store in this directory.</p>
<p>
<i>Desktop</i>. Desktop items, including files and shortcuts.</p>
<p>
<i>Favorites</i>. Shortcuts to program items and favorite locations.</p>
<p>
<i>NetHood.</i>* Shortcuts to Network Neighborhood items.</p>
<p>
<i>Personal</i>. Shortcuts to program items. Also a central store for any documents that the user creates. Applications should be written to save files here by default.</p>
<p>
<i>PrintHood.</i>* Shortcuts to printer folder items.</p>
<p>
<i>Recent</i>. Shortcuts to the most recently used items.</p>
<p>
<i>SendTo</i>. Shortcuts to document storage locations and applications.</p>
<p>
<i><b>Start</b> Menu</i>. Shortcuts to program items.</p>
<p>
<i>Templates.</i>* Shortcuts to template items.</p>
<p>
* These directories are hidden by default. To see these directories, change the View Options.</p>
<h3><a name="windowsnt4.0windows95userprofiledifferences"></a>Windows NT 4.0 and Windows 95  User Profile Differences</h3>
<p>
Windows 95 Profiles are very similar in behavior to Windows NT 4.0 Profiles, but there are some differences. </p>
<p>
Unlike Windows NT 4.0, Windows 95 downloads and writes User Profiles to the user&rsquo;s home directory. When the Windows 95 user first logs on, the UNC path specified in the user account&rsquo;s home directory path is checked for the Windows 95 User Profile. You can modify this behavior, however. See the <i>Windows 95 Resource Kit</i> for more information.</p>
<p>
Windows 95 and Windows NT 4.0 User Profiles have the following additional functional differences: </p>
<p>
Windows 95 does not support common groups. </p>
<p>
Windows 95 can be configured to copy only the shortcut (.lnk) and Program Information Files (.pif) when the User Profile is downloaded, whereas Windows NT downloads all file, shortcut, and directory objects.</p>
<p>
Windows 95 User Profiles do not support a centrally stored Default User Profile.</p>
<p>
Windows 95 uses different files for the registry portion of User Profiles. (Refer to the following table.) Windows 95 and Windows NT 4.0 profiles are not interchangeable, primarily because the registry hive, which is a key component of the User Profile, is incompatible between operating system versions.</p>
<table cols=2>
<tr valign=top>
<td width=168><b>Windows NT 4.0 file</b></td>
<td width=233><b>Equivalent Windows 95 file</b></td>
</tr>
<tr valign=top>
<td width=168> NTuser.dat</td>
<td width=233> User.dat</td>
</tr>
<tr valign=top>
<td width=168> NTuser.dat.log</td>
<td width=233> User.da0</td>
</tr>
<tr valign=top>
<td width=168> NTuser.man</td>
<td width=233> User.man</td>
</tr>
</table><br>
<p>
<b>NOTE</b>: The Windows 95 User.da0 and Windows NT 4.0 Ntuser.dat.log, while equivalent, provide slightly different functionality. Windows 95 writes a copy of User.dat to User.da0 each time the user logs off. Windows NT uses the Ntuser.dat.log file as a transaction log file. This allows for fault tolerance in the event that a User Profile must be recovered. </p>
<p>
Windows 95 and Windows NT 4.0 file structures are identical with the exception of the Application Data directory. Windows 95 does not support this directory.</p>
<p>
Windows 95 User Profiles can be stored on NetWare servers. For more information on configuring a client with a <b>Primary</b> <b>Network</b> <b>Logon</b> of <b>Client for NetWare Networks</b>, see the chapter &ldquo;Windows 95 on NetWare Networks&rdquo; in the <i>Windows 95 Resource Kit</i>. For more information on configuring a client that uses Microsoft Service for NetWare Directory Services, see the online Help that accompanies the service.</p>
<h4><a name="howuserprofilesarehandledinwindows95"></a>How User Profiles Are Handled in Windows 95</h4>
<p>
When a user logs on to a Windows 95 machine, the local profile path, <b><code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Profile List</code></b>, is checked for an existing entry for that user:</p>
<p>
If the user has an entry in this registry location, Windows 95 checks for a locally cached version of the user&rsquo;s profile. Windows 95 also checks the user&rsquo;s home directory (or other specified directory if the location has been modified) on the server for the User Profile. If a profile exists in both locations, the newer of the two is used. If the User Profile exists on the server, but does not exist on the local machine, the profile on the server is downloaded and used. If the User Profile only exists on the local machine, that copy is used.</p>
<p>
If a User Profile is not found in either location, the Default User Profile from the Windows 95 machine is used and is copied to a newly created folder for the logged on user. At log off, any changes that the user made are written to the user&rsquo;s local profile. If the user has a roaming profile, the changes are written to the user&rsquo;s profile on the server.</p>
<h3><a name="userprofileplanningimplementation"></a>User Profile Planning and Implementation</h3>
<p>
A successful implementation of User Profiles requires planning and preparation. Before creating User Profiles, consider the following: </p>
<p>
How much of the user environment do you wish to control? Would System Policies&mdash;either in conjunction with User Profiles, or by themselves&mdash;be a better solution?</p>
<p>
Will users be required to use a specific set of desktop folders and environment settings?</p>
<p>
Will users be able to make modifications to their profiles?</p>
<p>
What features will you be implementing in User Profiles? Optional features include persistent network connections, custom icons, backgrounds, and so on.</p>
<p>
For roaming profiles, will users be allowed to use the default profile from the client workstation or will a standardized server-based default profile be used instead?</p>
<p>
Where will the profiles be stored, and is there enough drive space to store them?</p>
<p>
Where do existing user home directories reside?</p>
<p>
How will shortcuts and links be displayed for the user?</p>
<p>
What are the speeds of the links between the clients and the server storing the profiles?</p>
<p>
These issues are examined more fully in the following paragraphs. For more information, refer to the <i>Windows NT Server Concepts and Planning Guide</i>.</p>
<h4><a name="settingpermissionsforuserprofiles"></a>Setting Permissions for User Profiles</h4>
<p>
When troubleshooting or preparing for a rollout of User Profiles, you should pay careful attention to permissions at the Windows NT File System (NTFS) and share levels. If the profile is mandatory, the user account should have at least Read permissions on the network share where that user&rsquo;s User Profile is stored. If the user&rsquo;s profile is roaming, the user must have Change permissions (or better) because the client will need to write the changes back to the central profile on the shared network drive when the user logs off. If roaming profiles are stored on an NTFS partition, you can choose to remove the Delete permission from the default Change permissions at the NTFS level.</p>
<p>
<b>NOTE</b>: Directories containing roaming User Profiles need at least Add and Read permissions for profiles to be read correctly. If you use Add permissions only, when Windows NT checks for the existence of the profile it will fail because it looks for the path first, and if Read rights are not given, the check will fail.</p>
<p>
Permissions are also important on a client machine where the user is logging on interactively. If Windows NT is installed in an NTFS partition on the client computer, and the user does not have at least the default permissions as outlined in the <i>Windows NT Server Concepts and Planning Guide</i> (page 132), errors can occur. For example, if permissions are incorrect on the root of the system directory, the following message appears: &ldquo;Can&rsquo;t access this folder&mdash;the path is too long.&rdquo; A blank desktop is displayed, and the user&rsquo;s only option is to log off. </p>
<p>
If permissions are set incorrectly in the %systemroot%, %systemroot%\System, %systemroot%\System32, or %systemroot%\System32\Config directories, the following message appears: &ldquo;Unable to log you on because your profile could not be loaded.&rdquo;</p>
<h4><a name="encodingpermissionsinuserprofile"></a>Encoding Permissions in the User Profile</h4>
<p>
The registry portion of the User Profile, NTuser.xxx, is encoded with the user or group that has permission to use that profile. Once this is saved, you can use the Registry Editor to modify this information if you want to change the permissions on a profile without replacing it. </p>
<p>
To change encoded User Profile information:</p>
<p>
Follow the instructions to manually edit a profile: (Refer to the section &ldquo;Administering a User Profile Manually through the Registry&rdquo; later in this document).</p>
<p>
Change the permissions on the root of the key to include users and groups who will have permission to use the profile.</p>
<p>
Unload the hive.</p>
<h4><a name="selectinglocationtosaveuserprofiles"></a>Selecting a Location to Save User Profiles</h4>
<p>
As with Windows NT <i>3.5x</i>, you can place a roaming profile in any shared directory, and then configure the user account profile path to point to the profile. The Profiles directory in the system root stores local User Profiles, &ldquo;All Users&rdquo; profile settings (which apply to any user who uses the computer), the &ldquo;Default User&rdquo; profile, and cached User Profiles of domain users. You should avoid using the %systemroot%\Profiles directory in the domain users&rsquo; profile path as a location to store server-based profiles, whether they are roaming or mandatory. (The path should allow the user&rsquo;s profile to roam with the user and be available on any networked computer that the user logs on to. If you specify a path to the %systemroot%\Profiles directory, the client computer always uses the local profile instead.) </p>
<p>
Windows NT 4.0 profiles can be saved on any Windows NT <i>3.5x</i> or 4.0 server because the client computer uses the path where the profile is stored only as a location to download the profile and to write the modified user profile at log off. This allows profiles to be stored on any shared network drive. The process of downloading the profile is controlled by the client computer&mdash;all the client needs is the correct path. Note that storing profiles on a Windows NT 4.0 Server makes it easier for the administrator to open a user&rsquo;s NTuser.dat file to make any necessary modifications. You can also store User Profiles on Novell Servers provided that the client is configured correctly and can access the profile path. </p>
<p>
If a client is not receiving a User Profile at logon, use the <b>Start</b> menu <b>Run</b> command to check the profile path. For example, to see if you can locate the profile, type <i>\\server\share\mydomainuser</i>. If the path to the user&rsquo;s profile contains spaces, put quotation marks around the path when you type it in the <b>Run</b> command box.</p>
<p>
Except in the case of mandatory profiles or when a slow network is detected, any changes to the user&rsquo;s profile are saved to the central profile when the user logs off. (Because users cannot modify mandatory profiles, changes do not need to be written to the server.) </p>
<p>
<b>NOTE</b>: In situations where the same user account logs on to multiple machines, the last user to log off dictates the profile settings because that user was the last one to write data to the profile. Similarly, if a group of users all point to the same profile, the final logoff settings are saved and will overwrite previous settings. </p>
<p>
If the User Profile is flagged as a local profile and is not mandatory, any changes the user makes while logged on are written to the locally cached version of the profile, but not to the server-based copy.</p>
<p>
<b>NOTE</b>: You should not make the home directory and User Profile path the same. If the profile path encompasses the home directory path and the server-based profile is more recent than the local profile on the workstation, all directories and files that exist in the user&rsquo;s home directory will be copied to the user&rsquo;s workstation at logon. These files are then written back to the server (if modified) when the user logs off. This process occurs at each logon. In addition, even if the user logs off and the administrator deletes all of the unnecessary files from the home directory, the versions of these files that reside on the workstation will not be deleted at logon and will be written back to the server again at log off. This file copy process is avoided if you place the profile in a subdirectory of the home directory, as follows: <i>\\server\share\domainuser\profile.</i></p>
<h4><a name="settingpersistentconnections"></a>Setting Persistent Connections</h4>
<p>
Persistent connections are stored in the User Profiles registry hive under the Network subkey. If you create a template User Profile that includes persistent connections and you have to supply credentials when making those connections, the credentials&mdash;with the exception of the password you used&mdash;are stored in the User Profile. When the new user receives the template User Profile, these saved credentials are passed (as opposed to the logged on user&rsquo;s credentials), and the connection may fail. </p>
<p>
There are three methods to correct this:</p>
<p>
You can recreate the profile without supplying alternate credentials when connecting to network resources, or</p>
<p>
Using Registry Editor (Regedt32.exe), use blank spaces to erase the contents of the USERNAME value under HKEY_CURRENT_USER\Network\<i>drive letter</i>. (Do not delete the value&mdash;just fill it with blank spaces.) Save the profile. For additional help, refer to the section &ldquo;Administering a User Profile Manually Through the Registry&rdquo; later in this document, or</p>
<p>
Delete the network connection and reconnect.</p>
<h4><a name="workingaroundslownetworklinks"></a>Working Around Slow Network Links</h4>
<p>
<i>Slow Net</i> (which is configured in System Policy) was designed to offer a user faster access to his or her User Profile if the system detects a slower network speed, such as a modem line connection. Instead of automatically downloading a profile that may be several hundred kilobytes to several megabytes large, Slow Net gives the user the option of either downloading the profile or using the locally cached version. If the cached file is used, it can significantly reduce the time it takes to log on to the computer. To detect a slow network, the operating system computes the amount of time it takes to receive a response from the server (which the profile path defines as part of the user account). As system administrator, you can determine the allowable slow network speed. Use the System Policy Editor to set this value.</p>
<p>
If the user uses the Control Panel System application to change the profile type to <b>Local</b><i>, </i>then<i> </i>the cached copy of the User Profile is opened every time the user logs on. Any changes that occur to the profile are written locally and not to the server location.</p>
<h2><a name="creatingmaintaininguserprofiles"></a>Creating and Maintaining User Profiles</h2>
<h3><a name="creatingnewroaminguserprofileforwindowsnt4.0"></a>Creating a New Roaming User Profile for  Windows NT 4.0</h3>
<p>
To create a new roaming User Profile, you must first determine where the user&rsquo;s profile will be stored. You then must create a user account (if one doesn&rsquo;t already exist), and specify a User Profile path. Finally, you must specify whether a given user will use a specific profile or can use a default profile. These procedures are described below.</p>
<p>
<b>To create a new roaming user profile:</b></p>
<p>
If a location has not already been prepared, create a directory on the server and establish a network share. Give the user a minimum of Change permissions to the shared directory. (For more information on planning for this type of user, read the sections &ldquo;Selecting a Location to Save User Profiles&rdquo; and &ldquo;Setting Permissions for User Profiles&rdquo; earlier in this document.) If your implementation stores user profiles within users&rsquo; home directories, make the profile directory a subdirectory of the user&rsquo;s home directory. (Note that this approach precludes the use of the %USERNAME% variable.) To prevent the share from being browsable, append &ldquo;$&rdquo; to the share name.</p>
<p>
If this will be a domain user or if this will be a local account for a  Windows NT Server-based machine, use User Manager for Domains to create the account. If this will be a Windows NT 4.0 Workstation account, use the version of User Manager included in the Administrative Tools program group. Refer to your operating system documentation and online Help for procedures when using these tools. (Note that for this example, the user account is <i>mydomainuser</i>.)</p>
<p>
Enter the User Profile path. This is the location where the User Profile will be stored, for example: <i>\\myserver\myshare\mydomainuser. </i></p>
<p>
Or, if the profile is being stored within the user&rsquo;s home directory, use: <i>\\myserver\myshare\MyUsersHomeDir\profile.</i></p>
<p>
If the user is to receive the Default User profile from the workstation where he or she will interactively log on, no further administration is required. </p>
<p>
If the user&rsquo;s profile will be a copy of an existing user profile, refer to Step 9. Otherwise, use User Manager to create an account for establishing a template profile. So that you can easily identify this account, we recommend that it be called <i>TemplateUser</i>.</p>
<p>
Using the template account (<i>TemplateUser</i>), log on to the local machine or domain. A new directory with the same name as the user name created in Step 4 will be created in the %systemroot%\Profiles directory when you first log on. For example, if the user name is <i>TemplateUser</i>, the resulting directory name will be %systemroot%\Profiles\TemplateUser. </p>
<p>
Modify any items that need to differ from the current default (for example, you may choose to modify the background color or bitmap, shortcuts on the desktop, and View options in My Computer). </p>
<p>
Log off, and then log back on to the same computer using an account with administrative privileges.</p>
<p>
Place the template profile in the appropriate location for the type of profile distribution that will be used. (The template profile, including customizations, is stored initially in %systemroot%\Profiles\TemplateUser.) </p>
<p>
<b>If the template profile will be distributed manually to multiple users:</b></p>
<p>
Create a directory where the template profile will be stored for distribution to each user account created. </p>
<p>
From the Windows NT-based machine hosting the template profile to be used, log on as an administrator.</p>
<p>
From the Control Panel, click <b>System</b>. From the User Profiles page, use the <b>Copy To</b> option to enter the path of the directory you just created. </p>
<p>
Modify the permissions to allow the Everyone group to use the profile. To do this, click the <b>Change</b> button, select the group, and click <b>OK</b>. </p>
<p>
Continue to Step 9.<i> </i></p>
<p>
<b>If the template profile will be distributed via the Default User folder on validating servers:</b></p>
<p>
Create a <i>Default User</i> directory in the NETLOGON share (which is %systemroot%\Repl\Import\Scripts by default) of validating domain controllers. This folder name must be named <i>Default User</i> or the profile will not be downloaded from the server. To keep the Default User profile consistent across domain controllers and to ease administrative overhead, you can create this folder on one computer and then use the directory replication service to export it to all validating domain controllers.</p>
<p>
If a user logs on and does not have an existing local or server-based profile and your implementation uses the Default User folder on validating domain controllers, Windows NT will check the NETLOGON share for the Default User profile before it uses the local default profile. (Workstations save the server Default User profile on a local cache.) Windows NT will check the time/date/size of the server copy against the locally cached copy before downloading the server copy. And, if the files are identical, Windows NT will use the local copy of the server Default User profile.</p>
<p>
Continue to Step 10. </p>
<p>
In the <i>\\server\share</i> from Step 1, create the directory structure you specified as the path in Step 3. For example, create the directory <i>mydomainuser</i> under <i>\\myserver\myshare</i>. If the profile is to be stored within the user's home directory, use the directory structure <i>\mydomainuser\profile</i> under \<i>\myserver\myshare.</i></p>
<p>
Copy the profile appropriate to your implementation. </p>
<p>
<b>To copy an existing user&rsquo;s profile to another user:</b></p>
<p>
From the Windows NT-based machine hosting the profile to be used, log on as an administrator.</p>
<p>
From the Control Panel, click <b>System</b>. On the User Profiles page, select the profile to be copied and use the <b>Copy To</b> option to enter the path of the directory you created in Step 9.</p>
<p>
Modify the permissions to reflect the proper account. To do this, click the <b>Change</b> button, select the account, and click <b>OK</b>. Click <b>OK</b> again to copy the profile.</p>
<p>
<b>To copy the template profile to the Default User folder on validating domain controllers:</b></p>
<p>
From the Windows NT-based machine hosting the profile to be used, log on as an administrator.</p>
<p>
From the Control Panel, click <b>System</b>. On the User Profiles page, select the profile to be copied and use the <b>Copy To</b> option to enter the path of the Default User directory on the validating domain controller.</p>
<p>
Modify the permissions to reflect the Everyone group. To do this, click the <b>Change</b> button, select the account, and click <b>OK</b>. Click <b>OK</b> again to copy the profile.</p>
<p>
<b>To copy a template profile manually to a number of users:</b></p>
<p>
Copy the entire contents (files and subdirectories) from the directory containing the template user profile created in Step 8 to the directory created in Step 9. </p>
<p>
Repeat this for each of the user profile directories that will receive the template user profile.</p>
<p>
<b>NOTE</b>S:</p>
<p>
When entering the path to the target directory, you can use Uniform Naming Convention (UNC) names. However, if you are going to use the Browse function to locate the target directory for the profile, it is important that you first map a drive to the \\server\share<u> </u>where the profile will be stored.</p>
<p>
The mydomainuser name shown in Step 2 does not have to be the user&rsquo;s name. Many user accounts or groups can be configured to point to the same profile. Of course, if the profile is shared by a group of users and is not mandatory, as each user logs off, the user&rsquo;s changes are written back to the shared profile.</p>
<p>
The profile does not need to be stored one directory below the server\share. The profile can be nested several directories below, or the profile path can be local.</p>
<p>
If the profile path points to a directory on the local machine, a share is not needed.</p>
<p>
The variable %USERNAME% is replaced by the user name only once in the User Profile path in User Manager, and it must be the last subdirectory in the path. However, extensions can still be added, such as .usr or .man.</p>
<p>
You can select any group or a specific user when setting the permissions. However, only the user or group specified will be able to use the profile. For this reason, it is recommended that the Everyone group be given permission to use template profiles.</p>
<p>
Once the above steps are completed, the user receives the appropriate profile as follows:</p>
<p>
If the user is to receive the Default User profile from a Windows NT 4.0-based workstation, the workstation&rsquo;s default profile is used when the user first logs on. When the user logs off, the profile is automatically written to the local cache and to the server-based profile.</p>
<p>
If the user is to receive the Default User profile from the validating domain controller, the default profile from the server is used when the user first logs on. When the user logs off, this profile is automatically written to the local cache and to the server-based profile.</p>
<p>
In all other cases, the profile&mdash;including the folder trees and the NTuser.xxx file originally included with the profile&mdash;is written to the user&rsquo;s profile directory. The permissions are also encoded into the binary NTuser.xxx file.</p>
<h3><a name="creatingnewmandatoryuserprofileforwindowsnt4.0"></a>Creating a New Mandatory User Profile for  Windows NT 4.0</h3>
<p>
<b>To create a new mandatory User Profile:</b></p>
<p>
If a location has not already been prepared, create a directory on the server and establish a network share. Users who will have mandatory profiles need only Read permissions to the shared directory. (For more information on planning for this type of user, read the sections &ldquo;Selecting a Location to Save User Profiles&rdquo; and &ldquo;Setting Permissions for User Profiles&rdquo; earlier in this document.) If your implementation stores user profiles within users&rsquo; home directories, make the profile directory a subdirectory of the user&rsquo;s home directory. (Note that this approach precludes the use of the %USERNAME% variable.) To prevent the share from being browsable, append &ldquo;$&rdquo; to the share name.</p>
<p>
If this will be a domain user or if this will be a local account for a  Windows NT Server, use User Manager for Domains to create the account. If this will be a Windows NT 4.0 Workstation account, use the version of User Manager included in the Administrative Tools program group. Refer to your operating system documentation and online Help for procedures when using these tools. (Note that for this example, the user account is <i>mydomainuser</i>.) </p>
<p>
Enter the User Profile path. This is the location where the User Profile will be stored, for example: <i>\\myserver\myshare\mydomainuser</i>.</p>
<p>
Or, if the profile is being stored within the user&rsquo;s home directory, use: <i>\\myserver\myshare\MyUsersHomeDir\profile.</i></p>
<p>
Determine if an extension needs to be appended to the User Profile path. If it will be mandatory that the user reads the profile from the server, and if logon will be denied unless this is the case, add the extension .<i>man</i> to the User Profile path; for example: <i>\\myserver\myshare\mydomainuser.man</i>.</p>
<p>
Use User Manager to create an account for establishing the template profile. So that you can easily identify this account, we recommend that it be called <i>TemplateUser</i>. </p>
<p>
Using the template account (TemplateUser), log on to the local machine or domain. A new directory with the same name as the user name created in Step 2 will be created in the %systemroot%\Profiles directory when you first log on. For example, if the user name is TemplateUser, the resulting directory name will be %systemroot%\Profiles\TemplateUser. </p>
<p>
Modify any items that need to differ from the current default (for example, you may choose to modify the background color or bitmap, shortcuts on the desktop, and View options in My Computer). </p>
<p>
Log off, and then log back on to the same computer using an account with administrative privileges.</p>
<p>
In the <i>\\server\share</i> from Step 1, create the directory structure you specified as the path in Step 3. For example, you would need to create the directory <i>mydomainuser</i> under \<i>\myserver\myshare</i>. Or, if the profile is stored in the user&rsquo;s home directory, you would need to create the directory structure <i>\mydomainuser\profile</i> under <i>\\myserver\myshare</i>. </p>
<p>
If you appended the .man extension to the User Profile path in Step 4, append the .man suffix to the directory name for the folder where the profile will be stored. The .man extension identifies a Windows NT 4.0 mandatory profile that must be accessible for the user to logon. For example, if the user name is <i>mydomainuser</i>, the path to the mandatory profile would be <i>\\myserver\myshare\mydomainuser.man. </i></p>
<p>
If you also have a mandatory Windows NT <i>3.5x</i> profile for the user, use the .pdm extension in place of the .man extension (for example, <i>\\myserver\myshare\mydomainuser.pdm</i>). The .pdm extension is required because the profile folder cannot have the same name as the  Windows NT <i>3.5x</i> User Profile located in the same parent folder. </p>
<p>
From the Windows NT-based machine hosting the template profile to be used, log on as an administrator.</p>
<p>
From the Control Panel, click <b>System</b>. From the User Profiles page, select the profile to be copied and use the <b>Copy To</b> option to enter the path of the directory you created in Step 9.</p>
<p>
Modify the permissions to allow the user or group to use the profile. To do this, click the <b>Change</b> button, select the account, and click <b>OK</b>. You can select any group or specific user when setting the permissions; however only the user or group specified will be able to use the profile.</p>
<p>
The profile&mdash;including the folder trees and the NTuser.xxx file originally included with the profile&mdash;is written to the location you designated. The permissions are also encoded into the binary NTuser.xxx file. </p>
<p>
In the directory that the profile was copied to in Step 3, check the NTUSER.xxx file for the .man extension. If the extension is .dat, the profile will still be modifiable. Change the extension to .man if necessary.</p>
<p>
<b>NOTE</b>S:</p>
<p>
When entering the path to the target directory, you can use universal naming convention (UNC) names. However, if you are going to use the Browse function to locate the target directory for the profile, it is important that you first map a drive to the \\server\share<u> </u>where the profile will be stored.</p>
<p>
The mydomainuser name shown in Step 2 does not have to be the user&rsquo;s name. Many user accounts or groups can be configured to point to the same profile. Because this is a mandatory profile, this may be the desired use of the profile since the administrator wants all the users in the group to receive the same settings.</p>
<p>
The profile does not need to be stored one directory below the \\server\share. The profile can be nested several directories below, or the profile path can be local.</p>
<p>
If the profile path points to a directory on the local machine, a share is not needed.</p>
<p>
The variable %USERNAME% is replaced by the user name only once in the User Profile path, in User Manager, and it must be the last subdirectory in the path. However, extensions can still be added, such as .usr or .man.</p>
<p>
The %LOGONSERVER% variable can be used for mandatory profiles to provide fault tolerance. Do not place double slashes ( \\) in front of %LOGONSERVER%; doing so will prevent the variable from being read properly. See Microsoft Knowledge Base article Q141714 for more information.</p>
<p>
You can use the TemplateUser account to test changes before making them available to users by copying the adjusted profile directory to test accounts prior to rollout.</p>
<p>
You can select any group or a specific user when setting the permissions. However, only the user or group specified will be able to use the profile. For this reason, it is recommended that the Everyone group be given permission to use template profiles.</p>
<h3><a name="makingroamingprofilemandatoryinwindowsnt4.0"></a>Making a Roaming Profile Mandatory in  Windows NT 4.0</h3>
<p>
You have two options when configuring a mandatory roaming profile: you can change the user&rsquo;s ability to modify the User Profile, or you can change the user&rsquo;s ability to modify the User Profile <i>and</i> enforce the use of the server-based profile at logon. With the second option, the user is not able to log on to the system if the network profile is unavailable. Each of these procedures will be explained more fully below.</p>
<h4><a name="changingusersabilitytomodifyprofile"></a>Changing the User&rsquo;s Ability to Modify a Profile</h4>
<p>
When creating a User Profile or at any time thereafter, you have the option of enforcing whether or not the user can modify the profile by changing the extension on the NTuser.dat file. The NTuser.dat file is located in the root of the user&rsquo;s profile directory. If you change the name of this file to NTuser.man, when Windows NT reads the profile, it marks the profile as read-only, and any changes that the user makes while logged on are not written back to the server-based profile when he or she logs off.</p>
<p>
<b>To change the user&rsquo;s ability to make modifications to the User Profile</b></p>
<p>
Locate the user&rsquo;s profile in the account&rsquo;s User Profile path.</p>
<p>
While the user is logged off, rename the NTuser.dat file to NTuser.man. (Note that if you make this change while the user is logged on, the user&rsquo;s copy of the profile will overwrite your changes, because at the time the user logged on, he or she had permission to overwrite the profile.)</p>
<p>
Be cautious if you use the Explorer interface to make these changes. If you have the &ldquo;Hide file extensions for known file types&rdquo; option enabled (this is the default), be sure to check the properties to be sure that there are not two extensions. For example, say you want to make a profile mandatory and you use Explorer to rename the NTuser.dat file name to NTuser.man. Because of the Hide extensions default, Explorer saves the file as type .man, but does not display the .man extension. Later, you decide to allow the user to make changes again, and through Explorer, you rename the file back to NTuser.dat. However, because Explorer was hiding that part of the file name that determines its type, the only thing you rename is the prefix. The file name is now NTuser.dat.man. To avoid this situation, you can either rename files from the command line or change the behavior of Explorer.</p>
<h4><a name="enforcinguseofserverbasedprofile"></a>Enforcing the Use of the Server-based Profile</h4>
<p>
In addition to enforcing the read-only property of a profile, the administrator can duplicate the functionality that was available in Windows NT <i>3.5x</i> of not allowing the user to log on unless the server profile is available.</p>
<p>
<b>To enforce the use of the server-based profile for a given user:</b></p>
<p>
Append the .man extension to the User Profile path in User Manager as explained in the previous section. (Skip this step for users who have existing Windows NT <i>3.5x</i> profiles and who already have the .man extension appended to their profile paths.)</p>
<p>
If the user already has a Windows NT <i>3.5x</i> mandatory profile on the server, change the name of the folder where the Windows NT 4.0 roaming profile currently exists to <i>foldername</i>.<i>pdm</i>. If the user logs on to a  Windows NT 4.0-based workstation and the User Profile path contains  the .man extension, Windows NT will determine that a mandatory  Windows NT <i>3.5x</i> profile exists and will automatically replace the .man extension with .pdm and will look for the directory path configured in the User Profile path. For example, at logon if the User Profile path is configured to use <i>\\server\share\username.man</i>, Windows NT will look for <i>\\server\share\username.pdm</i> for the correct profile to load.</p>
<p>
If only the Windows NT 4.0 user profile exists, change the name of the folder where the Windows NT 4.0 roaming profile exists to <i>foldername.man</i>. If the user logs on to a Windows NT 4.0-based workstation and the User Profile path contains the extension .man, Windows NT will look for the directory path configured in the User Profile path. If Windows NT does not find the directory, it will replace the .man extension with .pdm, and will check again.</p>
<p>
If you haven't already done so, change the name of the NTuser.xxx file to NTuser.dat. (Refer to the section, &ldquo;Changing the User&rsquo;s Ability to Modify a Profile, &rdquo; in this document.)</p>
<h3><a name="creatingnewroaminguserprofileforwindows95user"></a>Creating a New Roaming User Profile for a  Windows 95 User</h3>
<p>
If you have Windows 95 users in your domain, you can create roaming user profiles for them as well.</p>
<p>
<b>To create a roaming user profile for a Windows 95 user</b></p>
<p>
On the client Windows 95-based computer, start Control Panel, and select <b>Passwords</b>. </p>
<p>
From the User Profiles property page, enable the option that allows users to have individual profiles, and set the Primary Network Logon to <b>Client for Microsoft Networks</b>. </p>
<p>
Reboot the client machine.</p>
<p>
Use User Manager for Domains to create the user account (if it does not already exist). For the user&rsquo;s home directory, specify the location where the User Profile will be stored. An example would be:</p>
<p>
This automatically creates a folder with the user name. If a dialog box is displayed stating that the operation failed, create the folder manually before continuing.</p>
<p>
Decide whether the user will receive a specific profile or if a default will be used instead: </p>
<p>
If the user will receive a specific profile, from the Windows 95-based computer hosting the profile to be used, copy the complete contents of the local Profile folder to the folder created in Step 4. This writes the profile to the destination, including the folder trees and the User.xxx file originally included with the profile.</p>
<p>
If a default profile will be used, no administrative action is required. When the user logs on, the Default User Profile from the local  Windows 95-based machine will be used. At log off, this profile will be written to the user&rsquo;s home directory with any customizations the user has made.</p>
<p>
<b>NOTE</b>S:</p>
<p>
If you need to troubleshoot problems with users not receiving their User Profiles, have the users execute the command: NET USE * /HOME from the command prompt on the client machine. This verifies that the user can access the home directory, and allows the user to verify that the User Profile exists in that folder.</p>
<p>
The profile does not need to be stored one directory below the \\server\share. The profile can be nested several directories below, if desired.</p>
<h3><a name="creatingnewmandatoryuserprofileforwindows95"></a>Creating a New Mandatory User Profile  for Windows 95</h3>
<p>
If you have Windows 95 users in your domain, you can create new mandatory user profiles.</p>
<p>
<b>To create a mandatory user profile for a Windows 95 user:</b></p>
<p>
On the client Windows 95-based computer, start Control Panel, and select <b>Passwords</b>. </p>
<p>
From the User Profiles property page, enable the option that allows users to have individual profiles, and set the Primary Network Logon to <b>Client for Microsoft Networks</b>. </p>
<p>
Reboot the client machine.</p>
<p>
Use User Manager for Domains to create the user account (if it does not already exist). For the user&rsquo;s home directory, specify the location where the User Profile will be stored. An example would be:</p>
<p>
This automatically creates a folder with the user name. If a dialog is displayed stating that the operation failed, create the folder manually before continuing.</p>
<p>
Copy the Template Profile that you are using for mandatory profiles to the user&rsquo;s home directory:</p>
<p>
From the Windows 95-based machine hosting the mandatory, copy the complete contents of the local Profile folder to the folder created previously. This writes the profile to the destination, including the folder trees and the User.xxx file originally included with the profile. </p>
<p>
If you have not already done so, rename the User.dat file to User.man.</p>
<p>
At logon, the user will download the mandatory profile, cache it, and no changes will be written back to the server at log off.</p>
<p>
<b>NOTE</b>S:</p>
<p>
The profile does not need to be stored one directory below the \\server\share. The profile can be nested several directories below, if desired.</p>
<p>
Alternatively, a new profile can be made mandatory by the user logging on, logging off, and the administrator changing the User.dat file to User.man.</p>
<h3><a name="maintaininguserprofileswithcontrolpanelsystemproperties"></a>Maintaining User Profiles with Control Panel  System Properties</h3>
<p>
In Windows NT 4.0, much of the functionality provided by individual tools in Windows NT <i>3.5x</i> has been consolidated in the Control Panel System Properties application. And System Properties, when used in conjunction with the System Policy Editor, provides even greater functionality than Windows NT <i>3.5x</i> delivered. Some of the features of System Properties are described next.</p>
<p>
<b>NOTE</b>: In Windows NT 3.5x, you used the User Profile Editor to modify User Profile properties. In  Windows NT 4.0, this tool has been replaced by a combination of the User Profile structure and System Policies. User Profile Editor is not included in the Windows NT 4.0 package.</p>
<p>
The User Profiles property sheet (shown in the figure below) allows you to view the list of User Profiles. From there you can delete, copy, or modify the profile type for each of the profiles listed. Note that the profiles listed are only for those users who have interactively logged onto the local machine. User profiles that have been created and not used or profiles that are stored for use on remote machines are not included in this list. Furthermore, if a user does not have administrative rights, only that user&rsquo;s profile is listed. Administrators have permissions to see all available profiles.</p>
<h4><a name="deletingprofiles"></a>Deleting Profiles</h4>
<p>
The User Profiles property sheet allows users with administrator privileges to delete unused profiles that still exist on a local computer. (In Windows NT <i>3.5x</i>, this function was available in the Main group of the Windows NT Setup program.) To delete a User Profile, select the profile name and click the <b>Delete</b> button. This deletes the User Profile on the local machine, but it does not delete the associated User Account. Note that sometimes the phrase &ldquo;Account Deleted&rdquo; is present in the list of profiles. These are accounts that were deleted from the User Account Database, but whose profiles still exist on the local computer.</p>
<p>
If you need to delete profiles on remote computers, the Delprof.exe utility available in the <i>Windows NT Server Resource Kit, </i>version 4.0, provides this functionality. Windows NT 4.0 User Profiles can grow quite large and can take up considerable disk space, particularly if several people are using one computer. With Delprof.exe, you can reclaim disk space by removing profiles that are no longer needed. This utility deletes User Profiles on computers running Windows NT, and it can be used on a local or remote computer running  Windows NT 4.0 or earlier. However, because Delprof.exe is Unicode-based, it cannot run on Windows 95.</p>
<p>
<b>NOTE</b>: Delprof.exe will delete everything contained in a user's profile, including settings, colors, and user documents. Please be aware of any user documents that may be deleted before using this tool.</p>
<p>
The syntax of Delprof.exe is as follows:</p>
<pre><code>delprof [/q] [/i] [/p] [/c:\\computername] [/d:days] [/?]</code></pre>
<p>
Where:</p>
<table cols=2>
<tr valign=top>
<td width=126><b>/q</b></td>
<td width=305>Runs Delprof.exe in quiet mode, with no confirmation for each profile to be deleted.</td>
</tr>
<tr valign=top>
<td width=126><b>/I</b></td>
<td width=305>Indicates that Delprof.exe should ignore errors and continue deleting.</td>
</tr>
<tr valign=top>
<td width=126><b>/p</b></td>
<td width=305>Prompts for confirmation before deleting each profile.</td>
</tr>
<tr valign=top>
<td width=126><b>/c:\\computername</b></td>
<td width=305>Specifies a remote computer name on which to run Delprof.exe.</td>
</tr>
<tr valign=top>
<td width=126><b>/d:days</b></td>
<td width=305>Specifies the number of days of inactivity (days is an integer). Profiles with longer inactivity will be deleted.</td>
</tr>
<tr valign=top>
<td width=126><b>/?</b></td>
<td width=305>Displays command-line syntax.</td>
</tr>
</table><br>
<p>
See the <i>Windows NT Server Resource Kit</i> for more information.</p>
<p>
It is important to note that if a user is logged on locally to a machine and then attempts to delete his or her own profile, a message will appear stating that the profile is currently in use and cannot be deleted. The user must log off, log back on using a different account with administrator privileges, and delete the profile. In addition, if a service is running for a particular user account, the same message may appear. If this happens, stop the service and then delete the profile.</p>
<h4><a name="changingprofiletypefromroamingtolocal"></a>Changing the Profile Type from Roaming to Local</h4>
<p>
With the User Profiles Change Type feature, a user can control which copy of the User Profile (local or roaming) is read when he or she logs on. (Note that the user can do this interactively while logged on.) Users do not need administrative privileges to change which profile is used if the profile is not a mandatory profile.</p>
<p>
Valid profile types are:</p>
<p>
<b>Local Profile</b>&mdash;A local profile is maintained on the local computer. This option allows the user to specify that the once &ldquo;roaming&rdquo; profile is now &ldquo;local&rdquo; to this machine. Although the remote profile is still available, if the Local Profile option is selected, the locally cached profile will be used instead. The user should be aware that if he or she makes changes to the profile, those changes will be saved in the locally cached version only and will not be replicated in the server-based profile. Note that the system can choose this selection automatically if the server-based profile is unavailable.</p>
<p>
<b>Roaming Profile</b>&mdash;If the user selects the roaming profile and the roaming profile is available, Windows NT determines whether the server or local copy is newer. If the local copy is newer, the user is asked to choose which copy he or she would like to use. Note that if the system detects a slow network link, the user will be given this same choice of profiles. The Roaming Profile selection is available if:</p>
<p>
There is a valid path specified in the User Profile path portion of the user account properties, and</p>
<p>
The User Profile path is accessible at the time of logon.</p>
<p>
<b>Roaming Profile with &ldquo;Use cached profile on slow connections&rdquo;</b>&mdash;If a user selects this option, he or she is not asked which copy to use with a slow connection. Instead, the system uses the locally cached copy automatically.</p>
<p>
If a user has a roaming profile, it is possible for that user to change the mode to Local and have Windows NT use the local version always, even though the roaming profile is still available. However, a user cannot do this if the system administrator assigns that user a <i>mandatory</i> profile and has added the .man extension to the user&rsquo;s profile path. </p>
<h4><a name="determiningwhichprofileisdisplayed"></a>Determining Which Profile Is Displayed</h4>
<p>
There may be cases where users who have identical names but are from different domains will log on to the same machine. If this occurs, you will notice several directories that start with the same prefix in the %systemroot%\Profiles directory tree. You can use the User Profiles property page to determine which file is associated with which user, as follows: </p>
<p>
Compare the <b>Modified</b> and <b>Size</b> properties to those of the actual directories. The <b>Size</b> property displayed in User Profiles is the total size of the directory residing in the profiles tree, not the size of the NTuser.xxx file alone. Match the directory sizes in the profiles tree to the number displayed on the User Profiles property page.</p>
<p>
If the user is currently logged on, right-click the <b>Start</b> button. If context menus have not been disabled, select the option to Explore and Explorer will open to the profile directory used by that account. </p>
<p>
If you don&rsquo;t know when the user last logged on, look for the NTuser.dat file with a time and date stamp that matches the Modified date displayed in the User Profiles property page.</p>
<h4><a name="copyingprofiles"></a>Copying Profiles</h4>
<p>
Use the User Profiles Copy To button to copy existing profiles from the local machine to another profile directory on the same machine or to a remote server where server-based User Profiles are stored. The Copy To dialog box (see the figure below) performs two functions. First, the <b>Copy profile to</b> option provides a <b>Browse</b> button that enables you to view local and remote drives to select the directory where the profile should be copied. In addition, the dialog provides a <b>Permitted to Use </b>option that allows you to select the user account or group that has permission to use the profile.</p>
<p>
When the permissions are written to the profile, they are stored in the NTuser.xxx file. When a new profile is created, the user that created the profile is given permission to use that profile. However, those with administrator permissions can use the <b>Change</b> button or the Registry Editor to change these permissions. </p>
<p>
When you click the <b>Browse</b> button, the following dialog box appears. It is important to note that this dialog does not allow you to create directories. You must create the required directories before you copy the profile.</p>
<h3><a name="viewingcontentsofprofilesdirectoryonlocalcomputer"></a>Viewing the Contents of the Profiles Directory  on a Local Computer</h3>
<p>
All locally cached versions of User Profiles are stored in the profiles subdirectory of the Windows NT root directory. The profiles subdirectory maintains each user&rsquo;s profile separately by generating a specific directory for each user. Within that directory, the registry hive, NTuser.dat, and the rest of the profile structure folders are kept. If a user is allowed to view context menus or has administrator privileges, the user can right-click the <b>Start</b> button, click the <b>Explore</b> option, and have the Explorer window automatically open to his or her profile directory with the contents displayed. In addition, administrators can click the <b>Explore All Users</b> option to display the All Users profile directory.</p>
<p>
You may notice that in a given user&rsquo;s profile directory, there are more files and directories than those listed in the example above. This may be due to the files and directories created by the user. For example, when the user logs on, if the server-based profile is found to be more recent than the one on the local computer, the entire contents of the User Profile path is copied to the client workstation and is then written back to the server when the user logs off. If the user has saved any documents in the home directory and the home directory is in the user&rsquo;s User Profile path, the documents become part of the User Profile. These documents are downloaded when you log on to the network and written back to the server when you log off the network. Note that this process could slow down the logon process considerably.</p>
<h4><a name="logfilesusedbyprofiles"></a>Log Files Used by Profiles</h4>
<p>
Log files are binary files that track changes to a profile. As changes are made, they are recorded in a log file and then written to NTuser.xxx. If for some reason, the changes cannot be recorded in NTuser.xxx, they are applied at the next logon. When a user makes a change to his or her profile, the change is made to the user's locally cached profile, even if a mandatory profile is in use. (In this case, the changes are not propagated to the server copy and are overwritten the next time the user logs on.) If the user has a roaming User Profile, when the user logs off, the NTuser.dat file is copied to the server and the changes are saved (unless the profile is being used in a local mode). </p>
<h4><a name="thealluserssharedprofile"></a>The All Users Shared Profile</h4>
<p>
The All Users profile directory contains common groups that apply to all users logging on locally to a given workstation. When a user logs on, programs and shortcuts from the All Users profile are also available to the user&mdash;in addition to the user&rsquo;s personal User Profile programs and shortcuts. Note that the All Users profile on a domain controller does not apply to domain users logging on at remote workstations. The All Users profile is workstation-specific and contains the common groups for just that computer. If you want to specify programs, shortcuts, or directories to be used by everyone who logs on to a specific workstation, you should place these in the All Users profile directory. </p>
<p>
If you need to establish domain-wide common groups and settings, use the System Policy Editor to modify registry entries on remote workstations so that they point to server directories for common groups, as opposed to pointing to the local All Users profile. Later, if you need to remove the domain-wide settings and have remote users point to the All Users profile from the local workstations once again, you&rsquo;ll need to change the default path used in the System Policy Editor to:</p>
<pre><code>%systemroot%\Profiles\All Users\Start Menu\Programs
</code></pre>
<p>
Refer to the System Policy portion of this guide for specific procedures.</p>
<h4><a name="defaultusertemplateprofiles"></a>Default User Template Profiles </h4>
<p>
During Windows NT 4.0 Workstation installation, the setup program creates a generic User Profile, the <i>Default User</i>, and saves it in a folder in the profiles directory. These default settings define an environment for new users who log on to the computer locally or who log on to a domain that does not contain a network Default User profile. When a new user logs on, a profile directory is created for that user, and the default settings are written to the new user&rsquo;s directory. (The profile may or may not then be customizable, depending upon how the administrator has configured profiles.) </p>
<p>
In Windows NT 4.0, administrators have the option of generating a network Default User profile that, if present, will be used before the local Default User profile is used. With the original retail release of Windows NT 4.0, workstations downloaded this network Default User profile and the most recent NTconfig.pol file, and cached them in the local Default User (Network) and Policy folders, respectively. Then, instead of automatically downloading these from the server whenever they were needed, the logon process compared the time/date/size stamps of the two versions, and if they were the same, used the cached versions without performing another download. With Windows NT 4.0 Service Pack 2, however, the System Policy file, NTconfig.pol, is downloaded during each logon. (The profile functionality remains unchanged&mdash;the profile is downloaded only if the local copy is out of date.)</p>
<h4><a name="profilenamesstorageinregistry"></a>Profile Names and Storage in the Registry </h4>
<p>
Windows NT 4.0 records which profile should be used by which user by placing registry keys for the user&rsquo;s security ID (SID) in the registry in:</p>
<pre><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList
</code></pre>
<p>
Each user who has logged on to the local machine will have a SID recorded here in a subkey, with a value that contains the path to that user&rsquo;s local profile, <i>ProfileImagePath</i>. Should multiple users with the same account name log on to the network, separate distinct profiles are created for each. For example, if multiple users with the account name John Smith log on to the computer, the first John Smith is assigned a folder named <i>JohnSmith. </i>Subsequent users with the same name are assigned folders named <i>JohnSmith</i> with a numerical suffix appended, for example <i>JohnSmith.000</i>, <i>JohnSmith.001</i>, and so forth.</p>
<h3><a name="manuallyadministeringuserprofilethroughregistry"></a>Manually Administering a User Profile through the  Registry</h3>
<p>
As system administrator, you may need to change a given setting to avoid unnecessary user interaction, to make modifications before setting the profile to mandatory, or to add custom registry entries. In addition, you may need to modify the Default User Profile on a computer before new users log on and use it as the template. You can open a specific user&rsquo;s profile or the Default User Profile and customize it manually as explained in the procedure below.</p>
<p>
<b>NOTE</b>: Make sure that the user is not logged on before using this procedure. If the user is logged on while changes are made, the changes will be overwritten by the user&rsquo;s preferences because profile settings are saved at log off.</p>
<p>
As discussed earlier, the NTuser.dat file contains all of the registry settings located in HKEY_CURRENT_USER. As system administrator, you can modify the data contained in the NTuser.dat portion of the profile by loading the hive into the registry. </p>
<p>
<b>To manually customize a User Profile:</b></p>
<p>
Locate the profile to be modified.</p>
<p>
If the profile is a server-based profile, locate the \\<i>server\share\username</i> and determine the extension on the NTuser.xxx file.</p>
<p>
If the profile is a local profile, locate the <i>%systemroot%\Profiles\username</i> directory, and determine the extension on the NTuser.xxx file.</p>
<p>
If you need to edit the Default User Profile, locate the <i>%systemroot%\Profiles\Default</i> User directory, and determine the extension on the NTuser.xxx file.</p>
<p>
If you need to edit the Network Default User Profile, locate the Default User folder in the NETLOGON share of the domain controllers that are doing user authentication, and determine the extension on the NTuser.xxx file. If there is more than one domain controller and directory replication is ensuring that the &ldquo;Default User&rdquo; profile is the same on all domain controllers, open only the profile on the domain controller which is the export server.</p>
<p>
Start Regedt32.exe, and select the <b>HKEY_USERS on Local Machine</b> window. Highlight the root key of HKEY_USERS.</p>
<p>
From the <b>Registry</b> menu, select Load Hive.</p>
<p>
Browse for the directory identified in Step 1, and select the NTuser.xxx file located in that directory. </p>
<p>
A dialog will prompt you to enter a Key Name. You can use any value, but you must remember this value so that you can select it during the unload process. For this reason, we recommend that you use the user name. </p>
<p>
Click <b>Enter.</b> This adds the profile registry hive as a subkey to HKEY_USERS, as shown in the illustration below.</p>
<p>
Edit the existing values as necessary.</p>
<p>
After completing the changes, highlight the root of the user&rsquo;s profile registry key, and from the <b>Registry</b> menu, select <b>Unload Hive.</b> This saves the changes to the user&rsquo;s profile. (When you first selected Load Hive, the key was mapped to the file selected in the Open dialog. A Save As option is therefore unnecessary.)</p>
<h4><a name="modifyingdefaultuserprofile"></a>Modifying the Default User Profile</h4>
<p>
To modify a Windows NT-based workstation&rsquo;s Default User Profile settings or to modify the Network Default User Profile, load the NTuser.xxx hive into the registry as outlined above, make the necessary changes, and unload the hive (this automatically saves the changes). </p>
<p>
The workstation Default User Profile is located in the <i>\%systemroot%\Profiles\Default User</i> directory.</p>
<p>
To make changes to the Network Default User Profile, use the  NTuser.xxx file from the scripts export directory  <i>(%systemroot%\system32\repl\export\scripts</i>) of the domain  controller that is the export server for the domain. Any changes  that you make to this file will be replicated to the other domain  controllers (which are import servers).</p>
<p>
To provide users with a Default User Profile that contains custom shortcuts, folders, and files that are not centrally managed, place the icons in the appropriate folder within the Default User Profile. New users will receive the shortcuts, folders, and files as part of their new profiles. For example, if you want each new user that logs on to a given computer to receive a folder called &ldquo;My Storage&rdquo; on the desktop, just create this folder in the path:</p>
<p>
<i>\%systemroot%\Profiles\Default User\Desktop.</i></p>
<h3><a name="upgradingwindowsnt3.5xserverbasedprofilestowindowsnt4.0roamingprofiles"></a>Upgrading Windows NT <i>3.5x</i> Server-based Profiles to Windows NT 4.0 Roaming Profiles</h3>
<p>
When you upgrade Windows NT <i>3.5x</i> roaming profiles (.usr profiles), you do not need to change anything in the profile path configured in the user account. When the user logs on to a Windows NT 4.0-based machine and the profile is found to be a Windows NT <i>3.5x</i> profile, a process automatically looks for the equivalent Windows NT 4.0 profile. If the profile isn&rsquo;t found, a conversion process creates a new Windows NT 4.0 profile using the settings established in the Windows NT <i>3.5x</i> profile. </p>
<p>
During the conversion process, Windows NT 4.0 creates a directory for the new profile in the same location as the existing Windows NT <i>3.5x</i> profile. The resulting directory has a .pds extension, which stands for Profile Directory Structure, rather than the previous Windows NT <i>3.5x</i> .usr extension. For example, if the User Profile path for the Windows NT <i>3.5x</i> user <i>mydomainuser</i> is <i>\\myserver\myshare\mydomainuser.usr</i>, and the user logs on to a Windows NT 4.0-based machine, the profile directory <i>mydomainuser.pds</i> would be created within <i>\\myserver\myshare.</i></p>
<p>
This approach allows the user to log on to the network from either a  Windows NT <i>3.5x</i> or 4.0-based workstation. If the user were to log on from a Windows NT <i>3.5x</i>-based computer, the profile path would direct the  Windows NT <i>3.5x</i>-based machine to the User Profile used prior to the  Windows NT 4.0 upgrade. If the user then moved to a Windows NT 4.0-based computer, the user&rsquo;s Windows NT-based workstation would recognize that the profile contained Windows NT <i>3.5x</i> syntax, would replace the .usr with .pds, and would then use that string to locate the Windows NT 4.0 profile. The resulting Windows NT 4.0 structure will be the Windows NT 3.51 profile (now NTuser.xxx) and the Default User Profile folders.</p>
<p>
It is important to emphasize that the Windows NT <i>3.5x</i> profile is not deleted&mdash;it is still available to the user should they ever log on from a Windows NT <i>3.5x</i>-based computer. It is also important to note that the settings for these two profiles are completely independent; changes made to the  Windows NT <i>3.5x</i> profile will not be reflected in the Windows NT 4.0 profile, and vice versa.</p>
<p>
<b>NOTE</b>: As an administrator, if you review the directory structures in the share where users&rsquo; roaming profiles are stored, and no .pds or .pdm extensions are appended, this is normal. No extension is appended to roaming profile directories that are new to Windows NT 4.0. These extensions are only added when profiles are migrated from Windows NT 3.5x to 4.0, or when the administrator creates a new Windows NT 4.0 mandatory profile that requires a successful logon.</p>
<h3><a name="upgradingwindowsnt3.5xmandatoryprofilestowindowsnt4.0mandatoryprofiles"></a>Upgrading Windows NT <i>3.5x</i> Mandatory Profiles to  Windows NT 4.0 Mandatory Profiles</h3>
<p>
Upgrades of Windows NT <i>3.5x</i> mandatory profiles to Windows NT 4.0 cannot be done automatically. This is because the same restrictions that prevent a user from saving any changes to his or her profile also restricts the system&rsquo;s ability to generate a new Windows NT 4.0 mandatory profile from an existing profile.</p>
<p>
When you upgrade a Windows NT <i>3.5x</i> mandatory profile, the profile path does not need to be modified. However, you will need to create a new mandatory profile with the same desired settings. To create the mandatory profile, you can remove the mandatory extension from the old profile and force a conversion, or you can create the new profile from a template. Both procedures are explained below.</p>
<p>
<b>To create a mandatory profile from the old profile:</b></p>
<p>
Replace the .man extension on the existing mandatory profile with the extension .usr.</p>
<p>
Change the extension on the user&rsquo;s profile path from .man to .usr.</p>
<p>
Allow the user to log on. This permits the conversion to take place. </p>
<p>
Have the user log off. This creates a directory with the name of the profile and a .pds extension.</p>
<p>
Change the .pds folder extension to .pdm and change the user&rsquo;s profile path back to .man.</p>
<p>
Rename the NTuser.dat file to NTuser.man.</p>
<p>
To create the profile from an existing template profile:</p>
<p>
In the <i>\\server\share</i> specified in the User Profile path, create a folder with the directory name of the location where the profile is stored. Use the .pdm extension for this directory name. For example, if the user name is  <i>domainuser</i>, the directory name would be <i>\\server\share\domainuser.pdm</i>.</p>
<p>
On the Windows NT-based computer hosting the profile, log on as an administrator and map a drive to the <i>\\server\share</i> where the profile will be stored. </p>
<p>
From the Control Panel, click System.</p>
<p>
On the User Profiles page, select the profile to be copied. Use the Copy To option to select the user&rsquo;s folder created in Step 1, modify the permissions to reflect the proper account, and click OK.</p>
<p>
The profile is now written to the designated location, including the folder trees and the NTuser.xxx file originally included with the profile. The permissions are also encoded into the binary NTuser.xxx file.</p>
<p>
In the directory that the profile was copied to, check the NTuser.xxx file for the .man extension. If the extension is .dat, the profile will still be modifiable. Change the extension to .man, if necessary.</p>
<p>
Note that because the User Profile was saved into a directory with a .pdm extension, both the Windows NT <i>3.5x</i> and Windows NT 4.0 profiles exist on the server. A user can log on from either a Windows NT <i>3.5x</i> or Windows NT 4.0-based computer, and the appropriate profile will be used.</p>
<h3><a name="extractinguserprofileforuseonanotherdomainormachine"></a>Extracting a User Profile for Use on Another  Domain or Machine</h3>
<p>
As explained previously in this document, a user is given explicit permissions to use a profile, and these permissions can be created and controlled by an administrator or generated automatically by the system when the user first logs on.</p>
<p>
If a profile has permissions that differ from those needed by the user (for example, if the profile was created for a user on a different domain), the profile permissions must be changed to function correctly. As an example, suppose you have a Windows NT-based workstation that you would like to have join the domain, but you want the user to be able to retain his or her profile settings. The Windows NT-based workstation is currently a part of the WORKER workgroup and will be joining the domain BIGDOMAIN.</p>
<p>
<b>To change the profile:</b></p>
<p>
Log on to the computer as an administrator, and create a local account that will be used only temporarily to house the profile during the conversion process.</p>
<p>
Log on as a temporary user and immediately log off. This will create a subdirectory underneath the <i>%systemroot%\Profiles</i> directory with the name of the account that logged on.</p>
<p>
Log back on as an administrator, and configure the workstation to join the domain. </p>
<p>
After the workstation has joined the domain, reboot the computer.</p>
<p>
After the machine restarts, log on as the user from the domain that will need the converted profile, and then log off. This sets up the directory structure needed to complete the conversion process.</p>
<p>
Log back on as an administrator, and copy the profile structure, including the NTuser.xxx file and all subdirectories, from the directory that stored the workgroup user&rsquo;s profile to the subdirectory created for the temporary user in Step 2.</p>
<p>
From the Control Panel, click System.</p>
<p>
On the User Profiles property page, select the temporary user profile, and click Copy To. Browse under <i>%systemroot%\Profiles</i> to locate the subdirectory that contains the profile for the domain user that logged on in Step 5. Click OK and then click the Change button for the permissions. </p>
<p>
Select the domain user who will use the profile. Click OK to copy the profile.</p>
<p>
Log off and log on as the domain user. The profile settings should now be available to that user.</p>
<p>
<b>NOTE</b>: Alternatively, you can copy the profile and use the instructions from the section &ldquo;Encoding Permissions in the User Profile&rdquo; to change the permissions. However, this requires that you manually edit the registry.</p>
<h3><a name="creatingprofileswithoutuserspecificconnections"></a>Creating Profiles Without User-Specific Connections</h3>
<p>
In some cases, you may want to create profiles that include preconfigured persistent connections. However, if you need to supply alternate credentials when you create the template profile, this can cause problems for users later when the profile is used.</p>
<p>
Information about persistent connections is stored in the registry location HKEY_CURRENT_USER\Network. This key has subkeys that list the persistent drive connections by drive letter. For each of these subkeys, there is a value of <i>UserName</i>. If alternate credentials must be supplied to make the connection, those credentials are also stored here. Note that this includes only the domain and user account name; the password is not included. When the user receives this profile and logs on, Windows NT attempts to reconnect the drive, but the alternate credentials are sent rather than those of the logged on user.. Note that if the <i>UserName</i> value contains a blank string, the credentials of the logged on user are sent (which is the desired behavior in this case). </p>
<p>
To avoid inadequate credentials or wrong credentials being sent, use one of the following approaches:</p>
<p>
Avoid having to supply alternate credentials when you create the connections to network resources in the shared profile by granting the user creating the template profile sufficient permissions in advance.</p>
<p>
Before modifying the profile to be a mandatory profile, run a REGINI script that removes the credentials from the <i>UserName</i> value. Do not delete the value, only the string data.</p>
<h3><a name="troubleshootinguserprofileswithuserenv.logfile"></a>Troubleshooting User Profiles with the UserEnv.log File</h3>
<p>
The UserEnv.log is an invaluable tool for troubleshooting the process of loading and unloading User Profiles. Each step in the User Profile process is recorded in the log, including informational and error-related messages. </p>
<p>
The <i>checked</i> version of the UserEnv.dll is the same dynamic link library (.dll) as the retail version, except that it contains debug flags that you can set and use with the kernel debugger. This file, which is included in both the  Windows NT Device Driver Kit (DDK) and the Windows NT Software Development Kit (SDK), when used in conjunction with a registry entry, generates a log file that can be used in troubleshooting and debugging problems with roaming profiles and system policies on Windows NT 4.0 clients. </p>
<p>
<b>To enable logging:</b></p>
<p>
Rename the file UserEnv.dll in the <i>%systemroot%\SYSTEM32</i> directory to UserEnv.old or to a unique name of your choice.</p>
<p>
Copy the checked version of UserEnv.dll to the  <i>%systemroot%\SYSTEM32</i> directory of the client machine that you want to debug. The checked version of the UserEnv file must match the version of the operating system and Service Pack installed on the client computer. </p>
<p>
Start REGEDT32 and locate the following path:</p>
<p>
  HKEY_LOCAL_MACHINE</p>
<p>
    \SOFTWARE</p>
<p>
      \Microsoft</p>
<p>
        \WindowsNT</p>
<p>
         \CurrentVersion</p>
<p>
          \Winlogon</p>
<p>
Create a new value called UserEnvDebugLevel as a REG_DWORD<i> </i>type. Assign the hex value 10002.</p>
<p>
Reboot the computer.</p>
<p>
Logging information will be recorded in the root directory of the C drive as UserEnv.log. You can use Notepad to view the log file. A sample log is provided next.</p>
<p>
<b><u>Sample Log </u></b></p>
<pre><code>=========================================================
LoadUserProfile. : Entering, hToken = &lt;0xac&gt;, lpProfileInfo = 0x12f4f4
LoadUserProfile: lpProfileInfo-&gt;dwFlags = &lt;0x2&gt;
LoadUserProfile: lpProfileInfo-&gt;lpUserName = &lt;administrator&gt;
LoadUserProfile: NULL central profile path
LoadUserProfile: lpProfileInfo-&gt;lpDefaultPath = &lt;\\DfsES\netlogon\Default User&gt;
LoadUserProfile: lpProfileInfo-&gt;lpServerName = &lt;\\DfsES&gt;
LoadUserProfile: lpProfileInfo-&gt;lpPolicyPath = &lt;\\DfsES\netlogon\ntconfig.pol&gt;
RestoreUserProfile: Entering
RestoreUserProfile: Profile path = &lt;&gt;
RestoreUserProfile: User is a Admin
IsCentralProfileReachable: Entering
IsCentralProfileReachable: Null path. Leaving
GetLocalProfileImage: Found entry in profile list for existing local profile
GetLocalProfileImage: Local profile image filename = &lt;%SystemRoot%\Profiles\Administrator&gt;
GetLocalProfileImage: Expanded local profile image filename = &lt;D:\WINNTDfs\Profiles\Administrator&gt;
GetLocalProfileImage: Found local profile image file ok &lt;D:\WINNTDfs\Profiles\Administrator\ntuser.dat&gt;
Local profile is reachable
Local profile name is &lt;D:\WINNTDfs\Profiles\Administrator&gt;
RestoreUserProfile: No central profile. Attempting to load local profile.
RestoreUserProfile: About to Leave. Final Information follows:
Profile was successfully loaded.
lpProfile-&gt;szCentralProfile = &lt;&gt;
lpProfile-&gt;szLocalProfile = &lt;D:\WINNTDfs\Profiles\Administrator&gt;
lpProfile-&gt;dwInternalFlags = 0x102
RestoreUserProfile: Leaving.
UpgradeProfile: Entering
UpgradeProfile: Build numbers match
UpgradeProfile: Leaving Successfully
ApplyPolicy: Entering
ApplyPolicy: Policy is turned off on this machine.
LoadUserProfile: Leaving with a value of 1. hProfile = &lt;0x60&gt;
=========================================================</code></pre>
<h2><a name="systempolicyanintroduction"></a>System Policy &ndash; An Introduction</h2>
<p>
A System Policy is a set of registry settings that defines the computer resources available to an individual or to a group of users. Policies define the various facets of the desktop environment that a system administrator needs to control, such as which applications are available, which applications appear on the user&rsquo;s desktop, which applications and options appear in the <b>Start</b> menu, who can change their desktops and who cannot, and so forth. System policies can be implemented for specific users, groups, computers, or for all users. You create system policies with the System Policy Editor.</p>
<p>
The System Policy Editor is a graphical tool provided with Windows NT Server 4.0 that allows you to easily update the registry settings to generate the correct environment for a particular user or group of users. The System Policy Editor creates a file that contains registry settings which are then written to the user or local machine portion of the registry database. User Profile settings that are specific to a user who logs on to a given workstation or server, are written to the registry under HKEY_CURRENT_USER. Likewise, machine-specific settings are written under HKEY_LOCAL_MACHINE. </p>
<p>
When you apply a System Policy, the new policy overwrites the existing registry settings, thus giving you, as system administrator, the ability to set restrictions for the client machine and user. When a user logs on to a  Windows NT 4.0 computer, the user&rsquo;s profile is loaded first and then the System Policy is downloaded. Any registry settings that you have reconfigured, whether these are machine-specific changes or are specific to the user logging on, are changed before the user receives control of the desktop. Note that System Policy changes are not dynamic; if you make a change to the policy, affected users must log off and log back on so that the new policy can be downloaded and applied.</p>
<p>
With a properly implemented policy, you can customize the user&rsquo;s environment to your specifications, despite the user&rsquo;s preferences and regardless of where he or she logs on. The settings available in the System Policy Editor provide a variety of options for managing the user environment. For a detailed list of these options, see the section &ldquo;Registry Keys Modified by the System Policy Editor Default Templates.&rdquo;</p>
<h3><a name="systempolicyfiles"></a>System Policy Files</h3>
<p>
Policies can define a specific user&rsquo;s settings or the settings for a group of users. The resulting policy file contains the registry settings for all users, groups, and computers that will be using the policy file. Separate policy files for each user, group, or computer are not necessary.</p>
<p>
If you create a policy that will be automatically downloaded from validating domain controllers, you should name the file <b>NTconfig.pol</b>. As system administrator, you have the option of renaming the policy file and, by modifying the Windows NT-based workstation, directing the computer to update the policy from a manual path. You can do this by either manually changing the registry or by using System Policy. This path can even be a local path such that each machine has its own policy file, but if a change is necessary to all machines, this change must be made individually to each workstation.</p>
<p>
When a user of a Windows NT 4.0-based workstation logs on, if the  Windows NT 4.0-based machine is working in Automatic mode (which is the default), the workstation checks the NETLOGON share on the validating domain controller (DC) for the NTconfig.pol file. If the workstation finds the file, it downloads it, parses it for the user, group, and computer policy data, and applies it if appropriate. If a user logs on to a machine that has a computer account in a resource domain, the search for the NTconfig.pol file is redirected to the validating domain controller in the account domain. In this situation, the Windows NT 4.0-based workstation has a secure communication channel established to a domain controller of the resource domain. The Windows NT-based workstation sends the user&rsquo;s logon request over this communication channel, and expects a response the same way. The domain controller in the resource domain receives this request, forwards it to a domain controller in the user&rsquo;s account domain, and waits for a response. Once the domain controller in the resource domain receives this response from the account domain&rsquo;s DC, it returns the authentication request to the client machine, including the validating domain controller&rsquo;s name from the account domain. The Windows NT-based workstation now knows where to look for the NTconfig.pol file.</p>
<h3><a name="policyreplication"></a>Policy Replication</h3>
<p>
If you implement a System Policy file for Windows NT users and computers and you intend to use the default behavior of Windows NT, be sure that directory replication is occurring properly among all domain controllers that participate in user authentication. With Windows NT, the default behavior is for the computer to check for a policy file in the NETLOGON share of the validating domain controller. If directory replication to a domain controller fails and a Windows NT-based workstation does not find a policy file on that server, no policy will be applied and the existing settings will remain, possibly leaving the user with a nonstandard environment or more capabilities than you want that particular user to have.</p>
<h3><a name="howpoliciesareapplied"></a>How Policies Are Applied</h3>
<p>
Once located, policies are applied as follows:</p>
<p>
If the policy file includes settings for the specific user account, those are applied to the HKEY_CURRENT_USER registry key. Other group settings are discarded, even if the user is a member of the group, because the user settings take precedence.</p>
<p>
If a user-specific policy is not present, and Default User settings exist, the Default User settings are applied to the HKEY_CURRENT_USER registry key.</p>
<p>
If no user specific settings are present, and group settings exist, the user&rsquo;s group membership in each of those groups is checked. If the user is a member of one or more groups, the settings from each of the groups&mdash;starting with the lowest priority and continuing through the highest priority&mdash;are applied to the HKEY_CURRENT_USER key in the registry. </p>
<p>
<b>NOTE</b>: If a setting is ignored (gray) in the group settings, but the same setting is marked as enabled or disabled in the Default User settings, the Default User setting are used. The Default User settings take precedence over only those settings that are ignored in the group settings.</p>
<p>
If the policy file includes settings for the specific computer name, these are applied to the HKEY_LOCAL_MACHINE registry key. Otherwise, the Default Computer settings are applied. This process is independent of the user account for the user who is currently logged on. All users receive these settings when they use this computer.</p>
<p>
<b>NOTE</b>S:</p>
<p>
Group policies do not operate in a NetWare only environment, because Windows NT checks for Windows NT global groups only, not NetWare groups.</p>
<p>
If an administrator logs on, a policy is in effect, no explicit settings exist for the administrative account, and the Default User settings are present, the administrator will receive the settings of the Default User. Administrative accounts are not exempt from policies. This should be a key factor to consider when implementing policies.</p>
<p>
The System Policy Editor provides a hierarchical Group Priority dialog that helps you see and manage the order in which group policies are applied. The next illustration shows the dialog and explains these priorities.</p>
<h3><a name="additionalimplementationconsiderations"></a>Additional Implementation Considerations</h3>
<p>
Although a properly implemented policy can simplify system administration in the long term, such policy requires careful planning. Before you implement system policies, consider the following:</p>
<p>
Would administration be simplified by defining group settings rather than creating settings for individual users?</p>
<p>
Where are the computers located in your network? Is geographic location an important aspect of your network&rsquo;s design&mdash;for example, is your network distributed over a large geographic area? If so, computers from a certain locale may benefit from retrieving policy files from a machine that is close at hand, as opposed to using a domain controller that may not be nearby.</p>
<p>
What type of restrictions do you want to impose on users?</p>
<p>
Will users be allowed to access locally installed common group applications, or will these be overridden by administrator-defined program groups, desktop icons, <b>Start</b> menu programs, and so forth?</p>
<p>
What other options are available if you simply want to restrict access to a specific icon or file? Would modifying NTFS permissions be more effective?</p>
<p>
Will you be controlling computer-specific settings only, and not user settings?</p>
<p>
If after considering these issues, you conclude that System Policies will simplify administration of your system, use the System Policy Editor to create the appropriate individual and/or group policies, as explained in the next section.</p>
<h2><a name="thesystempolicyeditor"></a>The System Policy Editor</h2>
<p>
The System Policy Editor is a graphical tool that allows you to easily update the registry settings to implement a System Policy. The System Policy Editor is included with Windows NT Server 4.0, but you can install it on Windows NT Workstation-based machines and on Windows 95-based machines as well. </p>
<p>
Note that a policy file is valid only for the platform on which it was created. For example, if you run Poledit.exe on a Windows 95-based machine, and you save the policy file, the file will be written in a format that can be interpreted by Windows 95-based machines only. The same is true when you create policy files on Windows NT-based machines. As a result, Windows 95 and  Windows NT policy files are not interchangeable. </p>
<p>
After you complete the installation, the administrative tools group includes the System Policy Editor.</p>
<h3><a name="installingsystempolicyeditoronwindowsntworkstation"></a>Installing the System Policy Editor on a Windows NT  Workstation</h3>
<p>
You have two options when installing the System Policy Editor on a  Windows NT Workstation-based computer. You can </p>
<p>
Run the Setup.bat file from the Windows NT 4.0 CD-ROM \Clients\Svrtools\Winnt directory, or </p>
<p>
Copy the System Policy Editor executable, Poledit.exe, and template files to the workstation. The template files have an .adm extension, and are located in the <i>%systemroot%\INF</i> directory, which is hidden by default.</p>
<h3><a name="installingsystempolicyeditoronwindows95computer"></a>Installing the System Policy Editor on a Windows 95  Computer</h3>
<p>
When you install the System Policy Editor on a Windows 95-based computer, the installation process modifies the Windows 95 registry to allow system policies to function correctly. You can install the policy editor from the Windows 95 Upgrade or Retail compact disc, or you can install the editor that ships with Windows NT Server 4.0. </p>
<p>
<b>To install the System Policy Editor from the Windows 95 compact disc:</b></p>
<p>
Insert the Windows 95 Upgrade compact disc in your CD-ROM drive.</p>
<p>
Open Control Panel, and click <b>Add/Remove Programs.</b></p>
<p>
Click the <b>Windows Setup</b> tab, and select <b>Have Disk.</b></p>
<p>
Browse to locate the directory <i>x</i>:\Admin\Apptools\Poledit\ (where <i>x</i> is drive A through Z) on the Windows 95 compact disc.</p>
<p>
Select both <b>Group Policies</b> and the<b> System Policy Editor</b>, and then click <b>OK</b> <b>to Install</b>.</p>
<p>
It is important that you run the setup program as described above. Undesirable results will occur if you merely copy the Policy Editor and related files to the Windows 95-based computer.</p>
<p>
<b>To install the System Policy Editor from a Windows NT 4.0 Server:</b></p>
<p>
Copy the Poledit.exe file from the Windows NT Server 4.0 to the \<i>windows</i> directory of the Windows 95-based machine.</p>
<p>
Copy the Common.adm and Windows.adm files from the Windows NT 4.0-based server to the \<i>windows</i> directory of the Windows 95-based machine.</p>
<p>
Create a shortcut to the System Policy Editor executable (Poledit.exe, located in the \<i>windows</i> directory of the Windows 95-based computer).</p>
<h3><a name="updatingregistrywithsystempolicyeditor"></a>Updating the Registry with the System Policy Editor</h3>
<p>
The System Policy Editor allows you to easily update the registry settings to generate the correct environment for a particular user or group of users. You can use the System Policy Editor in two ways: </p>
<p>
You can open the local registry through the System Policy Editor, and change the settings for the local user and computer. </p>
<p>
You can modify an existing policy file or create a new one to contain the settings that you want to enforce on a per user, per computer, or combined user/computer basis.</p>
<p>
When you open the System Policy Editor in registry mode, you can modify the registry of the local computer without having to use Regedt32.exe or Regedit.exe. However, you can modify only those values exposed by the templates; the System Policy Editor does not give you access to the entire registry.</p>
<h4><a name="systempolicyeditortemplate(.adm)files"></a>System Policy Editor Template (.Adm) Files</h4>
<p>
The System Policy Editor uses administrative (.adm) files to determine which registry settings can be modified. An .adm file is a hierarchical template, and consists of categories and subcategories that dictate which settings are available through the user interface. An .adm file contains the registry locations where changes should be made for a particular selection, additional options for a particular selection, restrictions, and in some cases, the default value for a selection. </p>
<p>
When you run the System Policy Editor and select <b>Policy Template</b> from the <b>Options</b> menu, a window similar to the one shown below appears. This window displays the names of the .adm files that are currently being used. If you need to make changes to custom applications, for example, you can add a template to this list. To ensure that the system uses the latest administrative information, the System Policy Editor reads the custom .adm files each time it starts. </p>
<p>
For detailed instructions when creating .adm files, see the section &ldquo;Creating Your Own Custom .Adm File,&rdquo; later in this document.</p>
<p>
<b>NOTE</b>: The option to Add or Remove will be grayed out if there is a policy file currently open. Close the file in use and then change the template configuration.</p>
<h4><a name="configuringpolicysettings"></a>Configuring Policy Settings</h4>
<p>
The configuration options available to you fall into a tree structure, which is determined by the layout of the .adm file. By navigating through these options, you can select a mode that determines the action that will be taken when the policy file is applied. </p>
<p>
The figure below shows sample user options for the Shell.</p>
<p>
Policies are applied as follows:</p>
<p>
If the box is <b>checked</b>, it is implemented. When the user next logs on, the user&rsquo;s computer conforms to the policy. If the option was checked the last time the user logged on, Windows NT makes no changes.</p>
<p>
If the box is <b>cleared</b>, the policy is not implemented, and if the settings were previously implemented, they are removed from the registry.</p>
<p>
If the box is <b>grayed</b>, the setting is ignored and unchanged from the last time the user logged on. Windows NT does not modify this setting. The grayed state ensures that Windows NT provides quick processing at system startup because it does not need to process each entry every time a user logs on.</p>
<p>
<b>NOTE</b>: When you decide whether the value should be checked or cleared, be careful of the terminology of the setting or unexpected results may occur. For example, the <i>Don&rsquo;t save settings at exit</i> option, when checked, does not allow settings to be saved. If you clear the checkbox, the settings can be saved. </p>
<p>
When you select an option, the pane below it contains other configurable items that relate to the setting you modified, as well as information about the option you selected. </p>
<p>
When administering System Policies, if you specify paths for particular options such as wallpaper, ensure that the paths are consistent across all workstations that will receive the policy file.</p>
<h4><a name="settingfolderpathsbacktodefaults"></a>Setting Folder Paths Back to Defaults</h4>
<p>
If you create a policy file and then change the path to any of the custom shared folders or custom user-specific folders, the change overrides the default setting established in the .adm file. For example, by default a user&rsquo;s program folder path is <i>%USERPROFILE%\Start Menu\Programs.</i></p>
<p>
If the policy file is not modified from the default, this value is not changed for the client computer. However, you can modify this value to point to a server location that contains different shortcuts. To do this, click the option in the System Policy Editor, and specify the path to the folder containing the shortcuts. Once this change is applied, the user will receive the new shortcuts.</p>
<p>
Suppose, however, that you want to restore the user&rsquo;s environment to the state it was in before the change was made. To do this, follow the procedure described next. </p>
<p>
<b>To restore the defaults:</b></p>
<p>
Open the policy file, and click the option to clear the check box. </p>
<p>
Save and close the policy file. </p>
<p>
Reopen the policy file, and click the option to re-enable it. The original setting should be displayed, pointing to the user&rsquo;s local machine.</p>
<p>
<b>NOTE</b>: Be sure to complete all steps; completing Steps 1 and 2 only results in an empty Programs folder on the client machine.</p>
<h3><a name="creatingsystempolicy"></a>Creating a System Policy</h3>
<p>
Before you create a System Policy, decide which settings will be enforced and how the settings will be grouped.</p>
<p>
<b>To create a new System Policy:</b></p>
<p>
On a Windows NT Server-based machine in the domain where the policy file will apply, open the System Policy Editor. From the <b>Start</b> menu, click <b>Programs</b>, then click <b>Administrative Tools (Common)</b>, then click <b>System Policy Editor</b>.</p>
<p>
From the <b>File</b> menu, click <b>New Policy</b>. </p>
<p>
The Default Computer and Default User icons will be displayed. Click the user, computer, or group to be modified.</p>
<p>
<b>NOTE</b>S: </p>
<p>
If you need to add a user, group, or computer, you can copy and paste the settings without having to manually go through each of the entries and make selections. For example, if you have made modifications to User1 and want to create a similar profile for another user (User2), select User1, then from the Edit menu, click Copy. Select User2, then from the Edit menu, click Paste. Make any changes specific to User2 and save your changes. You will be prompted to verify your changes, and then the settings will be applied.</p>
<p>
When you add users or computers to the policy file, they automatically assume the properties of the icons Default User or Default Computer respectively.</p>
<p>
Make changes to the options desired. For more information on each option, see the portion of this guide titled &ldquo;Registry Keys Modified by the System Policy Editor Default Templates.&rdquo;</p>
<p>
From the <b>File</b> menu, click <b>Save As</b> and save the policy file with the appropriate name:</p>
<p>
If workstations will be set to Automatic mode, use the file name  NTconfig.pol.</p>
<p>
If workstations will be set to Manual mode, use the name of your choice.</p>
<p>
If workstations will be set to Automatic mode, place the file in the NETLOGON share of each of the domain controllers that will be performing authentication. To simplify this process, you can use directory replication from Windows NT to replicate the file to the other domain controllers. If you use replication and later make changes to the file, the modified file will be duplicated across validating machines automatically.</p>
<p>
Windows NT-based workstations, by default, are set to download the policy file in Automatic mode. If you modify the setting to specify manual update and to point to a specific machine, you must inform the workstation about this location change. There are two ways to do this:</p>
<p>
Place the policy file in the location specified for manual updates, but maintain a policy file in the NETLOGON share that points to the manual path. Then, leave the Windows NT-based workstation in the default Automatic mode. When the policy file is first downloaded this change will be made, and at next logon and every logon thereafter, Windows NT will go to the new location for policy file updates. </p>
<p>
Visit each Windows NT-based workstation either remotely or locally and make the required registry change to point to the new location. (Depending on the number of workstations affected, this could be very time consuming.)</p>
<p>
Log on to the Windows NT-based workstation to download and enact the policy.</p>
<h3><a name="creatingalternatefolderpaths"></a>Creating Alternate Folder Paths</h3>
<p>
You may need to create shared folders for groups of users who need a common set of tools and shortcuts. Windows NT 4.0 System Policies allows you to create such shared folders. </p>
<p>
<b>To create shared folders and alternate folder paths:</b></p>
<p>
On a specific server, create a folder that contains shortcuts to network applications or to locally installed programs. If you are creating application shortcuts that will point to local paths on Windows NT machines, refer to the section &ldquo;Setting Up Shortcuts for Server-based Profiles.&rdquo;</p>
<p>
Share the folder.</p>
<p>
Using the System Policy Editor, under <i>computername</i> or <i>Default Computer</i>, select the option <b>Custom Shared Folders</b>, then select <b>Custom Shared Program Folder</b>. </p>
<p>
Enable this option. By default the local All Users folder for the workstation will be used, but you can replace the path to point to the folder that you created in Step 1 and 2.</p>
<p>
Save the policy file. When the user logs on, the policy file will be parsed for this information and will replace the common groups from the local machine with the shortcuts, applications, and so forth, from the folder that you created earlier.</p>
<p>
<b>NOTE</b>: This can be done per user for personal program groups and can also be done for other folder settings such as the startup group, Start menu, and desktop icons.</p>
<h4><a name="settingupshortcutsforserverbasedprofiles"></a>Setting Up Shortcuts for Server-based Profiles</h4>
<p>
You may notice that shortcuts created on any computer automatically embed a universal naming convention (UNC) path for the .lnk file, such as </p>
<p>
<code>\\<i>machine</i>\admin$ </code></p>
<p>
This embedded UNC in the link can be a problem when it is copied to a server and used in a server-based profile. By default, such links are resolved to the original location of the file (the <i>absolute</i> path) before any other path is used (these other paths are referred to as <i>secondary</i> or <i>relative</i> paths). In this case, the UNC path to the original file is always reachable, which prevents the link from being resolved via a local path. As a result, the user trying to execute the shortcut will be asked for the administrator's password for the computer on which the link was created. </p>
<p>
This problem was corrected in the latest Microsoft Windows NT 4.0 U.S. Service Pack. After you install the service pack, you can work around the problem by modifying the registry as explained next.</p>
<p>
<b>To resolve links correctly: </b></p>
<p>
Open Registry Editor (Regedit.exe). </p>
<p>
Go to the following key: </p>
<p>
HKEY_Current_User \Software </p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer</p>
<p>
Add the following DWORD value by clicking <b>Edit</b>, <b>New</b>, DWORD </p>
<p>
value: </p>
<p>
LinkResolveIgnoreLinkInfo</p>
<p>
Once entered, double-click this value and set the Value data to 1. </p>
<h3><a name="deployingpoliciesforwindowsnt4.0machines"></a>Deploying Policies for Windows NT 4.0 Machines</h3>
<p>
By default, a Windows NT 4.0-based workstation checks the NETLOGON share of the validating domain controller for the user&rsquo;s logon domain. It is therefore critically important that replication of the NTconfig.pol file take place among the domain controllers performing authentication. If a Windows NT 4.0-based workstation does not locate the policy file on its validating domain controller, it will not check any others.</p>
<p>
You have another option when enforcing policies. The UpdateMode registry setting, configurable through the System Policy Editor, forces the computer to retrieve the policy file from a specific location (expressed as a UNC path), regardless of the user who logs on.</p>
<p>
<b>To retrieve the policy file from a specific location: </b></p>
<p>
Open either the specific machine policy or the Default Computer policy, and navigate through the Network category and System policies update subcategory to reach the Remote update option. </p>
<p>
Check the Remote update box. </p>
<p>
In the Update mode box, select Manual (use specific path). </p>
<p>
In the Path for manual update box, type the UNC path and file name for the policy file.</p>
<p>
Click OK to save your changes.</p>
<p>
The first time the workstation is modified locally via the System Policy Editor or receives a default System Policy file from the NETLOGON share of a domain controller, this location is written to the registry. Thereafter, all future policy updates use the location you specified manually. This is a permanent change until the policy file resets the option to Automatic. The Windows NT 4.0-based computer will never again look at a domain controller to find a policy file until you either change the instruction in the local registry or modify the policy file in the location specified by the manual path to set the mode back to Automatic.</p>
<h3><a name="deployingpoliciesforwindows95machines"></a>Deploying Policies for Windows 95 Machines</h3>
<p>
When creating a system policy file for a Windows 95-based client, you must first install the System Policy Editor on a Windows 95-based computer so that you can create the policy (.pol) file. You cannot run the System Policy Editor on a Windows NT 4.0-based server to generate a .pol file for Windows 95-based clients because a policy file is valid only for the platform on which it was created. For procedures when installing the System Policy Editor on a Windows 95-based computer, refer to the section &ldquo;Installing the System Policy Editor on a Windows 95 Computer&rdquo; earlier in this document.</p>
<p>
After you have created the .pol file, you can enable a Windows 95-based computer to look for and accept system policies as is described below.</p>
<p>
<b>To deploy policies for a Windows 95-based computer:</b></p>
<p>
Open the Control Panel, and click Passwords and then User Profiles.</p>
<p>
To enable User Profiles, select Users can customize and then click OK.</p>
<p>
Check the UpdateMode value in the following registry location:</p>
<p>
HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\Update</p>
<p>
If this value is 0, policies will not be applied. If this value is 1, the Automatic Policy mode is in effect and when the user is validated on the domain, the validating domain controller&rsquo;s NETLOGON share will be checked for the existence of the Config.pol file. If this value is 2, the Manual Policy mode is in effect, and when the user is validated on the domain, the Windows 95-based machine will check the path specified in the value NetworkPath for the existence of the Config.pol file. Note that the default mode for a Windows 95-based machine is Automatic.</p>
<p>
Restart the computer and have the user log on. The policy file will be downloaded from the configured location and applied.</p>
<h3><a name="modifyingpolicysettingsonstandaloneworkstations"></a>Modifying Policy Settings on Stand-Alone Workstations</h3>
<p>
If you need to modify settings of a Windows NT 4.0-based workstation user who is not a member of the domain and thus will not be able to use the policy file located on the domain, you have three options available to you:</p>
<p>
You can create a policy file for stand-alone workstations where users log on locally, or</p>
<p>
You can change policy settings remotely, or</p>
<p>
You can change policy settings locally.</p>
<p>
Procedures for each option are described next. Note that you must have administrator rights to the stand-alone workstations in question.</p>
<p>
<b>To create a policy file for stand-alone workstations:</b></p>
<p>
Log on as administrator, and create a policy file that includes Computer and User objects with appropriate settings for the computer and users respectively. The user objects may include the Default User or user accounts from the local workstation, but global group objects will be ignored if added to the policy file. Windows NT recognizes machine-specific policy settings for the computer if those are specified in the policy file. </p>
<p>
Place the policy file in a secure directory on the stand-alone computer or on a network share to which the user has at least Read permissions.</p>
<p>
In the workstation registry, locate the UpdateMode value in the following key:</p>
<p>
HKEY_LOCAL_MACHINE</p>
<p>
\SYSTEM</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\Update</p>
<p>
Update the data to a hex value of 2.</p>
<p>
In the same registry subkey, modify the NetworkPath value with the local or UNC path where the policy file resides. If this path does not exist, add it as a data type of REG_SZ. For example, if the policy file is named NTconfig.pol and is placed in the root directory of Windows NT, NetworkPath should contain the path <b>c:\Winnt\Ntconfig.pol</b>.</p>
<p>
Have the user log on to the workstation. Windows NT will read the policy file specified by NetworkPath and then apply the appropriate policy to the computer or to the user.</p>
<p>
<b>NOTE</b>S: </p>
<p>
UNC paths may be used in the <i>NetworkPath</i> value. This is beneficial to those administrators who want to centralize the policy file in use. </p>
<p>
The ability of Windows NT to take advantage of and apply System Policies to local workstation users is not operable in Service Pack 3, but will be available in Service Pack 4 and future service packs. This does not affect the retail build of Windows NT 4.0 and Service Packs 1 and 2, where this feature is operable.</p>
<p>
<b>To change policy settings remotely:</b></p>
<p>
Log on as administrator, open the System Policy Editor, and from the File menu, select Connect. </p>
<p>
Type the computer name of the workstation to be modified, and click Enter. A dialog will appear displaying the user name of the currently logged on user for whom the changes will apply. If the user is not currently logged on, click Cancel. (The user must be logged on for the changes to take effect.)</p>
<p>
If the user is logged on, click OK. </p>
<p>
The icons Local Computer and Local User will be displayed.</p>
<p>
Modify these just as you would modify a normal policy file. Save your changes. The next time the user logs on, the changes made to the computer and the user settings will be in effect on the remote machine.</p>
<p>
To change policy settings locally:</p>
<p>
Log on as an administrator, and copy the Poledit.exe, Common.adm, and Winnt.adm files to the Windows NT-based workstation where the changes for the computer or user need to be made.</p>
<p>
Log on with administrative permissions as the user for whom the modifications will apply.</p>
<p>
Open Poledit.exe and load the templates that were copied to the local computer.</p>
<p>
From the File menu, select Open Registry.</p>
<p>
The icons Local Computer and Local User will be displayed.</p>
<p>
Modify these just as you would modify a normal policy file. Save your changes. The next time the user logs on, these changes will be in effect.</p>
<p>
Close the System Policy Editor and remove this tool from the workstation by deleting the Poledit.exe file and any .adm files used.</p>
<p>
These changes modify the registry entries that control the behavior of  Windows NT on the target computer. A policy file is not created when this procedure is used. This procedure is the same for Windows NT Workstation 4.0 and Windows NT Server 4.0. </p>
<h3><a name="creatingcustom.admfile"></a>Creating a Custom .Adm File</h3>
<p>
The content of this section is also documented in the <i>Windows 95 Resource Kit </i>and the <i>Windows 32-bit Software Developer&rsquo;s Kit</i>, which are available on the Microsoft Developer&rsquo;s Network or through Microsoft Sales.</p>
<p>
This section refers extensively to the following .adm files:</p>
<p>
<i>Common.adm</i>&mdash;This contains registry settings common to both  Windows NT 4.0 and Windows 95.</p>
<p>
<i>Winnt.adm</i>&mdash;This contains registry settings specific to Windows NT 4.0.</p>
<p>
<i>Windows.adm</i>&mdash;This contains registry settings specific to Windows 95.</p>
<p>
<b>To create a custom .adm file:</b></p>
<p>
Create a backup copy of the Winnt.adm file in the <i>%systemroot%\ inf </i>directory.</p>
<p>
Use a text editor to open the Winnt.adm file. The first entry of this file is CLASS <i>xxxx</i>, where <i>xxxx</i> could be either:</p>
<p>
MACHINE = This section includes all entries available in the Local Computer/DefaultComputer icon.</p>
<p>
USER = This section includes all entries available to modify user-specific settings.</p>
<p>
These are the only two classes that are valid within the System Policy Editor. The System Policy Editor checks the syntax of each .adm file when the files are loaded, and displays a message if any errors are found.</p>
<p>
Choose the CLASS in which you want your custom entries to appear.</p>
<p>
Create categories by using the keyword CATEGORY followed by a space and !!<i>variable</i>. The System Policy Editor requires that anything preceded by !! must have a string defined in the [strings] section of the .adm file. This allows the editor to use variables to define long strings of text that will appear in the user interface a single time, even if these strings are used in multiple locations in the .adm file. For example, to open a category you would use:</p>
<pre><code>CATEGORY !!MyNewCategory</code></pre>
<p>
To close the category after filling in the options, you would use:</p>
<pre><code>END CATEGORY      ; MyNewCategory</code></pre>
<p>
These can be nested to create sub-categories as follows:</p>
<pre><code>CATEGORY !!FirstCategory
   CATEGORY !!SecondCategory
     CATEGORY !!ThirdCategory
     ...
     ...
     END CATEGORY ; ThirdCategory
   END CATEGORY   ; SecondCategory
END CATEGORY      ; FirstCategory</code></pre>
<p>
Be sure to specify the text for the variables you used above. In this case, in the [strings] section of the .adm file, you would need to include:</p>
<pre><code>FirstCategory=&rdquo;My First Category&rdquo;
SecondCategory=&rdquo;My Second Category&rdquo;
ThirdCategory=&rdquo;My Third Category&rdquo;</code></pre>
<p>
Within each category, define the registry key that will be modified. To do this, use the keyword KEYNAME followed by the registry path to the key that contains the value you want to change. Note that due to the CLASS you are in, you do not need to specify HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER. For example, you can use:</p>
<pre><code>KEYNAME System\CurrentControlSet\Services\
LanManServer\Parameters</code></pre>
<p>
Identify the policy that specifies which options the user can modify. Use the keyword POLICY for this, followed by <b>!!</b><i>variable</i>. For example:</p>
<pre><code>POLICY !!MyFirstPolicy</code></pre>
<p>
Be sure to define MyFirstPolicy in the [strings] section of the .adm file. Complete the policy specifics, and finish with an END POLICY statement.</p>
<p>
Define the options available within the policy. </p>
<p>
Use the keyword VALUENAME to identify the registry value that an administrator can modify. For example: </p>
<pre><code>VALUENAME MyFirstValue</code></pre>
<p>
Remember that the VALUENAME needs to be within a PART if the option is selected within the lower pane of the System Policy Editor (see the discussion of PART and the code example below).</p>
<p>
If not specified otherwise, the value will be written in the following format when any administratory checks or unchecks the option:</p>
<p>
Checked: REG_DWORD with a value of 1</p>
<p>
Unchecked: Removes the value completely</p>
<p>
Other options can specify what the user selects from and what gets written to the registry. </p>
<p>
Use the keyword PART to specify options, drop-down list boxes, text boxes, and text in the lower pane of the System Policy Editor. PART is similar to CATEGORY, and uses the syntax:</p>
<pre><code>PART !!MyVariable <i>FLAG</i> 
 ... 
END PART</code></pre>
<p>
where <i>FLAG</i> is one or more of the following:</p>
<p>
TEXT&mdash;Displays text only, for example:</p>
<pre><code>PART !!MyPolicy TEXT
END PART</code></pre>
<p>
NUMERIC&mdash;Writes the value to the registry with data type REG_DWORD, for example:</p>
<pre><code>PART !!MyPolicy NUMERIC
VALUENAME ValueToBeChanged
END PART</code></pre>
<p>
DROPDOWNLIST&mdash;Displays a list box of options to choose from, for example:</p>
<pre><code>PART !!MyPolicy DROPDOWNLIST
VALUENAME ValueToBeChanged
  ITEMLIST
   NAME &ldquo;First&rdquo; VALUE NUMERIC 1
   NAME &ldquo;Second&rdquo; VALUE NUMERIC 2
   NAME &ldquo;Third&rdquo; VALUE NUMERIC 3
   NAME &ldquo;Fourth&rdquo; VALUE NUMERIC 4
  END ITEMLIST
END PART</code></pre>
<p>
EDITTEXT&mdash;Writes the value to the registry with data type REG_SZ, for example:</p>
<pre><code>PART !!MyPolicy EDITTEXT
VALUENAME ValueToBeChanged
END PART</code></pre>
<p>
REQUIRED&mdash;Generates an error if the user does not enter a value, for example:</p>
<pre><code>PART !!MyPolicy EDITTEXT REQUIRED
VALUENAME ValueToBeChanged
END PART</code></pre>
<p>
EXPANDABLETEXT&mdash;Writes the value to the registry with data type REG_EXPAND_SZ, for example:</p>
<pre><code>PART !!MyPolicy EDITTEXT EXPANDABLETEXT
VALUENAME ValueToBeChanged
END PART</code></pre>
<p>
MAXLEN&mdash;Specifies the maximum length of text, for example:</p>
<pre><code>PART !!MyPolicy EDITTEXT
VALUENAME ValueToBeChanged
MAXLEN 4
END PART</code></pre>
<p>
DEFAULT&mdash;Specifies the default value for text or numeric data, for example:</p>
<pre><code>PART !!MyPolicy EDITTEXT
DEFAULT !!MySampleText
VALUENAME ValueToBeChanged
END PART</code></pre>
<p>
or</p>
<pre><code>PART !!MyPolicy NUMERIC
DEFAULT 5
VALUENAME ValueToBeChanged
END PART</code></pre>
<p>
MIN and MAX&mdash;These specify the lowest and highest valid values respectively, for example:</p>
<pre><code>PART !!MyPolicy NUMERIC
MIN 100 MAX 999 DEFAULT 55
VALUENAME ValueToBeChanged
END PART</code></pre>
<p>
Use the keywords VALUEOFF and VALUEON to write specific values based on the state of the option, for example: </p>
<pre><code>POLICY !!MyPolicy
KEYNAME ....
VALUENAME ValueToBeChanged
VALUEON &ldquo;Turned On&rdquo; VALUEOFF &ldquo;Turned Off&rdquo;
END POLICY</code></pre>
<p>
or</p>
<pre><code>POLICY !!MyPolicy
KEYNAME ....
VALUENAME ValueToBeChanged
VALUEON 5 VALUEOFF 10
END POLICY</code></pre>
<p>
Save and test your file.</p>
<p>
Note that if you modify an .adm file while the System Policy Editor application is running, you will need to reload the file. From the <b>Options</b> menu, select <b>Policy Template</b>, and press <b>OK</b>. This reloads the structure, and your new entries will be available. (You do not need to perform this step if you modify a file before starting the System Policy Editor; the reload is done automatically each time the System Policy Editor starts.)</p>
<h3><a name="configuringsystempoliciesbasedongeographiclocation"></a>Configuring System Policies Based on  Geographic Location</h3>
<p>
You may choose to enforce certain environment settings based upon geographic site location or vicinity. At least two methods are available to do this.</p>
<p>
Generate a System Policy that contains settings for specific computers. In each of the machine-specific settings, configure the Remote Update path to a specific regional server that will be maintaining the regional System Policy file. When the user logs on at the Windows NT-based workstation for the first time, because the default mode is Automatic, the workstation will check the validating domain controller for a policy file. The policy file it finds will point the policy update configuration to another server. Note, however, that this does not work for the first logon. When the user next logs on, Windows NT checks the remote path and continues to use that path until the System Policy file on the remote server directs otherwise.</p>
<p>
Manually configure each of the workstations in a given region or site to use a remote update path, and change the remote update mode from the default of Automatic to Manual.</p>
<h3><a name="clearingdocumentsavailablelist"></a>Clearing the Documents Available List </h3>
<p>
As an alternative to removing the <b>Documents</b> option from the <b>Start</b> menu, you can set and clear the documents available by clearing the MRUList value in the registry. Use this registry key:</p>
<p>
HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Explorer</p>
<p>
\RecentDocs</p>
<p>
Value: MRUList</p>
<p>
Note that you should not delete the value; instead, replace MRUList with a blank string.</p>
<h3><a name="buildingfaulttoleranceforcustomsharedfolders"></a>Building Fault Tolerance for Custom Shared Folders</h3>
<p>
If you want to create a user environment that includes a Custom Shared Programs Folder and a Custom Shared Desktop, you need to place the source folders for these shared items on a central server for all users to access. However, this involves some degree of risk if the server is unavailable. If that occurs, the user&rsquo;s <b>Programs</b> menu and desktop would not contain the appropriate folders, shortcuts, and files.</p>
<p>
To build fault tolerance into this configuration, you can take advantage of the distributed file system (Dfs) available for the Windows NT Server 4.0 operating system platform. Dfs, which runs as a service, can provide a share that will refer the client to multiple servers for the same path. For example, on a Dfs server, the administrator has defined that users connecting to the UNC path \\Dfsserver\Dfsshare\Customfolder, will be returned a response with three different servers, \\Server1\Customerfolder, \\Server2\Customerfolder, and \\Server3\Customerfolder, all of which contain the same data. The client machine, which can be either a Windows NT-based 4.0 machine or a Windows 95-based machine with the Dfs client software, randomly selects one of these servers and uses that path to generate the custom shared folders for the user. If one of the servers is unavailable, the client has the other two servers to select from. Note that the the Dfs host server must be running for this fault tolerant structure to work. (Although Dfs software currently supports a single host server, Microsoft is developing a fault-tolerant version of Dfs for a future release of Windows NT.)</p>
<p>
For more information on the Dfs server and client components, see http://www.microsoft.com/ntserver/info/distributedfilesystem.htm.</p>
<h2><a name="registrykeysmodifiedbysystempolicyeditordefaulttemplates"></a>Registry Keys Modified by the System Policy Editor Default Templates</h2>
<p>
The following outlines the locations and values for registry entries that are written to a Windows NT-based workstation or server when you use the System Policy Editor to modify a policy. Knowing the location of these registry settings may help you to resolve problems. </p>
<h3><a name="defaultusersettings"></a>Default User Settings</h3>
<p>
The following data is specific to the options found in the Default User portion of the System Policy Editor.</p>
<h4><a name="controlpaneldisplayapplication"></a>Control Panel Display Application</h4>
<p>
<b>Category:</b> Control Panel</p>
<p>
<b>Subcategory:</b>Display</p>
<p>
<b>Selection</b>: <b>Restrict display</b></p>
<p>
<b>Description</b>: Removes or enables tabs from the Control Panel Display application.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \System</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=146><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=192><b>Description</b></td>
</tr>
<tr valign=top>
<td width=146>NoDispCPL</td>
<td width=96>REG_DWORD </td>
<td width=192>Off = 0 or value removed; On = 1</td>
</tr>
<tr valign=top>
<td width=146>NoDispBackgroundPage</td>
<td width=96>REG_DWORD </td>
<td width=192>Off = 0 or value removed; On = 1</td>
</tr>
<tr valign=top>
<td width=146>NoDispScrSavPage</td>
<td width=96>REG_DWORD </td>
<td width=192>Off = 0 or value removed; On = 1</td>
</tr>
<tr valign=top>
<td width=146>NoDispAppearancePage</td>
<td width=96>REG_DWORD </td>
<td width=192>Off = 0 or value removed; On = 1</td>
</tr>
<tr valign=top>
<td width=146>NoDispSettingsPage</td>
<td width=96>REG_DWORD</td>
<td width=192>Off = 0 or value removed; On = 1</td>
</tr>
</table><br>
<h4><a name="wallpaper"></a>Wallpaper</h4>
<p>
<b>Category:</b> Desktop</p>
<p>
<b>Selection</b>: <b>Wallpaper</b></p>
<p>
<b>Description</b>: Defines the path to be used when loading wallpaper, and determines whether to tile it or not.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Control Panel</p>
<p>
       \Desktop</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Wallpaper</td>
<td width=96>REG_SZ</td>
<td width=234>Off = value is removed; On = text of path to wallpaper</td>
</tr>
<tr valign=top>
<td width=104>TileWallpaper</td>
<td width=96>REG_SZ</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="colorscheme"></a>Color Scheme</h4>
<p>
<b>Category:</b> Desktop</p>
<p>
<b>Selection</b>: <b>Color scheme</b></p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Control Panel</p>
<p>
       \Appearance</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Current</td>
<td width=96>REG_SZ</td>
<td width=234>Off = value is removed; On = text of color scheme name</td>
</tr>
</table><br>
<h4><a name="startmenuruncommand"></a>Start Menu Run Command</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>:Restrictions</p>
<p>
<b>Selection</b>:<b>Remove Run command from Start menu </b></p>
<p>
<b>Description</b>:Removes the user&rsquo;s ability to start applications or processes from the <b>Start</b> menu by removing the option completely. Note that if the user still has access to the MS-DOS&reg; prompt icon or command prompt, the user can start unauthorized applications. To further restrict the user&rsquo;s ability to run specific applications, refer to the policy setting for &ldquo;Run only allowed Windows applications&rdquo; later in this section.</p>
<p>
<b>Key</b>:HKEY_CURRENT_USER</p>
<p>
     \Software</p>
<p>
      \Microsoft</p>
<p>
       \Windows</p>
<p>
        \CurrentVersion</p>
<p>
         \Policies</p>
<p>
          \Explorer</p>
<table border=1 cols=3 frame=hsides rules=none>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoRun</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="settingsfolders"></a>Settings Folders </h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>:Restrictions</p>
<p>
<b>Selection</b>: <b>Remove folders from settings on Start menu</b></p>
<p>
<b>Description</b>:Removes the Control Panel and Printers folders from the <b>Settings</b> menu. Removing the Taskbar, Control Panel, and Printer folders causes the <b>Settings</b> menu to be removed completely.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoSetFolders</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="settingstaskbar"></a>Settings Taskbar</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Remove Taskbar from settings on Start menu</b></p>
<p>
<b>Description</b>: Removes the Taskbar option from settings on the <b>Start</b> menu. Removing the Taskbar, Control Panel, and Printer folders causes the <b>Settings</b> menu to be removed completely.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
     \Software</p>
<p>
      \Microsoft</p>
<p>
       \Windows</p>
<p>
        \CurrentVersion</p>
<p>
         \Policies</p>
<p>
          \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoSetTaskbar</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="startmenufindcommand"></a>Start Menu Find Command</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>:Restrictions</p>
<p>
<b>Selection</b>:<b>Remove Find command from Start menu</b></p>
<p>
<b>Description</b>:Completely removes the <b>Find</b> option from the <b>Start</b> menu.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
     \Software</p>
<p>
      \Microsoft</p>
<p>
       \Windows</p>
<p>
        \CurrentVersion</p>
<p>
         \Policies</p>
<p>
          \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoFind</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="mycomputerdriveicons"></a>My Computer Drive Icons</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Hide drives in My Computer</b></p>
<p>
<b>Description</b>: Removes the icons for the drives in My Computer.</p>
<p>
<b>Key</b>:HKEY_CURRENT_USER</p>
<p>
     \Software</p>
<p>
      \Microsoft</p>
<p>
       \Windows</p>
<p>
        \CurrentVersion</p>
<p>
         \Policies</p>
<p>
          \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoDrives</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = value is removed; On = 3fffffff</td>
</tr>
</table><br>
<h4><a name="networkneighborhoodicon"></a>Network Neighborhood Icon</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Hide Network Neighborhood</b></p>
<p>
<b>Description</b>: Removes the Network Neighborhood icon from the desktop. In addition, disables UNC capability from within the Explorer interface, including the <b>Start</b> menu&rsquo;s <b>Run</b> command, UNC paths configured by the administrator in Policies for shared folders, desktop icons, the <b>Start</b> command, and so forth. This does not impair the functionality of the command line Net.exe command.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoNetHood</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="networkneighborhooddisplay"></a>Network Neighborhood Display</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>No Entire Network in Network Neighborhood</b></p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Network</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoEntireNetwork</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="networkneighborhoodworkgroupcontents"></a>Network Neighborhood Workgroup Contents</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>:Restrictions</p>
<p>
<b>Selection</b>: <b>No workgroup contents in Network Neighborhood</b></p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Network</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=128><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=210><b>Description</b></td>
</tr>
<tr valign=top>
<td width=128>NoWorkgroupContents</td>
<td width=96>REG_DWORD</td>
<td width=210>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="desktopdisplay"></a>Desktop Display</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Hide all items on desktop</b></p>
<p>
<b>Description</b>: Hides all desktop items regardless of menus, folders, and shortcuts defined either by profiles or by other pointers in the policy file for custom program folders, custom desktop icons, and so on.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoDesktop</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="startmenushutdowncommand"></a>Start Menu Shut Down Command</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Disable Shut Down command</b></p>
<p>
<b>Description</b>: Disables the Shut Down option on the <b>Start</b> menu. Note that this does not disable the user&rsquo;s ability to shut down the computer using the CTRL-ALT-DEL sequence. If you want to remove the user&rsquo;s ability to use CTRL-ALT-DEL, remove the user&rsquo;s name from the &ldquo;Shut down the system&rdquo; user right in User Manager.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoClose</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="savedsettings"></a>Saved Settings</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>:Restrictions</p>
<p>
<b>Selection</b>: <b>Don't save settings at Exit</b></p>
<p>
<b>Description</b>: Disables or enables the ability to save modifications that the user makes during the logon session.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoSaveSettings</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="registryeditingtools"></a>Registry Editing Tools</h4>
<p>
<b>Category:</b> System</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Disable registry editing tools</b></p>
<p>
<b>Description</b>: Disable user&rsquo;s ability to run Regedit.exe or  Regedt32.exe.</p>
<p>
<b>Key</b>:HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \System</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=116><b>Registry Value</b></td>
<td width=108><b>Registry Data</b></td>
<td width=210><b>Description</b></td>
</tr>
<tr valign=top>
<td width=116>DisableRegistryTools</td>
<td width=108>REG_DWORD</td>
<td width=210>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="windowsapplicationsrestrictions"></a>Windows Applications Restrictions</h4>
<p>
<b>Category:</b> System</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Run only allowed Windows applications</b></p>
<p>
<b>Description</b>: Restricts the applications that the user can start through the Explorer interface. If an application is not specified, a dialog box is presented that states: &ldquo;Restrictions: This operation has been canceled due to restrictions in effect on this computer. Please contact your system administrator.&rdquo; Be sure to include Systray.exe in the list of allowed applications if this policy is to be enforced. Note that users may still have the ability to start restricted applications from the command prompt if you give them access to Cmd.exe.</p>
<p>
<b>Key</b>:HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>RestrictRun</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<p>
<b>Key</b>:HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer</p>
<p>
            \RestrictRun</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Number Increment Starting with 1</td>
<td width=96>REG_SZ</td>
<td width=234>Off = value is removed; On = text of application name</td>
</tr>
</table><br>
<h4><a name="customprograms"></a>Custom Programs</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom Folders</p>
<p>
<b>Selection</b>: <b>Custom Program folder</b></p>
<p>
<b>Description</b>: Specifies the UNC path for the folder to use when displaying folders, files, and shortcuts available when the user selects <b>Programs</b> from the <b>Start</b> menu. The user&rsquo;s profile Programs is an additional selection.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Explorer</p>
<p>
           \User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Programs</td>
<td width=96>REG_ REG_SZ</td>
<td width=234>Off = value is removed; On = text of UNC path to folder. Default = %USERPROFILE%\Start Menu\Programs</td>
</tr>
</table><br>
<h4><a name="customdesktopicons"></a>Custom Desktop Icons</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom Folders</p>
<p>
<b>Selection</b>: <b>Custom desktop icons</b></p>
<p>
<b>Description</b>: Specifies the UNC path the folder is to use when displaying the folders, files, and shortcuts the user receives on the desktop.</p>
<p>
<b>Key</b>:HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Explorer</p>
<p>
           \User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Desktop</td>
<td width=96>REG_SZ</td>
<td width=234>Off = value is removed; On = text of UNC path to folder. Default = %USERPROFILE%\Desktop</td>
</tr>
</table><br>
<h4><a name="startmenusubfolders"></a>Start Menu Subfolders</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom Folders</p>
<p>
<b>Selection</b>: <b>Hide Start menu subfolders</b></p>
<p>
<b>Description</b>: Hides subfolders, such as the user&rsquo;s Programs folder, if a custom Programs folder exists.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=134><b>Registry Value</b></td>
<td width=102><b>Registry Data</b></td>
<td width=198><b>Description</b></td>
</tr>
<tr valign=top>
<td width=134>NoStartMenuSubFolders</td>
<td width=102>REG_DWORD</td>
<td width=198>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="customstartupfolder"></a>Custom Startup Folder</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom Folders</p>
<p>
<b>Selection</b>: <b>Custom Startup folder</b></p>
<p>
<b>Description</b>: Specifies the UNC path the folder is to use when folders, files, and shortcuts are to start at user logon.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Explorer</p>
<p>
           \User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=98><b>Registry Value</b></td>
<td width=90><b>Registry Data</b></td>
<td width=246><b>Description</b></td>
</tr>
<tr valign=top>
<td width=98>Startup</td>
<td width=90>REG_SZ</td>
<td width=246>Off = value is removed; On = text of UNC path to folder. Default = %USERPROFILE%\Start Menu\Programs\Startup</td>
</tr>
</table><br>
<h4><a name="customnetworkneighborhood"></a>Custom Network Neighborhood</h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom Folders</p>
<p>
<b>Selection</b>: <b>Custom Network Neighborhood</b></p>
<p>
<b>Description</b>: Specifies the UNC path the folder is to use to create the folders, files, and shortcuts the user receives when navigating through Network Neighborhood.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Explorer</p>
<p>
           \User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NetHood</td>
<td width=96>REG_SZ</td>
<td width=234>Off = value is removed; On = text of UNC path to folder. Default = %USERPROFILE%\NetHood</td>
</tr>
</table><br>
<h4><a name="customstartmenu"></a>Custom Start Menu</h4>
<p>
<b>Category:</b> Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom Folders</p>
<p>
<b>Selection</b>: <b>Custom Start menu</b></p>
<p>
<b>Description</b>: Specifies the UNC path the folder is to use when displaying the folders, files, and shortcuts the user receives as part of the <b>Start</b> menu.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Explorer</p>
<p>
           \User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Start Menu</td>
<td width=96>REG_SZ</td>
<td width=234>Off = value is removed; On = text of UNC path to folder. Default = %USERPROFILE%\Start Menu</td>
</tr>
</table><br>
<h4><a name="shellextensions"></a>Shell Extensions</h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>:Restrictions</p>
<p>
<b>Selection</b>: <b>Only use approved shell extensions</b></p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
      \Software</p>
<p>
       \Microsoft</p>
<p>
        \Windows</p>
<p>
         \CurrentVersion</p>
<p>
          \Policies</p>
<p>
           \Explorer\</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=164><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=174><b>Description</b></td>
</tr>
<tr valign=top>
<td width=164>EnforceShellExtensionSecurity</td>
<td width=96>REG_DWORD</td>
<td width=174>Off = 0 or value is removed;  On = 1</td>
</tr>
</table><br>
<h4><a name="explorerfilemenu"></a>Explorer File Menu</h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Remove File menu from Explorer</b></p>
<p>
<b>Description</b>: Removes the File option from Explorer&rsquo;s toolbar. (This option was added in Service Pack 2.)</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Mcrosoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer\</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoFileMenu</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="startmenucommonprogramgroups"></a>Start Menu Common Program Groups</h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Remove common program groups from Start menu</b></p>
<p>
<b>Description</b>: Disables the display of common groups when the user selects <b>Programs</b> from the <b>Start</b> menu.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=110><b>Registry Value</b></td>
<td width=90><b>Registry Data</b></td>
<td width=204><b>Description</b></td>
</tr>
<tr valign=top>
<td width=110>NoCommonGroups</td>
<td width=90>REG_DWORD</td>
<td width=204>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="taskbarcontextmenus"></a>Taskbar Context Menus</h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Disable context menus for the Taskbar</b></p>
<p>
<b>Description</b>: Removes the context menus for the tray, including the <b>Start</b> button, Tab control, and Clock. (This option was added in Service Pack 2.)</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=122><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=216><b>Description</b></td>
</tr>
<tr valign=top>
<td width=122>NoTrayContextMenu</td>
<td width=96>REG_DWORD</td>
<td width=216>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="explorercontextmenu"></a>Explorer Context Menu</h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Disable Explorer&rsquo;s default context menu</b></p>
<p>
<b>Description</b>: Removes the context menu that would normally appear when the user right clicks on the desktop or in the Explorer right results pane. (This option was added in Service Pack 2.)</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=116><b>Registry Value</b></td>
<td width=108><b>Registry Data</b></td>
<td width=210><b>Description</b></td>
</tr>
<tr valign=top>
<td width=116>NoViewContextMenu</td>
<td width=108>REG_DWORD</td>
<td width=210>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="networkconnections"></a>Network Connections</h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Remove the Map Network Drive and Disconnect Network Drive options</b></p>
<p>
<b>Description</b>: Prevents users from making additional network connections by removing the <b>Map Network Drive</b> and <b>Disconnect Network Drive</b> buttons from the toolbar in Explorer and also removing the menu items from the <b>Context</b> menu of My Computer and the <b>Tools</b> menu of Explorer. (This option was added in Service Pack 2.)</p>
<p>
<b>Key</b>:HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=140><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=198><b>Description</b></td>
</tr>
<tr valign=top>
<td width=140>NoNetConnectDisconnect</td>
<td width=96>REG_DWORD</td>
<td width=198>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="explorercontextmenu"></a>Explorer Context Menu</h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Restrictions</p>
<p>
<b>Selection</b>: <b>Disable link file tracking</b></p>
<p>
<b>Description</b>: When enabled, link file tracking uses the configured path shown in properties for the shortcut to an application instead of the absolute path. This option disables link file tracking. (This option was added in Service Pack 2.)</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=152><b>Registry Value</b></td>
<td width=90><b>Registry Data</b></td>
<td width=192><b>Description</b></td>
</tr>
<tr valign=top>
<td width=152>LinkResolvedIgnoreLinkInfo</td>
<td width=90>REG_DWORD</td>
<td width=192>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="autoexec.bat"></a>Autoexec.bat</h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Selection</b>: <b>Parse Autoexec.bat</b></p>
<p>
<b>Description</b>: When this value is 1, the environment variables declared in the Autoexec.bat file are included in the user&rsquo;s environment.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>ParseAutoexec</td>
<td width=96>REG_SZ</td>
<td width=234>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="logonscripts"></a>Logon Scripts</h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Selection</b>: <b>Run logon scripts synchronously</b> </p>
<p>
<b>Description</b>: Determines whether the shell waits for the logon script to complete or not. If the value is 0, the logon script is run during the startup of the shell and allows items in the Startup group to start. If the value is 1, the logon script completes before the shell or any items in the Startup group are started. If this value is also set in the Computer section, the Computer section value takes precedence.</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=122><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=216><b>Description</b></td>
</tr>
<tr valign=top>
<td width=122>RunLogonScriptSync</td>
<td width=96>REG_DWORD</td>
<td width=216>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="taskmanager"></a>Task Manager</h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Selection</b>: <b>Disable Task Manager</b></p>
<p>
<b>Description</b>: Enables or disables the user&rsquo;s ability to start Task Manager to view processes, applications running, and make changes to the priority or state of the individual processes. (This option was added in Service Pack 2.)</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\System</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=102><b>Registry Data</b></td>
<td width=228><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>DisableTaskMgr</td>
<td width=102>REG_DWORD</td>
<td width=228>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="welcometips"></a>Welcome Tips</h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Selection</b>: <b>Show welcome tips at logon</b></p>
<p>
<b>Description</b>: Enables or disables the display of the Welcome screen when the user logs on for the first and second time. (This option was added in Service Pack 2.)</p>
<p>
<b>Key</b>: HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Explorer</p>
<p>
\Tips</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=102><b>Registry Data</b></td>
<td width=228><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Show</td>
<td width=102>REG_DWORD</td>
<td width=228>Off = 0; On = 1</td>
</tr>
</table><br>
<h3><a name="defaultcomputersettings"></a>Default Computer Settings</h3>
<p>
The following data is specific to the options found in the Default Computer portion of the System Policy Editor.</p>
<h4><a name="remoteupdate"></a>Remote Update</h4>
<p>
<b>Category</b>: Network</p>
<p>
<b>Subcategory</b>: System Policies update</p>
<p>
<b>Selection</b>: <b>Remote update</b></p>
<p>
<b>Description</b>: Controls how policies are applied to a Windows NT 4.0-based machine. With <b>UpdateMode</b> set to 1 (Automatic, the default), Windows NT makes a connection to the NETLOGON share of the validating domain controller in the user&rsquo;s context, and checks for the existence of the policy file, NTconfig.pol. With <b>UpdateMode</b> set to 2 (Manual), Windows NT reads the string specified in the <b>NetworkPath</b> value, and checks that path for the existence of the policy file (in this case, the policy file name should be included in the <b>NetworkPath</b> value). With <b>UpdateMode</b> set to 0 (Off), a policy file is not downloaded from any system, and therefore is not applied.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\Update</p>
<table border=1 cols=3 frame=hsides rules=none>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>UpdateMode</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0, Automatic=1; Manual=2</td>
</tr>
<tr valign=top>
<td width=104>NetworkPath</td>
<td width=96>REG_SZ</td>
<td width=234>Text of UNC path for manual update</td>
</tr>
<tr valign=top>
<td width=104>Verbose</td>
<td width=96>REG_DWORD</td>
<td width=234>Display error messages. Off = 0 or value not present; On = 1</td>
</tr>
<tr valign=top>
<td width=104>LoadBalance</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value not present; On = 1</td>
</tr>
</table><br>
<h4><a name="communities"></a>Communities</h4>
<p>
<b>Category</b>: System</p>
<p>
<b>Subcategory</b>: SNMP</p>
<p>
<b>Selection</b>: <b>Communities</b></p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\SNMP</p>
<p>
\Parameters</p>
<p>
\ValidCommunities</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=116><b>Registry Value</b></td>
<td width=90><b>Registry Data</b></td>
<td width=228><b>Description</b></td>
</tr>
<tr valign=top>
<td width=116>Increment numbers  beginning with 1</td>
<td width=90>REG_SZ</td>
<td width=228>On = text of Valid Community #<i>x</i>; Off = value is removed from registry</td>
</tr>
</table><br>
<p>
<b>NOTE</b>: There may be multiple entries in this subkey.</p>
<h4><a name="permittedmanagers"></a>Permitted Managers</h4>
<p>
<b>Category</b>: System</p>
<p>
<b>Subcategory</b>: SNMP</p>
<p>
<b>Selection</b>: <b>Permitted managers</b></p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\SNMP</p>
<p>
\Parameters</p>
<p>
\PermittedManagers</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=116><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=222><b>Description</b></td>
</tr>
<tr valign=top>
<td width=116>Increment numbers  beginning with 1</td>
<td width=96>REG_SZ</td>
<td width=222>On = text of Permitted Manager #<i>x</i>; Off = value is removed from registry</td>
</tr>
</table><br>
<p>
<b>NOTE</b>: There may be multiple entries in this subkey.</p>
<h4><a name="publiccommunitytraps"></a>Public Community Traps</h4>
<p>
<b>Category</b>: System</p>
<p>
<b>Subcategory</b>: SNMP</p>
<p>
<b>Selection</b>: <b>Traps for public community</b></p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\SNMP</p>
<p>
\Parameters</p>
<p>
\TrapConfiguration</p>
<p>
\Public</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=116><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=222><b>Description</b></td>
</tr>
<tr valign=top>
<td width=116>Increment numbers  beginning with 1</td>
<td width=96>REG_SZ</td>
<td width=222>On = text of Trap Configuration #<i>x;</i> Off = value is removed from registry</td>
</tr>
</table><br>
<p>
<b>NOTE</b>: There may be multiple entries in this subkey.</p>
<h4><a name="runcommand"></a>Run Command</h4>
<p>
<b>Category</b>: System</p>
<p>
<b>Subcategory</b>: Run</p>
<p>
<b>Selection</b>: <b>Run</b></p>
<p>
<b>Description</b>: Allows one or more applications to be run when the user logs on interactively.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Run</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Application Text Name</td>
<td width=96>REG_SZ</td>
<td width=234>On = executable text name (for example, Notepad is Notepad.exe) which may include parameters; Off = value is removed from the registry</td>
</tr>
</table><br>
<p>
<b>Note</b>: There may be multiple entries in this subkey.</p>
<h4><a name="drivesharesworkstation"></a>Drive Shares &ndash; Workstation </h4>
<p>
<b>Category</b>: Windows NT Network</p>
<p>
<b>Subcategory</b>: Sharing</p>
<p>
<b>Selection</b>: <b>Create hidden drive shares (workstation)</b></p>
<p>
<b>Description</b>: When enabled, creates administrative shares for physical drives. These shares were created automatically under Windows NT 3.51. This policy setting gives administrators the ability to control this feature. This setting is specific to Windows NT Workstation.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\LanManServer</p>
<p>
\Parameters</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=98><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=240><b>Description</b></td>
</tr>
<tr valign=top>
<td width=98>AutoShareWks</td>
<td width=96>REG_DWORD</td>
<td width=240>NT Workstation specific: Off = 0; On = 1</td>
</tr>
</table><br>
<h4><a name="drivesharesserver"></a>Drive Shares &ndash; Server</h4>
<p>
<b>Category</b>: Windows NT Network</p>
<p>
<b>Subcategory</b>: Sharing</p>
<p>
<b>Selection</b>: <b>Create hidden drive shares (server)</b></p>
<p>
<b>Description</b>: When enabled, creates the administrative shares for physical drives. These shares were created automatically under Windows NT 3.51. This policy setting gives administrators the ability to control this feature. This setting is specific to Windows NT Server.</p>
<p>
<b>Key</b>:HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\LanManServer</p>
<p>
\Parameters</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>AutoShareServer</td>
<td width=96>REG_DWORD</td>
<td width=234>NT Server specific: Off = 0; On = 1</td>
</tr>
</table><br>
<h4><a name="printerbrowsethread"></a>Printer Browse Thread </h4>
<p>
<b>Category</b>: Windows NT Printers</p>
<p>
<b>Subcategory</b>: Sharing</p>
<p>
<b>Selection</b>: <b>Disable browse thread on this computer</b></p>
<p>
<b>Description</b>: When this option is enabled, the print spooler does not send shared printer information to other print servers.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\Print</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=116><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=222><b>Description</b></td>
</tr>
<tr valign=top>
<td width=116>DisableServerThread</td>
<td width=96>REG_DWORD</td>
<td width=222>Off = 0 or value is removed from registry; On = 1</td>
</tr>
</table><br>
<h4><a name="serverscheduler"></a>Server Scheduler</h4>
<p>
<b>Category</b>: Windows NT Printers</p>
<p>
<b>Subcategory</b>: Sharing</p>
<p>
<b>Selection</b>: <b>Scheduler priority</b></p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\Print</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=134><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=204><b>Description</b></td>
</tr>
<tr valign=top>
<td width=134>SchedulerThreadPriority</td>
<td width=96>REG_DWORD</td>
<td width=204>Above normal = 1; Normal = 0, Less than normal = ffffffff</td>
</tr>
</table><br>
<h4><a name="errorbeep"></a>Error Beep</h4>
<p>
<b>Category</b>: Windows NT Printers</p>
<p>
<b>Subcategory</b>: Sharing</p>
<p>
<b>Selection</b>: <b>Beep for error enabled</b></p>
<p>
<b>Description</b>: Enables beeping (every 10 seconds) when a remote job error occurs on a print server.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\Print</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>BeepEnabled</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0; On = 1</td>
</tr>
</table><br>
<h4><a name="authenticationretries"></a>Authentication Retries </h4>
<p>
<b>Category</b>: Windows NT Remote Access</p>
<p>
<b>Selection</b>: <b>Max number of unsuccessful authentication retries</b></p>
<p>
<b>Description</b>: Specifies the number of times authentication will be attempted for a user.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\RemoteAccess</p>
<p>
\Parameters</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=110><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=228><b>Description</b></td>
</tr>
<tr valign=top>
<td width=110>AuthenticateRetries</td>
<td width=96>REG_DWORD</td>
<td width=228>Off = value is removed, On =Number of retries in hexadecimal. Decimal = 1-10; default = 2.</td>
</tr>
</table><br>
<h4><a name="authenticationtimelimit"></a>Authentication Time Limit </h4>
<p>
<b>Category</b>: Windows NT Remote Access</p>
<p>
<b>Selection</b>: <b>Max time limit for authentication</b></p>
<p>
<b>Description</b>: Defines the maximum time limit in seconds for authentication to occur.</p>
<p>
<b>Key</b>:HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\RemoteAccess</p>
<p>
\Parameters</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>AuthenticateTime</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = value is removed , On = time in seconds in hexadecimal. Decimal = 20-600; default = 120.</td>
</tr>
</table><br>
<h4><a name="rascallbackinterval"></a>RAS Call-back Interval </h4>
<p>
<b>Category</b>: Windows NT Remote Access</p>
<p>
<b>Selection</b>: <b>Wait interval for callback</b></p>
<p>
<b>Description</b>: Specifies the time in seconds that Windows NT will wait before initiating the callback from a RAS dial-in user.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\RemoteAccess</p>
<p>
\Parameters</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=98><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=240><b>Description</b></td>
</tr>
<tr valign=top>
<td width=98>CallbackTime</td>
<td width=96>REG_DWORD</td>
<td width=240>Off = value is removed, On = time in seconds in hexadecimal. Decimal = 2-12; default = 2.</td>
</tr>
</table><br>
<h4><a name="rasautodisconnect"></a>RAS Auto-disconnect </h4>
<p>
<b>Category</b>: Windows NT Remote Access</p>
<p>
<b>Selection</b>: <b>Auto disconnect</b></p>
<p>
<b>Description</b>: Specifies the amount of idle time in minutes to wait before disconnecting the RAS client.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Services</p>
<p>
\RemoteAccess</p>
<p>
\Parameters</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>AutoDisconnect</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = value is removed, On = time in minutes in hexadecimal. Decimal: minimum = 0; default = 20.</td>
</tr>
</table><br>
<h4><a name="sharedprogramsfolderpath"></a>Shared Programs Folder Path </h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom shared folders</p>
<p>
<b>Selection</b>: <b>Custom shared Programs folder</b></p>
<p>
<b>Description</b>: Specifies the UNC path for the folder to use when displaying folders, files, and shortcuts below the division line (common groups) when the user selects <b>Programs</b> from the <b>Start</b> menu. </p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Explorer</p>
<p>
\User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=98><b>Registry Value</b></td>
<td width=138><b>Registry Data</b></td>
<td width=198><b>Description</b></td>
</tr>
<tr valign=top>
<td width=98>Common  Programs</td>
<td width=138>REG_EXPAND_SZ (Note: REG_SZ can be used if no variables exist.)</td>
<td width=198>Off = value is removed from registry; On = text of UNC path to folder. Default = %SystemRoot%\Profiles\All Users\Start Menu\Programs</td>
</tr>
</table><br>
<h4><a name="shareddesktopiconspath"></a>Shared Desktop Icons Path </h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom shared folders</p>
<p>
<b>Selection</b>: <b>Custom shared desktop icons</b></p>
<p>
<b>Description</b>: Specifies the UNC path the folder is to use when displaying the folders, files, and shortcuts the user receives as part of the desktop.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Explorer</p>
<p>
\User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=138><b>Registry Data</b></td>
<td width=192><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Common Desktop</td>
<td width=138>REG_EXPAND_SZ (Note: REG_SZ can be used if no variables exist.)</td>
<td width=192>Off = value is removed from registry; On = text of UNC path to folder.  Default = %SystemRoot%\  Profiles\All Users\Desktop.</td>
</tr>
</table><br>
<h4><a name="sharedstartmenupath"></a>Shared Start Menu Path </h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom shared folders</p>
<p>
<b>Selection</b>: <b>Custom shared Start menu</b></p>
<p>
<b>Description</b>: Specifies the UNC path the folder is to use when displaying the folders, files, and shortcuts the user receives as part of the <b>Start</b> menu.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Explorer</p>
<p>
\User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=98><b>Registry Value</b></td>
<td width=144><b>Registry Data</b></td>
<td width=192><b>Description</b></td>
</tr>
<tr valign=top>
<td width=98>Common Start Menu</td>
<td width=144>REG_EXPAND_SZ  (Note: REG_SZ can be used if no variables exist.)</td>
<td width=192>Off = value is removed from registry, On = text of UNC path to folder.  Default = %SystemRoot%\Profiles\ All Users\Start Menu </td>
</tr>
</table><br>
<h4><a name="sharedstartupfolderpath"></a>Shared Startup Folder Path </h4>
<p>
<b>Category</b>: Windows NT Shell</p>
<p>
<b>Subcategory</b>: Custom shared folders</p>
<p>
<b>Selection</b>: <b>Custom shared Startup folder</b></p>
<p>
<b>Description</b>: Specifies the UNC path the folder is to use to find folders, files, and shortcuts that should be started when the user logs on.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Explorer</p>
<p>
\User Shell Folders</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=138><b>Registry Data</b></td>
<td width=192><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Common Startup</td>
<td width=138>REG_EXPAND_SZ  (Note: REG_SZ can be used if no variables exist.)</td>
<td width=192>Off = value is removed from registry, On = text of UNC path to folder.  Default = %SystemRoot%\Profiles\  All Users\Start Menu\Programs\  Startup</td>
</tr>
</table><br>
<h4><a name="logonbanner"></a>Logon Banner</h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Subcategory</b>: Logon</p>
<p>
<b>Selection</b>: <b>Logon banner</b></p>
<p>
<b>Description</b>: Before the user logs on, displays a custom dialog box with text.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=110><b>Registry Value</b></td>
<td width=90><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=110>LegalNoticeCaption</td>
<td width=90>REG_SZ</td>
<td width=234>Off = value is removed; On = text of caption</td>
</tr>
<tr valign=top>
<td width=110>LegalNoticeText</td>
<td width=90>REG_SZ</td>
<td width=234>Off = value is removed; On = text of notice</td>
</tr>
</table><br>
<h4><a name="logondialogshutdownbutton"></a>Logon Dialog Shut Down Button </h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Subcategory</b>: Logon</p>
<p>
<b>Selection</b>: <b>Enable shutdown from Authentication dialog box</b></p>
<p>
<b>Description</b>: Enables or disables the Shut Down button on the logon dialog window.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=128><b>Registry Value</b></td>
<td width=102><b>Registry Data</b></td>
<td width=204><b>Description</b></td>
</tr>
<tr valign=top>
<td width=128>ShutdownWithoutLogon</td>
<td width=102>REG_SZ</td>
<td width=204>Off = 0; On = 1</td>
</tr>
</table><br>
<h4><a name="logonnamedisplay"></a>Logon Name Display </h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Subcategory</b>: Logon</p>
<p>
<b>Selection</b>: <b>Do not display last logged on user name</b></p>
<p>
<b>Description</b>: Enables or disables display of the last logged on user name when the user presses <small>ctrl+alt+del</small> and the logon dialog is displayed.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=158><b>Registry Value</b></td>
<td width=108><b>Registry Data</b></td>
<td width=168><b>Description</b></td>
</tr>
<tr valign=top>
<td width=158>DontDisplayLastUserName</td>
<td width=108>REG_SZ</td>
<td width=168>Off = 0; On = 1</td>
</tr>
</table><br>
<h4><a name="logonscripts"></a>Logon Scripts </h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Subcategory</b>: Logon</p>
<p>
<b>Selection</b>: <b>Run logon scripts synchronously</b></p>
<p>
<b>Description</b>: Determines whether the shell waits for the logon script to complete or not. If the value is 0, the logon script is run during the startup of the shell and allows items in the Startup group to start. If the value is 1, the logon script completes before the shell or any items in the Startup group are started. If this value is also set in the User section, this value takes precedence.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=122><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=216><b>Description</b></td>
</tr>
<tr valign=top>
<td width=122>RunLogonScriptSync</td>
<td width=96>REG_SZ</td>
<td width=216>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="longfilenames"></a>Long File Names </h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Subcategory</b>: File system</p>
<p>
<b>Selection</b>: <b>Do not create 8.3 file names for long file names</b></p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\FileSystem</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=164><b>Registry Value</b></td>
<td width=90><b>Registry Data</b></td>
<td width=180><b>Description</b></td>
</tr>
<tr valign=top>
<td width=164>NtfsDisable8dot3NameCreation</td>
<td width=90>REG_DWORD</td>
<td width=180>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="extendedcharactersin8.3filenames"></a>Extended Characters in 8.3 File Names</h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Subcategory</b>: File system</p>
<p>
<b>Selection</b>: <b>Allow extended characters in 8.3 file names</b></p>
<p>
<b>Description</b>: Short file names with extended characters may not be viewable on computers that do not have the same character code page.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\FileSystem</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=218><b>Registry Value</b></td>
<td width=90><b>Registry Data</b></td>
<td width=126><b>Description</b></td>
</tr>
<tr valign=top>
<td width=218>NtfsAllowExtendedCharacterIn8dot3Name</td>
<td width=90>REG_DWORD</td>
<td width=126>Off = 0 or value is  removed; On = 1</td>
</tr>
</table><br>
<h4><a name="readonlyfileslastaccesstime"></a>Read Only Files &ndash; Last Access Time </h4>
<p>
<b>Category</b>: Windows NT System</p>
<p>
<b>Subcategory</b>: File system</p>
<p>
<b>Selection</b>: <b>Do not update last access time</b></p>
<p>
<b>Description</b>: For files that are only to be read, specifies do not update the last access time. (This increases the file system&rsquo;s performance.)</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\System</p>
<p>
\CurrentControlSet</p>
<p>
\Control</p>
<p>
\FileSystem</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=158><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=174><b>Description</b></td>
</tr>
<tr valign=top>
<td width=158>NtfsDisableLastAccessUpdate</td>
<td width=96>REG_DWORD</td>
<td width=174>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="cachedroamingprofiles"></a>Cached Roaming Profiles </h4>
<p>
<b>Category</b>: Windows NT User Profiles</p>
<p>
<b>Selection</b>: <b>Delete cached copies of roaming profiles</b></p>
<p>
<b>Description</b>: After a user logs off from an interactive session, if this value is enabled, the locally cached version of the roaming User Profile is deleted.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=128><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=210><b>Description</b></td>
</tr>
<tr valign=top>
<td width=128>DeleteRoamingCache</td>
<td width=96>REG_DWORD</td>
<td width=210>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="slownetworkdetection"></a>Slow Network Detection</h4>
<p>
<b>Category</b>: Windows NT User Profiles</p>
<p>
<b>Selection</b>: <b>Automatically detect slow network connections</b></p>
<p>
<b>Description</b>: Enables or disables detection of a slow network.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=134><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=204><b>Description</b></td>
</tr>
<tr valign=top>
<td width=134>SlowLinkDetectEnabled</td>
<td width=96>REG_DWORD</td>
<td width=204>Off = 0 or value is removed; On = 1</td>
</tr>
</table><br>
<h4><a name="slownetworktimeout"></a>Slow Network Timeout </h4>
<p>
<b>Category</b>: Windows NT User Profiles</p>
<p>
<b>Selection</b>: <b>Slow network connection timeout</b></p>
<p>
<b>Description</b>: Specifies the amount of time in milliseconds that  Windows NT waits before a slow network is determined.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>SlowLinkTimeOut</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = time in milliseconds in hexadecimal. Decimal: 1-20000; default = 2000.</td>
</tr>
</table><br>
<h4><a name="dialogboxtimeout"></a>Dialog Box Timeout </h4>
<p>
<b>Category</b>: Windows NT User Profiles</p>
<p>
<b>Selection</b>: <b>Timeout for dialog boxes</b></p>
<p>
<b>Description</b>: When the user is presented with a dialog box requesting User Profile information, this specifies the amount of time in seconds before the dialog box is closed and the default is accepted.</p>
<p>
<b>Key</b>: HKEY_LOCAL_MACHINE</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows NT</p>
<p>
\CurrentVersion</p>
<p>
\Winlogon</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>Show</td>
<td width=96>REG_DWORD</td>
<td width=234>Off = 0 or value is removed; On = time in seconds in hexadecimal. Decimal = 0-600; default = 30.</td>
</tr>
</table><br>
<h2><a name="registryentriesnotincludedinsystempolicyeditor"></a>Registry Entries Not Included in the System Policy Editor</h2>
<p>
The following section describes the locations and values for useful registry entries that are available in the operating system, but not available in the System Policy Editor. </p>
<h4><a name="autorun"></a>Autorun</h4>
<p>
<b>Category</b>:Windows NT Shell</p>
<p>
<b>Subcategory:</b>Removable media</p>
<p>
<b>Description</b>:Determines whether the Autorun feature is enabled on each drive connected to the system. When Autorun is enabled, media is started automatically when it is inserted in the drive. This value is comprised of 32 bits. The lower 26 bits each represent a drive, with the lowest (right-most) bit representing drive A and the 26th bit from the right representing drive Z. If a bit is set to 0, the autorun feature is enabled on that drive. If a bit is set to 1, the autorun feature is disabled on that drive.</p>
<p>
For example, if the value of this entry is 0x8 (1000 binary), autorun is disabled on drive D. Note that a value of 1 in the bit representing the CD-ROM drive takes precedence over the value of Autorun.</p>
<p>
<b>Key:</b> HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoDriveAutoRun</td>
<td width=96>REG_DWORD</td>
<td width=234>0x0 - 0x3FFFFFF</td>
</tr>
</table><br>
<h4></h4>
<h4>Start Banner</h4>
<p>
<b>Category</b>:Windows NT Shell</p>
<p>
<b>Subcategory:</b>Start banner</p>
<p>
<b>Description</b>:Hides the arrow and "Click here to start" caption that appears on the taskbar when you start Windows NT.</p>
<p>
<b>Key:</b> HKEY_CURRENT_USER</p>
<p>
\Software</p>
<p>
\Microsoft</p>
<p>
\Windows</p>
<p>
\CurrentVersion</p>
<p>
\Policies</p>
<p>
\Explorer</p>
<table border=1 cols=3 frame=hsides rules=rows>
<tr valign=top>
<td width=104><b>Registry Value</b></td>
<td width=96><b>Registry Data</b></td>
<td width=234><b>Description</b></td>
</tr>
<tr valign=top>
<td width=104>NoStartBanner</td>
<td width=96>REG_DWORD</td>
<td width=234>0 = enabled; 1= disabled.</td>
</tr>
</table><br>
<h2><a name="formoreinformation"></a>For More Information</h2>
<p>
For more information when configuring your network, refer to the following:</p>
<p>
<i>Windows NT Server Concepts and Planning Guide</i> &ndash; Chapter 3, &ldquo;Managing User Work Environments&rdquo; (part of the Windows NT Server product documentation).</p>
<p>
Kixtart Resource Kit Utility available in the <i>Windows NT Server Resource Kit</i> for version 4.0.</p>
<p>
For the latest information on Windows NT Server, check out our World Wide Web site at http://www.microsoft.com/backoffice or the Windows NT Server Forum on the Microsoft Network (GO WORD: MSNTS). </p>
<h2><a name="appendixaflowcharts"></a>Appendix A &ndash;Flowcharts</h2>
<h3><a name="userprofileflowcharts"></a>User Profile Flowcharts</h3>
<p>
These flowcharts illustrate how User Profiles operate within the Windows NT 4.0 operating system, and give the administrator an at-a-glance look at the procedures to take and the internal processing that occurs when User Profiles are implemented under Windows NT 4.0. </p>
<p>
<b>Flowchart 1. Administrator&rsquo;s First Tasks</b></p>
<p>
<b>Flowchart 2. User Logon (Part 1)</b></p>
<p>
<b>Flowchart 3. User Logon (Part 2)</b></p>
<p>
<b>Flowchart 4. User Logon &ndash; Accessing Server-based Profile</b></p>
<h3><a name="systempolicyflowchart"></a>System Policy Flowchart</h3>
<p>
This flowchart illustrates how System Policy is applied in the Windows NT 4.0 operating system, and gives the administrator an at-a-glance look at the internal processing that occurs when policies are implemented under Windows NT 4.0. </p>
<p>
<b>Flowchart 5. Policy Application</b></p>
<h2><a name="appendixbimplementinguserprofiles"></a>Appendix B - Implementing User Profiles</h2>
<p>
The following are typical user profile scenarios that you may encounter in the future or may have already encountered. Each of these scenarios includes a brief description of the situation, the current status of the profiles on the server, actions that you need to take to administer the profile properly, any required user action, references to sections of this guide that have more detailed information, and any applicable usage notes.</p>
<h3><a name="existingwindowsnt3.5xroamingprofile"></a>Existing Windows NT <i>3.5x</i> Roaming Profile</h3>
<p>
A domain user has an existing Windows NT <i>3.5x</i> roaming profile and will continue to log on to Windows NT <i>3.5x</i>-based computers only.</p>
<p>
<b>What currently exists:</b> A <i>myuser.usr</i> file exists in the folder <i>\\myserver\myshare.</i></p>
<p>
<b>Administrator action: </b>None.</p>
<p>
<b>User action: </b>None.</p>
<h3><a name="existingwindowsnt3.5xroamingprofile"></a>Existing Windows NT <i>3.5x</i> Roaming Profile</h3>
<p>
A domain user has an existing Windows NT <i>3.5x</i> mandatory profile and will continue to log on to Windows NT <i>3.5x</i>-based computers only.</p>
<p>
<b>What currently exists: </b>A <i>myuser.man</i> file exists in the folder <i>\\myserver\myshare.</i></p>
<p>
<b>Administrator action: </b>None.</p>
<p>
<b>User action:</b> None.</p>
<h3><a name="migratingwindowsnt3.5xroamingprofiletowindowsnt4.0roamingprofile"></a>Migrating Windows NT <i>3.5x</i> Roaming Profile to Windows NT 4.0 Roaming Profile</h3>
<p>
A domain user has an existing Windows NT <i>3.5x</i> roaming profile and moves to a Windows NT 4.0-based computer.</p>
<p>
<b>What currently exists: </b>A <i>myuser.usr</i> file exists in the folder <i>\\myserver\myshare.</i><b> </b></p>
<p>
<b>Administrator action: </b>None.</p>
<p>
<b>User action: </b>To automatically upgrade the profile, log on to the  Windows NT 4.0-based computer and then log off. The automatic upgrade creates a new folder with the name <i>myuser.pds</i> in the existing directory <i>\\myserver\myshare</i>. Inside the new folder is the upgraded User Profile for the domain user.</p>
<p>
<b>For more information: </b>See the section &ldquo;Upgrading <i>3.5x</i> Server-Based Profiles to 4.0 Roaming Profiles.&rdquo;</p>
<h3><a name="migratingwindowsnt3.5xmandatoryprofiletowindowsnt4.0mandatoryprofile"></a>Migrating Windows NT <i>3.5x</i> Mandatory Profile to  Windows NT 4.0 Mandatory Profile</h3>
<p>
A domain user has an existing Windows NT <i>3.5x</i> mandatory profile and moves to a Windows NT 4.0-based computer where the user will have a mandatory profile.</p>
<p>
<b>What currently exists:</b> A <i>myuser.man</i> file exists in the folder<b> </b><i>\\myserver\myshare</i>. </p>
<p>
<b>Administrator action: </b>Create<b> </b>a folder with the name <i>myuser.pdm</i> in the existing folder <i>\\myserver\myshare</i>, and then place the desired mandatory profile into the new folder.</p>
<p>
<b>User action:</b> None.</p>
<p>
<b>Notes: </b>Once this procedure is performed, the Windows NT <i>3.5x</i> profile is still available to the user should he or she ever log on to a Windows NT <i>3.5x</i>-based computer again. The Windows NT 4.0 User Profile is maintained separately. The administrator can remove the Windows NT <i>3.5x</i> profile if the user will only be using Windows NT 4.0-based computers.</p>
<p>
<b>For more information: </b>See the section<b> &ldquo;</b>Upgrading <i>3.5x</i> Mandatory Profiles to 4.0 Mandatory Profiles.&rdquo;</p>
<h3><a name="migratingwindowsnt3.5xmandatoryprofiletowindowsnt4.0roamingprofile"></a>Migrating Windows NT <i>3.5x</i> Mandatory Profile to  Windows NT 4.0 Roaming Profile</h3>
<p>
A domain user has an existing Windows NT <i>3.5x</i> mandatory profile and moves to a Windows NT 4.0-based computer where they will have a roaming profile.</p>
<p>
<b>What currently exists:</b> A <i>myuser.man</i> file exists in the folder<b> </b><i>\\myserver\myshare</i>. </p>
<p>
<b>Administrator action:</b> Change the user&rsquo;s profile path to <i>\\myserver\myshare\myuser</i>, and then allow the user to log on and log off. </p>
<p>
<b>User action: </b>When instructed to do so, log on to the Windows NT 4.0-based computer and then log off. This creates<b> </b>the folder <i>\\myserver\myshare\myuser </i>on the server containing the user&rsquo;s new roaming profile.</p>
<p>
<b>For more information: </b>See the section<b> &ldquo;</b>Creating a New Roaming User Profile for Windows NT 4.0.&rdquo;</p>
<h3><a name="creatingnewwindowsnt4.0roamingprofile"></a>Creating a New Windows NT 4.0 Roaming Profile</h3>
<p>
A new user will be logging onto Windows NT 4.0-based computers only, and will be using a roaming profile.</p>
<p>
<b>What currently exists:</b> Nothing currently exists for the user in <i>\\myserver\myshare</i>.</p>
<p>
<b>Administrator action: </b>In User Manager, specify the User Profile path without an extension. For example, use <i>\\myserver\myshare\myuser.</i></p>
<p>
<b>User action: </b>Log on and then log off. This creates the folder on the server \\<i>myserver\myshare\myuser </i>that contains the user&rsquo;s new roaming profile.</p>
<p>
<b>For more information: </b>See the section<b> &ldquo;</b>Creating a New Roaming User Profile for Windows NT 4.0.&rdquo;</p>
<h3><a name="creatingnewwindowsnt4.0mandatoryprofile"></a>Creating a New Windows NT 4.0 Mandatory Profile</h3>
<p>
A new user will be logging onto Windows NT 4.0-based computers only, and will be using a mandatory profile.</p>
<p>
<b>What currently exists:</b> Nothing currently exists for the user in <i>\\myserver\myshare</i>.</p>
<p>
<b>Administrator action: </b>In User Manager, specify the User Profile path with the extension .man. For example, use <i>\\myserver\myshare\myuser.man.</i> Then manually create the myuser.man folder manually in the <i>\\myserver\myshare</i> directory. Places the mandatory profile for the user in this new folder.</p>
<p>
<b>User action: </b>None.</p>
<p>
<b>For more information: </b>See the section<b> &ldquo;</b>Creating a New Mandatory User Profile for Windows NT 4.0.&rdquo;</p>
<h3><a name="updatingchangingroamingprofiletomandatoryprofile"></a>Updating and Changing a Roaming Profile to a Mandatory Profile</h3>
<p>
A domain user has an existing Windows NT 4.0 roaming User Profile that was not upgraded from Windows NT <i>3.5x</i>, and the administrator is going to mandate that the profile be read or logon will denied.</p>
<p>
<b>What currently exists:</b> A <i>myuser</i> folder containing the user&rsquo;s roaming profile exists in \<i>\myserver\myshare</i>.</p>
<p>
<b>Administrator action:</b> Use User Manager to add the <i>.man</i> extension to the User Profile path, thus changing the path to <i>\\myserver\myshare\myuser.man</i>. Then, rename the existing folder that contains the user&rsquo;s roaming profile from <i>myuser </i>to <i>myuser.man</i>. Finally, rename the NTuser.dat file, which is located in the root of the user&rsquo;s profile folder, to NTuser.man.</p>
<p>
<b>User action: </b>None.</p>
<p>
<b>For more information: </b>See the section<b> &ldquo;</b>Making a Roaming Profile Mandatory in Windows NT 4.0.&rdquo;</p>
<h3><a name="changingroamingprofiletomandatoryprofile"></a>Changing a Roaming Profile to a Mandatory Profile</h3>
<p>
A domain user has an existing Windows NT 4.0 roaming User Profile that was upgraded from Windows NT <i>3.5x</i>, and the administrator is going to mandate that the profile be read or logon will denied.</p>
<p>
<b>What currently exists:</b> A <i>myuser.pds</i> folder containing the user's roaming profile exists in <i>\\myserver\myshare</i>. </p>
<p>
<b>Administrator action:</b> Use User Manager to change the extension of the User Profile path to .<i>man</i>, changing the path to <i>\\myserver\myshare\myuser.man</i>. Then rename the existing folder that contains the user's roaming profile from <i>myuser.pds</i> to <i>myuser.pdm</i>. Finally, rename the NTuser.dat file, which is located in the root of the user's profile folder, to NTuser.man.</p>
<p>
<b>User action: </b>None.</p>
<p>
<b>For more information: </b>See the section<b> &ldquo;</b>Making a Roaming Profile Mandatory in Windows NT 4.0.&rdquo;</p>
<h2><a name="appendixcusagenotes"></a>Appendix C &ndash; Usage Notes</h2>
<h3><a name="importantinformationforadministratorsregardinguserlogonsuserlogoffs"></a>Important Information for Administrators  Regarding User Logons and User Logoffs</h3>
<p>
Changes that you make to server-based profiles can be lost if you do not modify the last modification date/time stamp. When a locally cached version of a profile is compared with the server-based profile, only the time/date stamp of the NTuser.xxx file is compared. If the stamps are the same, the local copy is used. If you have made modifications to other folders within the profile, these changes can be lost. Utilities are available to update the last modified date. </p>
<p>
If the Default User profile directory (including the NTuser.xxx file) is not available at log on, a new user who does not have a server-based Default User Profile will be unable to log on. When troubleshooting logon problems or if a user receives a message stating that the profile could not be loaded, always check for the existence of the Default User profile.</p>
<p>
If the locally cached copy of the User Profile is more current than the server-based profile, and if it is not mandatory, the user will be prompted to select which profile to use.</p>
<p>
If the user does not successfully receive a profile when he or she logs on, the user should check to see if the profile path can be reached by connecting to that resource with Explorer, File Manager, or Start\Run.</p>
<p>
Users who are members of both the Domain Users and Guests group or who are members of just the Guests group will have their local profiles deleted automatically at logoff.</p>
<h3><a name="recentupdatestoprofilessinceretailrelease"></a>Recent Updates to Profiles Since Retail Release </h3>
<p>
In the original retail release of Windows NT Server 4.0, if the administrator creates a mandatory profile that ends with .man and the user is denied access to the profile, the user is still able to log on locally, rather than being denied access. This problem was resolved in Service Pack 3.</p>
<p>
Under certain conditions, sharing violations when accessing roaming or mandatory profiles could occur. Before this problem was resolved, if multiple users tried to log on at the exact same time, a sharing violation could result on the files making up the User Profile because Windows NT was attempting to get exclusive access to the profile. This was resolved in Service Pack 2.</p>
<p>
Administrators creating shortcuts on one machine for use on a central server have run into problems on user&rsquo;s workstations where a password prompt is displayed asking for credentials to the machine that originally created the shortcut. This is due to the default behavior of Windows NT using the &ldquo;absolute path&rdquo; (the path to the original location where the shortcut was created), to start an application even if the application is available in the specified path of the shortcut properties. In Service Pack 2, support was added to give the administrator the ability to disable this behavior and use the path specified in the shortcut properties. For more information, reference Microsoft Knowledge Base article Q158682.</p>
<h3><a name="recentupdatestopoliciessinceretailrelease"></a>Recent Updates to Policies Since Retail Release</h3>
<p>
The following changes have been made to System Policies support since the initial retail release of Windows NT 4.0.</p>
<p>
When a policy file was to be downloaded, if the validating domain controller name was 13 characters or longer, the policy would not be applied. This has been resolved in Service Pack 3.</p>
<p>
<b>NoNetConnectDisconnect</b>, <b>NoTrayContextMenu</b>, <b>NoViewContextMenu</b>, <b>NoFileMenu</b>, and <b>DisableTaskMgr</b> were added in Service Pack 2. For more information on these, see the section, &ldquo;Registry Keys Modified by the System Policy Editor Default Templates.&rdquo;</p>
<p>
In Service Pack 2 and later, the policy file is no longer cached. This change was made to increase security. Instead of being cached, the policy file is downloaded at each logon, written to a temporary file, and applied.</p>
<p>
When the <b>NoViewContextMenu</b> policy was introduced, it did not support the tree view on the left-hand side of Explorer. This was corrected in Service Pack 3. If this option is turned on, context menus for both the list view and the tree view are disabled.</p>
<p>
Manual mode policy path expansion support was added in Service Pack 3. If you specify a policy path in the <b>registry</b> (rather than using Automatic mode), Windows NT now supports paths in the form of <i>\\someserver\share\</i>ntconfig.pol. </p>
<p>
If the administrator created a new policy file and turned on synchronous logon scripts, saved it to disk, and reloaded the policy file, the policy setting would be lost because the .adm file needed modification in three different places. This was corrected in Service Pack 3.</p>
<p>
Changing the location of a user&rsquo;s <b>Start</b> menu caused duplicate <b>Programs</b> items. If you used the System Policy Editor to change the <b>Custom Start Menu</b> to point to a different directory (even an empty one), the user would receive the normal <b>Programs</b> menu item and a <b>Programs</b> menu item above it that pointed to the All Users programs directory. This has been corrected in Service Pack 3.</p>
<p>
The Microsoft Office 97 Resource Kit contains .adm files that administrators can use when configuring the Office environment for their users. This is available now from Microsoft.</p>
<h2><a name="appendixdrelatedknowledgebasearticles"></a>APPENDIX D &ndash; Related Knowledge Base Articles</h2>
<p>
The articles below can be referenced either on TechNet or by using the Microsoft Knowledge Base on Microsoft&rsquo;s Web site: .</p>
<h3><a name="profiles"></a>Profiles</h3>
<p>
Q141714How to Use %LOGONSERVER% to Distribute User Profiles</p>
<p>
Q154120Debugging User Profiles and System Policies in Windows NT 4.0</p>
<p>
Q156568How to Assign the Administrator Profile to Other Users</p>
<p>
Q156697Updating Permissions for User Profiles</p>
<p>
Q158398Automating Network Printer Setup</p>
<p>
Q142682How to Create and Copy Roaming User Profiles in Windows NT 4.0</p>
<p>
Q146050Modifying Ntuser.dat Hive So New Users Get Defined Settings</p>
<p>
Q160546No User Profiles Were Found </p>
<p>
Q161070Step-by-Step Roaming Profiles Configuration</p>
<p>
Q157069Can&rsquo;t Access this Folder Path Is Too Long Error</p>
<p>
Q161809How to Create Mandatory Profiles for Windows 95 Users in Windows NT Domain</p>
<p>
Q165398Profiles for Members of Guests Group are Deleted</p>
<p>
Q164133Logon Allowed When Access Denied to Mandatory User Profile</p>
<p>
Q162790"Auto Arrange" Activates Itself in Copied User Profiles</p>
<p>
Q162717Autodial Settings Lost When Using Roaming Profiles</p>
<p>
<b>Q159927</b>Cannot Delete Certain User Profiles</p>
<p>
<b>Q160840</b>Sharing Violation When Accessing User Profiles</p>
<p>
<b>Q146192</b>How Windows NT Chooses Between Roaming and Local Profiles</p>
<p>
<b>Q158899</b>Prompted for Password When Restoring Persistent Connections</p>
<p>
<b>Q158682</b>Shortcuts Created Under Windows NT 4.0 Resolve to UNC Paths</p>
<p>
<b>Q155587</b>No Administrative Tools or Common Folders Available</p>
<p>
<b>Q157621</b>Personal Groups Not Visible If %Systemroot% Is Read-Only</p>
<p>
<b>Q156695</b>Locating Windows NT 4.0 Profile Directories for Duplicate User Accounts</p>
<p>
<b>Q138321</b>Err Msg at Logon: Unable To Log You On Because Your Profile...</p>
<h3><a name="policies"></a>Policies</h3>
<p>
<b>Q151176</b>Policy Registry Entries (Default User)</p>
<p>
<b>Q151177 </b>Policy Registry Entries (Default Computer)</p>
<p>
<b>Q154120</b>Debugging User Profiles and System Policies in Windows NT 4.0</p>
<p>
<b>Q156365</b>Hidden Shares Are no Longer Available After Using System Policy</p>
<p>
<b>Q156689</b>How to Change Print Job Priority in Windows NT 4.0</p>
<p>
<b>Q156699</b>Limitations of "Run Only Allowed Windows Application"</p>
<p>
<b>Q162774</b>Policy Editor Crashes When Using Large Custom ADM Files</p>
<p>
<b>Q162331</b>Internet Explorer May Not Run with System Policies</p>
<p>
<b>Q159936</b>Using the Windows NT 4.0 or Windows 95 System Policy Editor</p>
<p>
<b>Q160793</b>Additional Desktop Restrictions Available through Registry Modification</p>
<p>
<b>Q143164</b>INF: How to Protect Windows NT Desktops in Public Areas</p>
<p>
<b>Q158398</b>Automating Network Printer Setup</p>
<p>
<b>Q156698</b>Disabling Access to Network Resources Using System Policies</p>
<p>
<b>Q156432</b>Windows NT 4.0 Policy Restriction Error at Logon</p>
<p>
<b>Q155956</b>Cannot Restore Default Setting for Shutdown Button</p>
<p>
<b>Q163215</b>System Policies May Not Work With Third-Party GINA DLLs</p>
</BODY>
</HTML>
