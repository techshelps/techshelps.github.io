<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual Studio 97</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>



	<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>



	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->

<h1>Visual Studio 97</h1>
<h2>Introduction</h2>
<p>
Microsoft created Visual Studio™ 97 in response to customer demand. Faced with increasing diversity and complexity in their software development efforts, developers asked for a single development suite of tools so they can:
<ul>
<li>
Use Internet technologies for both public Web sites and private intranets. <br><br></li>
<li>
Access new enterprise services such as distributed components and transaction services.<br><br></li>
<li>
Benefit from the industry’s standardization around components based on the Component Object Model (COM).<br><br></li>
<li>
Integrate Internet technologies with client/server solutions.</li>
</ul>
<p>
Microsoft&reg; Visual Studio 97, Professional Edition, contains five core development tools and a comprehensive information CD:
<ul>
<li>
Microsoft&reg; Visual Basic&reg; 5.0, Professional Edition.<br><br></li>
<li>
Microsoft Visual C++&reg; 5.0, Professional Edition.<br><br></li>
<li>
Microsoft Visual J++ ™1.1, Professional Edition.<br><br></li>
<li>
Microsoft Visual InterDev™.<br><br></li>
<li>
Microsoft Visual FoxPro™ 5.0, Professional Edition.<br><br></li>
<li>
Microsoft Developer Network (MSDN) Library Reference CD-ROM.</li>
</ul>
<p>
Microsoft Visual Studio 97, Enterprise Edition, adds additional tools and technologies for creating scalable solutions and support for team development:
<ul>
<li>
Microsoft Visual Basic 5.0, Enterprise Edition.<br><br></li>
<li>
Microsoft Visual C++ 5.0, Enterprise Edition.<br><br></li>
<li>
Microsoft Visual J++ 1.1, Professional Edition.<br><br></li>
<li>
Microsoft Visual InterDev. <br><br></li>
<li>
Microsoft Visual FoxPro 5.0, Professional Edition.<br><br></li>
<li>
Microsoft&reg; Visual SourceSafe™ 5.0.<br><br></li>
<li>
Microsoft&reg; SQL Server™ 6.5, Developer Edition.<br><br></li>
<li>
Microsoft Transaction Server, Developer Edition.</li>
</ul>
<p>
The three key design goals for Microsoft Visual Studio 97 are:
<ul>
<li>
Provide best-of-breed Microsoft&reg; Visual Tool Suite to support any development scenario.<br><br></li>
<li>
Support open standards with easy-to-use features. <br><br></li>
<li>
Provide tools that can take on the biggest development challenges.</li>
</ul>
<p>
Visual Studio 97 is the first version of a suite of tools from Microsoft. It contains three widely used development tools: Visual Basic, Visual C++, and Visual FoxPro. Visual Studio also contains two new products, Visual InterDev and Visual J++, that add important functionality to the suite to address Internet development issues.</p>
<p>
While Visual Studio 97 is only a first step toward a fully integrated tool suite, it does provide a comprehensive set of best-of-breed development tools that support open standards and scalable solution development. Taken together, these tools can be used to tackle the widest range of development challenges.</p>
<h3>Provide Best-of-Breed Visual Tools to Support Any Development Scenario</h3>
<p>
The Internet has multiplied the number of architectures and scenarios that developers must handle beyond the already large number associated with Microsoft&reg; Windows&reg;-based, component, client/server, and multi-tier development. Therefore, there are four levels on which Visual Studio 97 must succeed to provide developers with the comprehensive tool set they need:
<ul>
<li>
Provide best-of-breed Visual Tools.<br><br></li>
<li>
Provide enterprise features for distributed solutions.<br><br></li>
<li>
Support important development scenarios.<br><br></li>
<li>
Provide comprehensive development support.</li>
</ul>
<h4>Provide Best-of-Breed Visual Tools</h4>
<p>
<b>Industry leading development tools</b></p>
<p>
Visual Studio 97 includes the Microsoft award-winning Visual Basic, Visual C++, and Visual J++ language tools, Visual FoxPro, and the new Visual InterDev.</p>
<p>
Currently 1.9 million developers&#45;more than 25 percent of all developers worldwide&#45;use the Microsoft Visual Basic programming system. Furthermore, that number does not include the 1.1 million developers using the Visual Basic for Applications language available in Microsoft&reg; Office, Microsoft&reg; Project, and soon, in many third-party applications.</p>
<p>
Microsoft Visual C++ also leads its class. Sixty-five percent of all developers writing applications based on Windows with a C/C++ tool use Microsoft Visual C++. </p>
<p>
With more than half a million developers building solutions with Visual FoxPro worldwide, Microsoft Visual FoxPro is also a worldwide leader among tools used by developers. </p>
<p>
Finally, Microsoft Visual J++ is being used by 25 percent of programmers using Java after being available for only a short time. Using Visual Studio 97, a developer can access development tools that are being used by millions of developers around the world (all numbers, except Visual FoxPro numbers, based on IDC estimates, December 1996; Visual FoxPro numbers based on Microsoft Corporation research).</p>
<p>
<b>Visual Basic 5.0</b></p>
<p>
The first tool to make Windows-based programming easy, the Microsoft Visual Basic version 5.0 programming system is now the leading tool for helping developers create and use ActiveX Components, build Active Documents for intranet browsers, build client/server or multi-tier solutions with high-speed data access, and build fast applications based on Windows. Version 5.0 adds a native-code compiler, implicit multi-threading, and integration with Microsoft Transaction Server to bring a new level of scalability to server-based components built with Visual Basic.</p>
<p>
Visual Basic 5.0 also provides developers with a new interface for faster programming. The IDE now features multiple document interface (MDI)  with docking and linking windows to eliminate unnecessary mouse and keyboard actions, and the code editor offers IntelliSense technology such as QuickTips, DataTips, List Members, and List Constants which eliminate the need to memorize syntax and learn object models. Finally, a complete object model to the Visual Basic IDE can be used by third-party vendors to create sophisticated add-ins to extend Visual Basic with modeling and CASE functionality.</p>
<p>
<b>Visual C++ 5.0</b></p>
<p>
The Microsoft Visual C++ version 5.0 development system is the development tool used to build many of the most well known desktop software applications in the world, including Microsoft&reg; Word and Microsoft&reg; Excel. Many applications continue to require the language flexibility of C++ and the performance tuning options of a sophisticated C/C++ language compiler, which makes Visual C++ the ideal tool for the most demanding performance requirements. New features in Visual C++ 5.0 include important compiler updates that reduce the size of an application by as much as 10 percent. Using new language syntax extensions, developers who use Visual C++ can use Active Scripting syntax together with C++ language syntax so that they can reuse pre-built components as easily as do Visual Basic and Visual InterDev developers.</p>
<p>
<b>Visual J++ 1.1</b></p>
<p>
The Microsoft Visual J++ development system is the tool for professional developers building applets and applications with Java&#45;it has the fastest compilation of any tool available and the only bytecode debugger. Developers using Visual J++ can pursue two options: they can build pure Java applications and applets that run on any platform with a Java virtual machine (Java VM), or they can use Visual J++ to build components with Java and expose component functionality through standard ActiveX interfaces. Integration using ActiveX technologies with Visual J++ works both ways so developers can use Java as the glue for components written in other languages, or they can expose the functionality of Java applications using the same ActiveX Component interfaces. This can be especially useful for building server-side Java components, and integrating these server-side components with other application elements exposed as ActiveX Server Components.</p>
<p>
<b>Visual InterDev </b></p>
<p>
The Microsoft Visual InterDev integrated Web application development system meets the needs of developers who want to build dynamic, database-driven Web applications for corporate intranets and the Internet. The Visual InterDev development environment integrates all the tools developers need to create, publish, and manage Web applications that can be accessed by any Web browser running on any platform. Visual InterDev offers an easy-to-use, rapid development environment for building Active Server Pages, formerly code-named “Denali,” a feature of Microsoft Internet Information Server (IIS) version 3.0. </p>
<p>
Additionally, Visual InterDev includes extensive database tools for connecting a Web site to any database using Open Database Connectivity (ODBC). With visual database tools such as an integrated Data View, Query Designer, Database Designer, and a multitude of database wizards and programmable data access components, Visual InterDev makes it easy to create sophisticated database-driven Web applications. Finally, Visual InterDev also offers advanced publishing and site management features, as well as support for team-based projects through interoperability with the Microsoft Front Page&reg; 97 Web authoring tool and integration with Visual SourceSafe 5.0.</p>
<p>
<b>Visual FoxPro 5.0</b></p>
<p>
The Microsoft Visual FoxPro version 5.0 database management system continues the leadership tradition of version 3.0. It features powerful ActiveX extensibility with a new ability to create ActiveX Components using the FoxPro database language, better forms loading and query performance, improved connectivity features, and an enhanced development environment. The enhanced development environment shares the functionality of the powerful debugger found in Microsoft Visual C++. Improved support, including the ability to subclass, and the ability to reuse third party ActiveX Controls, extends the power of Visual FoxPro. Developers can build applications with greatly improved connectivity features such as offline views and multi-tier client/server functionality. And through its ability to create ActiveX Server Components, Visual FoxPro applications can now be easily integrated with Web applications.</p>
<p>
<b>Shared development environment</b></p>
<p>
Three of the popular tools in Visual Studio 97&#45;Visual J++, Visual C++, and Visual InterDev&#45;share a common development environment. The shared IDE can host projects that contain any of these file formats and many others&#45;including hypertext markup language (HTML), and graphics. The shared IDE offers features to make developers more productive, including:
<ul>
<li>
<b>Integrated debugging.  </b>Using the shared development environment, a developer can verify and debug the interfaces between ActiveX Server Components and the code that calls them. Furthermore, the new native code compile feature of Visual Basic 5.0 provides a set of symbols that are recognized by Visual C++. This means a developer can debug a Visual Basic-created control or application using Visual C++.<br><br></li>
<li>
<b>Macro scripting.  </b>The integrated development environment provides scripting of the development environment using the popular Visual Basic Scripting language (VBScript). Developers can now automate and speed development of common tasks.<br><br></li>
<li>
<b>Command bars and customizable toolbars.  </b>The integrated development environment sports the same command bar interface as Microsoft Office 97, with configurable, dockable menu bars, and intuitive icons in the menus that remind a developer of the function of a command and how to access it using a toolbar shortcut.<br><br></li>
<li>
<b>Integrated browser.  </b>Developers can browse Web pages directly inside the IDE, a convenient productivity feature that makes it unnecessary to open a separate Web browser window to view a site under construction. The integrated browser is based on the Microsoft Internet Explorer version 3.0 Web browser and supports all its features. The IDE also offers a Preview in Browser feature, so developers can use other browsers when viewing and testing a Web application.</li>
</ul>
<h4>Provide Best-of-Breed Enterprise Tools</h4>
<p>
Visual Studio 97, Enterprise Edition, adds products for team development and for building sophisticated multi-tier and transaction processing systems. In addition to the Enterprise versions of Visual Basic and Visual C++, Visual Studio 97 contains three important developer products:</p>
<p>
<b>Microsoft Visual SourceSafe 5.0</b></p>
<p>
The Microsoft Visual SourceSafe version 5.0 version control system provides support for managing source code in development teams and for managing Web site content. Fully integrated with Visual Basic, Visual C++, Visual J++, Visual InterDev, and Visual FoxPro, Visual SourceSafe delivers easy-to-use, project-oriented version control.</p>
<p>
<b>Microsoft SQL Server 6.5, Developer Edition</b></p>
<p>
Using a develop-and-test license, developers can build and test Microsoft SQL Server version 6.5 database systems using Visual Studio 97 tools. Microsoft SQL Server is a scalable, high-performance database management system designed specifically for distributed client/server computing. Its built-in data replication, powerful management tools, and open system architecture offer a superior platform for delivering cost-effective information-based solutions.</p>
<p>
<b>Microsoft Transaction Server, Developer Edition</b></p>
<p>
Using a develop-and-test license, developers can create and test complete Microsoft Transaction Server-based solutions using Visual Studio 97 tools. Microsoft Transaction Server provides the application infrastructure&#45;including transactions, cross-platform integration, and scalability&#45;required to build reliable distributed business systems solutions easily. Using the Transaction Server, developers can focus on business solutions instead of on application infrastructure, thereby lowering the cost and complexity of building and supporting server applications.</p>
<h4>Support Important Development Scenarios</h4>
<p>
The growth of the Internet and the introduction of new server-side and distributed computing technologies have greatly increased the demands on software development. Visual Studio 97 meets these new demands by addressing the full range of development scenarios: 
<ul>
<li>
<b>Building multi-tiered solutions.  </b>Using Visual Studio 97, developers can make the transition from client/server to multi-tier development with Distributed COM (DCOM) and Microsoft Transaction Server.<br><br></li>
<li>
<b>Creating Web sites.  </b>Using Visual Studio 97, developers can publish Web content, manage data-intensive Web sites, and create dynamic applications for the Web.<br><br></li>
<li>
<b>Developing with components.  </b>Using Visual Studio 97, developers can build, use, and reuse ActiveX Components.<br><br></li>
<li>
<b>Integrating Internet technologies and client/server solutions.  </b>Using Visual Studio 97, developers can add Web interfaces to existing client/server solutions.</li>
</ul>
<p>
<b>Building multi-tier solutions</b></p>
<p>
Using tools such as Visual Basic, Visual FoxPro, Microsoft Access, and Visual C++, application developers have built departmental solutions. These solutions have been built on personal computers (PC) running Windows operating systems, inexpensive server computers, and database management systems (DBMS). As these client/server solutions have become widely used and have grown to represent line-of-business solutions, there is a growing need to scale them for wider use and easier maintenance.</p>
<p>
Distributed, or multi-tier, computing in the form of separate user interface, data storage, and business rule components is now attainable for solutions employing inexpensive PC technology. Two essential elements for building multi-tiered solutions using PC technology are Microsoft Transaction Server for managing server transactions and DCOM for easily connecting client and server components. With the inclusion of the Microsoft Transaction Server, Developer Edition, and capability to create COM components using every tool in the Visual Studio 97 suite, Visual Studio 97 supports the core enabling technologies of multi-tier development. Using Visual Studio 97, developers can migrate existing client/server solutions to multi-tiered architectures.</p>
<p>
<b>Creating Web sites</b></p>
<p>
The primary use of the World Wide Web has been to publish information and graphics to users. While this has been a very popular use of Web technologies, there is an opportunity to migrate these publishing sites to full applications where users have access to dynamically generated data and rich user interfaces. These applications are then useful as line-of-business Internet and intranet applications. The challenge for Microsoft is not merely to make this possible&#45;it is already possible if developers use a variety of tools and custom scripts&#45;but also to make it easy using the tools in Visual Studio 97.</p>
<p>
With Visual Studio 97, developers can easily create dynamic Web applications. Visual Studio 97 developers can:
<ul>
<li>
Manage their Web project using Visual InterDev and build HTML pages that can be viewed on any platform by any browser. <br><br></li>
<li>
Add server components written in Visual C++, Visual Basic, or any language capable of creating ActiveX Components.<br><br></li>
<li>
Add client components written with Visual J++ as a Java applet or as a reusable ActiveX Component written in Visual J++, Visual C++, or Visual Basic.<br><br></li>
<li>
Use JScript or VBScript for client-side and server-side scripting.<br><br></li>
<li>
Add connections to virtually any database using ODBC.</li>
</ul>
<p>
Using these capabilities, a development organization can create dynamic, data-centric Web applications that can be deployed on the World Wide Web or on a corporate network.</p>
<p>
<b>Developing with components</b></p>
<p>
All of the tools in Visual Studio 97 are either creators or consumers of reusable COM-based components, known as ActiveX Components, which can run on client PCs, in Internet browsers, or on PC servers with Microsoft IIS or Microsoft Transaction Server. If run on the server, these components are referred to as ActiveX Server Components although there are no changes required to run ActiveX Components on a server. ActiveX Controls are a special kind of ActiveX Component that can respond to user events such as the click of a button.</p>
<p>
ActiveX Components all share the characteristic of being easy to assemble using Visual Studio 97 tools. Also, a large number of components can be purchased from third-party vendors. As a result, developers can easily build or purchase, assemble, and deploy ActiveX Components.</p>
<p>
Using Visual Basic, Visual C++, Visual J++, and Visual FoxPro, a developer can build ActiveX Components. Using Visual Basic and Visual C++, a developer can build ActiveX Controls. All Visual Studio 97 tools are consumers of ActiveX Components. In particular Visual InterDev can not only use them with Internet clients and servers, but it can also use a specialized kind of ActiveX Control named Design-time ActiveX Control.</p>
<p>
<b>Integrating Internet technologies and client/server solutions</b></p>
<p>
The final scenario is a combination of the previous three. As client/server systems migrate to multi-tier solutions, as Web publishing sites evolve into Web applications, and as ActiveX Components are created that can be used in both scenarios, all three elements often merge in the creation of a single solution. That solution could be a Web-based catalog or a line-of-business inventory management application running on a corporate intranet. Using Visual Studio 97 tools, developers can integrate Internet technologies and client/server solutions by using components to build the business logic that connects Web applications to network data, and using the tools to create rich interfaces for customers and business partners.</p>
<h4>Provide Comprehensive Development Support</h4>
<p>
Visual Studio 97 puts all the right tools into the hands of developers, but their needs do not stop when they purchase the product. Microsoft provides ongoing developer support through paid telephone support, and an award-winning reference library. Microsoft also actively supports third-party channels for software support, training, and information.</p>
<p>
<b>MSDN Reference Library </b></p>
<p>
The MSDN Library CD-ROM is included in the Visual Studio 97 box. The MSDN Library is the comprehensive source of technical information about Microsoft tools, platforms, and technologies. The Library CD-ROM contains a database of thousands of articles and code samples published by Microsoft Product Support Specialists to help developers address specific technical challenges. All the product documentation for the tools in Visual Studio 97 is indexed and cross-referenced on the CD-ROM.</p>
<p>
<b>MSDN Online</b></p>
<p>
Augmenting the MSDN Library CD-ROM is a dynamic Web site especially for developers. Developers can find the latest news and information online so they can stay up-to-date on techniques for getting the most from their development work using Microsoft tools.</p>
<p>
<b>Microsoft product support services</b></p>
<p>
Visual Studio 97, Enterprise Edition, includes four no-charge support calls, and Visual Studio 97, Professional Edition, includes two no-charge support calls. Microsoft Product Support Specialists can answer the broadest range of technical questions about Microsoft development technologies. Developers who need additional assistance can choose from a range of support offerings, from additional support calls to 24-by-7 support contracts.</p>
<p>
<b>Additional developer support </b></p>
<p>
Developers who use Visual Studio 97 can access a worldwide network of product support and training resources. This network includes 
<ul>
<li>
Hundreds of third-party books on the development tools in Visual Studio 97.<br><br></li>
<li>
The Microsoft Mastering Series, a set of interactive self-paced tutorials on the development tools in Visual Studio 97.<br><br></li>
<li>
Microsoft Authorized Technical Education Centers (ATEC) that offer hands-on training around the world.<br><br></li>
<li>
Microsoft-sponsored and third party-sponsored development conferences.<br><br></li>
<li>
A worldwide network of development tool user groups. </li>
</ul>
<p>
Visual Studio 97 is backed by one of the largest communities of developer resources.</p>
<h3>Support Open Standards with Easy-to-Use Features </h3>
<p>
Visual Studio 97 is designed to give developers choice and flexibility in their application development by supporting standards that are broadly adopted by customers, whether those standards are driven by organizations such as the World Wide Web Consortium (W3C) or the Open Group, or by vendors like Microsoft, Sun&reg;, and Netscape&reg;. Visual Studio 97 supports open standards in three ways: 
<ul>
<li>
<b>ActiveX.  </b>Each tool uses the ActiveX Component standard.<br><br></li>
<li>
<b>Connectivity.  </b>Each tool supports access to the broadest range of corporate data.<br><br></li>
<li>
<b>Web.  </b>Visual Studio 97 delivers a complete set of tools for developing dynamic Web applications.</li>
</ul>
<h4>ActiveX Technologies</h4>
<p>
All of the Visual Studio 97 tools use the ActiveX Component standard, which is one of the most widely implemented and supported software component standards in the industry. In fact, ActiveX Components sustain an industry of several hundred firms that create thousands of controls for resale to developers.</p>
<p>
ActiveX Components may be used either in-process or out-of-process and can be created in any language. A sophisticated subset of ActiveX Components, ActiveX Controls, can support events and are a popular building block for developers creating solutions with Visual Basic, Visual FoxPro, Microsoft Office, and other tools. ActiveX Automation is the term for code, or the act of executing code, that is written against the exposed interface, or object model of an ActiveX Component.</p>
<p>
The key to understanding ActiveX Components is simple. They all work in the same way. However, attempts to clarify the naming strategy have frequently confused, rather than simplified, the situation. For example, ActiveX Components can be run on a client, an application server, a Web server, or Microsoft Transaction Server. They can be written in Visual J++, Visual FoxPro, Visual Basic, and Visual C++, and they can be automated (programmed against) by all of the Visual Studio 97 tools. Whether called ActiveX Server Components (running on the server) or Java applets with COM interfaces, or ActiveX Controls created in Visual Basic Control Creation Edition, they in fact all belong to the same class of software component.</p>
<p>
ActiveX is built on top of the Component Object Model. Distributed COM for Microsoft&reg; Windows&reg;<sup> </sup>95 and Microsoft&reg; Windows NT&reg; enables software components to be programmed across a network. Software vendors such as SoftwareAG are porting DCOM to other platforms. In addition, DCOM is one of the ActiveX Core Technologies Microsoft has turned over to The Open Group for management as a public standard. The Open Group is chartered to license ActiveX technologies for porting to other platforms.</p>
<p>
<b>Creating ActiveX Components</b></p>
<p>
Building ActiveX Components and ActiveX Controls has become important to developers. Visual Studio 97 offers a range of tools for building ActiveX Components.
<ul>
<li>
<b>Visual Basic.  </b>Visual Basic is designed to be one of the fastest ways to build ActiveX Controls. Wizards support the development and deployment of ActiveX Controls, including the ActiveX Control Interface Wizard, the Property Page Wizard, and the Setup Wizard. Controls created with Visual Basic can include Authenticode licensing and support for developer-only licensing.<br><br></li>
<li>
<b>Visual C++.  </b>Visual C++ includes COM support at the syntax level with new features that make it easier for C++ developers to work with COM objects, build COM objects, and reuse ActiveX Components. These new features are Class View, the COM Wizard, and the Import Statement.<br><br></li>
<li>
<b>Visual J++.  </b>Developers who use Visual J++ can use components to extend Java code for solutions based on Windows and can create reusable ActiveX Server Components. Visual J++ 1.1 includes a new wizard that eases the creation of ActiveX Server Components.<br><br></li>
<li>
<b>Visual FoxPro.  </b>Using Visual FoxPro, developers can create ActiveX Server Components that display reusable forms, implement business rules, or package a complex routine into a simple component that other programmers can use on the client or the server.</li>
</ul>
<p>
<b>Using ActiveX Components</b></p>
<p>
All of the tools in Visual Studio 97 support ActiveX Automation and can access functionality stored in ActiveX Components built to run on either the client or the server. All Visual Studio 97 tools except Visual J++ can host ActiveX Controls. Visual InterDev supports the hosting of ActiveX Controls in its WYSIWYG HTML editor, so that Internet browsers with support for ActiveX Controls, including Microsoft Internet Explorer and Netscape Navigator with NCompass, can view them.</p>
<p>
<b>Using Design-time ActiveX Controls</b></p>
<p>
Visual InterDev introduces a special kind of ActiveX Control, the Design-time ActiveX Control. Developers building Web applications use these controls as helper tools in creating HTML and VBScript or JScript code to run on the Web client or server. Because the interfaces for creating them are public, what they can accomplish is basically unlimited. Examples of Design-time ActiveX Controls that ship with Visual InterDev are controls that create data access logic, handle data retrieval, and format HTML pages.</p>
<p>
<b>Creating Active Documents</b></p>
<p>
Unlike an ActiveX Control that is displayed within the page of the document or form that hosts it, an Active Document is a full-scale, conventional document hosted in an Internet browser. Active Documents control part of the user interface, merging application menus with the container menus. Active Documents have two important benefits. First, they lower software ownership costs by eliminating the need for client deployment. Second, with them, a user can maintain a single desktop interface, which, in turn can lead to lowering user training costs and raising user productivity. 
<ul>
<li>
<b>Visual Basic.  </b>Visual Basic includes an Active Document Migration Wizard that converts existing applications written in Visual Basic into Active Documents that can be viewed using Microsoft Internet Explorer and can be automatically downloaded and updated.<br><br></li>
<li>
<b>Visual C++.  </b>Visual C++ includes an AppWizard that makes it easier for developers to add Active Document support to C++ applications.</li>
</ul>
<h4>Connectivity: Support for Data Access Standards</h4>
<p>
Powerful database connectivity options and easy-to-use database tools are an integral component of any developer’s attempt to integrate Internet technology with client/server solutions. All database connectivity features in Visual Studio 97 are based on the industry-standard ODBC, and the tools in Visual Studio 97 work with a broad range of databases, including ORACLE&reg;, Microsoft SQL Server, Microsoft&reg; Access, Microsoft Visual FoxPro, Informix&reg;, Sybase&reg;, IBM DB2&reg;, and others.</p>
<p>
<b>High-level data access interfaces</b></p>
<p>
Visual Studio includes three data access interfaces developers can use in accessing data. These include:
<ul>
<li>
<b>Data Access Objects</b> <b>3.5</b> (DAO) is a COM-based interface to the Microsoft Jet database engine. DAO enables access to other ODBC data sources, and in the current version, it includes a feature named ODBCDirect, which offers access to RDO for direct and very fast access to ODBC data sources.<br><br></li>
<li>
<b>Remote Data Object</b> <b>2.0</b> (RDO) is a COM-based interface to ODBC available with the Professional and Enterprise Editions of Visual Studio 97. RDO 2.0 offers high speed data access to ODBC data sources and is approximately 20 percent faster than RDO 1.0. RDO 2.0 includes new client batch cursors, enhanced asynchronous processing, and features for writing data access applications that are completely event driven. By using these new features in RDO 2.0 to access data, developers can create database code that is up to 2.2 times faster than RDO 1.0. <br><br></li>
<li>
<b>Active Data Objects</b> (ADO) is a COM-based interface to ODBC and to OLE DB data sources. ADO enables server-based access to relational and non-relational data sources. When using Visual InterDev, ADO is the interface that is scripted in either VBScript or JScript. ADO supports a rich set of properties for setting locking levels, cursor options, query and login time-outs, transaction support, result set scrolling, error handling, and more.</li>
</ul>
<p>
<b>Integrated SQL debugging</b></p>
<p>
Developers using Visual Studio 97, Enterprise Edition, can interactively debug and view Structured Query Language (SQL) stored procedures from within Visual Basic or Visual C++. Using integrated SQL debugging, a developer can implement stored procedures in a SQL database and verify or debug those stored procedures in the context of the application that is calling them. Using the power of distributed computing technology, a developer can step from Visual C++ or Visual Basic source code executing on a client computer to Microsoft SQL Server 6.5 source code executing on a remote server computer.</p>
<p>
<b>Microsoft Visual Database Tools</b></p>
<p>
Visual Studio includes new tools for data definition. These tools can be used from within Visual InterDev, Visual Basic, Enterprise Edition, or Visual C++, Enterprise Edition.
<ul>
<li>
<b>The Query Designer.  </b>The Query Designer is a sophisticated SQL Query Designer that works with any ODBC data source.<br><br></li>
<li>
<b>The Database Designer.  </b>Using the Database Designer, a developer can create database schemas for databases built using Microsoft SQL Server, version 6.5. </li>
</ul>
<h4>Web Standards Support</h4>
<p>
Visual Studio 97 supports HTML standards endorsed by the World Wide Web Consortium (W3C), and offers features in all of the tools that make it easy to support Internet protocols. Developers can use Visual J++ and Visual InterDev to create Web applications that run using any browser on any platform.</p>
<p>
<b>Run Visual J++ applets anywhere</b></p>
<p>
Developers who use Visual J++ have full access to the entire Java class library. Developers can create a Java applet or application and run it on all platforms and browsers. Visual J++ applets can run on any Java VM, including the Apple&reg; Macintosh&reg; Java VM, the Windows Java VM, and on any operating system that supports a Java virtual machine.</p>
<p>
<b>Build Web sites </b></p>
<p>
The Visual InterDev development environment integrates all the tools a developer needs to create, publish, and manage Web applications designed to be accessed by any Web browser running on any platform. A Visual InterDev project consists of a live Web site. When developers open a project, they can work with a live view of a site as it exists on a Web server. The server can be a personal development server running on a developer’s workstation, but more typically, it will be a staging or production Web server running on a network. Visual InterDev is thus a complete Web site management tool that developers can use to easily modify the structure of a Web site and to edit, add, move, rename, and delete files and folders for the site. </p>
<p>
<b>Integrate applications with the Internet</b></p>
<p>
Visual Basic has added several controls that make it easier to integrate applications with the Internet. 
<ul>
<li>
Using the Internet Transfer Control, developers can build applications that transfer files to and from Internet sites.<br><br></li>
<li>
Using the WinSock Control developers can create real-time client/server applications over the Internet or any TCP/IP or UDP network. <br><br></li>
<li>
Using the WebBrowser Control, developers can integrate Web browsing into a Visual Basic application seamlessly.</li>
</ul>
<p>
Using the classes and wizards in Visual C++, developers can build Internet server application programming interface (ISAPI) extensions and filters. Developers can customize their Internet and intranet servers with ISAPI extensions and filters that take specific actions when designated events occur. For example, an ISAPI filter could be used to track logins to a Web site, or an ISAPI extension could be used to add credit card validation to a Web site.</p>
<h3>Provide Visual Tools for the Largest Development Challenges</h3>
<p>
PC-based solutions are achieving performance loads once reserved for mainframe computers. The result is more large scale and mission-critical applications being based on PCs. The tools in Visual Studio 97 meet these new application requirements with support for large-scale development projects in three areas:
<ul>
<li>
Performance.<br><br></li>
<li>
Team Development.<br><br></li>
<li>
Building and testing large systems.</li>
</ul>
<h4>Performance</h4>
<p>
All Visual Studio 97 tools have been optimized for speed and performance so they support development of the largest applications. </p>
<p>
<b>Visual Basic 5.0 native code compilation</b></p>
<p>
Using Visual Basic version 5.0, developers can build high-performance applications and components with a new native code compiler&#45;the same compiler used by the Visual C++ version 5.0 product. Resulting language and CPU-intensive benchmarks run up to 20 times faster than applications built with earlier versions of Visual Basic.</p>
<p>
<b>Visual Basic 5.0 forms performance</b></p>
<p>
In addition to a native code compiler, Visual Basic 5.0 provides faster application load, form load, and form show capabilities.</p>
<p>
<b>Visual C++ 5.0 compiler enhancements</b></p>
<p>
The new optimized compiler in Visual C++ version 5.0 decreases the size of executables by up to 10 percent&#45;a significant improvement over recent gains of three to four percent per release&#45;and adds Intel&reg; MMX and Pentium&reg; Pro support. Because it is smaller, the code executes more quickly on virtual memory operating systems such as the Windows 95 and Windows NT Workstation operating systems.</p>
<p>
<b>Visual J++ 1.1 compiler and virtual machine for Windows</b></p>
<p>
The Visual J++ compiler, based on the Microsoft Visual C++ compiler technology, compiles at 10,000 lines/second, many times faster than the compiler included with the Java Development Kit. In addition, the Java virtual machine for Windows is by far the fastest on the market.</p>
<p>
<b>Visual FoxPro 5.0 speed enhancements</b></p>
<p>
Visual FoxPro 5.0 is a major release in terms of speed enhancements. Specific areas of enhancement include the speed with which objects are rendered on the screen, control data binding, and the memory footprint for several frequently used controls. The result is from 40 percent to 200 percent faster performance for forms, depending on computer configuration. Data retrieval using the common <b>Where</b> clause is also significantly faster.</p>
<h4>Team Development </h4>
<p>
All products in Visual Studio 97 support the latest edition of the award-winning Microsoft Visual SourceSafe, which manages source code in development teams and Web site content. Once installed, Visual SourceSafe is fully integrated with Visual Basic, Visual C++, Visual J++, Visual InterDev, and Visual FoxPro menus and delivers easy-to-use, project-oriented version control. </p>
<p>
Visual InterDev takes this support for team development to a new level with advanced site management and publishing features so a developer can manage the various inputs to a Web project.</p>
<p>
Microsoft Visual Basic 5.0 also offers Microsoft Repository, the first version of a new object storage system. In this release of Visual Studio, the repository works only with Visual Basic 5.0.</p>
<h4>Building and Testing Large Systems </h4>
<p>
All of the products in Visual Studio 97 support ActiveX Automation which, when coupled with Distributed COM, enables them to integrate software components located elsewhere on the network or to connect to server processes hosted by Microsoft Transaction Server. </p>
<p>
<b>DCOM support in Visual Studio 97</b></p>
<p>
Any out-of-process ActiveX Server Component can be seamlessly distributed over a server network using DCOM. This means that software components requiring computational-intensive processing can be distributed to application servers, including servers running Microsoft IIS or Microsoft Transaction Server to efficiently process requests, resulting in more effective load balancing, higher performing applications, and greater fault tolerance. In addition, because these ActiveX Server Components are the same as ActiveX Components running on a client, they can be easily scripted using any language.</p>
<p>
<b>Microsoft SQL Server and integrated SQL debugging</b></p>
<p>
Visual Studio 97, Enterprise Edition, includes a developer edition of Microsoft SQL Server 6.5. Using the developer edition, a developer can  immediately begin building databases to test and evaluate production systems. Perhaps most important, developers can interactively debug and view SQL stored procedures from within Visual Basic or Visual C++. </p>
<p>
<b>Microsoft Transaction Server </b></p>
<p>
Visual Studio 97, Enterprise Edition, includes a developer edition of Microsoft Transaction Server. Transaction Server combines the flexibility and low-cost of desktop application development with the mission-critical transaction processing features normally found in high-end mainframe systems. It is a component-based transaction processing system for developing, deploying, and managing high performing enterprise, Internet, and intranet server applications.</p>
<p>
Microsoft Transaction Server provides the easiest way to run server applications on servers running Windows NT Server because applications are built using ActiveX Components and transactions are automatically built into applications. Developers can use Visual Basic 5.0, Visual C++ 5.0, or Visual J++ 1.1 to create ActiveX Components that are compatible with Microsoft Transaction Server.</p>
<p>
<b>Visual InterDev connection pooling</b></p>
<p>
Visual InterDev establishes global database connections for a site that Microsoft IIS automatically pools across users. Pooling, connection caching, and time-out values are all established automatically based on default properties, but they can easily be customized by a developer. Consequently, users of the solution rarely wait for a database connection on the server.</p>
<p>
<b>The Application Performance Explorer </b></p>
<p>
Visual Studio 97, Enterprise Edition, includes the Application Performance Explorer (APE). APE is a utility that aids in the design, deployment planning, and performance tuning of distributed client/server applications. Using APE, developers can test-drive different multi-tier scenarios before committing to one. Once an architecture has been chosen, APE gives developers access to reusable Visual Basic source code for their application.</p>
<h3>Conclusion</h3>
<p>
Visual Studio 97 is the first comprehensive suite of tools to address the complete range of development challenges. With Visual Studio 97, developers can:
<ul>
<li>
Use Internet technologies for both public Web sites and private intranets. <br><br></li>
<li>
Access new enterprise services such as distributed components and transaction services.<br><br></li>
<li>
Benefit from the industry’s standardization around components based on the Component Object Model.<br><br></li>
<li>
Integrate Internet technologies with client/server solutions.</li>
</ul>
<p>
Visual Studio 97 provides best-of-breed tools that support open standards and can take on the biggest development challenges.</p>
<p>
Each of the best-selling tools in Visual Studio 97 gives developers choice and flexibility in their application development by supporting open standards that are broadly supported. The tools in Visual Studio 97 do this by providing support for component standards through ActiveX, providing world-class data connectivity, and enabling pure Web development. Able to take on the biggest development challenges, Visual Studio 97 offers developers optimized compiler technology that brings excellent performance to the largest applications, supports developers working in teams, and delivers support for building and testing scalable enterprise solutions.</p>
<p>
While Visual Studio 97 is only the first step toward a fully integrated development tool suite, it already shows how an integrated tool suite can be greater than the sum of its parts.
<ul>
<li>
The three core development languages in Visual Studio 97&#45;Visual Basic, Visual C++ and Visual J++&#45;all take advantage of one of the best native code compilers available. <br><br></li>
<li>
Every tool is a consumer and/or producer of ActiveX Controls and ActiveX Server Components. Consequently, developers can integrate multiple components into a single application and choose the best tool to build each component.<br><br></li>
<li>
Each of the tools supports access to the broadest range of data through common ODBC standards.<br><br></li>
<li>
With shared technologies like the Visual Database Tools and SQL debugging, and the integrated development environment for Visual C++, Visual InterDev, and Visual J++, developers can master a technology once and use it with all the tools.</li>
</ul>
<p>
&copy; 1997 Microsoft Corporation. All rights reserved.</p>
<p>
The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication.</p>
<p>
This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS SUMMARY.</p>
<p>
Microsoft, Visual Basic, Visual C++, Windows, and Windows NT are registered trademarks and Visual FoxPro, Visual SourceSafe, SQL Server, and Front Page are trademarks of Microsoft Corporation.</p>
<p>
IBM and DB2 are registered trademarks of International Business Machines Corporation. Sun is a registered trademark of Sun Microsystems, Inc. Intel and Pentium are registered trademarks of Intel Corporation. Netscape is a registered trademark of Netscape Communications Corporation. Sybase is a registered trademark of Sybase, Inc. Informix is a registered trademark of Informix Software, Inc.  Apple and Macintosh are registered trademarks of Apple Computer, Inc. ORACLE is a registered trademark of Oracle Corporation.</p>
<p>
Other product or company names mentioned herein may be the trademarks of their respective owners.</p>
</font></BODY>
</HTML>
