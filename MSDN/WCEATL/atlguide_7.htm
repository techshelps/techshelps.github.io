<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What's Different in ATL for Windows CE</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_whats_different_in_atl_for_windows_ce"></a>What's Different in ATL for Windows CE </h2>
<p>
There are a few classes in ATL for Windows CE that don't implement all the methods they do in the standard Active Template Library. This is generally because the functionality these methods support doesn't apply to Windows CE-based platforms, or isn't supported by the current version of Windows CE.</p>
<p>
The <a href="cccontrl.htm"><b>CComControl</b></a> class doesn't support the <b>IDataObject_GetData</b> method or the <b>m_bDrawGetDataInHimetric</b> data member because <b>IDataObject_GetData</b> requires the storage medium to be of type <b>TYMED_MFPICT</b>, and the current version of Windows CE doesn't support metafiles. <b>CComControl</b> also doesn't implement the <b>DoVerbProperties</b> method in Windows CE, and the <b>CComControlBase::IOleInPlaceObject_SetObjectRects</b> method doesn't support clipping. </p>
<p>
The <a href="cstockp.htm"><b>CStockPropImpl</b></a><b> </b>class doesn't implement the <b>put_MouseIcon</b> or <b>put_Picture</b> methods because Windows CE doesn't support the global <b>OleLoadPicture</b> function. </p>
<p>
Windows CE doesn't support connections between data objects and advise sinks, so the <a href="idataobj.htm"><b>IDataObjectImpl</b></a><b> </b>class doesn't implement the <b>DAdvise</b>, <b>DUnadvise</b>, or <b>EnumDAdvise</b> methods or the <b>IDataObjectImpl::m_spDataAdviseHolder</b> data member.</p>
<p>
The <a href="ioobj.htm"><b>IOleObjectImpl</b></a> class doesn't implement the <b>EnumVerbs</b>, <b>GetMiscStatus</b>, or <b>GetUserType</b> methods because Windows CE doesn't support the <b>OleRegEnumVerbs, OleRegGetMiscStatus</b>, or <b>OleRegGetUserType</b> global functions.</p>
<p>
The <a href="ipropg.htm"><b>IPropertyPageImpl</b></a><b> </b>class doesn't implement the <b>OnStyleChange</b> method because Windows CE doesn't support the WM_ONSTYLECHANGING message. <b>IPropertyPageImpl</b> also doesn't support the <b>Help</b> method.</p>
<p>
Windows CE doesn't support all the window styles or message box styles the desktop Windows platforms support, so there are certain style flags you can't use as arguments in the <a href="ccontain_3.htm"><b>CContainedWindow::Create</b></a>, <a href="cwinimp_2.htm"><b>CWindowImpl::Create</b></a> and <a href="cwindow_53.htm"><b>CWindow::MessageBox</b></a> classes. See these topics for details.</p>
<p>
In Windows CE, a user can send a window to the back of the Z-order or restore it to the foreground by tapping its icon button on the taskbar, but Windows CE doesn't support minimizing or maximizing of windows. Because of this, the <a href="cwindow.htm"><b>CWindow</b></a> class doesn't support the <b>IsIconic</b>, <b>IsZoomed</b>, <b>ArrangeIconicWindows</b>, <b>GetWindowPlacement</b>, or <b>SetWindowPlacement</b> methods. You can't use the SW_MAXIMIZE, SW_MINIMIZE, SW_RESTORE, SW_SHOW, SW_SHOWDEFAULT, SW_SHOWMAXIMIZED, SW_SHOWMINIMIZED, SW_SHOWMINNOACTIVE, OR SW_NOACTIVARE flags in the <i>nCmdShow</i> parameter to the <a href="cwindow_82.htm"><b>CWindow::ShowWindow</b></a> method. </p>
<p>
WinHelp isn't available in Windows CE, so you can't use the <b>CWindow</b> methods <b>GetWindowContextHelpId</b>, <b>SetWindowContextHelpId</b>, and <b>WinHelp</b>.</p>
<p>
ATL for Windows CE doesn't implement the <b>CWindow</b> class' <b>ChangeClipboardChain</b> and <b>SetClipboardViewer</b> methods, because Windows CE doesn't support clipboard viewers.</p>
<p>
Windows CE doesn't provide support for automatically filling in a list box or combo box with filenames from a directory, so you can't use the <b>DlgDirList</b>, <b>DlgDirListComboBox</b>, <b>DlgDirSelect</b>, or <b>DlgDirSelectComboBox</b> methods of the <b>CWindow</b> class. </p>
<p>
Windows CE doesn't support hot keys, so ATL for Windows CE doesn't implement the <b>CWindow</b> class' <b>GetHotKey</b> and <b>SetHotKey</b> methods.</p>
<p>
Windows CE doesn't support system menus, so the <b>CWindow</b> class doesn't implement the <b>GetSystemMenu</b> method.</p>
<p>
Scroll bars are always visible in Windows CE, so <b>CWindow</b> doesn't implement the <b>EnableScrollBar</b> or <b>ShowScrollBar</b> methods.</p>
<p>
Windows CE doesn't currently support OLE drag and drop operations, so the <b>CWindow</b> class doesn't implement the <b>DragAcceptFiles</b> method.</p>
<p>
The <b>GetWindowWord </b>and <b>SetWindowWord </b>methods are obsolete. Use <a href="cwindow_40.htm"><b>CWindow::GetWindowLong</b></a> and <a href="cwindow_78.htm"><b>CWindow::SetWindowLong</b></a>, instead.</p>
<p>
The <b>ScrollWindow </b>method is also obsolete, so Windows CE only supports the more versatile <a href="cwindow_61.htm"><b>CWindow::ScrollWindowEx</b></a><b> </b>method. You can't scroll child windows in Windows CE, so you can't pass the SW_SCROLLCHILDREN flag in the <i>flags</i> parameter to this method. </p>
<p>
In ATL for Windows CE, you have to use the original <a href="cwindow_8.htm"><b>CWindow::ChildWindowFromPoint</b></a><b> </b>and <a href="cwindow_20.htm"><b>CWindow::GetDC</b></a> methods instead of the newer <b>ChildWindowFromPointEx</b> and <b>GetDCEx</b> methods.</p>
<p>
Windows CE versions 2.0 and later support printing, but ATL for Windows CE 2.0 doesn't provide support for the <b>CWindow</b> <b>Print</b> and <b>PrintClient</b> methods yet. Use the global functions instead.</p>
<p>
Windows CE supports some of the dialog box methods slightly differently than the desktop Windows platforms do. The <a href="cwindow_22.htm"><b>CWindow::GetDlgItem</b></a> method doesn't search through nested dialog boxes, the <a href="cwindow_23.htm"><b>CWindow::GetDlgItemInt</b></a> method only translates text strings of up to 48 characters, and the <a href="cwindow_68.htm"><b>CWindow::SetDlgItemInt</b></a> method treats all values passed to it as signed.</p>
<p>
Windows CE only supports solid carets, so you can't use the <i>hBitmap</i> parameter in the <a href="cwindow_10.htm"><b>CWindow::CreateCaret</b></a> method. </p>
<p>
In Windows CE, you can only set the keyboard focus to a window associated with a different thread's message queue if one window is the parent of the other, or if the windows are siblings of the same parent. See <a href="cwindow_70.htm"><b>CWindow::SetFocus</b></a> for more information.</p>
<p>
Windows CE also doesn't support the <b>FlashWindow</b>, <b>GetDescendantWindow</b>, <b>GetLastActivePopup</b>, <b>GetMenu</b>,<b> GetTopWindow</b>, <b>HiliteMenuItem</b>, <b>InvalidateRgn</b>, <b>LockWindowUpdate</b>, <b>RedrawWindow</b>,<b> SendMessageToDescendants,</b> <b>SetMenu</b>, <b>ShowOwnedPopups,</b> or <b>ValidateRgn</b> methods of the <b>CWindow</b> class because the global functions they wrap aren't supported in Windows CE.</p>
<p>
In ATL for Windows CE, the <a href="cwndclin_9.htm"><b>CWndClassInfo::m_wc</b></a> data member maintains window class information in a <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_WNDCLASS_str">
</object><a href=JavaScript:alink_1.Click()><b>WNDCLASS</b></a> structure, because Windows CE doesn't support the <b>WNDCLASSEX</b> type. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
