<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>POLYGON/POLYCNTR</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_polygon_polycntr"></a>POLYGON/POLYCNTR</h2>
<p>
The POLYGON sample demonstrates how to implement custom properties, events, and a property page for an ATL control. The POLYCNTR sample is a simple dialog box application that provides a container for the CPolyCtl control.</p>
<p>
The CPolyCntrDlg dialog box class has one public variable, m_Polygon, which is a CPolyCtl object.</p>
<p>
The CPolyCtl class implements the IPolyCtl interface in addition to the <b>IUnknown</b> and <b>IDispatch</b> interfaces. It supports a dual interface, so you can either access the IPolyCtl methods through <b>IDispatch::Invoke</b> or call them directly by way of the vtable. IPolyCtl exposes two methods, get_Sides and put_Sides. CPolyCtl also has three data members. The m_clrFillColor member is an <b>OLE_COLOR</b> value that contains the color with which to draw the polygon. The m_nSides member contains the number of sides in the current polygon. The m_arrPoint member is an array of 100 <b>POINT</b> structures, that contains the coordinates of all the vertices of the polygon.</p>
<p>
The CPolyCtl constructor initializes m_nSides to three, and m_clrFillColor to green. The OnDraw handler draws a black circle on a white background. Then it calculates the coordinates of the vertices of and equilateral polygon with m_nSides sides, and draws the polygon inside the circle, filling it with the color specified by the m_clrFillColor data member. When you tap the screen with the stylus, inside the control, the OnLButtonDown handler captures the coordinates at which the stylus tip touched the touch screen. If the x coordinate is greater than the y coordinate, the control fires the ClickIn event. Otherwise, it fires the ClickOut event. (Windows CE doesn't support the WM_RBUTTONDOWN message, so the OnRButtonDown handler isn't used.)</p>
<p>
When the CPolyCntrDlg dialog box receives the ClickIn event, its OnClickInPolyCtl1 event handler uses the CPolyCtl control's dispinterface to invoke the IPolyCtl::get_Sides method, which returns the value of the control's m_nSides data member. OnClickInPolyCtl1 increments this value by one and passes the new value to the IPolyCtl::put_Sides method, again using the dispinterface. IPolyCtl::put_Sides assigns this value to the Polygon control's m_nSides member and calls CComControl::FireViewChange to notify the container that the control should be redrawn. When the CPolyCntrDlg object receives the ClickOut event, it uses the dispinterface in the same way to decrement the value of the control's m_nSides member. </p>
<p>
The Polygon control has a property page, CPolyProp, that you can use during the design stage, when embedding this control in a container. The property page contains an edit control labeled Sides. When you enter a number in this edit control and tap the <b>Apply</b> button, the property page invokes IPolyCtl::put_Sides on the Polygon control, passing it the number you entered. IPolyCtl::put_Sides verifies that the number is greater than two and less than 101, and assigns it's value to CPolyCtl::m_nSides. It then fires CComControl::FireViewChange to notify the container that the control should be redrawn.</p>
<p>
This sample demonstrates the following keywords:</p>
<p class=indent1>
<a href="cccontrl_11.htm"><b>CComControl::FireViewChange</b></a></p>
<p class=indent1>
<a href="cwindow_23.htm"><b>CWindow::GetDlgItemInt</b></a></p>
<p class=indent1>
<a href="ipropg_3.htm"><b>IPropertyPageImpl::Apply</b></a></p>
<p class=indent1>
<a href="ipropg_9.htm"><b>IPropertyPageImpl::SetDirty</b></a></p>
<p class=indent1>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_DeleteObject">
</object><a href=JavaScript:alink_1.Click()><b>DeleteObject</b></a></p>
<p class=indent1>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_Ellipse">
</object><a href=JavaScript:alink_2.Click()><b>Ellipse</b></a></p>
<p class=indent1>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_GetStockObject">
</object><a href=JavaScript:alink_3.Click()><b>GetStockObject</b></a></p>
<p class=indent1>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_Polyline">
</object><a href=JavaScript:alink_4.Click()><b>Polyline</b></a></p>
<p class=indent1>
<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_SelectObject">
</object><a href=JavaScript:alink_5.Click()><b>SelectObject</b></a></p>
<p>
You can find the POLYGON project files in the Wce\Samples\Atl\POLYGON directory.</p>
<p>
You can find the POLYCNTR project files in the Wce\Samples\Atl\POLYCNTR directory.</p>
<p>
To build the POLYGON and POLYCNTR samples, follow the procedure described in <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_Building_the_Sample_Applications">
</object><a href=JavaScript:alink_6.Click()>Building the Sample Applications</a>, selecting one or more of the following project configurations. </p>
<ul>
<li>
WCE x86em (Desktop PC Windows CE emulation)</li>
<li>
WCE x86</li>
<li>
WCE PPC</li>
<li>
WCE MIPS</li>
<li>
WCE SH</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
