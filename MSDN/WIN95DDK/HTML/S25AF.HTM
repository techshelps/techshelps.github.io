<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PROVIDER</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>PROVIDER </H3><P><BR></P>
<PRE>typedef struct provider_info {
      PQUERYHANDLER pi_R0_1val;     // pointer to VxD handler
                                    //  single value
      PQUERYHANDLER pi_R0_allvals;  // pointer to VxD handler, 
                                    //  multiple values
      PQUERYHANDLER pi_R3_1val;     // Should be NULL in Win95
      PQUERYHANDLER pi_R3_allvals;  // Should be NULL in Win95
      DWORD pi_flags;               // capability flags
  } PROVIDER;
  typedef PROVIDER *PPROVIDER;
</PRE>
<P>This structure must be passed as parameter to _RegCreateDynKey </P>
<P><B>pi_R0_1val</B> </P>
<P>Pointer to the VxD handler function that should be called when this dynamic key is queried for one of its values. The provider must fill this in when it calls _RegCreateDynKey. </P>
<P><B>pi_R0_allvals</B> </P>
<P>Pointer to the VxD handler function that should be called when the dynamic key is queried for all of its values (via RegQueryMultipleValues). If the handler function does not support multiple values, this should be set to NULL. In this case the registry code calls <I>pi_R0_1val</I> repeatedly, once for each value, when RegQueryMultipleValues is called for this key. Having this handler is useful in the case where the key is being queried remotely, because this would reduce the number of Remote Procedure Calls. The provider must fill this in when it calls _RegCreateDynKey (if it has a handler that responds to a query of multiple values). </P>
<P><B>pi_R3_1val</B> </P>
<P>Win32 providers are not supported in Windows 95. This should be NULL. </P>
<P><B>pi_R3_allvals</B> </P>
<P>Win32 providers are not supported in Windows 95. This should be NULL. </P>
<P><B>pi_flags</B> </P>
<P>Capability flags. These are used to tell the registry code whether the provider is handling certain kinds of housekeeping, or whether the registry code should do this housekeeping. Currently, there is one such flag: PROVIDER_KEEPS_VALUE_LENGTH. If this flag is set, then the provider has the responsibility for maintaining and providing the value length when needed. If it is not set, then the registry code keeps track of the value lengths. This flag is useful if the value lengths are not static. If any of the value lengths can change dynamically, then the provider must do the work of keeping the value lengths. Note this flag is per-key, not per-value. </P>
<P></P>
<P></P></FONT></BODY></HTML>
