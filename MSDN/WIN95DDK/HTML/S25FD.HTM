<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>t (Trace)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>t (Trace) </H3><P><BR></P>
<PRE>t[a|c|n|s|x|z][=start_addr][count][addr]
</PRE>
<P>The <B>t</B> command executes one or more instructions along with the default command string and then displays the decoded instruction. If you include the <I>start_addr</I> parameter, tracing starts at the specified address. Otherwise, the command steps through the next machine instruction and then executes the default command string. The <B>t</B> command uses the hardware trace mode of the Intel microprocessor. Consequently, you can also trace instructions stored in read-only memory (ROM). </P>
<P><B>a</B> </P>
<P>Indicates that an ending address is specified for the trace. Instructions are traced until the address in <I>addr</I> is reached. </P>
<P><B>c</B> </P>
<P>Suppresses all output and counts instructions traced. An ending address is required for this command. Instructions are traced until the address in <I>addr</I> is reached. </P>
<P><B>n</B> </P>
<P>Suppresses the register display so just the assembly line is displayed. This works only if the default command, <B>zd</B>, is set to <B>r</B> (the normal setting). </P>
<P><B>s</B> </P>
<P>Suppresses output; the instruction and count are displayed for each <B>call</B> and the return from that call. </P>
<P><B>x</B> </P>
<P>Forces the debugger to trace regions of code known to be untraceable (_PGSwitchContext, for example). </P>
<P><B>z</B> </P>
<P>Allows original trap handler address to be traced into without having to unhook the exception. Use this option instead of <B>vcp d; t; vsp d</B>. </P>
<P><I>start_addr</I> </P>
<P>Specifies the instruction address at which to start tracing. The equal sign (=) is required. </P>
<P><I>count</I> </P>
<P>Specifies the number of instructions to execute and trace. </P>
<P><I>addr</I> </P>
<P>Specifies the instruction address at which to stop tracing. </P>
<P>The following command causes the debugger to execute 16 (10h) instructions beginning at 011A in the current selector: </P>
<P><BR></P>
<PRE>t=011A 10
</PRE>
<P>The debugger executes and displays the results of the default command string for each instruction. The display is scrolled until the last instruction is executed. Press the CTRL+S key combination to stop the scrolling and CTRL+Q to resume. </P>
<P></P>
<P></P></FONT></BODY></HTML>
