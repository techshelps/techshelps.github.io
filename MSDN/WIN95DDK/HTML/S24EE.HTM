<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Plug and Play PCMCIA</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">

<H2>About Plug and Play PCMCIA </h2>

<P>This document describes the architecture of PCMCIA
in Windows 95 and its interaction with the Plug and Play
environment. It addresses the three major aspects of PCMCIA: PC
cards, device drivers for those cards, and PCMCIA system
software. The Plug and Play framework enables tighter integration
and better support of the dynamic nature of the PCMCIA interface.
In this framework, a PCMCIA adapter will be controlled by the
PCMCIA bus enumerator (PCCARD.386). PCCARD incorporates the Card
Services functions as well as the PCMCIA bus enumeration and
configuration functions. </p>

<P>The primary goal of PCMCIA in Windows 95 is to
configure PC cards so that any Plug and Play device driver can be
used to control the device, without any special provisions for
PCMCIA. Another goal of the system is to support PCMCIA 2.<i>x</i>
Card Services Clients and Drivers and to provide an environment
for 32-bit protected mode Card Services clients, which may be
required to support PC cards and their drivers. </p>

<P>The tighter integration of PCMCIA with the operating
system eliminates the need for the guesswork which Card Services
otherwise uses to find which resources are available in a given
system. The PCMCIA enumerator also enables automatic device
installation via the Windows Device Installer. Since
configuration management is actually done by Configuration
Manager, resources are allocated and reclaimed dynamically. This
enables the easy addition of static devices and support for new
scenarios such as hot or warm docking. The PCMCIA bus enumerator
uses the information tuples described in this document to
identify the card, load the correct device driver, and indicate
all the possible configurations to Configuration Manager.
Configuration Manager dynamically assigns a valid configuration
based on this information. </p>

<P>To support true Plug and Play functionality, PC
cards must fully support the identification and configuration
tuples described in this document. </p>

<P>Device drivers must be modified to support the
Windows 95 dynamic loading mechanism and the Plug and Play
configuration functions. Since Windows 95 Plug and Play
seamlessly configures devices in the system, it enables card
vendors to write a single driver for the ISA, EISA, PCI and
PCMCIA implementations of a given I/O card. Protected mode Card
Services clients will be supported in Windows 95 as well, but
will not have the same level of flexibility as Windows 95 Plug
and Play drivers. This document describes three different types
of PC card drivers which will be supported in Windows 95. </p>

<P>The following diagram illustrates how Card Services
is integrated into the Windows 95 Plug and Play framework. Card
Services is incorporated with the PCMCIA bus enumerator in the
PCCARD module. This module interacts with Configuration Manager
and the registry when a card is inserted or removed. </p>

<P><img src="05_01.gif" width="393" height="326"></p>
</FONT></BODY>
</html>
