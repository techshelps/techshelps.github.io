<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Map_Flat</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Map_Flat </H3><P><BR></P>
<PRE>include vmm.inc

mov     ah, SegOffset    ; client register containing the segment
mov     al, OffOffset    ; client register containing the offset
VMMcall Map_Flat

cmp     eax, -1         ; -1 if error
je      error
mov     [LinAddr], eax  ; ring-0 linear address
</PRE>
<P>Converts the address contained in the specified client registers to a linear address. The given address is either a selector:offset or segment:offset address, depending on the execution mode of the current virtual machine. Uses EAX, Flags. </P>
<UL><LI>     Returns a ring-0 linear address in the EAX register if successful, – 1 if the specified selector is invalid. </LI></UL><P></P>
<P><I>SegOffset</I> </P>
<P>Offset of the client register containing the segment address or selector. </P>
<P><I>OffOffset</I> </P>
<P>Offset of the client register containing the offset address. Can be – 1, in which case the offset address is zero. </P>
<P>The <I>SegOffset</I> and <I>OffOffset</I> parameters specify offsets, in bytes, relative to the beginning of the <B>Client_Reg_Struc</B> structure for the current virtual machine. </P>
<P>Before converting an address, <B>Map_Flat</B> checks the current execution mode and, for protected-mode applications, the bitness of the DPMI client. If the virtual machine is running a 32-bit protected mode application, it uses 32-bit address offsets. For V86 and 16-bit protected-mode applications, it uses 16-bit address offsets and ignores the high word if the <I>OffOffset</I> parameter specifies a 32-bit register. </P>
<P>The following example converts the address <B>Client_DS:Client_DX</B> and returns the linear address in EAX: </P>
<P><BR></P>
<PRE>mov     ax, (Client_DS SHL 8) + Client_DX
VMMcall Map_Flat
</PRE>
<P>It is typically more convenient to use the <B>Client_Ptr_Flat</B> macro instead. </P>
<P>See also <B>Client_Ptr_Flat</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
