<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Device Control Procedure</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Device Control Procedure </H3><P>Every virtual device needs a device control procedure. The VMM calls this procedure to send the virtual device system control messages. The system control messages direct the virtual device to carry out actions, such as initializing itself, and to notify the virtual device of changes to virtual machines, such as a virtual machine is being created. Most virtual devices define the device control procedure by using the <B>Begin_Control_Dispatch</B>, <B>Control_Dispatch</B>, and <B>End_Control_Dispatch</B> macros as in the following example: </P>
<P><BR></P>
<PRE>Begin_Control_Dispatch VSAMPLED
    Control_Dispatch   Sys_Critical_Init,  VSAMPLED_Crit_Init
    Control_Dispatch   Device_Init, VSAMPLED_Device_Init
    Control_Dispatch   Sys_Critical_Exit, VSAMPLED_Crit_Exit
End_Control_Dispatch VSAMPLED
</PRE>
<P>In this example, the macros create a device control procedure, named <B>VSAMPLED_Control</B>, and generate instructions that check for the messages <B>Sys_Critical_Init</B>, <B>Device_Init</B>, and <B>Sys_Critical_Exit</B>. When these messages are sent to the procedure, the procedure passes control to a corresponding procedure, such as <B>VSAMPLE_Device_Init</B>, to process the messages. These message-processing procedures must be defined by the virtual device. </P></FONT></BODY></HTML>
