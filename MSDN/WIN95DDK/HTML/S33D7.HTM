<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Set_PM_Int_Type</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Set_PM_Int_Type </H3><P><BR></P>
<PRE>include vmm.inc

mov     eax, Interrupt  ; interrupt number
mov     edx, Type       ; 0 if trap gate, else interrupt gate
VMMcall Set_PM_Int_Type
</PRE>
<P>Sets the gate type for a protected-mode interrupt vector. Uses Flags. </P>
<UL><LI>     No return value. </LI></UL><P></P>
<P><I>Interrupt</I> </P>
<P>Number of the interrupt to set. </P>
<P><I>Type</I> </P>
<P>Type of gate to set. If this parameter is zero, the service sets a trap gate; if nonzero, it sets an interrupt gate. </P>
<P>An interrupt passing through an interrupt gate automatically clears the interrupt flag bit to disable interrupts. Interrupts passing through a trap gate do not modify the interrupt bit. All protected-mode interrupts default to the trap gate type, but virtual devices such as the virtual PIC device, may change some trap gates to interrupt gates so that hardware interrupts disable interrupts. The virtual PIC device leaves software interrupts, such as Interrupt 21h, unchanged. This avoids an unnecessary ring transition by eliminating the need for the software interrupt handlers to execute an <B>sti</B> instruction. </P>
<P>See also <B>Get_PM_Int_Type</B>, <B>Set_PM_Int_Vector</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
