<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_GetDiskInfo</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_GetDiskInfo </H3><P><BR></P>
<PRE>FS_GetDiskInfo(
 PIOREQ pir
 )
</PRE>
<P>Information about a disk is obtained through <B>FS_GetDiskInfo</B>. This routine handles the Win32 function: GetDiskFreeSpace(); and INT 21 functions: 1Bh, 1Ch, and 36h. </P>
<P><I>ir_rh</I> </P>
<P>Supplies handle to disk volume or network resource to get info on. </P>
<P><I>ir_flags</I> </P>
<P>Supplies special flags for this function. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>GetDiskInfo Flags:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>GDF_NO_DISK_HIT</B> </P></TD><TD VALIGN="TOP"><P>This flag is a hint flag to the FSD. It specifies that the FSD should, if possible, return a close approximation to the freespace on the disk without accessing the disk in any fashion. This is an optimization that is used by some components in the system. It is not mandatory to implement this except in certain special cases. Look in the notes below for more details. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_user</I> </P>
<P>User id for this request. </P>
<P><I>ir_pid</I> </P>
<P>Process id for this request. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <I>ir_error</I> </P></TD><TD VALIGN="TOP"><P>Returns status of the operation ( 0 if no error, errorcode otherwise ). </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_length</I> </P></TD><TD VALIGN="TOP"><P>Returns number of bytes per sector. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_size</I> </P></TD><TD VALIGN="TOP"><P>Returns total number of allocation units. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_data</I> </P></TD><TD VALIGN="TOP"><P>Returns an optional pointer to the file allocation table (FAT) identification byte. This is only required for local FAT file systems. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_sectors</I> </P></TD><TD VALIGN="TOP"><P>Returns number of sectors per allocation unit. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_numfree</I> </P></TD><TD VALIGN="TOP"><P>Returns number of free allocation units. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>The GDF_NO_DISK_HIT flag must be supported by an FSD that is using the IOS for its operation, reports itself as a protect-mode drive and is also servicing the paging volume. Even in this case, the FSD can return a value of -1 to indicate that it cannot provide an approximation to the disk free size. This negates the optimization. In all other cases, FSDs can safely ignore this flag and perform the normal operation to get the disk free space by hitting the disk, if necessary. </P>
<P></P>
<P></P></FONT></BODY></HTML>
