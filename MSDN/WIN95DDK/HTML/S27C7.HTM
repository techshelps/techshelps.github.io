<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the DIB Engine</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Using the DIB Engine </H3><P>There are two ways you can use the DIB engine with your display minidriver: </P>
<UL><LI>     Display operations </LI><LI>     Memory operations </LI></UL><P></P>
<H4><A NAME="sec0"></A>Display Operations </H4><P>The DIB engine requires your display device to use a <I>packed-pixel</I> format. The screen bits must be stored in a single plane with each pixel having 1, 4, 8, 15 (a special case of 16), 16, 24, or 32 bits defining the pixel color. For Windows 95, most display devices will use this format, but if your device uses a <I>planar</I> format (where screen bits are stored in separate bitmap planes, one plane for each color), you cannot use the DIB engine and must write a full display device driver. Note that some planar devices can still use the DIB engine if their memory bitmaps use a packed-pixel format. In this case the device must translate between the packed-pixel format and the planar format. </P>
<H4><A NAME="sec1"></A>Memory Operations </H4><P>Even if your display adapter does not use a standard frame buffer, you can use the DIB engine for direct memory bitmap operations. For more information about direct memory bitmap operations using the DIB engine, see <I>About the Device Independent Bitmap Engine</I>. </P></FONT></BODY></HTML>
