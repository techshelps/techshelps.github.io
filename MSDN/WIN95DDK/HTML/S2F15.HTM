<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ReadPort</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>ReadPort </H3><P><BR></P>
<PRE>BOOL ReadPort(
    HANDLE   hPort,
    LPBYTE   pBuffer,
    DWORD    cbBuf,
    LPDWORD  pcbRead
);
</PRE>
<P>Reads data from the printer. </P>
<UL><LI>     Returns TRUE if the operation is successful. </LI></UL><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>hPort</I> </P></TD><TD VALIGN="TOP"><P>Handle of the port to read. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>pBuffer</I> </P></TD><TD VALIGN="TOP"><P>Points to the buffer into which to read the data. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>cbBuf</I> </P></TD><TD VALIGN="TOP"><P>Specifies the size, in bytes, of the buffer pointed to by the <I>pBuffer</I> parameter. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>pcbRead</I> </P></TD><TD VALIGN="TOP"><P>The number of bytes read is put into the memory location pointed to by this parameter. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The <B>ReadPort</B> function supports bi-directional printers. If there is any data in the printer, the <B>ReadPort</B> function returns all the data. If there is no response from the printer, the <B>ReadPort</B> function waits long enough to ensure that there is no data coming from the printer and then returns an error. </P>
<P>The port monitor <B>ReadPort</B> function is called by a language monitor, which is the only component of the spooler subsystem that is capable of interpreting the data read from the printer. A language monitor can create a thread to asynchronously call the port monitor <B>ReadPort</B> function to query unsolicited data from the printer at timed intervals of say, a few seconds. </P>
<P>The port monitor <B>ReadPort</B> function must not alter the data stream read from the printer in any way, but just return it to the language monitor caller for interpretation. </P>
<P>The printer driver that is associated with the language monitor that interprets the data read from the printer can get that information by calling the new Windows 95 GDI functions <B>DrvGetPrinterData</B> and <B>DrvSetPrinterData</B>. Following are guidelines for calling <B>DrvGetPrinterData</B> and <B>DrvSetPrinterData</B> in your printer driver: </P>
<UL><LI>     Your printer driver must be reentrant. </LI><LI>     Do not use <B>DrvGetPrinterData</B> or <B>DrvSetPrinterData</B> calls within the printer driver <B>Enable</B> or <B>Disable</B> functions. </LI><LI>     The ideal places to use <B>DrvGetPrinterData</B> or <B>DrvSetPrinterData</B> calls are in the printer driver <B>DevInstall</B> function or when the printer driver <B>ExtDeviceMode</B> function is called with the DM_Prompt flag set in the <I>wMode</I> parameter (at which time the driver is reentrant and ExtDeviceMode is not being called by the <B>Enable</B> function). </LI></UL><P></P></FONT></BODY></HTML>
