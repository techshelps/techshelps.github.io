<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Display Minidriver Guidelines</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Display Minidriver Guidelines </H2><P>If you have created display drivers for earlier versions of Windows, you may prefer to start over again to take advantage of the display minidriver architecture. Your new minidriver will be much smaller and easier to write. </P>
<P>To write a display minidriver, use the following steps to take advantage of the DIB engine: </P>
<P>    1.     Implement the Enable Display Driver Interface (DDI) and create the <B>PDEVICE</B> structure for the driver. The <B>PDEVICE</B> structure must have the same format as the <B>DIBENGINE</B> structure. </P>
<P>    2.     Add code for <B>Disable </B>and <B>Reenable</B>. </P>
<P>    3.     Add VDD communication code. </P>
<P>    4.     Add hardware acceleration code if necessary. </P>
<P>    5.     Add hardware cursor code if applicable. </P>
<P>    6.     Add code for the <B>Control</B> DDI. </P>
<P>    7.     Process all calls as if they went to the DIB engine. </P>
<P>    8.     Add private data for <B>PDEVICE</B>, brushes, and pens if necessary. </P>
<P></P></FONT></BODY></HTML>
