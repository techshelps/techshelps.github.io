<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Required Pen Driver Messages</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Required Pen Driver Messages </H3><P>The pen driver must support a minimum set of required messages, which are listed in the table below. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Message </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_CLOSE </P></TD><TD VALIGN="TOP"><P>Sent by the <B>CloseDriver</B> Windows function to close the driver. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_CONFIGURE </P></TD><TD VALIGN="TOP"><P>Requests the driver to display its configuration dialog box. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_DISABLE </P></TD><TD VALIGN="TOP"><P>Sent when the system unloads the pen driver. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_ENABLE </P></TD><TD VALIGN="TOP"><P>Sent when the system loads the pen driver. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_FREE </P></TD><TD VALIGN="TOP"><P>Sent when the system unloads the pen driver. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_INSTALL </P></TD><TD VALIGN="TOP"><P>Informs the pen driver it should install itself on the system. The driver records the information the system needs at startup so that the next time Windows starts, the pen driver will be loaded. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_LOAD </P></TD><TD VALIGN="TOP"><P>Sent to the pen driver when it is first loaded. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_OPEN </P></TD><TD VALIGN="TOP"><P>Sent from the <B>OpenDriver</B> Windows function. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_QUERYCONFIGURE </P></TD><TD VALIGN="TOP"><P>Checks if the driver provides a configuration dialog box. </P></TD></TR><TR><TD VALIGN="TOP"><P>DRV_REMOVE </P></TD><TD VALIGN="TOP"><P>Informs the pen driver it should uninstall itself from the system. The driver removes the information it recorded at startup and the references that the system uses to load the driver. The next time Windows starts, the pen driver will not be loaded. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Note that a fully functioning pen driver also supports the DRV_SetEntryPoints and DRV_RemoveEntryPoints messages. However, the pen driver can be used like a mouse driver, updating the pen cursor location, without supporting these two messages. </P>
<P>The pen driver must handle the standard messages that are sent to any installable Windows driver. Many of these standard messages have a counterpart message with a reverse effect-DRV_CLOSE is the counterpart of DRV_OPEN, for example. The following sections briefly describe the effects of each of the standard message pairs. At the end of this section, a table lists all the DRV_ messages recognized by the pen driver and gives a summary description of each message. For more complete descriptions of each of these required standard messages, see the "Reference" section. </P>
<H4><A NAME="sec0"></A>DRV_LOAD and DRV_FREE </H4><P>These two messages are the first and last messages an installable driver receives. When processing DRV_LOAD, the pen driver reads configuration information from the Windows 95 registry, configures associated hardware, and allocates memory if required. </P>
<P>To process DRV_FREE, the pen driver frees any allocations and notifies the virtual pen driver that the pen driver is being unloaded. </P>
<H4><A NAME="sec1"></A>DRV_OPEN and DRV_CLOSE </H4><P>The pen driver receives the DRV_OPEN message whenever a process opens the pen driver by calling the Windows <B>OpenDriver</B> function. The pen driver receives DRV_CLOSE when the process calls <B>CloseDriver</B> to close the driver. </P>
<H4><A NAME="sec2"></A>DRV_ENABLE and DRV_DISABLE </H4><P>When the pen driver receives DRV_ENABLE, it performs system operations such as hooking interrupts, initializing hardware, and so forth. It also calls the virtual pen driver to notify it to start sending pen packet information. Note that the tablet is in its default state at this point, having been set by the virtual device driver when it was initialized. </P>
<P>The DRV_DISABLE message reverses the process, telling the pen driver to restore the system back to its original state. When processing this message, the pen driver calls the virtual pen driver stop sending pen packet information. </P>
<P>The pen driver exists in memory between the DRV_ENABLE and DRV_DISABLE messages. The driver receives these messages only once during loading and unloading. </P>
<H4><A NAME="sec3"></A>DRV_INSTALL and DRV_REMOVE </H4><P>The DRV_INSTALL and DRV_REMOVE messages request the control panel to install, configure, and remove a driver from the system. </P>
<H4><A NAME="sec4"></A>DRV_QUERYCONFIGURE and DRV_CONFIGURE </H4><P>The pen driver responds to the DRV_QUERYCONFIGURE message by reporting whether or not it provides a custom-configuration dialog box. The sample pen driver does provide a pen configuration dialog box by calling PENUI.DLL. The custom-configuration dialog box is implemented by the source code in the \PEN\SAMPLES\PENUI directory, which produces PENUI.DLL. </P>
<P>The driver responds to the DRV_CONFIGURE message by displaying the custom-configuration dialog box. </P></FONT></BODY></HTML>
