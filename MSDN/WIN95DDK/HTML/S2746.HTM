<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Port Contention</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Port Contention </H2><P>A VxD must use the VCOMM contention services (<B>VCOMM_Get_Contention_Handler</B>, <B>ACQUIRE_RESOURCE</B>, <B>RELEASE_RESOURCE</B>, and so on) to coexist properly with other drivers in the system that write to parallel ports (for example, LPT.VXD for printing and LPTENUM.VXD for enumeration). </P>
<P>This section describes services for managing contention for COM ports, LPT ports, and other VCOMM devices by VxDs and VMs. This section also explains how multiple VxD device drivers can simultaneously access dongles and other passthrough devices attached to a parallel port. </P>
<P>A VCOMM resource is any device that has a VCOMM driver installed (for example, COM1 and LPT1). A VCOMM resource is also any device for which VCOMM is the device loader. </P>
<P>A contention handler is the VxD that provides acquiring and releasing services for a VCOMM resource. </P>
<P>The INF file for a VCOMM device driver specifies the name of its contention handler VxD. For COM ports, this is *VCD, and for LPT ports, this is *VPD. If no contention handler is specified for a device, VCOMM is used by default. </P></FONT></BODY></HTML>
