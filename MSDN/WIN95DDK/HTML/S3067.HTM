<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HwFindAdapter</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>HwFindAdapter </H3><P><BR></P>
<PRE>ULONG HwFindAdapter(DeviceExtension, HwContext, BusInformation, ArgumentString,
    ConfigInfo, Again)
IN PVOID  DeviceExtension;
IN PVOID  HwContext;
IN PVOID  BusInformation;
IN PCHAR  ArgumentString;
IN OUT PPORT_CONFIGURATION_INFORMATION  ConfigInfo;
OUT PBOOLEAN  Again;
</PRE>
<P>Returns information about the miniport driver's adapter in the PORT_CONFIGURATION_INFORMATION buffer. </P>
<UL><LI>     Return one of the following status values: </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>SP_RETURN_FOUND </P></TD><TD VALIGN="TOP"><P>Indicates a host adapter was found and the configuration information was successfully determined. </P></TD></TR><TR><TD VALIGN="TOP"><P>SP_RETURN_ERROR </P></TD><TD VALIGN="TOP"><P>Indicates a host adapter was found but there was error obtaining the configuration information. If possible such an error should be logged. </P></TD></TR><TR><TD VALIGN="TOP"><P>SP_RETURN_BAD_CONFIG </P></TD><TD VALIGN="TOP"><P>Indicates the supplied configuration information was invalid. </P></TD></TR><TR><TD VALIGN="TOP"><P>SP_RETURN_NOT_FOUND </P></TD><TD VALIGN="TOP"><P>Indicates no host adapter was found for the supplied configuration information. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P><I>DeviceExtension</I> </P>
<P>Supplies the HBA miniport driver's adapter data storage. This storage is initialized to zero before this routine is called by the OS-dependent port driver. </P>
<P><I>HwContext</I> </P>
<P>Supplies the context value that was passed to <B>ScsiPortInitialize</B>. </P>
<P><I>BusInformation</I> </P>
<P>Supplies bus-type-specific information that has been gathered. The format of this information depends on the particular bus type. </P>
<P><I>ArgumentString</I> </P>
<P>Supplies a zero-terminated ASCII string. This string originates from the user and can be NULL. </P>
<P><I>ConfigInfo</I> </P>
<P>Returns a pointer to the configuration information structure, which is filled by the HBA miniport driver. This structure is initialized with any known configuration information, such as <I>SystemIoBusNumber</I>. If possible, drivers should have a set of defaults that do not require any supplied configuration information. </P>
<P><I>Again</I> </P>
<P>Indicates the HBA miniport driver wants the OS-specific port driver to call its HW_FIND_ADAPTER function again with a new <I>DeviceExtension</I> and the same <I>ConfigurationInformation</I>. This is used by the HBA miniport drivers that can search for more than one adapter on a bus. </P>
<P>This function is called by <B>ScsiPortInitialize</B> after the necessary storage has been allocated. </P>
<P>See also <B>PORT_CONFIGURATION_INFORMATION</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
