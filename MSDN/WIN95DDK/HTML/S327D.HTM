<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Get_Next_VM_Handle</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Get_Next_VM_Handle </H3><P><BR></P>
<PRE>include vmm.inc

mov     ebx, VM           ; VM handle
VMMcall Get_Next_VM_Handle

mov     [NextVM], ebx     ; next VM handle
</PRE>
<P>Returns the handle of the next virtual machine in the virtual machine list maintained by the system. Uses EBX, Flags. </P>
<UL><LI>     Returns the handle of the next virtual machine in the EBX register. </LI></UL><P></P>
<P><I>VM</I> </P>
<P>Handle of a virtual machine. The return value identifies the next virtual machine after the specified virtual machine. </P>
<P>Although each virtual machine appears only once in the list, the order of the handles is not guaranteed. The list is circular, so a virtual device scanning the list should stop scanning when the latest handle returned is equal to the first handle returned. </P>
<P>The following example modifies the state of every virtual machine by using the <B>Get_Next_VM_Handle</B> service to retrieve handles of all valid virtual machines: </P>
<P><BR></P>
<PRE>    VMMcall Get_Cur_VM_Handle

Scan_Loop:

    ; modify the VM state

    VMMcall Get_Next_VM_Handle
    VMMcall Test_Cur_VM_Handle
    jne     Scan_Loop
</PRE>
<P>See also <B>Get_Cur_VM_Handle</B>, <B>Test_Cur_VM_Handle</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
