<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFSMgr_TransMatch</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>IFSMgr_TransMatch </H3><P><BR></P>
<PRE>IFSMgr_TransMatch(
 pioreq pir,
 srch_entry * pse,
 string_t pattern,
 _WIN32_FIND_DATA * pFindBuf
 )
</PRE>
<P>This service converts a search buffer that is in the old DOS format (using the DTA) to a Win32 find buffer format with all the filenames in unicode. Optionally, if a valid pattern is passed in, it will perform long name matching semantics on the name that has been found. This service can be used to support long name matching semantics on volumes that allow only DOS semantics. The search can be done in the normal DOS style and then be filtered further and converted to the Win32 find buffer format by calling this service. This service calls IFSMgr_MetaMatch internally for its meta-matching, so it provides the same uniform matching semantics. </P>
<P><I>pir</I> </P>
<P>Supplies pointer to the IOREQ structure. </P>
<P><I>pse</I> </P>
<P>Supplies pointer to DOS search buffer structure <B>srch_entry</B>. The relevant fields are described below: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Srch_Entry Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>se_key</I> </P></TD><TD VALIGN="TOP"><P>Search key structure <B>srch_key</B> which contains information pertinent to the search operation that is in progress. This provides no input parameters. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>se_attrib</I> </P></TD><TD VALIGN="TOP"><P>Returns attributes of matched file. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Return Attribute Values:</B> </P>
<P>Any combination of the following attributes may be returned. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_READONLY</B> </P></TD><TD VALIGN="TOP"><P>Read-Only file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_HIDDEN</B> </P></TD><TD VALIGN="TOP"><P>Hidden file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_SYSTEM</B> </P></TD><TD VALIGN="TOP"><P>System file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_DIRECTORY</B> </P></TD><TD VALIGN="TOP"><P>Subdirectory. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_ARCHIVE</B> </P></TD><TD VALIGN="TOP"><P>Archive file. </P>
<P>This attribute cannot be returned in combination with other attributes. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_VOLUMELABEL</B> </P></TD><TD VALIGN="TOP"><P>Volume label. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>se_timeM</I> </P>
<P>Returns DOS file time of matched file. This field is set by the FSD. </P>
<P><I>se_date</I> </P>
<P>Returns DOS file date of matched file. This field is set by the FSD. </P>
<P><I>se_size</I> </P>
<P>Returns size of matched file. This field is set by the FSD. </P>
<P><I>se_name[13]</I> </P>
<P>Returns filename of matched file. This field is set by the FSD to the matching filename found by the search. The filename must be stored as an 8.3 format ASCIIZ string. </P>
<P><I>pattern</I> </P>
<P>Supplies pattern to be matched in unicode long name format. Note that the 8.3 format is also acceptable since it is just a subset of the long name format. </P>
<P><I>pFindBuf</I> </P>
<P>Supplies the pointer to the _WIN32_FIND_DATA buffer to contain the results of the find. Note that the filename strings in this buffer are unicode, so the buffer allocation needs to take care of this. </P>
<UL><LI>     Returns 0 if the name did not match the pattern or meta-matching was not requested for by passing in a NULL pattern. Returns non-zero value if the name matches the pattern. </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>IOREQ Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_pos</I> </P></TD><TD VALIGN="TOP"><P>Returns the continuation key for the find. This is extracted from the <I>sk_localFSD</I> field in the <B>srch_key</B> structure <I>se_key</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_data</I> </P></TD><TD VALIGN="TOP"><P>Returns the Win32 find structure <B>_WIN32_FIND_DATA</B> filled in as follows: </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Find Data Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><I>dwFileAttributes</I> </P></TD><TD VALIGN="TOP"><P>Returns the file attributes of the file found. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Attribute Values:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P>
<P>Any valid combination of the following attributes may be returned. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_READONLY</B> </P></TD><TD VALIGN="TOP"><P>Read-Only file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_HIDDEN</B> </P></TD><TD VALIGN="TOP"><P>Hidden file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_SYSTEM</B> </P></TD><TD VALIGN="TOP"><P>System file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_DIRECTORY</B> </P></TD><TD VALIGN="TOP"><P>Subdirectory. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_ARCHIVE</B> </P></TD><TD VALIGN="TOP"><P>Archive file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_VOLUMELABEL</B> </P></TD><TD VALIGN="TOP"><P>Volume label found. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ftCreationTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the file creation time in the Win32 FileTime structure format. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Win32 FileTime Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>dwLowDateTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the low double word of the time in Win32 format. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>dwHighDateTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the high double word of the time in Win32 format. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ftLastAccessTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the file last access time in Win32 FileTime structure format defined above. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ftLastWriteTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the file last write time in Win32 FileTime structure format defined above. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>nFileSizeHigh</I> </P></TD><TD VALIGN="TOP"><P>Returns the high 32-bits of the file size. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>nFileSizeLow</I> </P></TD><TD VALIGN="TOP"><P>Returns the low 32-bits of the file size. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>cFileName</I> </P></TD><TD VALIGN="TOP"><P>Returns the unicode long filename that was found. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>CAlternateFileName</I> </P></TD><TD VALIGN="TOP"><P>Returns the unicode alternate alias name (short file name) of the file that was found. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P></P>
<P></P></FONT></BODY></HTML>
