<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Output</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Output </H3><P><BR></P>
<PRE>WORD Output(LPPDEVICE lpDestDev, WORD wStyle, WORD wCount, 
    LPPOINT lpPoints, LPPEN lpPPen, LPPBRUSH lpPBrush, 
    LPDRAWMODE lpDrawMode, LPRECT lpClipRect);
</PRE>
<P>Draws the lines and figures specified by the wStyle parameter. </P>
<UL><LI>     Returns one of these values: </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>1 </P></TD><TD VALIGN="TOP"><P>Function was successful. </P></TD></TR><TR><TD VALIGN="TOP"><P>0 </P></TD><TD VALIGN="TOP"><P>Unrecoverable error occurred. </P></TD></TR><TR><TD VALIGN="TOP"><P>-1 </P></TD><TD VALIGN="TOP"><P>Function does not support the specified style. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P><I>lpDestDev</I> </P>
<P>Address of a <B>PDEVICE</B> or <B>PBITMAP</B> structure that specifies the destination device or bitmap. </P>
<P><I>wSt</I>y<I>le</I> </P>
<P>Type of output to draw. Can be one of these values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>OS_ALTPOLYGON (22) </P></TD><TD VALIGN="TOP"><P>Draws a polygon and fills it using the alternate-filling method. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_ARC (3) </P></TD><TD VALIGN="TOP"><P>Draws an arc. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_BEGINNSCAN (80) </P></TD><TD VALIGN="TOP"><P>Begins a series of scan lines. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_CHORD (39) </P></TD><TD VALIGN="TOP"><P>Draws a closed figure consisting of an arc and the chord connecting the endpoints of the arc. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_CIRCLE (55) </P></TD><TD VALIGN="TOP"><P>Draws a circle. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_ELLIPSE (7) </P></TD><TD VALIGN="TOP"><P>Draws an ellipse. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_ENDNSCAN (81) </P></TD><TD VALIGN="TOP"><P>Ends a series of scan lines. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_PIE (23) </P></TD><TD VALIGN="TOP"><P>Draws a closed figure consisting of an arc and two line segments connecting the endpoints of the arc to the centerpoint of the arc's bounding rectangle. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_POLYBEZIER (1) </P></TD><TD VALIGN="TOP"><P>Draws a Bezier spline. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_POLYLINE (18) </P></TD><TD VALIGN="TOP"><P>Draws a set of connected line segments. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_POLYSCANLINE (5) </P></TD><TD VALIGN="TOP"><P>Draws a set of horizontal line segments. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_RECTANGLE (6) </P></TD><TD VALIGN="TOP"><P>Draws a rectangle. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_ROUNDRECT (72) </P></TD><TD VALIGN="TOP"><P>Draws a rectangle with round corners. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_SCANLINES (4) </P></TD><TD VALIGN="TOP"><P>Draws a set of horizontal line segments. </P></TD></TR><TR><TD VALIGN="TOP"><P>OS_WINDPOLYGON (20) </P></TD><TD VALIGN="TOP"><P>Draws a polygon and fill it using the winding-number-filling method. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>For a full description of each style, see the following <B>Output</B> descriptions. </P>
<P><I>wCount</I> </P>
<P>Number of <B>POINT</B> structures in the array pointed to by the <I>lpPoints</I> parameter. </P>
<P><I>lpPoints</I> </P>
<P>Address of an array of <B>POINT</B> structures. The array has <I>wCount</I> elements. For most output styles, this parameter contains the device coordinates for each point in the figure. </P>
<P><I>lpPPen</I> </P>
<P>Address of a <B>PPEN</B> structure that specifies the physical pen that is used to use to draw lines and borders. This parameter is NULL if no lines or borders are to be drawn. </P>
<P><I>lpPBrush</I> </P>
<P>Address of a <B>PBRUSH</B> structure that specifies the physical brush that is used to use to fill the interiors of figures and draw scan lines. This parameter is NULL if no interiors or scan lines are to be drawn. </P>
<P><I>lpDrawMode</I> </P>
<P>Address of a <B>DRAWMODE</B> structure that contains information to use when drawing, such as binary-raster operation, background mode, and foreground and background color. </P>
<P><I>lpClipRect</I> </P>
<P>Address of a <B>RECT</B> structure that contains coordinates for the clipping rectangle. If this parameter is NULL, the clipping rectangle is the entire display surface. </P>
<P>The export ordinal for this function is 8. </P>
<P>GDI calls this function when an application calls functions, such as <B>LineTo</B>, <B>Rectangle</B>, and <B>Ellipse</B>. </P>
<P>Every graphics driver must export an <B>Output</B> function. </P>
<P><B>Output</B> uses the binary-raster operation, background mode, and background color specified by the <B>DRAWMODE</B> structure to draw lines and scan lines. <B>Output</B> uses the binary-raster operation to determine how to combine pen or brush colors with the existing color on the display surface. The function uses background mode to determine how to fill gaps in styled lines or hatched brushes. If the background mode is OPAQUE, <B>Output</B> combines the background color with the existing color in the gaps. If the background mode is TRANSPARENT, <B>Output</B> leaves the existing color unchanged. For all pen or brush styles other than styled lines and hatched brushes, <B>Output</B> draws as if the background mode is OPAQUE regardless of the actual background mode. </P>
<P><B>Output</B> uses the <I>lpClipRect</I> parameter only if the driver has set either the CP_RECTANGLE or CP_REGION value in the <B>dpClip</B> member of the <B>GDIINFO</B> structure. <B>Output</B> ensures that the coordinates specified by the <I>lpClipRect</I> parameter do not extended beyond the boundaries of the display surface. </P>
<P>See also <B>DRAWMODE</B>, <B>PDEVICE</B>, <B>PBITMAP</B>, <B>POINT</B>, <B>RECT</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
