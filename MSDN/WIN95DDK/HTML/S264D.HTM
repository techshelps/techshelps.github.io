<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enable</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Enable </H3><P><BR></P>
<PRE>WORD Enable(LPVOID lpDevInfo, WORD wAction, LPSTR lpDestDevType,
    LPSTR lpOutputFile, LPVOID lpData);
</PRE>
<P>Initializes software and hardware for the specified driver. Every graphics driver must export an <B>Enable</B> function. </P>
<UL><LI>     Returns TRUE if successful, FALSE otherwise. </LI></UL><P></P>
<P><I>lpDevInfo</I> </P>
<P>Address of a <B>PDEVICE</B> or <B>GDIINFO</B> structure depending on the value of the <I>wAction</I> parameter. </P>
<P><I>wAction</I> </P>
<P>The initialization action. Can be one of these values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>0x0000 </P></TD><TD VALIGN="TOP"><P>Initializes the driver and associated hardware and then copies device-specific information needed by the driver to the <B>PDEVICE</B> structure pointed to by <I>lpDevInfo</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P>0x0001 </P></TD><TD VALIGN="TOP"><P>Copies the device driver information to the <B>GDIINFO</B> structure pointed to by <I>lpDevInfo</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P>0x8000 </P></TD><TD VALIGN="TOP"><P>Initializes the <B>PDEVICE</B> structure pointed to by <I>lpDevInfo</I>, but does not initialize the driver and peripheral hardware. </P></TD></TR><TR><TD VALIGN="TOP"><P>0x8001 </P></TD><TD VALIGN="TOP"><P>Same as 0x0001. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>GDI sets the high order bit of <I>wAction</I> only if an application has requested an information context. </P>
<P><I>lpDestDevT</I>y<I>pe</I> </P>
<P>Address of a string that specifies the device name. This string applies only to device drivers that support more than one model of the same device. This parameter can be NULL if only one model is supported. </P>
<P><I>lpOutputFile</I> </P>
<P>Address of a string that specifies the name of the output port or file to receive output from the driver. The string must be a valid MS-DOS filename. This parameter must be NULL for the display. </P>
<P><I>lpData</I> </P>
<P>Address of <B>DEVMODE</B> structure that contains information <B>Enable</B> uses to initialize the device. This parameter must be NULL for the display. </P>
<P>The export ordinal for this function is 5. </P>
<P>In some cases, GDI may request a raster device to write to a memory bitmap without enabling the device first. This occurs only with raster devices that can write to memory bitmaps. </P>
<P>GDI calls this function when it creates a device or information context for an application, or when it restores the context after Windows returns from a full-screen application. </P>
<P>For most devices, GDI calls <B>Enable</B> twice: first, to retrieve the driver's <B>GDIINFO</B> structure, and second, then to initialize the device and the <B>PDEVICE</B> structure. </P>
<P>See also <B>DEVMODE</B>, <B>Disable</B>, <B>GDIINFO</B>, <B>PDEVICE</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
