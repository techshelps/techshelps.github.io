<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_FindNextFile</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_FindNextFile </H3><P><BR></P>
<PRE>FS_FindNextFile(
 PIOREQ pir
 )
</PRE>
<P>A Win32 find next operation is performed through <B>FS_FindNextFile</B>. The find context handle created by <B>FS_FindFirstFile</B> is passed to continue the search. This routine handles the Win32 function: FindNextFile() and the int 21h function 714Fh. </P>
<P><I>ir_rh</I> </P>
<P>Supplies handle to disk volume or network resource where the search is being done. </P>
<P><I>ir_fh</I> </P>
<P>Supplies the find context handle obtained in a previous call to FS_FindFirstFile. </P>
<P><I>ir_data</I> </P>
<P>Supplies a pointer to buffer where the find data for a file that is found is returned. </P>
<P><I>ir_sfn</I> </P>
<P>Supplies system file number. </P>
<P><I>ir_options</I> </P>
<P>Supplies options on the find next operation. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Find Next Option Values:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FIND_RESTART</B> </P></TD><TD VALIGN="TOP"><P>Restart the find at the position designated by the find resume key passed in ir_pos. The operation of this key is described in greater detail below. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_pos</I> </P>
<P>Supplies the find resume key. This parameter is passed in only if the FILE_FIND_RESTART option is specified. </P>
<P><I>ir_user</I> </P>
<P>Supplies user id for this request. </P>
<P><I>ir_pid</I> </P>
<P>Supplies process id for this request. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <I>ir_error</I> </P></TD><TD VALIGN="TOP"><P>Returns status of the operation ( 0 if no error, errorcode otherwise ). </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_data</I> </P></TD><TD VALIGN="TOP"><P>Returns find data for a file filled in the buffer in the following format if there was no error. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Find Data Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>dwFileAttributes</I> </P></TD><TD VALIGN="TOP"><P>Returns the file attributes of the file found. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Attribute Values:</B> </P>
<P>Any valid combination of the following attributes may be returned. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_READONLY</B> </P></TD><TD VALIGN="TOP"><P>Read-Only file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_HIDDEN</B> </P></TD><TD VALIGN="TOP"><P>Hidden file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_SYSTEM</B> </P></TD><TD VALIGN="TOP"><P>System file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_DIRECTORY</B> </P></TD><TD VALIGN="TOP"><P>Subdirectory. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_ARCHIVE</B> </P></TD><TD VALIGN="TOP"><P>Archive file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_VOLUMELABEL</B> </P></TD><TD VALIGN="TOP"><P>Volume label found. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ftCreationTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the file creation time in the Win32 FileTime structure format. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Win32 FileTime Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>dwLowDateTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the low double word of the time in Win32 format. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>dwHighDateTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the high double word of the time in Win32 format. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ftLastAccessTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the file last access time in Win32 FileTime structure format defined above. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ftLastWriteTime</I> </P></TD><TD VALIGN="TOP"><P>Returns the file last write time in Win32 FileTime structure format defined above. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>nFileSizeHigh</I> </P></TD><TD VALIGN="TOP"><P>Returns the high 32-bits of the file size. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>nFileSizeLow</I> </P></TD><TD VALIGN="TOP"><P>Returns the low 32-bits of the file size. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>cFileName</I> </P></TD><TD VALIGN="TOP"><P>Returns the unicode long filename that was found. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>CAlternateFileName</I> </P></TD><TD VALIGN="TOP"><P>Returns the unicode alternate alias name (short file name) of the file that was found. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ir_pos</I> </P></TD><TD VALIGN="TOP"><P>Returns the find resume key for this find next operation. The operation of this key is described above in the FS_FindFirstFile api documentation. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P></P>
<P></P></FONT></BODY></HTML>
