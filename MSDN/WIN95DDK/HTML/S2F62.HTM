<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Expansion Areas</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Expansion Areas </H3><P>An <B>IOP</B> contains, among other members, the expansion areas required by each driver that receives the <B>IOP</B>. When a driver receives an <B>IOP</B>, it can access its expansion area by using the offset in the <B>DCB_cd_expan_off</B> field to calculate the starting address of the area. </P>
<P>The IOS creates the expansion area for a driver when the driver inserts itself in to the calldown chain. The IOS reserves the number of bytes specified by the <B>ISP_i_cd_expan_len</B> member for the expansion area for the driver. As drivers add themselves to the calldown chain, the IOS keeps a running total of the bytes reserved for all the expansion areas. It keeps this total in the <B>DCB_expansion_length</B> field. The IOS uses this field to determine the offset to a new expansion area whenever a driver requests one. </P>
<P>After all drivers inserted themselves in the calldown chain, the IOS calculates the size of an <B>IOP</B> as the sum of a static <B>IOP</B>, including the <B>IOP</B> header and <B>IOR</B> structure, and the total size of the expansion areas as given by the <B>DCB_expansion_length</B> field. The IOS places this total <B>IOP</B> size in the <B>VRP</B> structure so that IOS clients that prepare requests can allocate an <B>IOP</B> of the correct size. All expansion areas are placed at the end of the static <B>IOP</B>. </P>
<P>The expansion area offset a driver receives depends on the order in which the driver is initialized. The offsets into the expansion area are negative, so that a driver loading later will have a lower memory address pointing to its expansion offset. </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="116pt" VALIGN="TOP"><COL WIDTH="116pt" VALIGN="TOP"><COL WIDTH="116pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Insertion Order </B></P></TD><TD VALIGN="TOP"><P><B>Size </B></P></TD><TD VALIGN="TOP"><P><B>Offset </B></P></TD></TR><TR><TD VALIGN="TOP"><P>3rd </P></TD><TD VALIGN="TOP"><P>Z </P></TD><TD VALIGN="TOP"><P>-(X+Y) </P></TD></TR><TR><TD VALIGN="TOP"><P>2nd </P></TD><TD VALIGN="TOP"><P>Y </P></TD><TD VALIGN="TOP"><P>-X </P></TD></TR><TR><TD VALIGN="TOP"><P>1st </P></TD><TD VALIGN="TOP"><P>X </P></TD><TD VALIGN="TOP"><P>0 </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>See also <B>DCB</B>, <B>IOP</B>, <B>VRP</B> </P></FONT></BODY></HTML>
