<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_Allocate_LDT_Selector</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>_Allocate_LDT_Selector </H3><P><BR></P>
<PRE>include vmm.inc

VMMcall _Allocate_LDT_Selector, &lt;VM, DescDWORD1, DescDWORD2, 
    Count, flags&gt;
</PRE>
<P>Creates a new selector or selectors, and adds them to the Local Descriptor Table (LDT) for the specified virtual machine. Uses EAX, ECX, EDX, and Flags. </P>
<UL><LI>     Returns the following values in the EAX and EDX registers if successful: </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Register </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>EAX </P></TD><TD VALIGN="TOP"><P>Contains the new selector. If <I>Count</I> is greater than 1, EAX contains only the first selector. The second selector is EAX+8, the third EAX+16, and so on. The high 16 bits of the selector is always zero. </P></TD></TR><TR><TD VALIGN="TOP"><P>EDX </P></TD><TD VALIGN="TOP"><P>Contains the selector for and the size of the local descriptor table (LDT). The low 16 bits contains the selector for the LDT, and the high 16 bits contains the size of the LDT expressed as the number of selectors in the table. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The service returns zero in both registers if an error occurs </P>
<P></P>
<P><I>VM</I> </P>
<P>Handle of the virtual machine to receive the selectors. </P>
<P><I>DescDWORD1</I> </P>
<P>High-order doubleword of the segment descriptor. This parameter contains the high 16 bits of the base address, the high 4 bits of the limit, and the status and type bits. </P>
<P><I>DescDWORD2</I> </P>
<P>Low-order doubleword of the segment descriptor. This parameter contains the low 16 bits of the base address and limit. </P>
<P><I>Count</I> </P>
<P>Number of contiguous LDT selectors to allocate if the <I>flags</I> parameter does <I>not</I> specify the ALDTSpecSel value. Otherwise, this parameter specifies the LDT selector to allocate. </P>
<P><I>flags</I> </P>
<P>Specifies the operation flags. Can be zero or the following value: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>ALDTSpecSel </P></TD><TD VALIGN="TOP"><P>Allocates the LDT selector specified by the <I>Count</I> parameter. The service copies the descriptor data to the specified LDT entry and returns the selector. If the LDT selector is already allocated, the service returns an error value instead. </P>
<P>this value is not given, the service allocates the number of selectors specified by <I>Count</I>. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>All other values are reserved. </P>
<P>The service returns an error if an invalid descriptor is specified, the LDT is full, an invalid virtual machine handle is specified, or a selector is already allocated. </P>
<P>Although this service returns a selector for the LDT, virtual devices should <I>not</I> attempt to edit the LDT directly. A virtual device should use the <B>_SetDescriptor</B> service to change an LDT selector rather than edit the LDT. </P>
<P>This service sets the RPL of the selector to the DPL of the selector set in the <I>DescDWORD1</I> parameter. </P>
<P>LDT selectors are only valid when the virtual machine for which they are created is the current virtual machine. However, a virtual device can use the <B>_SelectorMapFlat</B> service to examine the region described by an LDT selector in virtual machines which are not the current virtual machine. </P>
<P>Although this service can create multiple selectors, the <B>_Free_LDT_Selector</B> service cannot free multiple selectors. Multiple selectors must be freed individually. </P>
<P>When this service creates multiple selectors, it gives each selector the same descriptor values. It does not change the base address for each selector. It is up to the virtual device to edit the selectors, and assign appropriate base addresses. </P>
<P>Virtual devices should not rely on specific hard-coded LDT selectors, and therefore, they should avoid using the ALDTSpecSel value. </P>
<P>See also <B>_Allocate_GDT_Selector</B>, <B>_Free_LDT_Selector</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
