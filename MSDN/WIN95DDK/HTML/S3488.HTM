<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOSMGR_Add_Device</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>DOSMGR_Add_Device </H3><P><BR></P>
<PRE>include dosmgr.inc

mov     ebx, VMAdd
mov     eax, OFFSET32 Device_Header
VxDcall DOSMGR_Add_Device
jc      error_handler
</PRE>
<P>Adds a device to the device list. Uses Flags. </P>
<UL><LI>     Clears the carry flag if successful; otherwise, sets the carry flag if the device could not be added to device list. </LI></UL><P></P>
<P><I>VMAdd</I> </P>
<P>Handle of the virtual machine to add device to. If this parameter is zero, the device is added to all virtual machines. </P>
<P><I>Device_Header</I> </P>
<P>Address of device header. This address must be in low memory (less than 100000h). </P>
<P>The address of this device for the chain is computed as: </P>
<P><BR></P>
<PRE>(eax &gt;&gt; 4) &amp; 0FFFFh : (eax &amp; 000Fh)
</PRE>
<P>This service links the device into the list but does not call it. If the device needs to be initialized, the caller must do it. This service adds the device to the end of the device chain. Therefore, this service cannot be used to replace an existing device. This service applies to character devices only. Block devices cannot be added with this service. </P>
<P>All devices put on the list this way are removed when Windows exits, including any devices added by virtual mode code. </P>
<P>The only supported method to add a device globally is to use the service <B>_Allocate_Global_V86_Data_Area</B> to allocate memory to contain the device header, initialize it, then call this routine to add it to the list. Global devices <I>must</I> be added during the <B>Device_Init</B> message. They cannot be added later. Local devices <I>must</I> be added at the <B>VM_Init</B>, <B>VM_Critical_Init</B> or <B>Sys_VM_Init</B> message or they will be global because they will be part of the initial VM state. </P>
<P>If this device hooks an interrupt and it is a local device, the vector must be set in the appropriate virtual machine during the <B>VM_Init</B>, <B>VM_Critical_Init</B> or <B>Sys_VM_Init</B> message. </P>
<P>A global device can also work this way, hooking the vector in every virtual machine. This allows the global device to be removed before Windows exits. The other method for a global device is to hook the vector during the <B>Device_Init</B> message which makes the hook part of the initial virtual machine state. Such a hook <I>must</I> be removed during the <B>Sys_Critical_Exit</B> message, or the vector will point to a nonexistent device after Windows exits. </P>
<P></P>
<P></P></FONT></BODY></HTML>
