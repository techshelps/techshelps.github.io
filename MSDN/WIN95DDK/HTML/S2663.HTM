<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Output(OS_POLYSCANLINE)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Output(OS_POLYSCANLINE) </H3><P><BR></P>
<PRE>WORD Output(LPPDEVICE lpDestDev, WORD wStyle, WORD wCount, 
    LPPOINT lpPoints, LPPPEN lpPPen, LPPBRUSH lpPBrush, 
    LPDRAWMODE lpDrawMode, LPRECT lpClipRect);
</PRE>
<P>Draws a series of horizontal line segments at a specified vertical position. GDI calls this function when simulating output, such as when filling a polygon. Unlike OS_SCANLINES, it is not necessary that every graphics driver support the OS_POLYSCANLINE style. </P>
<UL><LI>     Returns 1 if the function is successful, zero otherwise. </LI></UL><P></P>
<P><I>lpDestDev</I> </P>
<P>Address of a <B>PDEVICE</B> or <B>PBITMAP</B> structure that specifies the destination device or bitmap. </P>
<P><I>wStyle</I> </P>
<P>Must be OS_POLYSCANLINE. </P>
<P><I>wCount</I> </P>
<P>The number of <B>SCAN</B> structures in the array pointed to by the <I>lpPoints</I> parameter. </P>
<P><I>lpPoints</I> </P>
<P>Address of an array of <B>SCAN</B> structures that contain the information needed to draw the scanlines. The driver must draw every <B>SCAN</B> structure in the array. </P>
<P><I>lpPPen</I> </P>
<P>Address of a <B>PPEN</B> structure that specifies the physical pen that is used to draw scan lines. </P>
<P><I>lpPBrush</I> </P>
<P>Address of a <B>PBRUSH</B> structure that specifies the physical brush that is used to draw the scan lines. </P>
<P><I>lpDrawMode</I> </P>
<P>Address of a <B>DRAWMODE</B> structure that contains information to use when drawing, such as binary-raster operation, background mode, and foreground and background color. </P>
<P><I>lpClipRect</I> </P>
<P>Address of a <B>RECT</B> structure that contains coordinates for the clipping rectangle. If this parameter is NULL, the clipping rectangle is the entire display surface. </P>
<P><B>Output</B> draws a scan line from the starting point up to, but not including, the ending point. The function draws all lines with the brush pointed to by <I>lpPBrush</I>, or by the pen pointed to by <I>lpPPen </I>if <I>lpPBrush</I> is NULL. If <B>Output</B> uses the pen to draw the scan lines, it should not dither the pen color. </P>
<P>Vector device drivers need not support <B>OS_POLYSCANLINE</B>. Since <B>OS_SCANLINES</B> and <B>OS_POLYSCANLINE</B> are functionally equivalent, vector devices lose nothing by omitting this support. </P>
<P>See also <B>DRAWMODE</B>, <B>Output(OS_BEGINNSCAN)</B>, <B>Output(OS_ENDNSCAN)</B>, <B>Output(OS_SCANLINES)</B>, <B>PBITMAP</B>, <B>PDEVICE</B>, <B>POINT</B>, <B>RECT</B>, <B>SCAN</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
