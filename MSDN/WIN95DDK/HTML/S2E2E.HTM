<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing the Virtual Pen Driver</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Initializing the Virtual Pen Driver </H3><P>During startup, Windows reads the Windows 95 registry and loads the registered virtual device drivers. This happens before the wallpaper is displayed on the video screen. Just after the virtual pen driver (VPENDC.VXD) is loaded into memory, Windows sends it a Device_Init message. Upon receiving this message, the virtual pen driver: </P>
<UL><LI>     Initializes variables. </LI><LI>     Reads pen-specific information from the registry. </LI><LI>     Calls the <B>cOEM_API_Proc</B> function in the virtual driver with the VPEND_HWINIT, VPEND_PIINIT, and VPEND_COMMANDINIT messages. Code for the <B>cOEM_API_Proc</B> function is in the source file OEMAPI.C and is specific to the OEM hardware. This function determines how the driver should behave. </LI><LI>     Fills the global structures <B>DRV_PENINFO</B> and <B>_HARDWAREINFO</B> with default values from the registry. </LI><LI>     Acquires a COM port and virtualizes the interrupt request line (IRQ). </LI><LI>     Returns to Windows. </LI></UL><P></P>
<P>At this point, the tablet can start generating hardware interrupts. However, the virtual pen driver will not send pen packets to the pen driver in response to these interrupts until the pen driver enables the virtual pen driver with a VPEND_ENABLE message. For a description of all the VPEND_ messages, see the "Reference" section in <I>About the Virtual Pen Driver</I>. </P></FONT></BODY></HTML>
