<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMEINFO</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>IMEINFO </H3><P><BR></P>
<PRE>typedef struct tagIMEInfo {
  DWORD  dwPrivateDataSize;  // byte count of private data
  DWORD  fdwProperty;        // IME property bits
  DWORD  fdwConversionCaps;  // IME conversion mode capability bits
  DWORD  fdwSentenceCaps;    // IME sentence mode capability
  DWORD  fdwUICaps;          // IME UI capability
  DWORD  fdwSCSCaps;         // ImeSetCompositionString capability
  DWORD  fdwSelectCaps;      // IME inherit IMC capability
} IIMEINFO;
</PRE>
<P>This structure is used internally by IMM and the IME interface. </P>
<P>The high-order word of <B>fdwProperty</B> has the follow values. These properties are used by applications. </P>
<P>IME_PROP_AT_CARET </P>
<P>This bit on indicates the IME conversion window is at the caret position. This bit off indicates a near caret position operation IME. </P>
<P>IME_PROP_SPECIAL_UI </P>
<P>This bit on indicates the IME has a special UI. An IME should set this bit only if it has a UI that an application can not display. Normally, an IME will not set this flag. </P>
<P>IME_PROP_CANDLIST_START_FROM_1 </P>
<P>This bit on indicates the UI of the candidate list strings starts from 0 or 1. An application can draw the candidate list string by adding "1", "2", "3", and so on, to the front of the candidate string. </P>
<P>IME_PROP_UNICODE </P>
<P>This bit on indicates the string contents of the input context are in UNICODE </P>
<P>The low-order word of <B>fdwProperty</B> has the follow values. These properties are used by the system. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Properties </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>IME_PROP_END_UNLOAD </P></TD><TD VALIGN="TOP"><P>This bit on indicates the IME is unloaded when it is inactive. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_PROP_KBD_CHAR_FIRST </P></TD><TD VALIGN="TOP"><P>This bit on indicates the system translates the character by keyboard first. This character is passed to IME as an aid information. No aid information when this bit is off. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_PORP_NEED_ALTKEY </P></TD><TD VALIGN="TOP"><P>This IME needs the ALT key to be passed to <B>ImeProcessKey</B>. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_PROP_IGNORE_UPKEYS </P></TD><TD VALIGN="TOP"><P>This IME does not need up keys to be passed to <B>ImeProcessKey</B>. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The <B>fdwConversionCaps</B> member shares the same definition for the conversion mode. If the relative bit is off, this IME does not have the capability to handle either the corresponding bit of conversion mode is on or off. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_KATAKANA </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in KATAKANA mode, else the IME is in HIRAGANA mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_NATIVE </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in NATIVE mode, else the IME is in ALPHANUMERIC mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_FULLSHAPE </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in full shape mode, else the IME is in SBCS mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_ROMAN </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in ROMAN input mode, else the IME is in non ROMAN input mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_CHARCODE </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in CODE input mode, else the IME is in non CODE input mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_HANJACONVERT </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in HANJA convert mode, else the IME is in non HANJA convert mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_SOFTKBD </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in soft keyboard mode, else the IME is in non soft keyboard mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_NOCONVERSION </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in no conversion mode, else the IME is in conversion mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_EUDC </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in EUDC mode, else the IME is not in EUDC mode. Under this mode, if GCS_RESULTSTR is generated, the current reading string is valid and can be converted. In some IMEs, if the vowel is not included, it is not a valid reading string. The EUDC editor should not provide such a reading string. The result string may contain nothing under GCS_RESULTSTR generated, because the string is the EUDC string that EUDC editor is going to register. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_CMODE_SYMBOL </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME is in SYMBOL mode, else the IME is not in SYMBOL mode. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The <B>fdwSentenceCaps</B> member shares the same constant definition for the sentence mode. If the relative bit is off, this IME does not have the capability to handle either the corresponding bit of sentence mode is on or off. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>IME_SMODE_PLAURALCLAUSE </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME supports plaural clause sentence mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_SMODE_SINGLECONVERT </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME support single character sentence mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_SMODE_AUTOMETIC </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME support automatic sentence mode. </P></TD></TR><TR><TD VALIGN="TOP"><P>IME_SMODE_PHRASEPREDICT </P></TD><TD VALIGN="TOP"><P>This bit on indicates IME support phrase predict sentence mode. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The <B>fdwUICaps</B> has the follow bits. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>UI_CAP_2700 </P></TD><TD VALIGN="TOP"><P>The UI supports the escape in which the LogFont is 0 or 2700. </P></TD></TR><TR><TD VALIGN="TOP"><P>UI_CAP_ROT90 </P></TD><TD VALIGN="TOP"><P>The UI supports the escape in which LogFont is 0, 900, 1800 or 2700. </P></TD></TR><TR><TD VALIGN="TOP"><P>UI_CAP_ROTANY </P></TD><TD VALIGN="TOP"><P>The UI supports any escape. </P></TD></TR><TR><TD VALIGN="TOP"><P>UI_CAP_SOFKBD </P></TD><TD VALIGN="TOP"><P>The IME uses soft keyboard provided by the system. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The <B>fdwSCSCaps</B> member has the follow values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>SCS_CAP_COMPSTR </P></TD><TD VALIGN="TOP"><P>This IME can generate the composition string by SCS_SETSTR. </P></TD></TR><TR><TD VALIGN="TOP"><P>SCS_CAP_MAKEREAD </P></TD><TD VALIGN="TOP"><P>When calling <B>ImmSetCompositionString</B> with SCS_SETSTR, the IME can create the reading of composition string without <I>lpRead</I>. Under an IME that has this capability, the application does not need to set <I>lpRead</I> for SCS_SETSTR. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The <B>fdwSelectCaps</B> has the follow values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>SELECT_CAP_CONVMODE </P></TD><TD VALIGN="TOP"><P>The IME can inherit the conversion mode at <B>ImeSelect</B>. </P></TD></TR><TR><TD VALIGN="TOP"><P>SELECT_CAP_SENTENCE </P></TD><TD VALIGN="TOP"><P>The IME can inherit the sentence mode at <B>ImeSelect</B>. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>This capability is for the application. When the user changes the IME, the application can know if the conversion mode will be inherited by seeing this capability. If the newly selected IME does not have this capability, the application can not expect the new mode and it must retrieve the mode again. </P></FONT></BODY></HTML>
