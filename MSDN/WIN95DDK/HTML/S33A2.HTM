<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Begin_Critical_Section</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Begin_Critical_Section </H3><P><BR></P>
<PRE>include vmm.inc

mov     ecx, Flags
VMMcall Begin_Critical_Section
</PRE>
<P>Claims a critical section for the current virtual machine. Only one virtual machine at a time can enter a critical section. If a virtual device calls this service after another virtual machine has entered a critical section, the system blocks the calling virtual machine until the critical section is released. Uses Flags. </P>
<UL><LI>     No return value. </LI></UL><P></P>
<P><I>Flags</I> </P>
<P>Action to take when interrupts occur while the virtual machine is blocked waiting for the critical section. This parameter can be a combination of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Block_Enable_Ints </P></TD><TD VALIGN="TOP"><P>Service interrupts in the virtual machine even if the virtual machine does not currently have interrupts enabled. This forces interrupts to be enabled. This value is only relevant if either Block_Svc_Ints or Block_Svc_If_Ints_Locked is set. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Svc_If_Ints_Locked </P></TD><TD VALIGN="TOP"><P>Service events and simulated interrupts in the virtual machine if the thread blocks for the critical section and the VMStat_V86IntsLocked flag is set. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Svc_Ints </P></TD><TD VALIGN="TOP"><P>Service events and simulated interrupts in the virtual machine if the thread blocks for the critical section. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Thread_Idle </P></TD><TD VALIGN="TOP"><P>Consider the thread to be idle if it blocks for the critical section. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The Block_Poll value is reserved and must not be used with this service. </P>
<P>The system maintains a count of claims for critical sections and releases the critical section only when an equal number of <B>Begin_Critical_Section</B> and <B>End_Critical_Section</B> services have been called. Calling <B>Begin_Critical_Section</B> before the critical section is released does not increment the claim count. </P>
<P>When the critical section is first claimed, the system boosts the execution priority of the current virtual machine by the Critical_Section_Boost value (as described for the <B>Adjust_Exec_Priority</B> service). While a virtual machine is in a critical section, the system will switch to another task only if the virtual machine blocks on a semaphore or the other task has a time-critical operation, such as simulating hardware interrupts. </P>
<P>See also <B>Adjust_Exec_Priority</B>, <B>End_Critical_Section</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
