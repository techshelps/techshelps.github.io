<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About VMM Messages</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>About VMM Messages </H2><P>This chapter is an alphabetic listing of the system control messages sent to virtual devices by the virtual machine manager (VMM). Other components (for example, Vcomm, Vwin32, and the Configuration Manager) also direct system control messages to particular VxDs. Consult documentation for those other components for additional information. </P>
<P>In this chapter, the term "general registers" refers to the registers consisting of EAX, EBX, ECX, EDX, ESI, EDI, and EBP. </P>
<P>The purpose of the <I>xx</I>2 messages (such as SYS_VM_TERMINATE2 and VM_TERMINATE2) is to address a problem in Windows 3.1 where exit-like messages were sent in <I>increasing</I> initialization order, which created complicated dependencies in a layered device architecture. For example, suppose virtual device <I>B</I> always requires virtual device <I>A</I>. This is traditionally solved by giving virtual device <I>A</I> a lower initialization order. This solves the problem at initialization, but since Windows 3.1 sent shutdown messages in increasing initialization order, virtual device <I>A</I> would get the shutdown message first and uninstall itself. Then virtual device <I>B</I> got into trouble when it received the shutdown message because it requires services from virtual device <I>A</I>, which is already gone. There are various ways of working around this problem, none of them entirely satisfactory. </P>
<P>By introducing <I>xx</I>2 messages which are sent in reverse initialization order, virtual devices <I>A</I> and <I>B</I> can perform their shutdown on the <I>xx</I>2 message, in which case virtual device <I>B</I> will shut down first, while virtual device <I>A</I> is still ready to service requests, and only after <I>B</I> has finished processing the shutdown message will it then be given to virtual device <I>A</I>. </P>
<P>Note that these messages are sent by the virtual machine manager or other system components. Virtual devices should not send these messages on their own, unless otherwise indicated. </P></FONT></BODY></HTML>
