<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MemConfig Item</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>MemConfig Item </H3><P><BR></P>
<PRE>MemConfig = &lt;mem-range&gt;[,&lt;mem-range&gt;]...
</PRE>
<P>Sets the memory range(s) for the logical configuration. More than one <I>mem-range</I> can be given, but each additional value but be preceded with a comma. </P>
<P><I>mem-range</I> </P>
<P>This value has two forms: </P>
<P><BR></P>
<PRE>&lt;start&gt;-&lt;end&gt;[(&lt;attr&gt;)]

&lt;size&gt;@&lt;min&gt;-&lt;max&gt;[%&lt;align-mask&gt;][(&lt;attr&gt;)]
</PRE>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>start</I> </P></TD><TD VALIGN="TOP"><P>Starting address of the physical memory region. This is a 32-bit value in hexadecimal notation. The <I>start</I> and <I>end</I> values must be separated with a hyphen. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>end</I> </P></TD><TD VALIGN="TOP"><P>Ending address of the physical memory region. This is a 32-bit value in hexadecimal notation. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>size</I> </P></TD><TD VALIGN="TOP"><P>Size of the required region in bytes. This is a 32-bit value in hexadecimal notation. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>min</I> </P></TD><TD VALIGN="TOP"><P>Smallest possible starting address of the memory region. The <I>min</I> and <I>max</I> values must be separated with a hyphen. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>max</I> </P></TD><TD VALIGN="TOP"><P>Largest possible ending address of the memory region. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>alignMask</I> </P></TD><TD VALIGN="TOP"><P>Optional. A 32-bit hexadecimal mask applied to range specified by <I>min</I> and <I>max</I> to determine legal starting addresses for the memory region. To construct the mask, all bits which must be 0 in the starting address must be 0 in the mask. All other bits should be 1. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>attr</I> </P></TD><TD VALIGN="TOP"><P>Optional. Reserved; do not use. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The following examples illustrate the <B>MemConfig</B> item. </P>
<P><BR></P>
<PRE>MemConfig = C0000-C7FFF, D0000-D7FFF
</PRE>
<P>This specifies a memory region of 32K bytes which can start at either C000:0000 or D000:0000. </P>
<P><BR></P>
<PRE>MemConfig = 8000@C0000-D7FFF%F0000
</PRE>
<P>This specifies exactly the same region (32K range starting on 64K boundaries only). </P>
<P>See also <B>sec_infinstall</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
