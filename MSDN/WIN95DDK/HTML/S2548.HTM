<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CONFIGMG_Register_Device_Driver</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>CONFIGMG_Register_Device_Driver </H3><P><BR></P>
<PRE>CONFIGRET CONFIGMG_Register_Device_Driver(DEVNODE dnDevNode, CMCONFIGHANDLER Handler, ULONG ulRefData, ULONG ulFlags)
</PRE>
<P>Registers a configuration handler for a device node. </P>
<UL><LI>     Returns CR_SUCCESS if the function is successful. Otherwise, the return value can be CR_INVALID_DEVNODE, CR_INVALID_FLAG or CR_NOT_SYSTEM_VM. </LI></UL><P></P>
<P><I>dnDevNode</I> </P>
<P>Handle of a device node. This handle must have been created by a call to the <B>CONFIGMG_Locate_DevNode</B> or <B>CONFIGMG_Create_DevNode</B> function. </P>
<P><I>Handler</I> </P>
<P>Device-driver entry point. This is the routine that will handle all device-driver configuration functions. This parameter can be NULL if the device driver does not need to monitor configuration events. </P>
<P><I>ulRefData</I> </P>
<P>Data that will be passed back to the Handler. </P>
<P><I>ulFlags</I> </P>
<P>Must be either CM_REGISTER_DEVICE_DRIVER_STATIC or a combination of CM_REGISTER_DEVICE_DRIVER_DISABLEABLE and/or CM_REGISTER_DEVICE_DRIVER_REMOVABLE. </P>
<P>This function must be called by any Plug and Play device that owns a device node. It should be called only when the initializing device driver is ready to start handling the device. Note that this API can be called from ring 3 but the handler needs to be NULL in that case. </P>
<P>See also <B>CONFIGMG_Create_DevNode</B>, <B>CONFIGMG_Locate_DevNode</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
