<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOSMGR_End_V86_App</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>DOSMGR_End_V86_App </H3><P><BR></P>
<PRE>include vmm.inc
include dosmgr.inc

; Install a hook procedure

GetVxDServiceOrdinal eax, DOSMGR_End_V86_App
mov esi, OFFSET32 HookProc
VMMcall Hook_Device_Service

jc error
</PRE>
<P>This service is called internally by DOSMGR when a V86-mode application has ended execution. VxDs which wish to be notified of this activity must hook this service. VxDs must not call this service directly. The hook procedure must be a 4.0 Hook_Proc style procedure. </P>
<P>VxDs which monitor resources may wish to hook this service (and the corresponding <B>DOSMGR_Begin_V86_App</B>) in order to allocate and free resources for each MS-DOS-based application. To monitor Windows-based applications, VxDs should monitor the system control calls related to threads. </P>
<P>The system calls the hook procedure as follows: </P>
<P><BR></P>
<PRE>mov ebx, VMHandle
mov esi, HighLinearPSP
mov dx,  AppPSP
mov cx, AppExitCode
</PRE>
<P><I>VMHandle</I> </P>
<P>VM that performed the int 21. </P>
<P><I>HighLinearPSP</I> </P>
<P>High linear address of the program segment prefix (PSP) which is terminating. </P>
<P><I>AppPSP</I> </P>
<P>Segment value of the PSP of the application which is terminating. </P>
<P><I>AppExitCode</I> </P>
<P>Application exit code. This is the value which will be returned in AX when the parent calls Get Child-Program Return Value (Interrupt 21h function 4Dh). </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>CH </P></TD><TD VALIGN="TOP"><P>Application exit type </P></TD></TR><TR><TD VALIGN="TOP"><P>CH = 0 </P></TD><TD VALIGN="TOP"><P>Normal termination </P></TD></TR><TR><TD VALIGN="TOP"><P>CH = 1 </P></TD><TD VALIGN="TOP"><P>Terminated via Ctrl+C </P></TD></TR><TR><TD VALIGN="TOP"><P>CH = 2 </P></TD><TD VALIGN="TOP"><P>Terminated due to critical error (e.g., disk I/O error) </P></TD></TR><TR><TD VALIGN="TOP"><P>CH = 3 </P></TD><TD VALIGN="TOP"><P>Terminated and stayed resident </P></TD></TR><TR><TD VALIGN="TOP"><P>CL </P></TD><TD VALIGN="TOP"><P>Application return code (application-specific value) </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Any VxD which hooks the service must pass the call down to the previously-installed hook, preserving all registers, (except Flags) even registers reserved for future use. </P>
<P>Do not assume that the high bytes of the EDX and ECX registers will be zero. </P>
<P></P>
<P></P></FONT></BODY></HTML>
