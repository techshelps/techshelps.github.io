<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ImeToAsciiEx</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>ImeToAsciiEx </H3><P><BR></P>
<PRE>UINT ImeToAsciiEx(UINT uVirKey, UINT uScanCode, 
    CONST LPBYTE lpbKeyState, LPDWORD lpdwTransBuf, UINT fuState, 
    HIMC hIMC)
</PRE>
<P>Translates messages using the IME conversion engine associated with the given input context. </P>
<UL><LI>     Returns the number of messages. If the number is greater than the length of the translated message buffer, the translated message buffer is not large enough. The system looks into the <B>hMsgBuf</B> to get the translation messages. </LI></UL><P></P>
<P><I>uVirKey</I> </P>
<P>Virtual key code to be translated. When the property bit IME_PROP_KBD_CHAR_FIRST is on, the upper byte of the virtual key is the aid character code. </P>
<P><I>uScanCode</I> </P>
<P>Hardware scan code of the key to be translated. </P>
<P><I>lpbKeyState</I> </P>
<P>Address of a 256-byte array that contains the current keyboard state. The IME should not modify the keyboard state. </P>
<P><I>lpdwTransBuf</I> </P>
<P>Address of a double word buffer to receive the translated result. The format is [Length of the pass in translated message buffer] [Message1] [wParam1] [lParam1] {[Message2] [wParam2] [lParam2]{...{...{...}}}}. </P>
<P><I>fuState</I> </P>
<P>Active menu flag. </P>
<P><I>hIMC</I> </P>
<P>Handle of the input context. </P>
<P></P>
<P></P></FONT></BODY></HTML>
