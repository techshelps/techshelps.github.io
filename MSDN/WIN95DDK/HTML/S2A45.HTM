<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mouse Messaging Services</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Mouse Messaging Services </H3><P>A mouse minidriver is a small VxD that supports mouse hardware that is not automatically supported by VMOUSE. A minidriver uses the <B>VMD_Set_Mouse_Data</B> service to pass information about the mouse hardware to VMOUSE, including the mouse-type identifier, the number of the interrupt request line (IRQ) the mouse is using, the number of buttons on the mouse, and the number of the port the mouse is using. A mouse minidriver's interrupt handler converts raw input from the mouse into event messages and uses the <B>VMD_Post_Pointer_Message</B> or <B>VMD_Post_Absolute_Pointer_Message</B> service to post the messages to VMOUSE. </P>
<P>By hooking the <B>VMD_Manipulate_Pointer_Message</B> service, a virtual device can install a hook procedure that manipulates mouse pointer data. VMOUSE passes raw mouse data to the hook procedure before it is posted to an application. The data includes the x and y delta values, and the status of the mouse buttons. The hook procedure can manipulate the mouse data as needed. A virtual device that needs to manipulate pointer data should hook the <B>VMD_Manipulate_Pointer_Message</B> service instead of the <B>VMD_Post_Pointer_Message</B> service. A virtual device uses the <B>Hook_Device_Service</B> VMM service to install the hook procedure. </P>
<P>VMOUSE does not automatically support the middle mouse button. Instead, a mouse minidriver can support the middle button by hooking the <B>VMD_Set_Middle_Button</B> service. To hook the service, a mouse minidriver calls the <B>Hook_Device_Service</B> VMM service, specifying the address of a programmer-defined callback function. VMOUSE calls the callback function whenever a mouse event occurs, allowing the callback function to set the status of the middle mouse button. </P>
<P>For more information about mouse minidrivers, see  </P>
<P>See also <B>VMD_Manipulate_Pointer_Message</B>, <B>VMD_Post_Pointer_Message</B>, <B>VMD_Set_Middle_Button</B>, <B>VMD_Set_Mouse_Data</B> </P></FONT></BODY></HTML>
