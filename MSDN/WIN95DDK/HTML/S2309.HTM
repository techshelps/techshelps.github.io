<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Guidelines for Designing and Writing a Driver</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Guidelines for Designing and Writing a Driver </H2><P>When designing and writing your device driver, follow these guidelines: </P>
<UL><LI>     Make every effort to make your device driver as small as possible; reserve system memory for applications. </LI><LI>     Use multiple, discardable code segments to help reduce the amount of driver code needed in memory at any given time. </LI><LI>     Use an automatic data segment only if necessary. </LI><LI>     Make resources discardable, and lock them in memory only when needed. </LI><LI>     Use the stack sparingly. Because device drivers use the stack of the application that initiated the call to the driver, there is no way for the driver to determine how much available space is on the stack. </LI><LI>     Check for NULL pointers to avoid a general protection fault from using an invalid selector. </LI><LI>     Check the segment limits when reading from or writing to allocated segments to avoid a general protection fault from attempting to access data beyond the end of a segment. </LI><LI>     Use the <B>__ahincr</B> constant when creating selectors for huge memory (allocated memory greater than 64 kilobytes). Other methods of selector arithmetic can create invalid selectors and cause general protection faults. </LI><LI>     Create code-segment aliases for any code to be executed from data segments. Attempting to call or jump to a data segment address generates a general protection fault. </LI></UL><P></P></FONT></BODY></HTML>
