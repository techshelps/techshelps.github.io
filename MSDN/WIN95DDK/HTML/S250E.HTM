<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CONFIGMG_Create_DevNode</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>CONFIGMG_Create_DevNode </H3><P><BR></P>
<PRE>CONFIGRET CONFIGMG_Create_DevNode(PDEVNODE pdnDevNode, DEVNODEID pDeviceID, DEVNODE dnParent, ULONG ulFlags)
</PRE>
<P>Adds a device node to the hardware tree. </P>
<UL><LI>     Returns CR_SUCCESS if the function is successful. Otherwise, the return value can be CR_ALREADY_SUCH_DEVNODE, CR_INVALID_DEVICE_ID, CR_INVALID_DEVNODE, CR_INVALID_FLAG, CR_INVALID_POINTER, CR_OUT_OF_MEMORY or CR_CREATE_BLOCKED. </LI></UL><P></P>
<P><I>pdnDevNode</I> </P>
<P>Address that receives a handle to the new device node. Can be NULL. </P>
<P><I>pDeviceID</I> </P>
<P>Device identifier. If this parameter is NULL, Configuration Manager does not attempt to find a device loader for the device. </P>
<P><I>dnParent</I> </P>
<P>Handle of the device node that is the parent of the device node being created. </P>
<P><I>ulFlags</I> </P>
<P>Must be zero. </P>
<P>Typically, an enumerator calls this function while it is enumerating new devices (during the CONFIG_ENUMERATE event). Configuration Manager allocates the device node and puts the device node in the sibling list of the child device node of dnParent. All fields are initialized to their default values. After this function returns successfully, the enumerator should fill in the fields it can, particularly the resource descriptors. When the enumerator returns from the event, Configuration Manager attempts to load a device driver for the new descendant of the enumerator's device node (if <I>pDeviceID</I> is not NULL). </P>
<P>This function returns CR_ALREADY_SUCH_DEVNODE if there is already a device node corresponding to <I>pDeviceID</I> in the tree. (This error is not returned when <I>pDeviceID</I> is NULL, because there can be multiple NULL device identifiers. These cannot be found using <B>CONFIGMG_Locate_DevNode,</B> however.) When this error is returned, the DN_HAS_MARK flag is set, and <I>pdnDevNode</I> is updated to the handle of the preexisting device node. </P>
<P></P>
<P></P></FONT></BODY></HTML>
