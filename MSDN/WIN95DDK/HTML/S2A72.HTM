<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cursor Callback Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Cursor Callback Function </H3><P>A cursor VxD must register itself with VMOUSE. This provides VMOUSE with information about the VxD, including the address of the VxD's cursor callback function. VMOUSE calls the VxD's callback function whenever an event occurs in the system that affects the appearance or position of the cursor. VMOUSE also calls the callback function to retrieve information about the cursor support provided by the VxD. Although the cursor callback function can have any name, the name <B>CursorProc</B> is used for convenience throughout this chapter. </P>
<P>Every cursor VxD must provide a set of 12 functions. VMOUSE directs the VxD to perform a function.by calling the <B>CursorProc</B> function, passing the identifier of the function in the EAX register. VMOUSE also passes the handle of the current VM in the EBX register. The contents of the other registers depend on the function, as does the return value. The remaining sections of this chapter describe the required functions. </P>
<P>A cursor VxD registers itself in response to the Device_Init message sent by the virtual machine manager (VMM) during VxD initialization. The VxD fills a <B>CURSORPROCINFO </B>structure and passes the address of the structure to VMOUSE by using the <B>VMD_Set_Cursor_Proc</B> service. VMOUSE stores the information provided in the <B>CURSORPROCINFO</B> structure. </P>
<P>See also <B>CursorProc</B>, <B>CURSORPROCINFO</B>, <B>VMD_Set_Cursor_Proc</B> </P></FONT></BODY></HTML>
