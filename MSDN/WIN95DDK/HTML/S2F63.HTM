<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calldowns</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Calldowns </H3><P>For each I/O request, the IOS determines which drivers to call and in what order to call them by using the calldown chain in the given <B>DCB</B>. Initially, the IOS sets the <B>IOP_calldown_ptr</B> member in the <B>IOP</B> structure to the address of the first entry in the calldown chain. Each driver in the chain is responsible for updating this member by setting it to the address of the next entry in the chain. A driver updates this member by adding the size, in bytes, of an <B>DCB_cd_entry</B> member to the value of <B>IOP_calldown_ptr</B>. After updating, the current driver calls the next driver in the chain by pushing the address of the <B>IOP</B> on the stack and calling the next driver's entry point: </P>
<P><BR></P>
<PRE>;increment to next calldown entry
add  [ebx].IOP_calldown_ptr, size DCB_cd_entry
mov  eax, [ebx].IOP_calldown_ptr  ; get call down address
push edi                          ; place *IOP on stack
call [eax].DCB_cd_io_address      ; call next layer
add  esp, 4                       ; restore stack
</PRE>
<P>See also <B>DCB</B>, <B>DCB_cd_entry</B>, <B>IOP</B> </P></FONT></BODY></HTML>
