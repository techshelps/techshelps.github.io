<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interrupt and Fault Handling</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Interrupt and Fault Handling </H2><P>The VMM manages all interrupt and protection fault processing for the virtual devices. A VMM fault handler receives control whenever an interrupt or protection fault occurs, such as when an application executes a software interrupt, attempts to access a protected I/O port, or attempts to access a protected or unavailable segment or page of memory. The VMM fault handler calls the callback procedures installed by the virtual devices, allowing the callbacks the opportunity to process the interrupt or fault. </P>
<P>A VMM fault handler usually processes an interrupt and protection fault as follows: </P>
<P>    1.     The application in the virtual machine executes a software interrupt, or performs an operation that generates a fault. </P>
<P>    2.    The CPU transitions to ring 0 and calls the corresponding VMM fault handler as specified by the IDT. Virtual devices must <B>never</B> replace the VMM fault handler descriptors in the IDT. </P>
<P>    3.    The VMM fault handler dispatches the interrupt to any installed callback procedure(s) using a <B>call</B> instruction. </P>
<P>    4.    A callback procedure can either process or ignore the interrupt or fault, but must always return to the VMM fault handler by using the <B>ret</B> instruction. In most cases, a virtual device uses the <B>Schedule_Global_Event</B> or <B>Schedule_VM_Event</B> service to schedule an event, and specify the event callback procedure that processes the current fault. </P>
<P>    5.    When control returns to the VMM fault handler, it checks for scheduled global or virtual machine events. If any events are outstanding, the VMM calls the corresponding event callback procedures. </P>
<P>    6.    If no callback procedure has processed the interrupt or fault, the VMM fault handler reflects the interrupt or fault back into the virtual machine allowing the V86-mode interrupt handler to process it. </P>
<P>    7.    The VMM executes an <B>iret</B> instruction to transition back to the virtual machine's privilege level, and return execution control to the application in the virtual machine. </P>
<P></P></FONT></BODY></HTML>
