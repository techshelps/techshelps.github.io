<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_SHELL_CallAtAppyTime</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>_SHELL_CallAtAppyTime </H3><P><BR></P>
<PRE>include shell.inc
VxDcall _SHELL_CallAtAppyTime, &lt;&lt;OFFSET32 pfnCallback&gt;, 
    dwRefData, dwFlags, dwTimeout&gt;
cmp eax, 0
je  error
mov [EventHandle], eax  ; application time event handle
</PRE>
<P>Installs a callback procedure for an application time event. Uses C calling conventions. </P>
<UL><LI>     Returns the handle of the application time event in the EAX register if successful. Otherwise, returns zero indicating insufficient memory. </LI></UL><P></P>
<P><I>pfnCallback</I> </P>
<P>Address of the callback procedure to be called when the system VM reaches the application time state. For more information about the procedure, see the comments below. </P>
<P><I>dwRefData</I> </P>
<P>Reference data to pass to the callback procedure. </P>
<P><I>dwFlags</I> </P>
<P>Event flag. Can be one of these values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>CAAFL_RING0 </P></TD><TD VALIGN="TOP"><P>Ring zero event. </P></TD></TR><TR><TD VALIGN="TOP"><P>CAAFL_TIMEOUT </P></TD><TD VALIGN="TOP"><P>Time out the event after the duration specified by <I>dwTimeout</I>. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>dwTimeout</I> </P>
<P>Time out duration. </P>
<P>This is an asynchronous service. </P>
<P>The system calls the callback procedure whenever the system VM is in a quiet state. The system calls the procedure using the C calling conventions as follows: </P>
<P><BR></P>
<PRE>cCall [pfnCallback], &lt;dwRefData, dwFlags&gt;
</PRE>
<P>The <I>dwRefData</I> parameter is the same value passed to the <B>_SHELL_CallAtAppyTime</B> service. No return value is required. The <I>dwFlags</I> parameter is a bitmask of flags describing the conditions under which the callback procedure is made. If the CAAFL_TIMEOUT bit is set, the timeout duration elapsed before application time could be reached, in which case <I>the system is not at application time</I>, and you cannot use application-time-only services. All other bits of <I>dwFlags</I> are reserved. </P>
<P>If application time is not currently available, the event is scheduled for a time when application time is available. If application time never becomes available (for example, if the application time event is scheduled while the system is shutting down), the event is never dispatched. </P>
<P></P>
<P></P></FONT></BODY></HTML>
