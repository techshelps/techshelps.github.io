<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Heap Allocation</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Heap Allocation </H3><P>You can use the system heap to allocate memory objects of any size, rather than allocating in units of pages. </P>
<P>To allocate a memory object on the heap, use the <B>_HeapAllocate</B> service. You can change the size of the memory object using the <B>_HeapReAllocate</B> service and free it using the <B>_HeapFree</B> service. To determine the size of a memory object, use the <B>_HeapGetSize</B> service. </P>
<P>There are three system heaps: the locked heap, the swappable heap, and the init heap. The init heap is discarded at the end of <B>Init_Complete</B>. The locked and swappable heaps remain available as long as the system is running. Memory allocated into the swappable heap is swappable; your VxD must be careful not to access it at a time when paging is not allowed. </P>
<P>The system provides no memory protection for memory objects on the heap. It also does not compact the heap. Therefore, virtual devices should avoid using the heap in such a way as to severely fragment it. </P>
<P>See also <B>_HeapAllocate</B>, <B>_HeapFree</B>, <B>_HeapGetSize</B>, <B>_HeapReAllocate</B> </P></FONT></BODY></HTML>
