<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Control_Dispatch</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Control_Dispatch </H3><P><BR></P>
<PRE>include vmm.inc

Control_Dispatch Message, Procedure
Control_Dispatch Message, Procedure, CallType, &lt;Param1, Param2, ...&gt;
</PRE>
<P>Dispatches the given control message to the specified procedure. </P>
<UL><LI>     No return value. </LI></UL><P></P>
<P><I>Message</I> </P>
<P>Identifies the control message. Can be one of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>Begin_PM_App </P></TD><TD VALIGN="TOP"><P>A protected-mode application is starting. </P></TD></TR><TR><TD VALIGN="TOP"><P>Close_VM_Notify </P></TD><TD VALIGN="TOP"><P>A virtual machine is closing. </P></TD></TR><TR><TD VALIGN="TOP"><P>Create_Thread </P></TD><TD VALIGN="TOP"><P>New thread being created. </P></TD></TR><TR><TD VALIGN="TOP"><P>Create_VM </P></TD><TD VALIGN="TOP"><P>A virtual machine is being created. </P></TD></TR><TR><TD VALIGN="TOP"><P>Critical_Reboot_Notify </P></TD><TD VALIGN="TOP"><P>System is restarting (interrupt disabled). </P></TD></TR><TR><TD VALIGN="TOP"><P>Debug_Query </P></TD><TD VALIGN="TOP"><P>Requests for virtual device's debugging interface. </P></TD></TR><TR><TD VALIGN="TOP"><P>Destroy_Thread </P></TD><TD VALIGN="TOP"><P>Thread being destroyed. </P></TD></TR><TR><TD VALIGN="TOP"><P>Destroy_VM </P></TD><TD VALIGN="TOP"><P>A virtual machine is being destroyed. </P></TD></TR><TR><TD VALIGN="TOP"><P>Device_Init </P></TD><TD VALIGN="TOP"><P>Virtual devices initializing (interrupts enabled). </P></TD></TR><TR><TD VALIGN="TOP"><P>Device_Reboot_Notify </P></TD><TD VALIGN="TOP"><P>System is restarting (interrupts enabled). </P></TD></TR><TR><TD VALIGN="TOP"><P>End_PM_App </P></TD><TD VALIGN="TOP"><P>A protected-mode application is ending. </P></TD></TR><TR><TD VALIGN="TOP"><P>Init_Complete </P></TD><TD VALIGN="TOP"><P>All virtual devices have initialized. </P></TD></TR><TR><TD VALIGN="TOP"><P>PNP_New_Device </P></TD><TD VALIGN="TOP"><P>New devnode (directed). </P></TD></TR><TR><TD VALIGN="TOP"><P>Power_Event </P></TD><TD VALIGN="TOP"><P>Power is being suspended or resumed. </P></TD></TR><TR><TD VALIGN="TOP"><P>Reboot_Processor </P></TD><TD VALIGN="TOP"><P>Virtual device must restart system if it can. </P></TD></TR><TR><TD VALIGN="TOP"><P>Set_Device_Focus </P></TD><TD VALIGN="TOP"><P>A virtual device is taking the focus. </P></TD></TR><TR><TD VALIGN="TOP"><P>Sys_Critical_Exit </P></TD><TD VALIGN="TOP"><P>System is terminating (interrupt disabled). </P></TD></TR><TR><TD VALIGN="TOP"><P>Sys_Critical_Init </P></TD><TD VALIGN="TOP"><P>Virtual devices initializing (interrupts disabled). </P></TD></TR><TR><TD VALIGN="TOP"><P>Sys_VM_Init </P></TD><TD VALIGN="TOP"><P>System VM is being created. </P></TD></TR><TR><TD VALIGN="TOP"><P>Sys_Dynamic_Device_Exit </P></TD><TD VALIGN="TOP"><P>Dynamic VxD being unloaded (directed). </P></TD></TR><TR><TD VALIGN="TOP"><P>Sys_Dynamic_Device_Init </P></TD><TD VALIGN="TOP"><P>Dynamic VxD being loaded (directed). </P></TD></TR><TR><TD VALIGN="TOP"><P>Sys_VM_Terminate </P></TD><TD VALIGN="TOP"><P>System VM is being destroyed. </P></TD></TR><TR><TD VALIGN="TOP"><P>System_Exit </P></TD><TD VALIGN="TOP"><P>System is terminating (interrupts enabled). </P></TD></TR><TR><TD VALIGN="TOP"><P>Terminate_Thread </P></TD><TD VALIGN="TOP"><P>Thread being terminated. </P></TD></TR><TR><TD VALIGN="TOP"><P>Thread_Init </P></TD><TD VALIGN="TOP"><P>Thread being initialized. </P></TD></TR><TR><TD VALIGN="TOP"><P>Thread_Not_Executeable </P></TD><TD VALIGN="TOP"><P>Thread has stopped executing. </P></TD></TR><TR><TD VALIGN="TOP"><P>VM_Critical_Init </P></TD><TD VALIGN="TOP"><P>Virtual machine being created (interrupts disabled). </P></TD></TR><TR><TD VALIGN="TOP"><P>VM_Init </P></TD><TD VALIGN="TOP"><P>Virtual machine being created (interrupts enabled). </P></TD></TR><TR><TD VALIGN="TOP"><P>VM_Not_Executable </P></TD><TD VALIGN="TOP"><P>Virtual machine has stopped executing. </P></TD></TR><TR><TD VALIGN="TOP"><P>VM_Resume </P></TD><TD VALIGN="TOP"><P>Virtual machine execution resumed. </P></TD></TR><TR><TD VALIGN="TOP"><P>VM_Suspend </P></TD><TD VALIGN="TOP"><P>Virtual machine execution suspended. </P></TD></TR><TR><TD VALIGN="TOP"><P>VM_Terminate </P></TD><TD VALIGN="TOP"><P>Virtual machine begin destroyed. </P></TD></TR><TR><TD VALIGN="TOP"><P>W32_DeviceIoControl </P></TD><TD VALIGN="TOP"><P>Win32 DeviceIoControl entry (directed). </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Another value defined in vmm.h is also acceptable. </P>
<P><I>Procedure</I> </P>
<P>Name of the procedure to which to dispatch the message. </P>
<P><I>CallType</I> </P>
<P>Optional parameter that describes the calling convention employed by the procedure. The default value indictates that the procedure is called directly without any special pre- or post-processing. Otherwise, the value may be <B>cCall</B>, <B>pCall</B>, or <B>sCall</B>, indicating that the procedure should be called with the C, Pascal, or StdCall calling convention, respectively. See below for additional remarks. </P>
<P><I>Param1, Param2, ...</I> </P>
<P>Optional parameters to be passed to the procedure. Typically, registers are pushed as parameters. See below for additional remarks. </P>
<P>This macro is typically used in conjunction with the <B>Begin_Control_Dispatch</B> and <B>End_Control_Dispatch</B> macros to build a dispatch table. The <B>Control_Dispatch</B> macro can be used without the <B>Begin_Control_Dispatch</B> macro, but becomes the programmer's responsibility to declare a procedure in locked code (VxD_LOCKED_CODE_SEG), and clear the carry flag for any messages not processed. </P>
<P>If you use the <I>CallType</I> variant of this macro, then this macro may not be combined with the <B>Begin_Control_Dispatch</B> and <B>End_Control_Dispatch</B> macros. </P>
<P>See also <B>Begin_Control_Dispatch</B>, <B>End_Control_Dispatch</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
