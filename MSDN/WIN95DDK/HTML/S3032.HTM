<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ILB_dprintf_rtn</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>ILB_dprintf_rtn </H3><P><BR></P>
<PRE>cCall [ilb.ILB_dprintf_rtn],&lt;&lt;OFFSET32 szFormat&gt;, val1, ...&gt;
</PRE>
<P>Displays information on the debug terminal, providing a subset of the formatting provded by the C-runtime <B>printf</B> function. The function processes the given string, converting format control sequences in the string to characters or numbers, using the corresponding values passed as parameters. </P>
<UL><LI>     No return value. </LI></UL><P></P>
<P><I>szFormat</I> </P>
<P>Address of a null-terminated string. The string can contain any printable characters and any combination of the following format control sequences: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>%b </P></TD><TD VALIGN="TOP"><P>Displays an 8-bit value as a hexadecimal integer. Must pass a doubleword value with the value to display in the low byte. </P></TD></TR><TR><TD VALIGN="TOP"><P>%c </P></TD><TD VALIGN="TOP"><P>Displays the character at the given address. Must pass a valid, 32-bit address. </P></TD></TR><TR><TD VALIGN="TOP"><P>%d </P></TD><TD VALIGN="TOP"><P>Displays the corresponding 32-bit value as a decimal integer. Must pass a doubleword value. </P></TD></TR><TR><TD VALIGN="TOP"><P>%e </P></TD><TD VALIGN="TOP"><P>Displays the corresponding 32-bit value as a hexadecimal integer. Must pass a doubleword value. </P></TD></TR><TR><TD VALIGN="TOP"><P>%i </P></TD><TD VALIGN="TOP"><P>Displays a 16-bit value as an unsigned decimal integer. Must pass a doubleword value with the value to display in the low word. </P></TD></TR><TR><TD VALIGN="TOP"><P>%j </P></TD><TD VALIGN="TOP"><P>Displays an 8-bit value as a unsigned decimal integer. Must pass a doubleword value with the value to display in the low byte. </P></TD></TR><TR><TD VALIGN="TOP"><P>%lx </P></TD><TD VALIGN="TOP"><P>Displays the 32-bit value at the given address as a hexadecimal integer. Must pass a valid, 32-bit address. </P></TD></TR><TR><TD VALIGN="TOP"><P>%p </P></TD><TD VALIGN="TOP"><P>Displays the given address in 16:16 (segment:offset) notation. Segment and offset values are displayed as hexadecimal integers. </P></TD></TR><TR><TD VALIGN="TOP"><P>%s </P></TD><TD VALIGN="TOP"><P>Displays the null-terminated string at the given address. Must pass a valid, 32-bit address. </P></TD></TR><TR><TD VALIGN="TOP"><P>%u </P></TD><TD VALIGN="TOP"><P>Displays the 16-bit value at the given address as an unsigned decimal integer. Must pass a valid, 32-bit address. </P></TD></TR><TR><TD VALIGN="TOP"><P>%w </P></TD><TD VALIGN="TOP"><P>Displays a 16-bit value as a hexadecimal integer. Must pass a doubleword value with the value to display in the low word. </P></TD></TR><TR><TD VALIGN="TOP"><P>%x </P></TD><TD VALIGN="TOP"><P>Displays the 16-bit value at the given address as a hexadecimal integer. Must pass a valid, 32-bit address. </P></TD></TR><TR><TD VALIGN="TOP"><P>%z </P></TD><TD VALIGN="TOP"><P>Displays a memory dump, consisting of a given number of bytes display as hexadecimal integers. Must pass a 16-bit value specifying the number of bytes to display and a valid, 32-bit address pointing to the bytes to display. </P></TD></TR><TR><TD VALIGN="TOP"><P>%% </P></TD><TD VALIGN="TOP"><P>Displays the percent character (%). </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>val1</I> </P>
<P>Value or address, depending on the corresponding format control sequence. Except for the %z format, there must be one 32-bit value passed for each format control sequence in the string. For %z, two 32-bit values must be passed. </P>
<P>See also <B>ILB</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
