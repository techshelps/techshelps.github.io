<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFSMgr_SetReqHook</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>IFSMgr_SetReqHook </H3><P><BR></P>
<PRE>IFSMgr_SetReqHook(
 unsigned int Request,
 void * Preamble
 )
</PRE>
<P>This service has been provided for FSDs to hook interrupt functions that the IFS manager normally does not hook or to override the default handlers that the IFS manager has for hooked interrupt functions. Currently, this interface is supported only on for int 21h calls. An FSD can call and pass in the address of a preamble routine for a given int 21h function. Whenever that int 21h call is issued, the FSD's preamble gets called. The FSD can either accept or reject the int 21h on its preamble. If it accepts it, the FSD is then called for that int 21h via the IFSMgr_NetFunction service, which is described later in this document. Note that for int 21h functions that are already hooked by the IFS manager which the FSD is trying to override, the FSD will not be called via the IFSMgr_NetFunction service if the request is accepted. </P>
<P><I>Request</I> </P>
<P>Supplies interrupt function to be hooked. High word contains the interrupt level to be hooked; low word contains the function number. Currently, the interrupt level can only be 21h and the function number is the value in register AH. </P>
<P><I>Preamble</I> </P>
<P>Supplies the address of the preamble function that is to be called when the hooked int 21h function is occurs. </P>
<UL><LI>     Returns the address of the previous preamble. The FSD must call this preamble if it rejects a request on its preamble. Returns 0 if an error is encountered on this function. </LI></UL><P></P>
<P>The interface to the preamble function called by the IFS manager on a hooked int 21h request is described below. Preamble functions must chain if they reject a request. </P>
<P><I>[EBX]</I> </P>
<P>Current VM handle. </P>
<P><I>[ECX]</I> </P>
<P>Function number (user AH). </P>
<P><I>[EBP]</I> </P>
<P>Pointer to client register structure. </P>
<P><I>[ESI]</I> </P>
<P>Provider id ( initialized to ANYPROID ) </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <B>Request hooked:</B> </P>
<P><I>Carry</I> flag set. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><I>[ESI]</I> </P></TD><TD VALIGN="TOP"><P>Provider id of FSD that is hooking the call. This is optional, the FSD can leave this field unchanged. If a specific provider id is returned, the call will be seen only by that FSD. Otherwise, all FSDs will be able to see the hooked call. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>Request not hooked:</B> </P>
<P>The FSD must jump to the address of the previous preamble returned on the call to IFSMgr_SetReqHook with the entry conditions preserved. </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Register Usage</B> </P>
<P>If request is hooked, EBX and EBP must be preserved and the other registers can be destroyed. If request is not hooked, all registers must be preserved. </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P></P>
<P></P></FONT></BODY></HTML>
