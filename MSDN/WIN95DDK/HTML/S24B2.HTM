<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LDRSRV_Copy_Extended_Memory</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>LDRSRV_Copy_Extended_Memory </H3><P><BR></P>
<PRE>VOID LDRSRV_Copy_Extended_Memory()
</PRE>
<P>Allocates a block of extended memory in the specified data group (init, locked, or pageable) to the size requested and initializes the block with the given data. </P>
<UL><LI>     CY flag is clear and EAX contains the linear address of the memory block if the service is successful. CY is set if the allocation failed and no memory block is allocated </LI></UL><P></P>
<P><B>AX</B> </P>
<P>0006h, the function number for this service. </P>
<P><B>CX</B> </P>
<P>Number of bytes to allocate. </P>
<P><B>DX</B> </P>
<P>Type of data being allocated. It can be one of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>LDRSRV_COPY_INIT </P></TD><TD VALIGN="TOP"><P>INIT data </P></TD></TR><TR><TD VALIGN="TOP"><P>LDRSRV_COPY_LOCKED </P></TD><TD VALIGN="TOP"><P>LOCKED data </P></TD></TR><TR><TD VALIGN="TOP"><P>LDRSRV_COPY_PAGEABLE </P></TD><TD VALIGN="TOP"><P>PAGEABLE data </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>DS:SI</B> </P>
<P>Address of data to be copied. </P>
<P>This service is provided by the real-mode VxD loader. It provides a convenient way for a VxD to pass more than a single DWORD of data to their protected-mode portions. The VxD can simply create a block of extended memory and pass its linear address through the VxD reference DWORD (that is, the value of EDX on exit from real-mode initialization). </P>
<P>Actual sizes of blocks are always rounded up to the nearest DWORD. Multiple blocks allocated by a single VxD are guaranteed to be contiguous in linear address space, but not necessarily in physical address space. </P>
<P>PAGEABLE data may actually be allocated as LOCKED data, at the loader's discretion. Initialization (INIT) data is always locked, and is discarded after all VxD initialization phases are completed. </P></FONT></BODY></HTML>
