<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DiBuildClassDrvListFromOldInf</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>DiBuildClassDrvListFromOldInf </H3><P><BR></P>
<PRE>RETERR DiBuildClassDrvListFromOldInf(LPDEVICE_INFO lpdi, LPCSTR lpszSection, OLDINFPROC lpfnOldInfProc, LPARAM lParam)
</PRE>
<P>Builds a class driver list from an old (Windows 3.1) style INF file. </P>
<UL><LI>     Returns OK. </LI></UL><P></P>
<P><I>lpdi</I> </P>
<P>Pointer to a device info struct for a device that is being installed. </P>
<P><I>lpszSection</I> </P>
<P>The install section in the old INF to be converted </P>
<P><I>lpfnOldInfProc</I> </P>
<P>Callback function to fill in content of INF file. </P>
<P><I>lParam</I> </P>
<P>Reference data passed to the callback proc. </P>
<P>The atDriverPath field of the lpdi must be set to a valid OEM INF file, which is type INF_TEXT. This function will generate an approprate Windows 95 INF header, and then call the supplied callback proc to convert the specified section into Win95 specific data. After the new INF is generated, this function will build a class driver list much like the DiBuildClassDrvList API does. </P>
<P></P>
<P></P></FONT></BODY></HTML>
