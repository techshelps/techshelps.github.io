<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_RenameFile</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_RenameFile </H3><P><BR></P>
<PRE>FS_RenameFile(
 PIOREQ pir
 )
</PRE>
<P>A file is renamed through <B>FS_RenameFile</B>. This routine handles the Win32 function: MoveFile(); and int 21h functions: 17h, and 56h. </P>
<P><I>ir_ppath</I> </P>
<P>Supplies a pointer to the canonicalized unicode source pathname to be renamed. The pathname may contain wildcards only if it is a 8.3 pathname. Long filename paths will not contain wildcards. </P>
<P><I>ir_rh</I> </P>
<P>Supplies handle to disk volume or network resource which contains the file. </P>
<P><I>ir_attr</I> </P>
<P>Supplies wildcard search attributes and advisory path parsing flags for the source path. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Search Attribute Values:</B> </P>
<P>Any combination of the following attributes may be specified, causing those files to be included with normal files in the search. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_HIDDEN</B> </P></TD><TD VALIGN="TOP"><P>Include hidden file in search. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_SYSTEM</B> </P></TD><TD VALIGN="TOP"><P>Include system file in search. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_DIRECTORY</B> </P></TD><TD VALIGN="TOP"><P>Include subdirectories in search. </P>
<P>The following attribute will only be specified by itself. It will not be combined with any of the other attributes. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_VOLUMELABEL</B> </P></TD><TD VALIGN="TOP"><P>Search for volume label only. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>Path Parsing Flags:</B> </P>
<P>The following path parsing flags are passed in. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_WILDCARDS</B> </P></TD><TD VALIGN="TOP"><P>Wildcard characters present in pathname. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_LONG_PATH</B> </P></TD><TD VALIGN="TOP"><P>Path has a longname component. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_KEEP_CASE</B> </P></TD><TD VALIGN="TOP"><P>Preserve the case of the filename passed in when storing on disk. This also implies that this call should use longname semantics for its processing. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_HAS_DOT</B> </P></TD><TD VALIGN="TOP"><P>Filename component has a dot in its name. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_IS_LFN</B> </P></TD><TD VALIGN="TOP"><P>Filename component is a longname. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_ppath2</I> </P>
<P>Supplies a pointer to the canonicalized unicode destination pathname to rename to. </P>
<P><I>ir_attr2</I> </P>
<P>Supplies wildcard search attributes and advisory path parsing flags for the destination path. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Search Attribute Values:</B> </P>
<P>Any combination of the following attributes may be specified, causing those files to be included with normal files in the search. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_HIDDEN</B> </P></TD><TD VALIGN="TOP"><P>Include hidden file in search. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_SYSTEM</B> </P></TD><TD VALIGN="TOP"><P>Include system file in search. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_DIRECTORY</B> </P></TD><TD VALIGN="TOP"><P>Include subdirectories in search. </P>
<P>The following attribute will only be specified by itself. It will not be combined with any of the other attributes. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_ATTRIBUTE_VOLUMELABEL</B> </P></TD><TD VALIGN="TOP"><P>Search for volume label only. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>Path Parsing Flags:</B> </P>
<P>The following path parsing flags are passed in. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_WILDCARDS</B> </P></TD><TD VALIGN="TOP"><P>Wildcard characters present in pathname. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_LONG_PATH</B> </P></TD><TD VALIGN="TOP"><P>Path has a longname component. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_KEEP_CASE</B> </P></TD><TD VALIGN="TOP"><P>Preserve the case of the filename passed in when storing on disk. This also implies that this call should use longname semantics for its processing. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_HAS_DOT</B> </P></TD><TD VALIGN="TOP"><P>Filename component has a dot in its name. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_IS_LFN</B> </P></TD><TD VALIGN="TOP"><P>Filename component is a longname. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_ptuninfo</I> </P>
<P>Supplies a pointer to a tunnelling structure. A NULL pointer is passed in this field if there is no tunnelling information. The tunnelling structure is described below. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Tunnelling Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>tuni_bfContents</I> </P></TD><TD VALIGN="TOP"><P>Specifies flags for the tunnelling information passed in. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>Tunnelling Info Flag Values:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>TUNI_CONTAINS_ALTNAME</B> </P></TD><TD VALIGN="TOP"><P>Alternate unicode name is available in structure. This is the name to be used for the destination of the rename. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>TUNI_CONTAINS_CREATIONT</B> </P></TD><TD VALIGN="TOP"><P>Creation time for file available. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>TUNI_CONTAINS_LASTACCESST</B> </P></TD><TD VALIGN="TOP"><P>Last access time for file available. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>TUNI_CONTAINS_LASTWRITET</B> </P></TD><TD VALIGN="TOP"><P>Last modification time for file available. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>tuni_pAltName</I> </P>
<P>Supplies the alternate name in unicode that should be used for this file. </P>
<P><I>tuni_ftCreationTime</I> </P>
<P>Supplies the creation time in the Win32 FileTime structure format specified below. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Win32 FileTime Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>dwLowDateTime</I> </P></TD><TD VALIGN="TOP"><P>Supplies the low double word of the time in Win32 format. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>dwHighDateTime</I> </P></TD><TD VALIGN="TOP"><P>Supplies the low double word of the time in Win32 format. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>tuni_ftLastAccessTime</I> </P></TD><TD VALIGN="TOP"><P>Supplies the last access time in the Win32 FileTime structure format described above. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>tuni_ftLastWriteTime</I> </P></TD><TD VALIGN="TOP"><P>Supplies the last modification time in the Win32 FileTime structure format described above. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_uFname</I> </P>
<P>Pointer to the case-preserved filename component of the destination path in unicode. </P>
<P><I>ir_user</I> </P>
<P>Supplies user id for this request. </P>
<P><I>ir_pid</I> </P>
<P>Supplies process id for this request. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <I>ir_error</I> </P></TD><TD VALIGN="TOP"><P>Returns status of the operation ( 0 if no error, errorcode otherwise ). </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>If an FSD does not support long filenames on a volume and it gets a LFN api call on that volume, it should fail the call. Note that FS_RenameFile can also rename entire directory trees. Obviously, the FSD cannot validate if all paths of the renamed directory can be accessed, some subdirectories may not be accessible any more if the path becomes longer than the maximum allowed path. The FSD should check for cyclic directory renames and fail them. A rename of a file to itself should not failed, the FSD should just return success and do nothing. Local FSDs also need to honour the tunnelling information if they do not implement tunnelling on their own. Tunnelling is not supported on network drives, so network FSDs do not need to support this. Tunnelling is described separately in another section of this document. </P>
<P></P>
<P></P></FONT></BODY></HTML>
