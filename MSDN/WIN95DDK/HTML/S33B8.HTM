<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Wait_Semaphore</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Wait_Semaphore </H3><P><BR></P>
<PRE>include vmm.inc

mov     eax, SemaphoreHandle
mov     ecx, Flags
VMMcall Wait_Semaphore
</PRE>
<P>Blocks the current virtual machine until the semaphore is signaled using the <B>Signal_Semaphore</B> service. Uses Flags </P>
<UL><LI>     No return value. </LI></UL><P></P>
<P><I>SemaphoreHandle</I> </P>
<P>Handle of the semaphore on which to wait. </P>
<P><I>Flags</I> </P>
<P>Action to take when interrupts occur while the virtual machine is blocked waiting for the semaphore. This parameter can be a combination of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Block_Enable_Ints </P></TD><TD VALIGN="TOP"><P>Service interrupts in the virtual machine even if the virtual machine does not currently have interrupts enabled. This forces interrupts to be enabled. This value is only relevant if either Block_Svc_Ints or Block_Svc_If_Ints_Locked is set. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Force_Svc_Ints </P></TD><TD VALIGN="TOP"><P>Service events and simulated interrupts in the thread even when the critical section is not available. Be careful when using this flag. If it is used when any VMM or real mode MS-DOS resources are held, it will cause deadlocks to occur. If in doubt, do not use this flag. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Poll </P></TD><TD VALIGN="TOP"><P>Do not switch away from the blocked virtual machine unless another virtual machine has higher priority. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Svc_If_Ints_Locked </P></TD><TD VALIGN="TOP"><P>Service events and simulated interrupts in the virtual machine even if the thread blocks for the semaphore and the VMStat_V86IntsLocked flag is set. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Svc_Ints </P></TD><TD VALIGN="TOP"><P>Service events and simulated interrupts in the virtual machine even if the virtual machine is blocked. Events are only serviced when the critical section is available or owned by the blocked thread unless the Block_Force_Svc_Ints flag is also set. Then when events are serviced, the critical section is taken and held while they are serviced. This is necessary to prevent a deadlock from occurring when an event tries to enter the critical section and blocks while holding system-wide resources. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Thread_Idle </P></TD><TD VALIGN="TOP"><P>Consider the thread idle when it blocks on the semaphore. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>This service blocks if the semaphore's token count is zero or less. Otherwise, it decrements the token count and returns immediately. If the token count is not zero (meaning the <B>Signal_Semaphore</B> service has been called), <B>Wait_Semaphore</B> decrements the token count and returns immediately. </P>
<P>See also <B>Create_Semaphore</B>, <B>Signal_Semaphore</B> </P></FONT></BODY></HTML>
