<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_HeapFree</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>_HeapFree </H3><P><BR></P>
<PRE>// C syntax 
#include &lt;vmm.h&gt;

ULONG EXTERNAL _HeapFree(ULONG hAddress, ULONG flags);

; Assembler syntax 
include vmm.inc

VMMcall _HeapFree, &lt;hAddress, flags&gt;

or      eax, eax            ; nonzero if freed, zero if error
jz      not_freed
</PRE>
<P>Frees an existing memory block in the system heap. Uses EAX, ECX, EDX, and Flags. </P>
<UL><LI>     Returns a nonzero value in the EAX register if successful, zero otherwise. </LI></UL><P></P>
<P><I>hAddress</I> </P>
<P>Address of the memory block to free. This address must have been previously returned by the <B>_HeapAllocate</B> or <B>_HeapReAllocate</B> service. </P>
<P><I>flags</I> </P>
<P>Operation flags. Must be 0. </P>
<P>Although the system can usually recover from an attempt to free an invalid address, you should not rely on this. </P>
<P>See also <B>_HeapAllocate</B>, <B>_HeapReAllocate</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
