<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VPICD_Call_When_Hw_Int</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>VPICD_Call_When_Hw_Int </H3><P><BR></P>
<PRE>include vpicd.inc

pushfd
cli
mov     esi, OFFSET32 Callback
VxDcall VPICD_Call_When_Hw_Int
popfd
mov     [Next_Callback], esi
</PRE>
<P>Installs a callback procedure for hardware interrupts. The system calls the callback procedure whenever a hardware interrupt occurs. The caller <I>must</I> disable interrupts before calling this service. Uses ESI and Flags. </P>
<UL><LI>     Returns, in ESI, the address of the next procedure in the callback chain. </LI></UL><P></P>
<P><I>Callback</I> </P>
<P>Address of the callback procedure. When the system calls the procedure, EBX contains the handle of the current virtual machine. </P>
<P>Although any virtual device can use this service, the service is intended for use by the virtual DMA device to detect completion of DMA transfers. On systems with hardware devices that interrupt frequently, use of this service should be avoided. Installing a callback procedure to process every hardware interrupt can have a major impact on performance. </P>
<P>The callback procedure is responsible for chaining to the next handler in the interrupt chain. It also must preserve the EBX register for the next handler. </P>
<P></P>
<P></P></FONT></BODY></HTML>
