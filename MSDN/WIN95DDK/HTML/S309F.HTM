<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_CommitFile</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_CommitFile </H3><P><BR></P>
<PRE>FS_CommitFile(
 PIOREQ pir
 )
</PRE>
<P>The cached buffers for a specific file are committed to disk through <B>FS_CommitFile</B>. This routine handles the Win32 function: FlushFileBuffers(); and Int21 function: 68h. </P>
<P>All of the cached or buffered data for a specific file must be written out to disk when this function is called. </P>
<P><I>ir_rh</I> </P>
<P>Supplies handle to disk volume or network resource which contains the file. </P>
<P><I>ir_fh</I> </P>
<P>upplies FSD file handle. </P>
<P><I>ir_sfn</I> </P>
<P>Supplies system file number. </P>
<P><I>ir_options</I> </P>
<P>Supplies processing options. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Proccessing Option Values:</B> </P>
<P>The following options may be specified: </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_NO_LAST_ACCESS_DATE</B> </P></TD><TD VALIGN="TOP"><P>Do not update last access date on the close operation even if it is currently enabled for the volume. This flag is a special flag that is passed in when a volume is locked down not allowing writes, so that there are no write operations done to the disk in all cases. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_COMMIT_ASYNC</B> </P></TD><TD VALIGN="TOP"><P>Commit the data for the file to the disk asynchronously. If this option is not passed in, the commit must flush the dirty data for the open file synchronously to the disk. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_user</I> </P>
<P>Supplies user id for this request. </P>
<P><I>ir_pid</I> </P>
<P>Supplies process id for this request. </P>
<UL><LI>     Returns status of the operation ( 0 if no error, errorcode otherwise ). </LI></UL><P></P>
<P>The FILE_COMMIT_ASYNC flag is provided as an optimization. By default, commits are synchronous and do not return to the user without flushing the data to the disk. There are certain kinds of applications that make a high number of commit calls and committing the data asynchronously substantially improves the performance of such applications. The IFS manager turns this flag on based on a system registry setting. FSDs should not attempt to interpret the system registry settings independent of the IFS manager. There are certain situations such as the presence of volume locks, when the IFS manager forces all commit operations to be synchronous. </P>
<P></P>
<P></P></FONT></BODY></HTML>
