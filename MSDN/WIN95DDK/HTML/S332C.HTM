<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_RegEnumValue</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>_RegEnumValue </H3><P><BR></P>
<PRE>include vmm.h

LONG _RegEnumValue(HKEY hkey, DWORD iValue, LPTSTR lpszValue, 
    LPDWORD lpcchValue, LPDWORD lpdwReserved, LPDWORD lpdwType, 
    LPBYTE lpbData, LPDWORD lpcbData)
</PRE>
<P>Enumerates values for the given open registry key; the service copies one indexed value name and data block for the key each time it is called. See the documentation for the Win32 function of the same name for additional information. </P>
<UL><LI>     Returns ERROR_SUCCESS if the function succeeds. Otherwise, an error code is returned, possibly one of the following: </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>ERROR_NO_MORE_ITEMS </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>ERROR_KEY_DELETED </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>ERROR_MORE_DATA </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>ERROR_BADKEY </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>ERROR_REGISTRY_IO_FAILED </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>ERROR_REGISTRY_CORRUPT </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>ERROR_BADDB </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P><I>hkey</I> </P>
<P>Handle of an open key or one of the predefined keys: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>HKEY_CLASSES_ROOT </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_CURRENT_USER </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_LOCAL_MACHINE </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_USERS </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_CURRENT_CONFIG </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>HKEY_DYN_DATA </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>iValue</I> </P>
<P>Index of the value to retrieve; should be zero for first call to this service and then incremented for each subsequent call. Because values are not ordered, any new value will have an arbitrary index. </P>
<P><I>lpszValue</I> </P>
<P>Address of buffer that receives name of the value, including the terminating null character. </P>
<P><I>lpcchValue</I> </P>
<P>Address of variable that specifies the length of the buffer in bytes, including the terminating null character. </P>
<P><I>lpdwReserved</I> </P>
<P>Reserved; must be NULL. </P>
<P><I>lpdwType</I> </P>
<P>Address of variable that receives the type code for the value entry. It can be one of these standard values or other value (which is treated like REG_BINARY): </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>REG_BINARY </P></TD><TD VALIGN="TOP"><P>Binary data in any form. </P></TD></TR><TR><TD VALIGN="TOP"><P>REG_SZ </P></TD><TD VALIGN="TOP"><P>A null-terminated UNICODE or ANSI string. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>This parameter can be NULL if the type code is not required. </P>
<P><I>lpbData </I></P>
<P>Address of variable that receives the data for the value entry. This parameter can be NULL if the data is not required. </P>
<P><I>lpcbData </I></P>
<P>Address of variable that specifies the size, in bytes, of the buffer pointed to by lpbData. When the service returns, the variable contains the number of bytes stored in the buffer. </P>
<P>This parameter can be NULL only if <I>lpbData</I> is NULL. </P>
<P>Of the predefined key values, only HKEY_LOCAL_MACHINE and HKEY_DYN_DATA are available to VxDs during initialization time. The entire registry space can only be accessed after VxD initialization is complete. </P>
<P>The caller should reinitialize the variable containing the buffer size on each subsequent call to this service. </P>
<P></P>
<P></P></FONT></BODY></HTML>
