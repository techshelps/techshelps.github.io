<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CONFIGMG_Add_Empty_Log_Conf</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>CONFIGMG_Add_Empty_Log_Conf </H3><P><BR></P>
<PRE>CONFIGRET CONFIGMG_Add_Empty_Log_Conf(PLOG_CONF plcLogConf, DEVNODE dnDevNode, PRIORITY Priority, ULONG ulFlags)
</PRE>
<P>Creates an empty logical configuration. This configuration has no resource descriptor. </P>
<UL><LI>     Returns CR_SUCCESS if the function is successful. Otherwise, the return value can be CR_INVALID_DEVNODE, CR_INVALID_FLAG, CR_INVALID_PRIORITY, CR_INVALID_POINTER or CR_OUT_OF_MEMORY. </LI></UL><P></P>
<P><I>plcLogConf</I> </P>
<P>Address that receives the handle of the logical configuration. </P>
<P><I>dnDevNode</I> </P>
<P>Address of a device node. This address is typically retrieved by a call to <B>CONFIGMG_Locate_DevNode</B> or <B>CONFIGMG_Create_DevNode</B>. </P>
<P><I>Priority</I> </P>
<P>Priority of the logical configuration. This parameter can be one of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>LCPRI_FORCECONFIG </P></TD><TD VALIGN="TOP"><P>Coming from a forced config. </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_BOOTCONFIG </P></TD><TD VALIGN="TOP"><P>Coming from a boot config. </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_HARDWIRED </P></TD><TD VALIGN="TOP"><P>Like VPICD's IO range. </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_DESIRED </P></TD><TD VALIGN="TOP"><P>Preferable set (better performance). </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_NORMAL </P></TD><TD VALIGN="TOP"><P>Workable (acceptable performance). </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_SUBOPTIMAL </P></TD><TD VALIGN="TOP"><P>Not desired but will work (like PIO). </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_RESTART </P></TD><TD VALIGN="TOP"><P>Need to restart Windows. </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_REBOOT </P></TD><TD VALIGN="TOP"><P>Need to reboot Windows. </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_POWEROFF </P></TD><TD VALIGN="TOP"><P>Need to shutdown Windows. </P></TD></TR><TR><TD VALIGN="TOP"><P>LCPRI_HARDRECONFIG </P></TD><TD VALIGN="TOP"><P>Need to change a jumper. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ulFlags</I> </P>
<P>Either BASIC_LOG_CONF or FILTERED_LOG_CONF, combined with either PRIORITY_EQUAL_FIRST or PRIORITY_EQUAL_LAST. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>BASIC_LOG_CONF </P></TD><TD VALIGN="TOP"><P>Specifies the requirements list. </P></TD></TR><TR><TD VALIGN="TOP"><P>FILTERED_LOG_CONF </P></TD><TD VALIGN="TOP"><P>Specifies the filtered requirements list. </P></TD></TR><TR><TD VALIGN="TOP"><P>PRIORITY_EQUAL_FIRST </P></TD><TD VALIGN="TOP"><P>Same priority, new one is first. </P></TD></TR><TR><TD VALIGN="TOP"><P>PRIORITY_EQUAL_LAST </P></TD><TD VALIGN="TOP"><P>Same priority, new one is last. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Note: Calling <B>CONFIGMG_Add_Empty_Log_Conf</B> or <B>CONFIGMG_Free_Log_Conf</B> from within a <B>CONFIGMG_Get_First_Log_Conf</B>/<B>CONFIGMG_Get_Next_Log_Conf</B> loop may have unwelcome side effects. Drivers should end the loop before adding or freeing a logical configuration and start it again when the operation is finished. </P>
<P>See also <B>CONFIGMG_Create_DevNode</B>, <B>CONFIGMG_Free_Log_Conf</B>, <B>CONFIGMG_Get_First_Log_Conf</B>, <B>CONFIGMG_Get_Next_Log_Conf</B>, <B>CONFIGMG_Locate_DevNode</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
