<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Windows 95 Password Providers</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>About Windows 95 Password Providers </H2><P>Microsoft&reg; Windows&trade; 95 introduces the idea of <I>password providers</I>. A password provider is a DLL that manages the changing of one or more passwords for a resource or a function. </P>
<P>The advantages of writing a password provider include: </P>
<UL><LI>     Centralized user interface. Users can change any of their passwords in one location (the Passwords Control Panel). Applications can call a central password-change dialog box. </LI><LI>     Password synchronization. When users change the Windows password, they can elect to have any or all of their other passwords changed at the same time. This relieves users from having to remember more than one password, yet it makes it easy to change passwords frequently. </LI></UL><P></P>
<P>A password is considered to be stored either locally or remotely. An example of a locally stored password is the Windows screen saver password; an example of remotely stored password is the Windows NT domain password. A remotely stored password is considered secure, while a locally stored password is not. Even an encrypted password is not very secure if it's stored locally because most common forms of encryption can be easily broken. Password providers need to identify their passwords as being stored locally or remotely through the <B>PPGetPasswordStatus</B> SPI. </P>
<P>A password is considered to be synchronized or not synchronized with the Windows password (if there is a Windows password). This is based on the user's selection in the Passwords Control Panel and the state can be determined by calling <B>PwdGetPasswordStatus</B>. </P>
<P>When the user changes a password through the Passwords Control Panel or common dialog box, the password provider is typically notified through the <B>PPChangePassword</B> SPI. The password provider is deliberately not notified in the following case, however: if the password is stored locally, and the password is synchronized with the Windows password. When verifying a typed password, the component that does password validation for a local password needs to call <B>PwdGetPasswordStatus</B> to determine whether the password is synchronized with the Windows password. If it is, the component should call <B>WNetVerifyPassword</B> with the typed password, which will determine if the user typed the Windows password. If the password is not synchronized with the Windows password, the component should compare the typed password with the password it stored locally when last notified by <B>PPChangePassword</B>. </P></FONT></BODY></HTML>
