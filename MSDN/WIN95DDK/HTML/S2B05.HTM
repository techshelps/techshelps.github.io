<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing a MIDI Output Driver</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Writing a MIDI Output Driver </H2><P>Internal MIDI synthesizer devices and MIDI output ports are both MIDI output devices. They use the same entry-point function and receive the same messages. However, instead of sending MIDI data to an output port, an internal synthesizer device converts the MIDI data into music or sound. </P>
<P>To write a MIDI output driver, first create the initialization part of the driver-the part that includes the <B>LibEntry</B>, <B>WEP</B>, and <B>DriverProc</B> entry-point functions. Next, create the <B>modMessage</B> entry-point function and the rest of the support code required to implement the driver. Be sure to process all of the required messages for MIDI output device drivers. For each message you process, use the information provided by the reference at the end of this chapter to ensure you did everything required to correctly process the message. </P>
<P></P>
<P><B>Note </B></P>
<P>For information on the content of MIDI data, see the MIDI specification published by the International MIDI Association. </P>
<P></P></FONT></BODY></HTML>
