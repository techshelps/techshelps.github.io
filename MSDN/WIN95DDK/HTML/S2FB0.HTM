<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scanning the SCSI Bus for Devices</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Scanning the SCSI Bus for Devices </H2><P>scanscsi.exe is a very simple ASPI for Win16 and ASPI for Win32 application which scans the SCSI bus and displays the device name of each target it finds on the SCSI bus. When the program first comes up, you are prompted to select either ASPI posting or polling to detect completion of a SCSI request. The Scan menu enables you to configure which SCSI targets should be scanned and which should not: </P>
<P>The following scanscsi.c sample code also shows you how to free up the processor while SCSI operations are running in the background. This is very important, since Windows is currently a non-preemptive multitasking operating system. scanscsi.exe does minimal error checking and has no time-out code. Your application should be more robust. </P></FONT></BODY></HTML>
