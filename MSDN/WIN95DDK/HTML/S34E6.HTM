<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>V86MMGR_Set_EMS_XMS_Limits</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>V86MMGR_Set_EMS_XMS_Limits </H3><P><BR></P>
<PRE>include v86mmgr.inc

mov     ebx, VMHandle
mov     eax, MinEMS
mov     edx, MaxEMS
mov     esi, MinXMS
mov     edi, MaxXMS
mov     ecx, Flags
VxDcall V86MMGR_Set_EMS_XMS_Limits
jc      error_handler
</PRE>
<P>Sets the EMS and XMS memory limits for a VM. A VxD should only call this service when processing the <B>Create_VM</B> control message. Uses Flags. </P>
<P>This service must be made during the <B>Create_VM</B> message for it to work properly. This service should not be called on the system virtual machine. Uses Flags. </P>
<UL><LI>     Returns with the carry flag clear if successful, or set otherwise. </LI></UL><P></P>
<P><I>VMHandle</I> </P>
<P>Handle of the VM to set limits for. Cannot be the system VM. </P>
<P><I>MinEMS</I> and <I>MaxEMS</I> </P>
<P>Minimum and maximum EMS limits for the VM, in kilobytes. Specify zero for both values to disable EMS memory; specify -1 to leave the current EMS limits unchanged. </P>
<P><I>MinXMS</I> and <I>MaxXMS</I> </P>
<P>Minimum and maximum XMS limits for the VM, in kilobytes. The XMS limits do not include the high memory area (HMA). Specify zero for both values to disable XMS memory; specify -1 to leave the current XMS limits unchanged. </P>
<P><I>Flags</I> </P>
<P>Flags. Can be zero or more of these values. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>EMS_XMS_Limit_DisableHMA (bit number EMS_XMS_Limit_DisableHMABit) </P></TD><TD VALIGN="TOP"><P>Disables access to the the HMA. </P></TD></TR><TR><TD VALIGN="TOP"><P>EMS_XMS_Limit_EnableHMA (bit number EMS_XMS_Limit_EnableHMABit) </P></TD><TD VALIGN="TOP"><P>Enables access to the HMA. </P></TD></TR><TR><TD VALIGN="TOP"><P>EMS_XMS_Limit_XMS_Is_Locked (bit number EMS_XMS_Limit_XMS_Is_LockedBit) </P></TD><TD VALIGN="TOP"><P>Lock XMS memory </P></TD></TR><TR><TD VALIGN="TOP"><P>EMS_XMS_Limit_EMS_Is_Locked (bit number EMS_XMS_Limit_EMS_Is_LockedBit) </P></TD><TD VALIGN="TOP"><P>Lock EMS memory. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>If neither EMS_XMS_Limit_DisableHMA nor EMS_XMS_Limit_EnableHMA is specified, the HMA state (enabled or disabled) is not changed. </P>
<P>The service fails if there is insufficient memory for the minimum allocation request. In this case, the service uses the <B>GetSetDetailedVMError</B> service to set error values. Some of the limits may have been set; use the <B>V86MMGR_Get_EMS_XMS_Limits</B> service to determine the new settings. </P></FONT></BODY></HTML>
