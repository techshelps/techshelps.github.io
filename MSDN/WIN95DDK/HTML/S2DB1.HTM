<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NPGetResourceInformation</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>NPGetResourceInformation </H3><P><BR></P>
<PRE>DWORD NPGetResourceInformation(
  LPNETRESOURCE lpNetResource,
  LPVOID lpBuffer,
  LPDWORD cbBuffer,
  LPTSTR *lplpSystem
  );
</PRE>
<P><I>lpNetResource</I> </P>
<P>This specifies the network resource for which the information is required. The <I>lpRemoteName</I> field of <B>NETRESOURCE</B> specifies the remote name of the network resource whose information is required. If the calling program knows the values for the <I>lpProvider</I> and <I>dwType</I> fields, then it should fill them in, otherwise, it should set them to NULL. All other fields in the <B>NETRESOURCE</B> are ignored and are not initialized. </P>
<P><I>lpBuffer</I> </P>
<P>A pointer to the buffer to receive the result, which is returned as a single <B>NETRESOURCE</B> entry representing the parent resource. The <I>lpRemoteName</I>, <I>lpProvider</I>, <I>dwType</I>, and <I>dwUsage</I> fields are returned, all other fields being set to NULL. The remote name returned should be in the same syntax as that returned from an enumeration, so that the caller can do a case-sensitive string compare to determine whether an enumerated resource is this resource. If the provider owns a parent of the network resource, (in other words is known to be the correct network to respond to this request), then <I>lpProvider</I> should be filled in with a non-null entry. If it is known that a network owns a parent of the resource, but that the resource itself is not valid, then <I>lpProvider</I> is returned as a non-null value together with a return status of WN_BAD_VALUE. <I>dwScope</I> is returned as RESOURCE_CONTEXT if the network resource is part of the user's network context. Otherwise it is returned as zero. </P>
<P><I>cbBuffer</I> </P>
<P>This specifies the size, in bytes, of the buffer passed to the function call. If the result is WN_MORE_DATA, this will contain the buffer size required (in bytes) to hold the <B>NETRESOURCE</B> information. </P>
<P><I>lplpSystem</I> </P>
<P>Returned pointer to a string in the buffer pointed to by <I>lpBuffer</I> that specifies the part of the resource that is accessed through system resource type specific APIs rather than Wnet APIs. For example, if the input remote resource name was \\<I>server</I>\<I>share</I>\<I>dir</I>, then <I>lpRemoteName</I> is returned pointing to \\<I>server</I>\<I>share</I> and <I>lplpSystem</I> points to \<I>dir</I>, both strings being stored in the buffer pointed to by <I>lpBuffer</I>. </P>
<UL><LI>     WN_SUCCESS if the call is successful. 
<P>WN_MORE_DATA if input buffer is too small. </P></LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>WN_BAD_VALUE </P></TD><TD VALIGN="TOP"><P>Invalid <I>dwScope</I> or dwUsage or <I>dwType</I>, or bad combination of parameters is specified (for example, <I>lpRemoteName</I> does not correspond to <I>dwType</I>). </P></TD></TR><TR><TD VALIGN="TOP"><P>WN_NOT_AUTHENTICATED </P></TD><TD VALIGN="TOP"><P>The caller does not have the necessary permissions to obtain the name of the parent. </P></TD></TR><TR><TD VALIGN="TOP"><P>WN_ACCESS_DENIED </P></TD><TD VALIGN="TOP"><P>The user is authenticated to the network, but does not have sufficient permissions (access rights). </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P></P>
<P></P></FONT></BODY></HTML>
