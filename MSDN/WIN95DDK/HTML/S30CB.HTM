<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFSMgr_RegisterCFSD</title>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>

<BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">

<H3>IFSMgr_RegisterCFSD </h3>

<P><br>
</p>

<pre>IFSMgr_RegisterCFSD(
 pIFSFunc pfunc,
 unsigned long FSD_IFS_Version,
 string_t * ppDeviceNames
 )
</pre>

<P>An FSD that emulates a character device registers
with the IFS manager by calling this service. If the version
number passed in matches, the FSD will be registered for the list
of character devices it requests for. Whenever a filesystem call
is made to the character device name, the appropriate FSD will be
called on its function entrypoints. </p>

<P><i>pfunc</i> </p>

<P>Supplies a pointer to the FSD mount entry point.
(FS_MountVolume) </p>

<P><i>FSD_IFS_Version</i> </p>

<P>Supplies version of the IFS manager the FSD can
support. </p>

<P><i>ppDeviceNames</i> </p>

<P>Supplies a pointer to a set of pointers to unicode
device name strings that need to be registered as character
devices with the IFS manager. The list of pointers to device name
strings is terminated by a NULL. There has to be at least one
device name pointer. Each device name string is in unicode and
has the format of a <b>PathElement</b> structure that has already
been described in section 8.3.1. </p>

<ul>
    <li>Returns the provider id ( -1 if error ) which can be used
        by FSDs to identify certain special requests hooked by
        them. </li>
</ul>
</FONT></BODY>
</html>
