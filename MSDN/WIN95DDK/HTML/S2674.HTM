<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BITMAPINFO</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>BITMAPINFO </H3><P><BR></P>
<PRE>typedef struct tagBITMAPINFO {
    BITMAPINFOHEADER  bmiHeader;
    RGBQUAD           bmiColors[1];
} BITMAPINFO;
</PRE>
<P>Defines the dimensions and color information for a Windows 3.<I>x</I> DIB. </P>
<P><B>bmiHeader</B> </P>
<P>A <B>BITMAPINFOHEADER</B> structure that contains information about the dimensions and color format of a DIB. </P>
<P><B>bmiColors</B> </P>
<P>An array of <B>RGBQUAD</B> structures that define the colors in the bitmap. </P>
<P>A Windows 3.<I>x</I> DIB consists of two distinct parts: a <B>BITMAPINFO</B> data structure that describes the dimensions and colors of the bitmap, and an array of bytes that define the pixels of the bitmap. The bits in the array are packed together, but each scan line must be padded with zeros to end on a 32-bit boundary. Segment boundaries, however, can appear anywhere in the bitmap. The origin of the bitmap is the lower-left corner. </P>
<P>The <B>biBitCount</B> member of the <B>BITMAPINFOHEADER</B> structure determines the number of bits which define each pixel and the maximum number of colors in the bitmap. This member may be set to one of these values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>1 </P></TD><TD VALIGN="TOP"><P>Bitmap is monochrome, and the <B>bmiColors</B> member must contain two entries. Each bit in the bitmap array represents a pixel. If the bit is clear, the pixel is displayed with the color of the first entry in the <B>bmiColors</B> member; if the bit is set, the pixel has the color of the second entry in the table. </P></TD></TR><TR><TD VALIGN="TOP"><P>4 </P></TD><TD VALIGN="TOP"><P>Bitmap has a maximum of 16 colors, and the <B>bmiColors</B> member contains up to 16 entries. Each pixel in the bitmap is represented by a 4-bit index into the color table. </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>For example, if the first byte in the bitmap is 0x1F, then the byte represents two pixels. The first pixel contains the color in the second table entry, and the second pixel contains the color in the sixteenth table entry. </P></TD></TR><TR><TD VALIGN="TOP"><P>8 </P></TD><TD VALIGN="TOP"><P>Bitmap has a maximum of 256 colors, and the <B>bmiColors</B> member contains up to 256 entries. In this case, each byte in the array represents a single pixel. </P></TD></TR><TR><TD VALIGN="TOP"><P>24 </P></TD><TD VALIGN="TOP"><P>Bitmap has a maximum of 2**24 colors. The <B>bmiColors</B> member is NULL, and each three bytes in the bitmap array represents the relative intensities of blue, green, and red, respectively, of a pixel. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Alternatively, for functions that use DIBs, <B>bmiColors</B> can be an array of 16-bit unsigned integers that specify an index into the currently realized, logical palette instead of explicit RGB values. In this case, an application using the bitmap must call DIB functions with the <I>wColorUse</I> parameter set to DIB_PAL_COLORS. </P>
<P>See also <B>BITMAPINFOHEADER</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
