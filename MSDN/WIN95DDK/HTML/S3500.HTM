<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Xlat_API_Return_Ptr</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Xlat_API_Return_Ptr </H3><P><BR></P>
<PRE>Xlat_API_Return_Ptr  Segment, Offset
</PRE>
<P>Gets the protected-mode address pointing to data retrieved by a function. This macro is used for functions that return addresses. </P>
<UL><LI>     No return value. </LI></UL><P></P>
<P><I>Segment</I> </P>
<P>Register to receive the selector for the returned address. </P>
<P><I>Offset</I> </P>
<P>Register to receive the offset for the returned address. </P>
<P>For 16-bit protected-mode applications, this macro creates an LDT selector if an appropriate selector does not already exist. For 32-bit protected-mode applications, the macro always returns the same selector as the <B>V86MMGR_VM_Flat_Selector</B> service and adjusts the offset to point to the data. The <B>V86MMGR_Xlat_API</B> service fails if it can not create an appropriate LDT selector. </P>
<P>Although this macro is placed before the <B>Xlat_API_Exec_Int</B> macro in a translation script, the returned address is created after the interrupt has been executed. </P>
<P>The following example translates the return value of Interrupt 15h Function 0C0h. On PS/2 computers, this function returns a pointer to hardware information in the ES:BX register pair. </P>
<P><BR></P>
<PRE>Get_Machine_Info:
    Xlat_API_Return_Ptr es, bx
    Xlat_API_Exec_Int   15h
</PRE>
<P></P>
<P></P></FONT></BODY></HTML>
