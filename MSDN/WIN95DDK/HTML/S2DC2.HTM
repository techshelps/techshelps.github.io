<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NPSNotifyRegister</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>NPSNotifyRegister </H3><P><BR></P>
<PRE>DWORD NPSNotifyRegister(
      enum NOTIFYTYPE NotifyType,
      NOTIFYCALLBACK NotifyCallBack
  );
</PRE>
<P><I>NotifyType</I> </P>
<P>The type of notification. This takes the values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>NotifyAddConnection </P></TD><TD VALIGN="TOP"><P>For adding connections. </P></TD></TR><TR><TD VALIGN="TOP"><P>NotifyCancelConnection </P></TD><TD VALIGN="TOP"><P>For canceling connections. </P></TD></TR><TR><TD VALIGN="TOP"><P>NotifyGetConnectionPerformance </P></TD><TD VALIGN="TOP"><P>For get connection performance estimates. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>NotifyCallBack</I> </P>
<P>The notification function to be called back in the context of the application making the WNet request. A different callback address should be given for each type of notification registered. </P>
<UL><LI>     WN_SUCCESS - the notification function was successfully registered with MPR. </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>WN_BAD_VALUE </P></TD><TD VALIGN="TOP"><P><I>NotifyType </I>is not a valid operation type, or <I>NotifyCallBack</I> is NULL. </P></TD></TR><TR><TD VALIGN="TOP"><P>WN_OUT_OF_MEMORY </P></TD><TD VALIGN="TOP"><P>MPR is out of memory, so the notification function was not registered. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>The notification function takes the same form for notification of all operations: </P>
<P><BR></P>
<PRE>DWORD  (FAR PASCAL *NOTIFYCALLBACK) pfNotifyCallback(
  LPNOTIFYINFO lpNotifyInfo, 
  LPVOID lpOperationInfo 
  );
</PRE>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>lpNotifyInfo</I> </P></TD><TD VALIGN="TOP"><P>Generic notification information common to all types of operation. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>lpOperationInfo</I> </P></TD><TD VALIGN="TOP"><P>Pointer to a structure containing information specific to the operation being attempted. The structure is given below for each type of notification function. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Returns WN_SUCCESS - the notification was processed without error. If <I>dwNotifyStatu</I>s has the NOTIFY_PRE flag set, the operation will be attempted and <B>*pfNotifyCallback </B>called again with the NOTIFY_POST flag set in <I>dwNotifyStatu</I>s. The return status in <I>dwOperationStatus</I> is returned to the user. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>WN_RETRY </P></TD><TD VALIGN="TOP"><P>The operation failed and the notification function wants a retry. The operation will be retried by MPR and the pre-notification is not done a second time to this NP. This value should not be returned when being pre-notified or post-notified of a successful operation (if it is, it will be treated as WN_SUCCESS). </P></TD></TR><TR><TD VALIGN="TOP"><P>WN_CANCEL </P></TD><TD VALIGN="TOP"><P>The user canceled the operation in some user interface produced within <B>*pfNotifyCallback</B>. WN_CANCEL is returned to the caller and a subsequent post-notification is not done to this NP, so any memory allocated for the context should be freed by the NP. This value should not be returned when being post-notified of a successful operation (if it is, it will be treated as WN_SUCCESS). </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Any other value is returned to the caller as the result of the operation attempt (unless in post-notification of a successful operation, in which case it is ignored), so should only be returned if there was some internal error in the notify function (such as WN_OUT_OF_MEMORY) or to alter the error return status code to the caller. If an error is returned in pre-notification, post-notification is not done to this NP. When in post-notification and an error is returned, <B>NPSSetCustomText</B> or <B>NPSSetExtendedError</B> may be called to specify the error text, but <B>SetLastError</B> does not need to be explicitly called. </P>
<P></P>
<P></P></FONT></BODY></HTML>
