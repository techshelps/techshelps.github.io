<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SendASPI32Command Function</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>SendASPI32Command Function </H3><P>Prototype: DWORD SendASPI32Command(LPSRB) </P>
<P>Declaration: LPSRB lpSRB; </P>
<P>The SendASPI32Command function handles all SCSI I/O requests. A command code is used to specify the type of I/O requested. SendASPI32Command is called with a pointer to a SCSI Request Block (SRB) structure. While SRB definition can vary depending on the ASPI command code, all SRBs include a standard SRB header: </P>
<P><BR></P>
<PRE>typedef struct {

 BYTE  SRB_Cmd;      // ASPI command code
 BYTE  SRB_Status;   // ASPI command status byte
 BYTE  SRB_HaId;     // ASPI host adapter number
 BYTE  SRB_Flags;    // ASPI request flags
 DWORD SRB_Hdr_Rsvd; // Reserved, MUST = 0

} SRB_Header;
</PRE>
<P>The SRB_Cmd field must contain the command code for the desired SCSI I/O operation. Each of these commands is described in the following sections. Possible values for SRB_Cmd include the following: </P>
<P><BR></P>
<PRE>SC_HA_INQUIRY
SC_GET_DEV_TYPE
SC_EXEC_SCSI_CMD
SC_ABORT_SRB
SC_RESET_DEV
SC_GET_DISK_INFO
</PRE>
<P>The SC_GET_DISK_INFO command is not used with Windows NT. </P></FONT></BODY></HTML>
