<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Support Mechanisms</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Support Mechanisms </H2><P>Windows 95 checks for and takes over support for large IDE drives if the drives are also supported by the following mechanisms: </P>
<UL><LI>     Geometry translation in BIOS. Windows 95 supports if it can determine the translation method. </LI><LI>     INT 13 extensions in BIOS. For more information about the INT 13 extensions, see <I>About Int 13 Extension APIs</I>. </LI><LI>     BIOS use of Logical Block Addressing (LBA) mode. Windows 95 uses LBA mode on the device, if the BIOS does. </LI><LI>     One of these software mechanisms: Ontrack Disk Manager version 6.03 or greater, EZ-Drive API, or master boot record hooking. Windows 95 takes over the support of this in protected mode. For more information, see <I>Software Mechanisms</I>. </LI></UL><P></P>
<P>Microsoft strongly recommends that BIOS developers and OEMs help make sure that new computers having large IDE devices are fully supported by Windows 95. </P>
<P>For developers writing the BIOS to support an IDE drive, Microsoft recommends that you use one of the BIOS translation methods described in this chapter or use the INT 13 extensions. In particular, if the IDE device supports LBA, use the LBA addressing scheme. </P>
<P>For OEMs creating systems that include large IDE drives, Microsoft recommends that you make sure that BIOS support matches one of the support mechanisms that Windows 95 can take over. </P></FONT></BODY></HTML>
