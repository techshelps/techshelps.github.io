<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Device Drivers</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Device Drivers </H2><P>Each layered block device driver is a dynamically-loadable virtual device. The drivers work in conjunction with the IOS to carry out I/O operations for a given device. Although the drivers are VxDs, they do not use the standard virtual device services and APIs. The IOS provides the services and functions the device drivers need to complete their tasks. </P>
<P>Each driver belongs to at least one layer. Windows 95 permits a maximum of thirty-two layers, but a typical configuration will have at most 3 to 5 layers. Each layer is numbered, with layer zero at the top and layer thirty-one at the bottom. Every device driver sets one or more bits in a 32-bit flag to indicate within which layer(s) the driver belongs to. </P>
<P>Each layer has a specified level of functionality. A driver that belongs in a given layer must have this functionality. Drivers at higher layers generally deal with logical I/O operations on volumes. Drivers at lower layers carry out physical I/O to adapters. Drivers at other layers carry out transitions from a volume orientation to a logical device orientation; from logical device to physical device orientation; and from physical to adapter orientation. Drivers at these layers also carry out transitions from a volume relative logical I/O request to a device relative physical I/O request. Some layers are reserved. </P></FONT></BODY></HTML>
