<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DriverCallback</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>DriverCallback </H3><P><BR></P>
<PRE>BOOL DriverCallback(dwCallBack, uFlags, hDevice, uMsg, dwUser, dwParam1, dwParam2)
</PRE>
<P>This function notifies a client application by sending a message to a window or callback function or by unblocking a task. </P>
<UL><LI>     Returns TRUE if the callback was performed, else FALSE if an invalid parameter was passed, or the task's message queue was full. </LI></UL><P></P>
<P>DWORD <I>dwCallBack</I> </P>
<P>Specifies either the address of a callback function, a window handle, or a task handle, depending on the flags specified in the <I>wFlags</I> parameter. </P>
<P>UINT <I>uFlags</I> </P>
<P>Specifies how the client application is notified, according to one of the following flags. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>DCB_NOSWITCH </P></TD><TD VALIGN="TOP"><P>Use this if you know you have enough stack space for the callback; otherwise MMSYSTEM will switch your stack for you. </P></TD></TR><TR><TD VALIGN="TOP"><P>DCB_FUNCTION </P></TD><TD VALIGN="TOP"><P>The application is notified by sending a message to a callback function. The <I>dwCallback</I> parameter specifies a procedure-instance address. </P></TD></TR><TR><TD VALIGN="TOP"><P>DCB_WINDOW </P></TD><TD VALIGN="TOP"><P>The application is notified by sending a message to a window. The low-order word of the <I>dwCallback</I> parameter specifies a window handle. </P></TD></TR><TR><TD VALIGN="TOP"><P>DCB_TASK </P></TD><TD VALIGN="TOP"><P>The application is notified by sending a message to the application or task. The low-order word of the <I>dwCallback</I> parameter specifies a task handle. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>HANDLE <I>hDevice</I> </P>
<P>Specifies a handle to the device associated with the notification. This is the handle assigned by MMSYSTEM when the device was opened. </P>
<P>UINT <I>uMsg</I> </P>
<P>Specifies a message to send to the application. </P>
<P>DWORD <I>dwUser</I> </P>
<P>Specifies the DWORD of user instance data supplied by the application when the device was opened. </P>
<P>DWORD <I>dwParam1</I> </P>
<P>Specifies a message-dependent parameter. </P>
<P>DWORD <I>dwParam2</I> </P>
<P>Specifies a message-dependent parameter. </P>
<P>This function can be called at interrupt time. </P>
<P>The client specifies how it wants to be notified when it opens the device. The flags DCB_FUNCTION and DCB_WINDOW are equivalent to the high-order word of the corresponding flags CALLBACK_FUNCTION and CALLBACK_WINDOW specified in the <I>dwParam2</I> parameter of the _OPEN message when the device was opened. </P>
<P>If notification is done with a callback function, <I>hDevice</I>, <I>uMsg</I>, <I>dwUser</I>, <I>dwParam1</I>, and <I>dwParam2</I> are passed to the callback. If notification is done with a window, only <I>uMsg</I>, <I>hDevice</I>, and <I>dwParam1</I> are passed to the window. </P>
<P></P>
<P></P></FONT></BODY></HTML>
