<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Structure of the DOS Arena</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Structure of the DOS Arena </H3><P>The DOS arena is the range of linear addresses from MINDOSLADDR through MAXDOSLADDR, and is used for virtual machines (VMs). The DOS arena is divided into several areas, parallelling the organization of memory under MS-DOS in real mode. The following illustration shows the structure of the DOS arena: The V86 global area is used for MS-DOS system code, device drivers, and TSRs. Pages in the global area are mapped such that linear and physical addresses are identical. Data in the global area that is <I>not </I>shared by all VMs must be instanced using the <B>_AddInstanceItem</B> service. </P>
<P>The V86 private area is used for MS-DOS application code and data. Pages in this address range are mapped to different physical storage for each VM. The first page of the V86 private area depends on the size of the V86 global area. To get the page numbers of the first and last pages in the V86 private area, use the <B>_GetFirstV86Page</B> and <B>_GetLastV86Page</B> services. </P>
<P>The V86-Mode Memory Manager (V86MMGR) manages the pages in the V86 private area. During device initialization, the V86MMGR assigns the pages to itself by using the <B>_Assign_Device_V86_Pages</B> service. </P>
<P>Video memory is managed by the video display device (VDD). The VDD assigns the pages in this range to itself during device initialization. It then installs its own page fault handler for the pages by using the <B>Hook_V86_Page</B> service. </P>
<P>The VM control block heap is used by virtual devices to allocate memory that is local to each VM. To allocate memory from the VM control block heap, use the <B>_Allocate_Device_CB_Area</B> service. </P>
<P>See also <B>_AddInstanceItem</B>, <B>_Allocate_Device_CB_Area</B>, <B>_Assign_Device_V86_Pages</B>, <B>Hook_V86_Page</B>, <B>_GetFirstV86Page</B>, <B>_GetLastV86Page</B> </P></FONT></BODY></HTML>
