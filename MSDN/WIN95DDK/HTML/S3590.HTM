<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SHELL_Hook_Properties</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>SHELL_Hook_Properties </H3><P><BR></P>
<PRE>mov eax, GroupID            ; property group identifier
mov edx, OFFSET32 DllName   ; address of property group DLL
mov esi, OFFSET32 Callback  ; address of callback procedure
VxDcall  SHELL_Hook_Properties

jc   error
</PRE>
<P>Installs a callback procedure that monitors changes to the properties of virtual machines. The <I>GroupID</I> parameter identifies what group of property data the procedure is associated with. The system calls the procedure simply to notify it of changes the user has made to properties associated with a new or existing VM. This means the procedure can examine the property data but cannot make changes. Uses EAX, ECX, EDX, and Flags. </P>
<UL><LI>     Clears the carry flag if successful. Otherwise, sets the carry flag to indicate an error, such as invalid property identifier or insufficient memory. </LI></UL><P></P>
<P><I>GroupID</I> </P>
<P>Property group identifier. Can be either a valid group ordinal, such as GROUP_TASK (as defined in PIF.H), or the address of a null-terminated string specifying the name of a custom PIF group. The string must not be longer than PIFEXTSIGSIZE (16) characters, including the terminating null character. </P>
<P><I>DllName</I> </P>
<P>Address of a null-terminated string specifying the name of the property group DLL. This parameter can be NULL if no DLL exists. </P>
<P><I>Callback</I> </P>
<P>Address of the callback procedure. For more information about the procedure, see the comments below. </P>
<P>If addresses are given for the <I>GroupID</I> and <I>DllName</I> parameters, the addresses must remain valid for the duration of system operation. </P>
<P>The system calls the callback procedure immediately after Create_VM processing and whenever the properties for a existing VM are changed. The system calls the procedure as follows: </P>
<P><BR></P>
<PRE>mov ebx, Handle            ; virtual machine handle 
mov edx, OFFSET32 Data     ; address of property data
mov edi, OFFSET32 Ordinal  ; address of property ordinal
call [Callback]
</PRE>
<P>The <I>Handle</I> parameter is the handle of the virtual machine being changed. The <I>Data</I> parameter is the address of the property data associated with the virtual machine. The <I>Ordinal</I> parameter is the address of a 32-bit variable that contains the property ordinal. If the property ordinal is zero, the variable is immediately followed by a null-terminated string specifying the name of the property group. No name is given if the ordinal is not zero. The callback requires no return value. </P>
<P></P>
<P></P></FONT></BODY></HTML>
