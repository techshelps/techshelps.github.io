<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StretchDIBits</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>StretchDIBits </H3><P><BR></P>
<PRE>WORD StretchDIBits(LPPDEVICE lpPDevice, WORD fGet, WORD DestX, 
    WORD DestY, WORD DestXE, WORD DestYE, WORD SrcX, WORD SrcY, 
    WORD SrcXE, WORD SrcYE, LPSTR lpBits, LPBITMAPINFO lpBitmapInfo,
    LPINT lpTranslate, DWORD dwROP, LPBRUSH lpPBrush,
    LPDRAWMODE lpDrawMode, LPRECT lpClipRect);
</PRE>
<P>Moves a source bitmap into a destination bitmap, stretching or compressing the source bitmap as necessary to fit the dimensions of the destination bitmap. The function either converts and copies a DIB to a given device or converts and copies a device-specific bitmap to a DIB. The <I>fGet</I> parameter specifies whether the source bitmap is a DIB or device-specific bitmap. </P>
<UL><LI>     Returns one of these values: </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>&gt;0 </P></TD><TD VALIGN="TOP"><P>Number of scanlines copied </P></TD></TR><TR><TD VALIGN="TOP"><P>=0 </P></TD><TD VALIGN="TOP"><P>Error or no scanlines copied </P></TD></TR><TR><TD VALIGN="TOP"><P>&lt;0 </P></TD><TD VALIGN="TOP"><P>GDI must simulate operation </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P><I>lpPDevice</I> </P>
<P>Address of a <B>PDEVICE</B> or <B>PBITMAP</B> structure that specifies a device or a device-specific bitmap. </P>
<P><I>fGet</I> </P>
<P>Flag that specifies whether the bitmap bits should be set or retrieved. If this parameter is zero, the function stretches or compresses the bitmap bits in the buffer pointed to by the <I>lpBits</I> parameter and copies them to the given device or bitmap. If this parameter is 1, the function retrieves bits from the device or bitmap. </P>
<P><I>DestX </I>and <I>Dest</I>Y </P>
<P>Coordinates of the upper-left corner of destination bitmap. </P>
<P><I>DestXE </I>and <I>Dest</I>Y<I>E</I> </P>
<P>Width and height of the destination bitmap in pixels. If <I>Dest</I>Y<I>E </I>is negative, the function must "flip" the bitmap, effectively displaying or printing it upside down. In this case, the height of the destination bitmap is the absolute value of the parameter. </P>
<P><I>SrcX </I>and <I>Src</I>Y </P>
<P>Coordinates of the upper-left corner of source bitmap. </P>
<P><I>SrcXE </I>and <I>Src</I>Y<I>E</I> </P>
<P>Width and height of the source bitmap in pixels. </P>
<P><I>lpBits</I> </P>
<P>Address of the buffer that contains or receives the DIB bits. If the <I>fGet</I> parameter is zero, the buffer must contains the bitmap bits to be copied to the device or device-specific bitmap. If <I>fGet</I> is 1, the buffer receives bitmap bits copied from the device or bitmap. </P>
<P><I>lpBitmapInfo</I> </P>
<P>Address of a <B>BITMAPINFO</B> structure that specifies the dimensions and format of the DIB. </P>
<P><I>lpTranslate</I> </P>
<P>Address of an array of color translation values to convert palette colors to actual device colors. This parameter is ignored by devices that do not use color palettes. </P>
<P><I>dwRop</I> </P>
<P>Raster operation to use during stretching and compressing. The <I>dwRop</I> parameter can be any one of 256 ternary raster-operation values; the following lists the most common values. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>SRCCOPY (0x00CC0020) </P></TD><TD VALIGN="TOP"><P>Copies source bits to the destination rectangle: </P>
<P>Destination = Source. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRCPAINT (0x00EE0086) </P></TD><TD VALIGN="TOP"><P>Combines the source and destination bits using the bitwise OR operator: </P>
<P>Destination = Source | Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRCAND (0x008800C6) </P></TD><TD VALIGN="TOP"><P>Combines the source and destination bits using the bitwise AND operator: </P>
<P>Destination = Source &amp; Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRCINVERT (0x00660046) </P></TD><TD VALIGN="TOP"><P>Combines the source and destination bits using the bitwise exclusive OR operator: </P>
<P>Destination = Source ^ Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRCERASE (0x00440328) </P></TD><TD VALIGN="TOP"><P>Combines the source and inverse of destination bits using the bitwise AND operator: </P>
<P>Destination = Source &amp; (~ Destination). </P></TD></TR><TR><TD VALIGN="TOP"><P>NOTSRCCOPY (0x00330008) </P></TD><TD VALIGN="TOP"><P>Copies the inverse of the destination bits to the destination rectangle: </P>
<P>Destination = ~ Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>NOTSRCERASE (0x001100A6) </P></TD><TD VALIGN="TOP"><P>Combines the inverse of the source and destination bits using the bitwise AND operator: </P>
<P>Destination = (~ Source) &amp; (~ Destination). </P></TD></TR><TR><TD VALIGN="TOP"><P>MERGECOPY (0x00C000CA) </P></TD><TD VALIGN="TOP"><P>Combines the source and brush bits using the bitwise AND operator: </P>
<P>Destination = Source &amp; Pattern. </P></TD></TR><TR><TD VALIGN="TOP"><P>MERGEPAINT (0x00BB0226) </P></TD><TD VALIGN="TOP"><P>Combines the destination and inverse of the source bits using the bitwise OR operator: </P>
<P>Destination = (~ Source) | Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>PATCOPY (0x00F00021) </P></TD><TD VALIGN="TOP"><P>Copies the brush bits to the destination rectangle: </P>
<P>Destination = Pattern. </P></TD></TR><TR><TD VALIGN="TOP"><P>PATPAINT (0x00FB0A09) </P></TD><TD VALIGN="TOP"><P>Combines the destination, pattern, and the inverse of source bits using the bitwise OR operator: </P>
<P>Destination = (~ Source) | Pattern | Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>PATINVERT (0x005A0049) </P></TD><TD VALIGN="TOP"><P>Combines the pattern and destination bits using the bitwise exclusive OR operator: </P>
<P>Destination = Pattern ^ Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>DSTINVERT (0x00550009) </P></TD><TD VALIGN="TOP"><P>Copies the inverse of the destination bits: </P>
<P>Destination = ~ Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>BLACKNESS (0x00000042) </P></TD><TD VALIGN="TOP"><P>Set all destination bits to black. </P></TD></TR><TR><TD VALIGN="TOP"><P>WHITENESS (0x00FF0062) </P></TD><TD VALIGN="TOP"><P>Set all bits to white. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>lpPBrush</I> </P>
<P>Address of a <B>PBRUSH</B> structure that specifies the current brush. Depending on the specified raster operation, the brush may be used during the stretching or compressing of the bitmap. </P>
<P><I>lpDrawMode</I> </P>
<P>Address of a <B>DRAWMODE</B> structure that specifies the color information the function needs to determine patterned brush colors and to carry color conversions and transparent copy operations. </P>
<P><I>lpClipRect</I> </P>
<P>Address of a <B>RECT</B> structure that specifies the clipping rectangle. </P>
<P>The export ordinal for this function is 28. </P>
<P>GDI calls this function whenever an application calls the <B>StretchDIBits</B> function (GDI.439). </P>
<P>A graphics device driver must export the <B>StretchDIBits</B> function if the RC_STRETCHDIB value is set in the <B>dpRaster</B> member of the driver's <B>GDIINFO</B> structure. </P>
<P>For Windows version 3.<I>x</I>, the source bitmap will always be a DIB (with the <I>fGet</I> parameter set to zero). The destination bitmap can be either a memory bitmap or the actual device surface. </P>
<P>See also <B>PDEVICE</B>, <B>PBITMAP</B>, <B>DRAWMODE</B>, <B>RECT</B>, <B>GDIINFO</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
