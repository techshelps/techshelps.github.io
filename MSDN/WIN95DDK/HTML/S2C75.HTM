<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACMDRVSTREAMHEADER</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>ACMDRVSTREAMHEADER </H3><P>See also ACMDM_STREAM_CLOSE, ACMDM_STREAM_CONVERT, ACMDM_STREAM_OPEN, ACMDM_STREAM_PREPARE, ACMDM_STREAM_RESET, ACMDM_STREAM_SIZE, ACMDM_STREAM_UNPREPARE, ACMDRVOPENDESC, ACMDRVSTREAMINSTANCE, ACMDRVSTREAMSIZE</P>
<P><BR></P>
<PRE>typedef struct {
    DWORD cbStruct;         
    DWORD fdwStatus;        
    DWORD dwUser;           
    LPBYTE pbSrc;           
    DWORD cbSrcLength;      
    DWORD cbSrcLengthUsed;  
    DWORD dwSrcUser;        
    LPBYTE pbDst;           
    DWORD cbDstLength;      
    DWORD cbDstLengthUsed;  
    DWORD dwDstUser;        
    DWORD fdwConvert;       
    LPACMDRVSTREAMHEADER padshNext; 
    DWORD fdwDriver;          
    DWORD dwDriver;           
    DWORD fdwPrepared;        
    DWORD dwPrepared;         
    LPBYTE pbPreparedSrc;     
    DWORD cbPreparedSrcLength;
    LPBYTE pbPreparedDst;     
    DWORD cbPreparedDstLength;
} ACMDRVSTREAMHEADER;
</PRE>
<P>Defines the header used to identify an Audio Compression Manager (ACM) conversion source and destination buffer pair for a conversion stream. This structure is passed as the <I>lParam2</I> parameter for the ACMDM_STREAM_PREPARE, ACMDM_STREAM_UNPREPARE, and ACMDM_STREAM_CONVERT ACM driver messages. Except where noted, no members of this structure can be modified by the driver, because they are intended for state information about a conversion stream and are maintained by the ACM. </P>
<P><B>cbStruct</B> </P>
<P>Size, in bytes, of the <B>ACMDRVSTREAMHEADER</B> structure. This member is initialized by the ACM before calling the driver. This member can be greater than the size, in bytes, of the base <B>ACMDRVSTREAMHEADER</B> structure. An ACM driver should ignore any members that are not contained in the base <B>ACMDRVSTREAMHEADER</B> structure. This member should not be modified by the driver. </P>
<P><B>fdwStatus</B> </P>
<P>Flags giving information about the conversion buffers. This member should not be modified by the driver except as indicated below. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="223pt" VALIGN="TOP"><COL WIDTH="110pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>ACMSTREAMHEADER_STATUSF_DONE </P></TD><TD VALIGN="TOP"><P>Indicates that a conversion is complete. </P></TD></TR><TR><TD VALIGN="TOP"><P>ACMSTREAMHEADER_STATUSF_INQUEUE </P></TD><TD VALIGN="TOP"><P>Set by the driver to indicate that the data buffers are queued for an asynchronous conversion. If the conversion stream is not asynchronous, the driver should not modify this flag. </P></TD></TR><TR><TD VALIGN="TOP"><P>ACMSTREAMHEADER_STATUSF_PREPARED </P></TD><TD VALIGN="TOP"><P>Set by the ACM to indicate that the data buffers have been prepared with <B>acmStreamPrepareHeader</B>. This flag is always maintained by the ACM regardless of whether the driver supports preparing stream headers. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>dwUser</B> </P>
<P>32 bits of user data. This can be any instance data specified by the application. This member should not be examined or modified by the driver. </P>
<P><B>pbSrc</B> </P>
<P>Address of the source data buffer. This pointer will always refer to the same location while the stream header remains prepared. If an application needs to change the source location, it will unprepare the header and re-prepare it with the alternate location. This member should not be modified by the driver. This pointer will always be non-NULL. </P>
<P><B>cbSrcLength</B> </P>
<P>Length, in bytes, of the source data buffer pointed to by <B>pbSrc</B>. When the header is prepared, this member specifies the maximum size that will be used in the source buffer. Conversions can be performed on source lengths less than or equal to the original prepared size. However, this member will be reset to the original size when unpreparing the header. This member should not be modified by the driver. This length will always be nonzero. </P>
<P><B>cbSrcLengthUsed</B> </P>
<P>Amount of data, in bytes, used for the conversion. This member must be set by the driver when the conversion is complete. Note that this value can be less than or equal to <B>cbSrcLength</B>. An application will use the <B>cbSrcLengthUsed</B> member when advancing to the next piece of source data for the conversion stream. </P>
<P><B>dwSrcUser</B> </P>
<P>32 bits of user data. This can be any instance data specified by the application. This member should not be examined or modified by the driver. </P>
<P><B>pbDst</B> </P>
<P>Address of the destination data buffer. This pointer will always refer to the same location while the stream header remains prepared. If an application needs to change the destination location, it will unprepare the header and re-prepare it with the alternate location. This member should not be modified by the driver. This pointer will always be non-NULL. </P>
<P><B>cbDstLength</B> </P>
<P>Length, in bytes, of the destination data buffer pointed to by <B>pbDst</B>. When the header is prepared, this member specifies the maximum size that will be used in the destination buffer. This member should not be modified by the driver. This length will always be nonzero. </P>
<P><B>cbDstLengthUsed</B> </P>
<P>Amount of data in bytes returned by the conversion. This member must be set by the driver when the conversion is complete. Note that this value can be less than or equal to <B>cbDstLength</B>. An application will use the <B>cbDstLengthUsed</B> member when advancing to the next destination location for the conversion stream. </P>
<P><B>dwDstUser</B> </P>
<P>32 bits of user data. This can be any instance data specified by the application. This member should not be examined or modified by the driver. </P>
<P><B>fdwConvert</B> </P>
<P>This member defines flags that should be used for preparing, unpreparing, and converting stream buffers. This member is identical to: </P>
<UL><LI>     The <I>fdwPrepare</I> parameter passed to <B>acmStreamPrepareHeader</B> for the ACMDM_STREAM_PREPARE message. </LI><LI>     The <I>fdwUnprepare</I> parameter passed to <B>acmStreamUnprepareHeader</B> for the ACMDM_STREAM_UNPREPARE message. </LI><LI>     The <I>fdwConvert</I> parameter passed to <B>acmStreamConvert</B> for the ACMDM_STREAM_CONVERT message. </LI></UL><P></P>
<P>This member should not be modified by the driver. </P>
<P>Currently, neither <B>acmStreamPrepareHeader</B> nor <B>acmStreamUnprepareHeader</B> define flags. The <B>acmStreamConvert</B> function defines the following flags: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>ACM_STREAMCONVERTF_BLOCKALIGN </P></TD><TD VALIGN="TOP"><P>Specifies that only integral numbers of blocks should be converted. Converted data must end on block-aligned boundaries. An application uses this flag for all conversions on a stream until there is not enough source data to convert to a block-aligned destination; in which case, the last conversion will be specified without this flag. </P></TD></TR><TR><TD VALIGN="TOP"><P>ACM_STREAMCONVERTF_END </P></TD><TD VALIGN="TOP"><P>Specifies that the conversion stream should begin returning pending instance data. For example, if a conversion stream maintains instance data, such as the tail end of an echo filter operation, this flag should tell the driver to start returning this remaining data with optional source data. Note that this flag can be specified with the ACM_STREAMCONVERTF_START flag. </P></TD></TR><TR><TD VALIGN="TOP"><P>ACM_STREAMCONVERTF_START </P></TD><TD VALIGN="TOP"><P>Specifies that the conversion stream should reinitialize its instance data. For example, if a conversion stream maintains instance data, such as delta or predictor information, this flag should reset the stream to starting defaults. Note that this flag can be specified with the ACM_STREAMCONVERTF_END flag. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>padshNext</B> </P>
<P>Specifies a pointer that can be used by a driver to maintain a list of queued asynchronous conversion buffers. This member is intended for drivers to use for driver-specific lists. However, this member can be any instance data specified by the driver. This member will not be valid after returning a header to the caller. </P>
<P><B>fdwDriver</B> </P>
<P>32 bits of driver-defined flags. This member is intended for drivers to use for driver-specific flags. However, this member can be any instance data specified by the driver. Note that this member is set by the driver and can be modified during any ACMDM_STREAM_CONVERT message. This member will be passed back with all ACMDM_STREAM_CONVERT messages unmodified by the ACM while the stream header remains prepared. </P>
<P><B>dwDriver</B> </P>
<P>32 bits of driver-defined data. This can be any instance data specified by the driver. Note that this member is set by the driver and can be modified during any ACMDM_STREAM_CONVERT message. This member will be passed back with all ACMDM_STREAM_CONVERT messages unmodified by the ACM while the stream header remains prepared. </P>
<P><B>fdwPrepared</B> </P>
<P>This member is used by the ACM and should not be examined or modified by the driver. </P>
<P><B>dwPrepared</B> </P>
<P>This member is used by the ACM and should not be examined or modified by the driver. </P>
<P><B>pbPreparedSrc</B> </P>
<P>This member is used by the ACM and should not be examined or modified by the driver. </P>
<P><B>cbPreparedSrcLength</B> </P>
<P>This member is used by the ACM and should not be examined or modified by the driver. </P>
<P><B>pbPreparedDst</B> </P>
<P>This member is used by the ACM and should not be examined or modified by the driver. </P>
<P><B>cbPreparedDstLength</B> </P>
<P>This member is used by the ACM and should not be examined or modified by the driver. </P>
<P>The source (<B>pbSrc</B>) and destination (<B>pbDst</B>) data buffers are allocated with <B>GlobalAlloc</B> using the GMEM_MOVEABLE and GMEM_SHARE flags, and locked with <B>GlobalLock</B>. </P>
<P></P>
<P></P></FONT></BODY></HTML>
