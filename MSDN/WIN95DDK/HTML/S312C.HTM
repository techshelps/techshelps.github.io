<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFSMgr_InstallFileSystemApiHook</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>IFSMgr_InstallFileSystemApiHook </H3><P><BR></P>
<PRE>IFSMgr_InstallFileSystemApiHook(
 pIFSFileHookFunc HookFunc
 )
</PRE>
<P>This service is called to install a filesystem api hook. This should be called by a VxD that wants to hook the filesystem api calls and do special processing on them. The IFS manager returns a pointer to a variable that contains the address of the next hooker in the chain. If the FSD wants to chain the call on, it should dereference this pointer to get the address of the function of the previous file system api hooker. This field is always valid. If this is the first hooker in the chain, the IFS manager automatically installs a default function which simply routes the call onward. So, hookers do not need to check if there is a previous hooker while chaining on, there is always a previous hooker. </P>
<P><I>HookFunc</I> </P>
<P>Supplies the address of the hook function that is to be called by the IFS manager on a call. </P>
<UL><LI>     Returns a pointer to a variable that contains the address of the previous hook function in the chain, if successful. If this function is failed for reasons such as out of memory, the return value is 0. </LI></UL><P></P>
<P></P>
<P></P></FONT></BODY></HTML>
