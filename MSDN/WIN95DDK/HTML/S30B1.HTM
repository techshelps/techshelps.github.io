<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_MountVolume</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_MountVolume </H3><P><BR></P>
<PRE>FS_MountVolume(
 PIOREQ pir
 )
</PRE>
<P>The linkage between an FSD and a disk volume is established and discontinued through <B>FS_MountVolume</B>. </P>
<P><I>ir_flags</I> </P>
<P>Supplies mount type to be performed. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Mount Type Values:</B> </P>
<P>One of the following types will be specified. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_FSD_MOUNT</B> </P></TD><TD VALIGN="TOP"><P>Mount a disk volume. This usually happens on the first access to the media or if the media is removeable and the volume has changed. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_FSD_VERIFY</B> </P></TD><TD VALIGN="TOP"><P>Verify that the volume mounted has not changed. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_FSD_UNLOAD</B> </P></TD><TD VALIGN="TOP"><P>The disk resource has disappeared, unmount this volume unconditionally. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_FSD_MOUNT_CHILD</B> </P></TD><TD VALIGN="TOP"><P>This volume is a child volume of an already mounted volume. Child volumes are treated as a single unit along with the parent volume. Compressed volumes e.g. DoubleSpace have child volumes or CVFs associated with a parent volume. The FSD should chain all these resources so that when it is called to unmount the parent volume, all the child volumes are also unmounted. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_FSD_MAP_DRIVE</B> </P></TD><TD VALIGN="TOP"><P>Switch the driveletter for the volume. Driveletters are typically switched when mounting compressed media. The FSD should use the new driveletter while referring to this volume. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_FSD_UNMAP_DRIVE</B> </P></TD><TD VALIGN="TOP"><P>Switch the driveletter back to the original drive. When a compressed volume gets unmounted, the driveletter needs to be switched back. The FSD should now use this driveletter to refer to the volume. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>Operation Type IR_FSD_MOUNT:</B> </P>
<P>Value </P>
<P>Meaning </P>
<P><I>ir_volh</I> </P>
<P>Supplies a system volume handle. The system volume handle is used by the IOS to identify a volume and is typically passed down to the IOS by the FSD on an i/o operation. </P>
<P><I>ir_mntdrv</I> </P>
<P>Drive identifier for the drive to be mounted. </P>
<P><I>ir_fh</I> </P>
<P>Supplies the IFS resource handle for this volume. This is to be used purely for identification purposes only. </P>
<P><I>ir_rh</I> </P>
<P>Supplies the linear address of the head of the DOS DPB chain. The ifs manager makes sure that there is a DPB structure corresponding to this drive on this chain. The FSD will need to walk the DPB list to find the DPB for this drive. </P>
<P><B>Operation Type IR_FSD_VERIFY:</B> </P>
<P>This operation is not called by the IFS manager, the FSD is directly called by the volume tracking driver. </P>
<P><B>Operation Type IR_FSD_UNLOAD:</B> </P>
<P>This operation is not called by the IFS manager, the FSD is directly called by the volume tracking driver. </P>
<P><B>Operation Type IR_FSD_MOUNT_CHILD:</B> </P>
<P>Value </P>
<P>Meaning </P>
<P><I>ir_rh</I> </P>
<P>Supplies the FSD resource handle for the parent volume. </P>
<P><I>ir_fh</I> </P>
<P>Supplies the IFS resource handle for the parent volume. This is to be used purely for identification purposes only. </P>
<P><I>ir_volh</I> </P>
<P>Supplies the system volume handle for the parent volume. </P>
<P><I>ir_mntdrv</I> </P>
<P>Drive identifier for the drive to be mounted. </P>
<P><B>Operation Type IR_FSD_MAP_DRIVE:</B> </P>
<P>Value </P>
<P>Meaning </P>
<P><I>ir_rh</I> </P>
<P>Supplies the FSD resource handle for the volume. </P>
<P><I>ir_options</I> </P>
<P>Supplies the new driveletter for the volume. </P>
<P><I>ir_fh</I> </P>
<P>Supplies the IFS resource handle for the parent volume. This is to be used purely for identification purposes only. </P>
<P><B>Operation Type IR_FSD_UNMAP_DRIVE:</B> </P>
<P>This operation is not called by the IFS manager, it is called directly by the driver. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <I>ir_error</I> </P></TD><TD VALIGN="TOP"><P>Returns status of the operation ( 0 if no error, errorcode otherwise ). There is a special error of ERROR_VOLUME_EXISTS that can be returned by the FSD if it already has a resource mounted on the volume that is valid. Look below for details. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Operation Type IR_FSD_MOUNT, IR_FSD_MOUNT_CHILD:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_rh</I> </P></TD><TD VALIGN="TOP"><P>Returns an FSD volume handle to the disk volume for mount on a successful mount. </P>
<P>This handle is used to identify the disk volume and is passed back to the FSD during file operations on the specified disk volume. The value of this handle is not interpreted by the IFS Managers, it is only used to identify the disk volume. </P>
<P>If the special error of ERROR_VOLUME_EXISTS is returned, then this field should contain the previous system volume handle. The IFS manager uses this returned system volume handle to identify the IFS resource handle for this volume. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_vfunc</I> </P></TD><TD VALIGN="TOP"><P>Returns a pointer to a function table, in the FSD, containing a list of the FSD name based file I/O entry points. This field should not be returned if an error status of ERROR_VOLUME_EXISTS is returned. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Function Table Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_version</I> </P></TD><TD VALIGN="TOP"><P>IFS version number. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_revision</I> </P></TD><TD VALIGN="TOP"><P>IFS interface revision number. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_sizec</I> </P></TD><TD VALIGN="TOP"><P>Number of function entry points in table. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[NUM_VOLFUNC]</I> </P></TD><TD VALIGN="TOP"><P>Array of pointers to volume-based functions as described below: </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Volume Based Functions:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_DELETE]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_DeleteFile function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_DIR]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_Dir function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_FILEATTRIB]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_FileAttributes function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_FLUSH]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_FlushVolume function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_GETDISKINFO]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_GetDiskInfo function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_OPEN]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_OpenFile function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_RENAME]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_RenameFile function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_SEARCH]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_SearchFile function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_QUERY]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_QueryResourceInfo function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_DISCONNECT]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_DisconnectResource function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_UNCPIPEREQUEST]</I> </P></TD><TD VALIGN="TOP"><P>Function not defined for volume mounts, FSD must return pointer to error function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_IOCTL16DRIVE]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_Ioctl16Drive function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_GETDISKPARMS]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_GetDiskParms function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_FINDOPEN]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_FindFirstFile function. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>vfn_func[VFN_DASDIO]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to FS_DirectDiskIO function. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ir_tuna</I> </P></TD><TD VALIGN="TOP"><P>Returns flags about whether FSD wants tunnelling to be done on this volume. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Tunnelling Flag Values:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_TUNA_NOTUNNEL</B> </P></TD><TD VALIGN="TOP"><P>No tunnelling should be done on this volume. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_TUNA_FSDTUNNEL</B> </P></TD><TD VALIGN="TOP"><P>The FSD implements tunnelling on its own on this volume. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IR_TUNA_IFSTUNNEL</B> </P></TD><TD VALIGN="TOP"><P>The IFS must enable its default tunnelling support on this volume. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Operation Type IR_FSD_VERIFY:</B> </P>
<P>This operation is not called by the IFS manager, the FSD is directly called by the volume tracking driver. </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Operation Type IR_FSD_UNLOAD:</B> </P>
<P>This operation is not called by the IFS manager, the FSD is directly called by the volume tracking driver. </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Operation Type IR_FSD_MAP_DRIVE:</B> </P>
<P>This operation has no other explicit return status. </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Operation Type IR_FSD_UNMAP_DRIVE:</B> </P>
<P>This operation is not called by the IFS manager, it is called directly by the driver. </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>An IR_FSD_MOUNT operation is performed when the disk is initially accessed and when the media has changed. The FSD should examine the disk volume and determine if it recognizes the file system disk format. If the volume is recognized the FSD should save the information it requires about the volume and return a handle for the volume. The IFS manager uses the returned volume handle to indicate to the FSD which disk volume a pathnamed I/O request should be performed on. The volume handle is also used to track the disk volumes that may be in a removable media drive. </P>
<P>The FSD must verify if the disk volume has already been mounted. If it has been previously mounted then the previously returned system volume handle and FSD volume handle should be returned. Otherwise the disk volume will be considered a separate volume. </P>
<P>If the FSD determines that the media is a new volume, the FSD should save the system volume handle and drive identifier. The system volume handle should be used by the FSD during disk I/O requests to identify the disk volume to the I/O system. The drive identifier should be used by the FSD during a mount to verify that a previously mounted volume is on the same drive. </P>
<P></P>
<P></P></FONT></BODY></HTML>
