<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VDD_Do_Physical_IO</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>VDD_Do_Physical_IO </H3><P><B>Call With</B></P>
<P>EAX: Contains the value to send out the port (writes only). </P>
<P>EBX: Contains the VM handle that is doing the I/O. </P>
<P>ECX: Contains the I/O type (see VMM.INC for details). </P>
<P>EDX: Contains the port to do the I/O to. </P>
<P>Client registers contain the I/O parameters if ECX indicates that the VM wants to do string I/O. </P>
<P><B>Return Values</B></P>
<P>Nothing. </P>
<P><B>Remarks</B></P>
<P>This service may be used, not only by mini-VDDs, but by any Ring 0 VxD which wishes to perform physical I/O on behalf of a VM client. This service provides all types of I/O to the caller. For string I/O, the parameters of the I/O (for example, Selector:Offset, number of bytes, words, or doublewords to move etc.) are provided in the client registers. </P>
<P>If a mini-VDD or VxD decides that it wants to just allow the I/O that it has trapped to be sent to the actual hardware, it calls this service. This routine then performs the I/O, updates the client registers as appropriate and then returns so that it appears to the VM that the I/O operation has been successfully completed. The VxD caller does not have to make any decisions on doing I/O on its own. The Main VDD understands and accomplishes the physical I/O on behalf of the VM. </P>
<P></P>
<P></P></FONT></BODY></HTML>
