<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_Dir</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_Dir </H3><P><BR></P>
<PRE>FS_Dir(
 PIOREQ pir
 )
</PRE>
<P>Directory operations (change, make, and remove) are performed through <B>FS_Dir</B>. This routine handles the Win32 functions: CreateDirectory(), RemoveDirectory(), and SetCurrentDirectory(); and INT 21h functions: 39h, 3Ah, and 3Bh. </P>
<P><I>ir_ppath</I> </P>
<P>Supplies a pointer to the unicode canonicalized directory pathname for the operation. Wildcards are not allowed on the pathname. </P>
<P><I>ir_flags</I> </P>
<P>Supplies the command type to perform. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Command Type Values:</B> </P>
<P>One of the following types will be specified. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>CREATE_DIR</B> </P></TD><TD VALIGN="TOP"><P>Make a new directory. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>DELETE_DIR</B> </P></TD><TD VALIGN="TOP"><P>Remove an existing directory. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>CHECK_DIR</B> </P></TD><TD VALIGN="TOP"><P>Check if the directory exists. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>QUERY83_DIR</B> </P></TD><TD VALIGN="TOP"><P>Return a pure 8.3 pathname for the path passed in, which possibly has mixed components. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>QUERYLONG_DIR</B> </P></TD><TD VALIGN="TOP"><P>Return a pure LFN pathname for the path passed in which possibly has mixed components. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_rh</I> </P>
<P>Supplies handle to disk volume or network resource which contains the directory. </P>
<P><I>ir_ppath2</I> </P>
<P>Supplies pointer to buffer to contain the unicode pure pathname on the QUERY83_DIR and QUERYLONG_DIR commands. This parameter is not valid for the other commands. </P>
<P><I>ir_attr</I> </P>
<P>Supplies path parsing flags for the pathname. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Path Parsing Flags:</B> </P>
<P>The following path parsing flags are passed in. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_LONG_PATH</B> </P></TD><TD VALIGN="TOP"><P>Path has a longname component. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_KEEP_CASE</B> </P></TD><TD VALIGN="TOP"><P>Preserve the case of the filename passed in when storing on disk. This also implies that this call should use longname semantics for its processing. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_HAS_DOT</B> </P></TD><TD VALIGN="TOP"><P>Filename component has a dot in its name. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>FILE_FLAG_IS_LFN</B> </P></TD><TD VALIGN="TOP"><P>Filename component is a longname. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_uFname</I> </P>
<P>Pointer to the case-preserved filename component in unicode. </P>
<P><I>ir_upath</I> </P>
<P>Pointer to the unparsed user pathname in unicode. </P>
<P><I>ir_user</I> </P>
<P>Supplies user id for this request. </P>
<P><I>ir_pid</I> </P>
<P>Supplies process id for this request. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <I>ir_error</I> </P></TD><TD VALIGN="TOP"><P>Returns status of the operation ( 0 if no error, errorcode otherwise ). </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_ppath2</I> </P></TD><TD VALIGN="TOP"><P>Contains the pure 8.3 or LFN pathname on the QUERY83_DIR and QUERYLONG_DIR commands respectively. This parameter is not returned on the other commands. The FSD must return a canonicalized unicode pathname. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>If an FSD does not support long filenames on a volume and it gets a LFN pathname, it should fail the call. The QUERY83_DIR command should be failed on volumes that have no 8.3 names e.g HPFS. However, The QUERYLONG_DIR command should never be failed. On a volume that has no LFNs, it should just return the 8.3 version passed in. Note that if a volume supports LFNs, the pathname passed in can be a mixture of longname and shortname components. The FSD should be able to handle this and should not make any assumptions about the pathname passed in. </P>
<P></P>
<P></P></FONT></BODY></HTML>
