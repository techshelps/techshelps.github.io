<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NPEnumResource</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>NPEnumResource </H3><P><B>NPEnumResource</B> performs an enumeration based upon the handle returned by <B>NPOpenEnum</B>. On this call the NP fills the buffer with the requested number of entries (or the maximum that can fit). The returned <B>NETRESOURCE</B> structures must be located contiguously at the head of the buffer passed in (for example, an array of such structures), and the pointers in these structures must point to locations within the buffer. As such, data referenced by these pointers will be located at the end of the buffer, after the array of structures. It is the NP's responsibility to package this information correctly. Note that when returning an enumeration for <I>dwScope</I> set to RESOURCE_CONTEXT, all siblings must be returned together (contiguously, but may span buffers) with the RESOURCEUSAGE_SIBLING bit set in the <I>dwUsage</I> field for every sibling except the first. </P>
<P><BR></P>
<PRE>DWORD NPEnumResource (
  HANDLE hEnum,
  LPDWORD lpcCount,
  LPVOID lpBuffer,
  DWORD cbBuffer,
  LPDWORD lpcbFree
  );
</PRE>
<P><I>hEnum</I> </P>
<P>This must be a handle obtained from <B>NPOpenEnum</B> call. </P>
<P><I>lpcCount</I> </P>
<P>Specifies the number of entries requested. It may be 0xFFFFFFFF to request as many as possible. On successful call, this location will receive the number of entries actually read. </P>
<P><I>lpBuffer</I> </P>
<P>A pointer to the buffer to receive the enumeration result, which are returned as an array of <B>NETRESOURCE</B> entries. The buffer is valid until the next call using <I>hEnum</I>. </P>
<P><I>cbBuffer</I> </P>
<P>This specifies the size in bytes of the buffer passed to the function call. </P>
<P><I>lpcbFree</I> </P>
<P>A pointer to a variable that the NP should set to the number of bytes remaining unused in the buffer. These bytes are the unused bytes immediately after the array of <B>NETRESOURCE</B> structures, and before the variable-length strings pointed to by those <B>NETRESOURCE</B> structures. When enumerating from multiple networks in turn, the MPR will pass the entire buffer to the first NP, then pass just the unused space to the next NP, and so on. If the NP cannot fit a single entry in the buffer, then the NP should set this variable to the number of bytes required to contain the next entry that it will return (including all variable-length strings, such as the provider name), and return a status of WN_MORE_DATA. </P>
<UL><LI>     WN_SUCCESS if the call is successful, the caller may continue to call <B>NPEnumResource</B> to continue the enumeration. </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>WN_NO_MORE_ENTRIES </P></TD><TD VALIGN="TOP"><P>No more entries found. The enumeration completed successfully (the contents of the return buffer is undefined). Other error codes include: </P></TD></TR><TR><TD VALIGN="TOP"><P>WN_MORE_DATA </P></TD><TD VALIGN="TOP"><P>The buffer is too small even for one entry. lpcbFree gives the size of buffer required for the next entry. </P></TD></TR><TR><TD VALIGN="TOP"><P>WN_BAD_HANDLE </P></TD><TD VALIGN="TOP"><P><I>hEnum</I> is not a valid handle. </P></TD></TR><TR><TD VALIGN="TOP"><P>WN_NO_NETWORK </P></TD><TD VALIGN="TOP"><P>The network is not present. This condition is checked for before <I>hEnum</I> is tested for validity. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>The <I>lpNetResource</I> provided to <B>NPOpenEnum</B> is guaranteed by the system to not be NULL. The NP sets <I>lpProvider</I> to point to the name of the NP (the name returned from calling <B>NPSGetProviderName</B>) for all enumerations. </P>
<P>When returning remote names, the NP should provide the complete remote name (as opposed to the shorter name displayed in the Explorer, which is generated using <B>NPFormatNetworkName</B>). For example, an entry describing a share would be returned as \\<I>server</I>\<I>SHARE</I>, which is a format suitable for passing to <B>WNetAddConnection</B>. </P></FONT></BODY></HTML>
