<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Page Allocation</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Page Allocation </H3><P>The VMM provides a set of page allocation services that do not separately reserve and commit pages. Internally, these services simply reserve and commit pages in one step by calling the appropriate sparse memory management services. </P>
<P>To allocate pages, use the <B>_PageAllocate</B> service. The service allocates (reserves and commits) a memory block, and returns the block's base linear address. The address is identical to the address returned by the <B>_PageReserve</B> service. To free the memory block, pass the linear address by using the <B>_PageFree</B> service. </P>
<P>You can change the size of a memory block after it is allocated by using the <B>_PageReAllocate</B> service. The service attempts to change the committed size of the object without changing its base address. However, if necessary the service reserves a new memory block and copies the existing pages to it. </P>
<P>To determine the size of a memory block, use the <B>_PageGetSizeAddr</B> service. This service returns the reserved size of the block, which may be greater than the number of committed pages in the memory block. You can get information about the amount of available memory by using the <B>_PageGetAllocInfo</B> and <B>_GetFreePageCount</B> services. </P>
<P>Because these services use the sparse memory management services internally, it is possible to use the two groups of services in combination. For example, you might allocate a memory block using <B>_PageAllocate</B> and then decommit certain pages in that memory block using the <B>_PageDecommit</B> service. However, combining these services is generally not recommended because doing so might break assumptions made by the page allocation services. For example, the <B>_PageReAllocate</B> service assumes that all committed pages in a memory block are contiguous, which may not be the case if sparse memory allocation services have been used on the same region. </P>
<P>See also <B>_PageGetAllocInfo</B>, <B>_GetFreePageCount</B>, <B>_PageGetSizeAddr</B>, <B>_PageReAllocate</B>, <B>_PageReserve</B>, <B>_PageFree</B> </P></FONT></BODY></HTML>
