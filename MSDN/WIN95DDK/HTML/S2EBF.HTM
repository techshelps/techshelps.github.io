<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DEVMODE</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>DEVMODE </H3><P><BR></P>
<PRE>typedef struct _DEVMODE {
     char  dmDeviceName[CCHDEVICENAME];
    UINT  dmSpecVersion;
    UINT  dmDriverVersion;
    UINT  dmSize;
    UNIT  dmDriverExtra;
    DWORD dmFields;
    int   dmOrientation;
    int   dmPaperSize;
    int   dmPaperLength;
    int   dmPaperWidth;
    int   dmScale;
    int   dmCopies;
    int   dmDefaultSource;
    int   dmPrintQuality;
    int   dmColor;
    int   dmDuplex;
    int   dmYResolution;
    int   dmTTOption;
    int   dmCollate;
    TCHAR dmFormName[CCHFORMNAME];
    WORD  dmLogPixels;
    DWORD dmBitsPerPel;
    DWORD dmPelsWidth;
    DWORD dmPelsHeight;
    DWORD dmDisplayFlags;
    DWORD dmDisplayFrequency;
    DWORD dmICMMethod;
    DWORD dmICMIntent;
    DWORD dmMediaType;
    DWORD dmDitherType;
    DWORD dmReserved1;
    DWORD dmReserved2;
} DEVMODE;
</PRE>
<P>Structure that contains information about the device initialization and environment of a printer. An application passes this structure to <B>DeviceCapabilities</B> and <B>ExtDeviceMode</B> functions exported by the driver. The <B>DEVMODE</B> structure is defined in PRINT.H. </P>
<P><B>DEVMODE</B> members which are new to Windows 95 are defined below. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>dmCollate</B> </P></TD><TD VALIGN="TOP"><P>Specifies whether collation should be used when printing multiple copies. This member can have one of the following values: </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>DMCOLLATE_TRUE </P></TD><TD VALIGN="TOP"><P>Collate when printing multiple copies. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMCOLLATE_FALSE </P></TD><TD VALIGN="TOP"><P>Do not collate when making multiple copies. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Using DMCOLLATE_FALSE provides faster, more efficient output, since the data is sent to a page printer just once, no matter how many copies are required, and the printer is instructed to simply print the page again. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>dmFormName</B> </P></TD><TD VALIGN="TOP"><P>This member is unused for the first release of Windows 95. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>dmLogPixels</B> </P></TD><TD VALIGN="TOP"><P>Specifies the number of log pixels in the x direction. The value in this member should be equal to the value in the <B>uLogPixels</B> member of the <B>GDIINFO</B> structure. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>dmBitsPerPel</B> </P></TD><TD VALIGN="TOP"><P>Unused for printers. For display devices, specifies in bits per pixel the color resolution of the device. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>dmPelsWidth</B> </P></TD><TD VALIGN="TOP"><P>Unused for printers. For display devices, specifies the width, in pixels, of the visible device surface. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>dmPelsHeight</B> </P></TD><TD VALIGN="TOP"><P>Unused for printers. For display devices, specifies the height, in pixels, of the visible device surface. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>dmDisplayFlags</B> </P></TD><TD VALIGN="TOP"><P>Unused for printers. For display devices, specifies the display mode of the device. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>dmDisplayFrequency</B> </P></TD><TD VALIGN="TOP"><P>Unused for printers. For display devices, specifies the frequency of the device in particular modes. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>dmICMMethod</B> </P></TD><TD VALIGN="TOP"><P>Specifies which component, if any, will create the ICM color dictionaries. This member can have one of the following values: </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>DMICMMETHOD_SYSTEM </P></TD><TD VALIGN="TOP"><P>The Windows 95 System ICM library performs color matching. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMICMMETHOD_NONE </P></TD><TD VALIGN="TOP"><P>ICM is disabled. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMICMMETHOD_DRIVER </P></TD><TD VALIGN="TOP"><P>The driver performs color matching. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMICMMETHOD_DEVICE </P></TD><TD VALIGN="TOP"><P>The device performs color matching. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The printer driver must provide a user interface for setting the dmICMMethod member of the <B>DEVMODE</B> structure. Most printer drivers support only the DMICMMETHOD_SYSTEM or DMICMMETHOD_NONE methods, although drivers for PostScript printers support all values. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>dmICMIntent</B> </P></TD><TD VALIGN="TOP"><P>Specifies the ICM setting to be used for a particular document. This information is used to select specific color-matching algorithms. This member can have one of the following values: </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>DMICM_SATURATE </P></TD><TD VALIGN="TOP"><P>Optimizes for color saturation. Generally used for high-contrast presentation graphics when dithering is not desired. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMICM_CONTRAST </P></TD><TD VALIGN="TOP"><P>Optimizes for color contrast. Generally used for photographic images when dithering is desired. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMICM_COLORMETRIC </P></TD><TD VALIGN="TOP"><P>Optimizes to match an exact given color. Used when a particular color must be respected. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The dmICMIntent member of the <B>DEVMODE</B> structure is used primarily by applications that do not support ICM. ICM-capable functions can establish color-matching algorithms by using the ICM functions. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>dmMediaType</B> </P></TD><TD VALIGN="TOP"><P>Specifies the type of media being printed on. The ICM library uses this information to compensate for different absorption of varying media. This member can have one of the following values: </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>DMICM_STANDARD </P></TD><TD VALIGN="TOP"><P>Plain paper. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMICM_TRANSPARENCY </P></TD><TD VALIGN="TOP"><P>Transparencies. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMICM_GLOSSY </P></TD><TD VALIGN="TOP"><P>Glossy paper. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>A driver can define values for this member that are greater than the value DMMEDIA_USER. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>dmDitherType</B> </P></TD><TD VALIGN="TOP"><P>Specifies the dither brush to be used for a particular document. The choice of brush will generally affect the available colors for the device. This member can have one of the following predefined values, or a driver can define a value for this member that is greater than DMDITHER_USER. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="201pt" VALIGN="TOP"><COL WIDTH="146pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>DMDITHER_NONE </P></TD><TD VALIGN="TOP"><P>Colors will not be dithered. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMDITHER_COARSE </P></TD><TD VALIGN="TOP"><P>Dither with a coarse brush. Perform ordered, or halftone, dithering. Suitable for scanned photographs or other images that have continuous gradations in intensity and hue. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMDITHER_FINE </P></TD><TD VALIGN="TOP"><P>Dither with a fine brush. Perform ordered, or halftone, dithering. Suitable for scanned photographs or other images that have continuous gradations in intensity and hue. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMDITHER_LINEART </P></TD><TD VALIGN="TOP"><P>Line art dithering, which produces well-defined borders between black, white, and gray scalings. Not suitable for scanned photographs or other images that have continuous gradations in intensity and hue. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMDITHER_ERRORDIFFUSION </P></TD><TD VALIGN="TOP"><P>Error diffusion dithering. Can preserve more detail of an image that has continuous gradations in intensity and hue than ordered, or halftone, dithering does. </P></TD></TR><TR><TD VALIGN="TOP"><P>DMDITHER_GRAYSCALE </P></TD><TD VALIGN="TOP"><P>Device does gray scaling. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>dmReserved1</B> </P></TD><TD VALIGN="TOP"><P>Not used; must be zero. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>dmReserved2</B> </P></TD><TD VALIGN="TOP"><P>Not used; must be zero. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Printer drivers that support the new members in the <B>DEVMODE</B> structure must set DEVMODE.dmSpecVersion to 0x0400. If a driver sets DEVMODE.dmSpecVersion to this value, the driver must also meet the following requirements: </P>
<UL><LI>     The driver must always return 0x0400 to a <B>DeviceCapabilities</B> function call that uses a DC_VERSION argument. </LI><LI>     The driver must use the new <B>DEVMODE</B> structure definition, even if it does not use any of the new members (it should initialize them to zero). </LI><LI>     The driver must use <B>DrvSetPrinterData</B> to store printer driver settings and use <B>DrvGetPrinterData</B> to retrieve them. </LI><LI>     The driver must be able to handle friendly user-defined printer names, which can be any string up to 32 characters in length (including the terminating NULL character). When an application passes the driver a friendly printer name, the driver must query the registry to determine what the corresponding printer model name is. The driver can use the <B>DrvGetPrinterData</B> function to do this. </LI><LI>     If the <B>DEVMODE</B> data retrieved from the registry is incorrect, the driver must build a default <B>DEVMODE</B> and merge as many member values as possible, and then update the registry. Win32 applications can use the DEVMODE structure, so the driver must update DEVMODE.dmDeviceName with the current friendly printer name. </LI><LI>     Private <B>DEVMODE</B> data must contain the printer model name or some way of determining the current printer model name. </LI><LI>     The driver does not have to contain code that writes settings to INI files since these settings are now maintained on the registry. The driver may have to contain code that reads INI files. </LI></UL><P></P>
<P>In addition to the requirements listed above, there are two other more detailed requirements which are described below: </P>
<UL><LI>     The driver must handle brushes differently than in Windows 3.x. </LI><LI>     The driver must organize the private members of the DEVMODE structure into two groups: printer-sticky members and document-sticky members. </LI></UL><P></P>
<H4><A NAME="sec0"></A>Differences in Handling Brushes </H4><P>The driver must deal with brushes differently than in Windows 3.x. After an <B>Enable</B> function call, GDI calls the driver <B>RealizeObject</B> function twice with an OBJ_BRUSH argument: the first time to get size information and the second time to realize the brush. Under Windows 3.x the driver returned only a TRUE or FALSE value on the second call. Under Windows 95, upon success, the driver must return a WORD with two or more of the following bits set: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Bit Setting </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>PBF_SOLIDCLRBRUSH </P></TD><TD VALIGN="TOP"><P>A solid (not dithered) brush was realized. </P></TD></TR><TR><TD VALIGN="TOP"><P>PBF_SOLIDMONOBRUSH </P></TD><TD VALIGN="TOP"><P>A monochrome (not colored) brush was realized. </P></TD></TR><TR><TD VALIGN="TOP"><P>PBF_SUCCESS </P></TD><TD VALIGN="TOP"><P>Brush successfully realized. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>For example, if a solid white brush was realized, for a monochrome DC the driver must return PBF_SUCCESS+PBF_SOLIDMONOBRUSH. For a color DC the driver must return PBF_SUCCESS+PBF_SOLIDCLRBRUSH. This is because a solid white brush is not dithered in either monochrome or color. </P>
<P>If, for example, a solid red brush was realized, for a monochrome DC the driver must return PBF_SUCCESS. This is because a red brush is dithered in monochrome. For a color DC, when a solid red brush is realized, the driver must return SUCCESS+PBF_SOLIDCLR. </P>
<P>Note that if the driver fails to realize the brush, it should still return FALSE. </P>
<H4><A NAME="sec1"></A>Organizing and Grouping Private DEVMODE Members </H4><P>Conceptually, a <B>DEVMODE</B> structure for a printer device has always followed the model of a public block of data, used by both the application and the driver, and a private block of data used only by the driver. The public portion of <B>DEVMODE</B> has been extended in Windows 95 to contain more information useful to the application, driver, and other system components such as the Image Color Mapper (ICM). These extensions (new structure members) are defined above. </P>
<P>This topic concentrates on how a driver writer should structure the private portion of the <B>DEVMODE</B> structure used by his or her driver. Organization of the private block of <B>DEVMODE</B> data is determined by the "stickiness" of members in the private data block. <I>Stickiness</I> in general refers to how much document formatting information can be retained when a document is printed on a different model printer than it was originally formatted for, or is printed after the printer the document was originally formatted for is physically changed (for example, an optional paper source is added or removed). </P>
<P>Each property represented by a member in the private portion of <B>DEVMODE</B> has one of two types of stickiness: </P>
<UL><LI>     <I>Document-sticky properties</I> settings can be controlled by software. Paper size, paper orientation, and margin sizes are all examples of document-sticky properties. Document-sticky properties are set with <B>AdvancedSetUpDialog</B>, <B>ExtDeviceMode</B>, and <B>ExtDeviceModePropSheet</B> function calls. </LI><LI>     <I>Printer-sticky properties</I> cannot be controlled by software. These properties can be changed only by physically changing the printer. Currently installed memory size, optional paper sources, and font cartridges are all printer-sticky properties. <B>DEVMODE</B> members that represent printer-sticky properties are configurable only by the <B>ExtDeviceModePropSheet</B> function. </LI></UL><P></P>
<P>Note that document-sticky property settings can be affected by changes in document-sticky property settings. The printer driver user interface must warn the user and give him or her a chance to change document-sticky properties when a printer-sticky property setting changes. </P>
<P>Looking at the organization of <B>DEVMODE</B>, all the properties represented in the public block are document-sticky. For Windows 95 printer drivers, the properties represented in the private block are a mixture of document-sticky and printer-sticky. In the private <B>DEVMODE</B> block, all the members representing document-sticky properties should come first, followed by all the members representing printer-sticky properties. </P>
<P>Many Windows 3.x printer driver designs make no attempt to segregate document-sticky and printer-sticky properties. As a result, applications that cache the <B>DEVMODE</B> structure as part of the document end up carrying information that the driver cannot rely on the next time the document is loaded. Drivers must ignore printer-sticky information stored with the document. </P>
<P>Organizing the private block if the <B>DEVMODE</B> structure into a layer of all document-sticky properties followed by a layer of all the printer-sticky properties gets around this problem. By setting the DEVMODE.dmDriverExtra member value to the size of the document-sticky layer, the driver can insure that applications access only document-sticky properties. The size of the <B>DEVMODE</B> structure used by the <B>DrvGetPrinterData</B> and <B>DrvSetPrinterData</B> functions the driver uses is the entire <B>DEVMODE</B> structure. </P>
<P><BR></P>
<PRE>DrvGetPrinterData
    DWORD DrvGetPrinterData(LPSTR lpPrinter, LPSTR lpProfile, 
    DWORD lpType, LPBYTE lpPrinterData, DWORD cbData, 
    LPDWORD lpNeeded)
</PRE>
<P>Retrieves printer driver information from the registry. Typically used to initialize the <B>DEVMODE</B> structure. </P>
<UL><LI>     Returns ERROR_SUCCESS, if successful; otherwise, returns one of the following error codes: ERROR_INVALID_PARAMETER or ERROR_INVALID_DATA (for the meaning of these error codes, see the winerror.h documentation). </LI></UL><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>lpPrinter</I> </P></TD><TD VALIGN="TOP"><P>Friendly name that identifies the printer device. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>lpProfile</I> </P></TD><TD VALIGN="TOP"><P>Name of profile from which to retrieve data. Note that setting this parameter to INT_PD_PRINTER_DEVMODE (which is defined in PRINT.H), the default DEVMODE is used. Private profile data can be used by passing the <I>lpProfile</I> parameter from <B>ExtDeviceMode</B> (it is non-NULL) as this parameter. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>lpType</I> </P></TD><TD VALIGN="TOP"><P>Type of data being retrieved. Use REG_BINARY for binary data (see the Win32 SDK for other registry data type descriptions). </P></TD></TR><TR><TD VALIGN="TOP"><P><I>lpPrinterData</I> </P></TD><TD VALIGN="TOP"><P>Far pointer to location at which retrieved data should be written. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>cbSize</I> </P></TD><TD VALIGN="TOP"><P>Buffer size at the location pointed to by the <I>lpPrinterData</I> parameter. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>lpNeeded</I> </P></TD><TD VALIGN="TOP"><P>Size of buffer needed for original profile data. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Printer drivers are strongly encouraged to use <B>DevSetPrinterData</B> to store all printer driver settings in the registry and to avoid using INI files wherever possible. The <B>DevGetPrinterData</B> can be used to retrieve the settings. </P>
<P>If the data has the REG_SZ, REG_MULTI_SZ, or REG_EXPAND_SZ types, then the <I>lpPrinterData</I> and <I>dwSize</I> parameter byte counts must include one for the terminating NULL character. </P></FONT></BODY></HTML>
