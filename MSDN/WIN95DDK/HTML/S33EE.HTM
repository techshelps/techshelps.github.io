<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>cCall</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>cCall </H3><P><BR></P>
<PRE>include vmm.inc

cCall Procedure
cCall Procedure, Param1, Flags
cCall Procedure, &lt;Param1, Param2, Param3, ..., ParamN&gt;, Flags
</PRE>
<P>Pushes the specified parameters on the stack and calls the specified procedure. When the procedure returns, the macro pops the parameters from the stack. </P>
<UL><LI>     The return value depends on the specified procedure. </LI></UL><P></P>
<P><I>Procedure</I> </P>
<P>Name of the procedure to call. This parameter can be either a local or public procedure, but must be defined within the virtual device making the call. </P>
<P><I>Param1, Param2, Param3, ..., ParamN</I> </P>
<P>Optional parameters to pass to the procedure. If more than one parameter is given, they must be separated with commas and enclosed in angle brackets (&lt;&gt;). </P>
<P><I>Flags</I> </P>
<P>Optional parameter, that if set to the value PRESERVE_FLAGS, causes the <B>cCall</B> macro to preserve the flags register on return from the called procedure. The <B>cCall</B> macro normally changes the contents of the flags register as part of its cleanup operations. </P>
<P>This macro pushes the parameters using the C-language calling convention, in order from right to left, then removes the parameters from the stack after the procedure returns. It also assumes that the called procedure follows the C-language register conventions, viz., that the EAX, ECX, EDX, and flags registers may be modified by the call, and that the return value is placed in the EAX register (and sometimes also the EDX register). If your procedure does not follow these rules, you should not use the <B>cCall</B> macro. </P>
<P>See also <B>VMMCall</B>, <B>VxDCall</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
