<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PQUERYHANDLER</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>PQUERYHANDLER </H3><P><BR></P>
<PRE>typedef VMMREGRET (_cdecl *PQUERYHANDLER)(PVOID pvKeyContext, 
      PVALCONTEXT pvalcontextValues, DWORD cvalcontextValues, 
      PBYTE pbData, DWORD* pcbData, DWORD dwReserved);</PRE>
<P> </P>
<P>This is the type definition for the provider, or handler function. </P>
<P><I>pvKeyContext</I> </P>
<P>This is the key context; it is an input paramater that lets the provider know which key is being queried, if this handler function handles multiple keys. </P>
<P><I>pvalcontextValues</I> </P>
<P>This is an array of <B>val_context</B> structures; one structure per value. Parts of the <B>val_context</B> structure are input parameters, and parts are output parameters - please see the comments for the <B>val_context</B> structure. </P>
<P><I>cvalcontextValues</I> </P>
<P>This is the number of <B>val_context</B> structures in the array of the previous argument; it is an input parameter. </P>
<P><I>pbData</I> </P>
<P>This is a buffer, supplied by the registry to the provider, in which the provider stores the value or values that are queried. If the registry is keeping track of the value lengths, this buffer should always be large enough. </P>
<P><I>pcbData</I> </P>
<P>A pointer to the length of the above buffer. On input, it contains the size of the available buffer. On output, it should contain the size of the buffer that is actually used / filled. </P>
<P><I>dwReserved</I> </P>
<P>Reserved. </P></FONT></BODY></HTML>
