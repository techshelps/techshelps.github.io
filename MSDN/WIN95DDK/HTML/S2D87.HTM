<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NPGetCaps</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>NPGetCaps </H3><P><BR></P>
<PRE>DWORD NPGetCaps(
  DWORD nIndex
  );
</PRE>
<P><I>nIndex</I> </P>
<P>Specifies the capability set that the caller is interested in. </P>
<UL><LI>     A bit mask indicating what services are supported within the set queried. </LI></UL><P></P>
<P>Unlike all the other calls, this function does not return an error status. Instead, the <I>nIndex</I> parameter specifies a query, and that defines the type of value returned. </P>
<P>A few of the <I>nIndex</I> values cause a constant to be returned, but in most cases the <I>nIndex</I> parameter specifies which set of services are being queried, and the return value is a bit mask indicating which services in that set are supported. A zero value would indicate that none of the services in that set are supported. If NPGetCaps is called with values that the NP does not recognize, it must return zero. This is so that features can be safely added in future releases. </P>
<P>The symbols for the valid values of <I>nIndex</I> are listed below, together with the constants defining the bits in the returned mask. The values themselves are defined in the file Netspi.h. </P>
<H4><A NAME="sec0"></A>SPI Version </H4><P>WNNC_SPEC_VERSION </P>
<P>The high and low words of the return value contain the major and minor version numbers of the WinNet API specification to which the provider conforms. </P>
<P>For this version it should return the following: </P>
<P> WNNC_SPEC_VERSION51 </P>
<H4><A NAME="sec1"></A>Provider Type and Version </H4><P>WNNC_NET_TYPE </P>
<P>Returns a <B>DWORD</B> value: the high word contains the network type, and the low word may contain a subtype. The following Net Type values are assigned: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P> WNNC_NET_MSNET </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_LANMAN </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_NETWARE </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_VINES </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_10NET </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_LOCUS </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_SUN_PC_NFS </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_LANSTEP </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_9TILES </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_LANTASTIC </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_AS400 </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_FTP_NFS </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_PATHWORKS </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_LIFENET </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_NET_POWERLAN </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Vendors working on new networks should register their network type values with Microsoft. </P>
<P>WNNC_DRIVER_VERSION </P>
<P>Returns the provider version number. </P>
<P>Note: to assist in common versioning conventions for providers, the following macro is provided: </P>
<P><BR></P>
<PRE>#define WNNC_DRIVER(major,minor) (major*WNNC_DRIVER_MAJOR1 + minor*WNNC_DRIVER_MINOR1)
</PRE>
<H4><A NAME="sec2"></A>User Information </H4><P>WNNC_USER </P>
<P>Returns a mask of: WNNC_USR_GETUSER </P>
<H4><A NAME="sec3"></A>Connections </H4><P>WNNC_CONNECTION </P>
<P>Returns a mask of: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P> WNNC_CON_ADDCONNECTION </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_CON_CANCELCONNECTION </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_CON_GETCONNECTIONS </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_CON_GETPERFORMANCE </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_CON_GETUNIVERSALNAME </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_CON_FORMATCONNECTION </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<H4><A NAME="sec4"></A>Provider Specific User Interface </H4><P>WNNC_DIALOG </P>
<P>Returns a mask of: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P> WNNC_DLG_FORMATNETWORKNAME </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_DLG_GETRESOURCEPARENT </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_DLG_GETRESOURCEINFORMATION </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<H4><A NAME="sec5"></A>Enumeration </H4><P>WNNC_ENUMERATION </P>
<P>Returns a mask of: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P> WNNC_ENUM_GLOBAL </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_ENUM_LOCAL </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_ENUM_CONTEXT </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>If one or more of these values is set, then the NP must export and support <B>NPOpenEnum</B>, <B>NPEnumResource</B>, and <B>NPCloseEnum</B>. </P>
<H4><A NAME="sec6"></A>Startup </H4><P>WNNC_START </P>
<P>Returns a value to indicate if the provider is likely to start. MPR may call this function during its startup to determine the state of the provider. For example, when MPR is trying to restore persistent connections, and a provider is not responding, it will use this to determine if it should retry and how long. A provider should return WNNC_START_WONT if it knows it will not start (for example, if it is in some unrecoverable failure mode) so MPR will not retry. Otherwise, it should either return the estimated start time in number of milliseconds, or WNNC_START_UNKNOWN to mean it doesn't know. If WNNC_START_UNKNOWN is returned, MPR will use some default time-out. If it turns out the provider has started by the time this call is issued, it can return WNNC_START_DONE. A provider should return WNNC_START_INACTIVE if it cannot access the network at the moment, but may be able to in the future (such as when the PCMCIA net card is removed from the computer, or the computer is undocked, essentially when the client is unable to run a transport). </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P> WNNC_START_WONT </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_START_INACTIVE </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_START_UNKNOWN </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_START_DONE </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<H4><A NAME="sec7"></A>Network Resource Properties </H4><P>WNNC_RESOURCE </P>
<P>Returns a mask of bit values that indicate specific behaviors of the NP and its underlying network. These behaviors are used by the MPR to provide intelligent processing for the NP. For example, if a network does not support deviceless connections, the MPR knows how to select a local when making connections. </P>
<P> WNNC_RES_VALIDLOCALDEVICE </P>
<P>These values have the following meanings: </P>
<P>WNNC_RES_VALIDLOCALDEVICE means that the NP has restrictions upon valid local device names (for example, only supporting "LPT1" to "LPT3" when the Windows 95 printing system supports more printer numbers). The NP must export <B>NPValidLocalDevice</B> if it sets this value. </P>
<H4><A NAME="sec8"></A>Authentication and Logon </H4><P>WNNC_AUTHENTICATION </P>
<P>Returns a mask of: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P> WNNC_AUTH_LOGON </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_AUTH_LOGOFF </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_AUTH_GETPOLICYPATH </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P> WNNC_AUTH_GETHOMEDIRECTORY </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P></FONT></BODY></HTML>
