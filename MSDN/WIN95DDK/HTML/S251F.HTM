<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CONFIGMG_Get_DDBs</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>CONFIGMG_Get_DDBs </H3><P><BR></P>
<PRE>CONFIGRET CONFIGMG_Get_DDBs(PPPVMMDDB pppDDB, PFARULONG pulCount, LOAD_TYPE LoadType, DEVNODE dnDevNode, ULONG ulFlags)
</PRE>
<P>Retrieves the device descriptor blocks (DDBs) of dynamically loadable VxDs for a devnode. </P>
<UL><LI>     Returns CR_SUCCESS if the function is successful. Otherwise, the return value can be CR_INVALID_API, CR_INVALID_DEVNODE, CR_INVALID_FLAG, CR_INVALID_LOAD_TYPE or CR_INVALID_POINTER. </LI></UL><P></P>
<P><I>pppDDB</I> </P>
<P>Address of a pointer that receives the address of the DDBs table. If the pppDDB is NULL when the function returns, the VxD that controls the device node specified in the <I>dnDevNode</I> where not loaded via CM_Load_DLVxDsdynamically loadable VxD. Otherwise the DDBs are stored as an array at the given address. </P>
<P><I>pulCount</I> </P>
<P>Returns the number of DDBs in the table. </P>
<P><I>LoadType</I> </P>
<P>Type of the VxD being loaded. This parameter can be one of the values listed for the <I>LoadType</I> parameter in the <B>CONFIGMG_Load_DLVxDs</B> function. </P>
<P><I>dnDevNode</I> </P>
<P>Device node identifying the dynamically loadable VxD. </P>
<P><I>ulFlags</I> </P>
<P>Must be zero. </P>
<P>See also <B>CONFIGMG_Load_DLVxDs</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
