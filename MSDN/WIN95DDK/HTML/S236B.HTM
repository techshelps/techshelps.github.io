<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Custom Property Page Providers</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Custom Property Page Providers </H3><P>A custom property page provider adds new property pages or replaces default property pages for a specific device or class. A provider can be a separate DLL or it can be combined with the class installer or the control panel applet for the device. If combined with the installer, the provider must be distinct from any properties handling provided by the <B>ClassInstall</B> function of the installer. </P>
<P>Every property page provider exports the property page enumeration function, usually named <B>EnumPropPages</B>. The Device Manager dynamicly links and calls this function just before displaying the default property sheet to give the provider a chance to add pages or replace the default pages. </P>
<P>A provider must export dialog procedures to support the property pages it adds to the default property sheet. The dialog procedures process initialize values and process user input for the property pages when the Device Manager displays the property sheet. The Device Manager uses the <B>PropertySheet</B> function to display the properties sheet, so the dialog procedures for the individual pages must be prepared to process the messages and notifications associated with this function. </P>
<H4><A NAME="sec0"></A>Property Page Enumeration Function </H4><P>When the Device Manager calls <B>EnumPropPages</B>, it passes three arguments: the address of a <B>DEVICE_INFO</B> structure, the address of a <B>AddPropSheetPageProc</B> function, and a 32-bit value. The <B>DEVICE_INFO</B> structure identifies the device or class that the user has requested properties for. The 32-bit value is used by the Device Manager to keep track of internal processing and must not be changed. </P>
<P>You use the <B>AddPropSheetPageProc</B> function to add property pages to the default property sheet. The function requires two parameters: a handle of a valid property sheet page and the supplied 32-bit value. You create a valid property sheet page and retrieve its handle by using the <B>CreatePropertySheetPage</B> function. The <B>AddPropSheetPageProc</B> function returns TRUE if it added the page, FALSE otherwise. </P>
<P>To replace one or both default property pages, you add the replacement pages using <B>AddPropSheetPageProc</B>, then set one or both of these values in the <B>Flags</B> member of the <B>DEVICE_INFO</B> structure: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>DI_GENERALPAGE_ADDED </P></TD><TD VALIGN="TOP"><P>Replaces the default general property page. </P></TD></TR><TR><TD VALIGN="TOP"><P>DI_RESOURCEPAGE_ADDED </P></TD><TD VALIGN="TOP"><P>Replaces the default resources property page. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>If you replace a default page, your replacement page must provide all the basic functions provided by that default page. If you do not replace a default page, the Device Manager uses the default page for the class or device as appropriate. </P>
<P>The <B>EnumPropPages</B> function returns TRUE to direct the Device Manager to display the property sheet or FALSE to prevent display. </P>
<H4><A NAME="sec1"></A>Property Page Dialog Procedure </H4><P>Property page dialog procedures support property pages added by a provider. The procedures must adhere to the guidelines given for property sheets in the <I>Microsoft Win32 Programmer's Reference</I>. In particular, a dialog procedure must process any WM_NOTIFY messages appropriately. </P>
<P>A property page dialog procedure should also save the address of the <B>DEVICE_INFO</B> structure sent as the <I>lParam</I> parameter with the WM_INITDIALOG message. The Device Manager sends this structure to help the dialog procedure determine the device or class. Dialog procedures typically use the <B>SetWindowLong</B> to store this value in the DWL_USER portion of the window handle, then retrieve the address using the <B>GetWindowLong</B> function on subsequent messages. </P>
<P>If a reboot or restart is necessary due to the settings provided by the user, a dialog procedure show always set an appropriate value in the <B>Flags</B> member of the <B>DEVICE_INFO</B> structure. It must <I>not</I> send a PSN_GUISTART or PSN_REBOOT notification to the property sheet dialog procedure. </P></FONT></BODY></HTML>
