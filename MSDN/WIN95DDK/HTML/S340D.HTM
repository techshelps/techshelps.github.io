<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Trace_Out</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Trace_Out </H3><P><BR></P>
<PRE>include debug.inc

Trace_Out String, nocrlf
Trace_Out String, level
</PRE>
<P>Writes the specified string to the debugging device, but continues execution. Compare the <B>Debug_Out</B> macro, which stops execution if a debugger is attached. </P>
<UL><LI>     No return value. </LI></UL><P></P>
<P><I>String</I> </P>
<P>String to display, enclosed in double quotation marks. The string can contain register placeholders in the same forms as described for the <B>Out_Debug_String</B> service. </P>
<P><I>level</I> </P>
<P>Optional symbol indicating the debugging level for which code should be generated. If the value of the Deblevel symbol is greater than or equal to level, then code is generated. Otherwise, code is not generated. The symbol can be DeblevelNormal or DeblevelMax. The default is DeblevelNormal. </P>
<P><I>nocrlf</I> </P>
<P>Optional parameter specifying that the macro should <I>not</I> append a carriage return and newline character combination to the string. If this parameter is <I>not</I> given, the macro appends the character combination by default. </P>
<P>The assembler generates code for the macro only if the DEBUG constant is defined before including the DEBUG.INC file. </P>
<P>There are additional macros <B>Trace_OutX</B>, where X is a conditional jump type, i.e., something that can follow the letter j to form a conditional jump instruction. In such case, the trace-out is performed only if the condition is satisfied. </P>
<P>The following example writes a string to the debugging device: </P>
<P><BR></P>
<PRE>Trace_Out "Element not found"
</PRE>
<P>The following example writes a string containing the value of the AX register to the debugging device if the zero flag is set: </P>
<P><BR></P>
<PRE>Trace_OutZ "AX value is #AX"
</PRE>
<P>See also <B>Out_Debug_String</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
