<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Display INF File</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Sample Display INF File </H3><P>Below is a sample documented display INF file which describes the contents of a display INF file. This corresponds to SAMPLE.INF in the display driver samples directory, which you should use as a starting point for your Windows 95 INF file. </P>
<P><BR></P>
<PRE>; INF file for Sample Win95 display driver
; Copyright 1995, Sample Company Name, Inc.
</PRE>
<P>The header should contain semicolon comments identifying the driver name, manufacturer, copyright, etc. </P>
<P><BR></P>
<PRE>[version]
Class=DISPLAY
signature="$CHICAGO$"
Provider=%Mfg%
</PRE>
<P>The [version] section should be as above. </P>
<P><BR></P>
<PRE>[DestinationDirs]
DefaultDestDir  = 11    ; LDID_SYS
Driver.Copy = 11
</PRE>
<P>The [DestinationDirs] section associates file copy sections in the INF with destination directories on the hard disk. The number "11" is used for the subdirectory WINDOWS \SYSTEM, where most display driver files are copied to. </P>
<P><BR></P>
<PRE>[SourceDisksNames]
1="Windows 95 Sample Driver Disk",,0
</PRE>
<P>The [SourceDisksNames] section provides a description of the installation disk(s) used to install the display driver files, one line per disk. Each line should have a unique disk ID value on the left hand side. Usually, display driver disks will have only one line. Change the description string so that it matches the label on your driver installation disk. </P>
<P><BR></P>
<PRE>[SourceDisksFiles]
sample.drv=1
sample.vxd=1
</PRE>
<P>The [SourceDisksFiles] section associates driver files copied by the INF file with disk ID values defined in [SourceDisksNames]. </P>
<P><BR></P>
<PRE>[Manufacturer]
%Mfg%=Mfg
</PRE>
<P>The [Manufacturer] section contains one line per manufacturer name (usually only one). The left hand side is a string identifier contained in the [Strings] section. The right hand side is the name of a section listing drivers for the manufacturer. </P>
<P><BR></P>
<PRE>[Mfg]
%Sample1.DeviceDesc%=Driver.Install, Display_Sample1
%PCI\VEN_9999&amp;DEV_9999.DeviceDesc%=Driver.Install, PCI\VEN_9999&amp;DEV_9999
</PRE>
<P>[Mfg] is an example of a driver section. Driver sections contain one line per unique device/driver combination. This example list two device types. The left hand side references string identifiers contained in the [Strings] section. The right hand side specifies the name of an install section, followed by corresponding device ID's. </P>
<P>The first line in this example is for a non-Plug and Play device (for example,. ISA or VLB adapter) which does not have a Plug and Play device ID. "Display_Sample1" is a dummy ID that is used in place of a real device ID. Dummy Ids are required for non-Plug and Play devices, so that the driver will be preserved if the user runs Windows Setup again in the future. Do not use "Display_Sample1", rather invent a dummy ID unique to your company and the driver, for example, "Display_ACME-123VLB". </P>
<P>The second line is for a PCI display adapter, with device ID "PCI\VEN_0000&amp;DEV9999". </P>
<P>Note that both devices use the same install section, Driver.Install (below). </P>
<P><BR></P>
<PRE>[Driver.Install]
CopyFiles=Driver.Copy
DelReg=Prev.DelReg
AddReg=Driver.AddReg
</PRE>
<P>[Driver.Install] is an example install section. Install sections contain lines which tell the Windows device installer how to install the driver, that is, what files to copy, which registry keys to add or delete, which INI files to modify, etc. </P>
<P>The CopyFiles line points to one or more sections that contain files that need to be copied from the driver installation disk. </P>
<P>The DelReg line points to one or more sections that contain registry keys that need to be deleted. </P>
<P>The AddReg line points to one or more sections that contain registry keys that need to be added. </P>
<P>Install sections can also contain UpdateInis and UpdateIniFields sections, but these are usually not used for Windows 95 display drivers. </P>
<P><BR></P>
<PRE>[Driver.Copy]
sample.drv
sample.vxd
</PRE>
<P>[Driver.Copy] is an example file copy section. File copy sections contain one line for each driver file to be copied from the driver disk to the hard disk. The destination of the files (for example, the WINDOWS \SYSTEM subdirectory) is specified for the section in the [DestinationDirs] section (above). </P>
<P><BR></P>
<PRE>[Prev.DelReg]
HKR,,Ver
HKR,,DevLoader
HKR,DEFAULT
HKR,MODES
HKR,CURRENT
</PRE>
<P>[Prev.DelReg] should be include "as is" in all display driver INF files. It deletes old keys and values already present in the registry if the user is changing from an old driver to a new one using this INF. </P>
<P><BR></P>
<PRE>[Driver.AddReg]
HKR,,Ver,,4.0
</PRE>
<P>[Driver.AddReg] is an example of an AddReg section for a display driver. It writes registry values used by Windows to load and configure your driver. </P>
<P>"HKR" is always the registry root value for display AddReg lines. (See the general INF documentation for an explanation of what HKR means.) </P>
<P>"Ver" should be "4.0" for Windows 95 compatible display drivers. For Windows 3.x compatible drivers, it should be "3.x". </P>
<P><BR></P>
<PRE>HKR,,DevLoader,,*vdd
</PRE>
<P>*VDD is always the Plug and Play "dev loader" for Windows 95 display drivers, so this line is required. If your driver does not use the main Windows 95 VDD (for example, if it is a Windows 3.1 version driver), then change "*vdd" to "*configmg". </P>
<P><BR></P>
<PRE>HKR,DEFAULT,Mode,,"8,640,480"
</PRE>
<P>"DEFAULT" is a subkey of the display driver software key. It contains the following values, described below: <I>drv, vdd, minivdd, cardvdd, RefreshRate, DDC, and ExtModeSwitch</I>. </P>
<P>The "Mode" value of the DEFAULT subkey specifies the default video mode that Windows Setup will use after this driver is installed. Usually, this is 640x480, 8 bits per pixel. </P>
<P><BR></P>
<PRE>HKR,DEFAULT,drv,,sample.drv
</PRE>
<P>The "drv" value specifies the main DRV file that should be loaded for the modes supported by your display driver. Usually, there is only one DRV file (for example, a DIB engine minidriver), but in some cases different DRV files may be used for different video modes, especially planar VGA modes. For example, VGA.DRV is always used for 640x480x4bpp. SUPERVGA.DRV is often used for 800x600x4bpp. The MODES subkey explains this in more detail, below. </P>
<P><BR></P>
<PRE>HKR,DEFAULT,vdd,,"*vdd,*vflatd"
</PRE>
<P>The "vdd" value specifies what should be written to the "display=" line in the [386Enh] section of SYSTEM.INI. Windows 95 drivers should always have *VDD. Minidrivers that require VFLATD should also include *vflatd here, as shown above. If your driver does not use VFLATD, then this line can have the value "*vdd". </P>
<P><BR></P>
<PRE>HKR,DEFAULT,minivdd,,sample.vxd
</PRE>
<P>The "minivdd" value specifies the mini-VDD VxD that the VDD should load for this display driver. </P>
<P><BR></P>
<PRE>HKR,DEFAULT,carddvdd,,cardsamp.vxd
</PRE>
<P>The "cardvdd" value specifies a secondary, optional mini-VDD VxD that the VDD should load, in addition to the mini-VDD. Card VDD's can add to and/or override functions supported by the mini-VDD, such as adding refresh rate support, etc. If your driver uses a card VDD, remember to include it in the [SourceDisksFiles] and file copy sections. </P>
<P><BR></P>
<PRE>HKR,DEFAULT,RefreshRate,,-1
</PRE>
<P>The "RefreshRate = -1" value is required to cause VDD to return monitor information in the <B>DISPLAYINFO</B> structure returned by <B>VDD_GetDisplayInfo</B>. Include this line if your driver/mini-VDD/card VDD needs this information to set the refresh rate. </P>
<P><BR></P>
<PRE>HKR,DEFAULT,DDC,,1
</PRE>
<P>The "DDC = 1" value is required to cause the VDD to detect VESA DDC compatible monitors during Windows start up. Include this line if your driver supports DDC compatible display adapters. </P>
<P><BR></P>
<PRE>HKR,DEFAULT,ExtModeSwitch,,0
</PRE>
<P>The "ExtModeSwitch" value controls whether the VDD will allow users to switch away from full-screen MS-DOS programs running in extended and VESA graphics modes. By default, the VDD allows switching, assuming that your mini-VDD can properly save and restore the extended mode when the user returns to the MS-DOS program. </P>
<P>If your mini-VDD does not properly save and restore extended and VESA graphics modes, then you must include this line in your INF. This will cause the VDD to just beep if the user attempts to use ALT-TAB or ALT-ENTER to switch away from a full-screen virtual machine running in an extended graphics mode. </P>
<P><BR></P>
<PRE>HKR,"MODES\4\640,480",drv,,vga.drv
HKR,"MODES\4\640,480",vdd,,*vdd
HKR,"MODES\4\800,600",drv,,supervga.drv
HKR,"MODES\4\800,600",vdd,,*vdd
</PRE>
<P>"MODES" is a subkey of the display driver software key. It contains subkeys for all of the video modes supported by your driver. Pixel depths are specified as subkeys under MODES, and resolutions as subkeys under pixel depths. For example, using REGEDIT this would appear as: </P>
<P><BR></P>
<PRE>MODES
    \8
        \640,480
        \800,600
        \1024,768
</PRE>
<P>Under the resolution subkeys, there may be optional values included to override the default DRV and VDD values specified in the DEFAULT subkey. </P>
<P>All display drivers must support 640x480, 4 bits per pixel using the standard Windows VGA driver. VGA.DRV is used to override the default DRV, and "*VDD" overrides the default VDD (since *VFLATD is not needed by VGA.DRV). </P>
<P>Optionally, drivers may support 800x600, 4 bits per pixel using the standard Windows Super VGA driver (SUPERVGA.DRV), as shown in the lines above. If this driver does not work on your display adapters, then do not include these lines in your INF. </P>
<P><BR></P>
<PRE>HKR,"MODES\8\640,480"
HKR,"MODES\8\800,600"
HKR,"MODES\8\1024,768"
HKR,"MODES\8\1152,900"
HKR,"MODES\8\1280,1024"
HKR,"MODES\16\640,480"
HKR,"MODES\16\800,600"
HKR,"MODES\16\1024,768"
HKR,"MODES\24\640,480"
HKR,"MODES\24\800,600"
HKR,"MODES\24\1024,768"
HKR,"MODES\32\640,480"
HKR,"MODES\32\800,600"
</PRE>
<P>The above lines demonstrate example modes supported by the fictional SAMPLE.DRV installed by this INF file. Add and/or remove lines as appropriate for your driver. This list should be the superset of modes supported by the driver, regardless of variations on different adapters that the DRV supports. Your driver's <B>ValidateMode</B> function will be called for each entry under the MODES subkey. If for some reason the driver cannot support one or more of these modes on the current adapter, (for example, due to video memory or DAC limitations) it should fail the <B>ValidateMode</B> call, and the modes will not be available to the user. </P>
<P><BR></P>
<PRE>[Strings]
Mfg="Sample Multimedia Visual Computer Technology Systems, Inc."
Sample1.DeviceDesc="Sample WhizKid 4000 VLB"
PCI\VEN_9999&amp;DEV_9999.DeviceDesc="Sample WhizKid 4000 PCI"
</PRE>
<P>The [Strings] section contains manufacturer and device description strings visible to users, and referenced in other sections in the INF. There should be one description per driver line in the driver section(s). </P>
<P>Note, for each Plug and Play ID, there should a line "&lt;device ID&gt;.DeviceDesc", as shown above for the PCI device. </P>
</FONT></BODY></HTML>
