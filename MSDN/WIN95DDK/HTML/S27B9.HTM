<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PortEscapeFunction</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>PortEscapeFunction </H3><P><BR></P>
<PRE>cCall   [pPortEscapeFunction], &lt;hPort, lFunc, InData, &lt;OFFSET32 OutData&gt;&gt;
or      eax, eax
jz      error_handler
</PRE>
<P>Called by <B>_VCOMM_EscapeCommFunction</B> to carry out an extended function. Uses the C calling convention. Must be callable at interrupt time. </P>
<UL><LI>     Returns TRUE if successful, FALSE otherwise. </LI></UL><P></P>
<P><I>hPort</I> </P>
<P>Address of a <B>_PORTINFORMATION</B> structure returned by the <B>PortOpen</B> function. </P>
<P><I>lFunc</I> </P>
<P>Value identifying the extended function to carry out, or DUMMY to perform no action. Common extended functions are defined in VCOMM.INC. For more information, see the <B>_VCOMM_EscapeCommFunction</B> service. Port drivers can define additional extended functions. </P>
<P><I>InData</I> </P>
<P>Function-specific 32-bit parameter. </P>
<P><I>OutData</I> </P>
<P>Address to receive function-specific data. </P>
<P>A port driver that is designed specifically to emulate a common port type should return success for extended functions that apply to the emulated port type, even if the function does not apply to the hardware used for emulation. </P>
<P>There are several predefined extended functions. Microsoft reserves the first 200 non-negative extended function values (0 through 199). Developers who create new extended functions should enumerate their values beginning with STARTNONSTESCAPES defined in VCOMM.INC. The following escapes are currently defined: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="174pt" VALIGN="TOP"><COL WIDTH="174pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Escape </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>DUMMY </P></TD><TD VALIGN="TOP"><P>This value is never used and a port driver should never receive this escape. </P></TD></TR><TR><TD VALIGN="TOP"><P>SETXOFF </P></TD><TD VALIGN="TOP"><P>Sets the XOFFReceived flag. This puts the serial driver in the XOFF state. </P></TD></TR><TR><TD VALIGN="TOP"><P>SETXON </P></TD><TD VALIGN="TOP"><P>Resets the XOFFReceived flag. This puts the serial driver in the XON state. </P></TD></TR><TR><TD VALIGN="TOP"><P>SETRTS </P></TD><TD VALIGN="TOP"><P>Sets the Ready To Send (RTS) bit in the Modem Control Register. </P></TD></TR><TR><TD VALIGN="TOP"><P>CLRRTS </P></TD><TD VALIGN="TOP"><P>Resets the Ready To Send bit in the Modem Control Register. </P></TD></TR><TR><TD VALIGN="TOP"><P>SETDTR </P></TD><TD VALIGN="TOP"><P>Sets the Data Terminal Ready (DTR) bit in the Modem Control Register. </P></TD></TR><TR><TD VALIGN="TOP"><P>CLRDTR </P></TD><TD VALIGN="TOP"><P>Resets the Data Terminal Ready (DTR) bit in the Modem Control Register. </P></TD></TR><TR><TD VALIGN="TOP"><P>RESETDEV </P></TD><TD VALIGN="TOP"><P>Asserts the RESET line on an LPT port. </P></TD></TR><TR><TD VALIGN="TOP"><P>GETLPTMAX </P></TD><TD VALIGN="TOP"><P>Returns the maximum LPT port identifier supported by the system. This value ranges from 0x80 to 0xFF, such that 0x80 corresponds to LPT1, 0x81 corresponds to LPT2, 0x82 corresponds to LPT3, and so on. </P></TD></TR><TR><TD VALIGN="TOP"><P>GETCOMMAX </P></TD><TD VALIGN="TOP"><P>Returns the maximum COM port identifier supported by the system. This value ranges from 0x00 to 0x7F, such that 0x00 corresponds to COM1, 0x01 corresponds to COM2, 0x02 corresponds to COM3, and so on. </P></TD></TR><TR><TD VALIGN="TOP"><P>GETCOMBASEIRQ </P></TD><TD VALIGN="TOP"><P>Returns the IRQ and base I/O address of the port. The IRQ value is in the upper-word of the 32-bit value and the base I/O address is in the lower-word. </P></TD></TR><TR><TD VALIGN="TOP"><P>GETCOMBASEIRQ1 </P></TD><TD VALIGN="TOP"><P>This escape is equivalent to GETCOMBASEIRQ. </P></TD></TR><TR><TD VALIGN="TOP"><P>SETBREAK </P></TD><TD VALIGN="TOP"><P>Sets the break condition. Suspends character transmission and places the data transmission line in a break state until the CLEARBREAK escape is received. </P></TD></TR><TR><TD VALIGN="TOP"><P>CLEARBREAK </P></TD><TD VALIGN="TOP"><P>Clears the break condition. Releases any BREAK clamp on the data transmission line. </P></TD></TR><TR><TD VALIGN="TOP"><P>GETPORTHANDLE </P></TD><TD VALIGN="TOP"><P>Returns the 32-bit Ring 0 handle of the port. </P></TD></TR><TR><TD VALIGN="TOP"><P>GETEXTENDEDFNADDR </P></TD><TD VALIGN="TOP"><P>. </P></TD></TR><TR><TD VALIGN="TOP"><P>CLRTIMERLOGIC </P></TD><TD VALIGN="TOP"><P>Disables the periodic notification checks. VCOMM sends this escape when it opens a port for a Win32 application. </P></TD></TR><TR><TD VALIGN="TOP"><P>GETDEVICEID </P></TD><TD VALIGN="TOP"><P>Gets the IEEE P1284 device ID for the connected peripheral device. </P></TD></TR><TR><TD VALIGN="TOP"><P>SETECPADDRESS </P></TD><TD VALIGN="TOP"><P>Sets the IEEE P1284 channel address. The IEEE P1284 specification uses a channel addressing scheme that provides 128 forward and reverse channel addresses. Channel addresses are device-specific and are defined in the specification. </P></TD></TR><TR><TD VALIGN="TOP"><P>SETUPDATETIMEADDR </P></TD><TD VALIGN="TOP"><P>VCOMM uses this escape to set a pointer to a DWORD that the port driver uses to store the most recently updated system time each time new character(s) arrive at the port. </P></TD></TR><TR><TD VALIGN="TOP"><P>IGNOREERRORONREADS </P></TD><TD VALIGN="TOP"><P>Normally the <B>PortRead</B> function returns an error if an error condition normally exists. This escape sets the IgnoreCommError miscellaneous flag so the <B>PortRead</B> function on the serial port does not check for an existing error condition before transferring characters. </P></TD></TR><TR><TD VALIGN="TOP"><P>ENABLETIMERLOGIC </P></TD><TD VALIGN="TOP"><P>Enables periodic notification checks. This escape is useful when notification is enabled and non-zero trigger level is implemented. Checking for notifications periodically allows an application to be notified of incoming characters in a timely manner even when the number of received characters is below the trigger level. </P></TD></TR><TR><TD VALIGN="TOP"><P>IGNORESELECT </P></TD><TD VALIGN="TOP"><P>Sets the IgnoreSelect bit in the LPT driver flags. The select bit is not set under normal circumstances, but the select bit is incorrectly implemented on some parallel devices. This escape allows an LPT port driver to be consistent with the DOS/BIOS on some machines. </P></TD></TR><TR><TD VALIGN="TOP"><P>STARTNONSTDESCAPES </P></TD><TD VALIGN="TOP"><P>Developer-assigned port escapes should begin with this value. </P></TD></TR><TR><TD VALIGN="TOP"><P>PEEKCHAR </P></TD><TD VALIGN="TOP"><P>Returns the current character in the input queue if the queue is non-empty; returns zero otherwise. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The port drivers Microsoft supplies with Windows 95 (Serial.vxd and Lpt.vxd) each support a subset of the escapes listed above: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="174pt" VALIGN="TOP"><COL WIDTH="174pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Port Driver </B></P></TD><TD VALIGN="TOP"><P><B>Supported Escapes </B></P></TD></TR><TR><TD VALIGN="TOP"><P>Serial.vxd </P></TD><TD VALIGN="TOP"><P>SETXOFF, SETXON, SETRTS, CLRRTS, SETDTR, CLRDTR, GETCOMBASEIRQ, GETCOMBASEIRQ1, SETBREAK, CLEARBREAK, GETPORTHANDLE, CLRTIMERLOGIC, ENABLETIMERLOGIC, SETUPDATETIMEADDR, IGNOREERRORONREADS, PEEKCHAR. </P></TD></TR><TR><TD VALIGN="TOP"><P>Lpt.vxd </P></TD><TD VALIGN="TOP"><P>RESETDEV, GETDEVICEID, SETECPADDRESS. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>See also <B>_PORTDATA</B>, <B>_PORTINFORMATION</B>, <B>_VCOMM_EscapeCommFunction</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
