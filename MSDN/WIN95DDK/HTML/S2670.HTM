<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StretchBlt</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>StretchBlt </H3><P><BR></P>
<PRE>WORD StretchBlt(LPPDEVICE lpDestDev, WORD wDestX, WORD wDestY, 
    WORD wDestXext, WORD wDestYext, LPPDEVICE lpSrcDev, WORD wSrcX, 
    WORD wSrcY, WORD wSrcXext, WORD wSrcYext, DWORD Rop3, 
    LPBRUSH lpPBrush, LPDRAWMODE lpDrawMode, LPRECT lpClip);
</PRE>
<P>Transfers bits from a source-device rectangle to a destination-device rectangle. The function stretches or compresses the source bits to fit the destination rectangle. The transfer is controlled by a ternary raster operation value that specifies how corresponding bits from the source, destination, and pattern in a brush are combined to form the final bits in the destination. </P>
<UL><LI>     Returns one of these values: </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>1 </P></TD><TD VALIGN="TOP"><P>Success. </P></TD></TR><TR><TD VALIGN="TOP"><P>0 </P></TD><TD VALIGN="TOP"><P>Error. </P></TD></TR><TR><TD VALIGN="TOP"><P>-1 </P></TD><TD VALIGN="TOP"><P>GDI should carry out the operation. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P><I>lpDestDev</I> </P>
<P>Address of a <B>PDEVICE</B> or <B>PBITMAP</B> structure that specifies the destination device or bitmap. </P>
<P><I>wDestX </I>and <I>wDest</I>Y </P>
<P>x- and y<I>-</I>coordinate of the upper-left corner of the destination rectangle. </P>
<P><I>wDestXext </I>and <I>wDest</I>Y<I>ext</I> </P>
<P>Width and height, in device units, of the destination rectangle. </P>
<P><I>lpSrcDev</I> </P>
<P>Address of a <B>PDEVICE</B> or <B>PBITMAP</B> structure that specifies the source device or bitmap. </P>
<P><I>wSrcX </I>and <I>wSrc</I>Y </P>
<P>x- and y<I>-</I>coordinate of the upper-left corner of the source rectangle. </P>
<P><I>wSrcXext </I>and <I>wSrc</I>Y<I>ext</I> </P>
<P>Width and height, in device units, of the source rectangle. </P>
<P><I>Rop3</I> </P>
<P>Ternary raster operation value. This value determines how <B>StretchBlt</B> combines corresponding pixels from the source, destination, and brush that is used to produce the final pixels in the destination rectangle. This parameter can be any one of 256 ternary raster-operation values; the following lists the most common values. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>SRCCOPY (0x00CC0020) </P></TD><TD VALIGN="TOP"><P>Copies source bits to the destination rectangle: Destination = Source. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRCPAINT (0x00EE0086) </P></TD><TD VALIGN="TOP"><P>Combines the source and destination bits using the bitwise OR operator: </P>
<P>Destination = Source | Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRCAND (0x008800C6) </P></TD><TD VALIGN="TOP"><P>Combines the source and destination bits using the bitwise AND operator: </P>
<P>Destination = Source &amp; Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRCINVERT (0x00660046) </P></TD><TD VALIGN="TOP"><P>Combines the source and destination bits using the bitwise exclusive OR operator: </P>
<P>Destination = Source ^ Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRCERASE (0x00440328) </P></TD><TD VALIGN="TOP"><P>Combines the source and inverse of destination bits using the bitwise AND operator: </P>
<P>Destination = Source &amp; (~ Destination). </P></TD></TR><TR><TD VALIGN="TOP"><P>NOTSRCCOPY (0x00330008) </P></TD><TD VALIGN="TOP"><P>Copies the inverse of the destination bits to the destination rectangle: </P>
<P>Destination = ~ Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>NOTSRCERASE (0x001100A6) </P></TD><TD VALIGN="TOP"><P>Combines the inverse of the source and destination bits using the bitwise AND operator: </P>
<P>Destination = (~ Source) &amp; (~ Destination). </P></TD></TR><TR><TD VALIGN="TOP"><P>MERGECOPY (0x00C000CA) </P></TD><TD VALIGN="TOP"><P>Combines the source and brush bits using the bitwise AND operator: </P>
<P>Destination = Source &amp; Pattern. </P></TD></TR><TR><TD VALIGN="TOP"><P>MERGEPAINT (0x00BB0226) </P></TD><TD VALIGN="TOP"><P>Combines the destination and inverse of the source bits using the bitwise OR operator: </P>
<P>Destination = (~ Source) | Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>PATCOPY (0x00F00021) </P></TD><TD VALIGN="TOP"><P>Copies the brush bits to the destination rectangle: </P>
<P>Destination = Pattern. </P></TD></TR><TR><TD VALIGN="TOP"><P>PATPAINT (0x00FB0A09) </P></TD><TD VALIGN="TOP"><P>Combines the destination, pattern, and the inverse of source bits using the bitwise OR operator: </P>
<P>Destination = (~ Source) | Pattern | Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>PATINVERT (0x005A0049) </P></TD><TD VALIGN="TOP"><P>Combines the pattern and destination bits using the bitwise exclusive OR operator: </P>
<P>Destination = Pattern ^ Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>DSTINVERT (0x00550009) </P></TD><TD VALIGN="TOP"><P>Copies the inverse of the destination bits: </P>
<P>Destination = ~ Destination. </P></TD></TR><TR><TD VALIGN="TOP"><P>BLACKNESS (0x00000042) </P></TD><TD VALIGN="TOP"><P>Set all destination bits to black. </P></TD></TR><TR><TD VALIGN="TOP"><P>WHITENESS (0x00FF0062) </P></TD><TD VALIGN="TOP"><P>Set all bits to white. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>lpPBrush</I> </P>
<P>Address of a <B>PBRUSH</B> structure that specifies a physical brush. <B>StretchBlt</B> uses this brush only if <I>Rop3</I> specifies a ternary-raster operation that requires the brush that is used to be combined with source or destination or both. </P>
<P><I>lpDrawMode</I> </P>
<P>Address of a <B>DRAWMODE</B> structure that specifies the color information <B>StretchBlt</B> needs to determine patterned brush colors and to carry color conversions and transparent copy operations. </P>
<P><I>lpClip</I> </P>
<P>Address of a <B>RECT</B> structure that specifies the clipping rectangle (in destination-device units). </P>
<P>The export ordinal for this function is 27. </P>
<P>A graphics device driver must export the <B>StretchBlt</B> function if the RC_STRETCHBLT value is set in the <B>dpRaster</B> member of the <B>GDIINFO</B> structure. </P>
<P>Graphics device drivers that support some <B>StretchBlt</B> operations, but not others, can return -1 to direct GDI to carry out the unsupported operations. This also applies to operations in which the <B>StretchBlt</B> function can affect the final output, such as when <B>StretchBlt</B> compresses a bitmap to fit a rectangle in a monochrome bitmap. Although the <B>StretchBlt</B> function must use the current bitmap-stretching mode when compressing or stretching bitmaps, GDI does not make the current mode available to drivers. In such cases, the function should assume that the current mode is COLORONCOLOR or it should return -1 to direct GDI use the proper mode when compressing bitmaps. </P>
<P>The <I>lpDestDev</I> and <I>lpSrcDev</I> parameters can specify the same device that is transferring bits from one part of a device to another is a valid operation. If the source and destination rectangle overlap, <B>StretchBlt</B> transfers bits carefully so that the transfer does not inadvertently overwrite source bits before they have been transferred to the destination. </P>
<P>The <I>Rop3</I> parameter specifies whether bits from the source, destination, and brush are used in the transfer. If the ternary raster operation specified by <I>Rop3</I> does not include the source, <B>StretchBlt</B> ignores the source bits. If it does not include the destination, <B>StretchBlt</B> replaces the destination bits without using them to form the final bits. </P>
<P>If <I>Rop3</I> does not include the brush, <B>StretchBlt</B> ignores the brush. If <I>Rop3</I> includes the brush, <B>StretchBlt</B> must determine whether the brush is solid or patterned (that is, has an associated bitmap). If the brush has a bitmap, <B>StretchBlt</B> must combine the corresponding bits of the bitmap with the source and destination bits (as specified by the raster operation) to form the final destination bits. </P>
<P>If the source and bitmap associated with the brush do not have the same color format as the destination, <B>StretchBlt</B> must convert the source and brush bitmap to the destination's color format before transferring bits. <B>StretchBlt</B> uses the text (foreground) and background colors specified by the <I>lpDrawMode</I> parameter to convert colors. </P>
<P>To convert a monochrome bitmap to a color bitmap, <B>StretchBlt</B> converts white bits (1) to the background color and converts black bits (0) to the text (foreground) color. </P>
<P>To convert a color bitmap to a monochrome bitmap, <B>StretchBlt</B> converts all pixels that match the background color to white (1), and converts all other pixels to black (0). </P>
<P>In some device drivers, <B>StretchBlt</B> must check the <B>bkMode</B> member of the <I>lpDrawMode</I> parameter as well as the <I>Rop3</I> parameter to determine how to carry out the transfer. If the <B>bkMode</B> member specifies the background mode TRANSPARENT1, <B>StretchBlt</B> must not transfer source and brush bits that have the same color as the destination's background color (as specified by the <B>bkColor</B> member of <I>lpDrawMode</I>). In other words, the corresponding destination bits must be left unchanged. Other background modes do not affect the transfer. Only device drivers that have set the C1_TRANSPARENT value in the <B>dpCaps1</B> member of the <B>GDIINFO</B> structure are required to check the background mode. </P>
<P>See also <B>PDEVICE</B>, <B>PBITMAP</B>, <B>DRAWMODE</B>, <B>RECT</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
