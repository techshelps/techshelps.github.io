<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cursors</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Cursors </H3><P>The USER module requires all display drivers to provide cursor support. A display driver must provide the following functions. Note that the DIB engine provides cursor support and that minidrivers may forward these calls to the DIB engine. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Function </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>CheckCursor</B> </P></TD><TD VALIGN="TOP"><P>Draws the cursor if drawing is not disabled. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>InquireCursor</B> </P></TD><TD VALIGN="TOP"><P>Retrieves information about the cursor. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>MoveCursor</B> </P></TD><TD VALIGN="TOP"><P>Moves the cursor to a specified position on the display. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>SetCursor</B> </P></TD><TD VALIGN="TOP"><P>Sets the cursor shape. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>When Windows first starts, USER calls the <B>InquireCursor</B> function to retrieve information about the cursor. It then sets a system timer to call the <B>CheckCursor</B> function on each timer interrupt and enables the mouse driver, allowing the Windows mouse-event routine to call <B>MoveCursor</B> at each mouse interrupt occurrence. USER and Windows applications subsequently set the shape of the cursor using <B>SetCursor</B>. </P>
<P>Because USER calls <B>MoveCursor</B> on each mouse interrupt, <B>MoveCursor</B> should set a semaphore to prevent the function from being called before it can complete the current call. The function should set the semaphore using a noninterruptable instruction, such as the <B>bts</B> instruction. Once the semaphore is set, <B>MoveCursor</B> should retrieve the <I>x</I> and <I>y</I> coordinates and draw the cursor in the new position. When finished, <B>MoveCursor</B> should clear the flag with a non-interruptable instruction such as <B>and</B>. Whenever <B>MoveCursor</B> is called, it should check this flag before continuing the request. </P>
<P>The <B>CheckCursor</B> function is called on each timer interrupt. The function should determine whether the cursor needs redrawing and whether drawing is enabled. If so, the function should redraw the cursor. </P>
<P>For displays that do not have a hardware cursor, the display driver should exclude the cursor from the screen before carrying out drawing operations in functions such as <B>BitBlt</B>, <B>Output</B>, and <B>ExtTextOut</B>. The driver should check the current <I>x</I> and <I>y</I> coordinates and exclude the cursor if any part of the cursor lies within the drawing region, as specified in the following: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Operation </B></P></TD><TD VALIGN="TOP"><P><B>Region </B></P></TD></TR><TR><TD VALIGN="TOP"><P>Bit-block transfer </P></TD><TD VALIGN="TOP"><P>Destination rectangle </P></TD></TR><TR><TD VALIGN="TOP"><P>Ellipse </P></TD><TD VALIGN="TOP"><P>Bounding rectangle </P></TD></TR><TR><TD VALIGN="TOP"><P>Other line drawing </P></TD><TD VALIGN="TOP"><P>Bounding rectangle </P></TD></TR><TR><TD VALIGN="TOP"><P>Polygon </P></TD><TD VALIGN="TOP"><P>Clip rectangle </P></TD></TR><TR><TD VALIGN="TOP"><P>Polyline </P></TD><TD VALIGN="TOP"><P>Clip rectangle </P></TD></TR><TR><TD VALIGN="TOP"><P>Scan line </P></TD><TD VALIGN="TOP"><P>Whole scan line </P></TD></TR><TR><TD VALIGN="TOP"><P>Text </P></TD><TD VALIGN="TOP"><P>Bounding rectangle and/or opaquing rectangle </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P></FONT></BODY></HTML>
