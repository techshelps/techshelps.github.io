<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cancelling Events</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Cancelling Events </H3><P>Services whose names are of the form Cancel_XX_Event must be used only to cancel events scheduled by the corresponding Schedule_XX_Event or Call_XX_Event service. It is an error to pass (for example) a thread event handle to Cancel_VM_Event. </P>
<P>Services which cancel events also allow zero to be passed as the event handle, which is simply ignored. The standard paradigm for scheduling, processing, and cancelling events is as follows: </P>
<P>Scheduling the event: </P>
<P><BR></P>
<PRE>mov         esi, OFFSET32 MyEvent
VMMcall Schedule_Global_Event
mov     hMyEvent, esi            ; Save handle for cancellation
</PRE>
<P>Processing the event: </P>
<P><BR></P>
<PRE>BeginProc MyEvent
mov     hMyEvent, 0   ; VERY FIRST THING is
                      ; to zero out the handle
;   .
;   .                   Do other event stuff
;   .
ret                   ; Finished with the event
EndProc MyEvent
</PRE>
<P>Cancelling the event: </P>
<P><BR></P>
<PRE>xor      esi, esi             ; Atomically set hMyEvent to 0
xchg     hMyEvent, esi        ; and retrieve previous value
VMMcall  Cancel_Global_Event  ; Cancel if still outstanding
</PRE></FONT></BODY></HTML>
