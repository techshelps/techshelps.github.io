<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the System Debugger</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Using the System Debugger </H2><P>There are many situations in which the WDEB386 debugger is the best or even the only debugger you should use. For example, you might use WDEB386 to diagnose problems such as the following: </P>
<UL><LI>     Tracing through low-level code </LI><LI>     Viewing virtual/linear/physical memory </LI><LI>     Viewing advanced 386 processor data, such as the GDT, LDT, IDT, and all of the PMODE registers </LI><LI>     Tracing hardware interrupt handlers </LI><LI>     Tracing terminate-and-stay-resident (TSR) programs, or MS-DOS device drivers </LI><LI>     Displaying the status of virtual machines (VMs) </LI><LI>     Monitoring all interrupts and exceptions </LI><LI>     Developing and debugging virtual devices (VxDs) </LI></UL><P></P>
<P>This section gives information about how to use WDEB386 commands and features. </P></FONT></BODY></HTML>
