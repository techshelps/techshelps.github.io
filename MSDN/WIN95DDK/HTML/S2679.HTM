<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DRAWMODE</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>DRAWMODE </H3><P><BR></P>
<PRE>typedef struct tagDRAWMODE {
  short    Rop2;           // see below
  short    bkMode;         // see below
  unsigned long  bkColor;        // see below
  unsigned long  TextColor;      // see below
  short    TBreakExtra;    // see below
  short    BreakExtra;     // see below
  short    BreakErr;       // see below
  short    BreakRem;       // see below
  short    BreakCount;     // see below
  short    CharExtra;      // see below
  unsigned long  LbkColor;       // see below
  unsigned long  LTextColor;     // see below
  DWORD    ICMCXform;      // see below
  short    StretchBltMode; // see below
  DWORD    eMiterLimit;    // see below
} DRAWMODE;
</PRE>
<P>Contains information used to draw lines, fill interiors, and write text. </P>
<P><B>Rop2</B> </P>
<P>Binary-raster operation value. The value, in the range 1 to 16, determines how to combine source and destination colors. Can be one of these values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>R2_BLACK (1) </P></TD><TD VALIGN="TOP"><P>Black: 0. </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_NOTMERGEPEN (2) </P></TD><TD VALIGN="TOP"><P>Inverse of the bitwise OR of the source and destination colors: NOT (Source OR Dest). </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_MASKNOTPEN (3) </P></TD><TD VALIGN="TOP"><P>Bitwise AND of the destination and the inverse of the source: Dest AND (NOT Source). </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_NOTCOPYPEN (4) </P></TD><TD VALIGN="TOP"><P>Inverse of the source color: NOT Source. </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_MASKPENNOT (5) </P></TD><TD VALIGN="TOP"><P>Bitwise AND of the source and the inverse of the destination: Source AND (NOT Dest). </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_NOT (6) </P></TD><TD VALIGN="TOP"><P>Inverse of the destination color: NOT Dest. </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_XORPEN (7) </P></TD><TD VALIGN="TOP"><P>Bitwise exclusive OR of the destination and source: Dest XOR Source. </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_NOTMASKPEN (8) </P></TD><TD VALIGN="TOP"><P>Inverse of the bitwise AND of the destination and source colors: NOT (Dest AND Source). </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_MASKPEN 9 </P></TD><TD VALIGN="TOP"><P>Bitwise AND of the destination and source colors: Dest AND Source. </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_NOTXORPEN (10) </P></TD><TD VALIGN="TOP"><P>Inverse of the bitwise exclusive OR of the destination and source colors: NOT (Dest XOR Source). </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_NOP 11 </P></TD><TD VALIGN="TOP"><P>Destination color: Dest. </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_MERGENOTPEN (12) </P></TD><TD VALIGN="TOP"><P>Bitwise OR of the destination and the inverse of the source: Dest AND (NOT Source). </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_COPYPEN (13) </P></TD><TD VALIGN="TOP"><P>Source color: Source. </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_MERGEPENNOT (14) </P></TD><TD VALIGN="TOP"><P>Bitwise OR of the source and the inverse of the destination: Source OR (NOT Dest). </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_MERGEPEN (15) </P></TD><TD VALIGN="TOP"><P>Bitwise OR of the source and the destination: Source OR Dest. </P></TD></TR><TR><TD VALIGN="TOP"><P>R2_WHITE (16) </P></TD><TD VALIGN="TOP"><P>White: 1. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>bkMode</B> </P>
<P>Background mode for styled lines, hatched brushes, brushes used for interiors and scan lines, bitmaps, and text. This member can be one of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>BKMODE_TRANSPARENT (1) Also defined as TRANSPARENT </P></TD><TD VALIGN="TOP"><P>Leaves destination background unchanged. </P></TD></TR><TR><TD VALIGN="TOP"><P>BKMODE_OPAQUE (2) Also defined as OPAQUE </P></TD><TD VALIGN="TOP"><P>Replaces destination background with the color specified by the <B>bkColor</B> member. </P></TD></TR><TR><TD VALIGN="TOP"><P>BKMODE_LEVEL1 (3) </P></TD><TD VALIGN="TOP"><P>Use level 1 transparent anti-aliasing. A 1 in the glyph bitmap means that the display driver should blend the color specified in the <B>TextColor</B> member with the current pixel's color. Level 1 is a 25% blend. The blend should be done on the brightness, not the RGB values, and so it must be gamma-corrected. </P></TD></TR><TR><TD VALIGN="TOP"><P>BKMODE_LEVEL2 (4) </P></TD><TD VALIGN="TOP"><P>Use level 2 transparent anti-aliasing. A 1 in the glyph bitmap means that the display driver should blend the color specified in the <B>TextColor</B> member with the current pixel's color. Level 2 is a 50% blend. The blend should be done on the brightness, not the RGB values, and so it must be gamma-corrected. </P></TD></TR><TR><TD VALIGN="TOP"><P>BKMODE_LEVEL3 (5) </P></TD><TD VALIGN="TOP"><P>Use level 3 transparent anti-aliasing. A 1 in the glyph bitmap means that the display driver should blend the color specified in the <B>TextColor</B> member with the current pixel's color. Level 3 is a 75% blend. The blend should be done on the brightness, not the RGB values, and so it must be gamma-corrected. </P></TD></TR><TR><TD VALIGN="TOP"><P>BKMODE_TRANSLATE (6) </P></TD><TD VALIGN="TOP"><P>For 8bpp palettized surfaces only. The <B>TextColor</B> member is a far pointer to a byte array that is used to translate the existing pixel to a new pixel value. Use the current pixel byte as an index into the table to get the pixel's new value. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>bkColor</B> </P>
<P>Physical color value that specifies the background color. </P>
<P><B>TextColor</B> </P>
<P>Physical color value that specifies the text (foreground) color. </P>
<P><B>TBreakExtra</B> </P>
<P>Total amount of space, in pixels, to add to the break characters in a line of text. <B>TBreakExtra</B> is set to zero if no justification is required. </P>
<P><B>BreakExtra</B> </P>
<P>Amount of space, in pixels, to add to each break character in a line of text. This value is equal to <B>TBreakExtra</B> divided by <B>BreakCount</B>. </P>
<P><B>BreakErr</B> </P>
<P>Running error term: the amount of space, in pixels, not yet added to break characters in a line of text. This member is used in conjunction with the <B>BreakRem</B> member to determine which break characters receive the additional pixels specified by <B>BreakRem</B>. Initially, <B>BreakErr</B> is set to (<B>BreakCount</B>/2)+1. </P>
<P><B>BreakRem</B> </P>
<P>Amount of space, in pixels, to add to one or more break characters in a line of text. This space is in addition to any extra space specified by the <B>BreakExtra</B> member and is intended to be distributed evenly across the line. The <B>BreakRem</B> value is equal to the remainder after dividing <B>TBreakExtra</B> by <B>BreakCount</B>. </P>
<P><B>BreakCount</B> </P>
<P>Number of break characters in a line of text. If the <B>TBreakExtra</B> member is not zero, each break character must be drawn wider than its normal width. The <B>BreakExtra</B> member specifies the extra width, in pixels,. The <B>BreakRem</B> member may also specify additional pixels for one or more break characters. </P>
<P><B>CharExtra</B> </P>
<P>Amount of space, in pixels, to add between characters in a line of text. </P>
<P><B>LbkColor</B> </P>
<P>A <B>COLORREF</B> value that specifies the logical background color. </P>
<P><B>LTextColor</B> </P>
<P>A <B>COLORREF</B> value that specifies the logical text (foreground) color. </P>
<P><B>ICMCXform</B> </P>
<P>Transformation for image color matching. A color transform links an input color space to the device output color space. This field is used by drivers whenever a DIB is to be processed from GDI to the device, as in <B>SetDIBitsToDevice</B>, <B>SetDIBits</B>, and any other similar DIB function calls. </P>
<P><B>StretchBltMode</B> </P>
<P>StretchBlt mode value. Can be one of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>STRETCH_ANDSCANS (1) </P></TD><TD VALIGN="TOP"><P>Uses the AND operator to combine eliminated lines with the remaining lines. This mode preserves black pixels at the expense of colored or white pixels. It is the default mode. Also defined as SBM_BLACKONWHITE. </P></TD></TR><TR><TD VALIGN="TOP"><P>STRETCH_ORSCANS (2) </P></TD><TD VALIGN="TOP"><P>Uses the OR operator to combine eliminated lines with the remaining lines. This mode preserves colored or white pixels at the expense of black pixels. Also defined as SBM_WHITEONBLACK. </P></TD></TR><TR><TD VALIGN="TOP"><P>STRETCH_DELETESCANS (3) </P></TD><TD VALIGN="TOP"><P>Deletes the eliminated lines. Information in the eliminated lines is not preserved. Also defined as SBM_COLORONCOLOR. </P></TD></TR><TR><TD VALIGN="TOP"><P>STRETCH_HALFTONE (4) </P></TD><TD VALIGN="TOP"><P>Maps pixels from the source rectangle into blocks of pixels in the destination rectangle. The average color over the destination block of pixels approximates the color of the source pixels. Also defined as SBM_HALFTONE. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>eMiterLimit</B> </P>
<P>Miter limit value. The miter length is defined as the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls on the outside of the join. The miter limit is the maximum allowed ratio of the miter length to the line width. </P>
<P>See also <B>Output</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
