<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INPUTCONTEXT</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>INPUTCONTEXT </H3><P><BR></P>
<PRE>typedef struct tagINPUTCONTEXT {
    HWND   hWnd;
    BOOL   fOpen;
    POINT  ptStatusWndPos;
    POINT  ptSoftKbdPos;
    DWORD  fdwConversion;
    DWORD  fdwSentence;
    union {
        LOGFONTA  A;
        LOGFONTW  W;
    } lfFont;
    COMPOSITIONFORM  cfCompForm;
    CANDIDATEFORM    cfCandForm[4];
    HIMCC  hCompStr;
    HIMCC  hCandInfo;
    HIMCC  hGuideLine
    HIMCC  hPrivate; 
    DWORD  dwNumMsgBuf;
    HIMCC  hMsgBuf;
    DWORD  fdwInit
    DWORD  dwReserve[3];
} INPUTCONTEXT;  
</PRE>
<P><B>hWnd</B> </P>
<P>Handle of window that uses the input context. If the input context is shared, this must be the handle of the active window and will be reset by <B>ImmSetActiveContext</B>. </P>
<P><B>fOpen</B> </P>
<P>Present status of the opened or closed IME. </P>
<P><B>ptStatusWndPos</B> </P>
<P>Position of the status window. </P>
<P><B>ptSoftKbdPos</B> </P>
<P>Position of the soft keyboard. </P>
<P><B>fdwConversion</B> </P>
<P>Conversion mode used by the IME composition engine. </P>
<P><B>fdwSentence</B> </P>
<P>Sentence mode used by the IME composition engine. </P>
<P><B>lfFont</B> </P>
<P><B>LOGFONT</B> structure used by the IME user interface to draw the composition string. </P>
<P><B>cfCompForm</B> </P>
<P><B>COMPOSITIONFORM</B> structure used by the IME user interface to create the composition window. </P>
<P><B>cfCandForm[4]</B> </P>
<P><B>CANDIDATEFORM</B> structures used by the IME user interface to create the candidate windows. This IMC supports 4 candidate forms. </P>
<P><B>hCompStr</B> </P>
<P>Memory handle that points to the <B>COMPOSITIONSTR</B> structure. This handle is available when there is the composition string. </P>
<P><B>hCandInfo</B> </P>
<P>Handle of a memory block that contains the <B>CANDIDATEINFO</B> structure and <B>CANDIDATELIST</B> structures. This handle is available when there are the candidate strings. </P>
<P><B>hGuideLine</B> </P>
<P>Handle of a memory block that contains the <B>GUIDELINE</B> structure. This handle is available when there is the guideline information. </P>
<P><B>hPrivate</B> </P>
<P>Handle of a memory block used by IME for its private date area. </P>
<P><B>dwNumMsgBuf</B> </P>
<P>Number of messages stored in <B>hMsgBuf</B>. </P>
<P><B>hMsgBuf</B> </P>
<P>Handle of the memory block that stores the messages. The format of this memory block is [Message1] [wParam1] [lParam1] {[Message2] [wParam2] [lParam2]{...{...{...}}}}. All values are double words. </P>
<P><B>fdwInit</B> </P>
<P>Initialize flag. When IME initializes the members of the <B>INPUTCONTEXT</B> structure, IME must set the bits of the member indicated by this flag. It can be a combination of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>The bit of fdwInit </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>INIT_STATUSWNDPOS </P></TD><TD VALIGN="TOP"><P>Initialized <B>ptStatusWndPos</B> </P></TD></TR><TR><TD VALIGN="TOP"><P>INIT_CONVERSION </P></TD><TD VALIGN="TOP"><P>Initialized <B>fdwConversion</B> </P></TD></TR><TR><TD VALIGN="TOP"><P>INIT_SENTENCE </P></TD><TD VALIGN="TOP"><P>Initialized <B>fdwSentence</B> </P></TD></TR><TR><TD VALIGN="TOP"><P>INIT_LOGFONT </P></TD><TD VALIGN="TOP"><P>Initialized <B>lfFont</B> </P></TD></TR><TR><TD VALIGN="TOP"><P>INIT_COMPFORM </P></TD><TD VALIGN="TOP"><P>Initialized <B>cfCompForm</B> </P></TD></TR><TR><TD VALIGN="TOP"><P>INIT_SOFTKBDPOS </P></TD><TD VALIGN="TOP"><P>initialized <B>ptSoftKbdPos</B> </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>dwReserve[3]</B> </P>
<P>Reserved; must be zero. </P>
<P>When calling <B>ImeToAsciiEx</B>, IME can generate the messages into the <I>lpdwTransKey</I> buffer, but when IME needs generate the messages to the applications out of <B>ImeToAsciiEx</B>, IME can store the messages in <B>hMsgBuf</B> and call <B>ImmGenerateMessage</B>, which sends the messages in <B>hMsgBuf</B> to the application. </P>
<P></P>
<P></P></FONT></BODY></HTML>
