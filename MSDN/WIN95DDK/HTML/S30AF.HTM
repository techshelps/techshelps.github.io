<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_Ioctl16Drive</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_Ioctl16Drive </H3><P><BR></P>
<PRE>FS_Ioctl16Drive(
 PIOREQ pir
 )
</PRE>
<P>All ioctl operations are performed through FS_Ioctl16Drive. This routine handles int 21h function 44h. </P>
<P><I>ir_rh</I> </P>
<P>Supplies the volume handle for the disk resource. </P>
<P><I>ir_flags</I> </P>
<P>Supplies the ioctl sub-function. The sub-function numbers are the same as the ioctl sub-functions defined in DOS. </P>
<P><I>ir_options</I> </P>
<P>Supplies special options for the ioctl operation. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Ioctl Options:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>IOCTL_PKT_LINEAR_ADDRESS</B> </P></TD><TD VALIGN="TOP"><P>This flag specifies that the ioctl parameter packet's address should not be picked up from the client registers, which is the default. In this case, the linear address of the packet is passed in ir_data. Any pointers in the packet have been resolved to be normal V86 addresses. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_cregptr</I> </P>
<P>Supplies a pointer to the client register structure. The FSD picks up all its parameters directly from the client registers. The only exception is when the IOCTL_PKT_LINEAR_ADDRESS option is specified. </P>
<P><I>ir_data</I> </P>
<P>Supplies the linear address of the ioctl packet if the IOCTL_PKT_LINEAR_ADDRESS flag is specified. </P>
<P><I>ir_user</I> </P>
<P>Supplies user id for this request. </P>
<P><I>ir_pid</I> </P>
<P>Supplies process id for this request. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <I>ir_error</I> </P></TD><TD VALIGN="TOP"><P>Returns status of the operation ( 0 if no error, errorcode otherwise ). </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_cregptr</I> </P></TD><TD VALIGN="TOP"><P>Returns the appropriate register values for the corresponding ioctl. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>In most cases, the FSD would just pass this request down to the driver. For some requests, it might want to look at the requests, so that it can flush its cache for instance. There are some ioctl requests that the FSD might have to process on its own e.g. Get/Set Media Id. Except for some cases, the IFS manager usually does not translate any of the pointers that are passed in the registers. It is the responsibility of the FSD or the driver that handles the ioctl request to perform all pointer translations. </P>
<P></P>
<P></P></FONT></BODY></HTML>
