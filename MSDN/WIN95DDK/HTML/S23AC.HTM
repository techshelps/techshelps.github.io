<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INSTALLWIZARDDATA</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>INSTALLWIZARDDATA </H3><P><BR></P>
<PRE>typedef struct {
    UINT cbSize;
    LPDEVICE_INFO lpdiOriginal;
    LPDEVICE_INFO lpdiSelected;
    DWORD dwFlags;
    LPVOID lpConfigData;
    WORD wAnalyzeResult;
    HPROPSHEETPAGE hpsDynamicPages[MAX_INSTALLWIZARD_DYNAPAGES];
    WORD wNumDynaPages;
    DWORD dwDynaWizFlags;
    DWORD dwPrivateFlags;
    LPARAM lpPrivateData;
    LPSTR lpExtraRunDllParams;
    HWND hwndWizardDlg;
} INSTALLWIZARDDATA;
</PRE>
<P>DIF_INSTALLWIZARD class install parameters. This struct is used by class installers to extend the operation of the hardware installation wizard by adding custom pages. </P>
<P><B>cbSize</B> </P>
<P>Size of the INSTALLWIZARDDATA struct. </P>
<P><B>lpdiOriginal</B> </P>
<P>Pointer to the Original DEVICE_INFO struct at the start of the manual installation. </P>
<P><B>lpdiSelected</B> </P>
<P>Pointer to the current DEVICE_INFO struct that is being manually selected. </P>
<P><B>dwFlags</B> </P>
<P>Flags that control the operation of the hardware installation wizard. There are currently none defined. </P>
<P><B>lpConfigData</B> </P>
<P>Pointer to configuration data for analysis to determine if the selected device can be installed with no conflicts. </P>
<P><B>wAnalyzeResult</B> </P>
<P>Results of analysis to determine if the device can be installed with no problems. The following values are defined: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>ANALYZE_FACTDEF_OK </P></TD><TD VALIGN="TOP"><P>The device can be installed using its factory default settings. </P></TD></TR><TR><TD VALIGN="TOP"><P>ANALYZE_STDCFG_OK </P></TD><TD VALIGN="TOP"><P>The device can be installed using a configuration specified in one if its basic logical configurations. The user will probably have to set jumpers or switches on the hardware to match the settings determined by the install wizard. </P></TD></TR><TR><TD VALIGN="TOP"><P>ANALYZE_CONFLICT </P></TD><TD VALIGN="TOP"><P>The device cannot be installed without causing a conflict with another device. </P></TD></TR><TR><TD VALIGN="TOP"><P>ANALYZE_NORESOURCES </P></TD><TD VALIGN="TOP"><P>The device does not require any resources, so it can be installed witth no conflicts. </P></TD></TR><TR><TD VALIGN="TOP"><P>ANALYZE_ERROR </P></TD><TD VALIGN="TOP"><P>There was an error during analysis. </P></TD></TR><TR><TD VALIGN="TOP"><P>ANALYZE_PNP_DEV </P></TD><TD VALIGN="TOP"><P>The device has a least one softsettable logical configurations, allowing it to be automatically configured. Additionally the device will be enumerated by one of the standard bus enumerators, so it does not require manual installation, except to pre-copy driver files. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>hpsDynamicPages[MAX_INSTALLWIZARD_DYNAPAGES]</B> </P>
<P>An array of property sheet page handles. The class installer would use this array to create custom wizard pages, and insert their handles into this array. </P>
<P><B>wNumDynaPages</B> </P>
<P>The number of pages inserted into the hpsDynamicPages array. </P>
<P><B>dwDynaWizFlags</B> </P>
<P>Flags that control the behavior of the installation wizard whtn dynamic pages have been added. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>DYNAWIZ_FLAG_PAGESADDED </P></TD><TD VALIGN="TOP"><P>Will be set by the install wizard if the class installer adds custom pages. </P></TD></TR><TR><TD VALIGN="TOP"><P>DYNAWIZ_FLAG_INSTALLDET_NEXT </P></TD><TD VALIGN="TOP"><P>If set, the install wizard will allow going forward from the detected devices page, otherwise finish will be the default option for the detected devices page. </P></TD></TR><TR><TD VALIGN="TOP"><P>DYNAWIZ_FLAG_INSTALLDET_PREV </P></TD><TD VALIGN="TOP"><P>If set, the install wizard will allow going back from the detected devices page. </P></TD></TR><TR><TD VALIGN="TOP"><P>DYNAWIZ_FLAG_ANALYZE_HANDLECONFLICT </P></TD><TD VALIGN="TOP"><P>If set, the class installer will handle the case where the selected device cannot be installed because of a conflict. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>dwPrivateFlags</B> </P>
<P>Flags that may be defined and used by the class installer. </P>
<P><B>lpPrivateData</B> </P>
<P>Pointer to private reference data defined and set by the class installer. </P>
<P><B>lpExtraRunDllParams</B> </P>
<P>Pointer to a string containing extra parameters passed to the hardware install rundll function. </P>
<P><B>hwndWizardDlg</B> </P>
<P>Window handle of the install wizard top level window. </P>
<P></P>
<P></P></FONT></BODY></HTML>
