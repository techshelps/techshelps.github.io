<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PVALUE</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>PVALUE </H3><P><BR></P>
<PRE>#define PROVIDER_KEEPS_VALUE_LENGTH  0x1
  typedef struct pvalue {    
      PCHAR pv_valuename;       // The value name pointer
      DWORD pv_valuelen;        // The length of the value in bytes.
      PVOID pv_value_context;   // The context for this value
      DWORD pv_type;            // Registry type of this vallue.
  } PVALUE;
  typedef struct pvalue *PPVALUE;
</PRE>
<P>An array of these structures is passed to <B>RegCreateDynKey</B>, one structure per value under that key. </P>
<P><B>pv_valuename</B> </P>
<P>The name of the value. The provider must fill this in when it calls _RegCreateDynKey. </P>
<P><B>pv_valuelen</B> </P>
<P>The length (in bytes) of the value. If the registry is keeping value lengths, then this must be filled in by the provider when it calls _RegCreateDynKey. </P>
<P><B>pv_value_context</B> </P>
<P>The value-context. This is a 32-bit value that is only meaningful to the provider; it is never evaluated by the registry code. This is a value in some way uniquely identifies this particular value so that when the provider is called, it knows which value is being queried. This is what enables one provider to handle multiple values. The provider must fill this in when it calls _RegCreateDynKey. </P>
<P><B>pv_type</B> </P>
<P>The registry type of this value. In Windows 95, this can be REG_BINARY or REG_SZ. The provider must fill this in when it calls _RegCreateDynKey. </P>
<P></P>
<P></P></FONT></BODY></HTML>
