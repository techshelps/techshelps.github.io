<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MCI_WAVE_OPEN_PARMS</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>MCI_WAVE_OPEN_PARMS </H3><P>See also MCI_OPEN </P>
<P><BR></P>
<PRE>typedef struct {
    DWORD  dwCallback;
    UINT  wDeviceID;
    UINT  wReserved0;
    LPCSTR  lpstrDeviceType;
    LPCSTR  lpstrElementName;
    LPCSTR  lpstrAlias;
    DWORD  dwBufferSeconds;
} MCI_WAVE_OPEN_PARMS;
</PRE>
<P>The <B>MCI_WAVE_OPEN_PARMS</B> structure contains information for <B>MCI_OPEN</B> message for waveform audio devices. When assigning data to the members in this structure, set the corresponding MCI flags in the <I>lParam1</I> parameter of <B>mciSendCommand</B> to validate the members. You can use the <B>MCI_OPEN_PARMS</B> structure in place of <B>MCI_WAVE_OPEN_PARMS</B> if you are not using the extended data members. </P>
<P><B>dwCallback</B> </P>
<P>The low-order word specifies a window handle used for the MCI_NOTIFY flag. </P>
<P><B>wDeviceID</B> </P>
<P>Specifies the device ID returned to user. </P>
<P><B>wReserved0</B> </P>
<P>Reserved. </P>
<P><B>lpstrDeviceType</B> </P>
<P>Specifies the name or constant ID of the device type obtained. </P>
<P><B>lpstrElementName</B> </P>
<P>Specifies the device element name (usually a path). </P>
<P><B>lpstrAlias</B> </P>
<P>Specifies an optional device alias. </P>
<P><B>dwBufferSeconds</B> </P>
<P>Specifies the buffer length in seconds. </P>
<P></P>
<P></P></FONT></BODY></HTML>
