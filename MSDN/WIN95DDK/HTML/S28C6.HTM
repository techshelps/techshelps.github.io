<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAVE_LATCHES (Function 24)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>SAVE_LATCHES (Function 24) </H3><P><B>Call With</B></P>
<P>EBX: Contains a Windows VM Handle. </P>
<P>EBP: Points to the Windows VM's Client Registers. </P>
<P><B>Return Values</B></P>
<P>Save anything that you use. You must not fail this call. If it is hooked, it must be implemented. </P>
<P><B>Remarks</B></P>
<P>This function gives the mini-VDD the opportunity to save the VGA processor latches. The Main VDD goes through a lengthy process to save and restore the latches during 4 plane virtualization. Many new VGA cards can read the latches directly through CRTC port 22h and this routine gives them the opportunity to do so. If you implement this function (along with <B>RESTORE_LATCHES</B>), you need not implement <B>SET_LATCH_BANK</B> and <B>RESET_LATCH_BANK</B>. You should save the latches in the mini-VDD's CB data area. </P>
<P></P>
<P></P></FONT></BODY></HTML>
