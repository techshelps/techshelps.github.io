<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PD</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>PD </H3><P><BR></P>
<PRE>#include &lt;vmm.h&gt;

typedef ULONG _cdecl FUNPAGE(PULONG ppagerdata, PVOID ppage,
    ULONG faultpage);
typedef FUNPAGE *PFUNPAGE;

typedef struct pd_s {
    PFUNPAGE pd_virginin;
    PFUNPAGE pd_taintedin;
    PFUNPAGE pd_cleanout;
    PFUNPAGE pd_dirtyout;
    PFUNPAGE pd_virginfree;
    PFUNPAGE pd_taintedfree;
    PFUNPAGE pd_dirty;
    ULONG pd_type;
} PD, *PPD;
</PRE>
<P>Pager-descriptor structure. Contains pointers to a pager's callback functions, and information about the overcommit characteristics of the pages the pager manages. </P>
<P><B>pd_virginin</B> and <B>pd_taintedin</B> </P>
<P>Addresses of the pager functions that the system calls swap a page into memory. If the page has never been written to, the system calls the function specified by the <B>pd_virginin</B> member; otherwise it calls the function specified by the <B>pd_taintedin</B> member. </P>
<P>These functions must return a nonzero value if successful, or zero otherwise. The parameters have the following meanings: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ppagerdata</I> </P></TD><TD VALIGN="TOP"><P>Address of a pager-defined 32-bit value stored with the virtual page. The pager can modify this value during page in and out operations, but not at other times. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ppage</I> </P></TD><TD VALIGN="TOP"><P>Ring-zero physical address of the page. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>faultpage</I> </P></TD><TD VALIGN="TOP"><P>Linear page number that triggered a page fault. A pager should not attempt to access this page number. Note that the same page can be mapped to more than one linear address. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>pd_cleanout</B> and <B>pd_dirtyout</B> </P>
<P>Addresses of the pager functions that the system calls to swap a page out of memory. If the page has not been written to since it was last paged out, the system calls the function specified by the <B>pd_cleanout</B> member; otherwise it calls the function specified by the <B>pd_dirtyout</B> member. </P>
<P>These functions must return a nonzero value if successful, or zero otherwise. The parameters have the following meanings: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ppagerdata</I> </P></TD><TD VALIGN="TOP"><P>Address of a pager-defined 32-bit value stored with the virtual page. The pager can modify this value during page in and out operations, but not at other times. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ppage</I> </P></TD><TD VALIGN="TOP"><P>Ring-zero physical address of the page. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>faultpage</I> </P></TD><TD VALIGN="TOP"><P>Always – 1. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>pd_virginfree</B> and <B>pd_taintedfree</B> </P>
<P>Addresses of the pager functions that the system calls when the last reference to a virtual page controlled by the pager is decommitted. If the page has never been written to since it was committed, the system calls the function specified by the <B>pd_virginfree</B> member; otherwise it calls the function specified by the <B>pd_taintedfree</B> member. </P>
<P>The return value of these functions is ignored. The parameters have the following meanings: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ppagerdata</I> </P></TD><TD VALIGN="TOP"><P>Address of a pager-defined 32-bit value stored with the virtual page. The pager can modify this value during page in and out operations, but not at other times. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ppage</I> </P></TD><TD VALIGN="TOP"><P>Ring-zero physical address of the page if it is in memory, NULL otherwise. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>faultpage</I> </P></TD><TD VALIGN="TOP"><P>Linear page number of the page being decommitted. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>pd_dirty</B> </P>
<P>Address of the pager function that the memory manager calls when it detects that a page has been written to. If a page is dirtied in more than one memory context, this function is called once for each context. </P>
<P>The return value of this function is ignored. The parameters have the following meanings: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>ppagerdata</I> </P></TD><TD VALIGN="TOP"><P>Address of a pager-defined 32-bit value stored with the virtual page. The pager can modify this value during page in and out operations, but not at other times. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ppage</I> </P></TD><TD VALIGN="TOP"><P>Undefined. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>faultpage</I> </P></TD><TD VALIGN="TOP"><P>Linear page number of the dirtied page. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>pd_type</B> </P>
<P>Value specifying the overcommit characteristics of the pages associated with this pager. Can be one of these values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>PD_SWAPPER </P></TD><TD VALIGN="TOP"><P>Pages controlled by this pager may be paged out. </P></TD></TR><TR><TD VALIGN="TOP"><P>PD_PAGERONLY </P></TD><TD VALIGN="TOP"><P>Pages controlled by this pager are never paged out to the swap file. If this value is specified, the VMM calls the pager's virgin-in function as soon as a page is committed; the tainted-in and page-out functions are never called. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>See also <B>_PagerRegister</B> </P>
</FONT></BODY></HTML>
