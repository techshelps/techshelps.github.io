<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FileSystemApiHookFunction</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FileSystemApiHookFunction </H3><P><BR></P>
<PRE>FileSystemApiHookFunction(
 pIFSFunc FSDFnAddr,
 int FunctionNum,
 int Drive,
 int ResourceFlags,
 int CodePage,
 pioreq pir
 )
</PRE>
<P>The hook function is called on every api call that the IFS manager needs to call the FSDs on. The hook function is called with the following parameters: </P>
<P><I>FSDFnAddr</I> </P>
<P>Supplies the address of the FSD function that is to be called for this api. </P>
<P><I>FunctionNum</I> </P>
<P>Supplies the function that is being performed. This is usually one of the list of functions described in section 8.5. Exceptions are noted as appropriate. They are as follows: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Function Type Values:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_READ</B> </P></TD><TD VALIGN="TOP"><P>Read a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_WRITE</B> </P></TD><TD VALIGN="TOP"><P>Write a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FINDNEXT</B> </P></TD><TD VALIGN="TOP"><P>FindNext operation on a handle. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FCNNEXT</B> </P></TD><TD VALIGN="TOP"><P>FindFirstChangeNotifyNext function. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_SEEK</B> </P></TD><TD VALIGN="TOP"><P>Seek on a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_CLOSE</B> </P></TD><TD VALIGN="TOP"><P>Close a file handle. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FINDCLOSE</B> </P></TD><TD VALIGN="TOP"><P>Close a find context handle. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FCNCLOSE</B> </P></TD><TD VALIGN="TOP"><P>Close a find change notify context handle. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_COMMIT</B> </P></TD><TD VALIGN="TOP"><P>Commit a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FILELOCKS</B> </P></TD><TD VALIGN="TOP"><P>Lock a region of a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FILETIMES</B> </P></TD><TD VALIGN="TOP"><P>Get/set time of a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_PIPEREQUEST</B> </P></TD><TD VALIGN="TOP"><P>Handle-based pipe request. See section 8.6.1 </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_HANDLEINFO</B> </P></TD><TD VALIGN="TOP"><P>Handle information on pipes. See section 8.6.3. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_ENUMHANDLE</B> </P></TD><TD VALIGN="TOP"><P>Enumerate information about handle. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_CONNECT</B> </P></TD><TD VALIGN="TOP"><P>Connect/mount a resource (net, local or character FSD). </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_DELETE</B> </P></TD><TD VALIGN="TOP"><P>Delete a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_DIR</B> </P></TD><TD VALIGN="TOP"><P>Directory-based operations. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FILEATTRIB</B> </P></TD><TD VALIGN="TOP"><P>Get/set attributes of a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FLUSH</B> </P></TD><TD VALIGN="TOP"><P>Flush a resource. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_GETDISKINFO</B> </P></TD><TD VALIGN="TOP"><P>Get disk free space. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_OPEN</B> </P></TD><TD VALIGN="TOP"><P>Open/create a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_RENAME</B> </P></TD><TD VALIGN="TOP"><P>Rename a file. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_SEARCH</B> </P></TD><TD VALIGN="TOP"><P>DOS-style search operation. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_QUERY</B> </P></TD><TD VALIGN="TOP"><P>Query information about resource. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_DISCONNECT</B> </P></TD><TD VALIGN="TOP"><P>Disconnect/unmount a resource (net, local or character FSD). </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_UNCPIPEREQ</B> </P></TD><TD VALIGN="TOP"><P>UNC-path based pipe request. See section 8.6.2. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_IOCTL16DRIVE</B> </P></TD><TD VALIGN="TOP"><P>Ioctl operation. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_GETDISKPARMS</B> </P></TD><TD VALIGN="TOP"><P>Get disk parameters. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_FINDOPEN</B> </P></TD><TD VALIGN="TOP"><P>LFN-style FindFirst operation. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFN_DASDIO</B> </P></TD><TD VALIGN="TOP"><P>Direct disk access operations. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>Drive</I> </P>
<P>Supplies the 1-based drive the operation is being performed on (-1 if UNC). </P>
<P><I>ResourceFlags</I> </P>
<P>Supplies the kind of resource the operation is being performed on. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Resource Flags:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFH_RES_UNC</B> </P></TD><TD VALIGN="TOP"><P>UNC resource. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFH_RES_NETWORK</B> </P></TD><TD VALIGN="TOP"><P>Network drive. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFH_RES_LOCAL</B> </P></TD><TD VALIGN="TOP"><P>Local drive. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>IFSFH_RES_CFSD</B> </P></TD><TD VALIGN="TOP"><P>Character device. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>CodePage</I> </P>
<P>Supplies the codepage that the user string was passed in on. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>CodePage Values:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>BCS_WANSI</B> </P></TD><TD VALIGN="TOP"><P>Windows ANSI codepage. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>BCS_OEM</B> </P></TD><TD VALIGN="TOP"><P>Currently configured OEM codepage. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>pir</I> </P>
<P>Supplies pointer to IOREQ structure. This structure is filled in based on the function being performed as described in section 8.5. </P>
<UL><LI>     The function return value again depends on the function being processed. The hooker needs to preserve the same return behaviour that is expected of the FSD for each of the different apis if it hooks any of the calls. </LI></UL><P></P>
<P></P>
<P></P></FONT></BODY></HTML>
