<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Color Palettes</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Color Palettes </H3><P>Display devices that are capable of displaying 256 or more simultaneous colors using a palette need to provide support for color palettes. A display driver specifies that it has palette support by setting the RC_PALETTE value in the <B>dpRaster</B> member in the <B>GDIINFO</B> structure. The display driver also must set the <B>dpPalColors</B>, <B>dpPalReserved</B>, and <B>dpPalResolution</B> members. </P>
<P>The number of reserved colors on the palette is always 16, corresponding to the VGA colors. Half of the reserved palette colors are placed at the beginning and half at the end of the palette. </P>
<P>If a display driver supports color palettes, it must export the <B>SetPalette</B>, <B>GetPalette</B>, <B>SetPalTrans</B>, and <B>GetPalTrans</B> functions. </P>
<H4><A NAME="sec0"></A>Hardware-Palette Initialization </H4><P>A display driver does not need to initialize the hardware palette when the driver initializes the rest of the display hardware. GDI initializes the palette. </P>
<H4><A NAME="sec1"></A>Palette-Translation Table </H4><P>The driver has to maintain a palette-translation table to translate the logical color indexes passed to it by GDI into the actual physical color indexes. The translation has to occur before any raster operation (ROP) is performed. ROPs are always applied to physical colors. </P>
<P>Whenever a display driver function receives a <B>DRAWMODE</B>, <B>LPEN</B>, <B>PBRUSH</B>, or <B>PBITMAP</B> structure, the driver may need to translate the logical colors in these structures to physical colors before using the colors. </P>
<P>An application has to perform color translation only when the physical device is involved. In other words, if a line is drawn into a memory bitmap or a bitmap is block transferred into another memory device, no color translation is required. On the other hand, if a bitmap is transferred to or from the screen into a memory bitmap or a line is drawn directly onto the screen, color translation is required. In the case of a block transfer from the screen to the screen (where the physical device is both the source and destination of the block transfer), color translation is not needed, since all the color indexes are already translated into physical indexes. </P>
<P>Color specifications are passed to display drivers as either color indexes or RGB values. A color index is a 32-bit value in which the high 16-bits is set to 0xFF00 and the low 16-bits is the actual index. An RGB value is a 32-bit value as specified by the <B>RBGQUAD</B> structure. If using the DIB engine, when an RGB value is specified, the driver should call <B>DIB_ColorInfo</B> to match the color as closely as possible among the 16 reserved colors. </P>
<P>A palette-translation table is an array of 16-bit indexes, each mapping a logical color index to a physical color index. A display driver uses the translation table to translate color indexes in physical pens and brushes and in the <B>DRAWMODE</B> structure to the actual color indexes used by the hardware palette. </P>
<P>GDI calls the <B>GetPalTrans</B> and <B>SetPalTrans</B> functions to get and set the translation table. The translation table has the number of elements specified by the <B>dpPalColors</B> member. Because color mapping is complex, drivers using the DIB engine should forward these calls to the DIB engine functions <B>DIB_GetPaletteTranslateExt</B> and <B>DIB_SetPaletteTranslateExt</B>. The function <B>DIB_SetPaletteTranslateExt </B>sets or clears the PALETTE_XLAT bit in the <B>deFlags</B> field of the <B>DIBENGINE</B> structure. When a non-identity palette translate is being set, this function sets the bit. This function clears the PALETTE_XLAT bit when an identity translate is set. Drivers and the DIB engine may use this bit to decide whether palette translation is needed or not. For <B>BitBlt</B>, bypassing color translation results in substantial performance improvements. </P>
<H4><A NAME="sec2"></A>UpdateColors Function </H4><P>If a display driver supports color palettes, it must include the <B>UpdateColors</B> function. GDI calls this function to direct the driver to redraw a region on the screen using the translation table passed to the function. For each pixel in the region, the function retrieves the pixel's color index, translates the index, and writes the translated index back to the given pixel. </P>
<H4><A NAME="sec3"></A>Black-and-White Palette Entries </H4><P>Display drivers that support color palettes must make sure that the index for the palette entry that corresponds to black must be the one's complement of the index for the palette entry for white. Black and white must be static palette entries, meaning the driver sets the indexes for these colors during initialization and does not change the indexes. </P></FONT></BODY></HTML>
