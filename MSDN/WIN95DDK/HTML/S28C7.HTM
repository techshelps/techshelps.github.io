<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAVE_MESSAGE_MODE_STATE (Function 45)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>SAVE_MESSAGE_MODE_STATE (Function 45) </H3><P><B>Call With</B></P>
<P>EBX: Contains the VM handle (always the Windows VM). </P>
<P>EBP: Points to the Windows VM's Client Registers. </P>
<P><B>Return Values</B></P>
<P>Save everything that you use. </P>
<P><B>Remarks</B></P>
<P>Before this function is called, the Main VDD has called <B>ENABLE_TRAPS</B> to cause the mini-VDD to turn on its register virtualization code. When <B>ENABLE_TRAPS</B> is called, you should unconditionally virtualize all of the necessary registers and not allow physical writes to occur to them, even in the Windows VM. Subsequently, the Main VDD executes a totally virtualized mode change to the blue-screen message mode state (this is Mode 3 in single byte character set Windows and Mode 12h in double byte character set Windows). Even though no screen changes are evident, because the virtualized mode change occurred when the Windows VM was the currently executing VM, the message mode state for all of the virtualized Registers have been saved in the CB data structure for the Windows VM. </P>
<P>This function copies the virtualized states from the CB data structure and saves them in a special Message Mode state data structure which is located in the mini-VDD's data segment. The Message Mode structure should be an exact copy of the actual CB data structure. See the Video7 mini-VDD for an example of how to use this function. </P>
<P></P>
<P></P></FONT></BODY></HTML>
