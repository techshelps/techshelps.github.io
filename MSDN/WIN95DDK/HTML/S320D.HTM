<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_PageFree</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>_PageFree </H3><P><BR></P>
<PRE>// C syntax
#include &lt;vmm.h&gt;

ULONG EXTERN _PageFree(PVOID hMem, DWORD flags);

// assembler syntax
include vmm.inc

VMMcall _PageFree, &lt;hMem, flags&gt;
or      eax, eax        ; nonzero if freed, zero if error
jz      failed
</PRE>
<P>Frees the specified memory block. Uses EAX. </P>
<UL><LI>     Returns a nonzero value in the EAX register if successful, zero otherwise. </LI></UL><P></P>
<P><I>hMem</I> </P>
<P>Base linear address of the memory block to free. This value must have been returned by the <B>_PageAllocate,</B> <B>_PageReAllocate, </B>or <B>_PageReserve</B> service. You may not free only part of a memory block. </P>
<P><I>flags</I> </P>
<P>Operation flags. Can be zero or PR_STATIC, which specifies that the memory block being freed was allocated as PC_STATIC. If the memory block was allocated as PC_STATIC, but the PR_STATIC field is not also specified, the free will fail.. </P>
<P>Virtual devices that allocate PG_VM or PG_HOOKED pages must free these pages when the associated virtual machine is destroyed. PG_SYS pages do not need to be freed when Windows exits. </P>
<P>If a virtual device maps a memory block into the V86 address space (using the <B>_MapIntoV86</B> service), it should unmap the memory block before attempting to free it. </P>
<P>It is not an error to free memory which is all or partially locked. </P>
<P>It is not necessary to decommit the memory inside a memory block before freeing it. Freeing a memory block automatically decommits its contents. </P>
<P>See also <B>_PageAllocate</B>, <B>_PageReAllocate</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
