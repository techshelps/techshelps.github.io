<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_TransactNamedPipe</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_TransactNamedPipe </H3><P><BR></P>
<PRE>FS_TransactNamedPipe(
 PIOREQ pir
 )
</PRE>
<P>Data is written to and read from a named pipe in a single request through <B>FS_TransactNamedPipe</B>. This routine handles the Win32 function: TransactNamedPipe(). </P>
<P><I>ir_rh</I> </P>
<P>Supplies handle to local NP FS or network resource which contains the named pipe. </P>
<P><I>ir_fh</I> </P>
<P>Supplies FSD file handle of an opened named pipe. </P>
<P><I>ir_sfn</I> </P>
<P>Supplies system file number. </P>
<P><I>ir_data2</I> </P>
<P>Supplies a pointer to the output data buffer to write to the pipe. </P>
<P><I>ir_size</I> </P>
<P>Supplies the size in bytes of the write (output) buffer. </P>
<P><I>ir_data</I> </P>
<P>Supplies a pointer to the input buffer that receives data from the pipe. </P>
<P><I>ir_length</I> </P>
<P>Supplies the size in bytes of the read (input) buffer. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <I>ir_error</I> </P></TD><TD VALIGN="TOP"><P>Returns status of the operation ( 0 if no error, errorcode otherwise ). </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ir_length</I> </P></TD><TD VALIGN="TOP"><P>Returns number of bytes actually read from the pipe. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>This operation may take place asynchronously, and it is recommended that the implementation of this function be async when ever possible. To do this, the function may return ERROR_IO_PENDING to allow the caller to continue processing while the operation completes. If ERROR_IO_PENDING is returned, the Complete_Async() service in the IFSMGR must be called when the operation completes. The address of the I/O request packet must be passed to identify the completed request. </P>
<P></P>
<P></P></FONT></BODY></HTML>
