<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting and Obtaining a Video Capture Palette</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Setting and Obtaining a Video Capture Palette </H3><P>The following example shows how the sample device driver handles the DVM_PALETTE message. The structure for DVM_PALETTERGB555 is similar. </P>
<P><BR></P>
<PRE>DWORD NEAR PASCAL VideoConfigureMessage(PCHANNEL pChannel, UINT msg,
    LONG lParam1, LONG lParam2)
{
    LPVIDEOCONFIGPARMS lpcp;
    LPDWORD     lpdwReturn;  // Return parameter from configure
    LPVOID      lpData1;     // Pointer to data1
    DWORD       dwSize1;     // size of data buffer1
    LPVOID      lpData2;     // Pointer to data2
    DWORD       dwSize2;     // size of data buffer2
    DWORD       dwFlags;

    if (pChannel-&gt; dwOpenType != VIDEO_IN)
        return DV_ERR_NOTSUPPORTED;

    dwFlags = lParam1;

    lpcp = (LPVIDEOCONFIGPARMS) lParam2;
    lpdwReturn = lpcp-&gt; lpdwReturn;
    lpData1 = lpcp-&gt; lpData1; 
    dwSize1 = lpcp-&gt; dwSize1; 
    lpData2 = lpcp-&gt; lpData2; 
    dwSize2 = lpcp-&gt; dwSize2; 

switch (msg) {

    case DVM_PALETTE:

        switch (dwFlags) {

            case (VIDEO_CONFIGURE_QUERY | VIDEO_CONFIGURE_SET):
            case (VIDEO_CONFIGURE_QUERY | VIDEO_CONFIGURE_GET):
                return DV_ERR_OK;

            case VIDEO_CONFIGURE_QUERYSIZE:
            case (VIDEO_CONFIGURE_QUERYSIZE | VIDEO_CONFIGURE_GET):
               *lpdwReturn = sizeof(LOGPALETTE) + 
                    (palCurrent.palNumEntries-1) *
                    sizeof(PALETTEENTRY);
               break;

            case VIDEO_CONFIGURE_SET:
            case (VIDEO_CONFIGURE_SET | VIDEO_CONFIGURE_CURRENT):
                if (!lpData1)    // points to a LOGPALETTE structure.
                    return DV_ERR_PARAM1;
                return (SetDestPalette ( (LPLOGPALETTE) lpData1, 
                   (LPBYTE) NULL));
                break;

            case VIDEO_CONFIGURE_GET:
            case (VIDEO_CONFIGURE_GET | VIDEO_CONFIGURE_CURRENT):
               return (GetDestPalette ( (LPLOGPALETTE) lpData1, 
                        (WORD) dwSize1));
               break;

            default:
               return DV_ERR_NOTSUPPORTED;

        } // end of DVM_PALETTE switch

        return DV_ERR_OK;
        .
        .
        .

    default:        // Not a message that we understand
        return DV_ERR_NOTSUPPORTED;

    } // end of message switch

    return DV_ERR_NOTSUPPORTED;
}</PRE></FONT></BODY></HTML>
