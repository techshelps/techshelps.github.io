<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Virtual Device Segments</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Virtual Device Segments </H3><P>Virtual devices can have any combination of the following five segments: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Segment </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>VxD_CODE </P></TD><TD VALIGN="TOP"><P>Specifies the protected-mode code segment. This required segment contains the device control procedure, callback procedures, services, and API procedures of the virtual device. Use the <B>VxD_CODE_SEG</B> and <B>VxD_CODE_ENDS</B> macros to define the start and end of definitions for this segment. This segment is also named _LTEXT. </P></TD></TR><TR><TD VALIGN="TOP"><P>VxD_DATA </P></TD><TD VALIGN="TOP"><P>Specifies the protected-mode data segment. This required segment contains the device descriptor block, service table, and any global data for the virtual device. Use the <B>VxD_DATA_SEG</B> and <B>VxD_DATA_ENDS</B> macros to define the start and end of definitions for this segment. This segment is also named _LDATA. </P></TD></TR><TR><TD VALIGN="TOP"><P>VxD_ICODE </P></TD><TD VALIGN="TOP"><P>Specifies the protected-mode initialization code segment. This optional segment usually contains the procedures and services that are used only during initialization of the virtual device. The VMM discards this segment after the <B>Init_Complete</B> message. Use the <B>VxD_ICODE_SEG</B> and <B>VxD_ICODE_ENDS</B> macros to define the start and end of definitions for this segment. This segment is also named _ITEXT. </P></TD></TR><TR><TD VALIGN="TOP"><P>VxD_IDATA </P></TD><TD VALIGN="TOP"><P>Specifies the protected-mode initialization data segment. This optional segment usually contains the data used by the initialization procedures and services. The VMM discards this segment after the <B>Init_Complete</B> message. Use the <B>VxD_IDATA_SEG</B> and <B>VxD_IDATA_ENDS</B> macros to define the start and end of definitions for this segment. This segment is also named _IDATA. </P></TD></TR><TR><TD VALIGN="TOP"><P>VxD_REAL_INIT </P></TD><TD VALIGN="TOP"><P>Specifies the real-mode initialization segment. This optional segment contains the real-mode initialization procedure and data. The VMM calls this procedure before loading the rest of the virtual device, then discards this segment after the procedure returns. Use the <B>VxD_REAL_INIT_SEG</B> and <B>VxD_REAL_INIT_ENDS</B> macros to define the start and end of definitions for the real-mode initialization segment. This segment is also named _RTEXT. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>All code and data segments, except the real-mode initialization segment, are 32-bit, flat model, protected-mode segments. This means procedures and data defined in the protected-mode segments have 32-bit offsets. When the VMM loads the virtual device, it fixes all offsets according to the virtual device's actual position in memory. For this reason, the <B>OFFSET32</B> macro should be used in the protected-mode segments wherever the <B>OFFSET</B> directive would ordinarily be used. The <B>OFFSET32</B> macro defines offsets for which the linker produces correct offset-fixup information. </P>
<P>Virtual devices cannot change the CS, DS, ES, or SS segment registers. Virtual devices can use the FS and GS segment registers. </P></FONT></BODY></HTML>
