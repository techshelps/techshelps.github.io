<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFSMgr_SchedEvent</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>IFSMgr_SchedEvent </H3><P><BR></P>
<PRE>IFSMgr_SchedEvent(
 pevent pev,
 unsigned long time
 )
</PRE>
<P>This service schedules a timeout for the time passed in and calls the event function passed in by the FSD when the timeout event occurs. Note that the event function may not be called immediately when the timeout occurs. If there are hardware interrupts or high priority events in progress, the event function will be called at the earliest possible time it is safe to do so. The event is always scheduled i.e the callback will not be done immediately and it runs only when interrupts have been enabled in the VM. </P>
<P><I>pev</I> </P>
<P>Supplies pointer to an event structure. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Event Structure:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><I>ev_handle</I> </P></TD><TD VALIGN="TOP"><P>Must be 0. This field is for use by the IFS manager only. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>ev_flags</I> </P></TD><TD VALIGN="TOP"><P>Supplies event type. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Event Type:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>EVF_TASKTIME</B> </P></TD><TD VALIGN="TOP"><P>Event must be called at task time only. The IFS manager allocates an IO request packet for these events. No IO request packets are allocated for events that are not to be called at task time. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>EVF_VMEVENT</B> </P></TD><TD VALIGN="TOP"><P>This is a VM event i.e. it has to run in a specific VM that is passed in. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>EVF_NOTCRIT</B> </P></TD><TD VALIGN="TOP"><P>This causes a priority event to be scheduled to run on a thread that does not own the critical section. This flag should be used for events that can cause context switches and do not need a critical section to run in. This flag cannot be usedt in combination with EVF_VMEVENT but can be used in combination with EVF_TASKTIME. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>EVF_NOTNESTEXEC</B> </P></TD><TD VALIGN="TOP"><P>This causes a restricted event to be scheduled that runs only when there is no nested execution in progress. It can be scheduled as a global or a VM event i.e. EVF_VMEVENT can be passed in combination with this flag. In additon, EVF_TASKTIME can also be specified to indicate whether an IOREQ is needed or not. An event that can cause a nested execution to happen should use this flag. Otherwise, it can lead to deadlock situations. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ev_func</I> </P>
<P>Supplies pointer to event function. </P>
<P><I>ev_VMHand</I> </P>
<P>Supplies VM handle, needed only if the EVF_VMEVENT flag is set. </P>
<P><I>time</I> </P>
<P>Supplies the timeout, specified in milliseconds. The event will be generated only after the timeout has expired. </P>
<UL><LI>     This service has no return value. </LI></UL><P></P>
<P></P>
<P></P></FONT></BODY></HTML>
