<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFSMgr_SetPathHook</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>IFSMgr_SetPathHook </H3><P><BR></P>
<PRE>IFSMgr_SetPathHook(
 void * PathCheckFunc
 )
</PRE>
<P>This service has been provided for FSDs to check for special path prefixes and process them separately. The FSD can register a routine with the IFS manager that is called every time a path is parsed. If this is a prefix the FSD wants to process, it can claim it and the IFS manager will then call the FSD directly on the path-based operation. </P>
<P><I>PathCheckFunc</I> </P>
<P>Supplies address of path checking preamble function to be called by the IFS manager. </P>
<UL><LI>     Returns the address of the previous path checking function. The IFS manager always has a default function that fails the path check hook. </LI></UL><P></P>
<P>The interface to the path checking preamble function is described below. Preamble functions must chain on if they reject a request. If the preamble function hooks the path, it can update the </P>
<P><I>[ESI]</I> </P>
<P>Pointer to unicode pathname. Note: this pathname has not been canonicalized. </P>
<P><I>[EDI]</I> </P>
<P>Pointer to destination buffer to contain the parsed path. </P>
<UL><LI>     Request hooked: 
<P><I>Carry</I> flag clear. </P></LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><I>[EAX]</I> </P></TD><TD VALIGN="TOP"><P>Length of the last path element consumed by the FSD. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>[EBX]</I> </P></TD><TD VALIGN="TOP"><P>Pointer in the input string to the beginning of the last path element consumed by the FSD. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>[EDX]</I> </P></TD><TD VALIGN="TOP"><P>Provider id of the FSD that claimed the path. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>[ESI]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to source unicode pathname - possibly updated. </P></TD></TR><TR><TD VALIGN="TOP"><P><I>[EDI]</I> </P></TD><TD VALIGN="TOP"><P>Pointer to destination buffer - possibly updated. If the destination buffer is updated, it must be maintained in the <B>ParsedPath</B> format described earlier. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Request not hooked: </P>
<P>FSD must jump to the address of the previous path checking preamble, returned on the call to IFSMgr_SetPathHook, with the entry conditions preserved. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Register Usage</B> </P>
<P>If request hooked, EDX, ESI, EDI must contain valid values and all other registers can be used. If request is not hooked, all registers must be preserved. </P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P></P>
<P></P></FONT></BODY></HTML>
