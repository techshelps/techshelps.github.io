<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WAVEINCAPS</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>WAVEINCAPS </H3><P>See also WIDM_GETDEVCAPS</P>
<P><BR></P>
<PRE>typedef struct waveincaps_tag {
    UINT  wMid;
    UINT  wPid;
    VERSION  vDriverVersion;
    char  szPname[MAXPNAMELEN];
    DWORD  dwFormats;
    UINT  wChannels;
} WAVEINCAPS;

The &lt;k&gt;WAVEINCAPS&lt;/k&gt; structure describes the capabilities of a waveform input device.
&lt;parm&gt;
&lt;i&gt;&lt;k&gt;wMid&lt;/k&gt;
&lt;d&gt;Specifies a manufacturer ID for the device driver for the waveform input device. Manufacturer IDs are defined in the &lt;e&gt;Multimedia Programmer's Reference&lt;/e&gt; in the Microsoft Windows Software Development Kit.
&lt;i&gt;&lt;k&gt;wPid&lt;/k&gt;
&lt;d&gt;Specifies a product ID for the waveform input device. Product IDs are defined in the &lt;e&gt;Multimedia Programmer's Reference&lt;/e&gt; in the Microsoft Windows Software Development Kit.
&lt;i&gt;&lt;k&gt;vDriverVersion&lt;/k&gt;
&lt;d&gt;Specifies the version number of the device driver for the waveform input device. The high-order byte is the major version number, and the low-order byte is the minor version number. The numbering is up to the driver developer but should be changed with each driver release. 
&lt;i&gt;&lt;k&gt;szPname[MAXPNAMELEN]&lt;/k&gt;
&lt;d&gt;Specifies the product name in a NULL-terminated string.
&lt;i&gt;&lt;k&gt;dwFormats&lt;/k&gt;
&lt;d&gt;Specifies which standard formats are supported. The supported formats are specified with a logical OR of the following flags:
&lt;list&gt;
&lt;i&gt;WAVE_FORMAT_1M08
&lt;d&gt;11.025 kHz, Mono, 8-bit
&lt;i&gt;WAVE_FORMAT_1S08
&lt;d&gt;11.025 kHz, Stereo, 8-bit
&lt;i&gt;WAVE_FORMAT_1M16
&lt;d&gt;11.025 kHz, Mono, 16-bit
&lt;i&gt;WAVE_FORMAT_1S16
&lt;d&gt;11.025 kHz, Stereo, 16-bit
&lt;i&gt;WAVE_FORMAT_2M08
&lt;d&gt;22.05 kHz, Mono, 8-bit
&lt;i&gt;WAVE_FORMAT_2S08
&lt;d&gt;22.05 kHz, Stereo, 8-bit
&lt;i&gt;WAVE_FORMAT_2M16
&lt;d&gt;22.05 kHz, Mono, 16-bit
&lt;i&gt;WAVE_FORMAT_2S16
&lt;d&gt;22.05 kHz, Stereo, 16-bit
&lt;i&gt;WAVE_FORMAT_4M08
&lt;d&gt;44.1 kHz, Mono, 8-bit
&lt;i&gt;WAVE_FORMAT_4S08
&lt;d&gt;44.1 kHz, Stereo, 8-bit
&lt;i&gt;WAVE_FORMAT_4M16
&lt;d&gt;44.1 kHz, Mono, 16-bit
&lt;i&gt;WAVE_FORMAT_4S16
&lt;d&gt;44.1 kHz, Stereo, 16-bit
&lt;/list&gt;
&lt;i&gt;&lt;k&gt;wChannels&lt;/k&gt;
&lt;d&gt;Specifies whether the device supports mono (1) or stereo (2) input.
&lt;/parm&gt;

&lt;cmt&gt;Drivers can support other formats in addition to those specified in the &lt;k&gt;dwFormats&lt;/k&gt; field.
&lt;/cmt&gt;&lt;/ref&gt;
&lt;ref id=WAVEOPENDESC&gt;WAVEOPENDESC
&lt;sa&gt;WODM_OPEN, WIDM_OPEN&lt;/sa&gt;

&lt;syn&gt;typedef struct waveopendesc_tag {
    HWAVE  hWave;
    LPWAVEFORMAT  lpFormat;
    DWORD  dwCallback;
    DWORD  dwInstance;
} WAVEOPENDESC;
</PRE>
<P>This structure contains information needed by a waveform input or waveform output device driver when devices are opened with a <B>WODM_OPEN</B> or <B>WIDM_OPEN</B> message. </P>
<P><B>hWave</B> </P>
<P>Specifies the client's handle to the device, assigned by MMSYSTEM. Use this handle when notifying the client with the <B>DriverCallback</B> function. </P>
<P><B>lpFormat</B> </P>
<P>Specifies a far pointer to a <B>WAVEFORMAT</B> structure, indicating the waveform data format requested by the client. </P>
<P><B>dwCallback</B> </P>
<P>Specifies either the address of a callback function, a window handle, or a task handle, depending on the flags specified in the <I>dwParam2</I> parameter of the <B>WODM_OPEN</B> or <B>WIDM_OPEN</B> message. If this field contains a handle it is contained in the low-order word. The driver uses this information to notify the client using the <B>DriverCallback</B> function. </P>
<P><B>dwInstance</B> </P>
<P>Specifies a DWORD of instance information for the client. This instance information is returned to the client whenever the driver notifies the client using the <B>DriverCallback</B> function. </P>
<P></P>
<P></P></FONT></BODY></HTML>
