<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enabling and Disabling the Driver</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Enabling and Disabling the Driver </H3><P>When Windows is ready to receive keyboard input, it enables the driver by calling the <B>Enable</B> function. When Windows no longer requires keyboard input (when terminating or switching to a full-screen MS-DOS application, for example), it disables the driver by calling the <B>Disable</B> function. </P>
<P>The <B>Enable</B> function is responsible for: </P>
<UL><LI>     Saving the address of the keyboard-event callback function </LI><LI>     Initializing the Windows virtual-key state array </LI><LI>     Installing the keyboard-interrupt handler </LI><LI>     Installing the language-specific keyboard layouts </LI></UL><P></P>
<P>When Windows calls <B>Enable</B>, it passes the address of the keyboard-event callback function. <B>Enable</B> saves this address - the keyboard-interrupt handler uses it to pass scan and virtual-key codes back to Windows. </P>
<P>Windows also passes the address of its 256-element, virtual-key state array (sometimes called the keyboard-state vector) to <B>Enable</B>. The elements in this array specify the state of the virtual keys. Windows sets bit 7 in an element if the corresponding virtual key is down, and clears the bit if the key is up. Similarly, Windows toggles bit zero each time the virtual key is pressed. Although Windows maintains the key-state array, <B>Enable</B> initializes the array to reflect to current state of the SHIFT, CTRL, ALT, NUMLOCK, CAPSLOCK, and SCROLLLOCK keys as specified by the keyboard flags in the RAM area used by the ROM BIOS. (On most computers, the keyboard flags are at address 40h:17h.) </P>
<P></P>
<P><B>Note </B></P>
<P>If the keyboard driver reads data from the ROM BIOS, it must use the special segment selector, __ROMBIOS, to create ROM BIOS addresses. The selector (exported by the Windows kernel as KERNEL.173) corresponds to ROM BIOS address 0F0000H. </P>
<P></P>
<P>To install the driver's own keyboard-interrupt handler, the <B>Enable</B> function first saves the existing keyboard-interrupt handler. (On most computers, the keyboard interrupt is Interrupt 9.) The original handler address is saved to allow the <B>Disable</B> function to restore it as well as to allow the driver to call the original handler for certain actions. <B>Enable</B> should also save the address of the Keyboard Service routine (Interrupt 16h). The <B>Enable</B> and other functions use this address to set the keyboard lights. </P>
<P></P>
<P><B>Note </B></P>
<P>To support computers in which the keyboard and mouse use the same interrupt, Windows disables and enables both the keyboard and mouse drivers when switching to and from a full-screen MS-DOS application. Windows always enables the drivers in the reverse order in which it disables the drivers. </P>
<P></P>
<P>See also <B>Disable</B>, <B>Enable</B> </P></FONT></BODY></HTML>
