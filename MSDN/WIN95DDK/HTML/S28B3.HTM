<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GET_CURRENT_BANK_WRITE (Function 32)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>GET_CURRENT_BANK_WRITE (Function 32) </H3><P><B>Call With</B></P>
<P>EBX: Contains the VM handle (always the currently executing VM). </P>
<P>EBP: Points to the Windows VM's Client Registers. </P>
<P><B>Return Values</B></P>
<P>Save everything that you use. CY returned means that the mini-VDD handled the call. NC returned means that Main VDD should use a VESA call to retrieve the bank. If successful, EDX contains the current bank (write or read) as set in hardware. </P>
<P><B>Remarks</B></P>
<P><B>GET_CURRENT_BANK_WRITE</B> and <B>GET_CURRENT_BANK_READ</B> are made when the user presses ALT-TAB to switch away from a VESA hi-res application. The Main VDD uses <B>GET_CURRENT_BANK_WRITE</B> to retrieve the current state of the banking registers (which are "Windows" in VESA terminology). It then saves these for later restoration when the user presses ALT-TAB back to the VESA hi-res application. The Main VDD uses VESA function 4F05h to get the bank if the mini-VDD fails this call. </P>
<P></P>
<P></P></FONT></BODY></HTML>
