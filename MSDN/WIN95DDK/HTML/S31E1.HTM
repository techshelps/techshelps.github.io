<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Schedule_Thread_Event</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Schedule_Thread_Event </H3><P><BR></P>
<PRE>include vmm.inc

mov     edi, ThreadHandle
mov     esi, OFFSET32 EventCallback
mov     edx, RefData
VMMcall Schedule_Thread_Event
mov     [EventHandle], esi
</PRE>
<P>Schedules an event for the specified thread. This is an asynchronous service. </P>
<UL><LI>     Returns the event handle in ESI. The event handle can be used in subsequent calls to the Cancel_Thread_Event service to cancel the event. </LI></UL><P></P>
<P><I>ThreadHandle</I> </P>
<P>Handle of the thread to process the event. </P>
<P><I>EventCallback</I> </P>
<P>Address of the callback function. For more information about the callback function, see <B>EventCallback</B>. </P>
<P><I>RefData</I> </P>
<P>Reference data to pass to the callback function. </P>
<P>Since the specified thread must process the event, the system carries out a task switch (if necessary) before calling the function. The callback function can carry out any actions, and use any VMM services. The system completes the event processing before the VMM returns from the current interrupt. For additional information about event callbacks, see <I>Event Callbacks</I>. </P>
<P>See also <B>Cancel_Thread_Event</B>, <B>EventCallback</B>, <B>Schedule_Global_Event</B>, <B>Schedule_VM_Event</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
