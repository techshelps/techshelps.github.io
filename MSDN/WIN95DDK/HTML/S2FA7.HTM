<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Abort SCSI I/O Command</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Abort SCSI I/O Command </H3><P>Prototype: DWORD SendASPI32Command(LPSRB) </P>
<P>Declaration: LPSRB lpSRB; </P>
<P>The SendASPI32Command function with command code SC_ABORT_SRB is used to request that a pending SRB be aborted. It should be issued on any I/O request that has not completed if the application wishes to time-out on that request. Success of the abort command is never assured. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Parameter </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>lpSRB </P></TD><TD VALIGN="TOP"><P>Points to the following SCSI request block </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><BR></P>
<PRE>typedef struct {

 BYTE  SRB_Cmd;    // ASPI command code = SC_ABORT_SRB  
 BYTE  SRB_Status;   // ASPI command status byte
 BYTE  SRB_HaId;    // ASPI host adapter number
 BYTE  SRB_Flags;   // Reserved
 DWORD  SRB_Hdr_Rsvd;  // Reserved
 void  *SRB_ToAbort;  // Pointer to SRB to abort

} SRB_Abort, *PSRB_Abort;
</PRE>
<P>Table 4-8. Abort SCSI I/O Command </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Member </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>SRB_Cmd </P></TD><TD VALIGN="TOP"><P>[IN] This field must contain SC_ABORT_SRB. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRB_Status </P></TD><TD VALIGN="TOP"><P>[OUT] On return, this field will be the same as the return status defined below. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRB_HaId </P></TD><TD VALIGN="TOP"><P>[IN] This field specifies which installed host adapter the request is intended for. Host adapter numbers are always assigned by the ASPI manager layer beginning with zero. </P></TD></TR><TR><TD VALIGN="TOP"><P>SRB_Flags </P></TD><TD VALIGN="TOP"><P>[IN] Reserved = 0 </P></TD></TR><TR><TD VALIGN="TOP"><P>SRB_Hdr_Rsvd </P></TD><TD VALIGN="TOP"><P>Reserved = 0 </P></TD></TR><TR><TD VALIGN="TOP"><P>SRB_ToAbort </P></TD><TD VALIGN="TOP"><P>[IN] This fields contains a pointer to the SRB which is to be aborted. The actual failure or success of the abort operation is indicated by the status eventually returned in this SRB. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Table 4-9. Return Values from Abort SCSI I/O Command </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>SS_COMP </P></TD><TD VALIGN="TOP"><P>SCSI/ASPI request has completed without error. </P></TD></TR><TR><TD VALIGN="TOP"><P>SS_INVALID_HA </P></TD><TD VALIGN="TOP"><P>Invalid host adapter number. </P></TD></TR><TR><TD VALIGN="TOP"><P>SS_INVALID_SRB </P></TD><TD VALIGN="TOP"><P>One or more parameters in the SCSI Request Block (SRB) are set incorrectly. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>Example</B> </P>
<P>This example shows how to abort a "stuck" SCSI I/O. </P>
<P><BR></P>
<PRE> SRB_ExecSCSICmd StuckSRB;
 SRB_Abort AbortSRB;
 DWORD ASPIStatus;
  .
  .
 AbortSRB.SRB_Cmd    = SC_ABORT_SRB;
 AbortSRB.SRB_HaId   = 0;
 AbortSRB.SRB_Flags   = 0;
 AbortSRB.SRB_Hdr_Rsvd  = 0;
 AbortSRB.SRB_ToAbort  = (LPSRB) &amp;StuckSRB;
 ASPIStatus      = SendASPI32Command ( (LPSRB) &amp;AbortSRB );
  .
  .
</PRE></FONT></BODY></HTML>
