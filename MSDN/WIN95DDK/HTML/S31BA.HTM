<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_Debug_Flags_Service</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>_Debug_Flags_Service </H3><P><BR></P>
<PRE>include vmm.inc

push    flags
VMMcall _Debug_Out_Service
</PRE>
<P>Asserts various conditions. This is an asynchronous service. </P>
<UL><LI>     No return value. </LI></UL><P></P>
<P><I>flags</I> </P>
<P>Specifies the debug flags. It can be a combination of the following values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_NEVER_REENTER </P></TD><TD VALIGN="TOP"><P>VMM has not been re-entered (see below). </P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_TEST_REENTER </P></TD><TD VALIGN="TOP"><P>VMM has not been re-entered (see below). </P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_NOT_SWAPPING </P></TD><TD VALIGN="TOP"><P>The current thread is not in the middle of a paging operation. </P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_TEST_CLD </P></TD><TD VALIGN="TOP"><P>Assert that the processor direction flag is cleared. </P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_TEST_BLOCK </P></TD><TD VALIGN="TOP"><P>Asssert that NoBlock_Count is set to zero. </P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_LOG </P></TD><TD VALIGN="TOP"><P>Log this procedure (if requested). </P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_PROFILE </P></TD><TD VALIGN="TOP"><P>Increment profile count and validate the segment registers. </P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_ENTER_NOBLOCK </P></TD><TD VALIGN="TOP"><P>Increment the NoBlock_Count. </P></TD></TR><TR><TD VALIGN="TOP"><P>DFS_EXIT_NOBLOCK </P></TD><TD VALIGN="TOP"><P>Decrement the NoBlock_Count. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The DFS_NEVER_REENTER and DFS_TEST_REENTER bits differ in their interaction with the Begin_Reentrant_Execution service. When the Begin_Reentrant_Execution service is called, the VMM re-entry count is reset to zero, even though the VMM has mostly like actually been re-entered. The DFS_TEST_REENTER bit checks this fake re-entry count, whereas the DFS_NEVER_REENTER bit checks the true re-entry count (which is unaffected by Begin_Reentrant_Execution). </P>
<P>The DFS_ENTER_NOBLOCK and DFS_EXIT_NOBLOCK flags increment and decrement a counter which is checked by the DFS_TEST_BLOCK bit. If the DFS_TEST_BLOCK bit is set when this internal counter is nonzero, the debugger will be notified if it is installed. </P>
<P>The DFS_LOG bit calls the Log_Proc_Call service on behalf of the caller. </P>
<P>The DFS_PROFILE bit causes the service to increment a DWORD variable generated by the BeginProc macro. Do not set this bit manually; let the BeginProc macro do it for you. </P>
<P>This service has no effect in the retail version of Windows. It is intended to be used with the debugging version. </P>
<P>As a rule, you should never call this service directly. It is generated automatically by macros in vmm.h and debug.h. </P>
<P>The BeginProc macro automatically calls this service with the DFS_LOG bit, as well as the DFS_TEST_REENTER if the procedure being declared is not an asynchronous service, and the DFS_TEST_BLOCK flag if the procedure is in pageable code. In the case of an exported service, the BeginProc macro also generates a DWORD profiling count and sets the DFS_PROFILE bit. </P>
<P>The ENTER_NOBLOCK, EXIT_NOBLOCK, and ASSERT_MIGHT_BLOCK macros in debug.h should be used to manipulate the block-related DFS bits. </P>
<P></P>
<P></P></FONT></BODY></HTML>
