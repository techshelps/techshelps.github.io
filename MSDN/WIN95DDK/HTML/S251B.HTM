<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CONFIGMG_Get_Alloc_Log_Conf</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>CONFIGMG_Get_Alloc_Log_Conf </H3><P><BR></P>
<PRE>CONFIGRET CONFIGMG_Get_Alloc_Log_Conf(PCMCONFIG pccBuffer, DEVNODE dnDevNode, ULONG ulFlags)
</PRE>
<P>Get the allocated (or boot) resources in a nice table format. </P>
<UL><LI>     Returns CR_SUCCESS if the function is successful. Otherwise, the return value can be CR_INVALID_DEVNODE, CR_INVALID_FLAG, CR_INVALID_POINTER, or CR_NO_MORE_LOG_CONF. </LI></UL><P></P>
<P><I>pccBuffer</I> </P>
<P>is a pointer to a CMCONFIG struct (which can be on the stack) to be filled by this function with the currently allocated config. </P>
<P><I>dnDevNode</I> </P>
<P>Device node that a device driver wants to know what are the allocated (or boot) resources. </P>
<P><I>ulFlags</I> </P>
<P>must be one of CM_GET_ALLOC_CONFIG_ALLOC or CM_GET_ALLOC_CONFIG_BOOT_ALLOC. </P>
<UL><LI>     Returns CR_SUCCESS if the function is successful. Otherwise, the return value can be CR_INVALID_POINTER, CR_INVALID_DEVNODE or CR_INVALID_FLAG. </LI></UL><P></P>
<P>This call is done when a device driver wants to easily know what its configuration is. </P>
<P>This function is synchronous and must not be called from within an interrupt handler. </P>
<P></P>
<P></P></FONT></BODY></HTML>
