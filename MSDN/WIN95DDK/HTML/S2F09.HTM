<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Required Functions</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>Required Functions </H2><P>The following table describes the entry points that are exported by the port monitor. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Entry Point/Description </B></P></TD><TD VALIGN="TOP"><P><B>Comment </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>AddPort</B>: A port management function that adds a port to the list of currently supported ports in the spooler environment. </P></TD><TD VALIGN="TOP"><P>Called by the spooler in order to add a port to the set of ports maintained by your monitor. The spooler calls this entry point when the user chooses the AddPort button from the Windows 95 Printer Properties dialog. You may have to implement user interface code to get all the information your <B>AddPort</B> function needs to create a port. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>ClosePort</B>: Closes a previously-opened port when no printers are connected to the port. </P></TD><TD VALIGN="TOP"><P>Called by the spooler to enable your monitor to clean up any resources, such as data structures, that are associated with one of the ports your port monitor is maintaining. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>ConfigurePort</B>: A port management function that configures the specified port. If the port is a COM port, configures the baud rate. If the port is a parallel port, configures retry parameters. If the port is a network port, may change the port address. </P></TD><TD VALIGN="TOP"><P>Called by the spooler when the user chooses the Port Settings button from the Windows 95 Printer Properties dialog. This enables your port monitor to present a user interface that allows a user to configure one of the ports maintained by your port monitor. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>DeletePort</B>: A port management function that frees the port monitor of any responsibility for managing the port or monitoring print jobs on the port. </P></TD><TD VALIGN="TOP"><P>Called by the spooler when the user chooses the Delete Port button from the Windows 95 Printer Properties dialog. When the <B>DeletePort</B> function is called in your port monitor, it should delete all knowledge of the specified port from your port monitor. This function will never be called when the specified port is in use (opened). </P></TD></TR><TR><TD VALIGN="TOP"><P><B>EndDocPort</B>: Performs end-of-print-job tasks on the specified port. </P></TD><TD VALIGN="TOP"><P><B>EndDocPort</B> is called after all the data in a print job has been passed to your port monitor using <B>WritePort</B> function calls. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>EnumPorts</B>: A port management function that provides a list of all the ports available for printing on the local machine through your port monitor. </P></TD><TD VALIGN="TOP"><P>Called by the spooler to get the list of ports maintained by your port monitor. The spooler calls all installed monitors in turn to build up a list of all the available ports. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>GetPrinterDataFromPort</B>: Gets data from a bi-directional printer by providing IEEE 1284 support. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>InitializeMonitorEx</B>: Sets up the function pointer table that registers with the spooler all the other entry points provided by your port monitor. </P></TD><TD VALIGN="TOP"><P>Your port monitor should establish function pointers for a set of port management functions (<B>AddPort</B>, <B>ConfigurePort</B>, <B>DeletePort</B>, and <B>EnumPorts</B>) and a set of printer and print job monitoring functions (<B>OpenPort</B>, <B>ClosePort</B>, <B>StartDocPort</B>, <B>EndDocPort</B>, <B>WritePort</B>, and <B>ReadPort</B>). </P></TD></TR><TR><TD VALIGN="TOP"><P><B>OpenPort</B>: Opens the specified port. </P></TD><TD VALIGN="TOP"><P>When the <B>OpenPort</B> function is called, it should set up all resources, such as initialized data structures, needed to print to the specified port. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>ReadPort</B>: Reads data from the printer. </P></TD><TD VALIGN="TOP"><P>The <B>ReadPort</B> function is called to get information from a bi-directional printer. If your <B>ReadPort</B> function can read data from the printer, it should return that raw data to the caller (which is probably a language monitor). If your <B>ReadPort</B> function cannot read any data from the printer within some appropriate time interval, it should return a failure code. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>SetPortTimeOuts</B>: Sets a time out value on an open port. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>StartDocPort</B>: Performs the tasks it takes to start a print job on the specified port. </P></TD><TD VALIGN="TOP"><P>The <B>StartDocPort</B> function is called at the start of a print job. The <B>StartDocPort</B> function in your port monitor should setup whatever is needed for your port monitor to print the data that will be provided in subsequent <B>WritePort</B> and any subsequent <B>ReadPort</B> function calls. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>WritePort</B>: Writes data to the printer. </P></TD><TD VALIGN="TOP"><P>The <B>WritePort</B> function is called repeatedly to send blocks of data to the printer. The <B>WritePort</B> function in your port monitor can call the <B>SetJob</B> function to modify print job state information. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P></FONT></BODY></HTML>
