<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FS_LockFile</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>FS_LockFile </H3><P><BR></P>
<PRE>FS_LockFile(
 PIOREQ pir
 )
</PRE>
<P>File record lock and unlock is performed through <B>FS_LockFile</B>. This routine handles the Win32 functions: LockFile(), and UnlockFile(); and INT 21h function: 5Ch. </P>
<P><I>ir_rh</I> </P>
<P>Supplies handle to disk volume or network resource which contains the file. </P>
<P><I>ir_fh</I> </P>
<P>Supplies FSD file handle. </P>
<P><I>ir_sfn</I> </P>
<P>Supplies system file number. </P>
<P><I>ir_flags</I> </P>
<P>Supplies lock type to be performed. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Lock Type Values:</B> </P>
<P>One of the following types will be specified. </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>LOCK_REGION</B> </P></TD><TD VALIGN="TOP"><P>Region is to be locked. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>UNLOCK_REGION</B> </P></TD><TD VALIGN="TOP"><P>Region is to be unlocked. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_options</I> </P>
<P>Supplies special options for the lock/unlock operation. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Lock Option Values:</B> </P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>Value </B></P></TD><TD VALIGN="TOP"><P><B>Meaning </B></P></TD></TR><TR><TD VALIGN="TOP"><P><B>LOCKF_RD</B> </P></TD><TD VALIGN="TOP"><P>This option specifies that the FSD should implement the special read lock semantics that Netware supports. Look below for more details about this. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>LOCKF_NW</B> </P></TD><TD VALIGN="TOP"><P>This option is specified if the lock and unlock operations should be implemented as per the Netware semantics. Netware semantics for the lock and unlock operations are different from DOS semantics. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><I>ir_locklen</I> </P>
<P>Supplies length of lock region. </P>
<P><I>ir_pos</I> </P>
<P>Supplies file position offset to lock region. </P>
<P><I>ir_user</I> </P>
<P>Supplies user id for this request. </P>
<P><I>ir_pid</I> </P>
<P>Supplies process id for this request. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>     <I>ir_error</I> </P></TD><TD VALIGN="TOP"><P>Returns status of the operation ( 0 if no error, errorcode otherwise ). </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>Netware has different semantics for the lock and unlock operations. It has a read lock which allows processes to read from the file but not write to the file. There can be multiple, overlapping read locks by different processes on a file. A read lock can be promoted to a write lock provided there are no other read locks by other processes on that region. Similarly, a write lock can be demoted to a read lock. The traditional DOS locking semantics are similar to the Netware write lock semantics. It does not allow overlapping locks on a file and there is no concept of lock promotion or demotion. For additional details on the Netware semantics, please refer to Netware documentation. </P>
<P></P>
<P></P></FONT></BODY></HTML>
