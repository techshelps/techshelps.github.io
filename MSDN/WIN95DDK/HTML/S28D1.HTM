<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VIRTUALIZE_CRTC_IN (Function 16)</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>VIRTUALIZE_CRTC_IN (Function 16) </H3><P><B>Call With</B></P>
<P>EAX: Contains the value to output to port (on an OUT call). </P>
<P>EBX: Contains the VM handle for which the I/O is being done. </P>
<P>ECX: Contains the I/O flags (documented in VMM.INC). </P>
<P>EDX: Contains the port that the I/O is to be done to or from. </P>
<P>EBP: Points to VM's client registers. </P>
<P><B>Return Values</B></P>
<P>CY set indicates that the mini-VDD has done the I/O and that the Main VDD should take no further action. In this case, AL should contain the return value from the <B>IN</B> call and all registers except EBX and EBP may be destroyed. </P>
<P>NC set indicates that the mini-VDD may have taken some action but wants the Main VDD to do the default action. In this case the mini-VDD must not have destroyed ANY registers. </P>
<P><B>Remarks</B></P>
<P>Many chipsets tack their extended registers onto the standard VGA ports. These routines allow the mini-VDD to perform special actions on these ports. The VIDEO7 mini-VDD is a good example of virtualizing extensions to the Sequencer ports while the S3 and Cirrus mini-VDD's show how virtualization and notification via the VGA ports are implemented in a mini-VDD. Note that the action taken by the Main VDD is undefined for port indices which are greater than the standard VGA ports (0-18h for CRTC, 0-4 for Sequencer, 0-9 for GCR, and 0-255 for DAC ports). </P>
<P></P>
<P></P></FONT></BODY></HTML>
