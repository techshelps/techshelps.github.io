<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Decompressing Directly to Video Hardware</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Decompressing Directly to Video Hardware </H3><P>Drivers that can render video directly to hardware should support the ICM_DRAW messages in addition to the ICM_DECOMPRESS messages. The ICM_DRAW messages decompress data directly to hardware rather than into a data buffer returned to the client-application by the decompression driver. </P>
<P>Your driver will receive a series of messages from the client-application to coordinate the following activities to decompress a video sequence: </P>
<UL><LI>     Setting the driver state </LI><LI>     Specifying the input format </LI><LI>     Preparing to decompress video </LI><LI>     Decompressing the video </LI><LI>     Ending decompression </LI></UL><P></P>
<P>The following ICM_DRAW messages are used by video decompression drivers for these decompression activities: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="223pt" VALIGN="TOP"><COL WIDTH="124pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Message </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW </P></TD><TD VALIGN="TOP"><P>Decompresses a frame of data and draws it. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_BEGIN </P></TD><TD VALIGN="TOP"><P>Prepares to draw data. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_END </P></TD><TD VALIGN="TOP"><P>Clean up after decompressing an image to the screen. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_REALIZE </P></TD><TD VALIGN="TOP"><P>Realizes a palette. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_QUERY </P></TD><TD VALIGN="TOP"><P>Determines if the driver can render data in a specific format. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_SUGGESTFORMAT </P></TD><TD VALIGN="TOP"><P>Has the driver suggest and output format. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The video decompressed with the ICM_DRAW messages is retained by your driver and it handles the display of data. These messages control only the decompression process. The messages used to control the drawing are described separately. Your driver will receive the ICM_DRAW messages only if it sets the VIDCF_DRAW flag when it responds to the ICM_GETINFO message. </P>
<H4><A NAME="sec0"></A>Setting the Driver State </H4><P>The client-application restores the driver state by sending ICM_SETSTATE. The process for handling this message is the same as for the ICM_DECOMPRESS messages. </P>
<H4><A NAME="sec1"></A>Specifying the Input and Output Formats </H4><P>Because your driver handles the drawing of video, the client-application does not need to determine the output format. The client-application needs to know only if your driver can handle the input format. It sends ICM_DRAW_QUERY to determine if your driver supports the input format. The input format is specified with a pointer to a BITMAPINFO data structure in <I>dwParam1</I>. The <I>dwParam2</I> parameter is not used. </P>
<P>If your driver supports the specified input format, return ICERR_OK to indicate the driver accepts the formats. If your driver does not support the format, return ICERR_BADFORMAT. </P>
<P>Your driver might also receive the ICM_DRAW_SUGGESTFORMAT message. Typically, this message is sent by the decompression portion of the driver to the drawing portion of the driver to obtain the best decompressed format for the data when the drawing portion can handle several formats. The <I>dwParam1</I> parameter of ICM_DRAW_SUGGESTFORMAT points to a <B>ICDRAWSUGGEST</B> structure and the <I>dwParam2</I> parameter specifies its size. </P>
<P>If returning format information, return ICERR_OK. If the <B>lpbiSuggest</B> member is NULL, return the amount of memory required for the suggested output format structure. </P>
<H4><A NAME="sec2"></A>Preparing to Decompress Video </H4><P>When the client-application is ready, it sends the ICM_DRAW_BEGIN message to the driver to prepare the driver for decompressing the video stream. Your driver should create any tables and allocate any memory that it needs to decompress data efficiently. </P>
<P>The client-application sets <I>dwParam1</I> to the ICDRAWBEGIN data structure. The size of this structure is contained in <I>dwParam2</I>. </P>
<P>If the ICDRAW_QUERY flag is set in the <B>dwFlags</B> member, the client-application is interrogating your driver to determine if can decompress the data with the parameters specified in the ICDRAWBEGIN data structure. Your driver should return ICM_ERR_OK if it can accept the parameters. It should return ICM_ERR_NOTSUPPORTED if it does not accept them. </P>
<P>When the ICDRAW_QUERY flag is set, ICM_DRAW_BEGIN will not be paired with ICM_DRAW_END. Your driver will receive another ICM_DRAW_BEGIN without this flag to start the actual decompression sequence. </P>
<P>Your driver can ignore the palette handle specified in the <B>hpal</B> member. </P>
<P>The <B>hwnd</B> and <B>hdc</B> member specifies the handle of the window and DC used for drawing. These members are valid only if the ICDRAW_HDC flag is set in the <B>dwFlags</B> member. </P>
<P>The <B>xDst</B> and <B>yDst</B> members specify the x- and y-position of the upper-right corner of the destination rectangle. (This is relative to the current window or display context.) The <B>dxDst</B> and <B>dyDst</B> members specifies the width and height of the destination rectangle. These members are valid only if ICDRAW_HDC flag is set. The ICDRAW_FULLSCREEN flag indicates the entire screen should be used for display and overrides any values specified for these members. </P>
<P>The <B>xSrc</B>, <B>ySrc</B>, <B>dxSrc</B>, and <B>dySrc</B> members specify a source rectangle used to clip the frames of the video sequence. The source rectangle is stretched to fill the destination rectangle. The <B>xSrc</B> and <B>ySrc</B> members specify x- and y-position of the upper-right corner of the source rectangle. (This is relative to a full frame image of the video.) The <B>dxSrc</B> and <B>dySrc</B> members specify the width and height of the source rectangle. </P>
<P>Your driver should stretch the image from the source rectangle to fit the destination rectangle. If the client-application changes the size of the source and destination rectangles, it will send the ICM_DRAW_END message and specify new rectangles with a new ICM_DRAW_BEGIN message. For more information on handling the source and destination rectangles, see the <I>Microsoft(r) Win32(tm) Programmer's Reference</I>. </P>
<P>The <B>lpbi</B> member specifies a pointer to a <B>BITMAPINFOHEADER</B> data structure containing the input format. </P>
<P>The <B>dwRate</B> member specifies the decompression rate in an integer format. To obtain the rate in frames-per-second divide this value by the value in <I>dwScale</I>. Your driver will use these values when it handles the ICM_DRAW_START message. </P>
<P>If your driver can decompress the data with the parameters specified in the ICDRAWBEGIN data structure, your driver should return ICERR_OK and allocate any resources it needs to efficiently decompress the data. If your driver cannot decompress the data with the parameters specified, your driver should fail the message by returning ICERR_NOTSUPPORTED. When this message fails, your driver will not get an ICM_DRAW_END message so it should not prepare its resources for other ICM_DRAW messages. </P>
<H4><A NAME="sec3"></A>Decompressing the Video </H4><P>The client-application sends ICM_DRAW each time it has an image to decompress. (Your driver should use this message to decompress images. It should wait for the ICM_DRAW_START message before it begins to render them.) The client-application uses the flags in the file index to ensure the first frame in a series of frames decompressed starts with a key frame boundary. Your driver must allocate the memory it needs for the decompressed image. </P>
<P>The ICDRAW data structure specified in <I>dwParam1</I> contains the decompression parameters. The value specified in <I>dwParam2</I> specifies the size of the structure. </P>
<P>The format of the input data is specified in a BITMAPINFOHEADER structure pointed to by <B>lpFormat</B> member. The input data is in a buffer specified by the <B>lpData</B> member. The number of bytes in the input buffer is specified by the <B>cbData</B> member. </P>
<P>The client-application sets the ICDRAW_HURRYUP flag in the <B>dwFlags</B> member when it wants your driver to try to decompress data at a faster rate. For example, the client-application might use this flag when the video is starting to lag behind the audio. If your driver cannot speed up its decompression and rendering performance, it might be necessary to avoid rendering a frame of data. The client-application sets the ICDRAW_UPDATE flag and sets <B>lpData</B> to NULL if it wants your driver to update the screen based on data previously received. </P>
<P>When your driver has finished decompressing the data, it returns ICERR_OK. After the driver returns from this message, the client-application deallocates or reuses the memory containing the format and image data. If your driver needs the format or image data for future use, it should copy the data it needs before it returns from the message. </P>
<H4><A NAME="sec4"></A>Ending Decompression </H4><P>Your driver receives ICM_DRAW_END when the client-application no longer needs data decompressed or rendered. For this message, your driver should free the resources it allocated for the ICM_DRAW_BEGIN message. Your driver should also leave the display in the full screen mode. </P>
<P>After sending ICM_DRAW_END, the client-application must send ICM_DRAW_BEGIN to continue decompressing data. Your driver should not expect the client-application to send a ICM_DRAW_END message for each ICM_DRAW_BEGIN message. The client-application can use ICM_DRAW_BEGIN to restart decompression without sending ICM_DRAW_END. </P>
<H4><A NAME="sec5"></A>Rendering the Data </H4><P>The client-application sends the following messages to control the driver's internal clock for rendering the decompressed data: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="223pt" VALIGN="TOP"><COL WIDTH="124pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Message </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_GETTIME </P></TD><TD VALIGN="TOP"><P>Obtains the value of the driver's internal clock if it is handling the timing of drawing frames. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_SETTIME </P></TD><TD VALIGN="TOP"><P>Sets the driver's internal clock if it is handling the timing of drawing frames. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_START </P></TD><TD VALIGN="TOP"><P>Starts the internal clock of a driver if it handles the timing of drawing frames. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_STOP </P></TD><TD VALIGN="TOP"><P>Stop the internal clock of a driver if it handles the timing of drawing frames. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_WINDOW </P></TD><TD VALIGN="TOP"><P>Informs the driver the display window has been moved, hidden, or displayed. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_FLUSH </P></TD><TD VALIGN="TOP"><P>Flushes any frames that are waiting to be drawn. </P>
<P></P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_RENDERBUFFER </P></TD><TD VALIGN="TOP"><P>Draws a frame waiting to be drawn. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_UPDATE </P></TD><TD VALIGN="TOP"><P>Redraws the image currently displayed. </P></TD></TR><TR><TD VALIGN="TOP"><P>ICM_DRAW_CHANGEPALETTE </P></TD><TD VALIGN="TOP"><P>Changes the palette. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>The client-application sends ICM_DRAW_START to have your driver start (or continue) rendering data at the rate specified by the ICM_DRAW_BEGIN message. The ICM_DRAW_STOP message pauses the internal clock. Neither of these messages use <I>dwParam1</I>, <I>dwParam2</I>, or a return value. </P>
<P>The client-application uses ICM_DRAW_GETTIME to obtain the value of the internal clock. Your driver returns the current time value (this is normally frame numbers for video) in the DWORD indicated by the pointer specified by <I>dwParam1</I>. The current time is relative to the start of drawing. </P>
<P>The client-application uses ICM_DRAW_SETTIME to set the value of the internal clock. Typically, the client-application uses this message to synchronize the driver's clock to an external clock. Your driver should set its clock to the value (this is normally frame numbers for video) specified in the DWORD pointed to by <I>dwParam1</I>. </P>
<P>The client-application sends ICM_DRAW_FLUSH to have your driver discard any frames that have not been drawn. </P>
<P>The client-application sends ICM_DRAW_RENDERBUFFER to have your driver draw the image currently buffered. </P>
<P>The client-application sends ICM_DRAW_UPDATE to have your driver redraw an image. </P>
<P>The client-application sends ICM_DRAW_CHANGEPALETTE when the palette changes in the movie. </P></FONT></BODY></HTML>
