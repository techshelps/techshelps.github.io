<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Printer Driver DDI Changes</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Printer Driver DDI Changes </H3><P>There is a required set of DDIs that a Windows 95 printer driver must support in order to function in the Windows 95 environment. For information about these DDIs, <I>DDIs That Must Be Supported</I>. </P>
<P>There is another set of DDIs that is required of a printer driver if it wants to take full advantage of the new Windows 95 capabilities. For information about these DDIs, <I>DDIs That Expand Functionality</I>. </P>
<H4><A NAME="sec0"></A>DDIs That Must Be Supported </H4><P>The DDIs that a Windows 95 printer driver must support, at a minimum, are listed in the following sections. </P>
<H5><A NAME="sec1"></A>ExtTextOut DDI Must Be Supported </H5><P>Under Windows 95, the <B>StrBlt</B> DDI is no longer supported. Printer drivers are required to support the <B>ExtTextOut</B> DDI instead. </P>
<H5><A NAME="sec2"></A>Big Fonts Support Has Changed </H5><P><I>Big fonts</I> are fonts that require more than 64K of data to express. Under Windows 95, all printer drivers that need raster fonts from GDI must support big fonts and report this capability by setting the RC_BIGFONTS bit in GDIINFO.dpRaster. </P>
<P>Printer drivers can no longer use GDI to convert a big font into several smaller fonts as was possible under Windows 3.x. </P>
<H5><A NAME="sec3"></A>Windows 3.x GDI Priority Queue Functions Must Be Supported Internally </H5><P>The GDI functions <B>CreatePQ</B>, <B>DeletePQ</B>, <B>InsertPQ</B>, <B>MinPQ</B>, <B>SizePQ</B>, and <B>ExtractPQ</B> that were available under Windows 3.x do not exist in Windows 95. Under Windows 95, printer drivers must internally implement the all the functionality that orders device-specific fonts correctly on the page without calling these GDI functions. </P>
<H5><A NAME="sec4"></A>ExtDeviceMode DDI Should Be Supported </H5><P>Under Windows 95, the <B>DeviceMode</B> DDI will continue to be supported, but will be dropped in a future Windows release. For this reason, and because the <B>ExtDeviceMode</B> offers more capability, device drivers should support <B>ExtDeviceMode</B>. The benefits of implementing <B>ExtDeviceMode</B> are described in <I>DDIs That Expand Functionality</I>. </P>
<H5><A NAME="sec5"></A>DeviceCapabilities Should Be Supported </H5><P>Under Windows 95, the <B>DeviceCapabilities</B> DDI is not required, but will be in a future release of Windows. The benefits of implementing <B>DeviceCapabilities</B> are described in <I>DDIs That Expand Functionality</I>. </P>
<H5><A NAME="sec6"></A>Drivers Must Not Communicate Directly with the Device </H5><P>Under Windows 95, printer drivers must not use the <B>OpenComm</B> function to communicate directly with the device. Printer drivers should communicate with the device by calling the DDI exported by a port monitor instead. For a description of the relationship between Windows 95 printer drivers and port monitors, see <I>About the Print Spooler</I>. For detailed information about the DDI exported by a Windows 95 port monitor, see <I>About Port Monitors</I>. </P>
<H5><A NAME="sec7"></A>Printer Escapes Should Be Supported </H5><P>Printer escapes provide graphics support that is otherwise not available through GDI. Applications use printer escapes to perform device-dependent operations not supported by GDI. Applications call the <B>ExtEscape</B> or <B>Escape</B> functions to initiate an escape and GDI calls the printer driver's <B>Control</B> function to complete the escape. In some cases, GDI may also perform some work during <B>ExtEscape</B> or <B>Escape</B> calls. </P>
<P>Windows 95 printer drivers should support all escapes that are reasonable for a given device. All drivers must support the QUERYESCSUPPORT escape which reports the escapes the driver supports. </P>
<P>Note the only way to ensure your printer driver will support any Windows 3.x application is to support all of the sixty or so escapes documented in the Windows 3.x SDK. </P>
<P>There have been changes to the way GDI handles printer escapes in Windows 95 and these are documented below. Despite these changes at the interface between applications and GDI, the only way to ensure your printer driver will support any Windows 3.x application is to support all of the sixty or so escapes documented in the Windows 3.x SDK. </P>
<P>At the interface between applications and GDI, the following changes have taken place: </P>
<UL><LI>     In Windows 95, many Windows 3.x printer escape functions are supported as Win32 APIs and application developers are encouraged to use those functions. </LI><LI>     If an application uses an escape, the application code should use the <B>ExtEscape</B> function to call GDI instead of an <B>Escape</B> function. </LI><LI>     From 32-bit applications, GDI will accept a limited number of escapes in an <B>Escape</B> function call: 
<P><BR></P>
<PRE>BEGIN_PATH
CLIP_TO_PATH
CLOSECHANNEL
DOWNLOADHEADER
DOWNLOADFACE
ENCAPSULATED_POSTSCRIPT
END_PATH
GETCOLORTABLE
GETDEVICEUNITS
GETPHYSPAGESIZE
GETPRINTINGOFFSET
GETSCALINGFACTOR
NEXTBAND
OPENCHANNEL
PASSTHROUGH
POSTSCRIPT_PASSTHROUGH
POSTSCRIPT_DATA
POSTSCRIPT_IGNORE
QUERYESCSUPPORT
QUERYDIBSUPPORT
</PRE></LI><LI>     From 16-bit applications, GDI will accept the following escapes in an <B>Escape</B> function call: 
<P><BR></P>
<PRE>ABORTDOC
ENDDOC
NEWFRAME
SETABORTPROC
SETCOPYCOUNT
STARTDOC
</PRE></LI></UL><P></P>
<H4><A NAME="sec8"></A>DDIs That Expand Functionality </H4><P>A printer driver that exploits all the Windows 95 functionality meet the requirements described in the following sections. These requirements are listed below in the order of importance: </P>
<UL><LI>     Expanded <B>DEVMODE</B> structure should be supported. </LI><LI>     <B>DrvGetPrinterData</B> and <B>DrvSetPrinterData</B> calls should be used in a recommended way. </LI><LI>     Modified <B>ExtTextOut</B> DDI should be supported. </LI><LI>     New E<B>xtDeviceModePropSheet</B> DDI should be supported. </LI><LI>     <B>DeviceCapabilities</B> DDI should be supported. </LI><LI>     Enhanced Metafile (EMF) spooling should be supported. </LI><LI>     New services are available from the Windows 95 DIB Engine component. </LI><LI>     New Bezier curve <B>Output</B> DDI style should be supported. </LI></UL><P></P>
<H5><A NAME="sec9"></A>Expanded DEVMODE Structure Should Be Supported </H5><P>If your printer driver expects Windows 95 to provide Image Color Matching for a color printer, then the driver must support the new <B>DEVMODE</B> structure. </P>
<P>Other benefits that any printer driver gains by supporting the new <B>DEVMODE</B> structure are: </P>
<UL><LI>     The driver is aware of friendly printer names. </LI><LI>     The driver can structure its private portion of <B>DEVMODE</B> to separate the document-specific and printer-specific portions so only the portions of <B>DEVMODE</B> relevant to formatting documents will be passed to Win32 applications. </LI></UL><P></P>
<P>Any driver that supports the new Windows 95 <B>DEVMODE</B> structure and reports DEVMODE.dmSpecVersion = 0x0400 must support the new <B>DrvSetPrinterData</B> and <B>DrvGetPrinterData</B> DDIs, which are described below. </P>
<H5><A NAME="sec10"></A>New DrvSetPrinterData and DrvGetPrinterData Functions Are Available </H5><P>The new <B>DrvSetPrinterData</B> DDI enables 16-bit printer drivers to store <B>DEVMODE</B> structure data in the registry, where it is easy for 32-bit system component to access. If a printer driver caches DEVMODE data by calling <B>DrvSetPrinterData</B>, then Windows 95 print subsystem components can return DEVMODE data to Win32 APIs without having to call the device driver to get the data. </P>
<P>The <B>DrvGetPrinterData</B> DDI retrieves the DEVMODE data from the registry. </P>
<P>Note that any driver that supports the new Windows 95 <B>DEVMODE</B> structure and reports DEVMODE.dmSpecVersion = 0x0400 must also support the new <B>DrvSetPrinterData</B> and <B>DrvGetPrinterData</B> DDIs. </P>
<H5><A NAME="sec11"></A>New ExtTextOut DDI Should Be Supported </H5><P>Windows 95, unlike Windows 3.x, supports TrueType fonts that contain more than 256 characters. Windows 95 enumerates multiple character sets from a single TrueType font to applications. Windows 95 does this based on the contents of an individual TrueType font that has been installed. </P>
<P>In order to render these fonts on output devices, a printer device driver must report the capability to understand and support TrueType glyph indices, which are two-byte values, in addition to Windows ANSI characters, which are one-byte values. Device drivers which understand and support TrueType glyph indices will be able to automatically support TrueType fonts with multiple character sets, without having special knowledge of each of these character sets. This is a key requirement in products distributed in Europe and the Far East, where multi-lingual character issues are common. </P>
<H5><A NAME="sec12"></A>New ExtDeviceModePropSheet DDI Should Be Supported </H5><P>Windows 95 provides a new Property Sheet dialog box style for controlling the attributes of many system objects, including printers. </P>
<P>(To look at the property sheets for an installed printer in the Windows 95 user interface, do the following: Click the Start button; select Settings; select Printers; right-click on the installed printer icon; and then select Properties.) </P>
<P>Printer property sheets are used for configuring attributes of printer objects managed by the print subsystem (attributes such as spool settings, port settings, and peer-to-peer sharing). A print driver that supports the E<B>xtDeviceModePropSheet</B> DDI can provide additional property sheets displayed at the same level and will visually appear as better integrated into the system. </P>
<P>Drivers that do not support the ExtDeviceModePropSheet DDI have to support the Windows 3.x <B>ExtDeviceMode</B> DDI and the user will access the driver-controlled settings by pressing a button on one of the system-supplied property sheets. </P>
<H5><A NAME="sec13"></A>DeviceCapabilities DDI Should Be Supported </H5><P>For more information about the <B>DeviceCapabilities</B> function, see the Windows 3.1 DDK. </P>
<H5><A NAME="sec14"></A>Enhanced Metafile (EMF) Spooling Should Be Supported </H5><P>For information about the benefits of using EMF spooling as well as implementation details, see <I>About the Print Spooler</I>. </P>
<H5><A NAME="sec15"></A>New Windows 95 DIB Engine Component Services May Be Used </H5><P>Printer drivers can use the services offered by the DIB Engine, which is a new Windows 95 component, to operate on DIB files. This saves writing and testing code in the device driver to perform these operations. </P>
<P>For more information about the services offered by the DIB engine, see <I>About Display Minidrivers</I>. </P>
<H5><A NAME="sec16"></A>New Output DDI Style for Bezier Curves Can Be Supported </H5><P>Printer drivers for devices that draw Bezier curves and that support the new Bezier curve style as part of their <B>Output</B> DDI will enable GDI to call the driver to render a Bezier curve with one call instead of a series of <B>Output</B> calls with the OS_POLYLINE flag set in the <I>wStyle</I> parameter. </P>
<P>Drivers that support the OS_POLYBEZIER flag in the <B>Output</B> DDI <I>wStyle</I> parameter must report this capability by setting the CC_POLYBEZIER bit in GDIINFO.dpCurves. </P>
</FONT></BODY></HTML>
