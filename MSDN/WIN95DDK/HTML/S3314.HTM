<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Get_NMI_Handler_Addr</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Get_NMI_Handler_Addr </H3><P><BR></P>
<PRE>include vmm.inc

VMMcall Get_NMI_Handler_Addr

mov     [NMI], esi          ; offset to current NMI handler
</PRE>
<P>Returns the address of the current Non-Maskable Interrupt (NMI) handler. Uses ESI, Flags. </P>
<UL><LI>     Returns the offset of the current NMI handler in the ESI register. </LI></UL><P></P>
<P>If a virtual device needs to hook the Non-Maskable Interrupt it must first call this service to get and save the original NMI handler address. The virtual device can then install the new NMI handler by using the <B>Set_NMI_Handler_Addr</B> service. The new handler should create an NMI handler chain by passing execution to the original NMI handler whenever it does not process the NMI. </P>
<P>See also <B>Set_NMI_Handler_Addr</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
