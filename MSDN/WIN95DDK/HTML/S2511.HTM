<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CONFIGMG_Deregister_Arbitrator</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>CONFIGMG_Deregister_Arbitrator </H3><P><BR></P>
<PRE>CONFIGRET CONFIGMG_Deregister_Arbitrator(REGISTERID id, ULONG ulFlags)
</PRE>
<P>Removes a resource arbitrator. This function is rarely called. </P>
<UL><LI>     Returns CR_SUCCESS if the function is successful. Otherwise, the return value can be CR_INVALID_API, CR_INVALID_ARBITRATOR or CR_INVALID_FLAG. </LI></UL><P></P>
<P><I>id</I> </P>
<P>The identifier of the resource arbitrator. This identifier must have been created by a call to the <B>CONFIGMG_Register_Arbitrator</B> function. </P>
<P><I>ulFlags</I> </P>
<P>Must be zero. </P>
<P>This function deregisters an arbitrator and its resource but is not typically used for this purpose. If an arbitrator is global and registers with a NULL device node, it typically is never deregistered (for example, IO, IRQ, DMA and memory). If the arbitrator is local to a specific device node (for example, a PCMCIA socket), it is called automatically by the ARB_REMOVE arbitrator function when its device node is removed. </P>
<P>See also <B>CONFIGMG_Register_Arbitrator</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
