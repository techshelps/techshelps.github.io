<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Begin_V86_Serialization</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Begin_V86_Serialization </H3><P><BR></P>
<PRE>include vmm.inc

mov     ecx, flags
VMMcall Begin_V86_Serialization
</PRE>
<P>Serializes access to V86 mode among the threads in the system VM by using a mutex called the "V86 mutex". Because the mutex is taken automatically when <B>Begin_Nest_V86_Exec</B> is called in the system VM, a VxD typically does not directly call this service. A VxD might call this service when it needs to perform a nested execution operation into protected mode, and the operation will be reflected into V86 mode at the end of the protected mode chain. Using this service would prevent the VxD's thread from potentially getting blocked at the end of the protected mode chain. Uses Flags. </P>
<P> No return value. </P>
<P><I>flags</I> </P>
<P>Operation flags. Can be a combination of these values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Block_Svc_Ints </P></TD><TD VALIGN="TOP"><P>Service events (and simulated interrupts) in the VM if the thread blocks for the critical section. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Svc_If_Ints_Locked </P></TD><TD VALIGN="TOP"><P>Service events (and simulated interrupts) in the VM if the thread blocks for the critical section and the VMStat_V86IntsLocked flag is set. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Enable_Ints </P></TD><TD VALIGN="TOP"><P>Service interrupt events in the VM even if the VM does not currently have interrupts enabled (force interrupts to be enabled). This flag is relevant only if either Block_Svc_Ints or Block_Svc_If_Ints_Locked is set. </P></TD></TR><TR><TD VALIGN="TOP"><P>Block_Thread_Idle </P></TD><TD VALIGN="TOP"><P>If the thread blocks for the critical section this thread should be considered idle. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>There is a hierarchy between the V86 mutex and the critical section mutex. The V86 mutex can be taken in the system VM when the critical section is owned by another VM, but in the system VM the critical section can only be owned if the V86 mutex is already owned. Calling <B>Begin_Critical_Section</B> in a thread in the system VM takes both mutexes. </P>
<P>Each call to <B>Begin_V86_Serialization</B> should have a corresponding call to <B>End_V86_Serialization</B>. </P>
<P>See also <B>Begin_Critical_Section</B>, <B>Begin_Nest_V86_Exec</B>, <B>End_V86_Serialization</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
