<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_PageResetHandlePAddr</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>_PageResetHandlePAddr </H3><P><BR></P>
<PRE>include vmm.inc

VMMcall _PageResetHandlePAddr, &lt;hMem, PgOff, nPages, PhysPgNum, flags&gt;

or      eax, eax                ; nonzero if substituted, zero if error
jz      not_substituted
</PRE>
<P>Substitutes one or more pages in a memory block with physical pages not previously available to the system. This service is similar to the <B>_AddFreePhysPage</B> service, but allows memory to be used in a slightly different way. Uses EAX, ECX, EDX and Flags. </P>
<UL><LI>     Returns a nonzero value in the EAX register if successful, zero otherwise. </LI></UL><P></P>
<P><I>hMem</I> </P>
<P>Handle (base linear address) of a memory block. This handle must have been previously created using the <B>_PageAllocate</B> or <B>_PageReAllocate</B> service. </P>
<P><I>PgOff</I> </P>
<P>Offset in pages from the start of the memory block to the first page to be substituted. </P>
<P><I>nPages</I> </P>
<P>Number of pages to substitute. </P>
<P><I>PhysPgNum</I> </P>
<P>Number of the first physical page to substitute into the memory block. The page number must be greater than or equal to 110h; only extended memory pages may be added to the block. The specified pages must be read/write physical memory pages, and must be available for use at any time. </P>
<P><I>flags</I> </P>
<P>Operation flags. Must be 0. </P>
<P>This service is only available for Windows version 3.1 and later. </P>
<P>This service returns an error if the sum of the <I>PgOff</I> and <I>nPages</I> parameters is greater than the size of the memory block. </P>
<P>A virtual device must <I>not</I> attempt to use pages once it has added them to the free pool, or attempt to add pages that are already available to the system. </P>
<P>This service returns an error if the number of pages to add exceeds the limit of the internal data structure the system uses the manage the free pool. The internal data structure is allocated during initialization and cannot be modified. </P>
<P>This service converts pages that are substituted into the block to fixed pages. These pages are always locked, and cannot be unlocked. </P>
<P>This service maps a new physical page in at the specified locations and puts the existing physical memory in the free list. The contents of the freed pages are not preserved. </P>
<P>Most virtual devices do not need to use this service. </P>
<P>See also <B>_AddFreePhysPage</B> </P>
</FONT></BODY></HTML>
