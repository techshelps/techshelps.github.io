<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Architecture of a Video Compression and Decompression Driver</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Architecture of a Video Compression and Decompression Driver </H3><P>The following two block diagrams show the architecture of a video compression and decompression driver. While the diagrams show separate compression and decompression drivers, an actual driver usually combines both functions. The following illustration shows the architecture of a decompression driver: </P>
<P>    <img src="vcmp_a01.gif"></P>
<H4><A NAME="sec0"></A>Architecture for a Decompression Driver </H4><P>The following illustration shows a similar architecture for the compression driver: </P>
<P>    <img src="vcmp_a02.gif"></P>
<H4><A NAME="sec1"></A>Architecture for a Compression Driver </H4><P>The decompression driver and compression driver blocks represent your compression and decompression driver. The client-application block represents the system and application software that uses the services of your compression and decompression driver. Application software will always use the system software to access compression and decompression drivers. </P>
<P>The source of information used for decompression is represented by the AVI file block. Other sources of images can be used in place of this block. AVI files are RIFF files that contain audio and video data. The client-application maintains the RIFF format when it reads and writes the file. (Your driver will send and receive video data. The client-application will add and remove the RIFF tags.) </P>
<P>Compression drivers receive uncompressed data from the video source. Typically the video source is a disk file but it could also come from other video sources such as a video capture device. The video data can be either still bitmaps or motion video frames. </P>
<P>While a previous block diagram showed the decompression driver returning the uncompressed video to the client-application, your driver can have the capability to write directly to the display or display driver. These devices can replace a Windows video driver or work in conjunction with it. The following illustration shows a decompression driver with the ability to write to the video display: </P>
<P>    <img src="vcmp_a03.gif"></P>
<H4><A NAME="sec2"></A>Architecture for a Decompression Video Driver </H4><P>These drivers handle a set of messages, the ICM_DRAW messages, in addition to the decompression messages defined for the services that return the decompressed video to the client-application. </P></FONT></BODY></HTML>
