<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hook_Device_Service</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Hook_Device_Service </H3><P><BR></P>
<PRE>include vmm.inc

GetDeviceServiceOrdinal eax, Service
mov     esi, OFFSET32 HookProc  ; points to the hook procedure to install
VMMcall Hook_Device_Service

jc      not_installed           ; carry flag set if error
IF WIN31COMPAT
mov     [Real_Proc], esi
ENDIF
</PRE>
<P>Allows one virtual device to monitor or replace the services of another virtual device, or of the VMM itself. Uses ESI, Flags. </P>
<UL><LI>     Returns with the carry flag clear if successful, set otherwise. If successful, the ESI register contains the address of the specified service. </LI></UL><P></P>
<P><I>Service</I> </P>
<P>Virtual device or VMM service to hook. </P>
<P><I>HookProc</I> </P>
<P>Address of the hook procedure to install. The hook procedure is called with the same parameters as the service specified by the <I>Service</I> parameter. </P>
<P>When a dynamically-loaded VxD is unloaded, it must remove any service hook procedures it has installed by using the <B>Unhook_Device_Service</B> service. </P>
<P>Virtual devices that use this service must use extreme care to preserve the full functionality of the virtual device whose services are monitored or replaced. </P>
<P>More than one virtual device can hook a device service. The last hook installed is the first one called. </P>
<P>The hook procedure must save and restore registers that are not modified by the hooked service. Also, if flags are a passed as an entry or exit parameter, the hook procedure must also preserve the flags. </P>
<P>If the hooked service uses the C calling convention, the hook procedure must copy the entire parameter stack frame before attempting to call the hooked service. If the hooked service uses a register-based calling convention, the hook procedure must preserve all registers, even registers that are not currently used as input or output parameters. </P>
<P>The hook procedure must have been declared with the HOOK_PROC attribute to the <B>BeginProc</B> macro. </P>
<P>See also <B>Unhook_Device_Service</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
