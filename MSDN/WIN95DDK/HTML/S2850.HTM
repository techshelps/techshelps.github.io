<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateDIBPDevice</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>CreateDIBPDevice </H3><P><BR></P>
<PRE>CreateDIBPDevice(LPBITMAPINFO lpInfo, LPPDEVICE lpDevice, 
     VOID *lpBits, WORD wFlags);
</PRE>
<P>Creates a <B>PDEVICE</B> structure for the DIB engine using the specified <B>BITMAPINFO </B>structure and DIB bits. </P>
<UL><LI>     Returns the size in bytes of the bits buffer (based on the width, height, and bpp in the specified <B>BITMAPINFO</B> structure) if successful; otherwise returns zero. </LI></UL><P></P>
<P><I>lpInfo</I> </P>
<P>Address of a <B>BITMAPINFO</B> structure that contains information about the DIB. The <B>PDEVICE</B> that is created contains a pointer to this block of memory in its <B>deBitmapInfo</B> field. </P>
<P><I>lpDevice</I> </P>
<P>Address of buffer (allocated by the caller) to receive the <B>PDEVICE</B> structure. The size of the <B>PDEVICE</B> structure can be obtained from the <B>dpDeviceSize</B> field of the DIB engine's <B>GDIINFO</B> definition. </P>
<P><I>lpBits</I> </P>
<P>Address of the DIB bits, which are stored as an array of bytes. If NULL, the function fills in the offset part of the <B>deBits</B> field and the minidriver must allocate a 0-based buffer and fill in the selector part of the <B>deBits</B> field. </P>
<P><I>wFlags</I> </P>
<P>Value used to initialize the <B>PDEVICE</B>'s <B>deFlags </B>field. </P>
<P>The function fails for DIB formats that the DIB engine does not support. </P>
<P>The <B>deDriverUse</B> field in the <B>DIBENGINE</B> structure is reserved for use by minidrivers. <B>CreateDIBPDevice</B> initializes this field to zero, but minidrivers can subsequently place any value in this field for their own use. The DIB engine does not use this field. </P>
<P>The DIB engine initializes the <B>deBeginAccess</B> and <B>deEndAccess</B> members of the <B>PDEVICE </B>structure to zero. The minidriver needs to initialize these fields after the call to <B>CreateDIBPDevice</B>. </P>
<P>The export ordinal for this function is 300. </P>
<P></P>
<P></P></FONT></BODY></HTML>
