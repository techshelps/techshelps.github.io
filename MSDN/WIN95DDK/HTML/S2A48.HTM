<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Programming Interface Functions</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Application Programming Interface Functions </H3><P>VMOUSE provides a number of API functions that applications can call. Most are intended to be used only by the Windows mouse driver (MOUSE.DRV). </P>
<P>An application can call the <B>VMDAPI_GET_VERSION</B> function to retrieve the version number of VMOUSE. This is the only API function that can be called from a nonsystem VM. </P>
<P>Windows calls the <B>VMDAPI_QUERY_WINDOWED_MOUSE_SUPPORT </B>function to determine whether VMOUSE provides mouse support from nonsystem VM applications running in a window. The <B>VMDAPI_GET_MOUSE_INFO</B> function retrieves information about the mouse hardware, including the mouse-type identifier, the number of the IRQ that the mouse is using, and the number of the port that the mouse is using. </P>
<P>VMOUSE passes mouse events to the Windows USER module through the <B>Mouse_Event </B>callback function. Windows can use the <B>VMDAPI_SET_MOUSE_EVENT_CALLBACK</B> function to pass the address of a new callback function to VMOUSE. </P>
<P>Windows uses the <B>VMDAPI_SET_MOUSE_FOCUS</B> function to capture mouse input. After calling this function, VMOUSE directs all mouse input to the system VM. </P>
<P>See also <B>VMDAPI_GET_VERSION</B>, <B>VMDAPI_GET_MOUSE_INFO</B>, <B>VMDAPI_QUERY_WINDOWED_MOUSE_SUPPORT</B>, <B>VMDAPI_SET_MOUSE_EVENT_CALLBACK</B>, <B>VMDAPI_SET_MOUSE_FOCUS</B>, <B>VMDAPI_UPDATE_MOUSE_STATE</B> </P></FONT></BODY></HTML>
