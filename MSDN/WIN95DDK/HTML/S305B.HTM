<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISP_read_registry</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>ISP_read_registry </H3><P><BR></P>
<PRE>#include &lt;isp.h&gt;

typedef struct ISP_read_registry {  //
    ISP   ISP_r_r_hdr;        // standard header
    PVOID ISP_r_r_dcb;        // physical DCB pointer
    PVOID ISP_r_r_string;     // addr of null-terminated key name
    PVOID ISP_r_r_data_type;  // type of data stored in buffer
    PVOID ISP_r_r_data_size;  // size of buffer
    PVOID ISP_r_r_buffer;     // pointer to buffer for result
} ISP_read_registry, *PISP_read_registry;
</PRE>
<P>Contains information for a ISP_REGISTRY_READ function. </P>
<P><B>ISP_r_r_string</B> </P>
<P>Null-terminated string specifying the key name or one of these values: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>REGSTR_VAL_SCSITID </P></TD><TD VALIGN="TOP"><P>SCSI target ID (ASCIZ string) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_SCSILUN </P></TD><TD VALIGN="TOP"><P>SCSI LUN ID (ASCIZ string) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_REVLEVEL </P></TD><TD VALIGN="TOP"><P>Revision Level (ASCIZ string) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_PRODUCTID </P></TD><TD VALIGN="TOP"><P>Product ID from inquiry data (ASCIZ string) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_MANUFACTURER </P></TD><TD VALIGN="TOP"><P>Vendor ID from inquiry data. </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_DEVTYPE </P></TD><TD VALIGN="TOP"><P>Device type as defined for <B>DCB</B>. (Binary value ) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_REMOVABLE </P></TD><TD VALIGN="TOP"><P>1 if removable; 0 if not. (Boolean) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_CURDRVLET </P></TD><TD VALIGN="TOP"><P>Current drive letters. For example, CDF implies that C, D and F are currently assigned to this physical DCB. (ASCIZ string) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_USRDRVLET </P></TD><TD VALIGN="TOP"><P>User drive range. For example, DG implies that the user specifed a drive range starting from D and ending at G. See <B>ISP_pick_drive_letter</B> for more info. (ASCIZ string) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_SYNCDATAXFER </P></TD><TD VALIGN="TOP"><P>SCSI only. 1 if syncdata enabled; 0 if not. Default is 1 (ON) for Disks and 0 (OFF) for CD-ROM. (Boolean) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_AUTOINSNOTE </P></TD><TD VALIGN="TOP"><P>SCSI CD only. 1 if enabled; 0 if not. Default is 1. (Boolean) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_DISCONNECT </P></TD><TD VALIGN="TOP"><P>SCSI only. 1 if enabled; 0 if not. Default is 1. (Boolean) </P></TD></TR><TR><TD VALIGN="TOP"><P>REGSTR_VAL_INT13 </P></TD><TD VALIGN="TOP"><P>1 if INT 13h unit; 0 if not. (Boolean) </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>See also <B>DCB</B>, <B>ISP</B> </P>
<P></P>
<P></P></FONT></BODY></HTML>
