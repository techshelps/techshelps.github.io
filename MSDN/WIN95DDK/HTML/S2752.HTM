<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows 95 COM Enumerator</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>Windows 95 COM Enumerator </H3><P>The COM enumerator does not call VCOMM to detect COM devices, rather it writes directly to the port. When called to enumerate a device on a COM port, COMENUM calls <B>ACQUIRE_RESOURCE</B> with ACQUIRE_NO_STEAL, so that it does not inadvertently interfere with another program using the port. </P>
<P>The COM enumerator always returns TRUE for RESOURCE_STEAL_REQUEST. </P>
<P>When it receives a RESOURCE_RETURN_NOTIFY, the enumerator resumes its watch COM device attach/detach on the port. </P>
<P>The COM enumerator never calls <B>RELEASE_RESOURCE</B>. </P>
<H4><A NAME="sec0"></A>Windows 95 COM Driver (SERIAL.VXD) </H4><P>SERIAL.VXD calls <B>ACQUIRE_RESOURCE</B> with ACQUIRE_STEAL. This will steal ports owned by VMs, if allowed by the user in Control Panel. </P>
<P>When it receives a RESOURCE_STEAL_REQUEST notification, SERIAL.VXD saves the state of the COM port and returns TRUE. </P>
<P>Unlike LPT.VXD, SERIAL.VXD does not periodically attempt to steal back the port by calling <B>STEAL_RESOURCE</B>. Rather, it does this in response to a call from VCOMM on behalf of the device's client. This still enables it to share a port with a VM. </P>
<H4><A NAME="sec1"></A>MS-DOS Communications Applications </H4><P>In Windows 3.1, it is common practice for users to share a modem between an MS-DOS application and Windows. For example, Terminal and ProComm/Plus can use a modem simultaneously, with VCD switching control silently back and forth based on an idle timeout on the VM. </P>
<P>Windows 95 continues to support this capability. When SERIAL.VXD is using a port and a VM attempts to access it, VCD sends RESOURCE_STEAL_REQUEST to SERIAL.VXD, which returns TRUE. The VM will use the port and then go idle on it. After this, the next call from Windows to use the port will cause SERIAL.VXD to call <B>STEAL_RESOURCE</B>, which succeeds because the VM has gone idle on the port. </P></FONT></BODY></HTML>
