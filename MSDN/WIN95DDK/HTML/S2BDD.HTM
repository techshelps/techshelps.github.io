<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MCI_OPEN</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H3>MCI_OPEN </H3><P>See also MCI_CLOSE, MCI_CLOSE_DRIVER, MCI_OPEN_DRIVER </P>
<P>Initializes a device or device element. All devices respond to this message. The parameters and flags available for this message depend on the selected device. MMSYSTEM translates this message to the DRV_OPEN and MCI_OPEN_DRIVER messages sent to the device driver. </P>
<UL><LI>     Returns zero if the open is successful. If an error occurs, it returns the following values: </LI></UL>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="223pt" VALIGN="TOP"><COL WIDTH="110pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>MCIERR_CANNOT_LOAD_DRIVER </P></TD><TD VALIGN="TOP"><P>Error loading media device driver. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCIERR_DEVICE_OPEN </P></TD><TD VALIGN="TOP"><P>The device name is in use by this task. Use a unique alias. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCIERR_DUPLICATE_ALIAS </P></TD><TD VALIGN="TOP"><P>The specified alias is an open device in this task. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCIERR_EXTENSION_NOT_FOUND </P></TD><TD VALIGN="TOP"><P>Cannot deduce a device type from the given extension. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCIERR_FILENAME_REQUIRED </P></TD><TD VALIGN="TOP"><P>A valid filename is required. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCIERR_MISSING_PARAMETER </P></TD><TD VALIGN="TOP"><P>Required parameter is missing. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCIERR_MUST_USE_SHAREABLE </P></TD><TD VALIGN="TOP"><P>The device is already open; use the shareable flag with each open. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCIERR_NO_ELEMENT_ALLOWED </P></TD><TD VALIGN="TOP"><P>An element name cannot be used with this device. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P>DWORD <I>lParam1</I> </P>
<P>The following flags apply to all devices: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="190pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>MCI_NOTIFY </P></TD><TD VALIGN="TOP"><P>Specifies that MCI should post the <B>MM_MCINOTIFY</B> message when this command completes. The window to receive this message is specified in the <B>dwCallback</B> member of the structure identified by <I>lpOpen</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_WAIT </P></TD><TD VALIGN="TOP"><P>Specifies that the open operation should finish before MCI returns control to the application. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_OPEN_ALIAS </P></TD><TD VALIGN="TOP"><P>Specifies that an alias is included in the <B>lpstrAlias</B> member of the structure identified by <I>lpOpen</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_OPEN_SHAREABLE </P></TD><TD VALIGN="TOP"><P>Specifies that the device or device element should be opened as shareable. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_OPEN_TYPE </P></TD><TD VALIGN="TOP"><P>Specifies that a device type name or constant is included in the <B>lpstrDeviceType</B> member of the structure identified by <I>lpOpen</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_OPEN_TYPE_ID </P></TD><TD VALIGN="TOP"><P>Specifies that the low-order word of the <B>lpstrDeviceType</B> member of the associated structure contains a standard MCI device type ID and the high-order word optionally contains the ordinal index for the device. Use this flag with the MCI_OPEN_TYPE flag. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>LPMCI_OPEN_PARMS <I>lParam2</I> </P>
<P>Specifies a far pointer to the <B>MCI_OPEN_PARMS</B> structure. (Devices with extended command sets might replace this structure with a device-specific structure.) </P>
<P><B>Flags for Compound Devices</B> </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>DWORD <I>lParam1</I> </P></TD><TD VALIGN="TOP"><P>The following additional flags apply to compound devices: </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="102pt" VALIGN="TOP"><COL WIDTH="102pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>MCI_OPEN_ELEMENT </P></TD><TD VALIGN="TOP"><P>Specifies that an element name is included in the <B>lpstrElementName</B> member of the structure identified by <I>lParam2</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_OPEN_ELEMENT_ID </P></TD><TD VALIGN="TOP"><P>Specifies that the <B>lpstrElementName</B> member of the structure identified by <I>lParam2</I> is interpreted as a DWORD and has meaning internal to the device. Use this flag with the MCI_OPEN_ELEMENT flag. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>LPMCI_OPEN_PARMS <I>lParam2</I> </P></TD><TD VALIGN="TOP"><P>Specifies a far pointer to the <B>MCI_OPEN_PARMS</B> structure. (Devices with additional parameters might replace this structure with a device-specific structure.) </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P><B>Animation Extensions</B> </P>
<P>The following flags for <I>lParam1</I>apply to animation devices: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>MCI_ANIM_OPEN_NOSTATIC </P></TD><TD VALIGN="TOP"><P>Specifies that the device should reduce the number of static (system) colors in the palette to two. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_ANIM_OPEN_PARENT </P></TD><TD VALIGN="TOP"><P>Indicates the parent window handle is specified in the <B>hWndParent</B> member of the structure identified by <I>lParam2</I>. The parent window handle is required for some window styles. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_ANIM_OPEN_WS </P></TD><TD VALIGN="TOP"><P>Indicates a window style is specified in the <B>dwStyle</B> member of the structure identified by <I>lParam2</I>. The <B>dwStyle</B> value specifies the style of the window that the driver will create and display if the application does not provide one. The style parameter takes an integer which defines the window style. These constants are the same as the ones in WINDOWS.H (such as WS_CHILD, WS_OVERLAPPEDWINDOW, or WS_POPUP). </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P> Note that <I>lParam2</I> specifies a far pointer to the <B>MCI_ANIM_OPEN_PARMS</B> structure. </P>
<P><B>Video Overlay Extensions</B> </P>
<P>The following flags for <I>lParam1</I> apply to video overlay devices: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>MCI_OVLY_OPEN_PARENT </P></TD><TD VALIGN="TOP"><P>Indicates the parent window handle is specified in the <B>hWndParent</B> member of the structure identified by <I>lParam2</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P>MCI_OVLY_OPEN_WS </P></TD><TD VALIGN="TOP"><P>Indicates a window style is specified in the <B>dwStyle</B> member of the structure identified by <I>lParam2</I>. The <B>dwStyle</B> value specifies the style of the window that the driver will create and display if the application does not provide one. The style parameter takes an integer that defines the window style. These constants are the same as those in WINDOWS.H (for example, WS_CHILD, WS_OVERLAPPEDWINDOW, or WS_POPUP). </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Note that <I>lParam2</I> specifies a far pointer to the <B>MCI_OVLY_OPEN_PARMS</B> structure. </P>
<P><B>Waveform Audio Extensions</B> </P>
<P>The following flags for <I>lParam1</I> apply to waveform audio devices: </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>MCI_WAVE_OPEN_BUFFER </P></TD><TD VALIGN="TOP"><P>Indicates a buffer length is specified in the <B>dwBuffer</B> member of the structure identified by <I>lParam2</I>. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>Note that <I>lParam2</I> specifies a far pointer to the <B>MCI_WAVE_OPEN_PARMS</B> structure. (Devices with extended command sets might replace this structure with a device-specific structure.) </P>
<P>If MCI_OPEN_SHAREABLE is not specified when a device or device element is initially opened, then all subsequent <B>MCI_OPEN</B> messages to the device or device element will fail. If the device or device element is already open, and this flag is not specified, the call will fail even if the first open command specified MCI_OPEN_SHAREABLE. Files for the MCISEQ and MCIWAVE devices are nonshareable. </P>
<P>Case is ignored in the device name, but there must not be any leading or trailing blanks. </P>
<P>To use automatic type selection (via the [mci extensions] section of the WIN.INI file), assign the file name (including file extension) to the <B>lpstrElementName</B> member, assign a NULL pointer to the <B>lpstrDeviceType</B> member, and set the MCI_OPEN_ELEMENT flag. </P>
<P></P>
<P></P></FONT></BODY></HTML>
