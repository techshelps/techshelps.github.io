<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Communications Device Drivers</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,arial,helvetica" SIZE="2">
<H2>About Communications Device Drivers </H2><P>A communications resource is a physical or logical device that provides a single asynchronous data stream. Serial ports, parallel ports, FAX machines, and modems are examples of communications resources. The central communications component in Windows 95 is the virtual communications driver (VCOMM), a virtual device (VxD) that manages all access to communications resources. </P>
<P>VCOMM relies on separate VxDs, called port drivers, to access communications resources. This design makes VCOMM easily extensible. To support a nonstandard communications port, you can create a port driver. You may also need to create a port-virtualization VxD to virtualize the port for MS-DOS&reg; – based applications. Under no circumstances should you replace VCOMM itself. Nor should you replace COMM.DRV, as was often necessary with previous versions of Microsoft&reg; Windows&trade;. </P>
<P>The following table briefly describes each component. </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Component </B></P></TD><TD VALIGN="TOP"><P><B>Description </B></P></TD></TR><TR><TD VALIGN="TOP"><P>VCOMM.386 </P></TD><TD VALIGN="TOP"><P>The virtual communications driver. VCOMM is a nonreplaceable system component that manages all access to communications resources. For more information, see <I>About VCOMM</I>. </P></TD></TR><TR><TD VALIGN="TOP"><P>COMM.DRV </P></TD><TD VALIGN="TOP"><P>The Windows communications driver. COMM.DRV provides a set of exported functions that USER.EXE calls to implement the Windows communications API. </P>
<P>COMM.DRV uses the VCOMM protected-mode API, and is therefore not tied to any specific communications hardware. Hardware vendors should not replace COMM.DRV, as was done in previous verions of Windows, but should create a port driver instead. </P></TD></TR><TR><TD VALIGN="TOP"><P>Client VxDs </P></TD><TD VALIGN="TOP"><P>Any VxDs that use the VCOMM client VxD services to access communications resources. Port-virtualization VxDs can be VCOMM client VxDs. Certain applications might install VCOMM client VxDs, bypassing the Windows communications API. </P></TD></TR><TR><TD VALIGN="TOP"><P>Port drivers </P></TD><TD VALIGN="TOP"><P>Installable VxDs that VCOMM uses to access communications devices. Hardware vendors create port drivers to enable Windows applications and VxDs to use their communications ports. For more information, see <I>About Communications Port Drivers</I>. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="144pt" VALIGN="TOP"><COL WIDTH="204pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Port-virtualization VxDs </P></TD><TD VALIGN="TOP"><P>Installable VxDs that virtualize communications hardware for applications running in nonsystem virtual machines (VMs). Communications hardware vendors can create port-virtualization VxDs to virtualize their devices for MS-DOS applications. </P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
</FONT></BODY></HTML>
