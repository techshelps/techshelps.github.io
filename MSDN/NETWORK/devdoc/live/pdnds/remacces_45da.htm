<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RasSecurityDialogBegin</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_rassecuritydialogbegin"></a>RasSecurityDialogBegin</h1>
<p>
The <b>RasSecurityDialogBegin</b> function is a third-party RAS security DLL entry point that the Windows NT RAS server calls when a remote user tries to connect. This enables the security DLL to begin its authentication of the remote user.</p>
<p>
Note that Windows NT currently provides RAS security host support only for serial devices; other types of connections, such as ISDN or a virtual private network (VPN) connection, are not supported. </p>
<pre><code><b>DWORD WINAPI RasSecurityDialogBegin(
  HPORT</b><i> hPort</i><b>,        </b>// RAS handle to the port
<b>  PBYTE</b><i> pSendBuf</i><b>,     </b>// pointer to buffer for sending data
<b>  DWORD</b><i> SendBufSize</i><b>,  </b>// size, in bytes, of the send buffer
<b>  PBYTE</b><i> pRecvBuf</i><b>,     </b>// pointer to buffer for receiving data
<b>  DWORD</b><i> RecvBufSize</i><b>,  </b>// size, in bytes, of the receive buffer
<b>  VOID (WINAPI *</b><i> RasSecurityDialogComplete)</i>
<i>                      </i>// pointer to the completion function
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hPort</i></dt>
<dd>
Specifies a RAS port handle. The security DLL uses this handle in other RAS security functions, such as <a href="remacces_38x0.htm"><b>RasSecurityDialogSend</b></a> and <a href="remacces_3rvp.htm"><b>RasSecurityDialogReceive</b></a>, to identify this authentication transaction. 
<p>
Note that this handle is valid only in RAS security functions; you cannot use it in other Win32 I/O functions.
</dd>
<dt>
<i>pSendBuf</i></dt>
<dd>
Pointer to a buffer allocated by the RAS server. The security DLL uses this buffer with the <a href="remacces_38x0.htm"><b>RasSecurityDialogSend</b></a> function to send text that is displayed in the RAS terminal window on the remote computer.</dd>
<dt>
<i>SendBufSize</i></dt>
<dd>
Specifies the size, in bytes, of the <i>pSendBuf</i> buffer. </dd>
<dt>
<i>pRecvBuf</i></dt>
<dd>
Pointer to a buffer allocated by the RAS server. The security DLL uses this buffer with the <a href="remacces_3rvp.htm"><b>RasSecurityDialogReceive</b></a> function to receive the response from the remote user.</dd>
<dt>
<i>RecvBufSize</i></dt>
<dd>
Specifies the size, in bytes, of the <i>pRecvBuf</i> buffer. </dd>
<dt>
<i>RasSecurityDialogComplete</i></dt>
<dd>
Specifies a pointer to a <a href="remacces_8lph.htm"><b>RasSecurityDialogComplete</b></a> function. When the security DLL has completed the authentication of the remote user, it calls this function to report the results to the RAS server.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the security DLL successfully starts the authentication operation, <b>RasSecurityDialogBegin</b> should return NO_ERROR. In this case, the security DLL must later terminate the authentication transaction by calling the function pointed to by the <i>RasSecurityDialogComplete</i> parameter.</p>
<p>
If an error occurs, <b>RasSecurityDialogBegin</b> should return a nonzero error code. In this case, the RAS server hangs up the call and records the error in the Windows NT event log. Returning a nonzero error code terminates the authentication transaction, so the security DLL does not need to call the <i>RasSecurityDialogComplete</i> function.</p>
<h4>Remarks</h4>
<p>
When a Windows NT RAS server receives a call from a remote computer, it calls the <b>RasSecurityDialogBegin</b> function exported by the registered RAS security DLL, if there is one. When the RAS server calls this function, it passes the following information to the security DLL:
<ul>
<li>
A port handle to identify the connection</li>
<li>
Pointers to buffers to use when communicating with the remote user</li>
<li>
A pointer to a <a href="remacces_8lph.htm"><b>RasSecurityDialogComplete</b></a> function to call when the authentication has been completed</li>
</ul>
<p>
The port handle and buffer pointers are valid until you call <b>RasSecurityDialogComplete</b> to terminate the authentication transaction.</p>
<p>
Your <b>RasSecurityDialogBegin</b> implementation must return as soon as possible, because the RAS server is blocked and cannot accept any other calls until <b>RasSecurityDialogBegin</b> returns. The <b>RasSecurityDialogBegin</b> function should copy the input parameters and create a thread to communicate with and authenticate the remote user. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in rasshost.h.</p>
<h4>See Also</h4>
<p>
<a href="remacces_5aqt.htm">Remote Access Service Overview</a>, <a href="remacces_7sab.htm">RAS Server Administration Functions</a>, <a href="remacces_8lph.htm"><b>RasSecurityDialogComplete</b></a>, <a href="remacces_3rvp.htm"><b>RasSecurityDialogReceive</b></a>, <a href="remacces_38x0.htm"><b>RasSecurityDialogSend</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
