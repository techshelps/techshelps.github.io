<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Retrieving Network Errors</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_retrieving_network_errors"></a>Retrieving Network Errors</h2>
<p>
<b>Windows NT Only</b></p>
<p>
When one of the WNet functions returns WN_EXTENDED_ERROR, an application can call the <a href="networks_735e.htm"><b>WNetGetLastError</b></a> function to get more information about the error that occurred. This information is usually specific to the network provider. </p>
<p>
The following example illustrates an application-defined error-handling function (NetErrorHandler) that takes three arguments: a window handle, the error code returned by one of the WNet functions, and the name of the function that produced the error. If the error code is WN_EXTENDED_ERROR, NetErrorHandler calls <b>WNetGetLastError</b> to get extended error information. </p>
<pre><code>BOOL WINAPI NetErrorHandler(HWND hwnd, 
                            DWORD dwErrorCode, 
                            LPSTR lpszFunction) 
{ 
    DWORD dwWNetResult, dwLastError; 
    CHAR szError[256]; 
    CHAR szCaption[256]; 
    CHAR szDescription[256]; 
    CHAR szProvider[256]; 
 
    // The following code performs standard error-handling. 
 
    if (dwErrorCode != ERROR_EXTENDED_ERROR) 
    { 
        wsprintf((LPSTR) szError, "%s failed; \nResult is %ld", 
            lpszFunction, dwErrorCode); 
        wsprintf((LPSTR) szCaption, "%s error", lpszFunction); 
        MessageBox(hwnd, (LPSTR) szError, (LPSTR) szCaption, MB_OK); 
        return TRUE; 
    } 
 
    // The following code performs error-handling when the 
    // ERROR_EXTENDED_ERROR return value indicates that WNetGetLastError 
    // can retrieve additional information. 
 
    else 
    { 
        dwWNetResult = WNetGetLastError(&amp;dwLastError, 
            (LPSTR) szDescription,  // buffer for error description 
            sizeof(szDescription), 
            (LPSTR) szProvider,     // buffer for provider name 
            sizeof(szProvider)); 
 
        if(dwWNetResult != NO_ERROR) { 
            wsprintf((LPSTR) szError, 
                "WNetGetLastError failed; error %ld", dwWNetResult); 
            MessageBox(hwnd, (LPSTR) szError, 
                "WNetGetLastError", MB_OK); 
            return FALSE; 
        } 
 
        wsprintf((LPSTR) szError, 
            "%s failed with code %ld;\n%s", 
            (LPSTR) szProvider, dwLastError, (LPSTR) szDescription); 
        wsprintf((LPSTR) szCaption, "%s error", lpszFunction); 
        MessageBox(hwnd, (LPSTR) szError, (LPSTR) szCaption, MB_OK); 
        return TRUE; 
    } 
} 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
