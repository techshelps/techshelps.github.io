<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LLC_ADAPTER_OPEN_PARMS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_llc_adapter_open_parms_str"></a>LLC_ADAPTER_OPEN_PARMS</h1>
<p>
The <b>LLC_ADAPTER_OPEN_PARMS</b> structure represents the open parameters for the LLC_DIR_OPEN_ADAPTER command. You pass a pointer to this structure in the <a href="dlc_12eq.htm"><b>LLC_DIR_OPEN_ADAPTER_PARMS</b></a> structure. </p>
<pre><code>typedef struct {
    USHORT usOpenErrorCode; 
    USHORT usOpenOptions; 
    UCHAR auchNodeAddress[6]; 
    UCHAR auchGroupAddress[4]; 
    UCHAR auchFunctionalAddress[4]; 
    USHORT usReserved1;
    USHORT usReserved2;
    USHORT usMaxFrameSize; 
    USHORT usReserved3[4];
    USHORT usBringUps; 
    USHORT InitWarnings;
    USHORT usReserved4[3];
} LLC_ADAPTER_OPEN_PARMS, *PLLC_ADAPTER_OPEN_PARMS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>usOpenErrorCode</b></dt>
<dd>
Indicates the result of the open adapter testing. </dd>
<dt>
<b>usOpenOptions</b></dt>
<dd>
Specifies the open options for the adapter. This member is a 16-bit value. Setting the various bits enables different options, as described in the following table: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=12%>Bit</th>
<th align=left width=88%>Description</th>
</tr>
<tr valign=top>
<td width=12%>15</td>
<td width=88%>The adapter will not attach itself to the network. Instead, it causes all transmitted user data to be wrapped as received data. </td>
</tr>
<tr valign=top>
<td width=12%>14</td>
<td width=88%>Disables hard errors. </td>
</tr>
<tr valign=top>
<td width=12%>13</td>
<td width=88%>Disables soft errors. </td>
</tr>
<tr valign=top>
<td width=12%>12</td>
<td width=88%>Passes, as direct interface data, all adapter-class MAC frames that are received but not supported by the adapter. Otherwise, these frames are ignored. </td>
</tr>
<tr valign=top>
<td width=12%>11</td>
<td width=88%>Passes, as direct interface data, all attention MAC frames that are not the same as the last attention MAC frame received. Otherwise, these frames are ignored. </td>
</tr>
<tr valign=top>
<td width=12%>10</td>
<td width=88%>Reserved; should be 0.</td>
</tr>
<tr valign=top>
<td width=12%>9</td>
<td width=88%>Reserved; should be 0.</td>
</tr>
<tr valign=top>
<td width=12%>8</td>
<td width=88%>Participates in monitor contention. Otherwise, this adapter does not participate. </td>
</tr>
<tr valign=top>
<td width=12%>7</td>
<td width=88%>Passes, as direct interface data, the first beacon MAC frame and all subsequent beacon MAC frames that have a change in the source address or the beacon type. </td>
</tr>
<tr valign=top>
<td width=12%>6</td>
<td width=88%>Reserved; should be 0. </td>
</tr>
<tr valign=top>
<td width=12%>5</td>
<td width=88%>Prevents the adapter from becoming a monitor during the open process. This bit is implemented only in 16/4 adapters. </td>
</tr>
<tr valign=top>
<td width=12%>4</td>
<td width=88%>Selects no early token releases for an adapter operating at 16 Mbps. Otherwise, use the early token release. </td>
</tr>
<tr valign=top>
<td width=12%>3</td>
<td width=88%>Reserved; should be 0. </td>
</tr>
<tr valign=top>
<td width=12%>2</td>
<td width=88%>Reserved; should be 0. </td>
</tr>
<tr valign=top>
<td width=12%>1</td>
<td width=88%>Reserved; should be 0. </td>
</tr>
<tr valign=top>
<td width=12%>0</td>
<td width=88%>Reserved; should be 0. </td>
</tr>
</table><br>

</dd>
<dt>
<b>auchNodeAddress</b></dt>
<dd>
Specifies the LAN address of the adapter. </dd>
<dt>
<b>auchGroupAddress</b></dt>
<dd>
Specifies the group address for which the adapter will receive messages. If the value is zero, no group address is set. </dd>
<dt>
<b>auchFunctionalAddress</b></dt>
<dd>
Specifies the functional address for which the adapter will receive messages. The most significant bit and the least significant bit are ignored by the adapter. If the value is zero, no functional address is set. </dd>
<dt>
<b>usReserved1</b></dt>
<dd>
Reserved. </dd>
<dt>
<b>usReserved2</b></dt>
<dd>
Reserved. </dd>
<dt>
<b>usMaxFrameSize</b></dt>
<dd>
The maximum frame size defined in NDIS. </dd>
<dt>
<b>usReserved3</b></dt>
<dd>
Reserved. </dd>
<dt>
<b>usBringUps</b></dt>
<dd>
Indicates the result of adapter bring-up testing for IBM Token-Ring network adapters. This member is not used on the PC Network or on Ethernet. </dd>
<dt>
<b>InitWarnings</b></dt>
<dd>
Indicates that a nonfatal error occurred during initialization of the protocol drivers. This member can be one of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=17%>Value</th>
<th align=left width=83%>Meaning</th>
</tr>
<tr valign=top>
<td width=17%>0</td>
<td width=83%>No errors detected during configuration parameter processing. </td>
</tr>
<tr valign=top>
<td width=17%>1</td>
<td width=83%>No configuration parameters found. </td>
</tr>
<tr valign=top>
<td width=17%>2</td>
<td width=83%>Errors detected during configuration parameter processing; default values were used. </td>
</tr>
</table><br>

</dd>
<dt>
<b>usReserved4</b></dt>
<dd>
Reserved. 
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dlcapi.h.</p>
<h4>See Also</h4>
<p>
<a href="dlc_0pwl.htm">The DLC Interface Overview</a>, <a href="dlc_2s6r.htm">DLC Structures</a>, <a href="dlc_43zi.htm"><b>AcsLan</b></a>, <a href="dlc_12eq.htm"><b>LLC_DIR_OPEN_ADAPTER_PARMS</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
