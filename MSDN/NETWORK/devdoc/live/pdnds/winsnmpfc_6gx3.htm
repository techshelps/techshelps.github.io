<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SnmpDecodeMsg</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_snmpdecodemsg"></a>SnmpDecodeMsg</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The WinSNMP <b>SnmpDecodeMsg</b> function decodes an encoded SNMP message into its components. This function performs the opposite action of the WinSNMP <a href="winsnmpfc_036v.htm"><b>SnmpEncodeMsg</b></a> function. </p>
<pre><code><b>SNMPAPI_STATUS SnmpDecodeMsg(
</b>  <b>HSNMP_SESSION </b><i>session</i>,     // handle to the WinSNMP session 
  <b>LPHSNMP_ENTITY </b><i>srcEntity</i>,  // handle to the source entity 
<b>  LPHSNMP_ENTITY </b><i>dstEntity</i>,<b>  </b>//<b> </b>handle to the target entity 
<b>  LPHSNMP_CONTEXT </b><i>context</i>,<b>   </b>//<b> </b>handle to the context 
<b>  LPHSNMP_PDU </b><i>pdu</i>,<b>           </b>//<b> </b>handle to the PDU 
<b>  smiLPCOCTETS </b><i>msgBufDesc</i><b>    </b>//<b> </b>pointer to the message buffer 
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>session </i></dt>
<dd>
Handle to the WinSNMP session. This parameter is required. For additional information, see the following Remarks section. </dd>
<dt>
<i>srcEntity </i></dt>
<dd>
Pointer to a variable that receives a handle to the management entity. </dd>
<dt>
<i>dstEntity </i></dt>
<dd>
Pointer to a variable that receives a handle to the target management entity. </dd>
<dt>
<i>context </i></dt>
<dd>
Pointer to a variable that receives a handle to the context (a set of managed object resources) that the target management entity controls. </dd>
<dt>
<i>pdu </i></dt>
<dd>
Pointer to a variable that receives a handle to the SNMP protocol data unit (PDU). </dd>
<dt>
<i>msgBufDesc </i></dt>
<dd>
Pointer to an <a href="winsnmpst_2rci.htm"><b>smiOCTETS</b></a> structure that contains the SNMP message to decode into its components. The <b>len</b> member of the structure specifies the maximum number of bytes to process; the <b>ptr</b> member points to the encoded SNMP message. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the number of decoded bytes. This value can be equal to, or less than, the <b>len</b> member of the <a href="winsnmpst_2rci.htm"><b>smiOCTETS</b></a> structure pointed to by the <i>msgBufDesc</i> parameter. </p>
<p>
If the function fails, the return value is SNMPAPI_FAILURE. To get extended error information, call <a href="winsnmpfc_7upe.htm"><b>SnmpGetLastError</b></a>. The <b>SnmpGetLastError</b> function can return one of the following errors. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Error code </th>
<th align=left width=46%>Description </th>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_NOT_INITIALIZED </td>
<td width=46%>The <a href="winsnmpfc_0vn4.htm"><b>SnmpStartup</b></a> function did not complete successfully. </td>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_ALLOC_ERROR </td>
<td width=46%>An error occurred during memory allocation. </td>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_SESSION_INVALID</td>
<td width=46%>The <i>session</i> parameter is invalid. </td>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_ENTITY_INVALID</td>
<td width=46%>One or both of the entity parameters is invalid. </td>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_CONTEXT_INVALID</td>
<td width=46%>The <i>context</i> parameter is invalid. </td>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_PDU_INVALID</td>
<td width=46%>The <i>pdu</i> parameter is invalid. </td>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_OUTPUT_TRUNCATED</td>
<td width=46%>The output buffer length is insufficient. No output parameters were created. </td>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_MESSAGE_INVALID</td>
<td width=46%>The SNMP message format in the buffer indicated by the <i>msgBufDesc</i> parameter is invalid. No output parameters were created. </td>
</tr>
<tr valign=top>
<td width=54%>SNMPAPI_OTHER_ERROR </td>
<td width=46%>An unknown or undefined error occurred. </td>
</tr>
</table><br>
<h4>Remarks </h4>
<p>
The Microsoft WinSNMP implementation allocates resources to the WinSNMP manager application as a result of a successful call to the <b>SnmpDecodeMsg</b> function. It is recommended that the WinSNMP manager application free individual resources with the WinSNMP function that corresponds to the resource. For additional information, see <a href="winsnmpov_0tbn.htm">Freeing WinSNMP Descriptors</a> and <a href="winsnmpov_4lmb.htm">WinSNMP Data Management Concepts</a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later. Available as a redistributable for Windows NT 4.0.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsnmp.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use wsnmp32.lib.</p>
<h4>See Also </h4>
<p>
<a href="winsnmpov_6tpl.htm">WinSNMP Manager API Overview</a>, <a href="winsnmpfc_09kj.htm">WinSNMP Functions</a>, <a href="winsnmpfc_036v.htm"><b>SnmpEncodeMsg</b></a>, <a href="winsnmpfc_7zsp.htm"><b>SnmpFreeEntity</b></a>, <a href="winsnmpfc_4tmc.htm"><b>SnmpFreeContext</b></a>, <a href="winsnmpfc_8eb9.htm"><b>SnmpFreePdu</b></a>, <a href="winsnmpfc_646f.htm"><b>SnmpSendMsg</b></a>, <a href="winsnmpst_2rci.htm"><b>smiOCTETS</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
