<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LLC_DIR_OPEN_DIRECT_PARMS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_llc_dir_open_direct_parms_str"></a>LLC_DIR_OPEN_DIRECT_PARMS</h1>
<p>
The<b> LLC_DIR_OPEN_DIRECT_PARMS</b> structure is the DLC parameter table for the LLC_DIR_OPEN_DIRECT command. You pass a pointer to this structure using the <b>pParameterTable</b> member of the <a href="dlc_13le.htm"><b>CCB_PARMS</b></a> union. </p>
<pre><code>typedef struct {
    USHORT Reserved[4];
    USHORT usOpenOptions;
    USHORT usEthernetType;
    ULONG ulProtocolTypeMask;
    ULONG ulProtocolTypeMatch;
    USHORT usProtocolTypeOffset;
} LLC_DIR_OPEN_DIRECT_PARMS, *PLLC_DIR_OPEN_DIRECT_PARMS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>Reserved</b></dt>
<dd>
Reserved. </dd>
<dt>
<b>usOpenOptions</b></dt>
<dd>
</dd>
<dt>
<b>usEthernetType</b></dt>
<dd>
Specifies an <b>LLC_ETHERNET_TYPE</b> value representing the type of Ethernet frame to receive. <b>LLC_ETHERNET_TYPE</b> is an enumerated type. The following values are defined. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>LLC_ETHERNET_TYPE_DEFAULT</td>
<td width=46%>Use the parameter value set in the registry.</td>
</tr>
<tr valign=top>
<td width=54%>LLC_ETHERNET_TYPE_AUTO</td>
<td width=46%>Use automatic header type selection for links.</td>
</tr>
<tr valign=top>
<td width=54%>LLC_ETHERNET_TYPE_802_3</td>
<td width=46%>Always use 802.3 LAN headers.</td>
</tr>
<tr valign=top>
<td width=54%>LLC_ETHERNET_TYPE_DIX</td>
<td width=46%>Always use LLC on DIX SNA type.</td>
</tr>
</table><br>

</dd>
<dt>
<b>ulProtocolTypeMask</b></dt>
<dd>
Specifies a mask used in a bitwise AND operation with the data. The result must be equal to <b>ulProtocolTypeMatch</b>. Otherwise, set this parameter to zero. </dd>
<dt>
<b>ulProtocolTypeMatch</b></dt>
<dd>
Ignored if <b>ulProtocolTypeMask</b> is zero. </dd>
<dt>
<b>usProtocolTypeOffset</b></dt>
<dd>
Specifies the distance of the protocol type from the beginning of the protocol header (offset 14 in the frame header). Ignored if <b>ulProtocolTypeMask</b> is zero. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
After you have issued the LLC_RECEIVE command for the direct station, the application has ownership of the direct station and can receive frames . </p>
<p>
Win32 DLC differs from the IBM DLC specification in that you can receive frames of specific Ethernet types using the direct station when the <b>usEthernetType</b> member has a valid Ethernet type. </p>
<p>
The <b>ulProtoTypeMask</b>, <b>ulProtocolTypeMatch</b>, and <b>usProtocolTypeOffset</b> members are optional. They specify the protocol type mask, match, and offset, respectively. They receive frames for a particular subprotocol type or socket. That is, the packet is received whenever the following statement is true: </p>
<pre><code>(* (PULONG)((PUCHAR)pFrame + 14 + offset) &amp; mask) == match
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dlcapi.h.</p>
<h4>See Also</h4>
<p>
<a href="dlc_0pwl.htm">The DLC Interface Overview</a>, <a href="dlc_2s6r.htm">DLC Structures</a>, <a href="dlc_43zi.htm"><b>AcsLan</b></a>, <a href="dlc_13le.htm"><b>CCB_PARMS</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
