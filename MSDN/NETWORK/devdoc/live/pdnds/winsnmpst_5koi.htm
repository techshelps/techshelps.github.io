<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>smiVALUE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_smivalue_str"></a>smiVALUE</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The WinSNMP <b>smiVALUE</b> structure describes the value associated with a variable name in a variable binding entry. </p>
<p>
The <b>syntax</b> member of the <b>smiVALUE</b> structure contains a WinSNMP data type that indicates the type of data in the <b>value</b> member. The <b>value</b> member of the structure is the union of all possible WinSNMP data types. </p>
<pre><code>typedef struct {                // smiVALUE portion of VarBind 
   smiUINT32    syntax;         // Insert SNMP_SYNTAX_&lt;type&gt; 
     union {
       smiINT    sNumber;       // SNMP_SYNTAX_INT 
                                // SNMP_SYNTAX_INT32 
       smiUINT32 uNumber;       // SNMP_SYNTAX_UINT32 
                                // SNMP_SYNTAX_CNTR32 
                                // SNMP_SYNTAX_GAUGE32 
                                // SNMP_SYNTAX_TIMETICKS 
       smiCNTR64 hNumber;       // SNMP_SYNTAX_CNTR64 
       smiOCTETS string;        // SNMP_SYNTAX_OCTETS 
                                // SNMP_SYNTAX_BITS 
                                // SNMP_SYNTAX_OPAQUE 
                                // SNMP_SYNTAX_IPADDR 
                                // SNMP_SYNTAX_NSAPADDR 
       smiOID    oid;           // SNMP_SYNTAX_OID 
       smiBYTE   empty;         // SNMP_SYNTAX_NULL 
                                // SNMP_SYNTAX_NOSUCHOBJECT 
                                // SNMP_SYNTAX_NOSUCHINSTANCE 
                                // SNMP_SYNTAX_ENDOFMIBVIEW 
     } value;    // union 
} smiVALUE, *smiLPVALUE; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>syntax </b></dt>
<dd>
Specifies an unsigned long integer that indicates the syntax data type of the <b>value</b> member. This member can be only one of the types listed in the following table. For additional information, see <a href="winsnmpov_4wfn.htm">WinSNMP Data Types</a> and RFC 1902, "Structure of Management Information for Version 2 of the Simple Network Management Protocol (SNMPv2)." 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=57%>Syntax data type </th>
<th align=left width=43%>Meaning </th>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_INT</b> </td>
<td width=43%>Indicates a 32-bit signed integer variable. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_BITS</b> </td>
<td width=43%>Indicates a variable that is an enumeration of named bits with non-negative, contiguous values, starting at zero. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_OCTETS</b> </td>
<td width=43%>Indicates an octet string variable that is binary or textual data. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_NULL</b> </td>
<td width=43%>Indicates a NULL value. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_OID</b> </td>
<td width=43%>Indicates an object identifier variable that is an assigned name with a maximum of 128 subidentifiers. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_INT32</b> </td>
<td width=43%>Indicates a 32-bit signed integer variable. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_IPADDR</b> </td>
<td width=43%>Indicates a 32-bit Internet address variable. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_CNTR32</b> </td>
<td width=43%>Indicates a counter variable that increases until it reaches a maximum value of (2^32) – 1. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_GAUGE32</b> </td>
<td width=43%>Indicates a gauge variable that is a non-negative integer that can increase or decrease, but never exceed a maximum value. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_TIMETICKS</b> </td>
<td width=43%>Indicates a counter variable that measures the time in hundredths of a second, until it reaches a maximum value of (2^32) – 1. It is a non-negative integer that is relative to a specific timer event. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_OPAQUE</b> </td>
<td width=43%>This type provides backward compatibility, and should not be used for new object types. It supports the capability to pass arbitrary Abstract Syntax Notation One (ASN.1) syntax. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_CNTR64</b> </td>
<td width=43%>Indicates a counter variable that increases until it reaches a maximum value of (2^64) – 1. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_UINT32</b> </td>
<td width=43%>Indicates a 32-bit unsigned integer variable. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_NOSUCHOBJECT</b> </td>
<td width=43%>Indicates that the agent does not support the object type that corresponds to the variable. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_NOSUCHINSTANCE</b> </td>
<td width=43%>Indicates that the object instance does not exist for the operation. </td>
</tr>
<tr valign=top>
<td width=57%><b>SNMP_SYNTAX_ENDOFMIBVIEW</b> </td>
<td width=43%>Indicates the WinSNMP manager application is attempting to reference an object identifier that is beyond the end of the MIB tree that the agent supports. </td>
</tr>
</table><br>


<p>
The last three syntax types describe exception conditions under the SNMP version 2C (SNMPv2C) framework. 
</dd>
<dt>
<b>value </b></dt>
<dd>
Specifies the union of all possible WinSNMP syntax data types, including the <a href="winsnmpst_994i.htm"><b>smiOID</b></a> or <a href="winsnmpst_2rci.htm"><b>smiOCTETS</b></a> descriptor types. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
A WinSNMP manager application must check the <b>syntax</b> member of an <b>smiVALUE</b> structure to correctly dereference the <b>value</b> member. The <b>value</b> member can contain a simple scalar value or a non-scalar value like an <a href="winsnmpst_2rci.htm"><b>smiOCTETS</b></a> or an <a href="winsnmpst_994i.htm"><b>smiOID</b></a> descriptor structure. </p>
<p>
If the <b>syntax</b> member indicates that the <b>value</b> member is an <b>smiOCTETS</b> or an <b>smiOID</b> descriptor structure, the WinSNMP manager application must determine whether to free the resources allocated for the structure. The Microsoft WinSNMP implementation allocates and deallocates memory for all output <a href="winsnmpst_2rci.htm"><b>smiOCTETS</b></a> and <a href="winsnmpst_994i.htm"><b>smiOID</b></a> structures. The application must call the <a href="winsnmpfc_9u42.htm"><b>SnmpFreeDescriptor</b></a> function to free the memory for the <b>ptr</b> member of these structures. </p>
<p>
Because the WinSNMP manager application allocates memory for input descriptors with variable lengths, it must free that memory. For additional information, see <a href="winsnmpov_4lmb.htm">WinSNMP Data Management Concepts</a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later. Available as a redistributable for Windows NT 4.0.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsnmp.h.</p>
<h4>See Also</h4>
<p>
<a href="winsnmpov_6tpl.htm">WinSNMP Manager API Overview</a>, <a href="winsnmpst_4r3n.htm">WinSNMP Structures</a>, <a href="winsnmpst_2rci.htm"><b>smiOCTETS</b></a>, <a href="winsnmpst_994i.htm"><b>smiOID</b></a>, <a href="winsnmpfc_12le.htm"><b>SnmpGetVb</b></a>, <a href="winsnmpfc_8sfg.htm"><b>SnmpCreateVbl</b></a>, <a href="winsnmpfc_9u42.htm"><b>SnmpFreeDescriptor</b></a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
