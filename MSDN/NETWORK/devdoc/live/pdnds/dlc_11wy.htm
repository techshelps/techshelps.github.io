<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LLC_CCB</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_llc_ccb_str"></a>LLC_CCB</h1>
<p>
The <b>LLC_CCB</b> structure represents a command control block. You pass a pointer to this structure to the <a href="dlc_43zi.htm"><b>AcsLan</b></a> function. </p>
<pre><code>typedef struct _LLC_CCB {
    UCHAR uchAdapterNumber; 
    UCHAR uchDlcCommand; 
    UCHAR uchDlcStatus; 
    UCHAR uchReserved1; 
    struct _LLC_CCB *pNext;
    ULONG ulCompletionFlag;
    CCB_PARMS u;
    HANDLE hCompletionEvent;
    UCHAR uchReserved2; 
    UCHAR uchReadFlag; 
    USHORT usReserved3
} LLC_CCB, *PLLC_CCB;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>uchAdapterNumber</b></dt>
<dd>
Specifies adapter number 0 or 1. </dd>
<dt>
<b>uchDlcCommand</b></dt>
<dd>
Specifies the command code. The following command codes are supported. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Code</th>
<th align=left width=55%>Meaning</th>
</tr>
<tr valign=top>
<td width=45%>LLC_BUFFER_CREATE</td>
<td width=55%>Creates a new DLC buffer pool and returns its handle. The application must open at least one adapter before it can create the buffer pool. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_BUFFER_FREE</td>
<td width=55%>Returns one or more buffers to the adapter pool. The buffers must have been obtained with the LLC_BUFFER_GET command. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_BUFFER_GET</td>
<td width=55%>Returns the requested buffers. You can retrieve several buffers of the same size or an optimal set of buffers for the specified frame size. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_CLOSE_ADAPTER</td>
<td width=55%>Closes the adapter logically, releasing its resources and canceling any pending commands. Open SAPs or link stations are reset before the completion of this command. Canceled commands return the error code LLC_STATUS_CANCELLED_BY_SYSTEM_ACTION. Functional address bits are reset. <p>
The <b>pNext</b> member receives the address of a queue of CCBs terminated by this command.</p>
</td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_CLOSE_DIRECT</td>
<td width=55%>Releases ownership of all direct stations. If you use an LLC_READ command to post this command, the system returns the buffers from the direct buffer pool in the parameter table.</td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_INITIALIZE</td>
<td width=55%>Resets the network adapter, returns any pending commands, and releases buffer resources. For security reasons, the command resets the adapter physically only if it was not functioning normally when you issued the command. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_INTERRUPT</td>
<td width=55%>This command does not do anything. No parameter table is required. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_OPEN_ADAPTER</td>
<td width=55%>Prepares the protocol drivers for network communication. The adapter must be in a logically closed state for this command to succeed. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_OPEN_DIRECT</td>
<td width=55%>Gives the application ownership of the direct station and enables it to receive frames using the LLC_RECEIVE command. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_READ_LOG</td>
<td width=55%>Reads and resets the adapter logs. The system transfers the log data to the buffer in the parameter table. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_SET_EXCEPTION_FLAGS</td>
<td width=55%>Defines user-notification flags so the system notifies the application of exception conditions. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_SET_FUNCTIONAL_ADDRESS</td>
<td width=55%>Sets or resets the functional addresses for the adapter to receive messages. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_SET_GROUP_ADDRESS</td>
<td width=55%>Sets or resets the group address for which the adapter will receive messages. Only one application can set a group address for a Token-Ring adapter. This command can fail if the Ethernet adapter does not have an available multicast address. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_SET_MULTICAST_ADDRESS</td>
<td width=55%>Sets a 48-bit multicast address for the current DLC adapter context. The application must issue this command before it can receive multicasts. This command is supported only on Ethernet networks and is an alternative to the LLC_DIR_SET_GROUP_ADDRESS command. This command can fail if the Ethernet adapter does not have an available multicast address. A value of zero removes the previous multicast address. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_STATUS</td>
<td width=55%>Reads the general status information. You can issue this command before the LLC_DIR_OPEN_ADAPTER command, but after the LLC_DIR_INITIALIZE command. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_TIMER_CANCEL</td>
<td width=55%>Cancels a timer that was previously initiated by an LLC_DIR_TIMER_SET command. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_TIMER_CANCEL_GROUP</td>
<td width=55%>Cancels a group of timer commands that were previously initiated by the LLC_DIR_TIMER_SET command. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DIR_TIMER_SET</td>
<td width=55%>Initiates a programmable timer to expire after a designated interval. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_CLOSE_SAP</td>
<td width=55%>Closes a SAP. The SAP cannot close unless all link stations are closed. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_CLOSE_STATION</td>
<td width=55%>Closes a link station. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_CONNECT_STATION</td>
<td width=55%>Starts or completes a connection between the local and remote link stations. Both the local station and the remote station must issue the command to establish the connection. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_FLOW_CONTROL</td>
<td width=55%>Controls the flow of data across a single link station on a SAP or across every link station on a SAP. You should issue this command immediately after a link station enters a local busy state. The driver clears the busy state when there are enough free buffers to receive more frames. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_MODIFY</td>
<td width=55%>Modifies the work values of an open link station or the default values of a SAP. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_OPEN_SAP</td>
<td width=55%>Activates a SAP and reserves a number of link stations for the SAP. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_OPEN_STATION</td>
<td width=55%>Allocates resources for a link station. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_REALLOCATE_STATIONS</td>
<td width=55%>Reallocates the number of link stations allocated to a SAP. When reducing the number of stations, the command returns the deallocated stations to the adapter pool. When increasing the number of stations, the command assigns new stations from the adapter pool. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_RESET</td>
<td width=55%>Resets the SAPs and their associated link stations. Affected resources are freed, and pending commands are terminated. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_SET_THRESHOLD</td>
<td width=55%>Sets a threshold for the SAP or direct station's buffer pool. The application is notified whenever the number of buffers in the pool falls below this threshold. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_DLC_STATISTICS</td>
<td width=55%>Reads and optionally resets the DLC log. The log is transferred to the buffer indicated by the parameter table. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_READ</td>
<td width=55%>Performs a read operation. The operation is complete when the system sets the <b>uchDlcStatus</b> member and the sets the <b>hCompletionEvent</b> event to the signaled state. The data and optional header begin at offset 64. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_READ_CANCEL</td>
<td width=55%>Cancels a pending LLC_READ command for the application. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_RECEIVE</td>
<td width=55%>Receives data. The command fails if the application has not created a buffer pool. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_RECEIVE_CANCEL</td>
<td width=55%>Cancels a pending LLC_RECEIVE command. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_RECEIVE_MODIFY</td>
<td width=55%>Receives data and puts some of it into a user buffer. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_TRANSMIT_DIR_FRAME</td>
<td width=55%>Transmits data to the direct station. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_TRANSMIT_I_FRAME</td>
<td width=55%>Transmits information data to a link station. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_TRANSMIT_TEST_CMD</td>
<td width=55%>Requests the adapter to transmit a test command frame with the poll bit set. You can only use this command with a SAP. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_TRANSMIT_UI_FRAME</td>
<td width=55%>Transmits unnumbered information data for a SAP. You can use this command only with a SAP. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_TRANSMIT_XID_CMD</td>
<td width=55%>Transmits an XID command with the poll bit set on. You can use this command only with a SAP. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_TRANSMIT_XID_RESP_FINAL</td>
<td width=55%>Transmits an XID response with the final bit on. You can only use this command with a SAP opened with SAP options specifying that the application will handle XID commands. </td>
</tr>
<tr valign=top>
<td width=45%>LLC_TRANSMIT_XID_RESP_NOT_FINAL</td>
<td width=55%>Transmits an XID response with the final bit off. You can only use this command with a SAP opened with SAP options specifying that the application will handle XID commands. </td>
</tr>
</table><br>

</dd>
<dt>
<b>uchDlcStatus</b></dt>
<dd>
Receives the command completion code. This value is set to LLC_STATUS_PENDING when the command is received. It is set to an appropriate code when the command is completed. For a list of the command completion codes, see the following Remarks section. </dd>
<dt>
<b>uchReserved1</b></dt>
<dd>
Reserved. </dd>
<dt>
<b>pNext</b></dt>
<dd>
Specifies the next command control block in the chain. Otherwise, set this parameter to NULL. </dd>
<dt>
<b>ulCompletionFlag</b></dt>
<dd>
An optional flag set when an LLC_READ command is completed. If you set this parameter to zero before the command is issued, it is not used. </dd>
<dt>
<b>u</b></dt>
<dd>
Specifies the address of a <a href="dlc_13le.htm"><b>CCB_PARMS</b></a> structure representing the parameter table. </dd>
<dt>
<b>hCompletionEvent</b></dt>
<dd>
Specifies a handle to an event that you can use to check for command completion. Otherwise, set this parameter to zero. When the command is completed, it sets the event to the signaled state. </dd>
<dt>
<b>uchReserved2</b></dt>
<dd>
<b>Windows NT:</b> Not used. 
<p>
<b>Windows 95 and Windows 98:</b> The identifier of the application issuing the command. This value is returned by the LLC_DIR_OPEN_ADAPTER command and is used for all subsequent commands. 
</dd>
<dt>
<b>uchReadFlag</b></dt>
<dd>
Specifies that an LLC_READ command control block is chained in this command. Otherwise, set this parameter to zero. </dd>
<dt>
<b>usReserved3</b></dt>
<dd>
Reserved. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>uchDlcStatus</b> member receives an <b>LLC_STATUS</b> value representing the command completion code. <b>LLC_STATUS</b> is an enumerated type. The following completion codes are defined: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=13%>Code</th>
<th align=left width=87%>Name</th>
</tr>
<tr valign=top>
<td width=13%>1</td>
<td width=87%>LLC_STATUS_INVALID_COMMAND</td>
</tr>
<tr valign=top>
<td width=13%>2</td>
<td width=87%>LLC_STATUS_DUPLICATE_COMMAND</td>
</tr>
<tr valign=top>
<td width=13%>3</td>
<td width=87%>LLC_STATUS_ADAPTER_OPEN</td>
</tr>
<tr valign=top>
<td width=13%>4</td>
<td width=87%>LLC_STATUS_ADAPTER_CLOSED</td>
</tr>
<tr valign=top>
<td width=13%>5</td>
<td width=87%>LLC_STATUS_PARAMETER_MISSING</td>
</tr>
<tr valign=top>
<td width=13%>6</td>
<td width=87%>LLC_STATUS_INVALID_OPTION</td>
</tr>
<tr valign=top>
<td width=13%>7</td>
<td width=87%>LLC_STATUS_COMMAND_CANCELLED_FAILURE</td>
</tr>
<tr valign=top>
<td width=13%>10</td>
<td width=87%>LLC_STATUS_CANCELLED_BY_USER</td>
</tr>
<tr valign=top>
<td width=13%>12</td>
<td width=87%>LLC_STATUS_SUCCESS_NOT_OPEN</td>
</tr>
<tr valign=top>
<td width=13%>17</td>
<td width=87%>LLC_STATUS_TIMER_ERROR</td>
</tr>
<tr valign=top>
<td width=13%>18</td>
<td width=87%>LLC_STATUS_NO_MEMORY</td>
</tr>
<tr valign=top>
<td width=13%>21</td>
<td width=87%>LLC_STATUS_LOST_LOG_DATA</td>
</tr>
<tr valign=top>
<td width=13%>22</td>
<td width=87%>LLC_STATUS_BUFFER_SIZE_EXCEEDED</td>
</tr>
<tr valign=top>
<td width=13%>24</td>
<td width=87%>LLC_STATUS_INVALID_BUFFER_LENGTH</td>
</tr>
<tr valign=top>
<td width=13%>25</td>
<td width=87%>LLC_STATUS_INADEQUATE_BUFFERS</td>
</tr>
<tr valign=top>
<td width=13%>26</td>
<td width=87%>LLC_STATUS_USER_LENGTH_TOO_LARGE</td>
</tr>
<tr valign=top>
<td width=13%>27</td>
<td width=87%>LLC_STATUS_INVALID_PARAMETER_TABLE</td>
</tr>
<tr valign=top>
<td width=13%>28</td>
<td width=87%>LLC_STATUS_INVALID_POINTER_IN_CCB</td>
</tr>
<tr valign=top>
<td width=13%>29</td>
<td width=87%>LLC_STATUS_INVALID_ADAPTER</td>
</tr>
<tr valign=top>
<td width=13%>32</td>
<td width=87%>LLC_STATUS_LOST_DATA_NO_BUFFERS</td>
</tr>
<tr valign=top>
<td width=13%>33</td>
<td width=87%>LLC_STATUS_LOST_DATA_INADEQUATE_SPACE</td>
</tr>
<tr valign=top>
<td width=13%>34</td>
<td width=87%>LLC_STATUS_TRANSMIT_ERROR_FS</td>
</tr>
<tr valign=top>
<td width=13%>35</td>
<td width=87%>LLC_STATUS_TRANSMIT_ERROR</td>
</tr>
<tr valign=top>
<td width=13%>39</td>
<td width=87%>LLC_STATUS_LINK_NOT_TRANSMITTING</td>
</tr>
<tr valign=top>
<td width=13%>40</td>
<td width=87%>LLC_STATUS_INVALID_FRAME_LENGTH</td>
</tr>
<tr valign=top>
<td width=13%>50</td>
<td width=87%>LLC_STATUS_INVALID_NODE_ADDRESS</td>
</tr>
<tr valign=top>
<td width=13%>51</td>
<td width=87%>LLC_STATUS_INVALID_RCV_BUFFER_LENGTH</td>
</tr>
<tr valign=top>
<td width=13%>52</td>
<td width=87%>LLC_STATUS_INVALID_XMIT_BUFFER_LENGTH</td>
</tr>
<tr valign=top>
<td width=13%>64</td>
<td width=87%>LLC_STATUS_INVALID_STATION_ID</td>
</tr>
<tr valign=top>
<td width=13%>65</td>
<td width=87%>LLC_STATUS_LINK_PROTOCOL_ERROR</td>
</tr>
<tr valign=top>
<td width=13%>66</td>
<td width=87%>LLC_STATUS_PARMETERS_EXCEEDED_MAX</td>
</tr>
<tr valign=top>
<td width=13%>67</td>
<td width=87%>LLC_STATUS_INVALID_SAP_VALUE</td>
</tr>
<tr valign=top>
<td width=13%>68</td>
<td width=87%>LLC_STATUS_INVALID_ROUTING_INFO</td>
</tr>
<tr valign=top>
<td width=13%>71</td>
<td width=87%>LLC_STATUS_LINK_STATIONS_OPEN</td>
</tr>
<tr valign=top>
<td width=13%>74</td>
<td width=87%>LLC_STATUS_INCOMPATIBLE_COMMANDS</td>
</tr>
<tr valign=top>
<td width=13%>77</td>
<td width=87%>LLC_STATUS_CONNECT_FAILED</td>
</tr>
<tr valign=top>
<td width=13%>79</td>
<td width=87%>LLC_STATUS_INVALID_REMOTE_ADDRESS</td>
</tr>
<tr valign=top>
<td width=13%>80</td>
<td width=87%>LLC_STATUS_CCB_POINTER_FIELD</td>
</tr>
<tr valign=top>
<td width=13%>87</td>
<td width=87%>LLC_STATUS_INADEQUATE_LINKS</td>
</tr>
<tr valign=top>
<td width=13%>88</td>
<td width=87%>LLC_STATUS_INVALID_PARAMETER_1</td>
</tr>
<tr valign=top>
<td width=13%>92</td>
<td width=87%>LLC_STATUS_DIRECT_STATIONS_NOT_ASSIGNED</td>
</tr>
<tr valign=top>
<td width=13%>93</td>
<td width=87%>LLC_STATUS_DEVICE_DRIVER_NOT_INSTALLED</td>
</tr>
<tr valign=top>
<td width=13%>94</td>
<td width=87%>LLC_STATUS_ADAPTER_NOT_INSTALLED</td>
</tr>
<tr valign=top>
<td width=13%>95</td>
<td width=87%>LLC_STATUS_CHAINED_DIFFERENT_ADAPTERS</td>
</tr>
<tr valign=top>
<td width=13%>96</td>
<td width=87%>LLC_STATUS_INIT_COMMAND_STARTED</td>
</tr>
<tr valign=top>
<td width=13%>98</td>
<td width=87%>LLC_STATUS_CANCELLED_BY_SYSTEM_ACTION</td>
</tr>
<tr valign=top>
<td width=13%>101</td>
<td width=87%>LLC_STATUS_NO_GDT_SELECTORS</td>
</tr>
<tr valign=top>
<td width=13%>105</td>
<td width=87%>LLC_STATUS_MEMORY_LOCK_FAILED</td>
</tr>
<tr valign=top>
<td width=13%>128</td>
<td width=87%>LLC_STATUS_INVALID_BUFFER_ADDRESS</td>
</tr>
<tr valign=top>
<td width=13%>129</td>
<td width=87%>LLC_STATUS_BUFFER_ALREADY_RELEASED</td>
</tr>
<tr valign=top>
<td width=13%>161</td>
<td width=87%>LLC_STATUS_INVALID_VERSION</td>
</tr>
<tr valign=top>
<td width=13%>162</td>
<td width=87%>LLC_STATUS_NT_ERROR_STATUS</td>
</tr>
<tr valign=top>
<td width=13%>255</td>
<td width=87%>LLC_STATUS_PENDING</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dlcapi.h.</p>
<h4>See Also</h4>
<p>
<a href="dlc_0pwl.htm">The DLC Interface Overview</a>, <a href="dlc_2s6r.htm">DLC Structures</a>, <a href="dlc_43zi.htm"><b>AcsLan</b></a>, <a href="dlc_13le.htm"><b>CCB_PARMS</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
