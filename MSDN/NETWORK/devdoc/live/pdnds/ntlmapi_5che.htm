<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SERVER_INFO_503</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_server_info_503_str"></a>SERVER_INFO_503</h1>
<p>
The <b>SERVER_INFO_503 </b>structure contains information about the specified server, including name, platform, type of server, and associated software. </p>
<pre><code>typedef struct _SERVER_INFO_503 {
    DWORD     sv503_sessopens;
    DWORD     sv503_sessvcs;
    DWORD     sv503_opensearch;
    DWORD     sv503_sizreqbuf;
    DWORD     sv503_initworkitems;
    DWORD     sv503_maxworkitems;
    DWORD     sv503_rawworkitems;
    DWORD     sv503_irpstacksize;
    DWORD     sv503_maxrawbuflen;
    DWORD     sv503_sessusers;
    DWORD     sv503_sessconns;
    DWORD     sv503_maxpagedmemoryusage;
    DWORD     sv503_maxnonpagedmemoryusage;
    BOOL      sv503_enableforcedlogoff;
    BOOL      sv503_timesource;
    BOOL      sv503_acceptdownlevelapis;
    BOOL      sv503_lmannounce;
    LPWSTR    sv503_domain;
    DWORD     sv503_maxkeepsearch;
    DWORD     sv503_scavtimeout;
    DWORD     sv503_minrcvqueue;
    DWORD     sv503_minfreeworkitems;
    DWORD     sv503_xactmemsize;
    DWORD     sv503_threadpriority;
    DWORD     sv503_maxmpxct;
    DWORD     sv503_oplockbreakwait;
    DWORD     sv503_oplockbreakresponsewait;
    BOOL      sv503_enableoplocks;
    BOOL      sv503_enablefcbopens;
    BOOL      sv503_enableraw;
    BOOL      sv503_enablesharednetdrives;
    DWORD     sv503_minfreeconnections;
    DWORD     sv503_maxfreeconnections;
} SERVER_INFO_503, *PSERVER_INFO_503, *LPSERVER_INFO_503;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>sv503_sessopens</b></dt>
<dd>
Specifies the number of files that can be open in one session.</dd>
<dt>
<b>sv503_sessvcs</b></dt>
<dd>
Specifies the maximum number of virtual circuits per client.</dd>
<dt>
<b>sv503_opensearch</b></dt>
<dd>
Specifies the number of search operations that can be carried out simultaneously.</dd>
<dt>
<b>sv503_sizreqbuf</b></dt>
<dd>
Specifies the size, in bytes, of each server buffer.</dd>
<dt>
<b>sv503_initworkitems</b></dt>
<dd>
Specifies the initial number of receive buffers, or work items, used by the server. Allocating work items costs a certain amount of memory initially, but not as much as having to allocate additional buffers later.</dd>
<dt>
<b>sv503_maxworkitems</b></dt>
<dd>
Specifies the maximum number of receive buffers, or work items, the server can allocate. If this limit is reached, the transport must initiate flow control at a significant performance cost.</dd>
<dt>
<b>sv503_rawworkitems</b></dt>
<dd>
Specifies the number of special work items for raw I/O that the server uses. A larger value for this member can increase performance but costs more memory.</dd>
<dt>
<b>sv503_irpstacksize</b></dt>
<dd>
Specifies the number of stack locations in IRPs allocated by the server.</dd>
<dt>
<b>sv503_maxrawbuflen</b></dt>
<dd>
Specifies the maximum raw mode buffer size.</dd>
<dt>
<b>sv503_sessusers</b></dt>
<dd>
Specifies the maximum number of users that can be logged on to a server using a single virtual circuit.</dd>
<dt>
<b>sv503_sessconns</b></dt>
<dd>
Specifies the maximum number of tree connections that can be made on the server using a single virtual circuit.</dd>
<dt>
<b>sv503_maxpagedmemoryusage</b></dt>
<dd>
Specifies the maximum size of pageable memory that the server can have allocated at any time. Adjust this member if you want to administer memory quota control.</dd>
<dt>
<b>sv503_maxnonpagedmemoryusage</b></dt>
<dd>
Specifies the maximum size of nonpaged memory that the server can have allocated at any time. Adjust this member if you want to administer memory quota control.</dd>
<dt>
<b>sv503_enableforcedlogoff</b></dt>
<dd>
Specifies whether the server should force a client to disconnect, even if the client has open files, once the client's logon time has expired.</dd>
<dt>
<b>sv503_timesource</b></dt>
<dd>
Specifies whether the server is a reliable time source.</dd>
<dt>
<b>sv503_acceptdownlevelapis</b></dt>
<dd>
Specifies whether the server will accept function calls from previous generation LAN Manager clients.</dd>
<dt>
<b>sv503_lmannounce</b></dt>
<dd>
Specifies the operating system server announcement interval.</dd>
<dt>
<b>sv503_domain</b></dt>
<dd>
Specifies the name of the server's domain.</dd>
<dt>
<b>sv503_maxkeepsearch</b></dt>
<dd>
Specifies the length of time the server will retain information about directory searches that have not ended.</dd>
<dt>
<b>sv503_scavtimeout</b></dt>
<dd>
Specifies the time that the scavenger remains idle before waking up to service requests. A smaller value for this member improves the response of the server to various events but costs CPU cycles.</dd>
<dt>
<b>sv503_minrcvqueue</b></dt>
<dd>
Specifies the minimum number of free receive work items needed by the server before it begins allocating more. A larger value for this member helps ensure that there will always be work items available, but a value that is too large is simply inefficient.</dd>
<dt>
<b>sv503_minfreeworkitems</b></dt>
<dd>
Specifies the minimum number of available receive work items that are needed for the server to begin processing a server message block. A larger value for this member ensures that work items are available more frequently for nonblocking requests, but it also increases the likelihood that blocking requests will be rejected.</dd>
<dt>
<b>sv503_xactmemsize</b></dt>
<dd>
Specifies the size of the shared memory region used to process server functions. </dd>
<dt>
<b>sv503_threadpriority</b></dt>
<dd>
Specifies the priority of all server threads in relation to the base priority of the process. Higher priority can give better server performance at the cost of local responsiveness. Lower priority balances server needs with the needs of other processes on the system.</dd>
<dt>
<b>sv503_maxmpxct</b></dt>
<dd>
Specifies the maximum number of simultaneous requests any one client can send to the server. For example, 10 means you can have 10 unanswered requests at the server. When any single client has 10 requests queued within the server, the client must wait for a server response before sending another request.</dd>
<dt>
<b>sv503_oplockbreakwait</b></dt>
<dd>
Specifies the time to wait before timing out an opportunistic lock break request.</dd>
<dt>
<b>sv503_oplockbreakresponsewait</b></dt>
<dd>
Specifies the time to wait before timing out an opportunistic lock break request.</dd>
<dt>
<b>sv503_enableoplocks</b></dt>
<dd>
Specifies whether the server allows clients to use opportunistic locks on files. Opportunistic locks are a significant performance enhancement, but have the potential to cause lost cached data on some networks, particularly wide-area networks.</dd>
<dt>
<b>sv503_enablefcbopens</b></dt>
<dd>
Specifies whether several MS-DOS File Control Blocks (FCBs) are placed in a single location accessible by the server. This saves resources on the server.</dd>
<dt>
<b>sv503_enableraw</b></dt>
<dd>
Specifies whether the server processes raw Server Message Blocks (SMBs). If enabled, this allows more data to transfer per transaction and also improves performance. However, it is possible that processing raw SMBs can impede performance on certain networks. The server maintains the value of this member.</dd>
<dt>
<b>sv503_enablesharednetdrives</b></dt>
<dd>
Specifies whether the server allows redirected server drives to be shared.</dd>
<dt>
<b>sv503_minfreeconnections</b></dt>
<dd>
Specifies the minimum number of connection structures the server sets aside to handle bursts of requests by clients to connect to the server.</dd>
<dt>
<b>sv503_maxfreeconnections</b></dt>
<dd>
Specifies the maximum number of connection structures the server sets aside to handle bursts of requests by clients to connect to the server.
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in lmserver.h.</p>
<h4>See Also</h4>
<p>
<a href="ntlmapi_7o4f.htm">Networking (Net) Overview</a>, <a href="ntlmapi_8fub.htm">Net Structures</a>, <a href="ntlmapi_2qun.htm"><b>NetServerGetInfo</b></a></p>
<p>&nbsp;</p></body>
</HTML>
