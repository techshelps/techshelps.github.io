<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Buffer Management</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_buffer_management"></a>Buffer Management</h2>
<p>
The buffer management provided in the Win32 DLC is different than the buffer management provided in other implementations. However, the buffer headers are as defined in the IBM DLC interface specification. </p>
<p>
The Win32 DLC buffers are allocated from a single virtual memory block. The DLC driver defines the buffer segment sizes. For each frame the driver receives, it allocates a minimal combination of 256, 512, 1024, 2048, and 4096 buffer segments (at most, one of each size). This minimizes the amount of nonpaged memory needed for different buffer segment headers. It also allocates the minimal number of buffers for the received frame. Applications can request the fixed size buffers or an optimal number of buffers for a frame size. </p>
<p>
The DLC buffer pools are dynamically expanded during LLC_READ, LLC_DLC_FLOW_CONTROL, and LLC_BUFFER_GET commands if the size of the free buffers is less than the specified minimum threshold size for the application. However, the system cannot increase the buffer pool beyond the application-specified maximum size. </p>
<p>
An application can use its own buffers for transmitting data or send data directly from the buffer pool. Because the DLC driver locks all transmit buffers that are not in the buffer pool, you should avoid using a large number of small buffers for transmitting data. </p>
<p>
To improve performance, use the following techniques: 
<ul>
<li>
Allocate buffers from the buffer pool. Copy data to these buffers from the user buffers.</li>
<li>
The negotiated maximum frame size should fit into a single DLC buffer. For example, use 2048 or 4096 minus the size of the frame and buffer headers. </li>
<li>
Receive several frames with the LLC_READ command.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
