<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SnmpFreePdu</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_snmpfreepdu"></a>SnmpFreePdu</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The WinSNMP <b>SnmpFreePdu</b> function releases resources associated with an SNMP protocol data unit (PDU) created by the <a href="winsnmpfc_89kl.htm"><b>SnmpCreatePdu</b></a> or the <a href="winsnmpfc_619x.htm"><b>SnmpDuplicatePdu</b></a> function. </p>
<pre><code><b>SNMPAPI_STATUS SnmpFreePdu(
</b>  <b>HSNMP_PDU </b><i>PDU </i>    // handle to the PDU to free 
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>PDU </i></dt>
<dd>
Handle to the SNMP PDU to free. 
</dd>
</dl>
<h4>Return Values </h4>
<p>
If the function succeeds, the return value is SNMPAPI_SUCCESS. </p>
<p>
If the function fails, the return value is SNMPAPI_FAILURE. To get extended error information, call <a href="winsnmpfc_7upe.htm"><b>SnmpGetLastError</b></a>. The <b>SnmpGetLastError</b> function can return one of the following errors. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=44%>Error Code </th>
<th align=left width=56%>Description </th>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_NOT_INITIALIZED </td>
<td width=56%>The <a href="winsnmpfc_0vn4.htm"><b>SnmpStartup</b></a> function did not complete successfully. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_ALLOC_ERROR </td>
<td width=56%>An error occurred during memory allocation. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_PDU_INVALID </td>
<td width=56%>The PDU handle is invalid. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_OTHER_ERROR </td>
<td width=56%>An unknown or undefined error occurred. </td>
</tr>
</table><br>
<h4>Remarks </h4>
<p>
If the manager application calls the <a href="winsnmpfc_1l0l.htm"><b>SnmpClose</b></a> or the <a href="winsnmpfc_11yo.htm"><b>SnmpCleanup</b></a> function, the Microsoft WinSNMP implementation frees all resources it allocates for the WinSNMP session. However, it is recommended that the application free individual resources with the WinSNMP function that corresponds to the resource. This reduces the implementation's work load, and should enhance the implementation's service to all applications. The application should use the <a href="winsnmpfc_8x64.htm"><b>SnmpFreeVbl</b></a> function to deallocate variable bindings list resources. For additional information, see <a href="winsnmpov_4lmb.htm">WinSNMP Data Management Concepts</a>. </p>
<p>
Under WinSNMP, a variable binding entry exists only within a variable bindings list, even if the variable bindings list contains just one entry. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later. Available as a redistributable for Windows NT 4.0.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsnmp.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use wsnmp32.lib.</p>
<h4>See Also </h4>
<p>
<a href="winsnmpov_6tpl.htm">WinSNMP Manager API Overview</a>, <a href="winsnmpfc_09kj.htm">WinSNMP Functions</a>, <a href="winsnmpfc_8x64.htm"><b>SnmpFreeVbl</b></a>, <a href="winsnmpfc_1l0l.htm"><b>SnmpClose</b></a>, <a href="winsnmpfc_11yo.htm"><b>SnmpCleanup</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
