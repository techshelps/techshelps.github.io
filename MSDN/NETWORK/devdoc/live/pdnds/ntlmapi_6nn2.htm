<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changing Elements of User Information</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_changing_elements_of_user_information"></a>Changing Elements of User Information</h2>
<p>
<b>Windows NT</b></p>
<p>
The code sample in this topic demonstrates how to change several elements of user information using the <a href="ntlmapi_8g6n.htm"><b>NetUserGetInfo</b></a> and <a href="ntlmapi_0zfz.htm"><b>NetUserSetInfo</b></a> functions and various levels of several structures.</p>
<p>
The Net functions provide a variety of levels to assist in changing user information. Some of these levels require administrative privileges to execute successfully. When changing user information, it is best to use the specific level for that piece of information. This prevents the accidental resetting of unrelated information when using the lower level values. Some of the more commonly used levels are illustrated in the following sample code. </p>
<p>
All code fragments assume that the user has defined the UNICODE compile directive and included the appropriate Net function header files, as follows:</p>
<pre><code>#define UNICODE
#include &lt;windows.h&gt;
#define INCL_NET
#include &lt;lm.h&gt;
 </code></pre>
<h3>Setting the User Password, Level 1003</h3>
<p>
This level sets the password to a known value. The <a href="ntlmapi_51bm.htm"><b>USER_INFO_1003</b></a> structure topic contains a description of each flag. The following code fragment illustrates how to use this level.</p>
<p>
#define PASSWORD TEXT("new_password")</p>
<pre><code>.
.
.
USER_INFO_1003 usriSetPassword;
DWORD netRet = 0;
//
// Set the usri1003_password element to point to a Unicode string
//
// SERVER and USERNAME can be hard coded TEXT("") strings or pointers to
// Unicode strings.
//
usriSetPassword.usri1003_password  = PASSWORD;
netRet = NetUserSetInfo( SERVER, USERNAME,  1003, (LPBYTE)&amp;usriSetPassword);
if( netRet == NERR_Success ) printf("Success!\n");
else printf( "ERROR: %d Returned from NetUserSetInfo\n", netRet);
 </code></pre>
<h3>Setting the User Privilege, Level 1005</h3>
<p>
This level sets the privilege level of the user. The <a href="ntlmapi_4836.htm"><b>USER_INFO_1005</b></a> structure topic contains a description of each flag. The following code fragment illustrates how to use this level.</p>
<pre><code>USER_INFO_1005 usriPriv;
DWORD netRet = 0;
//
// Set the usri1005_priv to the appropriate value, then call NetUserSetInfo.
//
// SERVER and USERNAME can be hard coded TEXT("") strings or pointers to
// Unicode strings.
//
usriPriv.usri1005_priv  = USER_PRIV_USER;
netRet = NetUserSetInfo( SERVER, USERNAME,  1005, (LPBYTE)&amp;usriPriv);
if( netRet == NERR_Success ) printf("Success!\n");
else printf( "ERROR: %d Returned from NetUserSetInfo\n", netRet);
 </code></pre>
<h3>Setting the User Home Directory, Level 1006</h3>
<p>
This level sets the user home directory. The <a href="ntlmapi_3tgy.htm"><b>USER_INFO_1006</b></a> structure topic contains a description of each flag. This directory can be a hard coded path or a valid Unicode path.</p>
<pre><code>#define HOMEDIR TEXT("C:\\USER\USER_PATH")
USER_INFO_1006 usriHomeDir;
//
// Set the usri1006_home_dir to point to a valid Unicode string for the new home directory.
//
// SERVER and USERNAME can be hard coded TEXT("") strings or pointers to
// Unicode strings.
//
usriHomeDir.usri1006_home_dir  = HOMEDIR;
netRet = NetUserSetInfo( SERVER, USERNAME,  1006, (LPBYTE)&amp;usriHomeDir);
if( netRet == NERR_Success ) printf("Success!\n");
else printf( "ERROR: %d Returned from NetUserSetInfo\n", netRet);
 </code></pre>
<h3>Setting the User Comment Field, Level 1007</h3>
<p>
This level is used to set the user comment field. The <a href="ntlmapi_3euq.htm"><b>USER_INFO_1007</b></a> structure topic contains a description of each flag. The following code fragment illustrates how to use this level.</p>
<pre><code>#define COMMENT TEXT("This is my Comment Text for the user")
USER_INFO_1007 usriComment;
//
// Set the usri1007_comment  to point to a valid Unicode string for the new comment.
//
// SERVER and USERNAME can be hard coded TEXT("") strings or pointers to
// Unicode strings.
//
usriComment.usri1007_comment  = COMMENT;
netRet = NetUserSetInfo( SERVER, USERNAME,  1006, (LPBYTE)&amp;usriComment);
if( netRet == NERR_Success ) printf("Success!\n");
else printf( "ERROR: %d Returned from NetUserSetInfo\n", netRet);
 </code></pre>
<h3>Setting the User Flags, Level 1008</h3>
<p>
This level sets the user flags. The <a href="ntlmapi_308i.htm"><b>USER_INFO_1008</b></a> structure topic contains the valid values for the flags field. The UF_SCRIPT flag must be set for Windows NT and LAN Manager networks. Trying to set the flags without setting this bit on a Windows NT or LAN Manager network will cause the <b>NetUserSetInfo</b> function to fail. The following code fragment illustrates how to use this level.</p>
<pre><code>#define USR_FLAGS UF_SCRIPT | UF_NORMAL_ACCOUNT
USER_INFO_1008 usriFlags;
//
// Set the usri1008_flags  to the appropriate constant.
//
// SERVER and USERNAME can be hard coded TEXT("") strings or pointers to
// Unicode strings.
//
usriFlags.usri1008_flags  = USR_FLAGS;
netRet = NetUserSetInfo( SERVER, USERNAME,  1006, (LPBYTE)&amp;usriFlags);
if( netRet == NERR_Success ) printf("Success!\n");
else printf( "ERROR: %d Returned from NetUserSetInfo\n", netRet);
 </code></pre>
<h3>Setting the User Script Path, Level 1009</h3>
<p>
This level is used to set a logon script path for a particular user. Points to a Unicode string specifying the path of the user's logon script, .CMD, .EXE, or .BAT file. The string can be null. The <a href="ntlmapi_2lma.htm"><b>USER_INFO_1009</b></a> structure topic contains a description of each flag. The following code fragment illustrates how to use this level.</p>
<pre><code>#define SCRIPT_PATH "C:\\BIN\\MYSCRIPT.BAT"
USER_INFO_1009 usriScrPath;
//
// Set the usri1009_script_path  to a Unicode string constant or a pointer to a Unicode string.
//
// SERVER and USERNAME can be hard coded TEXT("") strings or pointers to
// Unicode strings.
//
usriScrPath.usri1009_script_path  = SCRIPT_PATH;
netRet = NetUserSetInfo( SERVER, USERNAME,  1006, (LPBYTE)&amp;usriScrPath);
if( netRet == NERR_Success ) printf("Success!\n");
else printf( "ERROR: %d Returned from NetUserSetInfo\n", netRet);
 </code></pre>
<h3>Setting The User Authority Flags, Level 1010</h3>
<p>
This level is used to set the authority flags for a user. The <a href="ntlmapi_09o2.htm"><b>USER_INFO_1010</b></a> structure topic contains a description of each flag. The following code fragment illustrates how to use this level.</p>
<pre><code>#define AUTHORITY_FLAGS AF_OP_ACCOUNTS
USER_INFO_1010 usriAuthFlags;
//
// Set the usri1010_auth_flags  a constant containing the appropriated flag values.
//
// SERVER and USERNAME can be hard coded TEXT("") strings or pointers to
// Unicode strings.
//
usriAuthFlags.usri1010_auth_flags  = SCRIPT_PATH;
netRet = NetUserSetInfo( SERVER, USERNAME,  1006, (LPBYTE)&amp;usriAuthFlags);
if( netRet == NERR_Success ) printf("Success!\n");
else printf( "ERROR: %d Returned from NetUserSetInfo\n", netRet);
 </code></pre>
<h3>Setting The User Full Name, Level 1011</h3>
<p>
This level sets the user's full name. The <a href="ntlmapi_9v1u.htm"><b>USER_INFO_1011</b></a> structure topic contains a description of each flag. The following code fragment illustrates how to use this level.</p>
<pre><code>#define USER_FULL_NAME TEXT("Joe B. User")
USER_INFO_1011 usriFullName;
//
// Set the usri1011_full_name  to a Unicode string constant or a pointer to a Unicode string.
//
// SERVER and USERNAME can be hard coded TEXT("") strings or pointers to
// Unicode strings.
//
usriFullName.usri1011_full_name  = USER_FULL_NAME;
netRet = NetUserSetInfo( SERVER, USERNAME,  1006, (LPBYTE)&amp;usriFullName);
if( netRet == NERR_Success ) printf("Success!\n");
else printf( "ERROR: %d Returned from NetUserSetInfo\n", netRet);
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
