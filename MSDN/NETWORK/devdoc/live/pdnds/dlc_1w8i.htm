<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LLC_BUFFER_CREATE_PARMS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_llc_buffer_create_parms_str"></a>LLC_BUFFER_CREATE_PARMS</h1>
<p>
The <b>LLC_BUFFER_CREATE_PARMS</b> structure is the DLC parameter table for the LLC_BUFFER_CREATE command. You pass a pointer to this structure using the <b>pParameterTable</b> member of the <a href="dlc_13le.htm"><b>CCB_PARMS</b></a> union. </p>
<pre><code>typedef struct {
    HANDLE hBufferPool; 
    PVOID pBuffer; 
    ULONG cbBufferSize; 
    ULONG cbMinimumSizeThreshold; 
} LLC_BUFFER_CREATE_PARMS, *PLLC_BUFFER_CREATE_PARMS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>hBufferPool</b></dt>
<dd>
Handle to the created buffer pool. </dd>
<dt>
<b>pBuffer</b></dt>
<dd>
Specifies the address of an application-supplied buffer. The buffer can be statically allocated or dynamically allocated from the heap. The minimum size requirement is 0x2000. The buffer manager allocates all DLC buffers from this virtual buffer. This buffer area must not be used for anything else. </dd>
<dt>
<b>cbBufferSize</b></dt>
<dd>
The total size of the buffer, <b>pBuffer</b>, in bytes. </dd>
<dt>
<b>cbMinimumSizeThreshold</b></dt>
<dd>
The minimum locked size. The buffer manager tries to keep at least this much free space in the buffer pool. This parameter should be large enough to hold all data received between two sequential LLC_READ commands. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
Win32 DLC supports one buffer pool per process. After you open an adapter using the LLC_DIR_OPEN_ADAPTER command, you must give the DLC driver a buffer pool by using the LLC_BUFFER_CREATE command. </p>
<p>
You should carefully select the total and minimum buffer pool sizes, because the memory manager has a dynamic quota of available pages for each process. Your application may not run if it tries to allocate a buffer pool that is too large. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dlcapi.h.</p>
<h4>See Also</h4>
<p>
<a href="dlc_0pwl.htm">The DLC Interface Overview</a>, <a href="dlc_2s6r.htm">DLC Structures</a>, <a href="dlc_43zi.htm"><b>AcsLan</b></a>, <a href="dlc_13le.htm"><b>CCB_PARMS</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
