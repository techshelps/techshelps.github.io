<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LLC_DIR_SET_EFLAG_PARMS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_llc_dir_set_eflag_parms_str"></a>LLC_DIR_SET_EFLAG_PARMS</h1>
<p>
The <b>LLC_DIR_SET_EFLAG_PARMS</b> structure is the DLC parameter table for the LLC_DIR_SET_EXCEPTION_FLAGS command. You pass a pointer to this structure using the <b>pParameterTable</b> member of the <a href="dlc_13le.htm"><b>CCB_PARMS</b></a> union. </p>
<pre><code>typedef struct {
    ULONG ulAdapterCheckFlag;
    ULONG ulNetworkStatusFlag;
    ULONG ulPcErrorFlag;
    ULONG ulSystemActionFlag;
} LLC_DIR_SET_EFLAG_PARMS, *PLLC_DIR_SET_EFLAG_PARMS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>ulAdapterCheckFlag</b></dt>
<dd>
User notification flag for adapter-check exceptions. If this member is zero, the application will not be notified of these exceptions. </dd>
<dt>
<b>ulNetworkStatusFlag</b></dt>
<dd>
User notification flag for network-status exceptions. If this member is zero, the application will not be notified of these exceptions. </dd>
<dt>
<b>ulPcErrorFlag</b></dt>
<dd>
User notification flag for workstation errors. If this member is zero, the application will not be notified of these exceptions. </dd>
<dt>
<b>ulSystemActionFlag</b></dt>
<dd>
User notification flag for system-action exceptions. If this member is zero, the application will not be notified of these exceptions. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
The flag members are used to request that information relating to exception events be passed to the application. You should issue this command immediately after issuing the LLC_DIR_OPEN_ADAPTER command if the application is to be notified of any exception conditions. Then issue an LLC_READ command, setting the <b>hCompletionEvent</b> member of the <a href="dlc_11wy.htm"><b>LLC_CCB</b></a> structure. Whenever an exception occurs, this command will be executed and the event error code will be returned from the protocol driver. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dlcapi.h.</p>
<h4>See Also</h4>
<p>
<a href="dlc_0pwl.htm">The DLC Interface Overview</a>, <a href="dlc_2s6r.htm">DLC Structures</a>, <a href="dlc_43zi.htm"><b>AcsLan</b></a>, <a href="dlc_13le.htm"><b>CCB_PARMS</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
