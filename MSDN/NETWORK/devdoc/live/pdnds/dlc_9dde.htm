<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LLC_NOT_CONTIGUOUS_BUFFER</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_llc_not_contiguous_buffer_str"></a>LLC_NOT_CONTIGUOUS_BUFFER</h1>
<p>
The <b>LLC_NOT_CONTIGUOUS_BUFFER</b> structure represents a buffer for the received data. Specify this structure in the <a href="dlc_7alu.htm"><b>LLC_BUFFER</b></a> structure. </p>
<pre><code>typedef struct {
    PLLC_BUFFER pNextBuffer; 
    USHORT cbFrame; 
    USHORT cbBuffer; 
    USHORT offUserData; 
    USHORT cbUserData; 
    USHORT usStationId; 
    UCHAR uchOptions; 
    UCHAR uchMsgType; 
    USHORT cBuffersLeft; 
    UCHAR uchRcvFS; 
    UCHAR uchAdapterNumber; 
    PLLC_BUFFER pNextFrame; 
    UCHAR cbLanHeader; 
    UCHAR cbDlcHeader; 
    UCHAR auchLanHeader[32]; 
    UCHAR auchDlcHeader[4]; 
    USHORT usPadding; 
} LLC_NOT_CONTIGUOUS_BUFFER;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>pNextBuffer</b></dt>
<dd>
Specifies the address of an <a href="dlc_7alu.htm"><b>LLC_BUFFER</b></a> structure representing the next buffer in the frame. </dd>
<dt>
<b>cbFrame</b></dt>
<dd>
Length of the entire frame. </dd>
<dt>
<b>cbBuffer</b></dt>
<dd>
Length of the buffer. </dd>
<dt>
<b>offUserData</b></dt>
<dd>
User data in the structure. </dd>
<dt>
<b>cbUserData</b></dt>
<dd>
Length of user data. </dd>
<dt>
<b>usStationId</b></dt>
<dd>
Station identifier. </dd>
<dt>
<b>uchOptions</b></dt>
<dd>
Option byte from RECEIVE parameter table. </dd>
<dt>
<b>uchMsgType</b></dt>
<dd>
Specifies an <b>LLC_FRAME_TYPES</b> value representing the message type. <b>LLC_FRAME_TYPES</b> is an enumerated type. The following values are defined. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>LLC_DIRECT_MAC</td>
<td width=46%>MAC frame (direct station on Token-Ring network only).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_I_FRAME</td>
<td width=46%>Information frame (link stations only).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_UI_FRAME</td>
<td width=46%>UI frame.</td>
</tr>
<tr valign=top>
<td width=54%>LLC_XID_COMMAND_POLL</td>
<td width=46%>XID command (poll bit).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_XID_COMMAND_NOT_POLL</td>
<td width=46%>XID command (not poll bit).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_XID_RESPONSE_FINAL</td>
<td width=46%>XID response (final bit).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_XID_RESPONSE_NO_FINAL</td>
<td width=46%>XID response (not final bit).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_TEST_RESPONSE_FINAL</td>
<td width=46%>TEST response (final bit).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_TEST_RESPONSE_NOT_FINAL</td>
<td width=46%>TEST response (not final bit).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_DIRECT_8022</td>
<td width=46%>802.2 frame (direct station only).</td>
</tr>
<tr valign=top>
<td width=54%>LLC_DIRECT_ETHERNET_TYPE</td>
<td width=46%>Ethernet frame (direct station only).</td>
</tr>
</table><br>

</dd>
<dt>
<b>cBuffersLeft</b></dt>
<dd>
Number of basic buffer units left. </dd>
<dt>
<b>uchRevFS</b></dt>
<dd>
The received frame status (Token-Ring network only). This member is an 8-bit value. Setting the various bits enables different options, as described in the following table. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=12%>Bit</th>
<th align=left width=88%>Description</th>
</tr>
<tr valign=top>
<td width=12%>7</td>
<td width=88%>Address recognized indicator. </td>
</tr>
<tr valign=top>
<td width=12%>6</td>
<td width=88%>Frame copied indicator. </td>
</tr>
<tr valign=top>
<td width=12%>5</td>
<td width=88%>Reserved. </td>
</tr>
<tr valign=top>
<td width=12%>4</td>
<td width=88%>Reserved. </td>
</tr>
<tr valign=top>
<td width=12%>3</td>
<td width=88%>Address recognized indicator. </td>
</tr>
<tr valign=top>
<td width=12%>2</td>
<td width=88%>Frame copied indicator. </td>
</tr>
<tr valign=top>
<td width=12%>1</td>
<td width=88%>Reserved. </td>
</tr>
<tr valign=top>
<td width=12%>0</td>
<td width=88%>Reserved. </td>
</tr>
</table><br>

</dd>
<dt>
<b>uchAdapterNumber</b></dt>
<dd>
Adapter number. </dd>
<dt>
<b>pNextFrame</b></dt>
<dd>
Specifies the address of an <a href="dlc_7alu.htm"><b>LLC_BUFFER</b></a> structure representing the next frame. </dd>
<dt>
<b>cbLanHeader</b></dt>
<dd>
Length of the LAN header. </dd>
<dt>
<b>cbDlcHeader</b></dt>
<dd>
Length of the DLC header. </dd>
<dt>
<b>auchLanHeader</b></dt>
<dd>
LAN header of the received frame. </dd>
<dt>
<b>auchDlcHeader</b></dt>
<dd>
DLC header of the received frame. </dd>
<dt>
<b>usPadding</b></dt>
<dd>
Padding bytes. Data begins from offset 64. 
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in dlcapi.h.</p>
<h4>See Also</h4>
<p>
<a href="dlc_0pwl.htm">The DLC Interface Overview</a>, <a href="dlc_2s6r.htm">DLC Structures</a>, <a href="dlc_43zi.htm"><b>AcsLan</b></a>, <a href="dlc_7alu.htm"><b>LLC_BUFFER</b></a>, <a href="dlc_11wy.htm"><b>LLC_CCB</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
