<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SnmpSetPduData</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_snmpsetpdudata"></a>SnmpSetPduData</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The WinSNMP <b>SnmpSetPduData</b> function updates selected data fields in the specified SNMP protocol data unit (PDU). </p>
<pre><code><b>SNMPAPI_STATUS SnmpSetPduData(
</b>  <b>HSNMP_PDU </b><i>PDU</i>,                 // handle to the PDU 
  <b>const smiINT </b><i>*PDU_type</i>,        // pointer to the PDU type 
<b>  const smiINT32 </b><i>*request_id</i><b>,    </b>//<b> </b>pointer to the PDU request
                                 // identifier 
  <b>const smiINT</b> *<i>non_repeaters</i><b>,</b>   // valid only for an
                                 // <b>SNMP_PDU_GETBULK</b> request 
<b>  const smiINT </b><i>*max_repetitions</i><b>, </b>//<b> </b>valid only for an
<b>                                 </b>// <b>SNMP_PDU_GETBULK </b>request 
<b>  const HSNMP_VBL </b><i>*varbindlist</i><b>   </b>//<b> </b>handle to variable bindings list
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>PDU </i></dt>
<dd>
Handle to an SNMP PDU. </dd>
<dt>
<i>PDU_type </i></dt>
<dd>
Pointer to a variable with a value to update the <b>PDU_type</b> field of the specified PDU. This parameter can also be NULL. </dd>
<dt>
<i>request_id </i></dt>
<dd>
Pointer to a variable with a value to update the <b>request_id</b> field of the specified PDU. This parameter can also be NULL. </dd>
<dt>
<i>non_repeaters </i></dt>
<dd>
If the <i>PDU_type</i> parameter is equal to <b>SNMP_PDU_GETBULK</b>, this parameter points to a variable with a value to update the <b>non_repeaters</b> field of the specified PDU. The Microsoft WinSNMP implementation ignores this parameter for other PDU types. This parameter can also be NULL. </dd>
<dt>
<i>max_repetitions </i></dt>
<dd>
If the <i>PDU_type</i> parameter is equal to <b>SNMP_PDU_GETBULK</b>, this parameter points to a variable with a value to update the <b>max_repetitions</b> field of the specified PDU. The implementation ignores this parameter for other PDU types. This parameter can also be NULL. </dd>
<dt>
<i>varbindlist </i></dt>
<dd>
Pointer to a variable with a value that updates the handle to the variable bindings list field of the specified PDU. This parameter can also be NULL. 
</dd>
</dl>
<h4>Return Values </h4>
<p>
If the function succeeds, the return value is SNMPAPI_SUCCESS. </p>
<p>
If the function fails, the return value is SNMPAPI_FAILURE. To get extended error information, call <a href="winsnmpfc_7upe.htm"><b>SnmpGetLastError</b></a>. The <b>SnmpGetLastError</b> function can return one of the following errors. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=44%>Error Code </th>
<th align=left width=56%>Description </th>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_NOT_INITIALIZED </td>
<td width=56%>The <a href="winsnmpfc_0vn4.htm"><b>SnmpStartup</b></a> function did not complete successfully. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_ALLOC_ERROR </td>
<td width=56%>An error occurred during memory allocation. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_PDU_INVALID </td>
<td width=56%>The PDU type is invalid. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_VBL_INVALID </td>
<td width=56%>The<i> </i>variable bindings list is invalid. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_NOOP </td>
<td width=56%>All input parameters are NULL. The SNMP operation was not performed. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_OTHER_ERROR </td>
<td width=56%>An unknown or undefined error occurred. </td>
</tr>
</table><br>
<h4>Remarks </h4>
<p>
All parameters of the <b>SnmpSetPduData</b> function are required. However, all parameters, except the <i>PDU</i> parameter, can be NULL. If the WinSNMP manager application passes NULL in a parameter, <b>SnmpSetPduData</b> does not update the corresponding field in the PDU. Because <b>SnmpSetPduData</b> passes parameters as pointers to values, an application can still update a PDU field with NULL. </p>
<p>
The value of one PDU field can be valid alone, but may be invalidated in combination with values for other fields. The implementation validates the PDU and the other message elements when the manager application calls the <a href="winsnmpfc_646f.htm"><b>SnmpSendMsg</b></a> or the <a href="winsnmpfc_036v.htm"><b>SnmpEncodeMsg</b></a> functions. The implementation rejects invalid PDUs. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later. Available as a redistributable for Windows NT 4.0.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsnmp.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use wsnmp32.lib.</p>
<h4>See Also </h4>
<p>
<a href="winsnmpov_6tpl.htm">WinSNMP Manager API Overview</a>, <a href="winsnmpfc_09kj.htm">WinSNMP Functions</a>, <a href="winsnmpfc_646f.htm"><b>SnmpSendMsg</b></a>, <a href="winsnmpfc_036v.htm"><b>SnmpEncodeMsg</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
