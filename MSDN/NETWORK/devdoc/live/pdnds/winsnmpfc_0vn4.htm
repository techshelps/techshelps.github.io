<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SnmpStartup</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_snmpstartup"></a>SnmpStartup</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>SnmpStartup</b> function notifies the Microsoft WinSNMP implementation that the WinSNMP manager application requires the implementation's services. The WinSNMP <b>SnmpStartup</b> function enables the implementation to initialize and to return to the application the version of the Windows SNMP Manager Application Programming Interface (WinSNMP Manager API), the level of SNMP communications that the implementation supports, and the implementation's default translation and retransmission modes. </p>
<p>
<b>Note</b>&nbsp;&nbsp;A WinSNMP manager application must call the <b>SnmpStartup</b> function successfully before it calls any other WinSNMP function. </p>
<pre><code><b>SNMPAPI_STATUS SnmpStartup(
</b>  <b>smiLPUINT32</b> <i>nMajorVersion</i>,   // major version number of the
                               // WinSNMP API
  <b>smiLPUINT32</b> <i>nMinorVersion</i>,   // minor version number of the
                               // WinSNMP API
<b>  smiLPUINT32</b> <i>nLevel</i><b>,          </b>//<b> </b>level of SNMP the implementation
                               // supports
<b>  smiLPUINT32</b> <i>nTranslateMode</i><b>,  </b>//<b> </b>default entity/context translation
                               // mode 
<b>  smiLPUINT32</b> <i>nRetransmitMode  </i>//<i> </i>default retransmission mode 
<b>);</b>
 </code></pre>
<h4>Parameters </h4>
<dl>
<dt>
<i>nMajorVersion </i></dt>
<dd>
Pointer to an unsigned long integer variable to receive the major version number of the WinSNMP Manager API that the implementation supports. </dd>
<dt>
<i>nMinorVersion </i></dt>
<dd>
Pointer to an unsigned long integer variable to receive the minor version number of the WinSNMP Manager API that the implementation supports. </dd>
<dt>
<i>nLevel </i></dt>
<dd>
Pointer to an unsigned long integer variable to receive the highest level of SNMP communications the implementation supports. Upon successful return, this parameter can be one of the following values. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=44%>Value </th>
<th align=left width=56%>Meaning </th>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_NO_SUPPORT </td>
<td width=56%>Level 0: Support for message encoding and decoding only. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_V1_SUPPORT </td>
<td width=56%>Level 1: Support for Level 0 communications, as well as interaction with SNMP agent entities operating under the SNMP version 1 framework (SNMPv1). </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_V2_SUPPORT </td>
<td width=56%>Level 2: Support for Level 1 communications, as well as interaction with SNMP agent entities operating under the SNMP version 2C framework (SNMPv2C). </td>
</tr>
</table><br>

</dd>
<dt>
<i>nTranslateMode </i></dt>
<dd>
Pointer to an unsigned long integer variable to receive the default translation mode in effect for the implementation. The translation mode applies to the implementation's interpretation of the <i>entity</i> parameter that the WinSNMP manager application passes to the <a href="winsnmpfc_5zeh.htm"><b>SnmpStrToEntity</b></a> function. The translation mode also applies to the <i>string</i> parameter that the WinSNMP manager application passes to the <a href="winsnmpfc_64c4.htm"><b>SnmpStrToContext</b></a> function. This parameter can be one of the following values. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value </th>
<th align=left width=53%>Meaning </th>
</tr>
<tr valign=top>
<td width=47%>SNMPAPI_TRANSLATED </td>
<td width=53%>The implementation uses its database to translate user-friendly names for SNMP entities and managed objects. The implementation translates them into their SNMPv1 or SNMPv2C components. </td>
</tr>
<tr valign=top>
<td width=47%>SNMPAPI_UNTRANSLATED_V1 </td>
<td width=53%>The implementation interprets SNMP entity parameters as SNMP transport addresses, and context parameters as SNMP community strings. </td>
</tr>
<tr valign=top>
<td width=47%>SNMPAPI_UNTRANSLATED_V2 </td>
<td width=53%>The implementation interprets SNMP entity parameters as SNMP transport addresses, and context parameters as SNMP community strings. </td>
</tr>
</table><br>


<p>
For additional information, see <a href="winsnmpov_6dph.htm">Setting the Entity and Context Translation Mode</a>. 
</dd>
<dt>
<i>nRetransmitMode </i></dt>
<dd>
Pointer to an unsigned long integer variable to receive the default retransmission mode in effect for the implementation. This parameter can be one of the following values. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value </th>
<th align=left width=53%>Meaning </th>
</tr>
<tr valign=top>
<td width=47%>SNMPAPI_OFF </td>
<td width=53%>The implementation is not executing the retransmission policy of the WinSNMP manager application. </td>
</tr>
<tr valign=top>
<td width=47%>SNMPAPI_ON </td>
<td width=53%>The implementation is executing the retransmission policy of the WinSNMP manager application. </td>
</tr>
</table><br>


<p>
For additional information, see <a href="winsnmpov_82i6.htm">About Retransmission</a>. 

</dd>
</dl>
<h4>Return Values </h4>
<p>
If the function succeeds, the return value is SNMPAPI_SUCCESS, and the parameters contain appropriate values, as indicated in the preceding parameter descriptions. </p>
<p>
If the function fails, the return value is SNMPAPI_FAILURE. To get extended error information, call <a href="winsnmpfc_7upe.htm"><b>SnmpGetLastError</b></a>. The <b>SnmpGetLastError</b> function can return one of the following errors. For additional information, see the Remarks section that follows. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=44%>Error Code </th>
<th align=left width=56%>Description </th>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_NOT_INITIALIZED </td>
<td width=56%>The <b>SnmpStartup</b> function did not complete successfully. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_ALLOC_ERROR </td>
<td width=56%>An error occurred during memory allocation. </td>
</tr>
<tr valign=top>
<td width=44%>SNMPAPI_OTHER_ERROR </td>
<td width=56%>An unknown or undefined error occurred. </td>
</tr>
</table><br>
<h4>Remarks </h4>
<p>
A WinSNMP manager application must call the <b>SnmpStartup</b> function successfully at least once, before it calls any other WinSNMP function. If a WinSNMP manager application does call another WinSNMP function, before it successfully calls <b>SnmpStartup</b>, the implementation returns the error SNMPAPI_NOT_INITIALIZED. </p>
<p>
The WinSNMP manager application can call <a href="winsnmpfc_7upe.htm"><b>SnmpGetLastError</b></a> for error information, or retry <b>SnmpStartup</b> if a call to the <b>SnmpStartup</b> function fails. When <b>SnmpStartup</b> returns SNMPAPI_FAILURE, and a subsequent call to <b>SnmpGetLastError</b> returns SNMP_ALLOC_ERROR, the WinSNMP manager application can elect to wait. It can retry the call to <b>SnmpStartup</b> when the implementation has adequate free resources. </p>
<p>
A WinSNMP manager application can call <b>SnmpStartup</b> multiple times. For example, it may need to retry the function call for the reasons discussed preceding. A WinSNMP manager application must also call <a href="winsnmpfc_11yo.htm"><b>SnmpCleanup</b></a> at least once, as the last WinSNMP function call before it terminates. Multiple <b>SnmpStartup</b> calls do not require multiple <b>SnmpCleanup</b> calls. </p>
<p>
For additional information, see <a href="winsnmpov_73sk.htm">Levels of SNMP Support</a> and <a href="winsnmpov_5z77.htm">About SNMP Versions</a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later. Available as a redistributable for Windows NT 4.0.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winsnmp.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use wsnmp32.lib.</p>
<h4>See Also </h4>
<p>
<a href="winsnmpov_6tpl.htm">WinSNMP Manager API Overview</a>, <a href="winsnmpfc_09kj.htm">WinSNMP Functions</a>, <a href="winsnmpfc_5zeh.htm"><b>SnmpStrToEntity</b></a>, <a href="winsnmpfc_64c4.htm"><b>SnmpStrToContext</b></a>, <a href="winsnmpfc_11yo.htm"><b>SnmpCleanup</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
