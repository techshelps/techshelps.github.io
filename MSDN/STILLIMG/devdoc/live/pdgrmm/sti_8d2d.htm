<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Advantages of Still Image</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_advantages_of_still_image"></a>Advantages of Still Image</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Incorporating Still Image (STI) into applications has the following advantages:
<ul>
<li>
<i>Still Image implements both pull and push models. </i>Unlike traditional still-image device control APIs, STI allows both the pull and push models of data acquisition. </li>
<li>
<i>Still Image standardizes device interfaces. </i>Still-image device control APIs are extremely device dependent. STI standardizes the interfaces to still-image acquisition devices. This frees application developers from having to write specialized code for all devices that they support. </li>
<li>
<i>Still Image simplifies the user model.</i> Specialized applications can have a more intuitive user interface.</li>
<li>
<i>Still Image does not require a change in application architecture.</i> Normally, the conversion to the push model of data acquisition would require a major change in the software architecture of application programs. Enhancing applications to use Still Image requires only minimal changes to existing programs. In the vast majority of cases, current software architectures would not be changed by a conversion to STI.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
