<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StiCreateInstance</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_sticreateinstance"></a>StiCreateInstance</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>StiCreateInstance</b> function is used to obtain a pointer to the <b>IStillImage</b> interface. All other Still Image functions are called through the pointer obtained from this function. Calling this function can be done instead of calling <b>CoCreateInstance</b> and <b>Initialize</b>.</p>
<pre><code><b>HRESULT StiCreateInstance(
  HINSTANCE </b><i>hinst</i><b>,</b>
<b>  DWORD </b><i>dwVer,</i>
<b>  PSTI </b><i>*ppSti,</i>
<b>  LPUNKNOWN</b><i> punkOuter</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hinst</i></dt>
<dd>
Instance handle to the application or DLL that is creating the IStillImage object.
<p>
STI uses this value to determine whether the application or DLL has been certified.
</dd>
<dt>
<i>dwVer</i></dt>
<dd>
Version number of the Sti.h header file that was used. This value must be STI_VERSION. STI uses this value to determine for what version of STI the application or DLL was designed.</dd>
<dt>
<i>ppSti</i></dt>
<dd>
Pointer to a pointer to the <b>IStillImage</b> interface. This is an output parameter. When the function returns, this parameter contains a pointer to an <b>IStillImage</b> interface if the function is successful.</dd>
<dt>
<i>punkOuter</i></dt>
<dd>
Pointer to controlling unknown for COM aggregation, or 0 if the interface is not aggregated. Most callers will pass 0.

<p>
<b>Note</b>&nbsp;&nbsp;If aggregation is requested, the object returned in *<i>ppSti</i> is a pointer to an <b>IUnknown</b> rather than an <b>ISti</b>, as required by COM aggregation.

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is S_OK. </p>
<p>
If the function fails, the return value is the appropriate COM error.</p>
<h4>Remarks</h4>
<p>
Calling this function with <i>punkOuter</i> = NULL is equivalent to creating the object with <b>CoCreateInstance</b>(&amp;CLSID_Sti, <i>punkOuter</i>, CLSCTX_INPROC_SERVER, &amp;IID_ISti, <i>ppSti</i>); then initializing it with <b>Initialize</b>.</p>
<p>
Calling this function with <i>punkOuter</i> != NULL is equivalent to creating the object with <b>CoCreateInstance</b>(&amp;CLSID_Sti, <i>punkOuter</i>, CLSCTX_INPROC_SERVER, &amp;IID_IUnknown, <i>ppSti</i>). The aggregated object must be initialized manually.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in sti.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in sti.dll.</p>
<h4>See Also</h4>
<p>
<a href="sti_1qg5.htm">Still Image Overview</a>, <a href="sti_4hnp.htm">Making An Application Still Image-Aware</a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
