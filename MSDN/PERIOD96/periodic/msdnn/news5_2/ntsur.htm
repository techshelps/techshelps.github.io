<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="Template"
content="C:\apps\WINWORD\TEMPLATE\NEWSART.DOT">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Get Cracking: New Shell on Windows NT</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<basefont face="verdana, arial, helvetica" color="#000000" size=2> 
<BODY bgcolor="#ffffff" vlink="#666666" link="#ff0000" text="#000000">


<p><font size="6" face="verdana">Get Cracking: New Shell
on Windows NT </font></p>

<p><font size="5" face="Arial">Avoiding pitfalls when porting
your apps from Windows 95</font></p>

<p><font size="2"><i>by Nancy Winnick Cluts</i></font></p>

<p><font size="2">The much-awaited release of Microsoft Windows
NT 4.0 with the Windows 95 shell (referred to internally at
Microsoft as NT SUR, or Shell Update Release) is coming.
Developers planning to run their applications on Windows NT SUR
need to be aware of a couple of gotchas that have surfaced during
early beta testing&#151;as with any update of an operating
system.</font></p>

<p><font size="2">This article will cover the two most prevalent
reasons why things might not go quite as you expect on the
updated operating system. But don&#146;t worry. I also let you in
on the ways to avoid these pitfalls and enjoy the benefits of
running your applications on both Windows 95 and Windows NT SUR.</font></p>

<p><font size="2">Those of you currently running the Windows 95
operating system on one machine (or more) and Windows NT on
another know how frustrating it can be to switch between the two
shells. How many times have you right-clicked an icon on your
Windows NT desktop and wondered why the context menu you&#146;ve
come to know and love hasn&#146;t popped up? I know. I&#146;ve
done it too many times to count. I was delighted to be able to
run Windows NT with the new shell while it was still in
development. </font></p>

<p><font size="2" face="verdana"><b>Which operating system am
I running under?</b></font></p>

<p><font size="2">Because of the subtle differences in supported
functionality between Windows NT and Windows 95, chances are you
may have some conditional code tucked into your application.
Which operating system your application is currently running
under could determine whether the code runs.</font></p>

<p><font size="2">For example, you may have code which uses the
Security API that runs only under Windows NT. The code you are
using to check the version of the operating system may be the
code contained in the Knowledge Base article #Q92395,
&quot;Determining System Version from a Win32-based
Application.&quot; This article is helpful, but it was written
before the shell update release was created. So it doesn&#146;t
give you the whole picture when determining whether you are
running Windows NT SUR. </font></p>

<p><font size="2">You could make a call to either <b>GetVersion</b>
or <b>GetVersionEx</b>. <b>GetVersionEx</b> is the preferred call
(it&#146;s Win32-specific), but if you need to check for 16-bit
versions of Windows, you need to call <b>GetVersion</b>. However,
if you call <b>GetVersion </b>and interpret the return value
incorrectly, you could run into problems:</font></p>

<blockquote>
    <p><font size="2">You might make Windows 95-specific calls
    when you shouldn&#146;t.</font></p>
    <p><font size="2">You might believe that you have dynamically
    linked to the wrong version of KERNEL32. Windows NT and
    Windows 95 run different versions of KERNEL32.DLL. As a
    result, if you incorrectly determine the version of the
    operating system you are running, you may expect
    functionality that is not present or is different.</font></p>
</blockquote>

<p><font size="2" face="verdana"><b>Using GetVersionEx to
Determine the Operating System Version</b></font></p>

<p><font size="2">So, how should you check for the operating
system version? Call <b>GetVersionEx</b> and check the <b>dwPlatformId</b>
member of the <b>OSVERSIONINFO</b> structure. The value should be
interpreted as follows:</font></p>
<table border="0" cellpadding="7" cellspacing="0" width="499">
    <tr>
        <td width="59%"><font size="2"><b>Value</b></font></td>
        <td width="41%"><font size="2"><b>Platform</b></font></td>
    </tr>
    <tr>
        <td width="59%"><font size="2">VER_PLATFORM_WIN32s</font></td>
        <td width="41%"><font size="2">Win32s on Windows 3.1</font></td>
    </tr>
    <tr>
        <td width="59%"><font size="2">VER_PLATFORM_WIN32_WINDOWS</font></td>
        <td width="41%"><font size="2">Win32 on Windows 95</font></td>
    </tr>
    <tr>
        <td width="59%"><font size="2">VER_PLATFORM_WIN32_NT</font></td>
        <td width="41%"><font size="2">Win 32 on Windows NT</font></td>
    </tr>
</table>

<p><font color="#0000ff" size="1" face="Arial">&nbsp;&nbsp;&nbsp;&nbsp;<i>Table 1.
Interpreting the OSVERSIONINFO dwPlatformId field.</i></font></p>

<p><font size="2">Other interesting fields in the <b>OSVERSIONINFO</b>
structure are the <b>dwMajorVersion</b> and <b>dwMinorVersion</b>
members. Table 2 shows you how to interpret these fields.
Remember to check both fields to ensure which version of the
operating system (and thus which features are supported) you are
running.</font></p>
<table border="0" cellpadding="7" cellspacing="0" width="505">
    <tr>
        <td width="24%"><font size="2"><b>dwMajorVersion</b></font></td>
        <td width="25%"><font size="2"><b>dwMinorVersion</b></font></td>
        <td width="51%"><font size="2"><b>Platform</b></font></td>
    </tr>
    <tr>
        <td width="24%"><font size="2">4</font></td>
        <td width="25%"><font size="2">0</font></td>
        <td width="51%"><font size="2">Windows NT SUR (you can
        use the features of the new shell)</font></td>
    </tr>
    <tr>
        <td width="24%"><font size="2">3</font></td>
        <td width="25%"><font size="2">51</font></td>
        <td width="51%"><font size="2">Windows NT (without the
        new shell)</font></td>
    </tr>
</table>

<p><font color="#0000ff" size="1" face="Arial">&nbsp;&nbsp;&nbsp;&nbsp;<i>Table 2.
Determining whether you are running on Windows NT with the new
shell.</i></font></p>

<p><font size="2" face="verdana"><b>Using GetVersion to
Determine to Operating System Version</b></font></p>

<p><font size="2">Let&#146;s say that you still want to call <b>GetVersion</b>.
What should you do? If you are running Windows NT SUR build 1209,
you will see the following:</font></p>

<blockquote>
    <p><font size="2">HIWORD(ReturnVal) = 1209 // the build
    number</font>
    <br><font size="2">LOBYTE(LOWORD(ReturnVal)) = 4</font>
    <br><font size="2">HIBYTE(LOWORD(ReturnVal)) = 0</font></p>
</blockquote>

<p><font size="2">You need to check both bytes (the high byte and
the low byte) to ensure that you are running under version 4.0.
You also need to explicitly mask off the two high bits. You can
interpret the values as follows:</font></p>
<table border="0" cellpadding="7" cellspacing="0" width="469">
    <tr>
        <td width="25%"><font size="2"><b>Platform</b></font></td>
        <td width="75%"><font size="2"><b>What to check</b></font></td>
    </tr>
    <tr>
        <td width="25%"><font size="2">Win32s</font></td>
        <td width="75%"><font size="2">The highest bit of the
        HIWORD is 1 and the second highest bit (bit 14) of the
        HIWORD is set to 1</font></td>
    </tr>
    <tr>
        <td width="25%"><font size="2">Windows 95</font></td>
        <td width="75%"><font size="2">The second highest bit
        (bit 14) of the HIWORD is set to 1</font></td>
    </tr>
    <tr>
        <td width="25%"><font size="2">Windows NT</font></td>
        <td width="75%"><font size="2">The highest bit and second
        highest bit (bit 14) of the HIWORD is set to 0</font></td>
    </tr>
</table>

<p><font color="#0000ff" size="1" face="Arial">&nbsp;&nbsp;&nbsp;&nbsp;<i>Table 3.
Interpreting the return value from GetVersion.</i></font></p>

<p><font size="2" face="verdana"><b>What About TAPI?</b></font></p>

<p><font size="2">It is presently planned that the shell update
release of Windows NT will support the Telephony API (TAPI). If
your application supports TAPI and you would like to determine
the version of the operating system that you are running, use the
<b>lineNegotiateAPIVersion</b> function. This function will allow
you to know which version you are running without the necessity
of calling <b>GetVersion</b> or <b>GetVersionEx</b>.</font></p>

<p><font size="2" face="verdana"><b>Windows NT SUR and DLL
Redistribution</font></b></p>

<p><font size="2">If your application was built using the Visual
C++ development system and the Microsoft Foundation Class Library
(MFC), you may need to redistribute a number of supporting
dynamic-link libraries (DLLs). Some developers have noticed that
most installations of Windows 95 already have most or all of
these DLLs installed. This is due to the fact that many of the
applets that come with Windows 95 are MFC applications. Systems
that have other MFC applications installed may also have the MFC
DLLs installed on the system. </font></p>

<p><font size="2">If you install the shell update release of
Windows NT, and have no other applications installed, your system
will not, by default, have the MFC DLLs installed. The Windows NT
shell applets do not use the MFC DLLs and, as a result, Windows
NT does not install them. You will need to install the correct
version of the MFC DLLs yourself. Be careful about the version;
if you have just your end-user copy of the DLLs, they may
overwrite existing DLLs. So you should provide an installation
routine that checks the version of DLLs and only copies over DLLs
as necessary. Also, ensure that you are redistributing the C
runtime DLL, MSVCRT20.DLL.</font></p>

<p><font size="2" face="verdana"><b>Wasn&#146;t That Easy?</b></font></p>

<p><font size="2">Not rocket science, but these factoids are
stuff you need to know. Have fun with the new shell on Windows
NT.</font></p>

<p><font size="2"><i>Yesterday, Developer Technology writer Nancy
Winnick Cluts wrote this article, polished off another chapter of
her new novel, appeared on Letterman, testified before a
Congressional committee, and got home in time to pick up
Nicholas&#151;the world&#146;s most beautiful little boy&#151;and
assemble an exquisite dinner. She might sleep in tomorrow.</i></font>
<p align="center"><font color="#0000ff" size="2" face="Arial">As
with any update of an operating system, a couple of gotchas have
surfaced during early beta testing of NT SUR.</font>
<p align="center"><font color="#0000ff" size="2" face="Arial">Because
of subtle differences in supported functionality between Windows
NT and Windows 95, you may have conditional code tucked into your
application.</font>
<p align="center"><font color="#0000ff" size="2" face="Arial">If
your application was built using Visual C++ and MFC, you may need
to redistribute a number of supporting DLLs.</font></p>
</font></body>
</html>
