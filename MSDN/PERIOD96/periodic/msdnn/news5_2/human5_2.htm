<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="Template"
content="C:\apps\WINWORD\TEMPLATE\NEWSART.DOT">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Human Factor</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<basefont face="verdana, arial, helvetica" color="#000000" size=2> 
<BODY bgcolor="#ffffff" vlink="#666666" link="#ff0000" text="#000000">


<p><font size="6" face="verdana">THE HUMAN FACTOR:</font></p>

<p><font size="5" face="verdana">Button, Button, Where to
Put the Button?</font></p>

<p><font size="2"><i>by Tandy Trower</i></font></p>

<p><font size="2">Recently I was asked for more detail on
recommended ways to order and arrange command buttons (a.k.a.
push buttons). The scenario was a message box with two buttons,
laid out horizontally at the bottom of the window. The buttons
offered the user two exclusive options, and they weren&#146;t
simply labeled &quot;Yes/No&quot; or &quot;OK/Cancel.&quot; One
option would be the preferred action and set as the default. The
question was where to place this button with respect to the other
button: On the left or on the right? My response was the left.
Why?</font></p>

<p><font size="4" face="verdana"><b>Who&#146;s on first?</b></font></p>

<p><font size="2">First, in the Western world, we read from left
to right, top to bottom. We scan information on the screen the
same way we read. So those users will read the left button before
the right. </font></p>

<p><font size="2">Second, a default button is frequently the
leftmost button. For example, the OK button typically appears
leftmost. Even when buttons are vertically oriented, the default
button often precedes the other buttons.</font></p>

<p><font size="2">Some have suggested that making the default
button rightmost would be better, arguing that the consistent
positioning and the location of the lower-right corner make it a
better target. However, this theory has not been supported by any
usability research I have seen. Further, even the guidelines for
the Apple Macintosh, which reverse the ordering of OK and Cancel
buttons from the recommendation in the Windows conventions, do
not suggest that the default is always the rightmost. </font></p>

<p><font size="2">In the example outlined above, the buttons
didn&#146;t have any common linguistic ordering (based on their
label text). So, based on the trend to have the default appear
first and on the reading order, my design decision leans toward
making the preferred button for the user to press the default and
placing it leftmost.</font></p>

<p><font size="2">However, this does not mean that the default
button must <i>always</i> be leftmost. Button order sometimes
depends on language conventions. For example, with pairs of
buttons such as Yes and No, Up and Down, More and Less, Left and
Right, North and South, or Hot and Cold, you would expect the
first button of the pair to appear before the latter, regardless
of which is set as the default.</font></p>

<p><font size="4" face="verdana"><b>Whither Cancel?</b></font></p>

<p><font size="2">The Windows guidelines also offer some
additional recommendations on button ordering. When OK and Cancel
buttons appear together, the guidelines recommend first OK, then
Cancel.</font></p>

<img src="human1.gif" alt="Example of msg box locations">

<p><font color="#0000ff" size="1" face="Arial"><i>Figure 1: If
the window uses OK and Cancel, Cancel should directly follow OK.</i></font></p>

<p><font size="2">If, instead of OK, you have multiple
peer-action buttons, Cancel appears at the end of the set. (There
are some exceptions, such as when a dialog box includes a Help
button in the body of the window.)</font></p>

<p><font size="4" face="verdana"><b>Upper right or along the
bottom?</b></font></p>

<p><font size="2">Another frequently asked question arises. Which
is preferable in a secondary window (such as a dialog box,
property sheet, or message box): Stacking buttons on the upper
right of a window or aligning them along the bottom? The answer
is: &quot;It depends.&quot; Neither is <i>always </i>better, and
the Windows UI guidelines consider both conventions appropriate.</font></p>

<p><font size="2">One dependency to consider is the kind of
window you are presenting. For example, the common convention for
message boxes in Windows places the buttons in a horizontal
arrangement along the bottom; the same applies to property
sheets. So the value of consistency with the user&#146;s
experience elsewhere in the interface must be taken into
consideration. </font></p>

<p><font size="2">A second issue to consider is the overall
layout of the window. The size and shape of your window may
dictate which location makes the buttons easier to read or
access. Some argue that vertical stacking wastes space, but that
depends on the number of buttons and how densely packed with
controls the window is. Segregating the buttons to the right may
make them easier to distinguish. Multiple horizontal rows are
rarely a good idea.</font></p>

<p><font size="2">You also need to consider variations among your
button labels. If one label is significantly longer, the
horizontal orientation may work better. </font></p>

<p><font size="2">In short, use consistency as your first metric.
If the window doesn&#146;t fit any existing secondary window
convention or there are special circumstances, the layout
decision becomes a matter of good visual organization and
readability. Try laying out the window using both organizations
and determine which is more readable and functional for the task
being supported. </font></p>

<p><font size="4" face="verdana"><b>Left, right, or center?</b></font></p>

<p><font size="2">Windows 95 has a lot of secondary windows
horizontally positioned along the bottom; however, it is
difficult to determine how you should align the buttons. Some
windows display center-aligned buttons, while most others use
right alignment. This differs from conventions found in previous
versions of Windows. While the previous UI guide gave no specific
recommendations on horizontal alignment, center alignment was
implied. Right alignment in Windows 95 promoted more consistency
with wizard-style layout. It was also intended to improve the
usability of button interaction. </font></p>

<p><font size="2">The current working guideline is that buttons
laid out horizontally in message boxes should be center-aligned,
while in all other secondary windows the buttons are
right-aligned.</font></p>

<p><font size="4" face="verdana"><b>Keeping the association
clear</b></font></p>

<p><font size="2">Another factor in determining button placement
is what the button&#146;s function affects. In the examples
mentioned above, the implication is that these buttons apply to
the window as a whole. Buttons that affect only the value or
setting of a particular field or control should be grouped with
that control. For example, in the property sheet for Folder, OK,
Cancel, and Apply buttons are displayed at the bottom edge of the
window, outside the lines of the tabbed pages. This implies that
these commands affect the overall operation of the window.
However, on the Sharing page, the Add, Remove, and Edit buttons
appear directly on the page and under the List control, which
communicates that these buttons apply to the list.</font></p>

<img src="human2.gif" alt="Maintain association with context">

<p><font color="#0000ff" size="1" face="Arial"><i>Figure 2:
Maintain association with context.</i></font></p>

<p><font size="4" face="verdana"><b>Button width</b></font></p>

<p><font size="2">I am often asked whether it is better to size
command buttons according to their label width or to maintain a
constant width based on the longest label. Again, it depends on
the context. For major-transaction command buttons in a secondary
window (such as OK, Cancel, or Apply), it&#146;s best to maintain
a constant width. This usually makes it easier for users to scan.
However, if you have one button whose label is substantially
longer, it may be better to make the others a constant width and
size the button with the longer label<i> </i>larger. </font></p>
<p><font size="2"><i>Tandy Trower is the Director of UI Design at
Microsoft and author of </i>The Windows Interface Guidelines for
Software Design<i>. Needless to say, his collars are always
button-down.</i></font></p>
<p align="center"><font color="#0000ff" size="2" face="Arial">Button
order sometimes depends on language convention. Use consistency
as your first metric.</font></p>
</font></body>
</html>
