<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Long is That in Japanese? Determining String Sizes</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">How Long is That in
Japanese? Determining String Sizes</font>

<h2><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">How do you calculate the
size of a multibyte character set (MBCS) string in bytes? I am
currently developing an application in Visual C++ for both
Unicode and MBCS. I need the information for a call to <b>RegSetValueEx</b>.
It is no problem to make the calculation for SBCS or Unicode
strings because each character has the same size, but in MBCS the
character size changes. </font></p>

<p><font size="2" face="verdana,arial,helvetica">I hope you can help me. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Thank you, </font></p>

<p><font size="2" face="verdana,arial,helvetica">Claus Michelsen </font></p>

<h2><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">This one's easy&#151;if
you know the trick. Dr. GUI learned it in a seminar on DBCS
surgery a few years ago. </font></p>

<p><font size="2" face="verdana,arial,helvetica">A byte that contains
zero has only one use in MBCS/DBCS strings: as a terminator. You
are guaranteed that a zero byte will never be a trail byte for a
two-byte character. In other words, if you hit a zero byte,
you're at the end of the string. Note: This guarantee does not
apply to Unicode strings. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Given that, you can use <b>strlen</b>
on a DBCS string just as you would with single-byte strings.
It'll return the length of the string in bytes, not characters. </font></p>

<p><font size="2" face="verdana,arial,helvetica">If you need the length
in characters, use <b>_mbslen</b> or <b>_mbstrlen</b>. (Check the
docs for the differences.) For Unicode strings, use <b>wcslen</b>.
</font></p>

<p><font size="2" face="verdana,arial,helvetica">Best of all is to use
the TCHAR type and associated macros (_T, _txxxx, and so on) for
string manipulation. These macros are defined differently
depending on whether you have _UNICODE, _MBCS, or neither
(meaning single-byte) defined at compile time. Using this type
and the associated macros is best because the right
interpretation is picked automatically for you, allowing the same
source code to be used for Unicode, MBCS, or single-byte
applications. For example, to get the length in characters, you
can always use the <b>_tcsclen</b> macro, which maps to <b>strlen</b>,
<b>_mbslen</b>, or <b>wsclen</b>, as appropriate. </font></p>

<p><font size="2" face="verdana,arial,helvetica">If you've correctly
defined the _UNICODE preprocessor symbol, you can always use the
Windows API <b>Istrlen</b> in either case. The name <b>Istrelen</b>
will map to the appropriate function, <b>IstrelenW</b> (for
Unicode) or <b>IstrlenA</b> (otherwise). </font></p>

<p><font size="2" face="verdana,arial,helvetica">Check out the
&quot;Multibyte Character Set (MBCS) Survival Guide&quot; in the
MSDN Library for more information. And check out &quot;Routine
Mappings&quot; in the Runtime Library Reference for more
information about the TCHAR-related macros. It's a good idea to
write new code using these macros rather than using specific
character types. Finally, check out &quot;Unicode and Character
Sets&quot; in the MSDN Library (Product Documentation, SDKs,
Win32 SDK, Win32 Programmer's Reference, Overviews, International
Features, Unicode and Character Sets). </font></p>
</font></body>
</html>
