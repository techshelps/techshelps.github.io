<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>I Have a Need. . . a
Need for Speed: Reducing Build Times</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">I Have a Need. . . a
Need for Speed: Reducing Build Times</font>

<h3><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h3>

<p><font size="2" face="verdana,arial,helvetica">This is not a GUI
question really, but I didn&#146;t know a better place to pose
it. So, what is the benefit of using precompiled header files if
a compiler supports incremental linking? Or, perhaps more
correctly stated, is there any point to putting any file other
than a system header file in the precompiled header if a compiler
can handle &#147;patching&#148; any change of user code
incrementally? The obvious assumption I&#146;m making is that a
compiler that supports incremental compiling can incrementally
update an object file (from a C or C++ file) whether that change
occurred in the source file or the header file. Is this true? </font></p>

<p><font size="2" face="verdana,arial,helvetica">Larry Hall </font></p>

<h3><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h3>

<p><font size="2" face="verdana,arial,helvetica">Dr. GUI has seen a lot
of confusion about this. If you take two aspirin , I&#146;m sure
you&#146;ll feel better. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Precompiled headers,
incremental linking, incremental compilation, and minimal<i> </i>rebuild.
They all speed up builds in different ways. For the fastest
builds, you should use them all. Otherwise you&#146;ll get
through the latest Dilbert cartoons on the Web before your first
coffee break, and you&#146;ll have to do real work while waiting
for builds the rest of the day. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Precompiled headers save
the compiler from having to parse the header (.H) files for each
.CPP file in which the headers are included. It&#146;s much
faster to load the precompiled header, large as it is, into
memory than to parse the 50,000+ lines of the system header files
for <i>each</i> .CPP module you compile. Since the system headers
are so large, it doesn&#146;t usually make sense to include your
project&#146;s own headers in the precompiled header, especially
if they&#146;re changing. (One little change in a precompiled
header means that the entire project has to be rebuilt from
scratch, regardless of whether the sources have changed.)
However, if your project has headers (such as headers for your
own libraries) that don&#146;t change, including them in your
precompiled header can speed up builds somewhat. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Incremental linking
allows you to make relatively simple changes to your program
without having to relink the entire program. If you make major
changes, however, you&#146;ll have to do a full link. Visual C++
4.0 can use incremental linking much more often than previous
versions could. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Incremental compilation
allows the build system to compile only the functions that have
changed, rather than entire modules. If you have long source
files, this can be a big win. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Minimal rebuild is new
in Visual C++ 4.0. It examines changes you&#146;ve made to header
files, then compiles only the source files that actually depend
on that particular set of changes. (Before, you had to recompile <i>every</i>
source module that included a header that was changed, even if
you changed only comments in the header.) </font></p>

<p><font size="2" face="verdana,arial,helvetica">As you can see, the
combination of these technologies can markedly reduce build
times. For more information on these technologies, look them up
in Visual C++ 4.0 Books Online or the MSDN Library.</font></p>
</font></body>
</html>
