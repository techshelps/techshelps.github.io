<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Ker-thunk! Linking 16-bit and 32-bit DLLs</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">Ker-thunk! Linking
16-bit and 32-bit DLLs</font>

<h2><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">I am trying to change
our 16-bit Visual C 1.5 application to Visual C 4.1. But the
application still uses some 16-bit DLLs, and I cannot get the
32-bit version. When I link the program I get the message
&quot;fatal error LNK1136: invalid or corrupt file.&quot; </font></p>

<p><font size="2" face="verdana,arial,helvetica">I have looked for the
information in the Help and the MSDN Library CD, but I cannot fix
this error. I know in a Visual Basic 32-bit application I cannot
use a VBX, but I don't know whether I can use a 16-bit DLL in
Visual C 4.1. How can I fix this problem? </font></p>

<p><font size="2" face="verdana,arial,helvetica">Thanks. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Tony Chen </font></p>

<h2><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h2>

<p><font size="2" face="verdana,arial,helvetica">What you need to do
isn't trivial, but it looks like the patient will live. </font></p>

<p><font size="2" face="verdana,arial,helvetica">You can't call directly
from a 32-bit program to a 16-bit program (nor the other way
around). However, with some restrictions, you can construct a
&quot;thunk,&quot; or a special chunk of code that translates the
call for you. Check out the section on the &quot;Thunk
Compiler&quot; in the &quot;Programmer's Guide to Windows
95&quot; in the Win32 SDK, available in the MSDN Library or in
the Visual C++ documentation. Note that you can't call 16-bit
DLLs from 32-bit applications under Windows NT&#151;only under
Windows 95. </font></p>

<p><font size="2" face="verdana,arial,helvetica">An alternative&#151;if
you can stick with standard OLE interfaces (including
IDispatch)&#151;is to write 16-bit OLE object wrappers for your
DLLs. These wrappers can be called from either 16-bit or 32-bit
code and from any language that can access OLE objects. Check out
KnowledgeBase article Q141939 (Knowledge Base, Visual Basic for
Windows KBase, Miscellaneous Related Information). </font></p>

<p><font size="2" face="verdana,arial,helvetica">In the long term, you
should figure out a way not to be dependent on the 16-bit DLL.
It's like quitting smoking: tough to do, but good for your heart
and lungs. </font></p>
</font></body>
</html>
