<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Thanks for the Memory. . .Allocations in Win32</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><basefont face="verdana,arial,helvetica" size=2 color="#000000">

<BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2">

<font size="5" face="verdana,arial,helvetica">Thanks for the Memory.
. .Allocations in Win32</font>

<h3><font size="2" face="verdana,arial,helvetica">Dear Dr. GUI:</font></h3>

<p><font size="2" face="verdana,arial,helvetica">When developing for
Win32, the <b>GlobalAllocPtr</b> macro still seems to work fine.
Is there any point in still using it? Or will the operator <b>new()</b>
do just as well? </font></p>

<p><font size="2" face="verdana,arial,helvetica">Is the memory available
to operator <b>new()</b> restricted by the current stack size
and/or stack allocation? </font></p>

<p><font size="2" face="verdana,arial,helvetica">Please help me, I&#146;m
in pain! It hurts so bad that if you do not know how to cure me,
I&#146;m going to cure myself. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Sigurd Stenersen </font></p>

<h3><font size="2" face="verdana,arial,helvetica">Dr. GUI replies:</font></h3>

<p><font size="2" face="verdana,arial,helvetica">Dr. GUI certainly
doesn&#146;t want you to cure yourself. He&#146;s here to help.
Sit down and have a tranquilizer. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Besides, there&#146;s
not much to fret about: It&#146;s really your choice how to
allocate memory in Win32. Unlike Win16 memory allocation methods,
Win32 methods have very few efficiency differences. <b>LocalAlloc</b>
and <b>GlobalAlloc</b> are the same in Win32, and both <b>malloc</b>
and <b>new</b> eventually call a similar function called <b>HeapAlloc</b>.
The <b>VirtualAlloc</b> API is the closest to the kernel, but the
most difficult to use. </font></p>

<p><font size="2" face="verdana,arial,helvetica">The one time it does
matter is when you&#146;re allocating C++ objects. If you&#146;re
programming in C++, you&#146;ll want to use <b>new</b>
exclusively when allocating C++ objects so that the objects&#146;
constructors are called. </font></p>

<p><font size="2" face="verdana,arial,helvetica">Whatever method you
choose, be sure to free memory with the corresponding function
and no other. </font></p>
</font></body>
</html>
