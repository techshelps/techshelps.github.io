<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Publish on the Web with Access 97 (November)</title>

<meta name=href content="msdn_ie4.css">                
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<font face="verdana,arial,helvetica" size="2"><h1>Publish on the Web with Access 97</h1>
<p>
Michael Kaplan and Tamra Myers</p>
<p>
<i>In this preview of Access 97, the authors explore the new Publish to the Web wizard, which makes it easy to integrate database applications with the Internet or an intranet. Using the new wizard, you can publish the data in a table, query, form, or report to a new Web page in a matter of minutes.</i></p>
<p>
MICROSOFT’S key mission these days is to Internet-enable its applications. The upcoming release of Access, officially called Microsoft Access 97, includes many new Internet features, and one of the most exciting of these is a wizard called the Microsoft Access 97 Publish to the Web wizard. You can use this wizard to post self-updating product lists for potential customers to browse; collect customer demographics and compile mailing lists; provide easily accessible earnings information for shareholders; or perhaps to provide free information services that bring recognition for your company.</p>
<p>
This new wizard makes it easy to publish corporate data-or any data-to the Internet or an intranet. The Publish to the Web wizard exports the data from an Access table, query, form, or report to an HTML format, creating a new, customizable Web page in the process.</p>
<p>
You can choose from a variety of HTML formats to meet your needs. You can quickly publish static data that won’t be updated frequently, or you can choose to link your Web page to a database so that it’s updated dynamically. With a little more effort, you can even create dynamically updated Access-like forms that are bound to tables in your database.</p>
<p>
This article will help you become familiar with the Publish to the Web wizard and the options it presents to you for putting database objects on the Web.</p>
<h2>Getting started</h2>
<p>
To open the Publish to the Web wizard, first open the database from which you want to publish, then choose the Save to HTML command from the File menu. The wizard opens to the screen shown in Figure 1.</p>
<p><img src="pubwiz01.gif"></p>
<p>
<b>Figure 1. The opening screen of the Publish to the Web wizard.</b></p>
<p>
If you’re running the wizard for the first time, you’ll notice that the option to use a previously created Web publication profile is disabled. A Web publication profile saves the information you’ve specified when you’re publishing a database object to the Web and makes it easy to create another page with the same characteristics. Each time you create a page, the wizard gives you the option to save a profile based on that page. For more details on profiles, see the section on Web publication profiles later in this article.</p>
<p>
The next page allows you to select the tables, queries, forms, and reports that you wish to publish (Figure 2). You can select a single object or any combination of objects.</p>
<p><img src="pubwiz02.gif"></p>
<p>
<b>Figure 2. Selecting objects to publish.</b></p>
<h3>Using HTML templates</h3>
<p>
After you’ve chosen an object or combination of objects to publish, you have the option to choose an HTML template for each object. An HTML template provides ready-made fields you can use to include additional information with your page. For example, you may want to place a company logo on each page or include additional text, such as a copyright notice or a hit count. You may want to use a particular background for related pages. Or, you may want to embed data inside an existing Web page. HTML templates make it easy to do any of these.</p>
<p>
A template is an HTML document that contains tokens formatted as comments in HTML 3.0 syntax. These tokens tell Access where to place information or data when exporting to the page. Once you’ve chosen a template, you’ll use the Publish to the Web wizard to finish exporting your data to your chosen HTML format.</p>
<p>
Table 1 shows the HTML tokens supported by Access 97. You may be familiar with these tokens if you’ve ever used the Access 95 Internet Assistant. The format for the tokens has changed slightly to support the HTML 3.0 standard.</p>
<p>
<b>Table 1. Tokens used in Access HTML templates.</b></p>
<table>
<tr valign=top>
<td>
<b>HTML template token</b></td>
<td>
<b>Location in the template</b></td>
<td>
<b>Replaced with at output time</b></td>
</tr>
<tr valign=top>
<td>
&lt;!-AccessTemplate_Title-&gt;</td>
<td>
Between &lt;TITLE&gt; and &lt;/TITLE&gt; token</td>
<td>
Name of the exported database. object; displayed in the Web browser’s title bar. The wizard fills in this token automatically, but you can edit it.</td>
</tr>
<tr valign=top>
<td>
&lt;!-AccessTemplate_Body-&gt;</td>
<td>
Between &lt;BODY&gt; and &lt;/BODY&gt; token</td>
<td>
Output of the data in the database object. The wizard fills this in based on the object you’ve selected for output.</td>
</tr>
<tr valign=top>
<td>
&lt;!-AccessTemplate_FirstPage-&gt;</td>
<td>
After &lt;/BODY&gt; token</td>
<td>
Token that navigates to the first page in a report.</td>
</tr>
<tr valign=top>
<td>
&lt;!-AccessTemplate_PreviousPage-&gt;</td>
<td>
After &lt;/BODY&gt; token</td>
<td>
Token that navigates to the previous page in a report.</td>
</tr>
<tr valign=top>
<td>
&lt;!-AccessTemplate_NextPage-&gt;</td>
<td>
After &lt;/BODY&gt; token</td>
<td>
Token that navigates to the next page in a report.</td>
</tr>
<tr valign=top>
<td>
&lt;!-AccessTemplate_LastPage-&gt;</td>
<td>
After &lt;/BODY&gt; token</td>
<td>
Token that navigates to the last page in a report.</td>
</tr>
<tr valign=top>
<td>
&lt;!-AccessTemplate_PageNumber-&gt;</td>
<td>
After &lt;/BODY&gt; token</td>
<td>
Current page number</td>
</tr>
</table><br>
<p>
The source for a typical HTML template might look like this:</p>
<pre><font face="Courier New" size="3">&lt;HTML&gt;
&lt;TITLE&gt;&lt;!-AccessTemplate_Title-&gt;&lt;/TITLE&gt;
&lt;BODY background = &quot;SomeBackground.jpg&quot;&gt;
&lt;!-AccessTemplate_Body-&gt;
&lt;/BODY&gt;
&lt;BR&gt;&lt;BR&gt;
&lt;A HREF = &quot;&lt;!-AccessTemplate_FirstPage-&gt;&quot;&gt;First&lt;/A&gt;
&lt;A HREF = &quot;&lt;!-AccessTemplate_PreviousPage-&gt;&quot;&gt;
 Previous&lt;/A&gt;
&lt;A HREF = &quot;&lt;!-AccessTemplate_NextPage-&gt;&quot;&gt;Next&lt;/A&gt;
&lt;A HREF = &quot;&lt;!-AccessTemplate_LastPage-&gt;&quot;&gt;Last&lt;/A&gt;
&lt;P ALIGN = CENTER&gt;Page
 &lt;!-AccessTemplate_PageNumber-&gt;.&lt;/P&gt;
&lt;IMG SRC = &quot;CompanyLogo.jpg&quot;&gt;
&lt;/HTML&gt;</font></pre>
<p>
This template has been modified to add a background and logo to the HTML page. You can customize a template extensively to create a sophisticated Web page.</p>
<p>
Several HTML templates are included with Access 97. When the wizard prompts you for the name, you can browse to see what templates are available. You can also create your own templates with any text editor.</p>
<p>
To create your own template, you can start from scratch and add all the necessary HTML tokens, as shown in Table 1. Or you can view the source for a Web page that you like, save it to a new .HTM file, then copy the tokens for that page. You can then edit the new template to add text or graphics.</p>
<p>
If you don’t use a template with the proper tokens, Access will try to export data to the proper place on the page. However, if there is existing data on the page, it may be erased. The tokens in a template ensure that any information you add to the page will be preserved.</p>
<h3>Choosing an output format</h3>
<p>
At this point you can also choose the format in which the wizard will produce output of your data. Access 97 supports three different output formats for Web publications; the one you choose depends on the source of your data, how your data will be updated, and what level of interaction the user must have with your page. Choices include:</p>
<p>
Static HTML (.htm)</p>
<p>
Dynamic HTML to Internet Information Server 1.0/2.0 (.htx/.idc)</p>
<p>
Dynamic HTML as an ActiveX server page (.asp), supported by Internet Information Server (IIS) 3.0</p>
<p>
Tables, queries, and forms can be output in any format, but reports must be created as static HTML. Let’s look at each type of output.</p>
<h4>Static HTML (.HTM) pages</h4>
<p>
Static HTML pages are the easiest to use, and you can output any table, query, form, or report to the Web in this format. A static HTML page isn’t linked to the database, so the page won’t get updated when the data changes. To update the page, you must re-create it using the updated data. For this reason, static HTML is best used for pages that don’t change often.</p>
<p>
Saved profiles make it easy to re-create a static HTML page with the Publish to the Web wizard. You need only select a saved profile and select the updated object to create an identical page with updated data. Static HTML format is especially useful for producing Access reports. For example, you could post a sales report to a Web page and update it monthly, using the original saved profile. A table or datasheet that doesn’t change frequently is also a good candidate for this type of page. You could, for instance, create a table of favorite Web addresses and output the table to HTML. Then you can navigate to those pages easily from the table.</p>
<p>
The primary disadvantage of generating static HTML is that you must update it manually. If your data changes frequently, you may want to look into creating dynamic HTML pages that allow users to query your database directly and get the most up-to-date information. The two types of dynamic HTML pages are discussed next.</p>
<h4>.HTX/.IDC pages</h4>
<p>
Dynamic HTML pages in .HTX/.IDC format support the linking of an ODBC source, such as SQL Server or Access, to IIS. To create a dynamic HTML page, you use these two file formats together. The .HTX file contains formatting information and special tokens that are filled with data at runtime. The .IDC (Internet Database Connector) file contains the SQL code and ODBC connection information for your database. When the query in the .IDC file is executed, IIS uses this information to find your data.</p>
<p>
If you use this format to generate parameter queries, Access will create an .HTM file that prompts the user for the needed parameters. The user can enter the parameters and then execute the query against the server. This way the user can select a range of relevant data to view.</p>
<h4>.ASP pages</h4>
<p>
The .ASP format was developed for IIS 3.0. This dynamic page format uses a combination of VBScript code, ActiveX controls, and ODBC connections to create forms that can be similar to Access forms in appearance and function. The ActiveX controls on an .ASP page can be bound to fields in your database. These bound fields are updated dynamically as the user works with the ActiveX controls (see Figures 3 and 4).</p>
<p><img src="asp01.gif"></p>
<p>
<b>Figure 3. The Access version of the Suppliers form from the Northwind database.</b></p>
<p><img src="asp02.gif"></p>
<p>
<b>Figure 4. The .ASP version of the Suppliers form-live on the Internet via Internet Explorer 3.</b></p>
<p>
You don’t need to program with VBScript in order to use the .ASP format. Access generates the needed VBScript code to support your form. You can edit this code to alter or extend the functionality that Access provides for the form.</p>
<p>
When you create a page in .ASP format, you need to specify ODBC connection information so that the IIS can connect to your database, like you do when you create a page in .HTX/.IDC format.</p>
<h4>Specifying ODBC information for dynamic HTML formats</h4>
<p>
If you choose to publish your data in either the .HTX/.IDC or .ASP format, the wizard prompts you to enter connection information for the server on which the data resides. You must specify the data source name. If you’ve implemented Access user-level security, you must also supply a user name and password, as shown in Figure 5.</p>
<p><img src="pubwiz04.gif"></p>
<p>
<b>Figure 5. Choosing an ODBC data source, user name, and password.</b></p>
<p>
In order to use either of the dynamic HTML formats, you should be familiar with ODBC and IIS in particular. For more information, see the documentation for Access 97 and IIS. <i>[You may also want to take a look at Richard Knudson’s articles in the May and October 1996 issues of </i>Smart Access.<i>-Ed.]</i></p>
<h3>Publishing data to an Internet server</h3>
<p>
Once you’ve specified an output format, you must choose where the published HTML files should be stored and whether to publish your data locally or to an Internet server. Figure 6 shows the wizard page that prompts you for this information.</p>
<p><img src="pubwiz05.gif"></p>
<p>
<b>Figure 6. Where would you like your objects to go?</b></p>
<p>
The WebPost Web Publication wizard is a separate wizard included with Microsoft Office 97. You can call the WebPost wizard from the Publish to the Web wizard or from the Windows Start menu. The WebPost wizard posts your files to an Internet server.</p>
<p>
A WebPost “friendly name” is similar to a Web publication profile in that it saves all the important settings that you choose when running the WebPost wizard, such as the name of the Internet server. If you choose to post data to an Internet server using the WebPost wizard, you have two choices:</p>
<p>
You can choose an existing friendly name that refers to an Internet server.</p>
<p>
You can run the wizard and set up a new friendly name yourself.</p>
<p>
When you’re using the Publish to the Web wizard with the WebPost wizard, keep in mind that it will first generate all of the objects you have chosen to the directory you specify and then it will post all of these objects in that directory to the server, including any other unrelated files in the directory. This is useful if that directory contains other important files related to your publication, such as images or background bitmaps. It also means that it’s probably not a good idea to select the Access directory or the Windows System directory!</p>
<h3>Making a home page</h3>
<p>
The Publish to the Web wizard can create an HTML page that will provide links to the other pages that have been published at the same time. If you want to create a home page yourself, you can easily do so by simply creating a table with hyperlinks that jump to the new pages and then outputting the table to HTML. In some cases you may want to tweak this page after it has been created; you can also cut some of the hyperlinks from this page and paste them into other pages for more advanced navigation than the simple home page can provide.</p>
<h3>Saving a Web publication profile</h3>
<p>
As we mentioned earlier, the Publish to the Web wizard can create a publication profile based on the information you’ve entered in the wizard. This can be useful if you need to update a Web page that’s in static HTML format.</p>
<p>
To save a new publication profile, run the wizard, select the objects you wish to export, choose a template and output format, and then enter a name for the publication profile in the Profile Name field. To use an existing publication profile, simply run the wizard, choose a profile, and click Finish. The wizard will publish the same objects in the same manner as it did originally. To modify an existing publication profile, you can run the wizard, change the desired options, then save them as a new profile or as an update to the old profile. You may create as many profiles for a database as you like.</p>
<p>
Publication profiles are saved as user-defined properties of the database and of the objects you select for output. For this reason you must have write-design permissions on an object in order to save profile information that includes that object. If you lack the necessary permissions, the wizard will notify you and give you the option of saving profile information on objects for which you do have write-design permissions.</p>
<h3>Modifying a publication profile in code</h3>
<p>
If you have the proper permissions for an object, you can set the properties that make up the publication profile for that object from code. By manipulating these properties, you can add new profiles, change or delete existing ones, or even use them to create objects by calling the OutputTo method of the DoCmd object.</p>
<p>
If you do want to delve into using these properties yourself, the easiest way is to create a few profiles using the wizard and then check the property values set by the wizard.</p>
<p>
<i>Warning</i>: Microsoft hasn’t documented the format for publication profiles created by the Publish to the Web wizard. Although you may write code to parse the properties (or that will create, modify, or delete profiles in order to enhance their functionality) and use them in your own code, the format may change in future versions of Access. All of the information given here regarding profiles is unsupported by Microsoft. You have been warned!</p>
<p>
The format for a publication profile consists of three parts, which are stored in three properties:</p>
<p>
A semicolon-delimited list of profile names, stored in the pubwiz_SpecName property.</p>
<p>
A semicolon-delimited list of database-level information for each profile, stored in the pubwiz_XXX property of the database, where <i>xxx</i> is the name of the given profile. The list includes the following, in order: Home page name; WebPost friendly name; data source name; User name; Password; Directory; Default template; Default output format (1 for HTML, 2 for HTX/IDC, 3 for ASP).</p>
<p>
A semicolon-delimited list of the object level information for each profile, stored in the pubwiz_XXX property of the object, where <i>xxx</i> is the name of the given profile. The list includes the following, in order: Output filename; Output format (1 for HTML, 2 for HTX/IDC, 3 for ASP); Template name.</p>
<p>
You can omit any item that’s not relevant. For example, you can omit the template name if no template is selected or if you don’t need data source information for dynamic formats. Simply include the semicolon so that the wizard knows to skip this item in the list.</p>
<h3>Conclusion</h3>
<p>
Now that you’re familiar with the Publish to the Web wizard, you’re ready to begin publishing data to the Web from Access<i> [As soon as Access 97 ships!-Ed]</i>. As more and more companies go online, they’ll expect their Access applications to be there too. With the wizard, you’ll have an important head start for creating those applications.</p>
<p>
<i>Michael Kaplan is the owner of Trigeminal Software Inc., a consulting firm that focuses on all types of unusual interconnectivity solutions in Access, SQL Server, Visual Basic, and Office. He recently wrote the Replication special report for Pinnacle’s The Pros Talk Access 95 series, and is a regular contributor to Smart Access. 102363.1726@compuserve.com.</i></p>
<p>
<i>Tamra Myers is a writer with the Access User Education group at Microsoft, which provides all the documentation for Access and related products such as Microsoft Office, Developer Edition. She focuses on documentation for the Access developer. 103424.1377@compuserve.com.</i></p>
<P align="center"><a
href="http://www.pinpub.com/access/"><img src="Pinnacle.gif"
border="0" width="216" height="72"></a></p>

<P align="center"><strong>To find out more about Smart
Access and Pinnacle Publishing, visit their website at</strong>:</p>

<P align="center"><a
href="http://www.pinpub.com/access/"><strong>http://www.pinpub.com/access/</strong></a></p>

<P align="center"><font size="1">Note: This is not a
Microsoft Corporation website. <br>
Microsoft is not responsible for its content.</font></p>

<P>This article is reproduced from the November 1996
issue of Smart Access. Copyright 1996, by Pinnacle Publishing,
Inc., unless otherwise noted. All rights are reserved. Smart
Access is an independently produced publication of Pinnacle
Publishing, Inc. No part of this article may be used or
reproduced in any fashion (except in brief quotations used in
critical articles and reviews) without prior consent of Pinnacle
Publishing, Inc. To contact Pinnacle Publishing, Inc., please
call (800)788-1900 or (206)251-1900.</p>
</font></BODY>
</HTML>
