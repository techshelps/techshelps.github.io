<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOCKWNDW.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6543"></a>DOCKWNDW.H</h2>
<pre><code>/************************************************************************** <br>   THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>   ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>   PARTICULAR PURPOSE. <br> <br>   Copyright 1997 Microsoft Corporation.  All Rights Reserved. <br>**************************************************************************/ <br> <br>/************************************************************************** <br> <br>   File:          DockWndw.h <br>    <br>   Description:   CDockingWindow definitions. <br> <br>**************************************************************************/ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;shlobj.h&gt; <br> <br>#if (_WIN32_IE &lt; 0x0400) <br>#define CDockingWindow  IUnknown <br> <br>#else //(_WIN32_IE &gt;= 0x0400) <br> <br>#include "ShlView.h" <br> <br>#ifndef DOCKINGWINDOW_H <br>#define DOCKINGWINDOW_H <br> <br>#define SHTB_CLASS_NAME (TEXT("RegViewToolbarClass")) <br> <br>/************************************************************************** <br>   global variables <br>**************************************************************************/ <br> <br>extern HINSTANCE  g_hInst; <br>extern UINT       g_DllRefCount; <br> <br>#define TOOLBAR_HEIGHT  50 <br> <br>/************************************************************************** <br> <br>   CDockingWindow class definition <br> <br>**************************************************************************/ <br> <br>class CDockingWindow : public IDockingWindow, public IInputObject, public IObjectWithSite <br>{ <br>protected: <br>   DWORD m_ObjRefCount; <br> <br>public: <br>   CDockingWindow(CShellView*, HWND); <br>   ~CDockingWindow(); <br> <br>   //IUnknown methods <br>   STDMETHODIMP QueryInterface(REFIID, LPVOID*); <br>   STDMETHODIMP_(DWORD) AddRef(); <br>   STDMETHODIMP_(DWORD) Release(); <br> <br>   //IOleWindow methods <br>   STDMETHOD (GetWindow) (HWND*); <br>   STDMETHOD (ContextSensitiveHelp) (BOOL); <br> <br>   //IDockingWindow methods <br>   STDMETHOD (ShowDW) (BOOL fShow); <br>   STDMETHOD (CloseDW) (DWORD dwReserved); <br>   STDMETHOD (ResizeBorderDW) (LPCRECT prcBorder, IUnknown* punkToolbarSite, BOOL fReserved); <br> <br>   //IInputObject methods <br>   STDMETHOD (UIActivateIO) (BOOL, LPMSG); <br>   STDMETHOD (HasFocusIO) (void); <br>   STDMETHOD (TranslateAcceleratorIO) (LPMSG); <br> <br>   //IObjectWithSite methods <br>   STDMETHOD (SetSite) (IUnknown*); <br>   STDMETHOD (GetSite) (REFIID, LPVOID*); <br> <br>private: <br>BOOL NegotiateBorderSpace(IDockingWindowSite*, LPCRECT prcBorder = NULL); <br>RECT m_rcDisplay; <br>BOOL m_bFocus; <br>HWND m_hwndParent; <br>HWND m_hWnd; <br>HWND m_hwndCommand; <br>   CShellView *m_pView; <br>   IDockingWindowSite *m_pSite; <br> <br>private: <br>void FocusChange(BOOL); <br>   LRESULT OnKillFocus(void); <br>LRESULT OnSetFocus(void); <br>static LRESULT CALLBACK WndProc(HWND hWnd, UINT uMessage, WPARAM wParam, LPARAM lParam); <br>LRESULT OnPaint(void); <br>LRESULT OnCommand(WPARAM wParam, LPARAM lParam); <br>}; <br> <br>#endif   //DOCKINGWINDOW_H <br> <br>#endif   //(_WIN32_IE &gt;= 0x0400) </code></pre>
<p>&nbsp;</p></body>
</HTML>
