<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DEBUG.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6470"></a>DEBUG.H</h2>
<pre><code>//******************************************************************************************* <br>// <br>// Filename : Debug.h <br>// <br>//Definitions of Debug routines <br>// <br>// Copyright 1994 - 1998 Microsoft Corporation. All rights reserved <br>// <br>//******************************************************************************************* <br> <br>#define NOSHELLDEBUG// don't take shell versions of this <br> <br>// NOTE: You can #define your own DM_* values using bits in the HI BYTE <br>                                                                <br>#define DM_TRACE    0x0001      // Trace messages               <br>#define DM_WARNING  0x0002      // Warning                      <br>#define DM_ERROR    0x0004      // Error                        <br>#define DM_ASSERT   0x0008      // Assertions                   <br>                                                                <br>// NOTE: Default debug mask is 0x00ff (show everything)         <br>//                                                              <br>// Inside debugger, you can modify wDebugMask variable.         <br>//                                                              <br>// Set debug mask; returning previous.                          <br>//                                                              <br>UINT WINAPI SetDebugMask(UINT mask);                            <br>                                                                <br>// Get debug mask.                                              <br>//                                                              <br>UINT WINAPI GetDebugMask();                                     <br>                                                                <br>// Use this macro to declare message text that will be placed   <br>// in the CODE segment (useful if DS is getting full)           <br>//                                                              <br>// Ex: DBGTEXT(szMsg, "Invalid whatever: %d");                <br>//                                                              <br>#define DBGTEXT(sz, msg)      static const char sz[] = msg;                     <br>                                                                <br>#ifdef DEBUG <br>// Assert(f)  -- Generate "assertion failed in line x of file.c" <br>//               message if f is NOT true. <br>// <br>// AssertMsg(f, msg, args...)  -- Generate wsprintf-formatted msg w/params <br>//                          if f is NOT true.                   <br>//                                                              <br>// DebugMsg(mask, msg, args...) -                               <br>//         Generate wsprintf-formatted msg using                <br>//         specified debug mask.  System debug mask <br>//         governs whether message is output. <br>//                                                              <br>void WINAPI AssertFailed(LPCSTR szFile, int line); <br> <br>#define Assert(f)                           \ <br>    {                                       \ <br>        DBGTEXT(szFile, __FILE__);          \ <br>        if (!(f))                           \ <br>            AssertFailed(szFile, __LINE__); \ <br>    }                                        <br>#define AssertE(f) Assert(f)                 <br>                                                                <br>void __cdecl _AssertMsg(BOOL f, LPCSTR pszMsg, ...);        <br>#define AssertMsg   _AssertMsg                                  <br>                                                                <br>void __cdecl _DebugMsg(UINT mask, LPCSTR psz, ...);        <br>#define DebugMsg    _DebugMsg                                   <br>                                                                <br>#else <br> <br>// retail versions to produce no code, no data <br>                                                                <br>#define Assert(f)                                               <br>#define AssertE(f)      (f)                                     <br>#define AssertMsg   1 ? (void)0 : (void)                        <br>#define DebugMsg    1 ? (void)0 : (void)                        <br>                                                                <br>#endif                                                          </code></pre>
<p>&nbsp;</p></body>
</HTML>
