<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DLG.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6471"></a>DLG.CPP</h2>
<pre><code>//******************************************************************************************* <br>// <br>// Filename : Dlg.cpp <br>// <br>//Implementation file for CDlg, CFileDlg and CPropPage <br>// <br>// Copyright 1994 - 1998 Microsoft Corporation. All rights reserved <br>// <br>//******************************************************************************************* <br> <br>#include "Pch.H" <br> <br>#include "ThisDll.H" <br> <br>#include "Dlg.H" <br> <br>BOOL CDlg::RealDlgProc(UINT uMsg, WPARAM wParam, LPARAM lParam) <br>{ <br>return(FALSE); <br>} <br> <br> <br>BOOL CALLBACK CDlg::DlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) <br>{ <br>CDlg *pThis = (CDlg *)GetWindowLong(hDlg, DWL_USER); <br> <br>if (uMsg == WM_INITDIALOG) <br>{ <br>pThis = (CDlg *)lParam; <br>pThis-&gt;m_hDlg = hDlg; <br>SetWindowLong(hDlg, DWL_USER, lParam); <br>} <br>else if (!pThis) <br>{ <br>return(FALSE); <br>} <br> <br>return(pThis-&gt;RealDlgProc(uMsg, wParam, lParam)); <br>} <br> <br> <br>int CDlg::DoModal(UINT idRes, HWND hParent) <br>{ <br>return(DialogBoxParam(g_ThisDll.GetInstance(), MAKEINTRESOURCE(idRes), hParent, <br>DlgProc, (LPARAM)this)); <br>} <br> <br> <br>HWND CDlg::DoModeless(UINT idRes, HWND hParent) <br>{ <br>return(CreateDialogParam(g_ThisDll.GetInstance(), MAKEINTRESOURCE(idRes), hParent, <br>DlgProc, (LPARAM)this)); <br>} <br> <br> <br>CFileDlg::CFileDlg(HWND hwndParent, LPCSTR szFilter, LPSTR szFile, UINT uFileLen, <br>LPCSTR szTitle) <br>: m_dwError(0) <br>{ <br>memset((LPOPENFILENAME)this, 0, sizeof(OPENFILENAME)); <br> <br>lStructSize = sizeof(OPENFILENAME); <br>hwndOwner = hwndParent; <br>hInstance = g_ThisDll.GetInstance(); <br>lpstrFilter = szFilter; <br>lpstrFile = szFile; <br>nMaxFile = uFileLen; <br>lpstrTitle = szTitle; <br>} <br> <br> <br>BOOL CFileDlg::RealHookProc(UINT uMsg, WPARAM wParam, LPARAM lParam) <br>{ <br>return(FALSE); <br>} <br> <br> <br>BOOL CFileDlg::HookProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) <br>{ <br>CFileDlg *pThis = (CFileDlg *)GetWindowLong(hDlg, DWL_USER); <br> <br>if (uMsg == WM_INITDIALOG) <br>{ <br>LPOPENFILENAME pofn = (LPOPENFILENAME)lParam; <br> <br>pThis = (CFileDlg *)pofn-&gt;lCustData; <br>pThis-&gt;m_hDlg = hDlg; <br>SetWindowLong(hDlg, DWL_USER, pofn-&gt;lCustData); <br>} <br>else if (!pThis) <br>{ <br>return(FALSE); <br>} <br> <br>return(pThis-&gt;RealHookProc(uMsg, wParam, lParam)); <br>} <br> <br> <br>BOOL CFileOpenDlg::DoModal() <br>{ <br>// Caller needs to set OFN_ENABLEHOOK to get a hook <br>lpfnHook = (LPOFNHOOKPROC)HookProc; <br>lCustData = (LONG)this; <br> <br>BOOL bRet = GetOpenFileName(this); <br>m_dwError = bRet ? 0 : CommDlgExtendedError(); <br> <br>return(bRet); <br>} <br> <br> <br>CPropPage::~CPropPage() <br>{ <br>} <br> <br> <br>CPropPage::CPropPage(LPCSTR szTmplt) <br>{ <br>dwSize = sizeof(CPropPage); <br>dwFlags = PSP_DEFAULT; <br>hInstance = g_ThisDll.GetInstance(); <br>pszTemplate = szTmplt; <br>pfnDlgProc = PageProc; <br>m_pThis = this; <br>} <br> <br> <br>HRESULT CPropPage::DoModeless(LPFNADDPROPSHEETPAGE lpfnAddPage, LPARAM lParam) <br>{ <br>dwFlags |= PSP_USECALLBACK; <br>pfnCallback = PageRelease; <br> <br>    // add the page; note this whole object has been copied to the page structure <br>    HPROPSHEETPAGE hPage = CreatePropertySheetPage(this); <br>if (!hPage) <br>{ <br>return(E_OUTOFMEMORY); <br>} <br> <br>if (!lpfnAddPage(hPage, lParam)) <br>{ <br>return(E_UNEXPECTED); <br>} <br> <br>    return(NOERROR); <br> <br>} <br> <br> <br>BOOL CALLBACK CPropPage::PageProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) <br>{ <br>CPropPage *pThis = (CPropPage *)GetWindowLong(hDlg, DWL_USER); <br> <br>if (uMsg == WM_INITDIALOG) <br>{ <br>CPropPage *pThat = IToClass(CPropPage, dwSize, lParam); <br>pThis = pThat-&gt;m_pThis; <br> <br>pThis-&gt;m_hPage = hDlg; <br>SetWindowLong(hDlg, DWL_USER, (LONG)pThis); <br>} <br>else if (!pThis) <br>{ <br>return(FALSE); <br>} <br> <br>return(pThis-&gt;RealPageProc(uMsg, wParam, lParam)); <br>} <br> <br> <br>UINT CALLBACK CPropPage::PageRelease(HWND hwnd, UINT uMsg, LPPROPSHEETPAGE ppsp) <br>{ <br>if (uMsg == PSPCB_RELEASE) <br>{ <br>CPropPage *pThat = IToClass(CPropPage, dwSize, ppsp); <br>CPropPage *pThis = pThat-&gt;m_pThis; <br> <br>delete pThis; <br>} <br> <br>return(TRUE); <br>} <br> <br> <br>BOOL CPropPage::RealPageProc(UINT uMsg, WPARAM wParam, LPARAM lParam) <br>{ <br>return(FALSE); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
