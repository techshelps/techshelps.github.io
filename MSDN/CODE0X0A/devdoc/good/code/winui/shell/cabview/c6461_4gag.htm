<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FOLDER.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6478"></a>FOLDER.H</h2>
<pre><code>//******************************************************************************************* <br>// <br>// Filename : Folder.h <br>// <br>//Definitions of CCabFolder and CCabItemList <br>// <br>// Copyright 1994 - 1998 Microsoft Corporation. All rights reserved <br>// <br>//******************************************************************************************* <br> <br>#ifndef _CABFOLD_H_ <br>#define _CABFOLD_H_ <br> <br>enum _CV_COLS <br>{ <br>CV_COL_NAME = 0, <br>CV_COL_SIZE, <br>CV_COL_TYPE, <br>CV_COL_MODIFIED, <br>CV_COL_MAX, <br>} ; <br> <br>typedef struct _CABITEM <br>{ <br>WORD wSize; <br>DWORD dwFileSize; <br>USHORT uFileDate; <br>USHORT uFileTime; <br>USHORT uFileAttribs; <br>char szName[1]; <br>} CABITEM, *LPCABITEM; <br> <br>class CCabItemList <br>{ <br>public: <br>CCabItemList(UINT uStep) {m_uStep=uStep;} <br>CCabItemList() {CCabItemList(8);} <br>~CCabItemList() {CleanList();} <br> <br>enum <br>{ <br>State_UnInit, <br>State_Init, <br>State_OutOfMem, <br>}; <br> <br>UINT GetState(); <br> <br>LPCABITEM operator[](UINT nIndex) <br>{ <br>return((LPCABITEM)DPA_GetPtr(m_dpaList, nIndex)); <br>} <br>UINT GetCount() {return(GetState()==State_Init ? DPA_GetPtrCount(m_dpaList) : 0);} <br> <br>BOOL InitList(); <br> <br>BOOL AddItems(LPCABITEM *apit, UINT cpit); <br>BOOL AddItem(LPCSTR pszName, DWORD dwFileSize, <br>UINT uFileDate, UINT uFileTime, UINT uFileAttribs); <br> <br>int FindInList(LPCSTR pszName, DWORD dwFileSize, <br>UINT uFileDate, UINT uFileTime, UINT uFileAttribs); <br>BOOL IsInList(LPCSTR pszName, DWORD dwFileSize, <br>UINT uFileDate, UINT uFileTime, UINT uFileAttribs) <br>{ <br>return(FindInList(pszName, dwFileSize, uFileDate, uFileTime, uFileAttribs) &gt;= 0); <br>} <br> <br> <br>private: <br>BOOL StoreItem(LPITEMIDLIST pidl); <br>void CleanList(); <br> <br>private: <br>UINT m_uStep; <br>HDPA m_dpaList; <br>} ; <br> <br>class CCabFolder : public IPersistFolder, public IShellFolder <br>{ <br>public: <br>CCabFolder() : m_pidlHere(0), m_lItems(1024/sizeof(LPVOID)) {} <br>~CCabFolder() <br>{ <br>if (m_pidlHere) <br>{ <br>ILFree(m_pidlHere); <br>} <br>} <br> <br>// *** IUnknown methods *** <br>STDMETHODIMP QueryInterface( <br>REFIID riid,  <br>LPVOID FAR* ppvObj); <br>STDMETHODIMP_(ULONG) AddRef(void); <br>STDMETHODIMP_(ULONG) Release(void); <br> <br>// *** IParseDisplayName method *** <br>STDMETHODIMP ParseDisplayName( <br>HWND hwndOwner, <br>LPBC pbc,  <br>LPOLESTR lpszDisplayName, <br>ULONG FAR* pchEaten,  <br>LPITEMIDLIST * ppidl, <br>ULONG *pdwAttributes); <br> <br>// *** IOleContainer methods *** <br>STDMETHODIMP EnumObjects( <br>HWND hwndOwner,  <br>DWORD grfFlags, <br>LPENUMIDLIST * ppenumIDList); <br> <br>// *** IShellFolder methods *** <br>STDMETHODIMP BindToObject( <br>LPCITEMIDLIST pidl,  <br>LPBC pbc, <br>REFIID riid,  <br>LPVOID FAR* ppvObj); <br>STDMETHODIMP BindToStorage( <br>LPCITEMIDLIST pidl,  <br>LPBC pbc, <br>REFIID riid,  <br>LPVOID FAR* ppvObj); <br>STDMETHODIMP CompareIDs( <br>LPARAM lParam,  <br>LPCITEMIDLIST pidl1, <br>LPCITEMIDLIST pidl2); <br>STDMETHODIMP CreateViewObject( <br>HWND hwndOwner,  <br>REFIID riid, <br>LPVOID FAR* ppvObj); <br>STDMETHODIMP GetAttributesOf( <br>UINT cidl,  <br>LPCITEMIDLIST FAR* apidl, <br>ULONG FAR* rgfInOut); <br>STDMETHODIMP GetUIObjectOf( <br>HWND hwndOwner,  <br>UINT cidl,  <br>LPCITEMIDLIST FAR* apidl,  <br>REFIID riid,  <br>UINT FAR* prgfInOut,  <br>LPVOID FAR* ppvObj); <br>STDMETHODIMP GetDisplayNameOf( <br>LPCITEMIDLIST pidl,  <br>DWORD dwReserved,  <br>LPSTRRET lpName); <br>STDMETHODIMP SetNameOf( <br>HWND hwndOwner,  <br>LPCITEMIDLIST pidl, <br>LPCOLESTR lpszName,  <br>DWORD dwReserved, <br>LPITEMIDLIST FAR* ppidlOut); <br> <br>// *** IPersist methods *** <br>STDMETHODIMP GetClassID( <br>LPCLSID lpClassID); <br>// *** IPersistFolder methods *** <br>STDMETHODIMP Initialize( <br>LPCITEMIDLIST pidl); <br> <br>public: <br>static LPITEMIDLIST CreateIDList(LPCSTR pszName, DWORD dwFileSize, <br>UINT uFileDate, UINT uFileTime, UINT uFileAttribs); <br>static void GetNameOf(LPCABITEM pit, LPSTRRET lpName); <br>static void GetTypeOf(LPCABITEM pit, LPSTRRET lpName); <br> <br>BOOL GetPath(LPSTR szPath); <br> <br>private: <br>static void CALLBACK EnumToList(LPCSTR pszFile, DWORD dwSize, UINT date, <br>UINT time, UINT attribs, LPARAM lParam); <br> <br>HRESULT InitItems(); <br> <br>private: <br>CRefDll m_cRefDll; <br> <br>CRefCount m_cRef; <br> <br>LPITEMIDLIST m_pidlHere;// maintains the current pidl <br> <br>CCabItemList m_lItems; <br> <br>friend class CEnumCabObjs; <br>} ; <br> <br>#endif // _CABFOLD_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
