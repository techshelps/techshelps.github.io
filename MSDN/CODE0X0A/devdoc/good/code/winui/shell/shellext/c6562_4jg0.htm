<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SHELLEXT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6570"></a>SHELLEXT.H</h2>
<pre><code>// <br>// The class ID of this Shell extension class. <br>// <br>// class id:  87b9bd00-c65c-11cd-a259-00dd010e8c28 <br>// <br>// <br>// NOTE!!!  If you use this shell extension as a starting point,  <br>//          you MUST change the GUID below.  Simply run UUIDGEN.EXE <br>//          to generate a new GUID. <br>// <br>                                   <br>#define ODS(sz) OutputDebugString(sz) <br> <br>#ifndef _SHELLEXT_H <br>#define _SHELLEXT_H <br> <br>DEFINE_GUID(CLSID_ShellExtension, 0x87b9bd00L, 0xc65c, 0x11cd, 0xa2, 0x59, 0x00, 0xdd, 0x01, 0x0e, 0x8c, 0x28 ); <br> <br>// this class factory object creates context menu handlers for Windows 95 shell <br>class CShellExtClassFactory : public IClassFactory <br>{ <br>protected: <br>ULONGm_cRef; <br> <br>public: <br>CShellExtClassFactory(); <br>~CShellExtClassFactory(); <br> <br>//IUnknown members <br>STDMETHODIMPQueryInterface(REFIID, LPVOID FAR *); <br>STDMETHODIMP_(ULONG)AddRef(); <br>STDMETHODIMP_(ULONG)Release(); <br> <br>//IClassFactory members <br>STDMETHODIMPCreateInstance(LPUNKNOWN, REFIID, LPVOID FAR *); <br>STDMETHODIMPLockServer(BOOL); <br> <br>}; <br>typedef CShellExtClassFactory *LPCSHELLEXTCLASSFACTORY; <br> <br>// this is the actual OLE Shell context menu handler <br>class CShellExt : public IContextMenu,  <br>                         IShellExtInit,  <br>                         IExtractIcon,  <br>                         IPersistFile,  <br>                         IShellPropSheetExt, <br>                         ICopyHook <br>{ <br>public: <br>    char         m_szPropSheetFileUserClickedOn[MAX_PATH];  //This will be the same as <br>                                                            //m_szFileUserClickedOn but I include <br>                                                            //here for demonstration.  That is, <br>                                                            //m_szFileUserClickedOn gets filled in <br>                                                            //as a result of this sample supporting <br>                                                            //the IExtractIcon and IPersistFile <br>                                                            //interface.  If this sample *only* showed <br>                                                            //a Property Sheet extesion, you would <br>                                                            //need to use the method I do here to find <br>                                                            //the filename the user clicked on. <br> <br> <br>protected: <br>ULONG        m_cRef; <br>LPDATAOBJECT m_pDataObj; <br>    char         m_szFileUserClickedOn[MAX_PATH]; <br> <br>STDMETHODIMP DoGAKMenu1(HWND hParent,  <br>                        LPCSTR pszWorkingDir,  <br>                        LPCSTR pszCmd, <br>                            LPCSTR pszParam,  <br>                            int iShowCmd); <br> <br>STDMETHODIMP DoGAKMenu2(HWND hParent,  <br>                        LPCSTR pszWorkingDir,  <br>                        LPCSTR pszCmd, <br>                            LPCSTR pszParam,  <br>                            int iShowCmd); <br> <br>STDMETHODIMP DoGAKMenu3(HWND hParent,  <br>                        LPCSTR pszWorkingDir,  <br>                        LPCSTR pszCmd, <br>                            LPCSTR pszParam,  <br>                            int iShowCmd); <br> <br>STDMETHODIMP DoGAKMenu4(HWND hParent,  <br>                        LPCSTR pszWorkingDir,  <br>                        LPCSTR pszCmd, <br>                            LPCSTR pszParam,  <br>                            int iShowCmd); <br>public: <br>CShellExt(); <br>~CShellExt(); <br> <br>//IUnknown members <br>STDMETHODIMPQueryInterface(REFIID, LPVOID FAR *); <br>STDMETHODIMP_(ULONG)AddRef(); <br>STDMETHODIMP_(ULONG)Release(); <br> <br>//IShell members <br>STDMETHODIMPQueryContextMenu(HMENU hMenu, <br>                                         UINT indexMenu,  <br>                                         UINT idCmdFirst, <br>                                             UINT idCmdLast,  <br>                                             UINT uFlags); <br> <br>STDMETHODIMPInvokeCommand(LPCMINVOKECOMMANDINFO lpcmi); <br> <br>STDMETHODIMPGetCommandString(UINT idCmd,  <br>                                         UINT uFlags,  <br>                                         UINT FAR *reserved,  <br>                                             LPSTR pszName,  <br>                                             UINT cchMax); <br> <br>//IShellExtInit methods <br>STDMETHODIMP    Initialize(LPCITEMIDLIST pIDFolder,  <br>                                   LPDATAOBJECT pDataObj,  <br>                                   HKEY hKeyID); <br> <br>    //IExtractIcon methods <br>    STDMETHODIMP GetIconLocation(UINT   uFlags, <br>                                 LPSTR  szIconFile, <br>                                 UINT   cchMax, <br>                                 int   *piIndex, <br>                                 UINT  *pwFlags); <br> <br>    STDMETHODIMP Extract(LPCSTR pszFile, <br>                         UINT   nIconIndex, <br>                         HICON  *phiconLarge, <br>                         HICON  *phiconSmall, <br>                         UINT   nIconSize); <br> <br>    //IPersistFile methods <br>    STDMETHODIMP GetClassID(LPCLSID lpClassID); <br> <br>    STDMETHODIMP IsDirty(); <br> <br>    STDMETHODIMP Load(LPCOLESTR lpszFileName, DWORD grfMode); <br> <br>    STDMETHODIMP Save(LPCOLESTR lpszFileName, BOOL fRemember); <br> <br>    STDMETHODIMP SaveCompleted(LPCOLESTR lpszFileName); <br> <br>    STDMETHODIMP GetCurFile(LPOLESTR FAR* lplpszFileName); <br> <br>    //IShellPropSheetExt methods <br>    STDMETHODIMP AddPages(LPFNADDPROPSHEETPAGE lpfnAddPage, LPARAM lParam); <br>     <br>    STDMETHODIMP ReplacePage(UINT uPageID,  <br>                             LPFNADDPROPSHEETPAGE lpfnReplaceWith,  <br>                             LPARAM lParam); <br> <br>    //ICopyHook method <br>    STDMETHODIMP_(UINT) CopyCallback(HWND hwnd,  <br>                                     UINT wFunc,  <br>                                     UINT wFlags,  <br>                                     LPCSTR pszSrcFile,  <br>                                     DWORD dwSrcAttribs, <br>                                     LPCSTR pszDestFile,  <br>                                     DWORD dwDestAttribs); <br> <br>}; <br>typedef CShellExt *LPCSHELLEXT; <br> <br>#endif // _SHELLEXT_H </code></pre>
<p>&nbsp;</p></body>
</HTML>
