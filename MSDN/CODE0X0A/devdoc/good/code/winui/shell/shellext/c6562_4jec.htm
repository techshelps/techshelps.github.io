<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICONHDLR.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6564"></a>ICONHDLR.CPP</h2>
<pre><code>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>// Modudule: ICONHDLR.CPP <br>// <br>// Purpose:  Implements the IExtractIcon and IPersistFile member <br>//           functions necessary to support the icon handler portion <br>//           of this shell extension. <br>// <br> <br>#include "priv.h" <br>#include "shellext.h" <br> <br>extern HINSTANCE g_hmodThisDll; // Handle to this DLL itself. <br> <br>// *********************** IExtractIcon Implementation ************************* <br> <br>STDMETHODIMP CShellExt::GetIconLocation(UINT   uFlags, <br>                                        LPSTR  szIconFile, <br>                                        UINT   cchMax, <br>                                        int   *piIndex, <br>                                        UINT  *pwFlags) <br>{   <br>    ODS("CShellExt::GetIconLocation()\r\n"); <br> <br>    GetModuleFileName(g_hmodThisDll, szIconFile, cchMax); <br> <br>    *piIndex = (int)GetPrivateProfileInt("IconImage",  <br>                                         "Index",  <br>                                         0,  <br>                                         m_szFileUserClickedOn); <br> <br>    return S_OK; <br>} <br> <br> <br>STDMETHODIMP CShellExt::Extract(LPCSTR pszFile, <br>                                UINT   nIconIndex, <br>                                HICON  *phiconLarge, <br>                                HICON  *phiconSmall, <br>                                UINT   nIconSize) <br>{ <br>    ODS("CShellExt::Extract()\r\n"); <br> <br>    return S_FALSE; <br>} <br> <br> <br>// *********************** IPersistFile Implementation ****************** <br> <br>STDMETHODIMP CShellExt::GetClassID(LPCLSID lpClassID) <br>{ <br>    ODS("CShellExt::GetClassID()\r\n"); <br> <br>    return E_FAIL; <br>} <br> <br>STDMETHODIMP CShellExt::IsDirty() <br>{ <br>    ODS("CShellExt::IsDirty()\r\n"); <br> <br>    return S_FALSE; <br>} <br> <br>STDMETHODIMP CShellExt::Load(LPCOLESTR lpszFileName, DWORD grfMode) <br>{ <br>    ODS("CShellExt::Load()\r\n"); <br> <br>    WideCharToMultiByte(CP_ACP,                // CodePage <br>                        0,              // dwFlags <br>                        lpszFileName,          // lpWideCharStr <br>                        -1,                    // cchWideChar <br>                        m_szFileUserClickedOn, // lpMultiByteStr <br>                        sizeof(m_szFileUserClickedOn),  // cchMultiByte, <br>                        NULL,                  // lpDefaultChar, <br>                        NULL);                 // lpUsedDefaultChar <br> <br>    return NOERROR; <br>} <br> <br>STDMETHODIMP CShellExt::Save(LPCOLESTR lpszFileName, BOOL fRemember) <br>{ <br>    ODS("CShellExt::Save()\r\n"); <br> <br>    return E_FAIL; <br>} <br> <br>STDMETHODIMP CShellExt::SaveCompleted(LPCOLESTR lpszFileName) <br>{ <br>    ODS("CShellExt::SaveCompleted()\r\n"); <br> <br>    return E_FAIL; <br>} <br> <br>STDMETHODIMP CShellExt::GetCurFile(LPOLESTR FAR* lplpszFileName) <br>{ <br>    ODS("CShellExt::GetCurFile()\r\n"); <br> <br>    return E_FAIL; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
