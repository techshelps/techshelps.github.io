<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VS_ASC.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6531"></a>VS_ASC.C</h2>
<pre><code>#include "vsp_asc.h" <br>#include "vsctop.h" <br>#include "vs_asc.pro" <br> <br>#define EOF (-1) <br> <br>/************************** ROUTINES *****************************************/ <br> <br>/****************************************************************************** <br>*ASC_INIT      * <br>*Initialize the data union data structure   * <br>******************************************************************************/ <br>VW_ENTRYSC  SHORT  VW_ENTRYMODVwStreamOpenFunc (fp, FileId, FileName, FilterInfo, hProc) <br>SOFILEfp; <br>SHORTFileId; <br>BYTE VWPTR*FileName; <br>SOFILTERINFOVWPTR*FilterInfo; <br>HPROChProc; <br>{ <br>charchread[10]; <br>SHORTch; <br>SHORTchCount; <br>SHORTdone; <br>SHORTlocText; <br> <br>if ( FilterInfo != NULL ) <br>{ <br>FilterInfo-&gt;wFilterCharSet = SO_PC; <br>strcpy ( FilterInfo-&gt;szFilterName, VwStreamIdName[0].FileDescription ); <br>} <br> <br>Proc.AscSave.SeekSpot = 0L; <br>Proc.AscSave.lastchar = 0; <br>Proc.bFileIsText = FALSE; <br> <br>Proc.hFile = _lopen ( (LPCSTR) FileName, OF_READ | OF_SHARE_DENY_WRITE ); <br>if (Proc.hFile == HFILE_ERROR) <br>return -1; <br> <br>_llseek (Proc.hFile, 0L, 0); <br> <br>chCount= 0; <br>done= FALSE; <br>locText= TRUE; <br> <br>do { <br>if (chCount &gt;= 512) <br>break; <br> <br>if (0==_lread (Proc.hFile, chread, 1) ) <br>ch=EOF; <br>else <br>ch=chread[0]; <br> <br>chCount ++; <br>switch (ch) <br>{ <br>case EOF: <br>done=TRUE; <br>break; <br> <br>case 0x0d:// CR <br>case 0x08:// Backspace <br>case 0x0a:// NL <br>case 0x09:// TAB <br>case 0x0c:// NEW PAGE <br>case 0x1a:   // ASCII EOF <br>case 0x00:// NULL <br>case 0xc6:// 850 - a tilde <br>case 0xc7: // 850 - A tilde <br>break; <br> <br>default: <br>if ( (ch&gt;=0x20) &amp;&amp; (ch&lt;=0x7F) ) <br>break; <br>if ( ch &gt;= 0x80 &amp;&amp; ch &lt;= 0xA5 ) <br>break; <br>if ( ch &gt;= 0xD0 &amp;&amp; ch &lt;= 0xD8 ) <br>break; <br>if ( ch &gt;= 0xE0 &amp;&amp; ch &lt;= 0xEF ) <br>break; <br>if ( ch &gt;= 0xB5 &amp;&amp; ch &lt;= 0xB7 ) <br>break; <br>locText = FALSE; <br>done = TRUE; <br>} <br> <br>}while (done == FALSE); <br> <br>if (locText) <br>Proc.bFileIsText = TRUE; <br> <br>_llseek (Proc.hFile, 0L, 0); <br> <br>return ( 0 ); <br>} <br> <br>VW_ENTRYSC VOID VW_ENTRYMOD VwStreamCloseFunc(SOFILE hFile, HPROC hProc) <br>{ <br>_lclose ( Proc.hFile ); <br>} <br> <br>VW_ENTRYSC SHORT VW_ENTRYMOD VwStreamSeekFunc(hFile,hProc) <br>SOFILEhFile; <br>HPROChProc; <br>{ <br>return((SHORT)_llseek(Proc.hFile,Proc.VwStreamSaveName.SeekSpot,0)); <br>} <br> <br>VW_ENTRYSC SHORT VW_ENTRYMOD VwStreamTellFunc(hFile,hProc) <br>SOFILEhFile; <br>HPROChProc; <br>{ <br>Proc.VwStreamSaveName.SeekSpot = _llseek(Proc.hFile,0L, 1); <br>return(0); <br>} <br> <br>/****************************************************************************** <br>*ASC_SECTION_FUNC      * <br>******************************************************************************/ <br>VW_ENTRYSC  SHORT  VW_ENTRYMODVwStreamSectionFunc (fp, hProc) <br>SOFILEfp; <br>HPROChProc; <br>{ <br>SOPutSectionType ( SO_PARAGRAPHS, hProc ); <br>return(0); <br>} <br> <br>VW_ENTRYSC  SHORT  VW_ENTRYMODVwStreamReadFunc (fp, hProc) <br>SOFILEfp; <br>HPROChProc; <br>{ <br>SHORTch; <br>char  chread[10]; <br>SHORTchCount; <br>SHORTchTabs; <br>SHORTtype, done; <br> <br>type = SO_PARABREAK; <br> <br>do { <br>chCount= 0; <br>chTabs= 0; <br>done= FALSE; <br> <br>do { <br>if (0==_lread (Proc.hFile, chread, 1) ) <br>ch=EOF; <br>else <br>ch=chread[0]; <br> <br>if ((ch &gt;= 0x20) &amp;&amp; (ch &lt;= 0x7e)) <br>{ <br>chCount++; <br>SOPutChar ( ch, hProc ); <br>} <br>else if (ch == 0x09) <br>{ <br>chCount++; <br>chTabs++; <br>SOPutSpecialCharX ( SO_CHTAB, SO_COUNT, hProc ); <br>} <br>else if (ch == 0x0c) <br>{ <br>chCount++; <br>SOPutSpecialCharX ( SO_CHHPAGE, SO_COUNT, hProc ); <br>} <br>else if (ch == EOF) <br>{ <br>type = SO_EOFBREAK; <br>done = TRUE; <br>} <br>else if (ch == 0x0a) <br>{ <br>if (Proc.AscSave.lastchar != 0x0d) <br>{ <br>done = TRUE; <br>} <br>else <br>{ <br>ch = 0x00; <br>} <br>} <br>else if (ch == 0x0d) <br>{ <br>if (Proc.AscSave.lastchar != 0x0a) <br>{ <br>done = TRUE; <br>} <br>else <br>{ <br>ch = 0x00; <br>} <br>} <br>else if (Proc.bFileIsText) <br>{ <br>// Put out logical extended TEXT characters ... <br>if ( ( ch &gt;= 0x80 &amp;&amp; ch &lt;= 0xA5 ) || <br>  ( ch &gt;= 0xD0 &amp;&amp; ch &lt;= 0xD8 ) || <br>  ( ch &gt;= 0xB5 &amp;&amp; ch &lt;= 0xB7 ) || <br>  ( ch == 0xC6) || <br>  ( ch == 0xC7) || <br>  ( ch &gt;= 0xE0 &amp;&amp; ch &lt;= 0xEF ) ) <br> <br>{ <br>chCount++; <br>SOPutChar ( ch, hProc ); <br>} <br>} <br> <br>if (chCount &gt; 2048 || chTabs &gt; 10) <br>done = TRUE; <br> <br>Proc.AscSave.lastchar = ch; <br> <br>} while ( !done ); <br> <br>} while ( SOPutBreak (type, (LONG) NULL, hProc) != SO_STOP ); <br> <br>return ( 0 ); <br> <br>}  /** end of file **/ <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
