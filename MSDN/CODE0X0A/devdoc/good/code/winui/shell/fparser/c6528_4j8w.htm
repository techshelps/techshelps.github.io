<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SODEFS.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6530"></a>SODEFS.H</h2>
<pre><code>/*------------------------------------------------------------------- <br>|OS Dependent Area <br>*/ <br> <br>#ifndef SODEFS_H <br>#define SODEFS_H <br> <br>#ifdef WIN16 <br>#define SO_ENTRYSC <br>#define SO_ENTRYMOD__export __far __cdecl <br>typedef unsigned longSOINT32U; <br>typedef signed longSOINT32S; <br>#endif /*WIN16*/ <br> <br>#ifdef WIN32 <br>#define SO_ENTRYSC__declspec(dllexport) <br>#define SO_ENTRYMOD__cdecl <br>typedef unsigned longSOINT32U; <br>typedef signed longSOINT32S; <br>#define HUGE <br>#endif /*WIN32*/ <br> <br>/*------------------------------------------------------------------- <br>|OS Independent Area <br>*/ <br> <br>#define SO_BEGINTOKEN0xFF <br> <br>#define SO_CHARATTR0 <br>#define SO_SPECIALCHAR1 <br>#define SO_CHARHEIGHT2 <br>#define SO_BREAK3 <br>#define SO_PARAALIGN4 <br>#define SO_PARAINDENT5 <br>#define SO_TABSTOPS6 <br>#define SO_MARGINS7 <br>#define SO_BEGINSUB8 <br>#define SO_ENDSUB9 <br> <br>#define SO_CHARX12 <br>#define SO_TAGBEGIN13 <br>#define SO_TAGEND14 <br> <br>#define SO_PARASPACING15 <br>#define SO_CHARFONTBYID 16 <br>#define SO_CHARFONTBYNAME17 <br> <br>#define SO_TABLE18 <br>#define SO_TABLEEND21 <br> <br>#define SO_GRAPHICOBJECT22 <br> <br>#define SO_GOTOPOSITION 23 <br>#define SO_DRAWLINE24 <br> <br>#define SO_ENDOFCHUNK0xFE <br> <br> <br>#define SO_TEXTCELL10/* these two #defines should be in the chunker stuff */ <br>#define SO_DATACELL11 <br>#define SO_EMPTYCELL15 <br> <br> <br>#define SO_CHTAB1 <br>#define SO_CHUNKNOWN2 <br>#define SO_CHSHYPHEN3 <br>#define SO_CHHPAGE4 <br>#define SO_CHHLINE5 <br>#define SO_CHHSPACE6 <br>#define SO_CHHHYPHEN7 <br>#define SO_CHPAGENUMBER 8 <br>#define SO_CHDATE9 <br>#define SO_CHTIME10 <br>#define SO_CHCELLTAB11 <br> <br> <br>/* NOTE:  There is code in chunker.c that relies on the fact that */ <br>/* the value of the largest #define for a character attribute will */ <br>/* not exceed 15. */ <br> <br>#define SO_BOLD 2 <br>#define SO_ITALIC3 <br>#define SO_UNDERLINE4 <br>#define SO_DUNDERLINE5 <br>#define SO_SMALLCAPS6 <br>#define SO_OUTLINE7 <br>#define SO_SHADOW8 <br>#define SO_CAPS 9 <br>#define SO_SUBSCRIPT10 <br>#define SO_SUPERSCRIPT11 <br>#define SO_STRIKEOUT12 <br>#define SO_WORDUNDERLINE13 <br>#define SO_DOTUNDERLINE 14 <br> <br>#define SO_ON1 <br>#define SO_OFF0 <br> <br>#define SO_YES1 <br>#define SO_NO0 <br> <br>#define SO_STOP 1 <br>#define SO_CONTINUE0 <br> <br>#define SO_ALIGNLEFT1 <br>#define SO_ALIGNRIGHT2 <br>#define SO_ALIGNCENTER3 <br>#define SO_ALIGNJUSTIFY 4 <br> <br>#define SO_TABLEFT1 <br>#define SO_TABRIGHT2 <br>#define SO_TABCENTER3 <br>#define SO_TABCHAR4 <br>#define SO_TABEMPTY5 <br> <br>#define SO_HEADER1 <br>#define SO_FOOTER2 <br>#define SO_FOOTNOTE3 <br>#define SO_COMMENT4 <br> <br>#define SO_LEFT 1 <br>#define SO_RIGHT2 <br>#define SO_BOTH 3 <br> <br>#define SO_WORDPROCESSOR120 <br>#define SO_SPREADSHEET121 <br>#define SO_DATABASE122 <br> <br>#define SO_PARAGRAPHS0 <br>#define SO_CELLS1 <br>#define SO_FIELDS2 <br>#define SO_BITMAP4 <br>#define SO_ARCHIVE5 <br>#define SO_VECTOR6 <br> <br>#define SO_PARABREAK1 <br>#define SO_EOFBREAK2 <br>#define SO_SECTIONBREAK 3 <br>#define SO_CELLBREAK4 <br>#define SO_RECORDBREAK5 <br>#define SO_SUBDOCBEGINBREAK6 <br>#define SO_SUBDOCENDBREAK7 <br>#define SO_SCANLINEBREAK8 <br>#define SO_ARCHIVEBREAK 9 <br>#define SO_VECTORBREAK10 <br>#define SO_TABLEROWBREAK19 <br>#define SO_TABLECELLBREAK20 <br> <br> <br>#define SOERROR_GENERAL 0 <br>#define SOERROR_BADFILE 1 <br>#define SOERROR_EOF2 <br> <br>#define SO_CELLLEFT0 <br>#define SO_CELLRIGHT1 <br>#define SO_CELLCENTER2 <br>#define SO_CELLFILL3 <br> <br>#define SO_CELLBOLD1 <br>#define SO_CELLITALIC2 <br>#define SO_CELLUNDERLINE4 <br>#define SO_CELLSTRIKEOUT8 <br> <br>#define SO_CELLINT32S0 <br>#define SO_CELLINT32U1 <br>#define SO_CELLIEEE4I2 <br>#define SO_CELLIEEE4M3 <br>#define SO_CELLIEEE8I4 <br>#define SO_CELLIEEE8M5 <br>#define SO_CELLIEEE10I6 <br>#define SO_CELLIEEE10M7 <br>#define SO_CELLBCD8I8 <br>#define SO_CELLEMPTY9 <br>#define SO_CELLERROR10 <br>#define SO_FIELDTEXTFIX 11 <br>#define SO_FIELDTEXTVAR 12 <br> <br> <br>#define SO_CELLNUMBER0 <br>#define SO_CELLDOLLARS1 <br>#define SO_CELLPERCENT2 <br>#define SO_CELLEXPONENT 3 <br>#define SO_CELLDECIMAL4 <br>#define SO_CELLDATETIME 5 <br>#define SO_CELLDATE6 <br>#define SO_CELLTIME7 <br>#define SO_CELLBOOL8 <br> <br>#define SO_CELLNEG_MINUS0 <br>#define SO_CELLNEG_PARENBIT0 <br>#define SO_CELLNEG_MINUSREDBIT1 <br>#define SO_CELLNEG_PARENREDBIT2 <br> <br> <br>#define SO_CELL1000SEP_NONE0 <br>#define SO_CELL1000SEP_COMMABIT3 <br> <br>/* MASK = 0xF0, bits 4,5,6,7 */ <br>#define SO_CELLMULT_MASK0xF0 <br> <br>#define SO_CELLMULT_10 <br>#define SO_CELLMULT_010x10 <br>#define SO_CELLMULT_50000x20 <br>#define SO_CELLMULT_500 0x30 <br>#define SO_CELLMULT_050x40 <br>#define SO_CELLMULT_005 0x50 <br>#define SO_CELLMULT_00050x60 <br>#define SO_CELLMULT_000050x70 <br>#define SO_CELLMULT_06250x80 <br>#define SO_CELLMULT_0156250x90 <br>#define SO_CELLMULT_00010xA0 <br> <br>#define SO_CELLDATESEP_SLASHBIT8 <br>#define SO_CELLDATESEP_MINUSBIT9 <br>#define SO_CELLDATESEP_PERIODBIT10 <br>#define SO_CELLDATESEP_SPACEBIT11 <br>#define SO_CELLDATESEP_NONE0 <br> <br>#define SO_CELLMONTH_FULLBIT12 <br>#define SO_CELLMONTH_ABBREVBIT13 <br>#define SO_CELLMONTH_NUMBERBIT14 <br>#define SO_CELLMONTH_NONE0 <br> <br>#define SO_CELLYEAR_FULLBIT15L <br>#define SO_CELLYEAR_ABBREVBIT16L <br>#define SO_CELLYEAR_NONE0 <br> <br>#define SO_HHMMBITBIT17L <br>#define SO_HHMMSSBITBIT18L <br>#define SO_AMPMBITBIT19L <br>#define SO_HMSBITBIT20L <br> <br>#define SO_CELLTIME_HHMM24SO_HHMMBIT <br>#define SO_CELLTIME_HHMMSS24SO_HHMMSSBIT <br>#define SO_CELLTIME_HHMMAM(SO_HHMMBIT | SO_AMPMBIT) <br>#define SO_CELLTIME_HHMMSSAM(SO_HHMMSSBIT | SO_AMPMBIT) <br>#define SO_CELLTIME_HHMMHMS(SO_HHMMBIT | SO_HMSBIT) <br>#define SO_CELLTIME_HHMMSSHMS(SO_HHMMSSBIT | SO_HMSBIT) <br>#define SO_CELLTIME_NONE0 <br> <br>#define SO_CELLDAY_NUMBERBIT21L <br>#define SO_CELLDAY_NONE 0 <br> <br>#define SO_CELLDAYOFWEEK_FULLBIT22L <br>#define SO_CELLDAYOFWEEK_ABBREV BIT23L <br>#define SO_CELLDAYOFWEEK_NONE0 <br> <br>/* The following values are stored in consecutive 3-bit pieces of an integer. */ <br> <br>/* MASK = 0x07 */ <br>#define SO_CELLDAYOFWEEK_SHIFT0 <br>#define SO_CELLDAYOFWEEK_MASK0x07 <br>#define SO_CELLDAYOFWEEK_11 <br>#define SO_CELLDAYOFWEEK_22 <br>#define SO_CELLDAYOFWEEK_33 <br>#define SO_CELLDAYOFWEEK_44 <br>#define SO_CELLDAYOFWEEK_55 <br> <br>/* MASK = 0x38 */ <br>#define SO_CELLMONTH_SHIFT3 <br>#define SO_CELLMONTH_MASK0x38 <br>#define SO_CELLMONTH_18/* (1&lt;&lt;3) */ <br>#define SO_CELLMONTH_216/* (2&lt;&lt;3) */ <br>#define SO_CELLMONTH_324/* (3&lt;&lt;3) */ <br>#define SO_CELLMONTH_432/* (4&lt;&lt;3) */ <br>#define SO_CELLMONTH_540/* (5&lt;&lt;3) */ <br> <br>/* MASK = 0x1C0 */ <br>#define SO_CELLDAY_SHIFT6 <br>#define SO_CELLDAY_MASK 0x1C0 <br>#define SO_CELLDAY_164/* (1&lt;&lt;6) */ <br>#define SO_CELLDAY_2128/* (2&lt;&lt;6) */ <br>#define SO_CELLDAY_3192/* (3&lt;&lt;6) */ <br>#define SO_CELLDAY_4256/* (4&lt;&lt;6) */ <br>#define SO_CELLDAY_5320/* (5&lt;&lt;6) */ <br> <br>/* MASK = 0xE00 */ <br>#define SO_CELLYEAR_SHIFT9 <br>#define SO_CELLYEAR_MASK0xE00 <br>#define SO_CELLYEAR_1512/* (1&lt;&lt;9) */ <br>#define SO_CELLYEAR_21024/* (2&lt;&lt;9) */ <br>#define SO_CELLYEAR_31536/* (3&lt;&lt;9) */ <br>#define SO_CELLYEAR_42048/* (4&lt;&lt;9) */ <br>#define SO_CELLYEAR_52560  /* (5&lt;&lt;9) */ <br> <br>/* MASK = 0x7000 */ <br>#define SO_CELLTIME_SHIFT12 <br>#define SO_CELLTIME_MASK0x7000 <br>#define SO_CELLTIME_14096  /* (1&lt;&lt;12) */ <br>#define SO_CELLTIME_28192  /* (2&lt;&lt;12) */ <br>#define SO_CELLTIME_312288 /* (3&lt;&lt;12) */ <br>#define SO_CELLTIME_416384 /* (4&lt;&lt;12) */ <br>#define SO_CELLTIME_520480 /* (5&lt;&lt;12) */ <br> <br> <br>/* <br> | Character sets. <br>*/ <br> <br>#define SO_PC1 <br>#define SO_WINDOWS3 <br>#define SO_DBCS5 <br> <br>/* <br>| SOSetDateBase FLAGS <br>*/ <br> <br>#define SO_LOTUSHELL0x0001 <br> <br>/* <br>| SOGetInfo Ids <br>*/ <br> <br>#define SOINFO_COLUMNRANGE  1 <br>#define SOINFO_STARTRECORD  2 <br> <br>/* <br>| SOPutCharX &amp; SOPutSpecialCHarX FLAGS <br>*/ <br> <br>#define SO_COUNTBIT0x0001 <br>#define SO_LIMITEDITBIT 0x0002 <br>#define SO_HIDDENBIT0x0004 <br> <br>#define SO_COUNTSO_COUNTBIT <br>#define SO_NOCOUNTSO_LIMITEDITBIT <br>#define SO_LIMITEDITSO_LIMITEDITBIT <br>#define SO_DELETESO_COUNTBIT <br>#define SO_NODELETE0 <br>#define SO_HIDDEN(SO_HIDDENBIT | SO_LIMITEDITBIT) <br>#define SO_NOHIDDEN0x0000 <br> <br> <br>/* <br>| font family <br>*/ <br> <br>#define SO_FAMILYUNKNOWN1 <br>#define SO_FAMILYROMAN2 <br>#define SO_FAMILYSWISS3 <br>#define SO_FAMILYMODERN 4 <br>#define SO_FAMILYSCRIPT 5 <br>#define SO_FAMILYDECORATIVE6 <br>#define SO_FAMILYSYMBOL 7 <br> <br>#define SO_FAMILYWINDOWS0x1000 <br> <br>#define SO_CHARSET_SHIFTJIS0x2000 <br>#define SO_CHARSET_HANGEUL0x4000 <br>#define SO_CHARSET_CHINESEBIG50x8000 <br> <br>/* <br>| line spacing types <br>*/ <br> <br>#define SO_HEIGHTAUTO1 <br>#define SO_HEIGHTATLEAST2 <br>#define SO_HEIGHTEXACTLY3 <br> <br>/* <br>| position flags <br>*/ <br>#define SOPOS_FROMLEFTEDGE0x01 <br>#define SOPOS_FROMTOPEDGE0x02 <br>#define SOPOS_FROMBASELINE0x04 <br> <br>typedef struct SOPAGEPOSITIONtag <br>{ <br>DWORD dwFlags; <br>LONG lXOffset; <br>LONG lYOffset; <br>} SOPAGEPOSITION, VWPTR * PSOPAGEPOSITION; <br> <br>/* <br>| Bitmap filter definitions <br>*/ <br> <br>/* wImageFlags */ <br>#define SO_BOTTOMTOTOP0x0001 <br>#define SO_GRAYSCALE0x0002 <br>#define SO_BLACKANDWHITE0x0004 <br>#define SO_COLORPALETTE 0x0008 <br>#define SO_RGBCOLOR0x0010 <br>#define SO_BGRCOLOR0x0020 <br>#define SO_WHITEZERO0x0040 <br> <br> <br> <br>/* <br>| Archive filter definitions <br>*/ <br> <br>#define SO_ARCENDOFRECORD0xFFFF <br> <br>#define SOARC_FILENAME1 <br>#define SOARC_FILEDATE2 <br>#define SOARC_FILETIME3 <br>#define SOARC_FILEPATH4 <br>#define SOARC_COMPRESSIONTYPE5 <br>#define SOARC_FILECOMMENT6 <br>#define SOARC_FILEMODDATE7 <br>#define SOARC_FILEMODTIME8 <br>#define SOARC_FILESIZE9 <br>#define SOARC_FILECOMPRESSSIZE10 <br>#define SOARC_FILECRC11 <br>#define SOARC_BUFFERSIZE12 <br>#define SOARC_CHECKSUM13 <br>#define SOARC_FILEOS14 <br>#define SOARC_ENCRYPTED 15 <br> <br> <br>/* <br>| Vector graphics stuff. <br>*/ <br> <br>/* <br>| Macros <br>*/ <br> <br>#ifdef WINDOWS <br>#define SORGB(r,g,b) ((SOCOLORREF)(((BYTE)(r)|((DWORD)(BYTE)(g)&lt;&lt;8))|(((DWORD)(BYTE)(b))&lt;&lt;16))) <br>#endif <br> <br>#define SOPALETTERGB(r,g,b)   (0x02000000L | SORGB(r,g,b)) <br>#define SOPALETTEINDEX(i)     ((SOCOLORREF)(0x01000000L | (DWORD)(WORD)(i))) <br>#define SOANGLETENTHS(n) ((SOANGLE)(n)) <br>#define SOSETRATIO(m,n) ((SORATIO)(((SORATIO)m&lt;&lt;16)|(SORATIO)(n))) <br> <br>#define SOREDFROMRGB(rgb) (BYTE)(rgb&amp;0x000000FF) <br>#define SOGREENFROMRGB(rgb) (BYTE)((rgb&amp;0x0000FF00)&gt;&gt;8) <br>#define SOBLUEFROMRGB(rgb) (BYTE)((rgb&amp;0x00FF0000)&gt;&gt;16) <br> <br>typedef DWORD SOCOLORREF; <br>typedef SHORTSOANGLE; <br>typedef DWORD SORATIO; <br> <br>typedef struct SORECTtag <br>{ <br>SHORT left; <br>SHORT top; <br>SHORT right; <br>SHORT bottom; <br>} SORECT, VWPTR *PSORECT; <br> <br>typedef struct SOPOINTtag <br>{ <br>SHORT x; <br>SHORT y; <br>} SOPOINT, VWPTR *PSOPOINT; <br> <br> <br>#define SOLF_FACESIZE  32 <br>typedef struct SOLOGFONTtag <br>{ <br>    SHORT     lfHeight; <br>    SHORT     lfWidth; <br>    SHORT     lfEscapement; <br>    SHORT     lfOrientation; <br>    SHORT     lfWeight; <br>    BYTE    lfItalic; <br>    BYTE    lfUnderline; <br>    BYTE    lfStrikeOut; <br>    BYTE    lfCharSet; <br>    BYTE    lfOutPrecision; <br>    BYTE    lfClipPrecision; <br>    BYTE    lfQuality; <br>    BYTE    lfPitchAndFamily; <br>    CHAR    lfFaceName[SOLF_FACESIZE]; <br>} SOLOGFONT, VWPTR *PSOLOGFONT; <br> <br>/* lfWeight values */ <br>#define SOLF_FW_NORMAL    400 <br>#define SOLF_FW_BOLD700 <br> <br>/* lfCharSet */ <br>#define SOLF_ANSI_CHARSET0 <br>#define SOLF_SYMBOL_CHARSET2 <br>#define SOLF_OEM_CHARSET255 <br> <br>/* lfOutPrecision */ <br>#define SOLF_OUT_DEFAULT_PRECIS 0 <br> <br>/* lfClipPrecision */ <br>#define SOLF_CLIP_DEFAULT_PRECIS0 <br>#define SOLF_CLIP_LH_ANGLES0x10 <br> <br>/* lfQuality */ <br>#define SOLF_DEFAULT_QUALITY0 <br>#define SOLF_DRAFT_QUALITY1 <br>#define SOLF_PROOF_QUALITY2 <br> <br>/* PitchAndFamily pitch values (low 4 bits) */ <br>#define SOLF_DEFAULT_PITCH0x00 <br>#define SOLF_FIXED_PITCH0x01 <br>#define SOLF_VARIABLE_PITCH0x02 <br> <br>/* PitchAndFamily family values (high 4 bits) */ <br>#define SOLF_FF_DECORATIVE0x00 <br>#define SOLF_FF_DONTCARE0x10 <br>#define SOLF_FF_MODERN0x20 <br>#define SOLF_FF_ROMAN0x30 <br>#define SOLF_FF_SCRIPT0x40 <br>#define SOLF_FF_SWISS0x50 <br> <br>typedef struct SOLOGPENtag <br>{ <br>SHORT loPenStyle; <br>SOPOINT loWidth; <br>SOCOLORREF loColor; <br>} SOLOGPEN, VWPTR *PSOLOGPEN; <br> <br>/* Pen Styles */ <br>#define SOPS_SOLID    0 <br>#define SOPS_DASH1 <br>#define SOPS_DOT      2 <br>#define SOPS_DASHDOT 3 <br>#define SOPS_DASHDOTDOT       4 <br>#define SOPS_NULL    5 <br>#define SOPS_INSIDEFRAME    6 <br> <br>typedef struct SOLOGBRUSHtag <br>{ <br>WORD lbStyle; <br>SOCOLORREF lbColor; <br>SHORT lbHatch; <br>} SOLOGBRUSH, VWPTR *PSOLOGBRUSH; <br> <br>/* Brush Styles */ <br>#define SOBS_SOLID    0 <br>#define SOBS_NULL    1 <br>#define SOBS_HOLLOWSOBS_NULL <br>#define SOBS_HATCHED 2 <br>#define SOBS_PATTERN 3 <br>#define SOBS_INDEXED 4 <br>#define SOBS_DIBPATTERN  5 <br> <br>/* Hatch Styles */ <br>#define SOHS_HORIZONTAL       0 <br>#define SOHS_VERTICAL    1 <br>#define SOHS_FDIAGONAL      2 <br>#define SOHS_BDIAGONAL      3 <br>#define SOHS_CROSS 4 <br>#define SOHS_DIAGCROSS      5 <br> <br> <br>typedef struct SOVECTORHEADERtag <br>{ <br>WORD wStructSize; <br>SORECT  BoundingRect; <br>WORD wHDpi; <br>WORD wVDpi; <br>WORD wImageFlags; <br>SOCOLORREF BkgColor; <br>} SOVECTORHEADER, VWPTR *PSOVECTORHEADER; <br> <br>/* wImageFlags values */ <br>#define SO_VECTORRGBCOLORBIT0 <br>#define SO_VECTORCOLORPALETTEBIT1 <br>#define SO_YISUPBIT2 <br>#define SO_XISLEFTBIT3 <br> <br>typedef struct SOARCINFOtag <br>{ <br>SORECT  Rect; <br>SOANGLE StartAngle; <br>SOANGLE EndAngle; <br>} SOARCINFO, VWPTR *PSOARCINFO; <br> <br>typedef struct SOTEXTINRECTtag <br>{ <br>SORECT  Rect; <br>WORD wFormat; <br>SHORT nTextLength; <br>} SOTEXTINRECT, VWPTR *PSOTEXTINRECT; <br> <br>/* wFormat values */ <br>#define SODT_TOP    0x0000 <br>#define SODT_LEFT    0x0000 <br>#define SODT_CENTER0x0001 <br>#define SODT_RIGHT    0x0002 <br>#define SODT_VCENTER 0x0004 <br>#define SODT_BOTTOM0x0008 <br>#define SODT_WORDBREAK 0x0010 <br>#define SODT_SINGLELINE  0x0020 <br>#define SODT_EXPANDTABS  0x0040 <br>#define SODT_TABSTOP 0x0080 <br>#define SODT_NOCLIP0x0100 <br>#define SODT_EXTERNALLEADING  0x0200 <br>#define SODT_CALCRECT 0x0400 <br>#define SODT_NOPREFIX 0x0800 <br>#define SODT_INTERNAL 0x1000 <br> <br>/* PolyFillMode values */ <br>#define SOPF_ALTERNATE 1 <br>#define SOPF_WINDING 2 <br> <br>/* DrawMode values */ <br>#define SOR2_BLACK 1 <br>#define SOR2_NOTMERGEPEN      2 <br>#define SOR2_MASKNOTPEN       3 <br>#define SOR2_NOTCOPYPEN       4 <br>#define SOR2_MASKPENNOT       5 <br>#define SOR2_NOT      6 <br>#define SOR2_XORPEN  7 <br>#define SOR2_NOTMASKPEN       8 <br>#define SOR2_MASKPEN 9 <br>#define SOR2_NOTXORPEN      10 <br>#define SOR2_NOP      11 <br>#define SOR2_MERGENOTPEN      12 <br>#define SOR2_COPYPEN 13 <br>#define SOR2_MERGEPENNOT      14 <br>#define SOR2_MERGEPEN    15 <br>#define SOR2_WHITE 16 <br> <br>typedef struct SOTEXTATPOINTtag <br>{ <br>SOPOINT Point; <br>WORD wFormat; <br>SHORT nTextLength; <br>} SOTEXTATPOINT, VWPTR *PSOTEXTATPOINT; <br> <br>typedef struct SOTEXTATARCANGLEtag <br>{ <br>SOARCINFO ArcInfo; <br>WORD wFormat; <br>SHORT nTextLength; <br>} SOTEXTATARCANGLE, VWPTR *PSOTEXTATARCANGLE; <br> <br>/* Text Alignment Options */ <br>#define SOTA_NOUPDATECP   0x0000 <br>#define SOTA_UPDATECP  0x0001 <br>#define SOTA_LEFT 0x0000 <br>#define SOTA_RIGHT 0x0002 <br>#define SOTA_CENTER0x0006 <br>#define SOTA_TOP0x0000 <br>#define SOTA_BOTTOM0x0008 <br>#define SOTA_BASELINE  0x0018 <br> <br>typedef structSOSPOLYINFOtag <br>{ <br>WORD wFormat; <br>SHORT nPoints; <br>} SOPOLYINFO, VWPTR *PSOPOLYINFO; <br> <br>/* Poly object types */ <br>#define SOPT_POLYLINE1 <br>#define SOPT_POLYGON2 <br>#define SOPT_BEZIEROPEN 3 <br>#define SOPT_BEZIERCLOSE4 <br>#define SOPT_SPLINEOPEN 5 <br>#define SOPT_SPLINECLOSE6 <br>#define SOPT_CPPOLYLINE 7/* Current Point polys */ <br>#define SOPT_CPPOLYGON8 <br> <br>/* Background mode values */ <br>#define SOBK_TRANSPARENT1 <br>#define SOBK_OPAQUE2 <br> <br> <br>typedef structSOCPTEXTATPOINTtag <br>{ <br>WORD wFormat; <br>SHORT nTextLength; <br>} SOCPTEXTATPOINT,VWPTR *PSOCPTEXTATPOINT; <br> <br>typedef struct SOCPARCANGLEtag <br>{ <br>SOPOINT Center; <br>SOANGLE SweepAngle; <br>} SOCPARCANGLE, VWPTR *PSOCPARCANGLE; <br> <br>typedef struct SOCPPIEANGLEtag <br>{ <br>SOPOINT Radius; <br>SOANGLE StartAngle; <br>SOANGLE SweepAngle; <br>} SOCPPIEANGLE, VWPTR *PSOCPPIEANGLE; <br> <br>typedef struct SOTRANSFORMtag <br>{ <br>WORD wTransformFlags; <br>SOPOINT Origin; <br>SHORT xOffset; <br>SHORT yOffset; <br>SORATIO xScale; <br>SORATIO yScale; <br>SORATIO xSkew; <br>SORATIO ySkew; <br>SOANGLE RotationAngle; <br>} SOTRANSFORM, VWPTR *PSOTRANSFORM; <br> <br>/* Transformation flags */ <br>#define SOTF_NOTRANSFORMBIT0 <br>#define SOTF_ROTATEBIT1 <br>#define SOTF_XOFFSETBIT2 <br>#define SOTF_YOFFSETBIT3 <br>#define SOTF_XSCALEBIT4 <br>#define SOTF_YSCALEBIT5 <br>#define SOTF_XSKEWBIT6 <br>#define SOTF_YSKEWBIT7 <br> <br>/* Possible values for the clip mode */ <br>#define SO_DONOTCLIP0 <br>#define SO_CLIPTOPATH1 <br> <br>/* Possible values for the point relation attribute */ <br>#define SOPR_ABSOLUTE0 <br>#define SOPR_RELATIVE1 <br> <br>/* Possible values for the wDrawPathFlags */ <br>#define SODP_STROKEBIT0 <br>#define SODP_FILLBIT1 <br> <br>typedef struct SOGROUPINFOtag <br>{ <br>WORD wStructSize; <br>SORECT  BoundingRect; <br>SHORT nTransforms; <br>} SOGROUPINFO, VWPTR *PSOGROUPINFO; <br> <br>typedef struct SOPATHINFOtag <br>{ <br>WORD wStructSize; <br>SORECT  BoundingRect; <br>SHORT nTransforms; <br>} SOPATHINFO, VWPTR *PSOPATHINFO; <br> <br>#define SOFF_FIXUPBOUNDSBIT0 <br> <br>typedef struct SOFRAMEINFOtag <br>{ <br>SORECT  BoundingRect; <br>WORD wFlags; <br>WORD OriginalWidth; <br>SOANGLE RotationAngle; <br>SOPOINT ReferencePoint; <br>} SOFRAMEINFO, VWPTR *PSOFRAMEINFO; <br> <br>typedef struct SOMPARAINDENTStag <br>{ <br>SHORT FirstLineIndent; <br>SHORT LeftIndent; <br>SHORT RightIndent; <br>} SOMPARAINDENTS, VWPTR *PSOMPARAINDENTS; <br> <br>typedef struct SOMPARASPACINGtag <br>{ <br>WORD LineSpaceAdjust; <br>WORD ParaSpaceAdjust; <br>} SOMPARASPACING, VWPTR *PSOMPARASPACING; <br> <br>/* Maximum Points provided by a filter in one SOPOINTS object call */ <br>#define SOMAXPOINTS128 <br> <br>/* SOVectorAttr Id's */ <br>#define SO_SELECTFONT0x100 <br>#define SO_SELECTPEN0x101 <br>#define SO_SELECTBRUSH0x102 <br>#define SO_POLYFILLMODE 0x103 <br>#define SO_TEXTCHAREXTRA0x104 <br>#define SO_DRAWMODE0x105 <br>#define SO_TEXTCOLOR0x106 <br>#define SO_BKMODE0x107 <br>#define SO_BKCOLOR0x108 <br>#define SO_OBJECTTRANSFORM0x109 <br>#define SO_CLIPMODE0x10A <br>#define SO_POINTRELATION0x10B <br>#define SO_MPARAINDENT0x10C <br>#define SO_MPARAALIGN0x10D <br>#define SO_MPARASPACING 0x10E <br> <br>/* SOVectorObject Id's */ <br>#define SO_ARC0x300 <br>#define SO_CHORD0x301 <br>#define SO_TEXTINRECT0x302 <br>#define SO_ELLIPSE0x303 <br>#define SO_FLOODFILL0x304 <br>#define SO_LINE 0x305 <br>#define SO_PIE0x306 <br>#define SO_STARTPOLY0x307 <br>#define SO_ENDPOLY0x308 <br>#define SO_RECTANGLE0x309 <br>#define SO_BEGINPATH0x30A <br>#define SO_ENDPATH0x30B <br>#define SO_CLOSESUBPATH 0x30C <br>#define SO_DRAWPATH0x30D <br>#define SO_BEGINGROUP0x30E <br>#define SO_ENDGROUP0x30F <br>#define SO_ROUNDRECT0x310 <br>#define SO_SETPIXEL0x311 <br>#define SO_TEXTATPOINT0x312 <br>#define SO_POINTS0x313 <br>#define SO_ARCANGLE0x314 <br>#define SO_CHORDANGLE0x315 <br>#define SO_PIEANGLE0x316 <br>#define SO_CPSET0x317 <br>#define SO_CPLINE0x318 <br>#define SO_CPRECTANGLE0x319 <br>#define SO_CPTEXTATPOINT0x31A <br>#define SO_CPELLIPSE0x31B <br>#define SO_CPARCTRIPLE0x31C <br>#define SO_CPARCANGLE0x31D <br>#define SO_CPPIEANGLE0x31E <br>#define SO_ARCCLOCKWISE 0x31F <br>#define SO_ARCANGLECLOCKWISE0x320 <br>#define SO_TEXTATARCANGLE0x321 <br>#define SO_BEGINSYMBOL0x322 <br>#define SO_ENDSYMBOL0x323 <br>#define SO_BEGINTEXTFRAME0x324 <br>#define SO_ENDTEXTFRAME 0x325 <br>#define SO_TEXTINPARA0x326 <br>#define SO_PARAEND0x327 <br> <br>#defineSO_ARCTRIPLE0x328 <br>#defineSO_PIETRIPLE0x329 <br>#defineSO_CHORDTRIPLE0x32A <br>#defineSO_ELLIPSERADII0x32B <br>#defineSO_ARCRADII0x32C <br>#defineSO_PIERADII0x32D <br>#defineSO_CHORDRADII0x32E <br> <br> <br>#define SO_VECTORENDOFCHUNK0xFFFF <br> <br>/* <br>| SO Header info <br>*/ <br>#define SOHDR_ARCNUMFILES1 <br>#define SOHDR_ARCCREATEDATE2 <br>#define SOHDR_ARCMODTIME3 <br>#define SOHDR_ARCTYPE4 <br>#define SOHDR_ARCOS5 <br>#define SOHDR_ARCCOMMENT6 <br>#define SOHDR_ARCVERSION7 <br> <br> <br>/* <br>|  Bored-er definitions <br>*/ <br> <br>#define SO_BORDERSINGLE 0x0000// Default <br>#define SO_BORDERNONE0x0001 <br>#define SO_BORDERDOUBLE 0x0002 <br>#define SO_BORDERHAIRLINE0x0004 <br>#define SO_BORDERTHICK0x0008 <br>#define SO_BORDERSHADOW 0x0010 <br>#define SO_BORDERDOTTED 0x0020 <br>#define SO_BORDERPRIORITY0x0040 <br> <br>/* <br>| Table stuff. <br>*/ <br>#define SO_MERGELEFT0x0001 <br>#define SO_MERGERIGHT0x0002 <br>#define SO_MERGEABOVE0x0004 <br>#define SO_MERGEBELOW0x0008 <br> <br>typedef struct SOBORDERtag <br>{ <br>WORD wWidth; // Width of border in twips <br>SOCOLORREF rgbColor; // Color of border <br>WORD wFlags; // Specifies the type of border and the edges to which it applies. <br> <br>} SOBORDER, VWPTR * PSOBORDER; <br> <br> <br> <br>typedef struct SOTABLECELLINFOtag <br>{ <br>WORD wWidth; // Width of the cell, in twips <br>WORD wMerge; // Bitfield that indicates whether the cell should be merged with any of the cells around it.Possible flags are SO_MERGELEFT, SO_MERGERIGHT, SO_MERGEABOVE, and SO_MERGEBELOW. <br>WORD wShading; // Intensity value for background shading, in range of 0-255, where a value of zero indicates that there is no background shading. <br>SOBORDER LeftBorder; // Specifies left border <br>SOBORDER RightBorder; // Specifies right border <br>SOBORDER TopBorder; // Specifies top border <br>SOBORDER BottomBorder; // Specifies bottom border <br> <br>} SOTABLECELLINFO, VWPTR * PSOTABLECELLINFO, HUGE * HPSOTABLECELLINFO; <br> <br> <br>/* <br>| SOTAB structure <br>*/ <br> <br>typedef struct SOTABtag <br>{ <br>WORD wType; <br>WORD wChar; <br>WORD wLeader; <br>DWORD dwOffset; <br>} SOTAB, VWPTR * PSOTAB; <br> <br>/* <br>| SOFILTERINFO structure <br>*/ <br> <br>typedef struct SOFILTERINFOtag <br>{ <br>WORD wFilterType; <br>WORD wFilterCharSet; <br>CHAR szFilterName[32]; <br>} SOFILTERINFO, VWPTR * PSOFILTERINFO; <br> <br>/* <br>| SOCOLUMN structure <br>*/ <br> <br>typedef struct SOCOLUMNtag <br>{ <br>WORD wStructSize; <br>LONG dwWidth; <br>CHAR szName[40]; <br>} SOCOLUMN, VWPTR * PSOCOLUMN; <br> <br>/* <br>| SOFIELD structure <br>*/ <br> <br>typedef struct SOFIELDtag <br>{ <br>WORD wStructSize; <br>LONG dwWidth; <br>CHAR szName[40]; <br>WORD wStorage; <br>WORD wDisplay; <br>DWORD dwSubDisplay; <br>WORD wPrecision; <br>WORD wAlignment; <br>} SOFIELD, VWPTR * PSOFIELD; <br> <br>/* <br>| SOTEXTCELL structure <br>*/ <br> <br>typedef struct SOTEXTCELLtag <br>{ <br>WORD wStructSize; <br>WORD wAlignment; <br>WORD wAttribute; <br>} SOTEXTCELL, VWPTR * PSOTEXTCELL; <br> <br>/* <br>| SODATACELL structure <br>*/ <br> <br>typedef union SONUMBERUNIONtag <br>{ <br>SOINT32S  Int32S; <br>SOINT32U  Int32U; <br>BYTE  IEEE4[4]; <br>BYTE  IEEE8[8]; <br>BYTE  IEEE10[10]; <br>BYTE  BCD8[8]; <br>} SONUMBERUNION, VWPTR * PSONUMBERUNION; <br> <br>typedef struct SODATACELLtag <br>{ <br>WORD wStructSize; <br>WORD wStorage; <br>WORD wDisplay; <br>DWORD dwSubDisplay; <br>WORD wPrecision; <br>WORD wAlignment; <br>WORD wAttribute; <br>/* <br>union <br>{ <br>SOINT32S  Int32S; <br>SOINT32U  Int32U; <br>BYTE  IEEE4[4]; <br>BYTE  IEEE8[8]; <br>BYTE  IEEE10[10]; <br>BYTE  BCD8[8]; <br>} uStorage; <br>*/ <br>SONUMBERUNIONuStorage; <br>} SODATACELL, VWPTR * PSODATACELL; <br> <br>typedef VOID FAR * SOFILE; <br> <br>/* Bitmap graphics header */ <br>typedef struct tagSOBITMAPHEADER <br>{ <br>WORD wStructSize; <br>WORD wImageFlags; <br>WORD wImageWidth; <br>WORD wImageLength; <br>WORD wTileWidth; <br>WORD wTileLength; <br>WORD wBitsPerPixel; <br>WORD wNPlanes; <br>WORD wHDpi; <br>WORD wVDpi; <br>/** <br>WORD wEncoding; <br>WORD wImageLeft; <br>WORD wImageTop; <br>WORD wHScreenSize; <br>WORD wVScreenSize; <br>**/ <br>}SOBITMAPHEADER, VWPTR * PSOBITMAPHEADER; <br> <br>/* <br>|Structure defined for the DO special function for ARCHIVE formats <br>*/ <br> <br>typedef struct tagSODOSPECIALARC <br>{ <br>SOFILE  hOutFile; <br>HANDLE  hFileName; <br>LPSTR lpFileName; <br>WORD wOptFlags; <br>WORD wRecordNum; <br>DWORD dwIndex; <br>} SODOSPECIALARC, VWPTR * PSODOSPECIALARC; <br> <br> <br>/* <br> | <br> | Embedded objects <br> | <br>*/ <br> <br> <br> <br>#define SO_MAINTAINASPECT0x0001// image aspect ratio is preserved <br>#define SO_CENTERIMAGE0x0002// if set, image is centered in its final rectangle. <br> <br>#define SOOBJECT_GRAPHIC0x0001 <br>#define SOOBJECT_OLE0x0002 <br>#define SOOBJECT_GRAPHIC_AND_OLE0x0003 <br> <br>#define SOOBJECT_OLESTATIC0x0001 <br> <br>typedef struct SOOBJECTLOCtag <br>{ <br>BOOL bLink; <br>BYTE szFile[144]; <br>DWORD dwOffset; <br>DWORD dwLength; <br>} SOOBJECTLOC, VWPTR * PSOOBJECTLOC; <br> <br>typedef struct SOGRAPHICtag <br>{ <br>WORD wId; <br>DWORD dwOrgHeight; <br>DWORD dwOrgWidth; <br>LONG lCropTop; <br>LONG lCropLeft; <br>LONG lCropBottom; <br>LONG lCropRight; <br>DWORD dwFinalHeight; <br>DWORD dwFinalWidth; <br>SOBORDER soLeftBorder; <br>SOBORDER soTopBorder; <br>SOBORDER soBottomBorder; <br>SOBORDER soRightBorder; <br>DWORD dwFlags; <br>} SOGRAPHIC, VWPTR * PSOGRAPHIC; <br> <br>typedef struct SOGRAPHICOBJECTtag <br>{ <br>WORD wStructSize; <br>DWORD dwFlags; <br>DWORD dwType; <br>SOGRAPHIC soGraphic; <br>SOOBJECTLOC soGraphicLoc; <br>SOOBJECTLOC soOLELoc; <br>} SOGRAPHICOBJECT, VWPTR * PSOGRAPHICOBJECT; <br> <br> <br>#define SOPUTCHAR1 <br>#define SOPUTCHARX2 <br>#define SOPUTSPECIALCHARX3 <br>#define SOPUTCHARATTR4 <br>#define SOPUTCHARHEIGHT 5 <br>#define SOPUTPARAALIGN6 <br>#define SOPUTPARAINDENTS7 <br>#define SOSTARTTABSTOPS 8 <br>#define SOENDTABSTOPS9 <br>#define SOPUTTABSTOP10 <br>#define SOPUTMARGINS11 <br>#define SOPUTSUBDOCINFO 12 <br>#define SOPUTBREAK13 <br>#define SOPUTDATACELL14 <br>#define SOPUTTEXTCELL15 <br>#define SOPUTMORETEXT16 <br>#define SOPUTFIELD17 <br>#define SOPUTVARFIELD18 <br>#define SOPUTMOREVARFIELD19 <br>#define SOSTARTCOLUMNINFO20 <br>#define SOSTARTFIELDINFO21 <br>#define SOPUTCOLUMNINFO 22 <br>#define SOPUTFIELDINFO23 <br>#define SOENDCOLUMNINFO 24 <br>#define SOENDFIELDINFO25 <br>#define SOPUTSECTIONTYPE26 <br>#define SOPUTSECTIONNAME27 <br>#define SOSETDATEBASE28 <br>#define SOBAILOUT29 <br>#define SOTAGBEGIN30 <br>#define SOTAGEND31 <br>#define SOGETINFO32 <br>#define SOPUTSTRING33 <br>#define SUUSERSAVEDATA34 <br>#define SUUSERRETRIEVEDATA35 <br>#define SOPUTBITMAPHEADER36 <br>#define SOSTARTPALETTE37 <br>#define SOPUTPALETTEENTRY38 <br>#define SOENDPALETTE39 <br>#define SOPUTSCANLINEDATA40 <br>#define SOSTARTFONTTABLE41 <br>#define SOPUTFONTTABLEENTRY42 <br>#define SOENDFONTTABLE43 <br>#define SOPUTCHARFONTBYID44 <br>#define SOPUTCHARFONTBYNAME45 <br>#define SOPUTPARASPACING46 <br>#define SOPUTARCHIVEFIELD47 <br>#define SOSTARTHDRINFO48 <br>#define SOENDHDRINFO49 <br>#define SOPUTHDRENTRY50 <br>#define SOPUTVECTORHEADER51 <br>#define SOVECTOROBJECT52 <br>#define SOVECTORATTR53 <br>#define SOBEGINTABLE54 <br>#define SOENDTABLE55 <br>#define SOPUTTABLEROWFORMAT56 <br>#define SOPUTTABLECELLINFO57 <br>#define SOPUTGRAPHICOBJECT58 <br>#define SOGOTOPOSITION59 <br>#define SODRAWLINE60 <br> <br>typedef struct SORTNStag <br>{ <br>VOID (SO_ENTRYMOD * SOPutChar    )(WORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutCharX      )(WORD, WORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutSpecialCharX )(WORD, WORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutCharAttr     )(WORD, WORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutCharHeight   )(WORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutParaAlign    )(WORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutParaIndents  )(DWORD, DWORD, DWORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOStartTabStops   )(DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOEndTabStops     )(DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutTabStop     )(PSOTAB, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutMargins     )(DWORD, DWORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutSubdocInfo   )(WORD, WORD, DWORD, DWORD); <br>WORD (SO_ENTRYMOD * SOPutBreak      )(WORD, DWORD, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutTextCell     )(PSOTEXTCELL,WORD,CHAR VWPTR *,WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutMoreText     )(WORD,CHAR VWPTR *,WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutDataCell     )(PSODATACELL,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutField      )(VOID VWPTR *,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutVarField     )(VOID VWPTR *,WORD,WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutMoreVarField )(VOID VWPTR *,WORD,WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOStartColumnInfo )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOStartFieldInfo  )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutColumnInfo   )(PSOCOLUMN,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutFieldInfo    )(PSOFIELD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOEndColumnInfo   )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOEndFieldInfo    )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutSectionType  )(WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutSectionName  )(CHAR VWPTR *,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOSetDateBase     )(DWORD,WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOBailOut    )(WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOTagBegin      )(DWORD,DWORD,DWORD); </code></pre>
<p>
</p>
<pre><code>VOID (SO_ENTRYMOD * SOTagEnd  )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOGetInfo    )(WORD,VOID VWPTR *,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutString     )(LPSTR, WORD, DWORD, DWORD); <br>WORD (SO_ENTRYMOD * SUUserSaveData    )(VOID VWPTR *,DWORD,DWORD); <br>WORD (SO_ENTRYMOD * SUUserRetrieveData)(WORD,VOID VWPTR *,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutBitmapHeader )(PSOBITMAPHEADER, DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOStartPalette    )(DWORD, DWORD); <br>VOID (SO_ENTRYMOD * SOPutPaletteEntry )(CHAR,CHAR,CHAR,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOEndPalette     )(DWORD,DWORD); <br>WORD (SO_ENTRYMOD * SOPutScanLineData )(VOID VWPTR *,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOStartFontTable )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutFontTableEntry)(DWORD,WORD,LPSTR,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOEndFontTable )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutCharFontById )(DWORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutCharFontByName)(WORD,LPSTR,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutParaSpacing )(WORD,DWORD,DWORD,DWORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutArchiveField )(WORD,WORD,LPSTR,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOStartHdrInfo )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOEndHdrInfo )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutHdrEntry )(LPSTR,LPSTR,WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutVectorHeader )(PSOVECTORHEADER,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOVectorObject )(SHORT,WORD,VOID VWPTR *,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOVectorAttr )(SHORT,WORD,VOID VWPTR *,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOBeginTable )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOEndTable  )(DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutTableRowFormat)(LONG,WORD,WORD,WORD,WORD,WORD,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutTableCellInfo  )(PSOTABLECELLINFO,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOPutGraphicObject  )(PSOGRAPHICOBJECT,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SOGoToPosition )(PSOPAGEPOSITION,DWORD,DWORD); <br>VOID (SO_ENTRYMOD * SODrawLine  )(PSOPAGEPOSITION,SOCOLORREF,WORD,DWORD,DWORD,DWORD,DWORD); <br>} SORTNS; <br> <br>#endif /*SO_DEFS.H*/ <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
