<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CLSFACT.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6451"></a>CLSFACT.CPP</h2>
<pre><code>/************************************************************************** <br>   THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>   ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>   PARTICULAR PURPOSE. <br> <br>   Copyright 1997 Microsoft Corporation.  All Rights Reserved. <br>**************************************************************************/ <br> <br>/************************************************************************** <br> <br>   File:          ClsFact.cpp <br>    <br>   Description:   Implements CClassFactory. <br> <br>**************************************************************************/ <br> <br>/************************************************************************** <br>   #include statements <br>**************************************************************************/ <br> <br>#include "ClsFact.h" <br>#include "Guid.h" <br> <br>/************************************************************************** <br>   private function prototypes <br>**************************************************************************/ <br> <br>/************************************************************************** <br>   global variables <br>**************************************************************************/ <br> <br>/////////////////////////////////////////////////////////////////////////// <br>// <br>// IClassFactory implementation <br>// <br> <br>/************************************************************************** <br> <br>   CClassFactory::CClassFactory <br> <br>**************************************************************************/ <br> <br>CClassFactory::CClassFactory(CLSID clsid) <br>{ <br>m_clsidObject = clsid; <br>m_ObjRefCount = 1; <br>g_DllRefCount++; <br>} <br> <br>/************************************************************************** <br> <br>   CClassFactory::~CClassFactory <br> <br>**************************************************************************/ <br> <br>CClassFactory::~CClassFactory() <br>{ <br>g_DllRefCount--; <br>} <br> <br>/************************************************************************** <br> <br>   CClassFactory::QueryInterface <br> <br>**************************************************************************/ <br> <br>STDMETHODIMP CClassFactory::QueryInterface(REFIID riid, LPVOID *ppReturn) <br>{ <br>*ppReturn = NULL; <br> <br>if(IsEqualIID(riid, IID_IUnknown)) <br>   { <br>   *ppReturn = this; <br>   } <br>    <br>else if(IsEqualIID(riid, IID_IClassFactory)) <br>   { <br>   *ppReturn = (IClassFactory*)this; <br>   }    <br> <br>if(*ppReturn) <br>   { <br>   (*(LPUNKNOWN*)ppReturn)-&gt;AddRef(); <br>   return S_OK; <br>   } <br> <br>return E_NOINTERFACE; <br>}                                              <br> <br>/************************************************************************** <br> <br>   CClassFactory::AddRef <br> <br>**************************************************************************/ <br> <br>STDMETHODIMP_(DWORD) CClassFactory::AddRef() <br>{ <br>return ++m_ObjRefCount; <br>} <br> <br> <br>/************************************************************************** <br> <br>   CClassFactory::Release <br> <br>**************************************************************************/ <br> <br>STDMETHODIMP_(DWORD) CClassFactory::Release() <br>{ <br>if(--m_ObjRefCount == 0) <br>   { <br>   delete this; <br>   return 0; <br>   } <br>    <br>return m_ObjRefCount; <br>} <br> <br>/************************************************************************** <br> <br>   CClassFactory::CreateInstance <br> <br>**************************************************************************/ <br> <br>STDMETHODIMP CClassFactory::CreateInstance(  LPUNKNOWN pUnknown,  <br>                                             REFIID riid,  <br>                                             LPVOID *ppObject) <br>{ <br>HRESULT  hResult = E_FAIL; <br>LPVOID   pTemp = NULL; <br> <br>*ppObject = NULL; <br> <br>if(pUnknown != NULL) <br>   return CLASS_E_NOAGGREGATION; <br> <br>//create the proper object <br>if(IsEqualCLSID(m_clsidObject, CLSID_SampleDeskBand)) <br>   { <br>   CDeskBand *pDeskBand = new CDeskBand(); <br>   if(NULL == pDeskBand) <br>      return E_OUTOFMEMORY; <br>    <br>   pTemp = pDeskBand; <br>   } <br>   <br>if(IsEqualCLSID(m_clsidObject, CLSID_SampleExplorerBar)) <br>   { <br>   CExplorerBar *pExplorerBar = new CExplorerBar(); <br>   if(NULL == pExplorerBar) <br>      return E_OUTOFMEMORY; <br>    <br>   pTemp = pExplorerBar; <br>   } <br>   <br>if(IsEqualCLSID(m_clsidObject, CLSID_SampleCommBand)) <br>   { <br>   CCommBand *pCommBand = new CCommBand(); <br>   if(NULL == pCommBand) <br>      return E_OUTOFMEMORY; <br>    <br>   pTemp = pCommBand; <br>   } <br>   <br>if(pTemp) <br>   { <br>   //get the QueryInterface return for our return value <br>   hResult = ((LPUNKNOWN)pTemp)-&gt;QueryInterface(riid, ppObject); <br> <br>   //call Release to decement the ref count <br>   ((LPUNKNOWN)pTemp)-&gt;Release(); <br>   } <br> <br>return hResult; <br>} <br> <br>/************************************************************************** <br> <br>   CClassFactory::LockServer <br> <br>**************************************************************************/ <br> <br>STDMETHODIMP CClassFactory::LockServer(BOOL) <br>{ <br>return E_NOTIMPL; <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
