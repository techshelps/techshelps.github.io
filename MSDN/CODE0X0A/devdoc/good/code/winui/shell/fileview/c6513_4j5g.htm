<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CSTATHLP.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6514"></a>CSTATHLP.H</h2>
<pre><code>//THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>//ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>//THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1994 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>//PROGRAM: CSTATHLP.H <br>// <br>//PURPOSE: Class and structure definitions for the CStatusHelper class <br>//  that manages messages to display in the status bar.   <br>// <br>//PLATFORMS:Windows 95 <br>// <br>//SPECIAL INSTRUCTIONS: N/A <br>// <br>#ifndef _CSTATHLP_H_ <br>#define _CSTATHLP_H_ <br> <br> <br>//For loading the RCDATA mapping menu item IDs to string IDs <br>typedef struct tagSTATMESSAGEMAP <br>    { <br>    USHORT      uID; <br>    USHORT      idsMsg; <br>    } STATMESSAGEMAP, *PSTATMESSAGEMAP; <br> <br>//Array mapping menu handles to menu item IDs <br>typedef struct tagPOPUPMENUMAP <br>    { <br>    HMENU       hMenu; <br>    USHORT      uID; <br>    } POPUPMENUMAP, *PPOPUPMENUMAP; <br> <br> <br>/* <br> * The CStatusHelper class simplifies run-time management of <br> * status bar messages by setting up a mapping between popup <br> * menu handles and item IDs to resource string IDs.  The <br> * MenuSelect member processes any WM_MENUSELECT message <br> * automatically to display the appropriate message. <br> */ <br> <br>class CStatusHelper <br>    { <br>    protected: <br>        HWND                m_hWnd;             //hWnd of control <br>        HINSTANCE           m_hInst;            //Module instance <br>        BOOL                m_fMapped;          //MessageMap called? <br>        PCStringTable       m_pST;              //Message strings <br> <br>        UINT                m_uIDCur;           //Current displayed ID. <br> <br>        HWND                m_hWndOwner;        //Frame window <br>        USHORT              m_cMessages;        //Number of messages <br>        UINT                m_idsMin;           //Lowest string ID <br>        UINT                m_idsMax;           //Maximum string ID <br> <br>        USHORT              m_uIDStatic;        //Quiescent message ID <br>        USHORT              m_uIDBlank;         //Blank message ID <br>        USHORT              m_uIDSysMenu;       //System menu message ID <br> <br>        USHORT              m_cPopups;          //Number of menus <br>        USHORT              m_uIDPopupMin;      //Lowest menu ID <br>        USHORT              m_uIDPopupMax;      //Highest menu ID <br> <br>        HGLOBAL             m_hMemSMM;          //Mapping resource <br>        PSTATMESSAGEMAP     m_pSMM;             //Item to ID mapping <br>        PPOPUPMENUMAP       m_pPMM;             //Menu to ID mapping <br> <br>    public: <br>        CStatusHelper(HWND, HINSTANCE); <br>        ~CStatusHelper(void); <br> <br>        BOOL   MessageMap(HWND, UINT, UINT, UINT, UINT, UINT, UINT, UINT, UINT, UINT); <br>        void   MessageDisplay(UINT); <br>        void   MenuSelect(WORD, WORD, HMENU); <br> <br>    private: <br>        void   Sort(void); <br>        USHORT IDFromHMenu(HMENU); <br>        UINT   IStringFromID(USHORT); <br> <br>    }; <br> <br>typedef CStatusHelper *PCStatusHelper; <br> <br> <br>#endif //_CSTATHLP_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
