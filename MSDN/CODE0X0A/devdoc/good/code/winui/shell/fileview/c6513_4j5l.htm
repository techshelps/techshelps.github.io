<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILEVIEW.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6519"></a>FILEVIEW.H</h2>
<pre><code>//THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>//ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>//THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1994 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>//PROGRAM: FILEVIEW.H <br>// <br>//PURPOSE:   File Viewer Component Object to work with Windows 95 Explorer. <br>//  Definitions, classes, and prototypes for a FileViewer DLL. <br>//    Necessary modifications marked with MODIFY <br>// <br>//PLATFORMS:Windows 95 <br>// <br>//SPECIAL INSTRUCTIONS: N/A <br>// <br>#ifndef _FILEVIEW_H_ <br>#define _FILEVIEW_H_ <br> <br> <br>//Prevent windows.h from pulling in OLE 1 <br>#define INC_OLE2 <br> <br>#include &lt;windows.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;ole2.h&gt; <br>#include &lt;commdlg.h&gt; <br>#include &lt;shlobj.h&gt; <br> <br> <br>#include "dbgout.h" <br>#include "cstrtabl.h" <br>#include "cstathlp.h" <br> <br>//Types needed for other include files. <br>#ifndef PPVOID <br>typedef LPVOID * PPVOID; <br>#endif <br> <br> <br>/* <br> * Type and function for an object-destroyed callback.  An <br> * Object will call ObjectDestoyed in FILEVIEW.CPP when it <br> * deletes itself.  That way the server code, independent <br> * of the object, can implement DllCanUnloadNow properly. <br> */ <br>typedef void (WINAPI *PFNDESTROYED)(void); <br>void WINAPI ObjectDestroyed(void); <br> <br> <br>//MODIFY:  Other viewer-specific headers <br>#include "fvtext.h"     //FileViewer specifics <br>#include "resource.h"   //Resource definitions <br> <br> <br> <br>//FILEVIEW.CPP <br>HRESULT PASCAL DllGetClassObject(REFCLSID, REFIID, PPVOID); <br>STDAPI         DllCanUnloadNow(void); <br> <br>//A class factory that creates CFileViewer objects <br>class CFVClassFactory : public IClassFactory <br>    { <br>    protected: <br>        ULONG           m_cRef; <br> <br>    public: <br>        CFVClassFactory(void); <br>        ~CFVClassFactory(void); <br> <br>        //IUnknown members <br>        STDMETHODIMP         QueryInterface(REFIID, PPVOID); <br>        STDMETHODIMP_(ULONG) AddRef(void); <br>        STDMETHODIMP_(ULONG) Release(void); <br> <br>        //IClassFactory members <br>        STDMETHODIMP         CreateInstance(LPUNKNOWN, REFIID, PPVOID); <br>        STDMETHODIMP         LockServer(BOOL); <br>    }; <br> <br>typedef CFVClassFactory *PCFVClassFactory; <br> <br>#endif //_FILEVIEW_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
