<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DEFCLSF.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6512"></a>DEFCLSF.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1995 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>// <br>// This file contains the implementation of SHCreateDefClassObject <br>// <br> <br>#include "priv.h" <br> <br>//========================================================================= <br>// CDefClassFactory class <br>//========================================================================= <br> <br>STDMETHODIMP CDefClassFactory_QueryInterface(IClassFactory FAR * pcf, REFIID riid, LPVOID FAR* ppvObj); <br>ULONG STDMETHODCALLTYPE CDefClassFactory_AddRef(IClassFactory FAR * pcf); <br>ULONG STDMETHODCALLTYPE CDefClassFactory_Release(IClassFactory FAR * pcf); <br>STDMETHODIMP CDefClassFactory_CreateInstance(IClassFactory FAR * pcf, LPUNKNOWN pUnkOuter, <br>                              REFIID riid, <br>                              LPVOID FAR* ppvObject); <br>STDMETHODIMP CDefClassFactory_LockServer(IClassFactory FAR * pcf, BOOL fLock); <br> <br>// <br>// CDefClassFactory: Class definition <br>// <br>#pragma data_seg(".text") <br>IClassFactoryVtbl c_vtblAppUIClassFactory = { <br>            CDefClassFactory_QueryInterface, <br>            CDefClassFactory_AddRef, <br>            CDefClassFactory_Release, <br>            CDefClassFactory_CreateInstance, <br>    CDefClassFactory_LockServer <br>}; <br>#pragma data_seg() <br> <br>typedef struct <br>{ <br>    IClassFactory      cf; <br>    UINT               cRef;// Reference count <br>    LPFNCREATEINSTANCE lpfnCI;// CreateInstance callback entry <br>    UINT FAR *         pcRefDll;// Reference count of the DLL <br>    const IID FAR *    riidInst;// Optional interface for instance <br>} CDefClassFactory; <br> <br>// <br>// CDefClassFactory::QueryInterface <br>// <br>STDMETHODIMP CDefClassFactory_QueryInterface(IClassFactory FAR * pcf, REFIID riid, LPVOID FAR* ppvObj) <br>{ <br>    register CDefClassFactory * this=IToClassN(CDefClassFactory, cf, pcf); <br>    if (IsEqualIID(riid, &amp;IID_IClassFactory) <br>     || IsEqualIID(riid, &amp;IID_IUnknown)) <br>    { <br>(LPCLASSFACTORY)*ppvObj = &amp;this-&gt;cf; <br>this-&gt;cRef++; <br>        return NOERROR; <br>    } <br>    return ResultFromScode(E_NOINTERFACE); <br>} <br> <br>// <br>// CDefClassFactory::AddRef <br>// <br>ULONG STDMETHODCALLTYPE CDefClassFactory_AddRef(IClassFactory FAR * pcf) <br>{ <br>    register CDefClassFactory * this=IToClassN(CDefClassFactory, cf, pcf); <br>    return (++this-&gt;cRef); <br>} <br> <br>// <br>// CDefClassFactory::Release <br>// <br>ULONG STDMETHODCALLTYPE CDefClassFactory_Release(IClassFactory FAR * pcf) <br>{ <br>    register CDefClassFactory * this=IToClassN(CDefClassFactory, cf, pcf); <br>    if (--this-&gt;cRef &gt; 0) <br>return this-&gt;cRef; <br> <br>    if (this-&gt;pcRefDll) { <br>(*this-&gt;pcRefDll)--; <br>    } <br>    LocalFree((HLOCAL)this); <br> <br>    return 0; <br>} <br> <br>// <br>// CDefClassFactory::CDefClassFactory <br>// <br>STDMETHODIMP CDefClassFactory_CreateInstance(IClassFactory FAR * pcf, LPUNKNOWN pUnkOuter, <br>                              REFIID riid, <br>                              LPVOID FAR* ppvObject) <br>{ <br>    register CDefClassFactory * this=IToClassN(CDefClassFactory, cf, pcf); <br> <br>    // <br>    // We don't support aggregation at all. <br>    // <br>    if (pUnkOuter) <br>    { <br>return ResultFromScode(CLASS_E_NOAGGREGATION); <br>    } <br> <br>    // <br>    // if this-&gt;riidInst is specified, they should match. <br>    // <br>    if (this-&gt;riidInst==NULL <br>     || IsEqualIID(riid, this-&gt;riidInst) <br>     || IsEqualIID(riid, &amp;IID_IUnknown)) <br>    { <br>return this-&gt;lpfnCI(pUnkOuter, riid, ppvObject); <br>    } <br> <br>    return ResultFromScode(E_NOINTERFACE); <br>} <br> <br>// <br>// CDefClassFactory::LockServer <br>// <br>STDMETHODIMP CDefClassFactory_LockServer(IClassFactory FAR * pcf, BOOL fLock) <br>{ <br>    // REVIEW: Is this appropriate? <br>    return ResultFromScode(E_NOTIMPL); <br>} <br> <br> <br>// <br>// CDefClassFactory constructor <br>// <br>CDefClassFactory * NEAR PASCAL CDefClassFactory_Create( <br>    LPFNCREATEINSTANCE lpfnCI, UINT FAR * pcRefDll, REFIID riidInst) <br>{ <br>    register CDefClassFactory * pacf; <br>    pacf = (CDefClassFactory *)LocalAlloc(LPTR, sizeof(CDefClassFactory)); <br>    if (pacf) <br>    { <br>pacf-&gt;cf.lpVtbl = &amp;c_vtblAppUIClassFactory; <br>pacf-&gt;cRef++;  // pacf-&gt;cRef=0; (generates smaller code) <br>pacf-&gt;pcRefDll = pcRefDll; <br>pacf-&gt;lpfnCI = lpfnCI; <br>pacf-&gt;riidInst = riidInst; <br>if (pcRefDll) { <br>    (*pcRefDll)++; <br>} <br>    } <br>    return pacf; <br>} <br> <br> <br>// BUGBUG: remove this for build 86 <br> <br>STDAPI Shell_CreateDefClassObject(REFIID riid, LPVOID FAR* ppv, <br> LPFNCREATEINSTANCE lpfnCI, UINT FAR * pcRefDll, <br> REFIID riidInst) <br>{ <br>    MessageBeep(0); <br>    // DebugMsg(DM_TRACE, "Shell_CreateDefClassObject: obsolete, use SHCreateDefClassObject"); <br>    return SHCreateDefClassObject(riid, ppv, lpfnCI, pcRefDll, riidInst); <br>} <br> <br>// <br>// creates a simple default implementation of IClassFactory <br>// <br>// Parameters: <br>//  riid     -- Specifies the interface to the class object <br>//  ppv      -- Specifies the pointer to LPVOID where the class object pointer <br>//               will be returned. <br>//  lpfnCI   -- Specifies the callback entry for instanciation. <br>//  pcRefDll -- Specifies the address to the DLL reference count (optional) <br>//  riidInst -- Specifies the interface to the instance (optional). <br>// <br>// Notes: <br>//   The riidInst will be specified only if the instance of the class <br>//  support only one interface. <br>// <br>STDAPI SHCreateDefClassObject(REFIID riid, LPVOID FAR* ppv, <br> LPFNCREATEINSTANCE lpfnCI, UINT FAR * pcRefDll, <br> REFIID riidInst) <br>{ <br>    // The default class factory supports only IClassFactory interface <br>    if (IsEqualIID(riid, &amp;IID_IClassFactory)) <br>    { <br>CDefClassFactory * pacf = CDefClassFactory_Create(lpfnCI, pcRefDll, riidInst); <br>if (pacf) <br>{ <br>    (IClassFactory FAR *)*ppv = &amp;pacf-&gt;cf; <br>    return NOERROR; <br>} <br>return ResultFromScode(E_OUTOFMEMORY); <br>    } <br>    return ResultFromScode(E_NOINTERFACE); <br>} <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
