<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CONTITLE.C</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6369"></a>CONTITLE.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;stdio.h&gt; <br>#include "console.h" <br> <br>/******************************************************************** <br>* FUNCTION: demoGetTitle(HANDLE hConOut)                            * <br>*                                                                   * <br>* PURPOSE: demonstrate GetConsoleTitle and SetConsoleTitle. Read and* <br>*          display the console title, then set the console title.   * <br>*                                                                   * <br>* INPUT: handle to write to                                         * <br>********************************************************************/ <br> <br>void demoGetTitle(HANDLE hConOut) <br>{ <br>  BOOL bSuccess; <br>  CHAR szTitleBuf[256]; /* buffer for the current console title */ <br>  CHAR szTemp[256]; <br>  HANDLE hStdIn; /* standard input handle */ <br>  DWORD dwStdInMode; /* standard input handle mode */ <br>  DWORD dwBytesRead; <br> <br>  setConTitle(__FILE__); <br>  hStdIn = GetStdHandle(STD_INPUT_HANDLE); <br>  PERR(hStdIn != INVALID_HANDLE_VALUE, "GetStdHandle"); <br>  /* save the console mode */ <br>  bSuccess = GetConsoleMode(hStdIn, &amp;dwStdInMode); <br>  PERR(bSuccess, "GetConsoleMode"); <br>  /* turn on line input mode so we can enter a string. */ <br>  /* when turning on ENABLE_LINE_INPUT, you MUST also turn on */ <br>  /* ENABLE_ECHO_INPUT. */ <br>  bSuccess = SetConsoleMode(hStdIn, dwStdInMode | ENABLE_LINE_INPUT | <br>      ENABLE_ECHO_INPUT); <br>  PERR(bSuccess, "SetConsoleMode"); <br>  myPuts(hConOut, "Let's get the console title with GetConsoleTitle."); <br>  /* get the console title */ <br>  dwBytesRead = GetConsoleTitle(szTitleBuf, sizeof(szTitleBuf)); <br>  PERR(dwBytesRead, "GetConsoleTitle"); <br>  sprintf(szTemp, "The console title is: %s", szTitleBuf); <br>  myPuts(hConOut, szTemp); <br>  myPuts(hConOut, "\nNow let's set a new console title with SetConsoleTitle."); <br>  myPuts(hConOut, "\nEnter a new console title:"); <br>  bSuccess = ReadFile(hStdIn, szTitleBuf, 256, &amp;dwBytesRead, NULL); <br>  PERR(bSuccess, "ReadFile"); <br>  if (dwBytesRead &gt; 2) /* did the user type any chars before hitting return? */ <br>    { <br>    /* null terminate the string - less two for cr/lf */ <br>    szTitleBuf[dwBytesRead - 2] = 0; <br>    bSuccess = SetConsoleTitle(szTitleBuf); <br>    PERR(bSuccess, "SetConsoleTitle"); <br>    } <br>  /* restore the console title to the original mode */ <br>  bSuccess = SetConsoleMode(hStdIn, dwStdInMode); <br>  PERR(bSuccess, "SetConsoleMode"); <br>  myPuts(hConOut, "\nHit enter to return..."); <br>  myGetchar(); <br>  return; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
