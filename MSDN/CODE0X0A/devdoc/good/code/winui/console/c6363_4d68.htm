<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ALOCFREE.C</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6380"></a>ALOCFREE.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>#include &lt;windows.h&gt; <br>#include &lt;stdio.h&gt; <br>#include "console.h" <br> <br>/********************************************************************* <br>* FUNCTION: demoAllocFree(HANDLE hConOld, HANDLE *hConOut)           * <br>*                                                                    * <br>* PURPOSE: demonstrate FreeConsole &amp; AllocConsole. Free the console  * <br>*          and allocate a new one                                    * <br>*                                                                    * <br>* INPUT: the current console output handle and a temporary 'scratch' * <br>*        console handle                                              * <br>*********************************************************************/ <br> <br>void demoAllocFree(HANDLE hConOld, HANDLE *hConOut) <br>{ <br>  BOOL bSuccess; <br> <br>  setConTitle(__FILE__); <br>  myPuts(hConOld, "Let's free the current console with FreeConsole. It will\n" <br>                  "disappear for 3 seconds, then we'll allocate a new one.\n" <br>                  "with AllocConsole. Hit return to continue..."); <br>  myGetchar(); <br>  bSuccess = FreeConsole(); <br>  PERR(bSuccess, "FreeConsole"); <br>  Sleep(3000); <br>  bSuccess = AllocConsole(); <br>  PERR(bSuccess, "AllocConsole"); <br>  *hConOut = GetStdHandle(STD_OUTPUT_HANDLE); <br>  /* set our console text attribute */ <br>  bSuccess = SetConsoleTextAttribute(*hConOut, FOREGROUND_CYAN); <br>  PERR(bSuccess, "SetConsoleTextAttribute"); <br>  myPuts(*hConOut, "This is a new console that we've allocated with AllocConsole."); <br>  Sleep(2000); <br>  /* must refresh the screen since we've replaced the console */ <br>  showConAPIs(*hConOut); <br>  return; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
