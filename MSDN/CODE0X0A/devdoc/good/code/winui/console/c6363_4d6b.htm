<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SIZE.C</title>
<link disabled rel=stylesheet href=../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6383"></a>SIZE.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples.  <br>*       Copyright 1993 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br>#include &lt;windows.h&gt; <br>#include "console.h" <br> <br>/********************************************************************* <br>* FUNCTION: resizeConBufAndWindow(HANDLE hConsole, SHORT xSize,      * <br>*                                 SHORT ySize)                       * <br>*                                                                    * <br>* PURPOSE: resize both the console output buffer and the console     * <br>*          window to the given x and y size parameters               * <br>*                                                                    * <br>* INPUT: the console output handle to resize, and the required x and * <br>*        y size to resize the buffer and window to.                  * <br>*                                                                    * <br>* COMMENTS: Note that care must be taken to resize the correct item  * <br>*           first; you cannot have a console buffer that is smaller  * <br>*           than the console window.                                 * <br>*********************************************************************/ <br> <br>void resizeConBufAndWindow(HANDLE hConsole, SHORT xSize, SHORT ySize) <br>{ <br>  CONSOLE_SCREEN_BUFFER_INFO csbi; /* hold current console buffer info */ <br>  BOOL bSuccess; <br>  SMALL_RECT srWindowRect; /* hold the new console size */ <br>  COORD coordScreen; <br> <br>  bSuccess = GetConsoleScreenBufferInfo(hConsole, &amp;csbi); <br>  PERR(bSuccess, "GetConsoleScreenBufferInfo"); <br>  /* get the largest size we can size the console window to */ <br>  coordScreen = GetLargestConsoleWindowSize(hConsole); <br>  PERR(coordScreen.X | coordScreen.Y, "GetLargestConsoleWindowSize"); <br>  /* define the new console window size and scroll position */ <br>  srWindowRect.Right = (SHORT) (min(xSize, coordScreen.X) - 1); <br>  srWindowRect.Bottom = (SHORT) (min(ySize, coordScreen.Y) - 1); <br>  srWindowRect.Left = srWindowRect.Top = (SHORT) 0; <br>  /* define the new console buffer size */ <br>  coordScreen.X = xSize; <br>  coordScreen.Y = ySize; <br>  /* if the current buffer is larger than what we want, resize the */ <br>  /* console window first, then the buffer */ <br>  if ((DWORD) csbi.dwSize.X * csbi.dwSize.Y &gt; (DWORD) xSize * ySize) <br>    { <br>    bSuccess = SetConsoleWindowInfo(hConsole, TRUE, &amp;srWindowRect); <br>    PERR(bSuccess, "SetConsoleWindowInfo"); <br>    bSuccess = SetConsoleScreenBufferSize(hConsole, coordScreen); <br>    PERR(bSuccess, "SetConsoleScreenBufferSize"); <br>    } <br>  /* if the current buffer is smaller than what we want, resize the */ <br>  /* buffer first, then the console window */ <br>  if ((DWORD) csbi.dwSize.X * csbi.dwSize.Y &lt; (DWORD) xSize * ySize) <br>    { <br>    bSuccess = SetConsoleScreenBufferSize(hConsole, coordScreen); <br>    PERR(bSuccess, "SetConsoleScreenBufferSize"); <br>    bSuccess = SetConsoleWindowInfo(hConsole, TRUE, &amp;srWindowRect); <br>    PERR(bSuccess, "SetConsoleWindowInfo"); <br>    } <br>  /* if the current buffer *is* the size we want, don't do anything! */ <br>  return; <br>} <br> <br> <br>/********************************************************************* <br>* FUNCTION: demoSizeInfo(HANDLE hConOut)                             * <br>*                                                                    * <br>* PURPOSE: demonstrate SetConsoleWindowInfo and                      * <br>*          SetConsoleScreenBufferSize. Resize the console buffer and * <br>*          window                                                    * <br>*                                                                    * <br>* INPUT: console output handle to set the information for            * <br>*********************************************************************/ <br> <br>void demoSizeInfo(HANDLE hConOut) <br>{ <br>  SHORT sConX, sConY; /* save the current console dimensions */ <br> <br>  setConTitle(__FILE__); <br>  myPuts(hConOut, "Let's resize the console buffer and window to a 40 x 25\n" <br>                  "size screen by using the SetConsoleScreenBufferSize and\n" <br>                  "SetConsoleWindowInfo APIs. Hit enter to continue...\n"); <br>  myGetchar(); <br>  sConX = getConX(hConOut); <br>  sConY = getConY(hConOut); <br>  resizeConBufAndWindow(hConOut, (SHORT) 40, (SHORT) 25); <br>  myPuts(hConOut, "Now let's resize to a large size of\n" <br>                  "200 x 200 - notice that the console\n" <br>                  "window size will not grow larger than\n" <br>                  "the physical screen size. Hit enter\n" <br>                  "to continue...\n"); <br>  myGetchar(); <br>  resizeConBufAndWindow(hConOut, (SHORT) 200, (SHORT) 200); <br>  myPuts(hConOut, "Now let's resize back to our original size screen.\n" <br>                  "Hit enter to continue...\n"); <br>  myGetchar(); <br>  resizeConBufAndWindow(hConOut, sConX, sConY); <br>  myPuts(hConOut, "Now we're back to our original size. Hit enter to return..."); <br>  myGetchar(); <br>  return; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
