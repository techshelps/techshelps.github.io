<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COMMON.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6337"></a>COMMON.H</h2>
<pre><code>/* <br> * COMMON.H <br> * <br> * Structures and definitions applicable to all OLE 2.0 UI dialogs. <br> * <br> * Copyright (c)1992-1996 Microsoft Corporation, All Right Reserved <br> */ <br> <br> <br>#ifndef _COMMON_H_ <br>#define _COMMON_H_ <br> <br>#include "ansiapi.h" <br> <br>//Structure for label and source extraction from a metafile <br>typedef struct tagLABELEXTRACT <br>   { <br>   LPOLESTR    lpsz; <br>   UINT        Index;      // index in lpsz (so we can retrieve 2+ lines) <br>   DWORD       PrevIndex;  // index of last line (so we can mimic word wrap) <br> <br>   union <br>      { <br>      UINT    cch;        //Length of label for label extraction <br>      UINT    iIcon;      //Index of icon in source extraction. <br>      } u; <br> <br>   //For internal use in enum procs <br>   BOOL        fFoundIconOnly; <br>   BOOL        fFoundSource; <br>   BOOL        fFoundIndex; <br>   } LABELEXTRACT, FAR * LPLABELEXTRACT; <br> <br> <br>//Structure for extracting icons from a metafile (CreateIcon parameters) <br>typedef struct tagICONEXTRACT <br>   { <br>   HICON       hIcon;          //Icon created in the enumeration proc. <br> <br>   /* <br>    * Since we want to handle multitasking well we have the caller <br>    * of the enumeration proc instantiate these variables instead of <br>    * using statics in the enum proc (which would be bad). <br>    */ <br>   BOOL        fAND; <br>   HGLOBAL     hMemAND;        //Enumeration proc allocates and copies <br>   } ICONEXTRACT, FAR * LPICONEXTRACT; <br> <br> <br>//Structure to use to pass info to EnumMetafileDraw <br>typedef struct tagDRAWINFO <br>   { <br>   RECT     Rect; <br>   BOOL     fIconOnly; <br>   } DRAWINFO, FAR * LPDRAWINFO; <br> <br>int CALLBACK EXPORT EnumMetafileIconDraw(HDC, HANDLETABLE FAR *, METARECORD FAR *, int, LPARAM); <br>int CALLBACK EXPORT EnumMetafileExtractLabel(HDC, HANDLETABLE FAR *, METARECORD FAR *, int, LPLABELEXTRACT); <br>int CALLBACK EXPORT EnumMetafileExtractIcon(HDC, HANDLETABLE FAR *, METARECORD FAR *, int, LPICONEXTRACT); <br>int CALLBACK EXPORT EnumMetafileExtractIconSource(HDC, HANDLETABLE FAR *, METARECORD FAR *, int, LPLABELEXTRACT); <br> <br>//Shared globals:  our instance and clipboard formats used by the PasteSpecial dialog <br> <br>extern HINSTANCE  ghInst; <br> <br>extern UINT       cfObjectDescriptor; <br>extern UINT       cfLinkSrcDescriptor; <br>extern UINT       cfEmbedSource; <br>extern UINT       cfEmbeddedObject; <br>extern UINT       cfLinkSource; <br>extern UINT       cfOwnerLink; <br>extern UINT       cfFileName; <br> <br>#endif //_COMMON_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
