<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MULTIUI.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6420"></a>MULTIUI.C</h2>
<pre><code>/**********************************************************************/ <br>/*                                                                    */ <br>/*      MULTIUI.C                                                     */ <br>/*                                                                    */ <br>/*      Copyright (c) 1995-1996  Microsoft Corporation                     */ <br>/*                                                                    */ <br>/**********************************************************************/ <br> <br>#include "windows.h" <br>#include "imm.h" <br>#include "resource.h" <br>#include "multiui.h" <br> <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    WinMain(HANDLE, HANDLE, LPSTR, int)                             */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>int APIENTRY WinMain(hInstance, hPrevInstance, lpCmdLine, nCmdShow) <br>HINSTANCE hInstance; <br>HINSTANCE hPrevInstance; <br>LPSTR lpCmdLine; <br>int nCmdShow; <br>{ <br>    MSG msg; <br> <br>    if (!hPrevInstance)   <br>        if (!InitApplication(hInstance)) <br>            return (FALSE); <br> <br>    if (!InitInstance(hInstance, nCmdShow)) <br>return (FALSE); <br> <br>     <br>    while (GetMessage(&amp;msg, NULL, 0, 0)) <br>    { <br>TranslateMessage(&amp;msg); <br>DispatchMessage(&amp;msg); <br>    } <br>    return (msg.wParam); <br>} <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    InitApplication(HANDLE)                                         */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>BOOL InitApplication(hInstance) <br>HANDLE hInstance; <br>{ <br>    WNDCLASS  wc; <br> <br>    wc.style         = (UINT)NULL; <br>    wc.lpfnWndProc   = MainWndProc; <br>    wc.cbClsExtra    = 0; <br>    wc.cbWndExtra    = 0; <br>    wc.hInstance     = hInstance; <br>    wc.hIcon         = LoadIcon(hInstance,"MyIcon"); <br>    wc.hCursor       = LoadCursor(NULL, IDC_ARROW); <br>    wc.hbrBackground = GetStockObject(WHITE_BRUSH);  <br>    wc.lpszMenuName  = "MultiUiMenu"; <br>    wc.lpszClassName = "MultiUiWClass"; <br> <br>    if (! RegisterClass (&amp;wc)) <br>return FALSE; <br> <br> <br>    wc.style         = CS_DBLCLKS; <br>    wc.lpfnWndProc   = NoUINoIMCWndProc; <br>    wc.cbClsExtra    = 0; <br>    wc.cbWndExtra    = WNDEXTRA_NOUINOIMC; <br>    wc.hInstance     = hInstance; <br>    wc.hIcon         = 0; <br>    wc.hCursor       = LoadCursor(NULL, IDC_ARROW); <br>    wc.hbrBackground = GetStockObject(WHITE_BRUSH);  <br>    wc.lpszMenuName  = NULL; <br>    wc.lpszClassName = "NoUINoIMCWClass"; <br> <br>    if (! RegisterClass (&amp;wc)) <br>return FALSE; <br> <br>    wc.style         = CS_DBLCLKS; <br>    wc.lpfnWndProc   = NoUIOwnIMCWndProc; <br>    wc.cbClsExtra    = 0; <br>    wc.cbWndExtra    = WNDEXTRA_NOUIOWNIMC; <br>    wc.hInstance     = hInstance; <br>    wc.hIcon         = 0; <br>    wc.hCursor       = LoadCursor(NULL, IDC_ARROW); <br>    wc.hbrBackground = GetStockObject(WHITE_BRUSH);  <br>    wc.lpszMenuName  = NULL; <br>    wc.lpszClassName = "NoUIOwnIMCWClass"; <br> <br>    if (! RegisterClass (&amp;wc)) <br>return FALSE; <br> <br>    wc.style         = CS_DBLCLKS; <br>    wc.lpfnWndProc   = OwnUIOwnIMCWndProc; <br>    wc.cbClsExtra    = 0; <br>    wc.cbWndExtra    = WNDEXTRA_OWNUIOWNIMC; <br>    wc.hInstance     = hInstance; <br>    wc.hIcon         = 0; <br>    wc.hCursor       = LoadCursor(NULL, IDC_ARROW); <br>    wc.hbrBackground = GetStockObject(WHITE_BRUSH);  <br>    wc.lpszMenuName  = NULL; <br>    wc.lpszClassName = "OwnUIOwnIMCWClass"; <br> <br>    if (! RegisterClass (&amp;wc)) <br>return FALSE; <br> <br>    return TRUE; <br>} <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    InitInstance(HANDLE, int)                                       */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>BOOL InitInstance(hInstance, nCmdShow) <br>    HANDLE          hInstance; <br>    int             nCmdShow; <br>{ <br>    RECT rc; <br>    int iDesc = 0; <br>    HDC hIC; <br>    TEXTMETRIC tm; <br>    HFONT hFont = GetDefaultGUIFont(); <br> <br>    char szTitle[20] =  "MultiUi TestTool"; <br> <br>    hInst = hInstance; <br> <br>    if (!(hWndMain = CreateWindow( <br>    "MultiUiWClass", (LPSTR)szTitle, <br>    WS_OVERLAPPEDWINDOW | WS_CLIPCHILDREN, <br>    CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, <br>    NULL, NULL, hInstance, NULL))) <br>return FALSE; <br> <br> <br>    GetClientRect(hWndMain,&amp;rc); <br> <br>    rc.right  /= 2; <br>    rc.bottom /= 3; <br> <br>    hIC = CreateIC("DISPLAY", NULL, NULL, NULL); <br> <br>    SelectObject(hIC, hFont); <br> <br>    GetTextMetrics(hIC,&amp;tm); <br> <br>    if (rc.bottom &gt;= tm.tmHeight) <br>        iDesc = tm.tmHeight + tm.tmExternalLeading; <br> <br>    DeleteDC(hIC); <br> <br>    if (!(hWndDef1 = CreateWindowEx(WS_EX_CLIENTEDGE, "NoUINoIMCWClass", "", <br>            WS_CHILD|WS_VISIBLE, <br>    rc.left, rc.top + iDesc, rc.right, rc.bottom - iDesc, <br>    hWndMain, NULL, hInstance, NULL))) <br>return FALSE; <br> <br>    if (!(hWndDef2 = CreateWindowEx(WS_EX_CLIENTEDGE, "NoUINoIMCWClass", "", <br>            WS_CHILD|WS_VISIBLE, <br>    rc.right, rc.top + iDesc, rc.right, rc.bottom - iDesc, <br>    hWndMain, NULL, hInstance, NULL))) <br>return FALSE; <br> <br>    if (!(hWndIMC1 = CreateWindowEx(WS_EX_CLIENTEDGE, "NoUIOwnIMCWClass", "", <br>            WS_CHILD|WS_VISIBLE, <br>    rc.left, rc.bottom + iDesc, rc.right, rc.bottom - iDesc, <br>    hWndMain, NULL, hInstance, NULL))) <br>return FALSE; <br> <br>    if (!(hWndIMC2 = CreateWindowEx(WS_EX_CLIENTEDGE, "NoUIOwnIMCWClass", "", <br>            WS_CHILD|WS_VISIBLE, <br>    rc.right, rc.bottom + iDesc, rc.right, rc.bottom - iDesc, <br>    hWndMain, NULL, hInstance, NULL))) <br>return FALSE; <br> <br>    if (!(hWndIMCUI1 = CreateWindowEx(WS_EX_CLIENTEDGE, "OwnUIOwnIMCWClass", "", <br>            WS_CHILD|WS_VISIBLE, <br>    rc.left, rc.bottom * 2 + iDesc, rc.right, rc.bottom - iDesc, <br>    hWndMain, NULL, hInstance, NULL))) <br>return FALSE; <br> <br>    if (!(hWndIMCUI2 = CreateWindowEx(WS_EX_CLIENTEDGE, "OwnUIOwnIMCWClass", "", <br>            WS_CHILD|WS_VISIBLE, <br>    rc.right, rc.bottom * 2 + iDesc, rc.right, rc.bottom - iDesc, <br>    hWndMain, NULL, hInstance, NULL))) <br>return FALSE; <br> <br> <br>    /* display each windows */ <br>    ShowWindow (hWndMain, nCmdShow); <br>    UpdateWindow (hWndMain); <br> <br>    return TRUE; <br> <br>} <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    MainWndProc(HWND, UINT, WPARAM, LPARAM)                         */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>long FAR PASCAL MainWndProc(hWnd, message, wParam, lParam) <br>HWND hWnd; <br>UINT message; <br>WPARAM wParam; <br>LPARAM lParam; <br>{ <br>    PAINTSTRUCT ps; <br>    HDC  hDC; <br>    FARPROC lpProc; <br>    RECT rc; <br>    int iDesc = 0; <br>    HDC hIC; <br>    TEXTMETRIC tm; <br>    HFONT hFont; <br>    HFONT hOldFont; <br>    HIMC hIMC; <br>    HWND hIMEWnd; <br>    char szDesc[128]; <br> <br>    switch (message) { <br>case WM_CREATE: <br>    break; <br> <br>case WM_SIZE: <br>            switch (wParam) <br>            { <br>                case SIZENORMAL: <br>                case SIZEFULLSCREEN: <br>                    GetClientRect(hWndMain,&amp;rc); <br>                    rc.right  /= 2; <br>                    rc.bottom /= 3; <br> <br>                    hFont = GetDefaultGUIFont(); <br>                    hIC = CreateIC("DISPLAY", NULL, NULL, NULL); <br> <br>                    SelectObject(hIC, hFont); <br> <br>                    GetTextMetrics(hIC,&amp;tm); <br> <br>                    iDesc = 0; <br>                    if (rc.bottom &gt;= tm.tmHeight) <br>                        iDesc = tm.tmHeight + tm.tmExternalLeading; <br> <br>                    DeleteDC(hIC); <br> <br>                    MoveWindow(hWndDef1, <br>                               rc.left,rc.top + iDesc, <br>                               rc.right,rc.bottom - iDesc,TRUE); <br>                    MoveWindow(hWndDef2, <br>                               rc.right,rc.top + iDesc, <br>                               rc.right,rc.bottom - iDesc,TRUE); <br>                    MoveWindow(hWndIMC1, <br>                               rc.left,rc.bottom + iDesc, <br>                               rc.right,rc.bottom - iDesc,TRUE); <br>                    MoveWindow(hWndIMC2, <br>                               rc.right,rc.bottom + iDesc, <br>                               rc.right,rc.bottom - iDesc,TRUE); <br>                    MoveWindow(hWndIMCUI1, <br>                               rc.left,rc.bottom * 2 + iDesc, <br>                               rc.right,rc.bottom - iDesc,TRUE); <br>                    MoveWindow(hWndIMCUI2, <br>                               rc.right,rc.bottom * 2 + iDesc, <br>                               rc.right,rc.bottom - iDesc,TRUE); <br> <br>                    InvalidateRect(hWnd,NULL,TRUE); <br>                    break; <br> <br>                case SIZEICONIC: <br>            return (DefWindowProc(hWnd, message, wParam, lParam)); <br>                    break; <br>            <br>            } <br>    break; <br> <br>case WM_PAINT: <br>    hDC = BeginPaint (hWnd, &amp;ps); <br>            hFont = GetDefaultGUIFont(); <br>            hOldFont = SelectObject(hDC, hFont); <br> <br>            GetClientRect(hWndMain,&amp;rc); <br>            rc.right  /= 2; <br>            rc.bottom /= 3; <br> <br>            wsprintf(szDesc,"%08lX Default IMC and Default IME window" <br>                     ,(DWORD)hWndDef1); <br>            TextOut(hDC, rc.left,rc.top,szDesc,lstrlen(szDesc)); <br> <br>            wsprintf(szDesc,"%08lX Default IMC and Default IME window" <br>                     ,(DWORD)hWndDef2); <br>            TextOut(hDC, rc.right,rc.top,szDesc,lstrlen(szDesc)); <br> <br>            hIMC = (HIMC)GetWindowLong(hWndIMC1,MYGWL_IMC); <br>            wsprintf(szDesc,"%08lX IMC[%08lX] and Default IME window" <br>                     ,(DWORD)hWndIMC1, (DWORD)hIMC); <br>            TextOut(hDC, rc.left,rc.bottom,szDesc,lstrlen(szDesc)); <br> <br>            hIMC = (HIMC)GetWindowLong(hWndIMC2,MYGWL_IMC); <br>            wsprintf(szDesc,"%08lX IMC[%08lX] and Default IME window" <br>                     ,(DWORD)hWndIMC2, (DWORD)hIMC); <br>            TextOut(hDC, rc.right,rc.bottom,szDesc,lstrlen(szDesc)); <br> <br>            hIMC = (HIMC)GetWindowLong(hWndIMCUI1,MYGWL_IMC); <br>            hIMEWnd = (HWND)GetWindowLong(hWndIMCUI1,MYGWL_IMEWND); <br>            wsprintf(szDesc,"%08lX IMC[%08lX] and IME window[%08lX]" <br>                     ,(DWORD)hWndIMCUI1, (DWORD)hIMC ,(DWORD)hIMEWnd); <br>            TextOut(hDC, rc.left,rc.bottom * 2,szDesc,lstrlen(szDesc)); <br> <br>            hIMC = (HIMC)GetWindowLong(hWndIMCUI2,MYGWL_IMC); <br>            hIMEWnd = (HWND)GetWindowLong(hWndIMCUI2,MYGWL_IMEWND); <br>            wsprintf(szDesc,"%08lX IMC[%08lX] and IME window[%08lX]" <br>                     ,(DWORD)hWndIMCUI2, (DWORD)hIMC ,(DWORD)hIMEWnd); <br>            TextOut(hDC, rc.right,rc.bottom * 2,szDesc,lstrlen(szDesc)); <br> <br>            SelectObject(hDC, hOldFont); <br>    EndPaint (hWnd, &amp;ps); <br>    break; <br> <br>case WM_COMMAND: <br>    switch(WMCOMMANDWPARAM(wParam)) <br>    { <br>case IDM_ABOUT: <br>    lpProc = MakeProcInstance(AboutDlg, hInst); <br>    DialogBox(hInst, "ABOUTBOX", hWnd, (DLGPROC)lpProc); <br>    FreeProcInstance(lpProc); <br>    break; <br> <br>    } <br>    break; <br> <br>case WM_DESTROY: <br>    PostQuitMessage(0); <br>    break; <br> <br>default: <br>    return (DefWindowProc(hWnd, message, wParam, lParam)); <br>    } <br>    return 0L; <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
