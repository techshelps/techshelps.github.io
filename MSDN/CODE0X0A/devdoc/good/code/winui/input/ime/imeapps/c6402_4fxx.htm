<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMEAPPS.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6405"></a>IMEAPPS.H</h2>
<pre><code>/**********************************************************************/ <br>/*                                                                    */ <br>/*      IMEAPPS.H                                                     */ <br>/*                                                                    */ <br>/*      Copyright (c) 1995-1997  Microsoft Corporation                */ <br>/*                                                                    */ <br>/**********************************************************************/ <br> <br>#include "wapi.h" <br> <br>#define ORG_X                     10 <br>#define ORG_Y                     10 <br> <br>#define RESULT_X                  10 <br>#define RESULT_Y                  10 <br>#define RESULTREAD_X              10 <br>#define RESULTREAD_Y              30 <br> <br>#define COMPSTR_X                 10 <br>#define COMPSTR_Y                 50 <br>#define COMPREAD_X                10 <br>#define COMPREAD_Y                60 <br> <br>#define IMESTATUS_CY              20 <br>#define CAND_CX                   130 <br> <br>extern HANDLE hInst; <br>extern HWND hWndMain; <br>extern HWND hWndToolBar; <br>extern HWND hWndStatus; <br>extern HWND hWndCompStr; <br>extern HWND hWndCandList; <br> <br>extern LOGFONT lf; <br>extern HFONT hFont; <br> <br>extern int nStatusHeight; <br>extern BOOL fShowCand; <br>extern DWORD  fdwProperty; <br> <br>extern DWORD  dwCompStrLen; <br>extern DWORD  dwCompAttrLen; <br>extern DWORD  dwCompClsLen; <br>extern DWORD  dwCompReadStrLen; <br>extern DWORD  dwCompReadAttrLen; <br>extern DWORD  dwCompReadClsLen; <br>extern DWORD  dwResultStrLen; <br>extern DWORD  dwResultClsLen; <br>extern DWORD  dwResultReadStrLen; <br>extern DWORD  dwResultReadClsLen; <br> <br>extern MYCHAR szCompStr[512]; <br>extern BYTE   bCompAttr[512]; <br>extern DWORD  dwCompCls[128]; <br>extern MYCHAR szCompReadStr[512]; <br>extern BYTE   bCompReadAttr[512]; <br>extern DWORD  dwCompReadCls[128]; <br>extern MYCHAR szResultStr[512]; <br>extern DWORD  dwResultCls[128]; <br>extern MYCHAR szResultReadStr[512]; <br>extern DWORD  dwResultReadCls[128]; <br>extern MYCHAR szPaintResult[512]; <br>extern MYCHAR szPaintResultRead[512]; <br> <br>extern LPCANDIDATELIST lpCandList; <br>extern POINT ptImeUIPos; <br> <br> <br> <br>/* imeapps.c */ <br>BOOL InitApplication(HANDLE); <br>BOOL InitInstance(HANDLE, int); <br>LRESULT CALLBACK MainWndProc(HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK CompStrWndProc(HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK CandListWndProc(HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK AboutDlg(HWND, UINT, WPARAM, LPARAM); <br>LRESULT HandleStartComposition(HWND,WPARAM,LPARAM); <br>LRESULT HandleEndComposition(HWND,WPARAM,LPARAM); <br>LRESULT HandleComposition(HWND,WPARAM,LPARAM); <br>LRESULT HandleChar(HWND,WPARAM,LPARAM); <br>LRESULT HandleNotify(HWND,UINT,WPARAM,LPARAM); <br>LRESULT HandlePaint(HWND, WPARAM, LPARAM); <br>LRESULT HandleCandPaint(HWND, WPARAM, LPARAM); <br> <br> <br>// setcomp.c <br>LRESULT HandleChangeAttr(HWND hWnd,BOOL fNext); <br> <br>// subs.c <br>void MoveCompCandWindow(HWND hWnd); <br>BOOL CreateStatus(); <br>void SetStatusItems(HWND hWnd); <br>void SetOpenStatusParts(BOOL fOpen); <br>void SetConvModeParts(DWORD dwConvMode); <br>void ClearConvModeParts(); <br> <br>// toolbar.c <br>BOOL CreateTBar(HWND); <br>LRESULT SetTooltipText(HWND hWnd, LPARAM lparam); <br>void UpdateButton(UINT iID, UINT iFlags); <br>void UpdateShowOpenStatusButton(BOOL fOpen); <br>void UpdateShowCandButton(); <br>void UpdateModeButton(DWORD dwConv); <br> <br>// mode.c <br>LRESULT HandleModeCommand(HWND hWnd,WPARAM wParam,LPARAM lParam); <br>LRESULT HandleConvertCommand(HWND, WPARAM, LPARAM); <br> <br>// imemenu.c <br>void EndMenuItemIDTable(); <br>void InitMenuItemIDTable(); <br>DWORD FindItemData(UINT wID); <br>HMENU CreateImeMenu(HWND hWnd, HIMC hIMC, LPMYIMEMENUITEMINFO lpImeParentMenu, BOOL fRight); </code></pre>
<p>&nbsp;</p></body>
</HTML>
