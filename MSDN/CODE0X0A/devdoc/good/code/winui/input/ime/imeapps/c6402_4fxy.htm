<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMEMENU.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context6406"></a>IMEMENU.C</h2>
<pre><code>/**********************************************************************/ <br>/*                                                                    */ <br>/*      IMEMENU.C                                                     */ <br>/*                                                                    */ <br>/*      Copyright (c) 1995-1997  Microsoft Corporation                */ <br>/*                                                                    */ <br>/**********************************************************************/ <br> <br>#include "windows.h" <br>#include "commdlg.h" <br>#include "commctrl.h" <br>#include "imm.h" <br>#include "resource.h" <br>#include "imeapps.h" <br> <br>LPDWORD lpdwIDTable = NULL; <br>int nIDTable = 0; <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    EndMenuItemIDTable()                                            */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>void EndMenuItemIDTable() <br>{ <br>    if (lpdwIDTable) <br>        GlobalFree((HANDLE)lpdwIDTable); <br> <br>    nIDTable = 0; <br>} <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    InitMenuItemIDTable()                                           */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>void InitMenuItemIDTable() <br>{ <br>    EndMenuItemIDTable(); <br>    lpdwIDTable = GlobalAlloc(GPTR, 100 * 2 * sizeof(DWORD)); <br>} <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    AddIDTableEntry()                                               */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>void AddIDTableEntry(UINT wID, DWORD dwItemData) <br>{ <br>    *(lpdwIDTable+(nIDTable*2)) = wID; <br>    *(lpdwIDTable+(nIDTable*2)+1) = dwItemData; <br>    nIDTable++; <br>} <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    FindItemData()                                                  */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>DWORD FindItemData(UINT wID) <br>{ <br>    int i; <br>    for (i = 0; i &lt; nIDTable ; i++) <br>    { <br>        if (*(lpdwIDTable+(i*2)) == wID) <br>            return *(lpdwIDTable+(i*2)+1); <br>    } <br>} <br> <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    FillMenuItemInfo()                                              */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>void FillMenuItemInfo(HWND hWnd, HIMC hIMC, LPMENUITEMINFO lpmii, LPMYIMEMENUITEMINFO lpIme, BOOL fRight) <br>{ <br>    FillMemory((PVOID)lpmii, sizeof(MENUITEMINFO), 0); <br>    lpmii-&gt;cbSize = sizeof(MENUITEMINFO); <br>    lpmii-&gt;fMask = 0; <br> <br>    // Set fType; <br>    if (lpIme-&gt;fType) <br>    { <br>        lpmii-&gt;fMask |= MIIM_TYPE; <br>        lpmii-&gt;fType = 0; <br> <br>        if (lpIme-&gt;fType &amp; IMFT_RADIOCHECK) <br>            lpmii-&gt;fType |= MFT_RADIOCHECK; <br> <br>        if (lpIme-&gt;fType &amp; IMFT_SEPARATOR) <br>            lpmii-&gt;fType |= MFT_SEPARATOR; <br> <br>    } <br> <br>    lpmii-&gt;fMask |= MIIM_ID; <br>    lpmii-&gt;wID = lpIme-&gt;wID + IDM_STARTIMEMENU; <br> <br>    if (lpIme-&gt;fType &amp; IMFT_SUBMENU) <br>    { <br>        lpmii-&gt;fMask |= MIIM_SUBMENU; <br>        lpmii-&gt;hSubMenu = CreateImeMenu(hWnd, hIMC, lpIme, fRight); <br>    } <br> <br>    lpmii-&gt;fMask |= MIIM_STATE; <br>    lpmii-&gt;fState = lpIme-&gt;fState; <br> <br>    if (lpIme-&gt;hbmpChecked &amp;&amp;  lpIme-&gt;hbmpUnchecked) <br>    { <br>       lpmii-&gt;fMask |= MIIM_CHECKMARKS; <br>       lpmii-&gt;hbmpChecked = lpIme-&gt;hbmpChecked; <br>       lpmii-&gt;hbmpUnchecked = lpIme-&gt;hbmpUnchecked; <br>    } <br>     <br> <br>    lpmii-&gt;fMask |= MIIM_DATA; <br>    lpmii-&gt;dwItemData = lpIme-&gt;dwItemData; <br> <br>    if (lpIme-&gt;hbmpItem) <br>    { <br>       lpmii-&gt;fMask |= MIIM_BITMAP; <br>       lpmii-&gt;hbmpItem = lpIme-&gt;hbmpItem; <br>    } <br> <br> <br>#ifdef USEWAPI <br>    { <br>        BOOL bUDC; <br>        int i; <br>        char   szTemp[IMEMENUITEM_STRING_SIZE]; <br> <br>        i = WideCharToMultiByte(CP_ACP, <br>                                0, <br>                                lpIme-&gt;szString, <br>                                wcslen(lpIme-&gt;szString), <br>                                szTemp, <br>                                IMEMENUITEM_STRING_SIZE, <br>                                (LPSTR)NULL, <br>                                &amp;bUDC); <br>        szTemp[i] = '\0'; <br> <br>        if (lstrlen(szTemp)) <br>        { <br>            lpmii-&gt;fMask |= MIIM_STRING; <br>            lstrcpy((LPSTR)lpIme-&gt;szString, szTemp); <br>            lpmii-&gt;dwTypeData = (LPSTR)lpIme-&gt;szString; <br>            lpmii-&gt;cch = lstrlen((LPSTR)lpIme-&gt;szString); <br>        } <br>    } <br>#else <br>    if (lstrlen(lpIme-&gt;szString)) <br>    { <br>        lpmii-&gt;fMask |= MIIM_STRING; <br>        lpmii-&gt;dwTypeData = lpIme-&gt;szString; <br>        lpmii-&gt;cch = lstrlen(lpIme-&gt;szString); <br>    } <br>#endif <br> <br>} <br> <br>/**********************************************************************/ <br>/*                                                                    */ <br>/*    CreateImeMenu()                                                 */ <br>/*                                                                    */ <br>/**********************************************************************/ <br>HMENU CreateImeMenu(HWND hWnd, HIMC hIMC, LPMYIMEMENUITEMINFO lpImeParentMenu, BOOL fRight) <br>{ <br>    HMENU hMenu; <br>    DWORD dwSize, dwNum, dwI; <br>    MENUITEMINFO mii; <br>    LPMYIMEMENUITEMINFO lpImeMenu; <br>     <br> <br>    dwNum = MyImmGetImeMenuItems(hIMC, fRight ? IGIMIF_RIGHTMENU : 0,  <br>                                 IGIMII_CMODE | <br>                                 IGIMII_SMODE | <br>                                 IGIMII_CONFIGURE | <br>                                 IGIMII_TOOLS | <br>                                 IGIMII_HELP | <br>                                 IGIMII_OTHER, <br>                                 lpImeParentMenu, NULL, 0); <br> <br>    if (!dwNum) <br>        return 0; <br> <br> <br> <br>    dwSize = dwNum * sizeof(MYIMEMENUITEMINFO); <br> <br>    lpImeMenu = (LPMYIMEMENUITEMINFO)GlobalAlloc(GPTR, dwSize); <br> <br>    dwNum = MyImmGetImeMenuItems(hIMC, fRight ? IGIMIF_RIGHTMENU : 0,  <br>                                 IGIMII_CMODE | <br>                                 IGIMII_SMODE | <br>                                 IGIMII_CONFIGURE | <br>                                 IGIMII_TOOLS | <br>                                 IGIMII_HELP | <br>                                 IGIMII_OTHER, <br>                                 lpImeParentMenu, lpImeMenu, dwSize); <br> <br>     <br>    hMenu = CreatePopupMenu(); <br> <br>    for (dwI = 0 ; dwI &lt; dwNum; dwI++) <br>    { <br>        AddIDTableEntry(lpImeMenu-&gt;wID, lpImeMenu-&gt;dwItemData); <br>        FillMenuItemInfo(hWnd, hIMC, &amp;mii, lpImeMenu + dwI, fRight); <br>        InsertMenuItem(hMenu, dwI, TRUE, &amp;mii); <br>    } <br> <br>    GlobalFree((HANDLE)lpImeMenu); <br> <br> <br>    return hMenu; <br>} <br> <br> <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
