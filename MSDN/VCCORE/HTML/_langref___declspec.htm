<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>__declspec</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref___declspec"></A><SUP></SUP>__declspec</H1>

<P><B>Microsoft Specific </B></P>

<P><B>__declspec</B> <B>(</B> <I>extended-attribute</I> <B>)</B> <I>declarator</I><BR>
<BR>
<I>extended-attribute</I><BR>
<B>allocate(“</B><I>segname</I><B>”)</B><BR>
<B>dllimport</B><BR>
<B>dllexport</B><BR>
<B>naked<BR>
noreturn<BR>
nothrow<BR>
novtable<BR>
property(</B>{<B>get=</B><I>get_func_name</I>|<B>,</B> <B>put=</B><I>put_func_name</I>}<B>)<BR>
selectany<BR>
thread<BR>
uuid(“</B><I>ComObjectGUID</I><B>”)</B></P>

<P>The extended attribute syntax for qualifying storage-class information simplifies and standardizes Microsoft-specific extensions to the C and C++ languages. Extended attribute syntax uses the <B>__declspec</B> keyword to qualify extended storage-class information. The <B>__declspec</B> keyword specifies that an instance of a given type is to be stored with a Microsoft-specific storage-class attribute.</P>

<P>Extended attribute syntax supports these Microsoft-specific storage-class attributes: <A HREF="_langref_allocate.htm">allocate</A>, <A HREF="_langref_thread.htm">thread</A>, <A HREF="_langref_naked.htm">naked</A>, <A HREF="_langref_dllimport.2c_.dllexport.htm">dllimport</A>, <A HREF="_langref_dllimport.2c_.dllexport.htm">dllexport</A>, <A HREF="_langref_nothrow.htm">nothrow</A>, <A HREF="vcrefnoreturn.htm">noreturn</A>, <A HREF="_langref_novtable.htm">novtable</A>, and <A HREF="_langref_selectany.htm">selectany</A>. It also supports these COM-object attributes: <A HREF="_langref_property.htm">property</A> and <A HREF="_langref_uuid.htm">uuid</A>. These attributes are properties only of the declaration of the object or function to which they are applied; they do not redefine the type attributes of the object itself.</P>

<P>The <B>__declspec</B> keywords should be placed at the beginning of a simple declaration. THe compiler ignores, without warning, any <B>__declspec</B> keywords placed after * or &amp; and in front of the variable identifier in a declaration.</P>

<P>A <B>__declspec</B> attribute specified in the beginning of a user-defined type declaration applies to the variable of that type. For example:</P>

<PRE><CODE>__declspec(dllimport) class X {} varX;</CODE></PRE>

<P>In this case, the attribute applies to <CODE>varX</CODE>. A <B>__declspec</B> attribute placed after the <B>class</B> or <B>struct</B> keyword applies to the user-defined type. For example:</P>

<PRE><CODE>class __declspec(dllimport) X {};</CODE></PRE>

<P>In this case, the attribute applies to <CODE>X</CODE>.</P>

<P>The general guideline for using the <B>__declspec</B> attribute for simple declarations is as follows:</P>

<P><I>decl-specifier-seq</I> <I>init-declarator-list</I>;</P>

<P>The <I>decl-specifier-seq</I> should contain, among other things, a base type (e.g. <B>int</B>, <B>float</B>, a <B>typedef</B>, or a class name), a storage class (e.g. <B>static</B>, <B>extern</B>), or the <B>__declspec</B> extension. The <I>init-declarator-list</I> should contain, among other things, the pointer part of declarations. For example:</P>

<PRE><CODE>__declspec(selectany) int * pi1 = 0;   //OK, selectany &amp; int both part of decl-specifier
int __declspec(selectany) * pi2 = 0;   //OK, selectany &amp; int both part of decl-specifier
int * __declspec(selectany) pi3 = 0;   //ERROR, selectany is not part of a declarator
</CODE></PRE>

<P class=label><B>Example</B></P>

<P>The following code declares an integer thread local variable and initializes it with a value:</P>

<PRE><CODE>// Example of the __declspec keyword
__declspec( thread ) int tls_i = 1;
</CODE></PRE>

<P><B>END Microsoft Specific</B></P>
</font>
</BODY>
</HTML>
