<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAO Queries: Filtering and Parameterizing Queries</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Daoenrol tutorial">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.m_strFilter">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.m_strFilter">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.m_strSort">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoTableDef">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoQueryDef">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.m_strFilter">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.GetDefaultSQL">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.SetCurrentIndex">
</OBJECT>
<OBJECT ID="hhobj_12" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfcnotes_tn054">
</OBJECT>
<OBJECT ID="hhobj_13" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.SetParamValue">
</OBJECT>
<OBJECT ID="hhobj_14" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleVariant">
</OBJECT>
<OBJECT ID="hhobj_15" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_oa96_VARIANT_and_VARIANTARG">
</OBJECT>
<OBJECT ID="hhobj_16" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoQueryDef">
</OBJECT>
<OBJECT ID="hhobj_17" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset">
</OBJECT>
<OBJECT ID="hhobj_18" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoQueryDef.3a3a.SetParamValue">
</OBJECT>
<OBJECT ID="hhobj_19" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoQueryDef.3a3a.GetParamValue">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_dao_queries.3a_.filtering_and_parameterizing_queries"></A>DAO Queries: Filtering and Parameterizing Queries</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_databases.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_dao_database_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_databases.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_dao_database_sample_list.htm">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_odbc_driver_list.htm">ODBC Driver List</A></P>

<P>This article describes how to restrict the number of records that a query returns. Topics covered include:

<UL type=disc>
	<LI><A HREF="#_core_filtering_dao_recordsets">Filtering recordsets</A><BR><BR></LI>

	<LI><A HREF="#_core_parameterizing_dao_queries">Parameterizing queries</A></LI>
</UL>

<P>One of the great keys to good database performance is to restrict how many records you select. In general, the more records you select, the greater the required memory and the slower the performance. DAO and MFC let you filter the records that a query selects, and you can specify filtering criteria at run time rather than design time. The mechanism works as follows:

<UL type=disc>
	<LI>Specify a filter for your query that restricts records using an SQL <B>WHERE</B> clause. For example:
<PRE><CODE>WHERE [State] = "NY"
</CODE></PRE>
</LI>

	<LI>Parameterizing specifies named parameters in the filter to which you can assign values at run time, based on information you calculate or obtain from the end-user. For example, the filter shown above looks like this with a named parameter:
<PRE><CODE>WHERE [State] = [State Code]
</CODE></PRE>

<P class=tl>State Code is the parameter name.</P></LI>
</UL>



<H2><A NAME="_core_filtering_dao_recordsets"></A>Filtering DAO Recordsets</H2>

<P>Filtering records by any of the approaches described below relies on the SQL <B>WHERE</B> clause. You can also use the <B>HAVING</B> clause if you are using <B>GROUP BY</B>. For information about these keywords, see the following topics in DAO Help:

<UL type=disc>
	<LI>WHERE Clause (SQL)<BR><BR></LI>

	<LI>HAVING Clause (SQL)<BR><BR></LI>

	<LI>GROUP BY Clause (SQL)</LI>
</UL>

<P>And see the topic "SELECT Statement (SQL)" in DAO Help.</P>

<P>The MFC DAO classes let you filter a recordset in two ways:

<UL type=disc>
	<LI>You can specify an SQL statement for your recordset that lacks a <B>WHERE</B> clause, then supply a value at run time to the <A HREF="JavaScript:hhobj_3.Click()">m_strFilter</A> data member of your <A HREF="JavaScript:hhobj_4.Click()">CDaoRecordset</A>-derived class.<BR><BR></LI>

	<LI>You can specify an SQL statement that includes a <B>WHERE</B> clause. In this case, you do not use <B>m_strFilter</B>.</LI>
</UL>

<P class=indent><B><B>Tip&nbsp;&nbsp;&nbsp;</B></B>These two approaches are equivalent in terms of performance. The only difference is whether you build the <B>WHERE</B> clause in the SQL string that you use to create the recordset or you let MFC build the clause using a value you’ve supplied for <B>m_strFilter</B>.</P>

<P class=indent><B><B>Important&nbsp;&nbsp;&nbsp;</B></B>You can’t use <A HREF="JavaScript:hhobj_5.Click()">m_strFilter</A> (or its companion <A HREF="JavaScript:hhobj_6.Click()">m_strSort</A>, which specifies an SQL <B>ORDER BY</B> clause for sorting) if you create your recordset from a <A HREF="JavaScript:hhobj_7.Click()">CDaoTableDef</A> or <A HREF="JavaScript:hhobj_8.Click()">CDaoQueryDef</A> object.</P>

<H3>Example with m_strFilter</H3>

<P>The following example shows filtering with <B>m_strFilter</B> (the first approach above):</P>

<PRE><CODE>// Filter records with m_strFilter but no parameter
// strStudentID is a value probably obtained from
// the user
rsEnrollmentSet.m_strFilter = "[Student ID] = " + strStudentID;
try
{
    // Open the recordset using the filtered string
    rsEnrollmentSet.Open( );
    // ...
}
// ...
</CODE></PRE>

<P>MFC appends the value of <A HREF="JavaScript:hhobj_9.Click()">m_strFilter</A> to the recordset’s SQL as long as there is not a <B>WHERE</B> clause in the SQL string already.</P>

<H3>Example with a Complete WHERE Clause</H3>

<P>The following example shows filtering with a pre-specified <B>WHERE</B> clause (the second approach above):</P>

<PRE><CODE>// Filter records with the SQL keyword WHERE
CString strSQL = rsEnrollmentSet.GetDefaultSQL( ) + 
             "WHERE [Student ID] = " + strStudentID;
try
{
    // Open the recordset using the filtered SQL string
    rsEnrollmentSet.Open( dbOpenDynaset, strSQL );
    // ...
}
// ...
</CODE></PRE>

<P>The example calls <A HREF="JavaScript:hhobj_10.Click()">GetDefaultSQL</A> to obtain the SQL string defined for the recordset's class at design time, using ClassWizard or AppWizard. Then it concatenates a <B>WHERE</B> clause, part of which is based on run-time information in <CODE>strStudentID</CODE>.</P>

<P>In either case, the result is a recordset that contains a smaller number of records because of the filtering.</P>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>The filtering and sorting mechanisms described here are not available for table-type recordsets. To filter or sort records in a table-type recordset, you must call DAO directly. Set the <B>Filter </B>and <B>Sort </B>properties of the recordset. To specify which index (if any) is active for the recordset, call <A HREF="JavaScript:hhobj_11.Click()">CDaoRecordset::SetCurrentIndex</A>. For information about calling DAO directly, see <A HREF="JavaScript:hhobj_12.Click()">Technical Note 54</A>.</P>



<H2><A NAME="_core_parameterizing_dao_queries"></A>Parameterizing DAO Queries</H2>

<P>In situations where your application executes the same query repeatedly, it is more efficient to create a stored querydef object that contains the SQL statement. Queries stored in the database execute faster and can be used by anyone with access to the database. </P>

<P>If your application needs to alter <B>WHERE</B> clause arguments in a query, you can also add a <B>PARAMETERS</B> clause to your query that permits the Microsoft Jet database engine to substitute values into the query at run time. Before running parameter queries, your application must substitute values for each of the parameters as stored in the Parameters collection of the querydef. </P>

<P>In general, parameterizing queries improves performance. The parameterized SQL statement doesn't have to be recompiled each time you run the query. </P>

<P class=label><B>To create a parameter query</B>

<OL>
	<LI>Create a <B>PARAMETERS</B> clause string that includes a parameter name and data type for each parameter. Don't use the field name alone as the parameter name, because duplicating it may cause problems. You can include the field name within the parameter name, however. The example calls the parameter "Student Ident" rather than "Student ID", the name of the field.
<P class=tl>If you are working with a database accessed by Microsoft Access, the parameter name is used as a prompt string. Keep this in mind if you expect Microsoft Access users to use this query. </P>
<P class=tl>Shown below is a typical <B>PARAMETERS</B> clause:</P>
<PRE><CODE>CString strParam = "PARAMETERS [Student Ident] TEXT; ";
</CODE></PRE>

<P class=tl>The parameter name is enclosed in square brackets here because the name contains a space. Otherwise the brackets are unnecessary.</P></LI>

	<LI>Create a <B>SELECT</B> statement that retrieves the needed fields and incorporates the named parameters into the <B>WHERE</B> clause. In the example below, the parameters are used to filter the query to return only selected students. Note that the parameter [Student Ident] is substituted by the database engine during execution of the query at run time.
<PRE><CODE>strSQL = strParam + "SELECT * FROM Enrollment WHERE Enrollment.[Student ID] = [Student Ident]";
</CODE></PRE>
</LI>

	<LI>Create a named querydef ("Find Enrollments") with your SQL statement.
<PRE><CODE>CDaoQueryDef qd( m_dbStudentReg );
qd.Create( "Find Enrollments", strSQL );
qd.Append( );
</CODE></PRE>
</LI>

	<LI>Set the querydef parameters. 
<P class=tl>First, you need to gain access to the querydef. You can either use the querydef object just created, or reference the stored querydef object from the QueryDefs collection. The example shows using the querydef just created.</P>
<PRE><CODE>COleVariant varParamValue( strStudentID );
qd.SetParamValue( "[Student ID]", varParamValue );
</CODE></PRE>
</LI>

	<LI>Execute the procedure. 
<P class=tl>Because this query returns records, you need to create a recordset to capture the result set.</P>
<PRE><CODE>CEnrollmentSet rsEnrollmentSet( &amp;m_dbStudentReg );
rsEnrollmentSet.Open( &amp;qd, dbOpenDynaset );
</CODE></PRE>
</LI>
</OL>

<P>The parameter is defined as part of the SQL statement and becomes part of a <B>PARAMETERS</B> clause. You set the value of the parameter, at run time, by calling the querydef object's <A HREF="JavaScript:hhobj_13.Click()">SetParamValue</A> member function. This function takes:

<UL type=disc>
	<LI>A parameter name, which must match the name you specified in the SQL string ("Student Ident" in the example).<BR><BR></LI>

	<LI>A <A HREF="JavaScript:hhobj_14.Click()">COleVariant</A> object that contains the value. <B>COleVariant</B> makes it easy to use the <A HREF="JavaScript:hhobj_15.Click()">VARIANT</A> data type from MFC for a variety of different actual types. In the example, the actual type is a string.</LI>
</UL>

<P>For more information and a different example (presented in the Basic language rather than C++), see the topic "Creating Parameter Queries with DAO" in DAO Help.</P>

<P>In the <I>Class Library Reference</I>, see <A HREF="JavaScript:hhobj_16.Click()">CDaoQueryDef</A> and <A HREF="JavaScript:hhobj_17.Click()">CDaoRecordset</A>. In particular, see <A HREF="JavaScript:hhobj_18.Click()">CDaoQueryDef::SetParamValue</A> and <A HREF="JavaScript:hhobj_19.Click()">CDaoQueryDef::GetParamValue</A>. </P>

<H3>What do you want to know more about:</H3>

<UL type=disc>
	<LI><A HREF="_core_dao_queries.htm">DAO Queries</A><BR><BR></LI>

	<LI><A HREF="_core_dao_querydef.htm">DAO Querydef</A><BR><BR></LI>

	<LI><A HREF="_core_dao_recordset.htm">DAO Recordset</A><BR><BR></LI>

	<LI><A HREF="_core_dao_queries.3a_.sql_for_dao.htm">DAO Queries: SQL for DAO</A></LI>
</UL>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_dao.3a_.where_is.......htm">DAO: Where Is...</A></P>
</font>
</BODY>
</HTML>
