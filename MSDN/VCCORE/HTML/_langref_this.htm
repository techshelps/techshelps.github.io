<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>this</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_this"></A><SUP></SUP>this</H1>

<P><B>C++ Specific —&gt;</B></P>

<P>The <B>this</B> pointer is a pointer accessible only within the member functions of a <B>class</B>, <B>struct</B>, or <B>union</B> type. It points to the object for which the member function is called. Static member functions do not have a <B>this</B> pointer.</P>

<P>When a nonstatic member function is called for an object, the address of the object is passed as a hidden argument to the function. For example, the following function call</P>

<PRE><CODE>myDate.setMonth( 3 );</CODE></PRE>

<P>can be interpreted this way:</P>

<PRE><CODE>setMonth( &amp;myDate, 3 );</CODE></PRE>

<P>The object's address is available from within the member function as the <B>this</B> pointer. It is legal, though unnecessary, to use the <B>this</B> pointer when referring to members of the class.</P>

<P>The expression <B>(*this)</B> is commonly used to return the current object from a member function.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;Modifying the <B>this</B> pointer is illegal in the latest version of C++.</P>

<P><B>END C++ Specific</B></P>

<P class=label><B>Example</B></P>

<PRE><CODE>// Example of the this pointer
void Date::setMonth( int mn )
{
   month = mn;            // These three statements
   this-&gt;month = mn;      //     are equivalent
   (*this).month = mn;
}</CODE></PRE>
</font>
</BODY>
</HTML>
