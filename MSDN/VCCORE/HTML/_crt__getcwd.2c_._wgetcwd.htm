<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_getcwd, _wgetcwd</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__getcwd.2c_._wgetcwd"></A><SUP></SUP>_getcwd, _wgetcwd</H1>

<P>Get the current working directory.</P>

<P><B>char</B> <B>*_getcwd(</B> <B>char</B> <B>*</B><I>buffer</I><B>,</B> <B>int</B> <I>maxlen</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*_wgetcwd(</B> <B>wchar_t</B> <B>*</B><I>buffer</I><B>,</B> <B>int</B> <I>maxlen</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=34%><B>Required Header</B></TD>
<TD class=label width=49%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_getcwd</B></TD>
<TD width=34%>&lt;direct.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_wgetcwd</B></TD>
<TD width=34%>&lt;direct.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=49%>Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns a pointer to <I>buffer</I>. A <B>NULL</B> return value indicates an error, and <B>errno</B> is set either to <B>ENOMEM</B>, indicating that there is insufficient memory to allocate <I>maxlen</I> bytes (when a <B>NULL</B> argument is given as <I>buffer</I>), or to <B>ERANGE</B>, indicating that the path is longer than <I>maxlen</I> characters.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>buffer</I></P>

<P class=indent>Storage location for path</P>

<P class=dt><I>maxlen</I></P>

<P class=indent>Maximum length of path in characters: <B>char</B> for <B>_getcwd</B> and <B>wchar_t</B> for <B>_wgetcwd</B></P>

<P class=label><B>Remarks</B></P>

<P>The <B>_getcwd</B> function gets the full path of the current working directory for the default drive and stores it at <I>buffer</I>. The integer argument <I>maxlen</I> specifies the maximum length for the path. An error occurs if the length of the path (including the terminating null character) exceeds <I>maxlen.</I> The <I>buffer</I> argument can be <B>NULL</B>; a buffer of at least size <I>maxlen</I> (more only if necessary) will automatically be allocated, using <B>malloc</B>, to store the path. This buffer can later be freed by calling <B>free</B> and passing it the <B>_getcwd</B> return value (a pointer to the allocated buffer).</P>

<P><B>_getcwd</B> returns a string that represents the path of the current working directory. If the current working directory is the root, the string ends with a backslash ( <B>\</B> ). If the current working directory is a directory other than the root, the string ends with the directory name and not with a backslash.</P>

<P><B>_wgetcwd</B> is a wide-character version of <B>_getcwd</B>; the <I>buffer</I> argument and return value of <B>_wgetcwd</B> are wide-character strings. <B>_wgetcwd</B> and <B>_getcwd</B> behave identically otherwise.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=14%><B>TCHAR.H Routine </B></TD>
<TD class=label width=30%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=24%><B>_MBCS Defined</B></TD>
<TD class=label width=32%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=14%>_tgetcwd</TD>
<TD width=30%>_getcwd</TD>
<TD width=24%>_getcwd</TD>
<TD width=32%>_wgetcwd</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>// GETCWD.C
/* This program places the name of the current directory in the 
 * buffer array, then displays the name of the current directory 
 * on the screen. Specifying a length of _MAX_PATH leaves room 
 * for the longest legal path name.
 */

#include &lt;direct.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   char buffer[_MAX_PATH];

   /* Get the current working directory: */
   if( _getcwd( buffer, _MAX_PATH ) == NULL )
      perror( "_getcwd error" );
   else
      printf( "%s\n", buffer );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>C:\code

</CODE></PRE>

<P><A HREF="_crt_directory_control.htm">Directory Control Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__chdir.2c_._wchdir.htm">_chdir</A>, <A HREF="_crt__mkdir.2c_._wmkdir.htm">_mkdir</A>, <A HREF="_crt__rmdir.2c_._wrmdir.htm">_rmdir</A></P>
</font>
</BODY>
</HTML>
