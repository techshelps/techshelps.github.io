<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning (level 1) C4047</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c4047"></A><SUP></SUP>Compiler Warning (level 1) C4047</H1>

<P class=dt><B>'identifier1' : 'operator' : different levels of indirection from 'identifier2'</B></P>

<P>Indirection refers to accessing a variable through a pointer. Just as a pointer can refer, or point, to a variable (one level of indirection), a pointer can also point to another pointer that, in turn, points to a variable (two levels of indirection). Because two pointers that have different levels of indirection possibly refer to two different things (one could be pointing to a variable, while the other could be pointing to another pointer), the compiler issues warning C4047 whenever you include such pointers in an expression.</P>

<P>For example, the following code generates this warning but is compiled without change:</P>

<PRE><CODE>void main() {
    char **p;// two levels of indirection
    char *q; // one level of indirection
    p = q;   // warning C4047
}
</CODE></PRE>
</font>
</BODY>
</HTML>
