<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_creat, _wcreat</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__creat.2c_._wcreat"></A><SUP></SUP>_creat, _wcreat</H1>

<P>Creates a new file.</P>

<P><B>int</B> <B>_creat(</B> <B>const</B> <B>char</B> <B>*</B><I>filename</I><B>,</B> <B>int</B> <I>pmode</I> <B>);</B></P>

<P><B>int</B> <B>_wcreat(</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>filename</I><B>,</B> <B>int</B> <I>pmode</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Routine</B></TD>
<TD class=label width=19%><B>Required Header</B></TD>
<TD class=label width=32%><B>Optional Headers</B></TD>
<TD class=label width=33%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_creat</B></TD>
<TD width=19%>&lt;io.h&gt;</TD>
<TD width=32%>&lt;sys/types.h&gt;, &lt;sys/stat.h&gt;, &lt;errno.h&gt;</TD>
<TD width=33%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_wcreat</B></TD>
<TD width=19%>&lt;io.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=32%>&lt;sys/types.h&gt;, &lt;sys/stat.h&gt;, &lt;errno.h&gt;</TD>
<TD width=33%>Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions, if successful, returns a handle to the created file. Otherwise the function returns –1 and sets <B>errno</B> as follows.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=22%><B>errno Setting</B></TD>
<TD class=label width=78%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>EACCES</B></TD>
<TD width=78%>Filename specifies an existing read-only file or specifies a directory instead of a file</TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>EMFILE</B></TD>
<TD width=78%>No more file handles are available</TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>ENOENT</B></TD>
<TD width=78%>The specified file could not be found</TD>
</TR>
</TABLE><BR>

<P class=label><B>Parameters</B></P>

<P class=dt><I>filename</I></P>

<P class=indent>Name of new file</P>

<P class=dt><I>pmode</I></P>

<P class=indent>Permission setting</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_creat</B> function creates a new file or opens and truncates an existing one. <B>_wcreat</B> is a wide-character version of <B>_creat</B>; the <I>filename</I> argument to <B>_wcreat</B> is a wide-character string. <B>_wcreat</B> and <B>_creat</B> behave identically otherwise.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tcreat</TD>
<TD width=29%>_creat</TD>
<TD width=26%>_creat</TD>
<TD width=28%>_wcreat</TD>
</TR>
</TABLE><BR>

<P>If the file specified by <I>filename</I> does not exist, a new file is created with the given permission setting and is opened for writing. If the file already exists and its permission setting allows writing, <B>_creat</B> truncates the file to length 0, destroying the previous contents, and opens it for writing. The permission setting, <I>pmode</I>, applies to newly created files only. The new file receives the specified permission setting after it is closed for the first time. The integer expression <I>pmode</I> contains one or both of the manifest constants <B>_S_IWRITE</B> and <B>_S_IREAD</B>, defined in SYS\STAT.H. When both constants are given, they are joined with the bitwise-OR operator ( <B>|</B> ). The <I>pmode</I> parameter is set to one of the following values:</P>

<P class=dt><B>_S_IWRITE</B></P>

<P class=indent>Writing permitted</P>

<P class=dt><B>_S_IREAD</B></P>

<P class=indent>Reading permitted</P>

<P class=dt><B>_S_IREAD | _S_IWRITE</B></P>

<P class=indent>Reading and writing permitted</P>

<P>If write permission is not given, the file is read-only. All files are always readable; it is impossible to give write-only permission. Thus the modes <B>_S_IWRITE</B> and <B>_S_IREAD | _S_IWRITE</B> are equivalent. Files opened using <B>_creat</B> are always opened in compatibility mode (see <A HREF="_crt__sopen.2c_._wsopen.htm">_sopen</A>) with <B>_SH_DENYNO</B>.</P>

<P><B>_creat</B> applies the current file-permission mask to <I>pmode</I> before setting the permissions (see <A HREF="_crt__umask.htm">_umask</A>). <B>_creat</B> is provided primarily for compatibility with previous libraries. A call to <B>_open</B> with <B>_O_CREAT</B> and <B>_O_TRUNC</B> in the <I>oflag</I> parameter is equivalent to <B>_creat</B> and is preferable for new code.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* CREAT.C: This program uses _creat to create
 * the file (or truncate the existing file)
 * named data and open it for writing.
 */

#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;io.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

void main( void )
{
   int fh;

   fh = _creat( "data", _S_IREAD | _S_IWRITE );
   if( fh == -1 )
      perror( "Couldn't create data file" );
   else
   {
      printf( "Created data file.\n" );
      _close( fh );
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Created data file.
 

</CODE></PRE>

<P><A HREF="_crt_low.2d.level_i.2f.o.htm">Low-Level I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__chmod.2c_._wchmod.htm">_chmod</A>, <A HREF="_crt__chsize.htm">_chsize</A>, <A HREF="_crt__close.htm">_close</A>, <A HREF="_crt__dup.2c_._dup2.htm">_dup</A>, <A HREF="_crt__open.2c_._wopen.htm">_open</A>, <A HREF="_crt__sopen.2c_._wsopen.htm">_sopen</A>, <A HREF="_crt__umask.htm">_umask</A></P>
</font>
</BODY>
</HTML>
