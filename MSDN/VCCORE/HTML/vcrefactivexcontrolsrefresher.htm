<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using ActiveX Controls</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcrefactivexcontrolsrefresher"></A>Using ActiveX Controls</H1>

<P>The topics in this section present an overview of using ActiveX controls.</P>

<P>An ActiveX control is a COM component that supports standard interfaces relating to persistence, connection points, and hosting. These standard interfaces define a protocol by which a control can be hosted in a control container, exchange messages, and handle events. </P>

<P>As COM servers, ActiveX controls have:</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=14%>Properties</TD>
<TD width=86%>Controls have member variables to represent internal state and are implemented as Get and Set accessor functions. A Get function is generated for each accessor method with a propget tag in the .idl file. A Set function is generated for each accessor method with either a propput or propputref IDL tag. 
<P>Use <A HREF="vcrefwrapperclasses.htm">wrapper classes</A> or the <A HREF="vcrefusingolecomobjectviewertoviewcontrolsinterfaces.htm">OLE/COM Object Viewer</A> to determine how accessor functions are defined.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>Methods</TD>
<TD width=86%>A control's behavior is defined by its public methods. Wrapper classes give you access to a control's methods.
<P>If you do not use wrapper classes, you get access to a control's methods by obtaining a pointer to an interface.</P>

<P>An example of a public method is the Refresh method in the ADO Data Control, which updates the retrieved rowset.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>Events</TD>
<TD width=86%>A control can generate an event to notify the host that something happened. An example is the OnClick event for the Button control. When the button gets clicked, the button generates an OnClick event. If the control's host has a handler for that event, it executes.</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>Type Library</TD>
<TD width=86%>A type library tells a control container what properties, methods, and events are supported by a control. Type libraries can exist either as separate files (with a .tlb extension) or internally within the control.
<P>Type libraries also contain the control's coclass information. A coclass is a COM class that is identified with a GUID. A coclass contains one or more interfaces that are defined by the control.</P>

<P>To examine type libraries, use the <A HREF="vcrefusingolecomobjectviewertoviewcontrolsinterfaces.htm">OLE/COM Object Viewer</A>.</P>
</TD>
</TR>
</TABLE><BR>

<P><B>The following sections describe the use of an ActiveX control</B>:</P>

<P><A HREF="vcrefinsertingcontrolintovisualcprogram.htm">Inserting the Control into a Visual C++ Application</A></P>

<P><A HREF="vcrefwrapperclasses.htm">Wrapper Classes</A></P>

<P><A HREF="vcrefgettinghelp.htm">Getting Help on Controls</A></P>

<P><A HREF="vcrefconnections.htm">Creating a Database Connection</A></P>

<P><A HREF="vcrefsettingproperties.htm">Setting Control Properties at Design Time</A></P>

<P><A HREF="vcrefsettingeventhandlers.htm">Setting Event Handlers on ActiveX Controls</A></P>

<P><A HREF="vcrefprogrammingtocontrol.htm">Modifying a Control's Run-Time Behavior</A></P>

<P><A HREF="vcrefredistributingcontrols.htm">Redistributing Controls</A></P>
</font>
</BODY>
</HTML>
