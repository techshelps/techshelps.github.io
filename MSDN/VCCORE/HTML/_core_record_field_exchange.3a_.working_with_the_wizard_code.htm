<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Record Field Exchange: Working with the Wizard Code</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Enroll Tutorial">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.DoFieldExchange">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.IsFieldDirty">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.IsFieldNull">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CFieldExchange.3a3a.SetFieldType">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CFieldExchange">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.m_nFields">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.m_nParams">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_record_field_exchange.3a_.working_with_the_wizard_code"></A>Record Field Exchange: Working with the Wizard Code</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_databases.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_odbc_database_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_databases.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_odbc_database_sample_list.htm">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_odbc_driver_list.htm">ODBC Driver List</A></P>

<P>This article explains the code that AppWizard and ClassWizard write to support RFX and how you might want to alter that code.</P>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>This article applies to classes derived from <B>CRecordset</B> in which bulk row fetching has not been implemented. If you are using bulk row fetching, then bulk record field exchange (Bulk RFX) is implemented. Bulk RFX is similar to RFX. To understand the differences, see the article <A HREF="_core_recordset.3a_.fetching_records_in_bulk_.28.odbc.29.htm">Recordset: Fetching Records in Bulk (ODBC)</A>.</P>

<P>When you create a recordset class with ClassWizard (or with AppWizard), the wizard writes the following RFX-related elements for you, based on the data source, table, and column choices you make in the wizard:

<UL type=disc>
	<LI>Declarations of the recordset <A HREF="_core_recordset.3a_.architecture_.28.odbc.29.htm#_core_field_data_members">field data members</A> in the recordset class.<BR><BR></LI>

	<LI>An override of <B>CRecordset::DoFieldExchange</B>.<BR><BR></LI>

	<LI>Initialization of recordset field data members in the recordset class constructor.</LI>
</UL>



<H2><A NAME="_core_the_field_data_member_declarations"></A>The Field Data Member Declarations</H2>

<P>The wizards write a recordset class declaration in an .H file that resembles the following for class <CODE>CSections</CODE>:</P>

<PRE><CODE>class CSections : public CRecordset
{
public:
    CSections(CDatabase* pDatabase);
    CSections::~CSections();

// Field/Param Data
    //{{AFX_FIELD(CSections, CRecordset)
    CString   m_strCourseID;
    CString   m_strInstructorID;
    CString   m_strRoomNo;
    CString   m_strSchedule;
    CString   m_strSectionNo;
    //}}AFX_FIELD 

// Implementation
protected:
    virtual CString GetDefaultConnect();   // Default connection string
    virtual CString GetDefaultSQL();    // Default SQL for Recordset
    virtual void DoFieldExchange(CFieldExchange* pFX);  // RFX support
    DECLARE_DYNAMIC(CSections)
};
</CODE></PRE>

<P>Notice the following key features about the class above:

<UL type=disc>
	<LI>Special “//{{AFX_FIELD” comments that bracket the field data member declarations. ClassWizard uses these to update your source file.<BR><BR></LI>

	<LI>The wizard overrides the <B>DoFieldExchange</B> member function of class <B>CRecordset</B>.</LI>
</UL>

<P class=indent><B><B>Caution</B></B>&nbsp;&nbsp;&nbsp; Never edit the code inside “//{{AFX” brackets. Always use ClassWizard. If you add parameter data members or new field data members that you bind yourself, add them outside the brackets.</P>



<H2><A NAME="_core_the_dofieldexchange_override"></A>The DoFieldExchange Override</H2>

<P><A HREF="JavaScript:hhobj_3.Click()">DoFieldExchange</A> is the heart of RFX. The framework calls <B>DoFieldExchange</B> any time it needs to move data either from data source to recordset or from recordset to data source. <B>DoFieldExchange</B> also supports obtaining information about field data members through the <A HREF="JavaScript:hhobj_4.Click()">IsFieldDirty</A> and <A HREF="JavaScript:hhobj_5.Click()">IsFieldNull</A> member functions.</P>

<P>The following <B>DoFieldExchange</B> override is for the <CODE>CSections</CODE> class. ClassWizard writes the function in the .CPP file for your recordset class.</P>

<PRE><CODE>void CSections::DoFieldExchange(CFieldExchange* pFX)
{
    //{{AFX_FIELD_MAP(CSections)
    pFX-&gt;SetFieldType(CFieldExchange::outputColumn);
    RFX_Text(pFX, "CourseID", m_strCourseID);
    RFX_Text(pFX, "InstructorID", m_strInstructorID);
    RFX_Text(pFX, "RoomNo", m_strRoomNo);
    RFX_Text(pFX, "Schedule", m_strSchedule);
    RFX_Text(pFX, "SectionNo", m_strSectionNo);
    //}}AFX_FIELD_MAP
}
</CODE></PRE>

<P>Notice the following key features of the function:

<UL type=disc>
	<LI>The special “//{{AFX_FIELD_MAP” comments. ClassWizard uses these to update your source file. This section of the function is called the “field map.”<BR><BR></LI>

	<LI>A call to <B>CFieldExchange::SetFieldType</B>, through the <I>pFX</I> pointer. This call specifies that all RFX function calls up to the end of <B>DoFieldExchange</B> or the next call to <B>SetFieldType</B> are “output columns.” See <A HREF="JavaScript:hhobj_6.Click()">CFieldExchange::SetFieldType</A> for more information. <BR><BR></LI>

	<LI>Several calls to the <B>RFX_Text</B> global function — one per field data member (all of which are <B>CString</B> variables in the example). These calls specify the relationship between a column name on the data source and a field data member. The RFX functions do the actual data transfer. The class library supplies RFX functions for all of the common data types. For more information about RFX functions, see the article <A HREF="_core_record_field_exchange.3a_.using_the_rfx_functions.htm">Record Field Exchange: Using the RFX Functions</A>. 
<P class=atl><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>The order of the columns in your result set must match the order of the RFX function calls in <CODE>DoFieldExchange</CODE>.</p></LI>

	<LI>The <I>pFX</I> pointer to a <A HREF="JavaScript:hhobj_7.Click()">CFieldExchange</A> object that the framework passes when it calls <B>DoFieldExchange</B>. The <B>CFieldExchange</B> object specifies the operation that <B>DoFieldExchange</B> is to perform, the direction of transfer, and other context information.</LI>
</UL>



<H2><A NAME="_core_the_recordset_constructor"></A>The Recordset Constructor</H2>

<P>The recordset constructor that the wizards write contains two things related to RFX:

<UL type=disc>
	<LI>An initialization for each field data member.<BR><BR></LI>

	<LI>An initialization for the <A HREF="JavaScript:hhobj_8.Click()">m_nFields</A> data member, which contains the number of field data members.</LI>
</UL>

<P>The constructor for the <CODE>CSections</CODE> recordset example looks like this:</P>

<PRE><CODE>CSections::CSections(CDatabase* pdb)
    : CRecordset(pdb)
{
    //{{AFX_FIELD_INIT(CSections)
    m_strCourseID = "";
    m_strInstructorID = "";
    m_strRoomNo = "";
    m_strSchedule = "";
    m_strSectionNo = "";
    m_nFields = 5;
    //}}AFX_FIELD_INIT 
}
</CODE></PRE>

<P class=indent><B><B>Important&nbsp;&nbsp;&nbsp;</B></B>If you add any field data members manually, as you might if you bind new columns dynamically, you must increment <B>m_nFields</B>. Do so with another line of code outside the “//{{AFX_FIELD_INIT” brackets:</P>

<PRE><CODE>    m_nFields += 3;
</CODE></PRE>

<P class=indent>This is the code for adding three new fields. If you add any parameter data members, you must initialize the <A HREF="JavaScript:hhobj_9.Click()">m_nParams</A> data member, which contains the number of parameter data members. Put the <B>m_nParams</B> initialization outside the brackets. </P>
</font>
</BODY>
</HTML>
