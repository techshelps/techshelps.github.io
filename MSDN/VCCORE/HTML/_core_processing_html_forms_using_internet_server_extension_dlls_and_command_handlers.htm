<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing HTML Forms Using Internet Server Extension DLLs and Command Handlers</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_Internet_Server_API_.28.ISAPI.29_.Parse_Maps">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_processing_html_forms_using_internet_server_extension_dlls_and_command_handlers"></A>Processing HTML Forms Using Internet Server Extension DLLs and Command Handlers</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_internet_support.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_internet_tasks.htm">How Do I</A></P>

<P>This topic describes how to use the <B>MfcISAPICommand</B> parameter in HTML forms.</P>

<H3>Command Handlers</H3>

<P>MFC's ISAPI classes for creating Internet server extension DLLs make use of "command handlers"?function names that are included in Uniform Resource Locators (URLs) and that allow a particular member function of a <B>CHttpServer</B> object to handle a request. Command handlers are defined with <B>PARSE_MAP</B> macros and are especially useful for processing HTML forms. For more information on defining command handlers, see the reference topic <A HREF="JavaScript:hhobj_2.Click()">Internet Server API (ISAPI) Parse Maps</A>.</P>

<H3>Web Browser Inconsistencies</H3>

<P>When creating your server extension DLLs and the Web pages that contain links or forms that call your extensions, you must keep in mind that although you control what happens on the server side, you do not have control over your users' Web browsers. For example, consider the following HTML form:</P>

<PRE><CODE>&lt;FORM ACTION="http://www.moosegrrrl.com/scripts/MyExtension.dll?MyFunction" METHOD=GET&gt;
Enter your full name: &lt;INPUT NAME="name" VALUE="Anonymous"&gt;
&lt;INPUT TYPE=SUBMIT VALUE="Register"&gt;
&lt;/FORM&gt;
</CODE></PRE>

<P>This form generates a request whose syntax depends on the individual browser. Microsoft Internet Explorer 3.x will send a command line such as: </P>

<PRE><CODE>http://www.moosegrrrl.com/scripts/MyExtension.dll?MyFunction?name=Anonymous
</CODE></PRE>

<P>while Netscape Navigator 3.x will send:</P>

<PRE><CODE>http://www.moosegrrrl.com/scripts/MyExtension.dll?name=Anonymous
</CODE></PRE>

<P>Microsoft Internet Explorer 3.x will append a question mark to the form's action if the form is being sent to the server by way of the GET method. It will not append a question mark to the action if the form's method is POST; however, there must be a question mark after the name of the extension DLL to indicate that the DLL is a script to be run, not an item to be downloaded. Netscape Navigator 3.x will, regardless of the method used to send a form or the syntax of the ACTION, always send a command line that contains one and only one question mark at the end of the action. Other versions of these browsers and browsers written by different companies may behave differently. </P>

<H3>Using the New MfcISAPICommand Parameter</H3>

<P>To provide you with a simple way to get around the issue of browser inconsistencies and still retain the ability to make use of command handlers, MFC version 4.2 has implemented the <B>MfcISAPICommand</B> parameter. If <CODE>"MfcISAPICommand"</CODE> is the first available parameter, its value will be the command handler used by the <B>CHttpServer</B> object to process the request. If the first available parameter is not <CODE>"MfcISAPICommand"</CODE>, then the <B>CHttpServer</B> object will look to the first item on the command line following the name of the extension to determine which function to call, as it does in MFC 4.1 parameter processing. </P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;Unless the <CODE>"MfcISAPICommand"</CODE> parameter is at the very beginning of the form data, it is processed as an ordinary parameter.</P>

<P>The following HTML form shows the suggested usage of the <CODE>"MfcISAPICommand"</CODE> parameter, which enables your Internet server extension to correctly handle requests generated by either Microsoft or Netscape browsers:</P>

<PRE><CODE>&lt;FORM ACTION=" http://www.moosegrrrl.com/scripts/MyExtension.dll" METHOD=GET&gt;
&lt;INPUT TYPE=HIDDEN NAME="MfcISAPICommand" VALUE="MyFunction"&gt;
Enter your full name: &lt;INPUT NAME="name" VALUE="Anonymous"&gt;
&lt;INPUT TYPE=SUBMIT VALUE="Register"&gt;
&lt;/FORM&gt;
</CODE></PRE>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_declaring_a_command_in_a_parse_map.htm">Declaring a Command in a Parse Map</A><BR><BR></LI>

	<LI><A HREF="_core_passing_a_string_from_the_url.htm">Passing a String from the URL</A><BR><BR></LI>

	<LI><A HREF="_core_naming_parameters_with_on_parse_command_params.htm">Naming Parameters with ON_PARSE_COMMAND_PARAMS</A><BR><BR></LI>

	<LI><A HREF="_core_managing_required_and_optional_parameters.htm">Managing Required and Optional Parameters</A></LI>
</UL>
</font>
</BODY>
</HTML>
