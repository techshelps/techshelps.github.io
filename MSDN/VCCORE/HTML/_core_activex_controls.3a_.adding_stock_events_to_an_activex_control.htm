<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Controls: Adding Stock Events to an ActiveX Control</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="circle sample start">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleControl">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleControl">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_activex_controls.3a_.adding_stock_events_to_an_activex_control"></A>ActiveX Controls: Adding Stock Events to an ActiveX Control</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_activex_controls.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_activex_control_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_frequently_asked_questions_about_activex_controls.htm">FAQ</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_activex_control_sample_list.htm">Sample</A></P>

<P>Stock events differ from custom events in that they are automatically fired by class <A HREF="JavaScript:hhobj_3.Click()">COleControl</A>. <B>COleControl</B> contains predefined member functions that fire events resulting from common actions. Some common actions implemented by <B>COleControl</B> include single- and double-clicks on the control, keyboard events, and changes in the state of the mouse buttons. Event map entries for stock events are always preceded by the <B>EVENT_STOCK</B> prefix. </P>



<H2><A NAME="_core_stock_events_supported_by_classwizard"></A>Stock Events Supported by ClassWizard</H2>

<P>The <B>COleControl</B> class provides nine stock events, listed in the following table. You can specify the events you want in your control in the <B>ActiveX Events tab</B> in ClassWizard.</P>

<P class=label><B>Stock Events</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=14%><B>Event</B></TD>
<TD class=label width=40%><B>Firing function</B></TD>
<TD class=label width=46%><B>Comments</B></TD>
</TR>

<TR VALIGN="top">
<TD width=14%>Click</TD>
<TD width=40%><B>void FireClick( )</B></TD>
<TD width=46%>Fired when the control captures the mouse, any <B>BUTTONUP</B> (left, middle, or right) message is received, and the button is released over the control. The stock MouseDown and MouseUp events occur before this event.
<P>Event map entry: <B>EVENT_STOCK_CLICK( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>DblClick</TD>
<TD width=40%><B>void FireDblClick( )</B></TD>
<TD width=46%>Similar to Click but fired when a <B>BUTTONDBLCLK</B> message is received.
<P>Event map entry: <B>EVENT_STOCK_DBLCLICK( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>Error</TD>
<TD width=40%><B>void FireError( SCODE </B><I>scode</I><B>, LPCSTR </B><I>lpszDescription</I><B>, UINT </B><I>nHelpID</I><B> = 0 )</B></TD>
<TD width=46%>Fired when an error occurs within your ActiveX control outside of the scope of a method call or property access.
<P>Event map entry: <B>EVENT_STOCK_ERROREVENT( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>KeyDown</TD>
<TD width=40%><B>void FireKeyDown( short </B><I>nChar</I><B>, short </B><I>nShiftState</I><B> )</B></TD>
<TD width=46%>Fired when a <B>WM_SYSKEYDOWN</B> or <B>WM_KEYDOWN</B> message is received.
<P>Event map entry: <B>EVENT_STOCK_KEYDOWN( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>KeyPress</TD>
<TD width=40%><B>void FireKeyPress( short* </B><I>pnChar</I><B> )</B></TD>
<TD width=46%>Fired when a <B>WM_CHAR</B> message is received.
<P>Event map entry: <B>EVENT_STOCK_KEYPRESS( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>KeyUp</TD>
<TD width=40%><B>void FireKeyUp( short </B><I>nChar</I><B>, short </B><I>nShiftState</I><B> )</B></TD>
<TD width=46%>Fired when a <B>WM_SYSKEYUP</B> or <B>WM_KEYUP</B> message is received.
<P>Event map entry: <B>EVENT_STOCK_KEYUP( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>MouseDown</TD>
<TD width=40%><B>void FireMouseDown( short </B><I>nButton</I><B>, short </B><I>nShiftState</I><B>, float </B><I>x</I><B>, float </B><I>y</I><B> )</B></TD>
<TD width=46%>Fired if any <B>BUTTONDOWN</B> (left, middle, or right) is received. The mouse is captured immediately before this event is fired.
<P>Event map entry: <B>EVENT_STOCK_MOUSEDOWN( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>MouseMove</TD>
<TD width=40%><B>void FireMouseMove( short </B><I>nButton</I><B>, short </B><I>nShiftState</I><B>, float </B><I>x</I><B>, float </B><I>y</I><B> )</B></TD>
<TD width=46%>Fired when a <B>WM_MOUSEMOVE</B> message is received.
<P>Event map entry: <B>EVENT_STOCK_MOUSEMOVE( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>MouseUp</TD>
<TD width=40%><B>void FireMouseUp( short </B><I>nButton</I><B>, short </B><I>nShiftState</I><B>, float </B><I>x</I><B>, float </B><I>y</I><B> )</B></TD>
<TD width=46%>Fired if any <B>BUTTONUP</B> (left, middle, or right) is received. The mouse capture is released before this event is fired.
<P>Event map entry: <B>EVENT_STOCK_MOUSEUP( )</B></P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=14%>ReadyStateChange</TD>
<TD width=40%><B>void FireReadyStateChange( )</B></TD>
<TD width=46%>Fired when a control transitions to the next ready state due to the amount of data received.
<P>Event map entry: <B>EVENT_STOCK_READYSTATECHANGE( )</B></P>
</TD>
</TR>
</TABLE><BR>



<H2><A NAME="_core_adding_a_stock_event_using_classwizard"></A>Adding a Stock Event Using ClassWizard</H2>

<P>Adding stock events requires less work than adding custom events because the firing of the actual event is handled automatically by the base class, <B>COleControl</B>. The following procedure adds a stock event to a control that was developed using ControlWizard. The event, called KeyPress, fires when a key is pressed and the control is active. This procedure can also be used to add other stock events. Simply substitute the desired stock event name for KeyPress.</P>

<P class=label><B>To add the KeyPress stock event using ClassWizard</B>

<OL>
	<LI>Load your control’s project.<BR><BR></LI>

	<LI>On the <B>View </B>menu, click <B>ClassWizard</B>.<BR><BR></LI>

	<LI>Click the <B>ActiveX Events</B> tab.<BR><BR></LI>

	<LI>Select the name of your control class from the <B>Class Name</B> box.<BR><BR></LI>

	<LI>Click <B>Add Event</B>.<BR><BR></LI>

	<LI>In the <B>External Name</B> box, click <B>KeyPress</B>.<BR><BR></LI>

	<LI>Click <B>OK</B>.<BR><BR></LI>

	<LI>Click <B>OK</B> again to confirm your choices and exit <B>ClassWizard</B>.</LI>
</OL>



<H2><A NAME="_core_classwizard_changes_for_stock_events"></A>ClassWizard Changes for Stock Events</H2>

<P>Because stock events are handled by the control’s base class, ClassWizard does not change your class declaration in any way. It simply adds the event to the control’s event map and makes an entry in its .ODL file. The following line is added to the control’s event map, located in the control class implementation (.CPP) file:</P>

<PRE><CODE>EVENT_STOCK_KEYPRESS()
</CODE></PRE>

<P>Adding this code fires a KeyPress event when a <B>WM_CHAR</B> message is received and the control is active. The KeyPress event can be fired at other times by calling its firing function (for example, <CODE>FireKeyPress</CODE>) from within the control code.</P>

<P>ClassWizard adds the following line of code to the control’s .ODL file:</P>

<PRE><CODE>[id(DISPID_KEYPRESS)] void KeyPress(short* KeyAscii);
</CODE></PRE>

<P>This line associates the KeyPress event with its standard dispatch ID and allows the container to anticipate the KeyPress event.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_activex_controls.3a_.methods.htm">ActiveX Controls: Methods</A>, <A HREF="JavaScript:hhobj_4.Click()">COleControl</A></P>
</font>
</BODY>
</HTML>
