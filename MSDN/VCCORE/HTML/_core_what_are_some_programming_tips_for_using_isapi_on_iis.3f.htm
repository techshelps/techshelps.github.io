<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What Are Some Programming Tips For Using ISAPI on IIS?</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_what_are_some_programming_tips_for_using_isapi_on_iis.3f"></A>What Are Some Programming Tips For Using ISAPI on IIS?</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_internet_support.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_internet_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_internet_programming.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_internet_topics.htm">Details</A>  |&nbsp; <A HREF="_core_internet_sample_list.htm">Sample</A></P>

<P>This article discusses programming tips that are specific to an ISAPI extension or filter running on Microsoft Internet Information Server (IIS). If you are running on other Web servers that support ISAPI, they may handle registry keys, memory, and loading of applications differently. Check the documentation for the Web server you are using for more information.

<UL type=disc>
	<LI>Remember that in IIS 1.0, an ISAPI filter is loaded when the service is started and not unloaded until the service stops. An ISAPI server extension is loaded the first time it is invoked and remains in memory until the service is shut down or the memory is needed for another process. Because your DLL will remain in memory for a long time, consider when to allocate resources, when to deallocate resources, and when to connect or disconnect from resources such as a data source. </LI>
</UL>

<H2><A NAME="_core_how_do_i_install_a_new_version_of_my_filter_or_server_extension.3f"></A>How Do I Install a New Version of My Filter or Server Extension?</H2>

<P>To install a new version of your filter or ISA, you must shut down the service, copy the DLL to the appropriate directory, update the registry if it’s a new filter, and restart the service.</P>

<H2><A NAME="_core_when_is_my_dll_loaded_or_unloaded.3f"></A>When Is My DLL Loaded or Unloaded?</H2>

<P>The registry key HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/W3SVC/Parameters/FilterDLLs controls which filters are loaded when the service starts. It contains a list of filters, including their full paths, separated by commas. To load additional filters, stop the service, add your filter to the registry, and restart the service.</P>

<P>A server extension is loaded when first called by a client.</P>

<P>After the service is started, a filter remains in memory until the computer or the service is shut down. Once loaded, a server extension may also remain in memory until the computer or the service is shut down. You can force reloading of your extension DLL (for example, for debugging purposes) by specifying the registry setting HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/W3SVC/Parameters/CacheExtensions=0. This setting doesn’t take effect until the service is restarted. Note that this setting should be used only while debugging. It has a negative impact on performance, and should never be used on a production server.</P>
</font>
</BODY>
</HTML>
