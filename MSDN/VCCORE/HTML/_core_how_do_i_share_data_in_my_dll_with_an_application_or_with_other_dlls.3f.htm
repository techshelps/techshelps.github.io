<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How do I share data in my DLL with an application or with other DLLs?</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_File_Mapping">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_how_do_i_share_data_in_my_dll_with_an_application_or_with_other_dlls.3f"></A>How do I share data in my DLL with an application or with other DLLs?</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_dlls.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_dll_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_dlls.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_dll_topics.htm">Details</A>  |&nbsp; <A HREF="_core_dll_sample_programs.htm">Sample</A></P>

<P>Win32 DLLs are mapped into the address space of the calling process. By default, each process using a DLL has its own instance of the DLL global and static variables. If your DLL needs to share data with other Win32 DLLs loaded by a different application or with different mappings of the same DLL, then you can use either of the following approaches:

<UL type=disc>
	<LI>Create named data sections using the <B>#pragma</B> statement.<BR><BR></LI>

	<LI>Use memory-mapped files.</LI>
</UL>

<P>To set up a new named section, use the <B>#pragma data_seg</B> directive. You then must specify the correct sharing attributes for this new named data section in your .DEF file. For more information about creating named data sections, see the following Knowledge Base articles:

<UL type=disc>
	<LI>"How to Share Data Between Different Mappings of a DLL" (Q125677).<BR><BR></LI>

	<LI>"Specifying Shared and Nonshared Data in a DLL" (Q100634).<BR><BR></LI>

	<LI>"How to Specify Shared and Nonshared Data in a DLL" (Q89817).<BR><BR></LI>

	<LI>"Sharing All Data in a DLL" (Q109619).</LI>
</UL>

<P>However, if you need to share a C++ class instance, you should use a memory-mapped file, because each time a process attaches to the DLL, the constructor for the object is called. For example: </P>

<PRE><CODE>#pragma  data_seg(".myseg")
  _declspec(dllexport) CTest Counter1(0);
  _declspec(dllexport) short Counter2 = 0;
#pragma data_seg()
</CODE></PRE>

<P>Assume that the variables <CODE>Counter1</CODE> and <CODE>Counter2</CODE> are incremented in a function in the DLL. The value of <CODE>Counter2</CODE> increases as expected, but on each process attach, the constructor for <CODE>Counter1</CODE> is called reinitializing it to zero. In order to share <CODE>Counter1</CODE>, you must use a memory-mapped file. For more information about memory-mapped files, see <A HREF="JavaScript:hhobj_2.Click()">File Mapping</A> in the Win32 SDK documentation.</P>
</font>
</BODY>
</HTML>
