<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>$$SET_DEFAULT_LANG</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_begin_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_appwiz_CUSTOMWZ">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_set_default_lang"></A>$$SET_DEFAULT_LANG</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_appwizard_programming_reference.htm">Overviews</A>  |&nbsp; <A HREF="_core_creating_custom_appwizards.htm">How Do I</A> |&nbsp; <A HREF="_core_details.3a_.beginning_your_program.htm">Details</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Creating a Custom AppWizard is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_3.Click()">Visual C++ Editions</A>.</P>

<P><B>$$SET_DEFAULT_LANG( </B><I>macro-name </I><B>);</B></P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>macro-name</I></P>

<P class=indent>A macro name you add to <A HREF="_core_ccustomappwiz.3a3a.m_dictionary.htm">the dictionary</A>. The value of <I>macro-name</I> must be a three-letter string that corresponds to a language previously selected by an MFC AppWizard or custom AppWizard user. The following table provides a partial list of possible values for <I>macro-name</I>. </P>

<P class=label><B>Language Identifiers</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=13%><B>Value</B></TD>
<TD class=label width=87%><B>Language</B></TD>
</TR>

<TR VALIGN="top">
<TD width=13%>DEU</TD>
<TD width=87%>German</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>ENU</TD>
<TD width=87%>English</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>ESP</TD>
<TD width=87%>Spanish</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>FRA</TD>
<TD width=87%>French</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>ITA</TD>
<TD width=87%>Italian</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>JPN</TD>
<TD width=87%>Japanese</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>SVE</TD>
<TD width=87%>Swedish</TD>
</TR>
</TABLE><BR>

<P class=label><B>Remarks</B></P>

<P>You use the <B>$$SET_DEFAULT_LANG</B> directive to specify a language-identifer for the <A HREF="_core_ccustomappwiz.3a3a.loadtemplate.htm">CCustomAppWiz::LoadTemplate</A> function to use when it searches for a custom resource template to load for use by <A HREF="_core_ccustomappwiz.3a3a.copytemplate.htm">CCustomAppWiz::CopyTemplate</A> or <A HREF="_core_ccustomappwiz.3a3a.processtemplate.htm">CCustomAppWiz::ProcessTemplate</A>.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;Code to perform the following procedure is automatically generated if your custom AppWizard uses the existing set of MFC AppWizard steps for generating an executable file and if you select more than one language from the Custom AppWizard project type’s language list.</P>

<P>If you use the <B>$$SET_DEFAULT_LANG</B> directive in a loop defined by the <B>$$BEGINLOOP</B> and <B>$$ENDLOOP</B> directives, you can use <B>$$BEGINLOOP</B> and <B>$$ENDLOOP</B> to modify macros to write code that finds, extracts, and processes multiple language versions of a language-specific template. For information on how <B>$$BEGINLOOP</B> and <B>$$ENDLOOP</B> modify macros, see <A HREF="_core_.2424.beginloop_and_.2424.endloop.htm">$$BEGINLOOP</A><A HREF="_core_.2424.beginloop_and_.2424.endloop.htm"> and </A><A HREF="_core_.2424.beginloop_and_.2424.endloop.htm">$$ENDLOOP</A>.</P>

<P>The language identifier, which is the value of <I>macro-name</I>, also specifies the search order that <B>LoadTemplate</B> uses to search for a DLL.</P>

<P>Say that <B>$$SET_DEFAULT_LANG</B> is called with a <I>macro-name</I> that expands to “DEU”. <A HREF="_core_ccustomappwiz.3a3a.loadtemplate.htm">LoadTemplate</A> will go through the following algorithm to locate a template named TEMPLATE.RC:

<OL>
	<LI>Try locating TEMPLATE_DEU.RC in the custom AppWizard’s resources.<BR><BR></LI>

	<LI>If not there, try locating TEMPLATE.RC in the custom AppWizard’s resources.<BR><BR></LI>

	<LI>If not there, try locating TEMPLATE.RC in MFCAPWZ.DLL<BR><BR></LI>

	<LI>If not there, try locating TEMPLATE.RC in APPWZDEU.DLL<BR><BR></LI>

	<LI>If not there, try locating TEMPLATE.RC in all the other APPWZ*.DLLs selected by the custom AppWizard user.<BR><BR></LI>

	<LI>If not there, display an error and stop file generation.</LI>
</OL>

<P>Notice that in step 1, <B>LoadTemplate</B> looks for the template under the localized name (TEMPLATE_DEU.RC). If it can’t find a template named TEMPLATE_DEU.RC in the custom AppWizard’s resources, it reverts back to searching for the actual name (TEMPLATE.RC).</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;If AppWizard itself is being run rather than a custom AppWizard, MFCAPWZ.DLL starts the search process at step 3, and thus never tries to locate the template under the localized name.</P>

<P class=label><B>Example</B></P>

<P>Imagine that a user of your custom AppWizard generates a project that will generate an application for use by English-, French-, and Japanese-speaking people. To create the user’s project, your custom AppWizard must find the templates containing strings translated into these languages. It must search in DLLs that include, at least, your custom AppWizard’s DLL, MFCAPWZ.DLL, and possibly APPWZENU.DLL, APPWZFRA.DLL, and APPWZJPN.DLL. For simplicity, we will examine finding and loading one template, FILE.TXT.</P>

<P>Because FILE.TXT is a text file, it will probably be translated into English, French, and Japanese. Your custom AppWizard’s DLL must contain three versions of this file named FILE_ENU.TXT, FILE_FRA.TXT, and FILE_JPN.TXT. Also, your custom AppWizard must make the following addition to the dictionary:</P>

<PRE><CODE>myprojectaw.m_Dictionary[“FILE”] = “FILE.TXT”;
</CODE></PRE>

<P>To track the three languages specified by the user, you add macros to the dictionary as follows:</P>

<PRE><CODE>myprojectaw.m_Dictionary[“LANG_SUFFIX_0”] = “ENU”;
myprojectaw.m_Dictionary[“LANG_SUFFIX_1”] = “FRA”;
myprojectaw.m_Dictionary[“LANG_SUFFIX_2”] = “JPN”;
</CODE></PRE>

<P>Then, when your custom AppWizard must find and load language-specific templates, it does so in a loop as follows:</P>

<PRE><CODE>$$BEGINLOOP(NUM_LANGS)
$$SET_DEFAULT_LANG(LANG_SUFFIX)
$$// Include text from the
$$// properly localized template:
$$INCLUDE(FILE)
$$ENDLOOP
</CODE></PRE>

<P>If NUM_LANGS has the value of “3”, then this loop will iterate three times. During each iteration, MFCAPWZ.DLL will modify its lookup procedure for the LANG_SUFFIX macro and <A HREF="_core_ccustomappwiz.3a3a.loadtemplate.htm">CCustomAppwiz::LoadTemplate</A> will modify its template-loading procedure as follows:

<UL type=disc>
	<LI>First iteration: LANG_SUFFIX first becomes LANG_SUFFIX_0. The value of FILE is extracted from the dictionary and, when <B>$$INCLUDE</B> causes <B>LoadTemplate</B> to be called, the value of FILE is combined with the value of LANG_SUFFIX_0 to produce FILE_ENU.TXT.<BR><BR></LI>

	<LI>Second iteration: LANG_SUFFIX first becomes LANG_SUFFIX_1. The value of FILE is extracted from the dictionary and, when <B>$$INCLUDE</B> causes <B>LoadTemplate</B> to be called, the value of FILE is combined with the value of LANG_SUFFIX_1 to produce FILE_FRA.TXT.<BR><BR></LI>

	<LI>Third iteration: LANG_SUFFIX first becomes LANG_SUFFIX_2. The value of FILE is extracted from the dictionary and, when <B>$$INCLUDE</B> causes <B>LoadTemplate</B> to be called, the value of FILE is combined with the value of LANG_SUFFIX_2 to produce FILE_JPN.TXT.</LI>
</UL>

<P>Thus, the value of LANG_SUFFIX is transformed to “ENU”, “FRA”, and “JPN” and <A HREF="_core_ccustomappwiz.3a3a.loadtemplate.htm">LoadTemplate</A> will know to first load APWZENU.DLL, then APWZFRA.DLL, and finally APWZJPN.DLL if any of the templates it seeks are not in the custom AppWizard’s DLL. For more information on the transformation of macro names, see <A HREF="_core_.2424.beginloop_and_.2424.endloop.htm">$$BEGINLOOP</A><A HREF="_core_.2424.beginloop_and_.2424.endloop.htm"> and </A><A HREF="_core_.2424.beginloop_and_.2424.endloop.htm">$$ENDLOOP</A>.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The argument to the <B>$$SET_DEFAULT_LANG</B> directive must correspond to an APPWZ*.DLL already chosen by the MFC AppWizard or custom AppWizard user. Otherwise, MFCAPWZ.DLL will display an error message and stop file generation immediately after parsing the <B>$$SET_DEFAULT_LANG</B> directive.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_appwizard_language_support_for_far_east_languages.htm">AppWizard Language Support for Far East Languages</A>, <A HREF="_core_standard_appwizard_directives.htm">Standard AppWizard Directives</A>, <A HREF="_core_ccustomappwiz.3a3a.m_dictionary.htm">The Dictionary</A>, <A HREF="_core_ccustomappwiz.3a3a.loadtemplate.htm">CCustomAppwiz::LoadTemplate</A>, <A HREF="_core_ccustomappwiz.3a3a.processtemplate.htm">CCustomAppwiz::ProcessTemplate</A>, <A HREF="_core_ccustomappwiz.3a3a.copytemplate.htm">CCustomAppwiz::CopyTemplate</A>, <A HREF="_core_ccustomappwiz.3a3a.postprocesstemplate.htm">CCustomAppwiz::PostProcessTemplate</A>, <A HREF="_core_.2424.beginloop_and_.2424.endloop.htm">$$BEGINLOOP</A>, <A HREF="_core_.2424.beginloop_and_.2424.endloop.htm">$$ENDLOOP</A>, <A HREF="_core_standard_appwizard_directives.htm">Standard MFC AppWizard Directives</A>, <A HREF="_core_how_macros_get_their_values.htm">How Macros Get Their Values</A></P>
</font>
</BODY>
</HTML>
