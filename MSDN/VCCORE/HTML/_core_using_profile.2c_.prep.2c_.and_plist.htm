<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using PROFILE, PREP, and PLIST</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_perf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_using_profile.2c_.prep.2c_.and_plist"></A>Using PROFILE, PREP, and PLIST</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_profiling.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_articles_that_tell_about_performance_tuning.htm">Details</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Profiling is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_2.Click()">Visual C++ Editions</A>.</P>

<P>Profiling requires three separate programs: <A HREF="_core_prep.htm">PREP</A>, <A HREF="_core_profile.htm">PROFILE</A>, and <A HREF="_core_plist.htm">PLIST</A>. When you choose a standard option (other than <B>Custom</B>) from the <B>Profile </B>dialog box, the development environment executes these programs for you automatically, passing arguments to the PREP program.</P>

<P>If you want maximum profiling flexibility, including the ability to format your output and to specify function and line-count profiling, you must write your own batch files that invoke PREP, PROFILE, and PLIST. You can run these batch files from either the <A HREF="_core_run_the_profiler_from_the_development_environment.htm">Profile dialog box</A> or from the command prompt. If you run the batch file from the dialog box, the PLIST output will, by default, be routed to the output window. Command-line batch output can also be routed to a file.</P>

<P>The following figure illustrates the profiler batch processing flow.</P>

<P class=label><B><A NAME="_asug_figure_27.1"></A>Profiler Batch Processing Flow</B></P>

<P><IMG SRC="profile1.gif" ALT="" BORDER=0></P>

<P>Notice that the PREP program is called twice. Phase I is before the actual profiling and Phase II is after the profiling. The command-line arguments govern PREP’s behavior.</P>

<P>The .PBI, .PBO, and .PBT files are intermediate files that are used to transfer information between profiling steps. The broken lines indicate connections that depend on the PREP (Phase I) command-line options.</P>

<P>A typical profiler batch file might look like this: </P>

<PRE><CODE>PREP /OM /FT /EXC nafxcwd.lib %1
if errorlevel == 1 goto done 
PROFILE %1 %2 %3 %4 %5 %6 %7 %8 %9
if errorlevel == 1 goto done 
PREP /M %1
if errorlevel == 1 goto done 
PLIST /SC %1 &gt;%1.lst
:done
</CODE></PRE>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;When you run a profiler batch file from the <B>Profile </B>dialog box using the <B>Custom </B>option, the PLIST standard output is routed to the <B>Profile </B>tab in the <B>Output </B>window. In the preceding batch file, the PLIST output is redirected to a file, as it would usually be in a batch file run from the command line.</P>

<P>When the batch file is run using the <B>Custom </B>option in the <B>Profile </B>dialog box, the development environment substitutes the project’s program name for the %1 parameter. You can specify your program’s command-line arguments on the <B>Debug </B>tab in the <B>Project Settings </B>dialog box.</P>

<P>If the preceding batch file was named FTIME.BAT, and you wanted to profile the program TEST from the <B>Profile </B>dialog box, you would select the Custom option, and then specify FTIME.BAT in the <B>Custom Settings</B> box. If you wanted to profile the TEST program from the command prompt, you would type:</P>

<PRE><CODE>FTIME TEST
</CODE></PRE>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;If you are running a profiler batch file from the development environment, you can edit your batch file. Remember to save your batch files after editing, because the development environment does not save them automatically.</P>
</font>
</BODY>
</HTML>
