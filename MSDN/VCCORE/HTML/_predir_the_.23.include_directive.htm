<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The #include Directive</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_predir_the_.23.include_directive"></A>The #include Directive</H1>

<P>The <B>#include</B> directive tells the preprocessor to treat the contents of a specified file as if those contents had appeared in the source program at the point where the directive appears. You can organize constant and macro definitions into include files and then use <B>#include</B> directives to add these definitions to any source file. Include files are also useful for incorporating declarations of external variables and complex data types. You only need to define and name the types once in an include file created for that purpose.</P>

<P class=label><B>Syntax</B></P>

<P><B>#include</B>  <B>"</B><I>path-spec</I><B>"</B></P>

<P><B>#include</B>  <B>&lt;</B><I>path-spec</I><B>&gt;</B></P>

<P>The <I>path-spec</I> is a filename optionally preceded by a directory specification. The filename must name an existing file. The syntax of the <I>path-spec</I> depends on the operating system on which the program is compiled.</P>

<P>Both syntax forms cause replacement of that directive by the entire contents of the specified include file. The difference between the two forms is the order in which the preprocessor searches for header files when the path is incompletely specified.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=28%><B>Syntax Form</B></TD>
<TD class=label width=72%><B>Action</B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Quoted form</TD>
<TD width=72%>This form instructs the preprocessor to look for include files in the same directory of the file that contains the <B>#include</B> statement, and then in the directories of whatever files that include (<B>#include</B>) that file. The preprocessor then searches along the path specified by the /I compiler option, then along paths specified by the INCLUDE environment variable.</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Angle-bracket form</TD>
<TD width=72%>This form instructs the preprocessor to search for include files first along the path specified by the /I compiler option, then along the path specified by the INCLUDE environment variable.</TD>
</TR>
</TABLE><BR>

<P>The preprocessor stops searching as soon as it finds a file with the given name. If you specify a complete, unambiguous path specification for the include file between two sets of double quotation marks (<B>" "</B>), the preprocessor searches only that path specification and ignores the standard directories.</P>

<P>If the filename enclosed in double quotation marks is an incomplete path specification, the preprocessor first searches the “parent” file’s directory. A parent file is the file containing the <B>#include</B> directive. For example, if you include a file named <CODE>file2</CODE> within a file named <CODE>file1</CODE>, <CODE>file1</CODE> is the parent file.</P>

<P>Include files can be “nested”; that is, an <B>#include</B> directive can appear in a file named by another <B>#include</B> directive. For example, <CODE>file2</CODE>, above, could include <CODE>file3</CODE>. In this case, <CODE>file1</CODE> would still be the parent of <CODE>file2</CODE> but would be the “grandparent” of <CODE>file3</CODE>.</P>

<P>When include files are nested, directory searching begins with the directories of the parent file and then proceeds through the directories of any grandparent files. Thus, searching begins relative to the directory containing the source currently being processed. If the file is not found, the search moves to directories specified by the /I compiler option. Finally, the directories specified by the INCLUDE environment variable are searched. </P>

<P>The following example shows file inclusion using angle brackets:</P>

<PRE><CODE>#include &lt;stdio.h&gt;
</CODE></PRE>

<P>This example adds the contents of the file named STDIO.H to the source program. The angle brackets cause the preprocessor to search the directories specified by the INCLUDE environment variable for STDIO.H, after searching directories specified by the /I compiler option.</P>

<P>The following example shows file inclusion using the quoted form:</P>

<PRE><CODE>#include "defs.h"
</CODE></PRE>

<P>This example adds the contents of the file specified by DEFS.H to the source program. The double quotation marks mean that the preprocessor searches the directory containing the parent source file first.</P>

<P>Nesting of include files can continue up to 10 levels. Once the nested <B>#include</B> is processed, the preprocessor continues to insert the enclosing include file into the original source file.</P>

<P><B>Microsoft Specific </B></P>

<P>To locate includable source files, the preprocessor first searches the directories specified by the /I compiler option. If the /I option is not present or fails, the preprocessor uses the INCLUDE environment variable to find any include files within angle brackets. The INCLUDE environment variable and /I compiler option can contain multiple paths separated by semicolons (<B>;</B>). If more than one directory appears as part of the /I option or within the INCLUDE environment variable, the preprocessor searches them in the order in which they appear.</P>

<P>For example, the command</P>

<PRE><CODE>CL /ID:\MSVC\INCLUDE MYPROG.C
</CODE></PRE>

<P>causes the preprocessor to search the directory D:\MSVC\INCLUDE for include files such as STDIO.H. The commands</P>

<PRE><CODE>SET INCLUDE=D:\MSVC\INCLUDE
CL MYPROG.C
</CODE></PRE>

<P>have the same effect. If both sets of searches fail, a fatal compiler error is generated.</P>

<P>If the filename is fully specified for an include file with a path that includes a colon (for example, F:\MSVC\SPECIAL\INCL\TEST.H), the preprocessor follows the path.</P>

<P>For include files specified as <B>#include</B> <B>"</B><I>path-spec</I><B>"</B>, directory searching begins with the directory of the parent file and then proceeds through the directories of any grandparent files. Thus, searching begins relative to the directory containing the source file containing the <B>#include</B> directive being processed. If there is no grandparent file and the file has not been found, the search continues as if the filename were enclosed in angle brackets.</P>

<P><B>END Microsoft Specific</B></P>
</font>
</BODY>
</HTML>
