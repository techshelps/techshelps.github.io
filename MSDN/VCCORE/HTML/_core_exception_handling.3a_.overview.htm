<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exception Handling: Overview</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_exception_handling.3a_.overview"></A>Exception Handling: Overview</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_exception_handling_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_exception_handling_topics_.28.general.29.htm">Details</A></P>

<P>Exceptions occur when a program executes abnormally due to conditions outside the program's control, such as low memory or I/O errors. Abnormal situations should be handled by throwing and catching exceptions.</P>

<P>Abnormal situations are not the same as normal error conditions, such as a function executing correctly but returning a result code indicating an error. A normal error condition, for example, would be a file status function indicating a file doesn't exist. For normal error conditions, examine the error code and respond appropriately. </P>

<P>Abnormal situations are also not the same as erroneous execution, in which, for example, the caller makes some mistake in passing arguments to a function or calls it in an inappropriate context. For erroneous execution, test your inputs and other assumptions with an assertion (see <A HREF="_core_the_assert_macro.htm">The ASSERT Macro</A>).</P>

<P>Visual C++ supports three kinds of exception handling:

<UL type=disc>
	<LI>C++ exceptions<BR><BR></LI>

	<LI>Structured exception handling (SEH), used in C programs for Windows NT and Windows 95<BR><BR></LI>

	<LI>MFC exceptions</LI>
</UL>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;Since version 3.0, MFC has used C++ exceptions but still supports its older exception handling macros, which are similar to C++ exceptions in form.</P>

<H2>Usage Advice</H2>

<P>In MFC programs, use C++ exceptions; don't use SEH. Use SEH only in non-MFC programs. Don't mix the two approaches. For advice on mixing MFC macros and C++ exceptions, see <A HREF="_core_exceptions.3a_.using_mfc_macros_and_c.2b2b_.exceptions.htm">Exceptions: Using MFC Macros and C++ Exceptions</A>.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_which_exception_handling_mechanism_should_i_use.3f.htm">When to use which kind of exception mechanism</A><BR><BR></LI>

	<LI><A HREF="_core_exception_handling_topics_.28.c.2b2b29.htm">C++ exceptions</A>, the exception mechanism that is part of the C++ language<BR><BR></LI>

	<LI><A HREF="_core_exception_handling.3a_.default_synchronous_exception_model.htm">C++ exception handling: Synchronous exception model is now the default</A><BR><BR></LI>

	<LI><A HREF="_core_exception_handling_topics_.28.seh.29.htm">Structured exception handling</A><BR><BR></LI>

	<LI><A HREF="_core_exception_handling_topics_.28.mfc.29.htm">Exception handling in an MFC program</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.database_exceptions.htm">The exception classes used in MFC database programming</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.ole_exceptions.htm">The exception classes used in MFC OLE programming</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.converting_from_mfc_exception_macros.htm">Converting from the older MFC exception macros to C++ exceptions</A></LI>
</UL>
</font>
</BODY>
</HTML>
