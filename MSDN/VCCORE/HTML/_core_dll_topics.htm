<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DLL Topics</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFCNOTES_TN011">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFCNOTES_TN033">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_dll_topics"></A>DLL Topics</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_dlls.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_dll_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_dlls.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_dll_sample_programs.htm">Sample</A></P>

<P>Using dynamic linking instead of static linking offers several advantages. DLLs save memory, reduce swapping, save disk space, upgrade easier, provide after-market support, provide a mechanism to extend the MFC library classes, support multi-language programs, and ease the creation of international versions.</P>

<P>This article family provides detailed information on programming DLLs.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_differences_between_win16_and_win32_dlls.htm">The differences between Win16 and Win32 DLLs</A><BR><BR></LI>

	<LI><A HREF="_core_run.2d.time_library_behavior.htm">Run-time library behavior</A><BR><BR></LI>

	<LI><A HREF="_core_using_implicit_linking.htm">Using implicit linking</A><BR><BR></LI>

	<LI><A HREF="_core_loadlibrary_and_afxloadlibrary.htm">LoadLibrary and AfxLoadLibrary</A><BR><BR></LI>

	<LI><A HREF="_core_getprocaddress.htm">GetProcAddress</A><BR><BR></LI>

	<LI><A HREF="vcconlinkersupportfordelayedloadingofdlls.htm">Linker Support for the Delayed Loading of DLLs</A><BR><BR></LI>

	<LI><A HREF="_core_freelibrary_and_afxfreelibrary.htm">FreeLibrary and AfxFreeLibrary</A><BR><BR></LI>

	<LI><A HREF="_core_the_search_path_used_by_windows_to_locate_a_dll.htm">The search path used by Windows to locate a DLL</A><BR><BR></LI>

	<LI><A HREF="_core_regular_dlls_statically_linked_to_mfc.htm">Regular DLLs statically linked to MFC</A><BR><BR></LI>

	<LI><A HREF="_core_regular_dlls_dynamically_linked_to_mfc.htm">Regular DLLs dynamically linked to MFC</A><BR><BR></LI>

	<LI><A HREF="_core_module_states_of_a_regular_dll_dynamically_linked_to_mfc.htm">Module States of a regular DLL dynamically linked to MFC</A><BR><BR></LI>

	<LI><A HREF="_core_extension_dlls.htm">Extension DLLs</A><BR><BR></LI>

	<LI><A HREF="_core_using_extension_dll.2c.database.2f.ole.2f.sockets_in_regular_dll.htm">Using extension DLL,Database/OLE/Sockets in regular DLL</A><BR><BR></LI>

	<LI><A HREF="_core_using___declspec.28.dllimport.29_.and___declspec.28.dllexport.29.htm">Using __declspec(dllimport) and __declspec(dllexport)</A><BR><BR></LI>

	<LI><A HREF="_core_importing_and_exporting_inline_functions.htm">Importing and exporting inline functions</A><BR><BR></LI>

	<LI><A HREF="_core_mutual_imports.htm">Mutual imports</A><BR><BR></LI>

	<LI><A HREF="_core_activex_and_dlls.htm">Active Technology and DLLs</A><BR><BR></LI>

	<LI><A HREF="_core_automation_in_a_dll.htm">Automation in a DLL</A><BR><BR></LI>

	<LI><A HREF="_core_naming_conventions_for_mfc_dlls.htm">Naming conventions for MFC DLLs</A><BR><BR></LI>

	<LI><A HREF="_core_redistributable_files.htm">Redistributable files</A>
<UL type=disc>
	<LI><A HREF="_core_categories_of_redistributable_files.htm">Categories of redistributable files</A><BR><BR></LI>

	<LI><A HREF="_core_version_checking_of_redistributable_files.htm">Version checking of redistributable files</A><BR><BR></LI>

	<LI><A HREF="_core_mfc.2f.other_dll_files.htm">MFC/other DLL files</A><BR><BR></LI>

	<LI><A HREF="_core_odbc_files.htm">ODBC files</A></LI>
</UL>
</LI>

	<LI><A HREF="_core_calling_dll_functions_from_visual_basic_applications.htm">Calling DLL functions from Visual Basic applications</A><BR><BR></LI>

	<LI><A HREF="JavaScript:hhobj_2.Click()">Using MFC as Part of a DLL</A><BR><BR></LI>

	<LI><A HREF="JavaScript:hhobj_3.Click()">DLL Version of MFC</A></LI>
</UL>
</font>
</BODY>
</HTML>
