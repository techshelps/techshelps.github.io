<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Control Containers: Using Controls in a Non-Dialog Container</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="circle sample start">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CWnd.3a3a.CreateControl">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_activex_control_containers.3a_.using_controls_in_a_non.2d.dialog_container"></A>ActiveX Control Containers: Using Controls in a Non-Dialog Container</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_activex_controls.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_activex_control_tasks.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_activex_control_sample_list.htm">Sample</A></P>

<P>In some applications, such as an SDI or MDI application, you will want to embed a control in a window of the application. The <B>Create</B> member function of the wrapper class, inserted by Gallery, can create an instance of the control dynamically, without the need for a dialog box.</P>

<P>The <B>Create</B> member function has the following parameters:</P>

<P class=dt><I>lpszWindowName</I></P>

<P class=indent>A pointer to the text to be displayed in the control’s Text or Caption property (if any).</P>

<P class=dt><I>dwStyle</I></P>

<P class=indent>Windows styles. For a complete list, see <A HREF="JavaScript:hhobj_3.Click()">CWnd::CreateControl</A>.</P>

<P class=dt><I>rect</I></P>

<P class=indent>Specifies the control’s size and position.</P>

<P class=dt><I>pParentWnd</I></P>

<P class=indent>Specifies the control’s parent window, usually a <B>CDialog</B>. It must not be <B>NULL</B>.</P>

<P class=dt><I>nID</I></P>

<P class=indent>Specifies the control ID and can be used by the container to refer to the control.</P>

<P>One example of using this function to dynamically create an ActiveX control would be in a form view of an SDI application. You could then create an instance of the control in the <B>WM_CREATE</B> handler of the application.</P>

<P>For this example, <CODE>CMyView</CODE> is the main view class, <CODE>CCirc2</CODE> is the wrapper class, and CIRC2.H is the header (.H) file of the wrapper class.</P>

<P>Implementing this feature is a four-step process.</P>

<P class=label><B>To dynamically create an ActiveX control in a non-dialog window</B>

<OL>
	<LI>Insert CIRC2.H in CMYVIEW.H, just before the <CODE>CMyView</CODE> class definition:
<PRE><CODE>#include "circ2.h"
</CODE></PRE>
</LI>

	<LI>Add a member variable (of type <CODE>CCirc2</CODE>) to the protected section of the <CODE>CMyView</CODE> class definition located in CMYVIEW.H:
<PRE><CODE>class CMyView : public CView
{
...
protected:

CCirc2 m_myCtl;
...
};
</CODE></PRE>
</LI>

	<LI>Add a <B>WM_CREATE</B> message handler to class <CODE>CMyView</CODE>.<BR><BR></LI>

	<LI>In the handler function, <CODE>CMyView::OnCreate</CODE>, make a call to the control’s <CODE>Create</CODE> function using the <B>this</B> pointer as the parent window:
<PRE><CODE>int CMyView::OnCreate(LPCREATESTRUCT lpCreateStruct) 
{
   if (MyView::OnCreate(lpCreateStruct) == -1)
      return -1;

// ****** Add your code below this line ********** //

   m_myCtl.Create(NULL, WS_VISIBLE, 
      CRect(50,50,100,100), this, 0);
   m_myCtl.SetCaption(_T(“Control created”));

// ****** Add your code above this line ********** //

   return 0;
}
</CODE></PRE>
</LI>

	<LI>Rebuild the project. A Circ2 control will be created dynamically whenever the application’s view is created.</LI>
</OL>
</font>
</BODY>
</HTML>
