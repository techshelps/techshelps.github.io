<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Automation Topics</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Autoclik start">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleVariant">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleCurrency">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleDateTime">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_automation_topics"></A>Automation Topics</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_automation.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_automation_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_automation_sample_list.htm">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A></P>

<P>Automation is available to both OLE and COM objects. For background, see the <A HREF="_core_automation.3a_.overview.htm">Overview</A>. There are two categories of automation:

<UL type=disc>
	<LI>Automation (locally)<BR><BR></LI>

	<LI>Remote Automation (over a network, using Distributed COM, or DCOM)</LI>
</UL>

<P>The remainder of this article concerns Automation. For Remote Automation, see the topic <A HREF="_core_remote_automation.htm">Remote Automation</A>.</P>

<P>An Automation client is an application that can manipulate exposed objects belonging to another application. This is also called an Automation controller.</P>

<P>An Automation server is an application that exposes programmable objects to other applications. This is sometimes also called an “Automation component.”</P>

<P>The server application exposes Automation objects. These Automation objects have properties and methods as their external interface. Properties are named attributes of the Automation object. Properties are like the data members of a C++ class. Methods are functions that work on an Automation object. Methods are like the public member functions of a C++ class.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;Properties can have member functions that access them. A Get/Set function pair typically accesses a property of the object.</P>



<H2><A NAME="_core_passing_parameters_in_automation"></A>Passing Parameters in Automation</H2>

<P>One of the difficulties in creating Automation methods is providing a uniform “safe” mechanism to pass data between automation servers and clients. Automation uses the <B>VARIANT</B> type to pass data. The <B>VARIANT</B> type is a tagged union. It has a data member for the value (this is an anonymous C++ union) and a data member indicating the type of information stored in the union. The <B>VARIANT</B> type supports a number of standard data types: 2- and 4-byte integers, 4- and 8-byte floating point numbers, strings, and Boolean values. In addition, it supports the <B>HRESULT</B> (OLE error codes), <B>CURRENCY</B> (a fixed-point numeric type), and <B>DATE</B> (absolute date and time) types, as well as pointers to <B>IUnknown</B> and <B>IDispatch</B> interfaces.</P>

<P>The <B>VARIANT</B> type is encapsulated in the <A HREF="JavaScript:hhobj_3.Click()">COleVariant</A> class. The supporting <B>CURRENCY</B> and <B>DATE</B> classes are encapsulated in the <A HREF="JavaScript:hhobj_4.Click()">COleCurrency</A> and <A HREF="JavaScript:hhobj_5.Click()">COleDateTime</A> classes.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_automation_clients.htm">Automation Clients</A><BR><BR></LI>

	<LI><A HREF="_core_automation_servers.htm">Automation Servers</A><BR><BR></LI>

	<LI><A HREF="_core_remote_automation.htm">Remote Automation</A><BR><BR></LI>

	<LI><A HREF="_core_ole_topics.htm">OLE</A><BR><BR></LI>

	<LI><A HREF="_core_activex_topics.htm">Active Technology</A></LI>
</UL>
</font>
</BODY>
</HTML>
