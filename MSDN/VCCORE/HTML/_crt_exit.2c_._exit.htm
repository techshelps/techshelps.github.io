<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>exit, _exit</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_exit.2c_._exit"></A><SUP></SUP>exit, _exit</H1>

<P>Terminate the calling process after cleanup (<B>exit</B>) or immediately (<B>_exit</B>).</P>

<P><B>void</B> <B>exit(</B> <B>int</B> <I>status</I> <B>);</B></P>

<P><B>void</B> <B>_exit(</B> <B>int</B> <I>status</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Function</B></TD>
<TD class=label width=40%><B>Required Header</B></TD>
<TD class=label width=44%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>exit</B></TD>
<TD width=40%>&lt;process.h&gt; or &lt;stdlib.h&gt;</TD>
<TD width=44%>ANSI, Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_exit</B></TD>
<TD width=40%>&lt;process.h&gt; or &lt;stdlib.h&gt;</TD>
<TD width=44%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>None</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>status</I></P>

<P class=indent>Exit status</P>

<P class=label><B>Remarks</B></P>

<P>The <B>exit</B> and _<B>exit</B> functions terminate the calling process. <B>exit</B> calls, in last-in-first-out (LIFO) order, the functions registered by <B>atexit</B> and <B>_onexit</B>, then flushes all file buffers before terminating the process. <B>_exit</B> terminates the process without processing <B>atexit</B> or <B>_onexit</B> or flushing stream buffers. The <I>status</I> value is typically set to 0 to indicate a normal exit and set to some other value to indicate an error.</P>

<P>Although the <B>exit</B> and <B>_exit</B> calls do not return a value, the low-order byte of <I>status</I> is made available to the waiting calling process, if one exists, after the calling process exits. The <I>status</I> value is available to the operating-system batch command <B>ERRORLEVEL</B> and is represented by one of two constants: <B>EXIT_SUCCESS</B>, which represents a value of 0, or <B>EXIT_FAILURE</B>, which represents a value of 1. The behavior of <B>exit</B>, <B>_exit</B>, <B>_cexit</B>, and <B>_c_exit</B> is as follows.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Function</B></TD>
<TD class=label width=84%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>exit</B></TD>
<TD width=84%>Performs complete C library termination procedures, terminates the process, and exits with the supplied status code.</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_exit</B></TD>
<TD width=84%>Performs “quick” C library termination procedures, terminates the process, and exits with the supplied status code.</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_cexit</B></TD>
<TD width=84%>Performs complete C library termination procedures and returns to the caller, but does not terminate the process.</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_c_exit</B></TD>
<TD width=84%>Performs “quick” C library termination procedures and returns to the caller, but does not terminate the process.</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* EXITER.C: This program prompts the user for a yes
 * or no and returns an exit code of 1 if the
 * user answers Y or y; otherwise it returns 0. The
 * error code could be tested in a batch file.
 */

#include &lt;conio.h&gt;
#include &lt;stdlib.h&gt;

void main( void )
{
   int ch;

   _cputs( "Yes or no? " );
   ch = _getch();
   _cputs( "\r\n" );
   if( toupper( ch ) == 'Y' )
      exit( 1 );
   else
      exit( 0 );
}

</CODE></PRE>

<P><A HREF="_crt_process_and_environment_control.htm">Process and Environment Control Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_abort.htm">abort</A>, <A HREF="_crt_atexit.htm">atexit</A>, <A HREF="_crt__cexit.2c_._c_exit.htm">_cexit</A>, <A HREF="_crt__exec.2c_._wexec_functions.htm">_exec Function Overview</A>, <A HREF="_crt__onexit.htm">_onexit</A>, <A HREF="_crt__spawn.2c_._wspawn_functions.htm">_spawn Function Overview</A>, <A HREF="_crt_system.2c_._wsystem.htm">system</A></P>
</font>
</BODY>
</HTML>
