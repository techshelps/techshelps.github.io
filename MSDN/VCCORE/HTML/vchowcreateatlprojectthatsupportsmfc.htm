<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Create an ATL Project that supports MFC</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_atl_Using_the_ATL_COM_AppWizard">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vchowcreateatlprojectthatsupportsmfc"></A>Create an ATL Project that supports MFC</H1>

<P>When you first create a project based on the Active Template Library (ATL), you can specify that support for the MFC library classes be added to the project. </P>

<P class=label><B>To include MFC support in an ATL-based project</B>

<OL>
	<LI>Start a new ATL COM AppWizard project. (From the <B>File</B> menu, choose <B>New</B> and click the <B>Projects</B> tab, then select the <B>ATL COM AppWizard</B> project type.)<BR><BR></LI>

	<LI>In the <B>ATL COM AppWizard Step 1</B> dialog box, select the <B>Support MFC</B> checkbox.<BR><BR></LI>

	<LI value=20>This option links your project to the MFC libraries, so that you can access any of the classes and functions they contain. It does so by declaring the application as an MFC application object (class) which can then initialize and clean up the ATL module:
<PRE><CODE>class CATL_COMApp : public CWinApp
{
public:
    virtual BOOL InitInstance();
    virtual int ExitInstance();
};

CATL_COMApp theApp;

BOOL CATL_COMApp::InitInstance()
{
    _Module.Init(ObjectMap, m_hInstance, &amp;LIBID_ATL_COMLib);
    return CWinApp::InitInstance();
}

int CATL_COMApp::ExitInstance()
{
    _Module.Term();
    return CWinApp::ExitInstance();
}
</CODE></PRE>
</LI>
</OL>

<P>You can view the application object class and its <B>InitInstance</B> and <B>ExitInstance</B> functions in ClassView.</P>

<P class=label><B>See Also&nbsp;&nbsp;&nbsp;<A HREF="JavaScript:hhobj_1.Click()">Using the ATL COM AppWizard</A></B></P>
</font>
</BODY>
</HTML>
