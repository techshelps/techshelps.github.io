<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exception Handling Topics (General)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_exception_handling_topics_.28.general.29"></A>Exception Handling Topics (General)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_exception_handling_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.frequently_asked_questions.htm">FAQ</A></P>

<P>Handling <A HREF="_core_exception_handling.3a_.overview.htm">exceptional conditions</A> makes your code more robust. Certain operations, including object creation and file input/output, are subject to failures that go beyond errors — out-of-memory conditions, for instance, can occur even when your program is running correctly. Anticipating and handling exceptions is a hallmark of solid code.</P>

<P>This article family explains the <A HREF="_core_what_exception_handling_mechanisms_are_available.3f.htm">three exception handling mechanisms</A> supplied by Visual C++.</P>

<H3>What do you want to know more about?</H3>

<P><B>General Exception Handling Knowledge</B>

<UL type=disc>
	<LI><A HREF="_core_exception_handling_topics_.28.mfc.29.htm">When to use exceptions</A><BR><BR></LI>

	<LI><A HREF="_core_exception_handling_topics_.28.mfc.29.htm">Exception Handling Topics (MFC)</A><BR><BR></LI>

	<LI><A HREF="_core_exception_handling_topics_.28.c.2b2b29.htm">Exception Handling Topics (C++)</A> (without MFC)<BR><BR></LI>

	<LI><A HREF="_core_exception_handling_topics_.28.seh.29.htm">Structured exception handling in C</A><BR><BR></LI>

	<LI><A HREF="_core_exception_handling_syntax.htm">C++ exception handling syntax</A><BR><BR></LI>

	<LI><A HREF="_core_c.2b2b_.exception_examples.htm">C++ exception examples</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.catching_and_deleting_exceptions.htm">Catching and deleting exceptions</A><BR><BR></LI>

	<LI><A HREF="_core_exception_handling_overhead.htm">Exception handling overhead</A></LI>
</UL>

<P><B>More Specialized Topics</B>

<UL type=disc>
	<LI><A HREF="_core_exceptions.3a_.database_exceptions.htm">Exceptions in database programming</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.ole_exceptions.htm">Exceptions in OLE programming</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.changes_to_exception_macros_in_version_3..0.htm">How MFC exception macros changed in MFC version 3.0</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.using_mfc_macros_and_c.2b2b_.exceptions.htm">Using both MFC macros and C++ exceptions</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.examining_exception_contents.htm">Examining the contents of an MFC exception object</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.freeing_objects_in_exceptions.htm">Freeing objects in an exception handler</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.throwing_exceptions_from_your_own_functions.htm">Throwing exceptions from your own functions</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.exceptions_in_constructors.htm">Exceptions in constructors</A><BR><BR></LI>

	<LI><A HREF="_core_type.2d.safe_exception_handling.htm">Type-safe exception handling</A><BR><BR></LI>

	<LI><A HREF="_core_unhandled_exceptions.htm">What happens to unhandled exceptions</A><BR><BR></LI>

	<LI><A HREF="_core_mixing_c_and_c.2b2b_.exceptions.htm">Mixing C and C++ exceptions</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.converting_from_mfc_exception_macros.htm">Converting from MFC exception macros to C++ exceptions</A></LI>
</UL>
</font>
</BODY>
</HTML>
