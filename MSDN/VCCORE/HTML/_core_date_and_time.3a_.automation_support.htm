<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Date and Time: Automation Support</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleDateTime">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CTime">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleDateTimeSpan">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_COleDateTime.3a3a.operator_DATE">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_date_and_time.3a_.automation_support"></A>Date and Time: Automation Support</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_date_and_time_data.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_date_and_time_tasks.htm">How Do I</A></P>

<P>This article describes how to take advantage of the class library services related to date and time management. Procedures described include:

<UL type=disc>
	<LI><A HREF="_core_current_time.3a_.automation_classes.htm">Getting the current time</A><BR><BR></LI>

	<LI><A HREF="_core_elapsed_time.3a_.automation_classes.htm">Calculating elapsed time</A><BR><BR></LI>

	<LI><A HREF="_core_formatting_time.3a_.automation_classes.htm">Formatting a string representation of a date/time</A></LI>
</UL>

<P>The <A HREF="JavaScript:hhobj_2.Click()">COleDateTime</A> class provides a way to represent date and time information. It provides finer granularity and a greater range than the <A HREF="JavaScript:hhobj_3.Click()">CTime</A> class. The <A HREF="JavaScript:hhobj_4.Click()">COleDateTimeSpan</A> class represents elapsed time, such as the difference between two <B>COleDateTime</B> objects.</P>

<P>The <B>COleDateTime</B> and <B>COleDateTimeSpan</B> classes are designed to be used with the <B>COleVariant</B> class used in Automation. <B>COleDateTime</B> and <B>COleDateTimeSpan</B> are also useful in MFC database programming, but they can be used whenever you want to manipulate date and time values. Although the <B>COleDateTime</B> class has a greater range of values and finer granularity than the <B>CTime</B> class, it requires more storage per object than <B>CTime</B>. There are also some special considerations when working with the underlying <B>DATE</B> type. See <A HREF="_core_the_date_type.htm">The DATE Type</A> for more details on the implementation of <B>DATE</B>.</P>

<P><B>COleDateTime</B> objects can be used to represent dates between January 1, 100, and December 31, 9999. <B>COleDateTime</B> objects are floating point values, with an approximate resolution of 1 millisecond. <B>COleDateTime</B> is based on the <B>DATE</B> data type, defined in the MFC documentation under <A HREF="JavaScript:hhobj_5.Click()">COleDateTime::operator DATE</A>. The actual implementation of <B>DATE</B> extends beyond these bounds. The <B>COleDateTime</B> implementation imposes these bounds to facilitate working with the class.</P>

<P><B>COleDateTime</B> ignores Daylight Saving Time (DST). The following code example compares two methods of calculating a time span that crosses the DST switchover date: one using the CRT, and the other using <B>COleDateTime</B>. DST switches over, in most locales, in the second week in April and the third in October.</P>

<P>The first method sets two <B>CTime</B> objects, <I>time1</I> and <I>time2</I>, to April 5 and April 6 respectively, using the standard C type structures <B>tm</B> and <B>time_t</B>. The code displays <I>time1</I> and <I>time2</I> and the time span between them.</P>

<P>The second method creates two <B>COleDateTime</B> objects, <I>oletime1</I> and <I>oletime2</I>, and sets them to the same dates as <I>time1</I> and <I>time2</I>. It displays <I>oletime1</I> and <I>oletime2</I> and the time span between them.</P>

<P>The CRT correctly calculates a difference of 23 hours. <B>COleDateTimeSpan</B> calculates a difference of 24 hours.</P>

<P>Note that a workaround is used near the end of the example to display the date properly using <B>COleDateTime::Format</B>. See the Knowledge Base article "BUG: Format("%D") Fails for <B>COleDateTime</B> and <B>COleDateTimeSpan</B>" (Q167338).</P>

<PRE><CODE>#include &lt;afxdisp.h&gt;

void CTimetestView::OnDraw(CDC* pDC)
{
   CTimetestDoc* pDoc = GetDocument();
   ASSERT_VALID(pDoc);
   
   time_t date1_t, date2_t;
   tm date_tm;

   date_tm.tm_hour   =12;
   date_tm.tm_min   =0;
   date_tm.tm_mon   =3;
   date_tm.tm_sec   =0;
   date_tm.tm_wday   =0; //Day of week (0-6; Sunday = 0)
   date_tm.tm_yday =0;
   date_tm.tm_year   =97;
   date_tm.tm_isdst =-1; //Positive if Daylight Saving Time is in effect;
                         //0 if Daylight Saving Time is not in effect; 
                         //Negative if status of DST is unknown.

   date_tm.tm_mday   =6;
   date2_t = mktime(&amp;date_tm);

   date_tm.tm_mday   =5;
   date_tm.tm_isdst =0;
   date1_t = mktime(&amp;date_tm);

   CTime time1(date1_t), time2(date2_t);
   CTimeSpan ts = time2 - time1;

   pDC-&gt;TextOut(0,0, CString("CTime"));
   pDC-&gt;TextOut(0,20, time1.Format("%H:%M:%S %A, %B %d, %Y"));
   pDC-&gt;TextOut(0,40, time2.Format("%H:%M:%S %A, %B %d, %Y"));
   pDC-&gt;TextOut(0,60, ts.Format("%H:%M:%S and %D days"));


   COleDateTime oletime1(date1_t), oletime2(date2_t);
   COleDateTimeSpan olets = oletime2 - oletime1;

   pDC-&gt;TextOut(0,120, CString("COleDateTime"));
   pDC-&gt;TextOut(0,140, oletime1.Format("%H:%M:%S %A, %B %d, %Y"));
   pDC-&gt;TextOut(0,160, oletime2.Format("%H:%M:%S %A, %B %d, %Y"));
   
   //Work-around bug in COleDateTime::Format("%D")
   CString str;
    str.Format("%s and %d days",
      (LPCTSTR)olets.Format("%H:%M:%S"), olets.GetDays());
   pDC-&gt;TextOut(0,180, str);
</CODE></PRE>
</font>
</BODY>
</HTML>
