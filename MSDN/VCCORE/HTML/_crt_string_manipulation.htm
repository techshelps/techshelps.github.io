<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>String Manipulation</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_string_manipulation"></A>String Manipulation</H1>

<P>These routines operate on null-terminated single-byte character, wide-character, and multibyte-character strings. Use the buffer-manipulation routines, described in <A HREF="_crt_buffer_manipulation.htm">Buffer Manipulation</A>, to work with character arrays that do not end with a null character.</P>

<P class=label><B>String-Manipulation Routines</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=28%><B>Routine</B></TD>
<TD class=label width=72%><B>Use</B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strcoll.2c_.wcscoll.2c_._mbscoll.htm">_mbscoll</A>, <A HREF="_crt__stricoll.2c_._wcsicoll.2c_._mbsicoll.htm">_mbsicoll</A>, <A HREF="_crt__strncoll.2c_._wcsncoll.2c_._mbsncoll.htm">_mbsncoll</A>, <A HREF="_crt__strnicoll.2c_._wcsnicoll.2c_._mbsnicoll.htm">_mbsnicoll</A></TD>
<TD width=72%>Compare two multibyte-character strings using multibyte code page information (<B>_mbsicoll</B> and <B>_mbsnicoll</B> are case-insensitive)</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsdec.2c_._strdec.2c_._wcsdec.htm">_mbsdec, _strdec, _wcsdec</A></TD>
<TD width=72%>Move string pointer back one character</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsinc.2c_._strinc.2c_._wcsinc.htm">_mbsinc, _strinc, _wcsinc</A></TD>
<TD width=72%>Advance string pointer by one character</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strlen.2c_.wcslen.2c_._mbslen.2c_._mbstrlen.htm">_mbslen</A></TD>
<TD width=72%>Get number of multibyte characters in multibyte-character string; dependent upon OEM code page</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsnbcat.htm">_mbsnbcat</A></TD>
<TD width=72%>Append, at most, first <I>n</I> bytes of one multibyte-character string to another</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsnbcmp.htm">_mbsnbcmp</A></TD>
<TD width=72%>Compare first <I>n</I> bytes of two multibyte-character strings</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsnbcnt.2c_._mbsnccnt.2c_._strncnt.2c_._wcsncnt.htm">_mbsnbcnt</A></TD>
<TD width=72%>Return number of multibyte-character bytes within supplied character count</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsnbcpy.htm">_mbsnbcpy</A></TD>
<TD width=72%>Copy <I>n</I> bytes of string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsnbicmp.htm">_mbsnbicmp</A></TD>
<TD width=72%>Compare <I>n</I> bytes of two multibyte-character strings, ignoring case</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsnbset.htm">_mbsnbset</A></TD>
<TD width=72%>Set first <I>n</I> bytes of multibyte-character string to specified character</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsnbcnt.2c_._mbsnccnt.2c_._strncnt.2c_._wcsncnt.htm">_mbsnccnt</A></TD>
<TD width=72%>Return number of multibyte characters within supplied byte count</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsnextc.2c_._strnextc.2c_._wcsnextc.htm">_mbsnextc, _strnextc, _wcsnextc</A></TD>
<TD width=72%>Find next character in string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsninc.2c_._strninc.2c_._wcsninc.htm">_mbsninc. _strninc, _wcsninc </A></TD>
<TD width=72%>Advance string pointer by <I>n</I> characters</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__mbsspnp.2c_._strspnp.2c_._wcsspnp.htm">_mbsspnp, _strspnp, _wcsspnp</A></TD>
<TD width=72%>Return pointer to first character in given string that is not in another given string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strlen.2c_.wcslen.2c_._mbslen.2c_._mbstrlen.htm">_mbstrlen</A></TD>
<TD width=72%>Get number of multibyte characters in multibyte-character string; locale-dependent</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_sprintf.2c_.swprintf.htm">sprintf, _stprintf</A></TD>
<TD width=72%>Write formatted data to a string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strcat.2c_.wcscat.2c_._mbscat.htm">strcat, wcscat, _mbscat</A></TD>
<TD width=72%>Append one string to another</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strchr.2c_.wcschr.2c_._mbschr.htm">strchr, wcschr, _mbschr</A></TD>
<TD width=72%>Find first occurrence of specified character in string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strcmp.2c_.wcscmp.2c_._mbscmp.htm">strcmp, wcscmp, _mbscmp</A></TD>
<TD width=72%>Compare two strings</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strcoll.2c_.wcscoll.2c_._mbscoll.htm">strcoll, wcscoll</A>, <A HREF="_crt__stricoll.2c_._wcsicoll.2c_._mbsicoll.htm">_stricoll, _wcsicoll</A>, <A HREF="_crt__strncoll.2c_._wcsncoll.2c_._mbsncoll.htm">_strncoll, _wcsncoll</A>, <A HREF="_crt__strnicoll.2c_._wcsnicoll.2c_._mbsnicoll.htm">_strnicoll, _wcsnicoll</A></TD>
<TD width=72%>Compare two strings using current locale code page information (<B>_stricoll</B>, <B>_wcsicoll</B>, <B>_strnicoll</B>, and <B>_wcsnicoll</B> are case-insensitive)</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strcpy.2c_.wcscpy.2c_._mbscpy.htm">strcpy, wcscpy, _mbscpy</A></TD>
<TD width=72%>Copy one string to another</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strcspn.2c_.wcscspn.2c_._mbscspn.htm">strcspn, wcscspn, _mbscspn</A>, </TD>
<TD width=72%>Find first occurrence of character from specified character set in string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__strdup.2c_._wcsdup.2c_._mbsdup.htm">_strdup, _wcsdup, _mbsdup</A></TD>
<TD width=72%>Duplicate string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strerror.2c_._strerror.htm">strerror</A></TD>
<TD width=72%>Map error number to message string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strerror.2c_._strerror.htm">_strerror</A></TD>
<TD width=72%>Map user-defined error message to string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strftime.2c_.wcsftime.htm">strftime, wcsftime</A></TD>
<TD width=72%>Format date-and-time string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__stricmp.2c_._wcsicmp.2c_._mbsicmp.htm">_stricmp, _wcsicmp, _mbsicmp</A></TD>
<TD width=72%>Compare two strings without regard to case</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strlen.2c_.wcslen.2c_._mbslen.2c_._mbstrlen.htm">strlen, wcslen, _mbslen, _mbstrlen</A></TD>
<TD width=72%>Find length of string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__strlwr.2c_._wcslwr.2c_._mbslwr.htm">_strlwr, _wcslwr, _mbslwr</A></TD>
<TD width=72%>Convert string to lowercase</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strncat.2c_.wcsncat.2c_._mbsncat.htm">strncat, wcsncat, _mbsncat</A></TD>
<TD width=72%>Append characters of string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strncmp.2c_.wcsncmp.2c_._mbsncmp.htm">strncmp, wcsncmp, _mbsncmp</A></TD>
<TD width=72%>Compare characters of two strings</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strncpy.2c_.wcsncpy.2c_._mbsncpy.htm">strncpy, wcsncpy, _mbsncpy</A></TD>
<TD width=72%>Copy characters of one string to another</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__strnicmp.2c_._wcsnicmp.2c_._mbsnicmp.htm">_strnicmp, _wcsnicmp, _mbsnicmp</A></TD>
<TD width=72%>Compare characters of two strings without regard to case</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__strnset.2c_._wcsnset.2c_._mbsnset.htm">_strnset, _wcsnset, _mbsnset</A></TD>
<TD width=72%>Set first <I>n</I> characters of string to specified character</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strpbrk.2c_.wcspbrk.2c_._mbspbrk.htm">strpbrk, wcspbrk, _mbspbrk</A></TD>
<TD width=72%>Find first occurrence of character from one string in another string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strrchr.2c_.wcsrchr.2c_._mbsrchr.htm">strrchr, wcsrchr,_mbsrchr</A></TD>
<TD width=72%>Find last occurrence of given character in string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__strrev.2c_._wcsrev.2c_._mbsrev.htm">_strrev, _wcsrev,_mbsrev</A></TD>
<TD width=72%>Reverse string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__strset.2c_._wcsset.2c_._mbsset.htm">_strset, _wcsset, _mbsset</A></TD>
<TD width=72%>Set all characters of string to specified character</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strspn.2c_.wcsspn.2c_._mbsspn.htm">strspn, wcsspn, _mbsspn</A></TD>
<TD width=72%>Find first substring from one string in another string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strstr.2c_.wcsstr.2c_._mbsstr.htm">strstr, wcsstr, _mbsstr</A></TD>
<TD width=72%>Find first occurrence of specified string in another string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strtok.2c_.wcstok.2c_._mbstok.htm">strtok, wcstok, _mbstok</A></TD>
<TD width=72%>Find next token in string</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt__strupr.2c_._wcsupr.2c_._mbsupr.htm">_strupr, _wcsupr, _mbsupr</A></TD>
<TD width=72%>Convert string to uppercase</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_strxfrm.2c_.wcsxfrm.htm">strxfrm, wcsxfrm</A></TD>
<TD width=72%>Transform string into collated form based on locale-specific information</TD>
</TR>

<TR VALIGN="top">
<TD width=28%><A HREF="_crt_vsprintf.2c_.vswprintf.htm">vsprintf, _vstprint</A></TD>
<TD width=72%>Write formatted output using a pointer to a list of arguments</TD>
</TR>
</TABLE><BR>
</font>
</BODY>
</HTML>
