<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>atexit</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_atexit"></A><SUP></SUP>atexit</H1>

<P>Processes the specified function at exit.</P>

<P><B>int</B> <B>atexit(</B> <B>void</B> <B>(</B> <B>__cdecl</B> <B>*</B><I>func</I> <B>)(</B> <B>void</B> <B>)</B> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=18%><B>Routine</B></TD>
<TD class=label width=29%><B>Required Header</B></TD>
<TD class=label width=53%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>atexit</B></TD>
<TD width=29%>&lt;stdlib.h&gt;</TD>
<TD width=53%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P>To generate an ANSI-compliant application, use the ANSI-standard <B>atexit</B> function (rather than the similar <B>_onexit</B> function).</P>

<P class=label><B>Return Value</B></P>

<P><B>atexit</B> returns 0 if successful, or a nonzero value if an error occurs. </P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>func</I></P>

<P class=indent>Function to be called</P>

<P class=label><B>Remarks</B></P>

<P>The <B>atexit</B> function is passed the address of a function (<I>func</I>) to be called when the program terminates normally. Successive calls to <B>atexit</B> create a register of functions that are executed in LIFO (last-in-first-out) order. The functions passed to <B>atexit</B> cannot take parameters. <B>atexit</B> and <B>_onexit</B> use the heap to hold the register of functions. Thus, the number of functions that can be registered is limited only by heap memory.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* ATEXIT.C: This program pushes four functions onto
 * the stack of functions to be executed when atexit
 * is called. When the program exits, these programs
 * are executed on a "last in, first out" basis.
 */

#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

void fn1( void ), fn2( void ), fn3( void ), fn4( void );

void main( void )
{
   atexit( fn1 );
   atexit( fn2 );
   atexit( fn3 );
   atexit( fn4 );
   printf( "This is executed first.\n" );
}

void fn1()
{
   printf( "next.\n" );
}

void fn2()
{
   printf( "executed " );
}

void fn3()
{
   printf( "is " );
}

void fn4()
{
   printf( "This " );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>This is executed first.
This is executed next.

</CODE></PRE>

<P><A HREF="_crt_process_and_environment_control.htm">Process and Environment Control Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_abort.htm">abort</A>, <A HREF="_crt_exit.2c_._exit.htm">exit</A>, <A HREF="_crt__onexit.htm">_onexit</A></P>
</font>
</BODY>
</HTML>
