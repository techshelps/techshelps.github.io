<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>scanf, wscanf</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_scanf.2c_.wscanf"></A><SUP></SUP>scanf, wscanf</H1>

<P>Read formatted data from the standard input stream.</P>

<P><B>int</B> <B>scanf(</B> <B>const</B> <B>char</B> <B>*</B><I>format</I> [<B>,</B><I>argument</I>]<I>...</I> <B>);</B></P>

<P><B>int</B> <B>wscanf(</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>format</I> [<B>,</B><I>argument</I>]<I>...</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=15%><B>Routine</B></TD>
<TD class=label width=33%><B>Required Header</B></TD>
<TD class=label width=52%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>scanf</B></TD>
<TD width=33%>&lt;stdio.h&gt;</TD>
<TD width=52%>ANSI, Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>wscanf</B></TD>
<TD width=33%>&lt;stdio.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=52%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Both <B>scanf</B> and <B>wscanf</B> return the number of fields successfully converted and assigned; the return value does not include fields that were read but not assigned. A return value of 0 indicates that no fields were assigned. The return value is <B>EOF</B> for an error or if the end-of-file character or the end-of-string character is encountered in the first attempt to read a character.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>format</I></P>

<P class=indent>Format control string</P>

<P class=dt><I>argument</I></P>

<P class=indent>Optional arguments</P>

<P class=label><B>Remarks</B></P>

<P>The <B>scanf</B> function reads data from the standard input stream <B>stdin</B> and writes the data into the location given by <I>argument</I>. Each <I>argument</I> must be a pointer to a variable of a type that corresponds to a type specifier in <I>format</I>. If copying takes place between strings that overlap, the behavior is undefined.</P>

<P><B>wscanf</B> is a wide-character version of <B>scanf</B>; the <I>format</I> argument to <B>wscanf</B> is a wide-character string. <B>wscanf</B> and <B>scanf</B> behave identically otherwise. </P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tscanf</TD>
<TD width=29%>scanf</TD>
<TD width=26%>scanf</TD>
<TD width=28%>wscanf</TD>
</TR>
</TABLE><BR>

<P>For more information, see <A HREF="_crt_format_specification_fields_.2d_.scanf_and_wscanf_functions.htm">Format Specification Fields — scanf functions and wscanf Functions</A>. </P>

<P class=label><B>Example</B></P>

<PRE><CODE> /* SCANF.C: This program uses the scanf and wscanf functions
  * to read formatted input.
  */

#include &lt;stdio.h&gt;

void main( void )
{
   int   i, result;
   float fp;
   char  c, s[81];
   wchar_t wc, ws[81];

   printf( "\n\nEnter an int, a float, two chars and two strings\n");

   result = scanf( "%d %f %c %C %s %S", &amp;i, &amp;fp, &amp;c, &amp;wc, s, ws );
   printf( "\nThe number of fields input is %d\n", result );
   printf( "The contents are: %d %f %c %C %s %S\n", i, fp, c, wc, s, ws);

   wprintf( L"\n\nEnter an int, a float, two chars and two strings\n");

   result = wscanf( L"%d %f %hc %lc %S %ls", &amp;i, &amp;fp, &amp;c, &amp;wc, s, ws );
   wprintf( L"\nThe number of fields input is %d\n", result );
   wprintf( L"The contents are: %d %f %C %c %hs %s\n", i, fp, c, wc, s, ws);
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Enter an int, a float, two chars and two strings
71
98.6
h
z
Byte characters

The number of fields input is 6
The contents are: 71 98.599998 h z Byte characters

Enter an int, a float, two chars and two strings
36
92.3
y
n
Wide characters

The number of fields input is 6
The contents are: 456 92.300003 y n Wide characters

</CODE></PRE>

<P><A HREF="_crt_floating.2d.point_support.htm">Floating-Point Support Routines</A>, <A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A>, <A HREF="_crt_locale.htm">Locale Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_fscanf.2c_.fwscanf.htm">fscanf</A>, <A HREF="_crt_printf.2c_.wprintf.htm">printf</A>, <A HREF="_crt_sprintf.2c_.swprintf.htm">sprintf</A>, <A HREF="_crt_sscanf.2c_.swscanf.htm">sscanf</A></P>
</font>
</BODY>
</HTML>
