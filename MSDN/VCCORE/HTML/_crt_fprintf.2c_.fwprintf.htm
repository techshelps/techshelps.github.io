<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>fprintf, fwprintf</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_fprintf.2c_.fwprintf"></A><SUP></SUP>fprintf, fwprintf</H1>

<P>Print formatted data to a stream.</P>

<P><B>int</B> <B>fprintf(</B> <B>FILE</B> <B>*</B><I>stream</I><B>,</B> <B>const</B> <B>char</B> <B>*</B><I>format</I> [, <I>argument</I> ]...<B>);</B></P>

<P><B>int</B> <B>fwprintf(</B> <B>FILE</B> <B>*</B><I>stream</I><B>,</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>format</I> [, <I>argument</I> ]...<B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Function</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=57%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>fprintf</B></TD>
<TD width=27%>&lt;stdio.h&gt;</TD>
<TD width=57%>ANSI, Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>fwprintf</B></TD>
<TD width=27%>&lt;stdio.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=57%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>fprintf</B> returns the number of bytes written. <B>fwprintf</B> returns the number of wide characters written. Each of these functions returns a negative value instead when an output error occurs. </P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>stream</I></P>

<P class=indent>Pointer to <B>FILE</B> structure</P>

<P class=dt><I>format</I></P>

<P class=indent>Format-control string</P>

<P class=dt><I>argument</I></P>

<P class=indent>Optional arguments</P>

<P class=label><B>Remarks</B></P>

<P><B>fprintf</B> formats and prints a series of characters and values to the output <I>stream.</I> Each function <I>argument</I> (if any) is converted and output according to the corresponding format specification in <I>format.</I> For <B>fprintf</B>, the <I>format</I> argument has the same syntax and use that it has in <B>printf</B>.</P>

<P><B>fwprintf</B> is a wide-character version of <B>fprintf</B>; in <B>fwprintf</B>, <I>format</I> is a wide-character string. These functions behave identically otherwise. </P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_ftprintf</TD>
<TD width=29%>fprintf</TD>
<TD width=26%>fprintf</TD>
<TD width=28%>fwprintf</TD>
</TR>
</TABLE><BR>

<P>For more information, see <A HREF="_crt_format_specification_fields_.2d_.printf_and_wprintf_functions.htm">Format Specifcations</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* FPRINTF.C: This program uses fprintf to format various
 * data and print it to the file named FPRINTF.OUT. It
 * then displays FPRINTF.OUT on the screen using the system
 * function to invoke the operating-system TYPE command.
 */

#include &lt;stdio.h&gt;
#include &lt;process.h&gt;

FILE *stream;

void main( void )
{
   int    i = 10;
   double fp = 1.5;
   char   s[] = "this is a string";
   char   c = '\n';

   stream = fopen( "fprintf.out", "w" );
   fprintf( stream, "%s%c", s, c );
   fprintf( stream, "%d\n", i );
   fprintf( stream, "%f\n", fp );
   fclose( stream );
   system( "type fprintf.out" );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>this is a string
10
1.500000

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__cprintf.htm">_cprintf</A>, <A HREF="_crt_fscanf.2c_.fwscanf.htm">fscanf</A>, <A HREF="_crt_sprintf.2c_.swprintf.htm">sprintf</A></P>
</font>
</BODY>
</HTML>
