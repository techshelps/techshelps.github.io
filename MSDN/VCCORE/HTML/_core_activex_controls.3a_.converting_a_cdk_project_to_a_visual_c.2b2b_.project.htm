<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Controls: Converting a CDK Project to a Visual C++ Project</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="circle sample start">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfcnotes_TN059">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_activex_controls.3a_.converting_a_cdk_project_to_a_visual_c.2b2b_.project"></A>ActiveX Controls: Converting a CDK Project to a Visual C++ Project</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_activex_controls.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_activex_control_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_frequently_asked_questions_about_activex_controls.htm">FAQ</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_activex_control_sample_list.htm">Sample</A></P>

<P>This article discusses converting existing OLE Custom Control Developer's Kit (CDK) projects (versions 1.0 and 1.1) to current Visual C++ projects. Because the support for ActiveX controls has been fully integrated into MFC, there are several changes that need to be made to an existing project before the control can be built successfully.</P>

<P>In summary, the necessary changes are:

<UL type=disc>
	<LI>Remove all references to the OCS30 libraries.<BR><BR></LI>

	<LI>Remove <B>RESIDENTNAME</B> from the module definition (.DEF) file.<BR><BR></LI>

	<LI>Delete the contents of the project's output directories and TLB16 directory.</LI>
</UL>

<P>For demonstration purposes, this article converts a project named SAMPLE32.</P>

<P class=label><B>To remove all references to the OCS30 libraries</B>

<OL>
	<LI>In Visual C++, open the control's 32-bit project file, in this case, SAMPLE32.MAK.<BR><BR></LI>

	<LI>On the <B>Build </B>menu, click <B>Settings</B> to open the Project Settings dialog box.<BR><BR></LI>

	<LI>Click the <B>Link </B>tab.<BR><BR></LI>

	<LI>Select the first target in the <B>Output File Name</B> box, in this case, Win32 ANSI Debug (SAMPLE.OCX).<BR><BR></LI>

	<LI>In the <B>Object/Library Modules </B>box, delete any library name of the form "OCS30*.LIB." For example, when the Win32 ANSI Debug target is selected, delete the library name "OCS30D.LIB."<BR><BR></LI>

	<LI>Repeat steps 4 and 5 for each target in the <B>Output File Name</B> box.<BR><BR></LI>

	<LI>Click the <B>OK </B>button to accept the changes and close the <B>Object/Library Modules</B> box.</LI>
</OL>

<P class=label><B>To remove RESIDENTNAME from the module definition file</B>

<OL>
	<LI>In Visual C++, open the control's 32-bit module definition file, in this case, SAMPLE32.DEF.<BR><BR></LI>

	<LI>Delete each occurrence of the string <CODE>RESIDENTNAME</CODE> from the file. There are typically four occurrences of this string.
<P class=tl>For example, the following line of code:</P>
<PRE><CODE>DllCanUnloadNow     @1 RESIDENTNAME
</CODE></PRE>

<P class=tl>should be changed to:</P>
<PRE><CODE>DllCanUnloadNow     @1 PRIVATE
</CODE></PRE>

<P class=tl>Note that using the <B>PRIVATE</B> modifier avoids warnings from the linker. Similarly, symbols such as <B>DllRegisterServer</B> and <B>DllUnregisterServer</B> should also have the <B>PRIVATE</B> modifier.</P></LI>

	<LI>On the <B>File </B>menu, click <B>Save</B>.</LI>
</OL>

<P>The final step is to remove any existing directories and project files from earlier builds. This ensures a clean build with the new project settings.</P>

<P class=label><B>To delete the contents of the project's output directories and the TLB16 subdirectory</B>

<UL type=disc>
	<LI>At the DOS command prompt, File Manager, or Windows Explorer, delete the directories named “TLB16”, "OBJ32", "OBJD32", "OBJU32" and "OBJDU32" from the project directory.</LI>
</UL>

<H3>ANSI/Unicode Changes</H3>

<P>One of the changes that occurred between the original release of the CDK and its integration into VC ++ 4.0, was the removal of the MFCANS32 DLL. This DLL was responsible for the ANSI/Unicode translation layer used for Unicode-based OLE interfaces with an ANSI-targeted control. If your control supported licensing, it was affected by this change.</P>

<P>In order for your control to function properly, you will need to make some code changes to the control implementation (.CPP) files.

<UL type=disc>
	<LI>If your control supports licensing, change the declaration of the license string, found in the control implementation (.CPP) file, to the following:
<PRE><CODE>static const OLECHAR BASED_CODE _szLicString[] =
OLESTR("Licensed Control Copyright (c) 1994-1995 My Corporation");
</CODE></PRE>
</LI>

	<LI>Every direct call to the OLE API that passes a string as a parameter must first convert the string by making a call to <B>MultiByteToWideChar</B>, and then passing the result to the <B>SysAllocString</B> function. The following example uses new MFC conversion macros to simplify calling the <B>SysAllocString</B> function:
<PRE><CODE>USES_CONVERSION;
TCHAR szMyString[] = _T("Licensed Control Copyright (c)    
   1994-1995 My Corporation"); //a multi-byte string
BSTR strWide = SysAllocString(T2OLE(szMyString));
</CODE></PRE>
</LI>
</UL>

<P>The <B>USES_CONVERSION</B> macro and the <B>T2OLE</B> macro are described in <A HREF="JavaScript:hhobj_3.Click()">Technical Note 59</A>, Using MFC MBCS/Unicode Conversion Macros. These macros simplify calling functions that require conversion between Unicode and MBCS, particularly OLE API functions such as <B>SysAllocString</B>. </P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_create_a_program_with_the_mfc_activex_controlwizard.htm">Create a Program with the MFC ActiveX ControlWizard</A></P>
</font>
</BODY>
</HTML>
