<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The /Yd (Duplicate Debugging Information in All Object Files) Option</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_the_.2f.yd_.28.duplicate_debugging_information_in_all_object_files.29_.option"></A>The /Yd (Duplicate Debugging Information in All Object Files) Option</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A></P>

<P>Use the /Yd (Duplicate Debugging Information in All Object Files) option with the /Z7 (Generate Microsoft C/C++ Version 7.0 Compatible CodeView Information) option to place complete debugging information in all object files that are ultimately created from the resulting precompiled header (.PCH) file. The /Yd option takes no argument.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The /Yd option is obsolete with the advent of the new program database (PDB) files created by the “generate complete debugging information” (/Zi) option. The /Yd option is retained on /Zi, /Zd, and /Z7 for backward compatibility with Microsoft C/C++ version 7.0. </P>

<P>Storing complete debugging information in every object file, including the information that describes only the .PCH file, is sometimes convenient, but it slows compilation and requires considerable disk space.</P>

<P>In contrast, when /Yc and /Z7 are used without /Yd, the compiler stores debugging information describing the .PCH file in the first object file created from that file. The compiler does not insert this common debugging information into object files subsequently created from the .PCH file; rather, it inserts cross-references to the debugging information. Therefore, no matter how many object files use the .PCH file, only one object file contains the common debugging information.</P>

<P>Although this default behavior results in faster build times and reduces disk-space demands, it is undesirable if a small change requires rebuilding the object file containing the common debugging information. In this case, the compiler must rebuild all object files containing cross-references to the original object file. Also, it is difficult to rely on cross-references to a single object file if a common .PCH file is used by different projects.</P>

<H2>Examples</H2>

<P>Suppose you have two base files, F.CPP and G.CPP, each containing these <B>#include</B> statements:</P>

<PRE><CODE>#include "windows.h"
#include "etc.h"</CODE></PRE>

<P>The following command creates the precompiled header file ETC.PCH and the object file F.OBJ:</P>

<PRE><CODE>CL /YcETC.H /Z7 F.CPP</CODE></PRE>

<P>The object file F.OBJ includes type and symbol information for WINDOWS.H and ETC.H (and any other header files they include). Now you can use the precompiled header ETC.PCH to compile the source file G.CPP:</P>

<PRE><CODE>CL /YuETC.H /Z7 G.CPP</CODE></PRE>

<P>The object file G.OBJ does not include the debugging information for the precompiled header but simply references that information in the F.OBJ file. Note that you must link with the F.OBJ.</P>

<P>If your precompiled header was not compiled with /Z7, you can still use it in later compilations using /Z7. However, the debugging information is placed in the current object file, and local symbols for functions and types defined in the precompiled header are not available to the debugger.</P>
</font>
</BODY>
</HTML>
