<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_commit</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__commit"></A><SUP></SUP>_commit</H1>

<P>Flushes a file directly to disk.</P>

<P><B>int</B> <B>_commit(</B> <B>int</B> <I>handle</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=27%><B>Optional Headers</B></TD>
<TD class=label width=30%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_commit</B></TD>
<TD width=27%>&lt;io.h&gt;</TD>
<TD width=27%>&lt;errno.h&gt;</TD>
<TD width=30%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_commit</B> returns 0 if the file was successfully flushed to disk. A return value of –1 indicates an error, and <B>errno</B> is set to <B>EBADF</B>, indicating an invalid file-handle parameter.</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>handle</I></P>

<P class=indent>Handle referring to open file</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_commit</B> function forces the operating system to write the file associated with <I>handle</I> to disk. This call ensures that the specified file is flushed immediately, not at the operating system’s discretion.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* COMMIT.C illustrates low-level file I/O functions including:
 *
 *     _close    _commit    memset    _open    _write
 *
 * This is example code; to keep the code simple and readable
 * return values are not checked.
 */

#include &lt;io.h&gt;
#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;memory.h&gt;
#include &lt;errno.h&gt;

#define MAXBUF 32

int log_receivable( int );

void main( void )
{
    int fhandle;
    fhandle = _open( "TRANSACT.LOG", _O_APPEND | _O_CREAT |
                                     _O_BINARY | _O_RDWR );
    log_receivable( fhandle );
    _close( fhandle );
}

int log_receivable( int fhandle )
{
/* The log_receivable function prompts for a name and a monetary 
 * amount and places both values into a buffer (buf). The _write 
 * function writes the values to the operating system and the 
 * _commit function ensures that they are written to a disk file.
 */

    int i;
    char  buf[MAXBUF];

    memset( buf, '\0', MAXBUF );
    /* Begin Transaction. */
    printf( "Enter name: " );
    gets( buf );
    for( i = 1; buf[i] != '\0'; i++ );
    /* Write the value as a '\0' terminated string. */
    _write( fhandle, buf, i+1 );
    printf( "\n" );

    memset( buf, '\0', MAXBUF );
    printf( "Enter amount: $" );
    gets( buf );
    for( i = 1; buf[i] != '\0'; i++ );
    /* Write the value as a '\0' terminated string. */
    _write( fhandle, buf, i+1 );
    printf( "\n" );

    /* The _commit function ensures that two important pieces of 
     * data are safely written to disk. The return value of the 
     * _commit function is returned to the calling function.
     */
    return _commit( fhandle );
}
</CODE></PRE>

<P><A HREF="_crt_low.2d.level_i.2f.o.htm">Low-Level I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__creat.2c_._wcreat.htm">_creat</A>, <A HREF="_crt__open.2c_._wopen.htm">_open</A>, <A HREF="_crt__read.htm">_read</A>, <A HREF="_crt__write.htm">_write</A></P>
</font>
</BODY>
</HTML>
