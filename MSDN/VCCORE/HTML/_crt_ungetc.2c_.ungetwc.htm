<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ungetc, ungetwc</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_ungetc.2c_.ungetwc"></A><SUP></SUP>ungetc, ungetwc</H1>

<P>Pushes a character back onto the stream.</P>

<P><B>int</B> <B>ungetc(</B> <B>int</B> <I>c</I><B>,</B> <B>FILE</B> <B>*</B><I>stream</I> <B>);</B></P>

<P><B>wint_t</B> <B>ungetwc(</B> <B>wint_t</B> <I>c</I><B>,</B> <B>FILE</B> <B>*</B><I>stream</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=15%><B>Routine</B></TD>
<TD class=label width=34%><B>Required Header</B></TD>
<TD class=label width=51%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>ungetc</B></TD>
<TD width=34%>&lt;stdio.h&gt;</TD>
<TD width=51%>ANSI, Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>ungetwc</B></TD>
<TD width=34%>&lt;stdio.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=51%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>If successful, each of these functions returns the character argument <I>c.</I> If <I>c</I> cannot be pushed back or if no character has been read, the input stream is unchanged and <B>ungetc</B> returns <B>EOF</B>; <B>ungetwc</B> returns <B>WEOF</B>.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>c</I></P>

<P class=indent>Character to be pushed</P>

<P class=dt><I>stream</I></P>

<P class=indent>Pointer to <B>FILE</B> structure</P>

<P class=label><B>Remarks</B></P>

<P>The <B>ungetc</B> function pushes the character <I>c</I> back onto <I>stream</I> and clears the end-of-file indicator. The stream must be open for reading. A subsequent read operation on <I>stream</I> starts with <I>c.</I> An attempt to push <B>EOF</B> onto the stream using <B>ungetc</B> is ignored.</P>

<P>Characters placed on the stream by <B>ungetc</B> may be erased if <B>fflush</B>, <B>fseek</B>, <B>fsetpos</B>, or <B>rewind</B> is called before the character is read from the stream. The file-position indicator will have the value it had before the characters were pushed back. The external storage corresponding to the stream is unchanged. On a successful <B>ungetc</B> call against a text stream, the file-position indicator is unspecified until all the pushed-back characters are read or discarded. On each successful <B>ungetc</B> call against a binary stream, the file-position indicator is decremented; if its value was 0 before a call, the value is undefined after the call.</P>

<P>Results are unpredictable if <B>ungetc</B> is called twice without a read or file-positioning operation between the two calls. After a call to <B>fscanf</B>, a call to <B>ungetc</B> may fail unless another read operation (such as <B>getc</B>) has been performed. This is because <B>fscanf</B> itself calls <B>ungetc</B>.</P>

<P><B>ungetwc</B> is a wide-character version of <B>ungetc</B>. However, on each successful <B>ungetwc</B> call against a text or binary stream, the value of the file-position indicator is unspecified until all pushed-back characters are read or discarded.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_ungettc</TD>
<TD width=29%>ungetc</TD>
<TD width=26%>ungetc</TD>
<TD width=28%>ungetwc </TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* UNGETC.C: This program first converts a character
 * representation of an unsigned integer to an integer. If
 * the program encounters a character that is not a digit,
 * the program uses ungetc to replace it in the  stream.
 */

#include &lt;stdio.h&gt;
#include &lt;ctype.h&gt;

void main( void )
{
   int ch;
   int result = 0;

   printf( "Enter an integer: " );

   /* Read in and convert number: */
   while( ((ch = getchar()) != EOF) &amp;&amp; isdigit( ch ) )
      result = result * 10 + ch - '0';    /* Use digit. */
   if( ch != EOF )
      ungetc( ch, stdin );                /* Put nondigit back. */
   printf( "Number = %d\nNextcharacter in stream = '%c'", 
            result, getchar() );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Enter an integer: 521a
Number = 521
Nextcharacter in stream = 'a'

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_getc.2c_.getwc.2c_.getchar.2c_.getwchar.htm">getc</A>, <A HREF="_crt_putc.2c_.putwc.2c_.putchar.2c_.putwchar.htm">putc</A></P>
</font>
</BODY>
</HTML>
