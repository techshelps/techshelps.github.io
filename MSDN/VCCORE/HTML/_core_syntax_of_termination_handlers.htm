<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Syntax of Termination Handlers</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_AbnormalTermination">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_syntax_of_termination_handlers"></A><SUP></SUP>Syntax of Termination Handlers</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_exception_handling_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.frequently_asked_questions.htm">FAQ</A></P>

<P>The structure of a termination handler is:</P>

<P class=dt><B>__try {</B><BR>
</P>

<P class=indent><I>statement-block-1</I><BR>
<B>}</B><BR>
<B>__finally {</B><BR>
&nbsp;&nbsp;&nbsp; <I>statement-block-2</I><BR>
<BR>
<B>}</B></P>

<P>The statements in <I>statement-block-1</I> are executed unconditionally. The statements in <I>statement-block-2</I> are always executed, in one of two ways:

<UL type=disc>
	<LI>If <I>statement-block-1</I> finishes execution normally, <I>statement-block-2</I> is then executed.<BR><BR></LI>

	<LI>If <I>statement-block-1</I> is prematurely terminated for any reason, including a jump out of the block, the system executes <I>statement-block-2</I> as a part of the process of unwinding the stack.</LI>
</UL>

<P>In the second case, the <A HREF="JavaScript:hhobj_2.Click()">AbnormalTermination</A> function returns TRUE if called from within <I>statement-block-2</I>; otherwise, it returns FALSE.</P>

<P>If <I>statement-block-1</I> was abnormally terminated, the termination handler is executed as a part of the process of unwinding the stack. If control jumps outside of several blocks of code at once, the system clears the stack frame for each block of code or function exited, starting with the lowest (most deeply-nested) stack frame. As each frame is cleared, the system executes its termination handler.</P>

<P>For example, suppose a series of function calls links function A to function D, as shown in the following figure. Each function has one termination handler. If an exception is raised in function D and handled in A, the termination handlers are called in this order as the system unwinds the stack: D, C, B.</P>

<P class=label><B>Order of Termination-Handler Execution</B></P>

<P><IMG SRC="q08exc1.gif" ALT="" BORDER=0></P>
</font>
</BODY>
</HTML>
