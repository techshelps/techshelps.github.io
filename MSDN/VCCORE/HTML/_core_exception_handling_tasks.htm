<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exception Handling Tasks</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_exception_handling_tasks"></A>Exception Handling Tasks</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_exception_handling_topics_.28.general.29.htm">Details</A></P>

<P>When <A HREF="_core_exception_handling.3a_.overview.htm">exceptional conditions</A> occur in your program, be ready for them by supplying exception handlers. Visual C++ supplies three different mechanisms for handling exceptions. For guidance on which exception handling mechanism to use, see the overview.</P>

<P>The following categories of tasks are listed in this topic:

<UL type=disc>
	<LI><A HREF="#_core_general_exception_tasks">General Exception Tasks</A><BR><BR></LI>

	<LI><A HREF="#_core_mfc_exception_tasks">MFC Exception Tasks</A><BR><BR></LI>

	<LI><A HREF="#_core_c.2b2b_.exception_tasks">C++ Exception Tasks</A><BR><BR></LI>

	<LI><A HREF="#_core_structured_exception_handling_tasks">Structured Exception Handling Tasks</A></LI>
</UL>

<H3>What do you want to do?</H3>

<P><A NAME="_core_general_exception_tasks"></A><I>General Exception Tasks</I>

<UL type=disc>
	<LI><A HREF="_core_exception_handling.3a_.overview.htm">Learn what exception handling is</A><BR><BR></LI>

	<LI><A HREF="_core_which_exception_handling_mechanism_should_i_use.3f.htm">Learn what exception handling mechanisms are available</A><BR><BR></LI>

	<LI><A HREF="_core_what_exception_handling_mechanisms_are_available.3f.htm">Learn which mechanism to use when</A></LI>
</UL>

<P><A NAME="_core_mfc_exception_tasks"></A><I>MFC Exception Tasks</I>

<UL type=disc>
	<LI>Handle an exception: <A HREF="_core_exception_handling_topics_.28.mfc.29.htm">in MFC</A>, <A HREF="_core_exception_handling_topics_.28.c.2b2b29.htm">in C++ without MFC</A>, <A HREF="_core_exception_handling_topics_.28.seh.29.htm">in C under Windows NT or Windows 95</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.converting_from_mfc_exception_macros.htm">Convert my program from MFC exception macros to C++ exceptions</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.examining_exception_contents.htm">Examine the contents of an MFC exception object</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.freeing_objects_in_exceptions.htm">Free objects correctly when handling an exception</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.throwing_exceptions_from_your_own_functions.htm">Throw an exception from my own function</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.exceptions_in_constructors.htm">Learn what to do with exceptions that occur in a constructor</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.database_exceptions.htm">Handle exceptions in an MFC database program</A><BR><BR></LI>

	<LI><A HREF="_core_exceptions.3a_.ole_exceptions.htm">Handle exceptions in an MFC OLE program</A></LI>
</UL>

<P><A NAME="_core_c.2b2b_.exception_tasks"></A><I>C++ Exception Tasks</I></P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;These tasks apply also to MFC.

<UL type=disc>
	<LI><A HREF="_core_type.2d.safe_exception_handling.htm">Handle exceptions in a type-safe manner</A><BR><BR></LI>

	<LI><A HREF="_core_unhandled_exceptions.htm">Learn about what happens to unhandled exceptions</A><BR><BR></LI>

	<LI><A HREF="_core_exception_handling_overhead.htm">Understand the overhead for using exception handling</A></LI>
</UL>

<P><A NAME="_core_structured_exception_handling_tasks"></A><I>Structured Exception Handling Tasks</I>

<UL type=disc>
	<LI><A HREF="_core_exception_handlers_and_termination_handlers.htm">Learn about Windows NT exception and termination handlers</A><BR><BR></LI>

	<LI><A HREF="_core_writing_an_exception_handler.htm">Learn to write exception handlers with structured exception handling</A><BR><BR></LI>

	<LI><A HREF="_core_writing_a_termination_handler.htm">Learn to write termination handlers with structured exception handling</A></LI>
</UL>
</font>
</BODY>
</HTML>
