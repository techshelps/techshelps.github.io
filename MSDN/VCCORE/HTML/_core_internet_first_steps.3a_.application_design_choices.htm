<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Internet First Steps: Application Design Choices</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CAsyncMonikerFile">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDataPathProperty">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CInternetSession">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CFtpFileFind">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CGopherFileFind">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CSocket">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CAsyncSocket">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_internet_first_steps.3a_.application_design_choices"></A>Internet First Steps: Application Design Choices</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_internet_support.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_internet_tasks.htm">How Do I</A></P>

<P>This article discusses some of the design issues to consider when programming for the Internet. It also describes the sample applications available.</P>

<P>Topics covered in this article include:

<UL type=disc>
	<LI><A HREF="#_core_intranet_versus_internet">Intranet Versus Internet</A><BR><BR></LI>

	<LI><A HREF="#_core_client_or_server_application">Client or Server Application</A><BR><BR></LI>

	<LI><A HREF="#_core_the_web_page.3a_.html.2c_.activex_documents.2c_.activex_controls">The Web Page: HTML, Active Documents, ActiveX Controls</A><BR><BR></LI>

	<LI><A HREF="#_core_browser_or_stand.2d.alone_application">Browser or Stand-Alone Application</A><BR><BR></LI>

	<LI><A HREF="#_core_com_on_the_internet">COM on the Internet</A><BR><BR></LI>

	<LI><A HREF="#_core_client_data_download_services">Client Data Download Services</A><BR><BR></LI>

	<LI><A HREF="#_core_server_extensions_and_filters">Server Extensions and Filters</A><BR><BR></LI>

	<LI><A HREF="_core_internet_sample_list.htm">Samples</A></LI>
</UL>

<P>If you are ready to start writing your program now, see <A HREF="_core_internet_first_steps.3a_.writing_mfc_applications.htm">Internet First Steps: Writing MFC Applications</A>.</P>

<H2><A NAME="_core_intranet_versus_internet"></A>Intranet Versus Internet</H2>

<P>Many applications run on the Internet and are accessible to anyone with a browser and Internet access. Businesses are also implementing intranets, which are company-wide networks using TCP/IP protocols and Web browsers. Intranets offer an easily upgradeable, central source for company-wide information. They can be used for upgrading software, for delivering and tabulating surveys, for customer support, and for information delivery. The following table compares features of the Internet and intranets.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=50%><B>Internet</B></TD>
<TD class=label width=50%><B>Intranet</B></TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Low bandwidth</TD>
<TD width=50%>High bandwidth</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Reduced security of data and systems</TD>
<TD width=50%>Controlled access to data and systems</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>Minimal control of content</TD>
<TD width=50%>High control of content</TD>
</TR>
</TABLE><BR>

<H2><A NAME="_core_client_or_server_application"></A>Client or Server Application</H2>

<P>Your application may run on a client computer or on a server computer. Your application may also be stored on a server, and then downloaded across the Internet and run on a client computer. MFC WinInet classes are used for client applications to download files. MFC and asynchronous moniker classes are used to download files and control properties. MFC ISAPI classes are used for server applications. Classes for ActiveX controls and Active documents are used for client applications and for applications that are downloaded from the server to run on a client.</P>

<H2><A NAME="_core_the_web_page.3a_.html.2c_.activex_documents.2c_.activex_controls"></A>The Web Page: HTML, Active Documents, ActiveX Controls</H2>

<P>Microsoft offers several ways of providing content on a Web page. Web pages can use standard HTML or HTML extensions, such as the object tag, to provide dynamic content such as ActiveX controls.</P>

<P>Web browsers typically display HTML pages. Active documents can also display your application's data in the simple point-and-click interface of a COM-enabled browser. Your Active document server can display your document, full frame in the entire client area, with its own menus and toolbars.</P>

<P>ActiveX controls you write can be downloaded asynchronously from the server and displayed on a Web page. You can use a scripting language such as VBScript to perform client-side validation before sending information to the server.</P>

<H2><A NAME="_core_browser_or_stand.2d.alone_application"></A>Browser or Stand-Alone Application</H2>

<P>You can write ActiveX controls that are embedded in an HTML page and Active document servers that are viewed in a browser. You can write HTML pages that contain a button to submit a request to run your ISAPI application on a Web server. You can write a stand-alone application that uses Internet protocols to download files and display the information to your user, without ever using a browser application.</P>

<H2><A NAME="_core_com_on_the_internet"></A>COM on the Internet</H2>

<P>ActiveX controls, Active documents, and asynchronous monikers all use COM (Component Object Model) technologies. </P>

<P>ActiveX controls provide dynamic content to documents and pages on Internet sites. With COM you can build ActiveX controls and full-frame documents using Active documents.</P>

<P>Asynchronous monikers provide features to enable a control to perform well in an Internet environment, including an incremental or progressive means to download data. Controls must also work well with other controls that may also be retrieving their data asynchronously at the same time. </P>

<H2><A NAME="_core_client_data_download_services"></A>Client Data Download Services</H2>

<P>Two sets of APIs that will help transfer data to your client are WinInet and asynchronous monikers. If you have large .gif and .avi files and ActiveX controls on your HTML page, you can increase the responsiveness to the user by downloading asynchronously, either by using asynchronous monikers or using WinInet asynchronously.</P>

<P>A common task on the Internet is transferring data. If you are already using Active technology (for example, if you have an ActiveX control), you can use asynchronous monikers to progressively render data as it downloads. You can use WinInet to transfer data using common Internet protocols like HTTP, FTP, and gopher. Both methods provide protocol independence, and provide an abstract layer to using WinSock and TCP/IP. You can still use <A HREF="_core_windows_sockets_in_mfc.htm">WinSock</A> directly.</P>

<P>The following table summarizes several ways of using MFC to transfer data across the Internet.</P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=33%><B>Use this protocol</B></TD>
<TD class=label width=33%><B>Under these conditions</B></TD>
<TD class=label width=34%><B>Using these classes</B></TD>
</TR>

<TR VALIGN="top">
<TD width=33%><A HREF="_core_internet_downloading_using_asynchronous_monikers.htm">Internet Downloading Using Asynchronous Monikers</A></TD>
<TD width=33%>For asynchronous transfer using COM, ActiveX controls, and any Internet protocol.</TD>
<TD width=34%><A HREF="JavaScript:hhobj_2.Click()">CAsyncMonikerFile</A>, <A HREF="JavaScript:hhobj_3.Click()">CDataPathProperty</A></TD>
</TR>

<TR VALIGN="top">
<TD width=33%><A HREF="_core_internet_programming_with_wininet.htm">WinInet</A></TD>
<TD width=33%>For Internet protocols for HTTP, FTP, and gopher. Data can be transferred synchronously or asynchronously and is stored in a system-wide cache.</TD>
<TD width=34%><A HREF="JavaScript:hhobj_4.Click()">CInternetSession</A>, <A HREF="JavaScript:hhobj_5.Click()">CFtpFileFind</A>, <A HREF="JavaScript:hhobj_6.Click()">CGopherFileFind</A>, and many more.</TD>
</TR>

<TR VALIGN="top">
<TD width=33%><A HREF="_core_windows_sockets_in_mfc.htm">WinSock</A></TD>
<TD width=33%>For maximum efficiency and control. Requires understanding of sockets and TCP/IP protocols.</TD>
<TD width=34%><A HREF="JavaScript:hhobj_7.Click()">CSocket</A>, <A HREF="JavaScript:hhobj_8.Click()">CAsyncSocket</A></TD>
</TR>
</TABLE><BR>

<H2><A NAME="_core_server_extensions_and_filters"></A>Server Extensions and Filters</H2>

<P>The Internet Server API (ISAPI) provides a simple and efficient way to extend any ISAPI-compliant Web server. You can write ISAPI server extension DLLs (ISAs) that can be loaded and called by the HTTP server. An ISA is invoked from a browser application and can be used for database applications using forms processing, or to provide other custom functionality.</P>

<P>You can write an ISAPI filter to register for notification of events such as logging on or URL mapping. When the selected events occur, the filter is called, and you can monitor and change the data (on its way from the server to the client or vice versa).</P>

<P>Both server extensions and filters run in the process space of the Web server, providing an efficient way to extend the server's capabilities.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_internet.3a_.where_is.......htm">Internet: Where Is...</A>, <A HREF="_core_internet_programming_with_wininet.htm">Internet Programming with WinInet</A>, <A HREF="_core_internet_downloading_using_asynchronous_monikers.htm">Internet Downloading Using Asynchronous Monikers</A></P>
</font>
</BODY>
</HTML>
