<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Type Cast Operator:  (type)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_type_cast_operator.3a_28.type.29"></A><SUP></SUP>Type Cast Operator:&nbsp; (<I>type</I>)</H1>

<P class=dt><I>cast-expression </I>:</P>

<P class=indent><I>unary-expression</I><BR>
( <I>type-name</I> ) <I>cast-expression</I></P>

<P>A type cast provides a method for explicit conversion of the type of an object in a specific situation.</P>

<P>The compiler treats <I>cast-expression</I> as type <I>type-name</I> after a type cast has been made. Casts can be used to convert objects of any scalar type to or from any other scalar type. Explicit type casts are constrained by the same rules that determine the effects of implicit conversions. Additional restraints on casts may result from the actual sizes or representation of specific types. </P>

<P class=label><B>Example</B></P>

<P>In the following example, the type cast operator converts the float value of 3.1 to an integer value of 3.</P>

<PRE><CODE>// Example of the type cast operator
float x = 3.1;
int i;
i = (int)x;   // the value of i is now 3</CODE></PRE>
</font>
</BODY>
</HTML>
