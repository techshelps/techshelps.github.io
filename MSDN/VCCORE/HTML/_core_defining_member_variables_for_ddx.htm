<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Defining Member Variables for DDX</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble start">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_defining_member_variables_for_ddx"></A>Defining Member Variables for DDX</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_working_with_classes.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_working_with_classes_tasks.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A></P>

<P>You can use ClassWizard to define member variables for dialog box controls.</P>

<P class=label><B>To define data members for dialog data exchange</B>

<OL>
	<LI>Create your dialog box, place in it the controls you want, and set the appropriate control styles in the Properties window. Then use ClassWizard to define a new dialog box class. For more information, see <A HREF="_core_adding_a_class.htm">Adding a Class</A>.<BR><BR></LI>

	<LI>On the <B>View</B> menu, click <B>ClassWizard</B>. In ClassWizard, click the <B>Member Variables</B> tab.
<P class=atl><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;For a recordset class, <B>Update Columns</B> updates the current static list with the current database list. Members assigned to a deleted column may be deleted.</p>
<P class=atl>The <B>Bind All</B> command creates an initial recordset with a default member name for every column in the table.</p></LI>

	<LI>In the <B>Control IDs</B> box, select the control for which you want to set up dialog data exchange (DDX), and click <B>Add Variable</B>.
<P class=tl>The <B>Add Member Variable</B> dialog box appears.</P></LI>

	<LI>In the <B>Member Variable Name</B> box, type the name of the new variable. ClassWizard provides the <CODE>m_</CODE> prefix to identify it as a member variable.<BR><BR></LI>

	<LI>In the <B>Category</B> box, select whether this variable is a <B>Value</B> variable or a <B>Control</B> variable. 
<P class=tl>For standard Windows controls, click <B>Value</B> to create a variable that contains the control's text or status as typed by the user. The framework automatically converts the control's data to the data type selected in the <B>Variable Type</B> box (see the table in <A HREF="_core_what_are_the_variable_types_for_the_ddx_control_property.3f.htm">What Are the Variable Types for the DDX Control Property?</A>).</P>
<P class=tl>You can also choose <B>Control</B> in the <B>Category</B> drop-down list to create a Control variable that gives you access to the control itself (see the table in <A HREF="_core_what_are_the_variable_types_for_the_ddx_control_property.3f.htm">What Are the Variable Types for the DDX Control Property?</A>).</P></LI>

	<LI>In the <B>Variable type</B> box, choose from a list of variable types appropriate to the control (see the tables in <A HREF="_core_what_are_the_variable_types_for_the_ddx_value_property.3f.htm">What Are the Variable Types for the DDX Value Property?</A> and in <A HREF="_core_what_are_the_variable_types_for_the_ddx_control_property.3f.htm">What Are the Variable Types for the DDX Control Property?</A>).<BR><BR></LI>

	<LI>Click <B>OK</B>.
<P class=tl>The new member variable is added to the <B>Control IDs</B> list.</P></LI>
</OL>

<P>Once you have defined a DDX Value variable for a standard Windows control, the framework automatically initializes and updates the variable for you.</P>

<P>You can now use ClassWizard to bind a member variable to the value of a scroll-bar control, using the Value property and the <B>int</B> data type, as well as to a <B>CScrollBar</B> object, using the Control property. The Value property binds the value of a scroll-bar control (the position of the scroll box, or "thumb"). ClassWizard enables DDX for a scroll bar by calling <B>DDX_Scroll</B> in your <CODE>DoDataExchange</CODE> override. </P>

<P>If your <CODE>DoDataExchange</CODE> function contains a call to <B>DDX_Scroll</B>, you must additionally set the scroll-bar range before that call, as shown in the following code:</P>

<PRE><CODE>void CMyDlg::DoDataExchange( CDataExchange* pDX )
{
    CScrollBar* pScrollBar = (CScrollBar*)GetDlgItem( IDC_SCROLLBAR1 );
    pScrollBar-&gt;SetScrollRange( 0, 100 );
    CDialog::DoDataExchange( pDX );
    //{{AFX_DATA_MAP(CMyDlg)
    DDX_Scroll(pDX, IDC_SCROLLBAR1, m_nScroll );
    //}}AFX_DATA_MAP
}
</CODE></PRE>
</font>
</BODY>
</HTML>
