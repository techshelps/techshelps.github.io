<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CObject Class: Accessing Run-Time Class Information</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="run time type information">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CObject">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_cobject_class.3a_.accessing_run.2d.time_class_information"></A>CObject Class: Accessing Run-Time Class Information</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_cobject.2c_.the_root_base_class_in_mfc.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_cobject_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_class_cobject.3a_.frequently_asked_questions.htm">FAQ</A></P>

<P>This article explains how to access information about the class of an object at run time.</P>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>MFC does not use the <A HREF="JavaScript:hhobj_2.Click()">Run-Time Type Information</A> (RTTI) support introduced in Visual C++ 4.0. </P>

<P>If you have derived your class from <A HREF="JavaScript:hhobj_3.Click()">CObject</A> and used the <B>DECLARE</B>_<B>DYNAMIC</B> and <B>IMPLEMENT_DYNAMIC</B>, the <B>DECLARE_DYNCREATE</B> and <B>IMPLEMENT_DYNCREATE</B>, or the <B>DECLARE_SERIAL</B> and <B>IMPLEMENT_SERIAL</B> macros explained in the article <A HREF="_core_cobject_class.3a_.deriving_a_class_from_cobject.htm">CObject Class: Deriving a Class from CObject</A>, the <B>CObject</B> class has the ability to determine the exact class of an object at run time. </P>

<P>This ability is most useful when extra type checking of function arguments is needed and when you must write special-purpose code based on the class of an object. However, this practice is not usually recommended because it duplicates the functionality of virtual functions.</P>

<P>The <B>CObject</B> member function <B>IsKindOf</B> can be used to determine if a particular object belongs to a specified class or if it is derived from a specific class. The argument to <B>IsKindOf</B> is a <B>CRuntimeClass</B> object, which you can get using the <B>RUNTIME_CLASS</B> macro with the name of the class.</P>

<P class=label><B><A NAME="_core_to_use_the_runtime_class_macro"></A>To use the RUNTIME_CLASS macro</B>

<UL type=disc>
	<LI>Use <B>RUNTIME_CLASS</B> with the name of the class, as shown here for the class <B>CObject</B>:
<PRE><CODE>CRuntimeClass* pClass = RUNTIME_CLASS( CObject );
</CODE></PRE>
</LI>
</UL>

<P>You will rarely need to access the run-time class object directly. A more common use is to pass the run-time class object to the <B>IsKindOf</B> function, as shown in the next procedure. The <B>IsKindOf</B> function tests an object to see if it belongs to a particular class.</P>

<P class=label><B><A NAME="_core_to_use_the_iskindof_function"></A>To use the IsKindOf function</B>

<OL>
	<LI>Make sure the class has run-time class support. That is, the class must have been derived directly or indirectly from <B>CObject</B> and used the <B>DECLARE</B>_<B>DYNAMIC</B> and <B>IMPLEMENT_DYNAMIC</B>, the <B>DECLARE_DYNCREATE</B> and <B>IMPLEMENT_DYNCREATE</B>, or the <B>DECLARE_SERIAL</B> and <B>IMPLEMENT_SERIAL</B> macros explained in the article <A HREF="_core_cobject_class.3a_.deriving_a_class_from_cobject.htm">CObject Class: Deriving a Class from CObject</A>. <BR><BR></LI>

	<LI>Call the <B>IsKindOf</B> member function for objects of that class, using the <B>RUNTIME_CLASS</B> macro to generate the <B>CRuntimeClass</B> argument, as shown here:
<PRE><CODE>// in .H file
class CPerson : public CObject
{
    DECLARE_DYNAMIC( CPerson )
public:
    CPerson(){};

    // other declaration 
};


// in .CPP file
IMPLEMENT_DYNAMIC( CPerson, CObject )


void SomeFunction(void)
{
CObject* pMyObject = new CPerson;

if(pMyObject-&gt;IsKindOf( RUNTIME_CLASS( CPerson ) ) )
{
//if IsKindOf is true, then cast is all right
CPerson* pmyPerson = (CPerson*) pMyObject ;
...
delete pmyPerson;
}
...
delete [MyObject];
}
</CODE></PRE>

<P class=atl><B><B>Note&nbsp;&nbsp;&nbsp;</B>IsKindOf</B> returns <B>TRUE</B> if the object is a member of the specified class or of a class derived from the specified class. <B>IsKindOf</B> does not support multiple inheritance or virtual base classes, although you can use multiple inheritance for your derived Microsoft Foundation classes if necessary.</p></LI>
</OL>

<P>One use of run-time class information is in the dynamic creation of objects. This process is discussed in the article <A HREF="_core_cobject_class.3a_.dynamic_object_creation.htm">CObject Class: Dynamic Object Creation</A>. </P>

<P>For more detailed information on serialization and run-time class information, see the articles <A HREF="_core_files_in_mfc.htm">Files in MFC</A> and <A HREF="_core_serialization_.28.object_persistence.29.htm">Serialization (Object Persistence)</A>. </P>
</font>
</BODY>
</HTML>
