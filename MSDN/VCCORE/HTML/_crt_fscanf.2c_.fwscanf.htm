<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>fscanf, fwscanf</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_fscanf.2c_.fwscanf"></A><SUP></SUP>fscanf, fwscanf</H1>

<P>Read formatted data from a stream.</P>

<P><B>int</B> <B>fscanf(</B> <B>FILE</B> <B>*</B><I>stream</I><B>,</B> <B>const</B> <B>char</B> <B>*</B><I>format</I> [, <I>argument</I> ]... <B>);</B></P>

<P><B>int</B> <B>fwscanf(</B> <B>FILE</B> <B>*</B><I>stream</I><B>,</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>format</I> [<B>,</B> <I>argument</I> ]... <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Function</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=57%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>fscanf</B></TD>
<TD width=27%>&lt;stdio.h&gt;</TD>
<TD width=57%>ANSI, Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>fwscanf</B></TD>
<TD width=27%>&lt;stdio.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=57%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns the number of fields successfully converted and assigned; the return value does not include fields that were read but not assigned. A return value of 0 indicates that no fields were assigned. If an error occurs, or if the end of the file stream is reached before the first conversion, the return value is <B>EOF</B> for fscanf or <B>WEOF</B> for <B>fwscanf</B>.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>stream</I></P>

<P class=indent>Pointer to <B>FILE</B> structure</P>

<P class=dt><I>format</I></P>

<P class=indent>Format-control string</P>

<P class=dt><I>argument</I></P>

<P class=indent>Optional arguments</P>

<P class=label><B>Remarks</B></P>

<P>The <B>fscanf</B> function reads data from the current position of <I>stream</I> into the locations given by <I>argument</I> (if any). Each <I>argument</I> must be a pointer to a variable of a type that corresponds to a type specifier in <I>format</I>. <I>format</I> controls the interpretation of the input fields and has the same form and function as the <I>format</I> argument for <B>scanf</B>; see <A HREF="_crt_scanf.2c_.wscanf.htm">scanf</A> for a description of <I>format.</I> If copying takes place between strings that overlap, the behavior is undefined.</P>

<P><B>fwscanf</B> is a wide-character version of <B>fscanf</B>; the format argument to <B>fwscanf</B> is a wide-character string. These functions behave identically otherwise.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=14%><B>TCHAR.H Routine </B></TD>
<TD class=label width=30%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=24%><B>_MBCS Defined</B></TD>
<TD class=label width=32%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=14%>_ftscanf</TD>
<TD width=30%>fscanf</TD>
<TD width=24%>fscanf</TD>
<TD width=32%>fwscanf</TD>
</TR>
</TABLE><BR>

<P>For more information, see <A HREF="_crt_format_specification_fields_.2d_.scanf_and_wscanf_functions.htm">Format Specification Fields – scanf functions and wscanf Functions</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* FSCANF.C: This program writes formatted
 * data to a file. It then uses fscanf to
 * read the various data back from the file.
 */

#include &lt;stdio.h&gt;

FILE *stream;

void main( void )
{
   long l;
   float fp;
   char s[81];
   char c;

   stream = fopen( "fscanf.out", "w+" );
   if( stream == NULL )
      printf( "The file fscanf.out was not opened\n" );
   else
   {
      fprintf( stream, "%s %ld %f%c", "a-string", 
               65000, 3.14159, 'x' );

      /* Set pointer to beginning of file: */
      fseek( stream, 0L, SEEK_SET );

      /* Read data back from file: */
      fscanf( stream, "%s", s );
      fscanf( stream, "%ld", &amp;l );

      fscanf( stream, "%f", &amp;fp );
      fscanf( stream, "%c", &amp;c );

      /* Output data read: */
      printf( "%s\n", s );
      printf( "%ld\n", l );
      printf( "%f\n", fp );
      printf( "%c\n", c );

      fclose( stream );
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>a-string
65000
3.141590
x

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__cscanf.htm">_cscanf</A>, <A HREF="_crt_fprintf.2c_.fwprintf.htm">fprintf</A>, <A HREF="_crt_scanf.2c_.wscanf.htm">scanf</A>, <A HREF="_crt_sscanf.2c_.swscanf.htm">sscanf</A></P>
</font>
</BODY>
</HTML>
