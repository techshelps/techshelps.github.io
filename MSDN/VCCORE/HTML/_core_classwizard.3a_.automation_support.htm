<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ClassWizard: Automation Support</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble start">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_AfxOleInit">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_oa96_Dispatch_Interface_and_API_Functions">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_COleTemplateServer">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_classwizard.3a_.automation_support"></A>ClassWizard: Automation Support</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_working_with_classes.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_working_with_classes_tasks.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A></P>

<P>ClassWizard supports the following Automation features:

<UL type=disc>
	<LI>Add classes that support Automation. This makes your application an Automation server. These classes will be exposed to Automation clients such as Microsoft Visual Basic and Microsoft Excel.<BR><BR></LI>

	<LI>Add methods and properties to your classes that support Automation.<BR><BR></LI>

	<LI>Create a C++ class for another Automation object on your system, such as Microsoft Excel. This makes your application an Automation client.
<P class=tl>You must call <A HREF="JavaScript:hhobj_3.Click()">AfxOleInit</A> in <B>InitInstance</B> to initialize Automation for your application.</P>
<P class=tl>For more information, see the article <A HREF="_core_classwizard.3a_.accessing_automation_servers.htm">ClassWizard: Accessing Automation Servers</A>. </P></LI>
</UL>

<P>An Automation class has a programming interface that other applications use to manipulate objects that your application implements. This is referred to as a "dispatch interface." For more information about dispatch interfaces, see <A HREF="JavaScript:hhobj_4.Click()">Dispatch Interface and API Functions</A> in the Win32 SDK.</P>

<P>ClassWizard's Add Class button now allows you to create classes supporting Automation. Click this button on the Automation tab to display a dialog box in which you can choose to create a new class or import an existing class. The New Class dialog box appears if you create a new class so you can specify the name of your class, the base class, the filenames in which your class is implemented, and the dialog display resource for the base class, if necessary. You can also choose whether your class supports Automation, and whether to add the new class to the Gallery.</P>

<P class=label><B>To add an Automation class</B>

<OL>
	<LI>On the <B>View</B> menu, click <B>ClassWizard</B>.<BR><BR></LI>

	<LI>In ClassWizard, click the <B>Add Class</B> button. On the list that drops down, click <B>New</B>. The <B>New Class</B> dialog box appears.<BR><BR></LI>

	<LI>Type a name for the class.<BR><BR></LI>

	<LI>Select a base class. Typically, new automation classes are derived from <B>CCmdTarget</B>.<BR><BR></LI>

	<LI>If you do not like the filenames specified by ClassWizard, click <B>Change</B>. The <B>Change Files</B> dialog box appears.
<P class=tl>Type new names for the .h and .cpp files. Alternately, you can use the <B>Browse</B> buttons to select files. Then click <B>OK</B> to return to the <B>New Class</B> dialog box.</P></LI>

	<LI>Click the <B>Automation</B> option to expose this class to Automation clients. If you click <B>Creatable by type ID</B>, you can specify a Type ID for this automation object. The automation client will create an object of this class using the Type ID.<BR><BR></LI>

	<LI>When you have entered all the necessary information, click <B>OK</B> to create the necessary code and add it to your project.</LI>
</OL>

<P>To continue defining the dispatch interface for your Automation class, see the article <A HREF="_core_classwizard.3a_.adding_automation_properties_and_methods.htm">ClassWizard: Adding Automation Properties and Methods</A>. </P>

<P>A class that is OLE Creatable allows other applications to create a stand-alone object of the class, for example by using the Visual Basic function <B>CreateObject</B>, and to incorporate that automation object into their application. In general, you should make only your top-level classes, such as documents, creatable from other OLE applications. Classes that are parts of these top-level classes are usually not OLE Creatable and are instead accessed from a member function in the top-level class.</P>

<P>For example, consider a list document, which contains a list of items. It's a good idea to make the top-level document class OLE Creatable, because this allows other applications to create a list from nothing. You then add/enumerate the items in the list, but you cannot create them as stand-alone objects because they depend on their position inside the list. For this reason, only stand-alone objects should be OLE Creatable. Note that if you selected Creatable By Type ID in AppWizard your document class is OLE Creatable. In other words, it can be accessed by automation clients.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;OLE insertable items are made possible by class <A HREF="JavaScript:hhobj_5.Click()">COleTemplateServer</A>. When you choose OLE support in AppWizard, a <B>COleTemplateServer</B> object manages your documents. Such documents can be created by Automation.</P>

<P>The following articles explain the details of using ClassWizard's OLE support: 

<UL type=disc>
	<LI><A HREF="_core_classwizard.3a_.adding_automation_properties_and_methods.htm">ClassWizard: Adding Automation Properties and Methods</A><BR><BR></LI>

	<LI><A HREF="_core_classwizard.3a_.accessing_automation_servers.htm">ClassWizard: Accessing Automation Servers</A></LI>
</UL>
</font>
</BODY>
</HTML>
