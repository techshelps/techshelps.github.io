<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>/Og   (Global Optimizations)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_.2f.og"></A>/Og&nbsp;&nbsp;&nbsp;(Global Optimizations)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_overviews.3a_.compiling_and_linking.htm">Overview</A>  |&nbsp; <A HREF="_core_set_compiler_options.htm">How Do I</A>  |&nbsp; <A HREF="_core_compiler_reference.htm">Compiler Options</A></P>

<P class=indent><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Code optimization is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_2.Click()">Visual C++ Editions</A>.</P>

<P>This option provides local and global optimizations, automatic-register allocation, and loop optimization. (To find this option in the development environment, click <B>Settings</B> on the <B>Project</B> menu. Then click the <B>C/C++</B> tab, and click <B>Optimizations </B>in the <B>Category </B>box. Under <B>Optimizations</B>, click <B>Global Optimizations</B>.) 

<UL type=disc>
	<LI>Local and global common subexpression elimination
<P class=tl>In this optimization, the value of a common subexpression is calculated once. In the following example, if the values of <CODE>b</CODE> and <CODE>c</CODE> do not change between the three expressions, the compiler can assign the calculation of<CODE> b + c </CODE>to a temporary variable, and substitute the variable for <CODE>b + c</CODE>:</P>
<PRE><CODE>a = b + c;
d = b + c;
e = b + c;</CODE></PRE>

<P class=tl>For local common subexpression optimization, the compiler examines short sections of code for common subexpressions. For global common subexpression optimization, the compiler searches entire functions for common subexpressions.</P></LI>

	<LI>Automatic register allocation
<P class=tl>This optimization allows the compiler to store frequently used variables and subexpressions in registers; the <B>register</B> keyword is ignored.</P></LI>

	<LI>Loop optimization
<P class=tl>This optimization removes invariant subexpressions from the body of a loop. An optimal loop contains only expressions whose values change through each execution of the loop. In the following example, the expression<CODE> x + y </CODE>does not change in the loop body:</P>
<PRE><CODE>i = -100;
while( i &lt; 0 )
{
    i += x + y;
}</CODE></PRE>

<P class=tl>After optimization,<CODE> x + y </CODE>is calculated once rather than every time the loop is executed:</P>
<PRE><CODE>i = -100;
t = x + y;
while( i &lt; 0 )
{
    i += t;
}</CODE></PRE>

<P class=tl>Loop optimization is much more effective when the compiler can assume no aliasing, which you set with <A HREF="_core_.2f.oa.2c_2f.ow.htm">Assume No Aliasing</A> (/Oa) or <A HREF="_core_.2f.oa.2c_2f.ow.htm">Assume Aliasing Across Function Calls</A> (/Ow).</P></LI>
</UL>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;You can enable or disable global optimization on a function-by-function basis using the <B>optimize</B> pragma with the <B>g</B> option.</P>

<P>For related information, see <A HREF="_core_.2f.oi.htm">Generate Intrinsic Functions (/Oi)</A>, <A HREF="_core_.2f.op.htm">Improve Float Consistency (/Op)</A>, and <A HREF="_core_.2f.ox.htm">Full Optimization (/Ox)</A>. </P>
</font>
</BODY>
</HTML>
