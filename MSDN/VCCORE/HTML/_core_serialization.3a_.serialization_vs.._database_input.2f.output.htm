<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Serialization: Serialization vs. Database Input/Output</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_gs_Serializing_the_Data">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_CHKBOOK">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFCNOTES_TN022">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_serialization.3a_.serialization_vs.._database_input.2f.output"></A>Serialization: Serialization vs. Database Input/Output</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_serialization.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_serialization_tasks.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A></P>

<P>This article explains when to use document objects and serialization for file-based input/output (I/O) and when other I/O techniques are appropriate — because the application reads and writes data on a per-transaction basis, as in database applications. If you don’t use serialization, you also won’t need the File Open, Save, and Save As commands. Topics covered include:

<UL type=disc>
	<LI><A HREF="#_core_deciding_how_to_handle_input.2f.output">Deciding how your application will handle input/output</A><BR><BR></LI>

	<LI><A HREF="#_core_the_file_menu_in_an_mfc_database_application">Handling the File menu in database applications</A></LI>
</UL>



<H2><A NAME="_core_deciding_how_to_handle_input.2f.output"></A>Deciding How to Handle Input/Output</H2>

<P>Whether you use file-based I/O or not depends on how you respond to the questions in the following decision tree, which begins with the question:</P>

<P>Does the primary data in your application reside in a disk file?

<OL>
	<LI>Yes, the primary data resides in a disk file.
<P class=tl>Does the application read the whole file into memory on File Open and write the whole file back to disk on File Save?</P></LI>

	<LI>Yes — this is the default MFC document case.
<P class=tl>Use <B>CDocument</B> serialization.</P></LI>

	<LI>No — this is typically the case of transaction-based updating of the file.
<P class=tl>The MFC Advanced Concepts sample <A HREF="JavaScript:hhobj_3.Click()">CHKBOOK</A> is an example of this case. You update the file on a per-transaction basis and don’t need <B>CDocument</B> serialization.</P></LI>

	<LI>No, the primary data doesn’t reside in a disk file.
<P class=tl>Does the data reside in an ODBC data source?</P></LI>

	<LI>Yes, the data resides in an ODBC data source.
<P class=tl>Use MFC’s database support. The standard MFC implementation for this case includes a <B>CDocument</B> object that stores a <B>CDatabase</B> object, as discussed in the article <A HREF="_core_what_is_the_mfc_database_programming_model.3f.htm">What Is the MFC Database Programming Model?</A>. The application might also read and write an auxiliary file — the purpose of the AppWizard “both a database view and file support” option. In this case, you’d use serialization for the auxiliary file.</P></LI>

	<LI>No, the data doesn’t reside in an ODBC data source.
<P class=tl>Examples of this case: the data resides in a non-ODBC DBMS; the data is read via some other mechanism, such as OLE or DDE.</P>
<P class=tl>In such cases, you won’t use serialization, and your application won’t have Open and Save menu items. You might still want to use a <B>CDocument</B> as a “home base,” just as an MFC ODBC application uses the document to store <B>CRecordset</B> objects. But you won’t use the framework’s default File Open/Save document serialization.</P></LI>
</OL>

<P>To support the Open, Save, and Save As commands on the File menu, the framework provides document serialization. Serialization reads and writes data, including objects derived from class <B>CObject</B>, to permanent storage, normally a disk file. Serialization is easy to use and serves many of your needs, but it may be inappropriate in many data-access applications. Data-access applications typically update data on a “per-transaction” basis. They update the records affected by the transaction rather than reading and writing a whole data file at once.</P>

<P>For general information about serialization, see the article <A HREF="_core_serialization_.28.object_persistence.29.htm">Serialization (Object Persistence)</A>. </P>



<H2><A NAME="_core_the_file_menu_in_an_mfc_database_application"></A>The File Menu in an MFC Database Application</H2>

<P>If you create an MFC database application and don’t use serialization, how should you interpret the Open, Close, Save, and Save As commands on the File menu? While there are no style guidelines for this question, here are a few suggestions:

<UL type=disc>
	<LI>Eliminate the File menu’s Open command entirely.<BR><BR></LI>

	<LI>Interpret the Open command as “open database” and show the user a list of data sources your application recognizes.<BR><BR></LI>

	<LI>Interpret the Open command as, perhaps, “open profile.” Retain Open for opening a serialized file, but use the file to store a serialized document containing “user profile” information, such as the user’s preferences, including his or her login ID (optionally excluding the password) and the data source he or she most recently worked with.</LI>
</UL>

<P>AppWizard supports creating an application with no document-related File menu commands. Select the “A database view, without file support” option on the database options page.</P>

<P>To interpret a File menu command in a special way, you must override one or more command handlers, mostly in your <B>CWinApp</B>-derived class. For example, if you completely override <B>OnFileOpen</B> (which implements the <B>ID_FILE_OPEN</B> command) to mean “open database”:

<UL type=disc>
	<LI>Don’t call the base class version of <B>OnFileOpen</B>, since you’re completely replacing the framework’s default implementation of the command.<BR><BR></LI>

	<LI>Use the handler instead to display a dialog box listing data sources. You can display such a dialog by calling <B>CDatabase::OpenEx</B> or <B>CDatabase::Open</B> with the parameter <B>NULL</B>. This opens an ODBC dialog box that displays all available data sources on the user’s machine.<BR><BR></LI>

	<LI>Because database applications typically don’t save a whole document, you’ll probably want to remove the Save and Save As implementations unless you use a serialized document to store profile information. Otherwise, you might implement the Save command as, for example, “commit transaction.” See <A HREF="JavaScript:hhobj_4.Click()">Technical Note 22</A> for more information about overriding these commands.</LI>
</UL>
</font>
</BODY>
</HTML>
