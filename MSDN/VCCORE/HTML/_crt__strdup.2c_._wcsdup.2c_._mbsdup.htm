<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_strdup, _wcsdup, _mbsdup</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__strdup.2c_._wcsdup.2c_._mbsdup"></A><SUP></SUP>_strdup, _wcsdup, _mbsdup</H1>

<P>Duplicate strings.</P>

<P><B>char</B> <B>*_strdup(</B> <B>const</B> <B>char</B> <B>*</B><I>strSource</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*_wcsdup(</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>strSource</I> <B>);</B></P>

<P><B>unsigned</B> <B>char</B> <B>*_mbsdup(</B> <B>const</B> <B>unsigned</B> <B>char</B> <B>*</B><I>strSource</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=34%><B>Required Header</B></TD>
<TD class=label width=49%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_strdup</B></TD>
<TD width=34%>&lt;string.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_wcsdup</B></TD>
<TD width=34%>&lt;string.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_mbsdup</B></TD>
<TD width=34%>&lt;mbstring.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns a pointer to the storage location for the copied string or <B>NULL</B> if storage cannot be allocated.</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>strSource</I></P>

<P class=indent>Null-terminated source string</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_strdup</B> function calls <A HREF="_crt_malloc.htm">malloc</A> to allocate storage space for a copy of <I>strSource</I> and then copies <I>strSource</I> to the allocated space.</P>

<P><B>_wcsdup</B> and <B>_mbsdup</B> are wide-character and multibyte-character versions of <B>_strdup</B>. The arguments and return value of <B>_wcsdup</B> are wide-character strings; those of <B>_mbsdup</B> are multibyte-character strings. These three functions behave identically otherwise.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tcsdup</TD>
<TD width=29%>_strdup</TD>
<TD width=26%>_mbsdup </TD>
<TD width=28%>_wcsdup</TD>
</TR>
</TABLE><BR>

<P>Because <B>_strdup</B> calls <B>malloc</B> to allocate storage space for the copy of <I>strSource</I>, it is good practice always to release this memory by calling the <A HREF="_crt_free.htm">free</A> routine on the pointer returned by the call to <B>_strdup</B>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* STRDUP.C */

#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   char buffer[] = "This is the buffer text";
   char *newstring;
   printf( "Original: %s\n", buffer );
   newstring = _strdup( buffer );
   printf( "Copy:     %s\n", newstring );
   free( newstring );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Original: This is the buffer text
Copy:     This is the buffer text

</CODE></PRE>

<P><A HREF="_crt_string_manipulation.htm">String Manipulation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_memset.htm">memset</A>, <A HREF="_crt_strcat.2c_.wcscat.2c_._mbscat.htm">strcat</A>, <A HREF="_crt_strcmp.2c_.wcscmp.2c_._mbscmp.htm">strcmp</A>, <A HREF="_crt_strncat.2c_.wcsncat.2c_._mbsncat.htm">strncat</A>, <A HREF="_crt_strncmp.2c_.wcsncmp.2c_._mbsncmp.htm">strncmp</A>, <A HREF="_crt_strncpy.2c_.wcsncpy.2c_._mbsncpy.htm">strncpy</A>, <A HREF="_crt__strnicmp.2c_._wcsnicmp.2c_._mbsnicmp.htm">_strnicmp</A>, <A HREF="_crt_strrchr.2c_.wcsrchr.2c_._mbsrchr.htm">strrchr</A>, <A HREF="_crt_strspn.2c_.wcsspn.2c_._mbsspn.htm">strspn</A></P>
</font>
</BODY>
</HTML>
