<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Recordset: Adding, Updating, and Deleting Records (ODBC)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Enroll tutorial">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.CanUpdate">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.Open">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.CanAppend">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.CanAppend">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.AddNew">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.Update">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.CanUpdate">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.Edit">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.Update">
</OBJECT>
<OBJECT ID="hhobj_12" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.CanUpdate">
</OBJECT>
<OBJECT ID="hhobj_13" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.Delete">
</OBJECT>
<OBJECT ID="hhobj_14" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.IsDeleted">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_recordset.3a_.adding.2c_.updating.2c_.and_deleting_records_.28.odbc.29"></A>Recordset: Adding, Updating, and Deleting Records (ODBC)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_databases.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_odbc_database_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_databases.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_odbc_database_sample_list.htm">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_odbc_driver_list.htm">ODBC Driver List</A></P>

<P>This article applies to the MFC ODBC classes. For DAO recordsets, see the article <A HREF="_core_dao_recordset.htm">DAO Recordset</A>.</P>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>You can now add records in bulk more efficiently. For information, see the article <A HREF="_core_recordset.3a_.adding_records_in_bulk_.28.odbc.29.htm">Recordset: Adding Records in Bulk (ODBC)</A>.</P>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>This article applies to objects derived from <B>CRecordset</B> in which bulk row fetching has not been implemented. If you are using bulk row fetching, see the article <A HREF="_core_recordset.3a_.fetching_records_in_bulk_.28.odbc.29.htm">Recordset: Fetching Records in Bulk (ODBC)</A>.</P>

<P>Updatable snapshots and dynasets allow you to add, edit (update), and delete records. This article explains:

<UL type=disc>
	<LI><A HREF="#_core_determining_whether_your_recordset_is_updatable">How to determine whether your recordset is updatable</A>.<BR><BR></LI>

	<LI><A HREF="#_core_adding_a_record_to_a_recordset">How to add a new record</A>.<BR><BR></LI>

	<LI><A HREF="#_core_editing_a_record_in_a_recordset">How to edit an existing record</A>.<BR><BR></LI>

	<LI><A HREF="#_core_deleting_a_record_from_a_recordset">How to delete a record</A>.</LI>
</UL>

<P>For more information about how updates are carried out and how your updates appear to other users, see the article <A HREF="_core_recordset.3a_.how_recordsets_update_records_.28.odbc.29.htm">Recordset: How Recordsets Update Records (ODBC)</A>. Normally, when you add, edit, or delete a record, the recordset changes the data source immediately. You can instead batch groups of related updates into transactions. If a transaction is in progress, the update doesn’t become final until you commit the transaction. This allows you to take back or roll back the changes. For information about transactions, see the article <A HREF="_core_transaction_.28.odbc.29.htm">Transaction (ODBC)</A>. </P>

<P>The following table summarizes the options available for recordsets with different update characteristics.</P>

<P class=label><B>Recordset Read/Update Options</B></P>

<TABLE border=1 cellpadding=5 cols=5 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=21%><B>Type</B></TD>
<TD class=label width=11%><B>Read</B></TD>
<TD class=label width=20%><B>Edit records</B></TD>
<TD class=label width=23%><B>Delete records</B></TD>
<TD class=label width=25%><B>Add new (append)</B></TD>
</TR>

<TR VALIGN="top">
<TD width=21%>Read-only</TD>
<TD width=11%>Y</TD>
<TD width=20%>N</TD>
<TD width=23%>N</TD>
<TD width=25%>N</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>Append-only</TD>
<TD width=11%>Y</TD>
<TD width=20%>N</TD>
<TD width=23%>N</TD>
<TD width=25%>Y</TD>
</TR>

<TR VALIGN="top">
<TD width=21%>Fully updatable</TD>
<TD width=11%>Y</TD>
<TD width=20%>Y</TD>
<TD width=23%>Y</TD>
<TD width=25%>Y</TD>
</TR>
</TABLE><BR>

<H2><A NAME="_core_determining_whether_your_recordset_is_updatable"></A>Determining Whether Your Recordset is Updatable</H2>

<P>A recordset object is updatable if the data source is updatable, and you opened the recordset as updatable. Its updatability also depends on&nbsp; the SQL statement you use, the capabilities of your ODBC driver, and whether the ODBC Cursor Library is in memory or not. You can’t update a read-only recordset or data source.</P>

<P class=label><B><A NAME="_core_to_determine_whether_your_recordset_is_updatable"></A>To determine whether your recordset is updatable</B>

<UL type=disc>
	<LI>Call the recordset object’s <A HREF="JavaScript:hhobj_3.Click()">CanUpdate</A> member function.
<P class=tl><B>CanUpdate</B> returns a nonzero value if the recordset is updatable.</P></LI>
</UL>

<P>By default, recordsets are fully updatable (you can perform <B>AddNew</B>, <B>Edit</B>, and <B>Delete</B> operations). But you can also use the <A HREF="JavaScript:hhobj_4.Click()">appendOnly</A> option to open updatable recordsets. A recordset opened this way allows only the addition of new records with <B>AddNew</B>. You can’t edit or delete existing records. You can test whether a recordset is open only for appending by calling the <A HREF="JavaScript:hhobj_5.Click()">CanAppend</A> member function. <B>CanAppend</B> returns a nonzero value if the recordset is either fully updatable or open only for appending.</P>

<P>The following code shows how you might use <B>CanUpdate</B> for a recordset object called <CODE>rsStudentSet</CODE>:</P>

<PRE><CODE>if( !rsStudentSet.Open( ) )
    return FALSE;
if( !rsStudentSet.CanUpdate( ) )
{
    AfxMessageBox( "Unable to update the Student recordset." );
    return;
}
</CODE></PRE>

<P class=indent><B><B>Caution&nbsp;&nbsp;&nbsp;</B></B>When you prepare to update a recordset by calling <B>Update</B>, take care that your recordset includes all columns making up the primary key of the table (or all of the columns of any unique index on the table). In some cases, the framework can use only the columns selected in your recordset to identify which record in your table to update. Without all the necessary columns, multiple records may be updated in the table, possibly damaging the referential integrity of the table. In this case, the framework will throw exceptions when you call <B>Update</B>. </P>



<H2><A NAME="_core_adding_a_record_to_a_recordset"></A>Adding a Record to a Recordset</H2>

<P>You can add new records to a recordset if its <A HREF="JavaScript:hhobj_6.Click()">CanAppend</A> member function returns a nonzero value. </P>

<P class=label><B><A NAME="_core_to_add_a_new_record_to_a_recordset"></A>To add a new record to a recordset</B>

<OL>
	<LI>Make sure the recordset is appendable.<BR><BR></LI>

	<LI>Call the recordset object’s <A HREF="JavaScript:hhobj_7.Click()">AddNew</A> member function.
<P class=tl><B>AddNew</B> prepares the recordset to act as an edit buffer. All field data members are set to the special value Null and marked as unchanged so only changed (“dirty”) values will be written to the data source when you call <A HREF="JavaScript:hhobj_8.Click()">Update</A>.</P></LI>

	<LI>Set the values of the new record’s field data members.
<P class=tl>Assign values to the field data members. Those you don’t assign will not be written to the data source.</P></LI>

	<LI>Call the recordset object’s <B>Update</B> member function.
<P class=tl><B>Update</B> completes the addition by writing the new record to the data source. For what happens if you fail to call <B>Update</B>, see the article <A HREF="_core_recordset.3a_.how_recordsets_update_records_.28.odbc.29.htm">Recordset: How Recordsets Update Records (ODBC)</A>. </P></LI>
</OL>

<P>For information about how adding records works and about when added records are visible in your recordset, see the article <A HREF="_core_recordset.3a_.how_addnew.2c_.edit.2c_.and_delete_work_.28.odbc.29.htm">Recordset: How AddNew, Edit, and Delete Work (ODBC)</A>. </P>

<P>The following example shows how to add a new record:</P>

<PRE><CODE>if( !rsStudent.Open( ) )
    return FALSE;
if( !rsStudent.CanAppend( ) )
    return FALSE;                      // no field values were set
rsStudent.AddNew( );
rsStudent.m_strName = strName;
rsStudent.m_strCity = strCity;
rsStudent.m_strStreet = strStreet;
if( !rsStudent.Update( ) )
{
    AfxMessageBox( "Record not added; no field values were set." );
    return FALSE;
}
</CODE></PRE>

<P>For additional information, see <A HREF="_core_recordset.3a_.how_addnew.2c_.edit.2c_.and_delete_work_.28.odbc.29.htm#_core_adding_a_record">Adding a Record</A> in the article Recordset: How AddNew, Edit, and Delete Work. </P>

<P class=indent><B><B>Tip&nbsp;&nbsp;&nbsp;</B></B>To cancel an <B>AddNew</B> or <B>Edit</B> call, simply make another call to <B>AddNew</B> or <B>Edit</B> or call <B>Move</B> with the <B>AFX_MOVE_REFRESH</B> parameter. Data members will be reset to their previous values and you will still be in <B>Edit</B> or <B>Add</B> mode.</P>



<H2><A NAME="_core_editing_a_record_in_a_recordset"></A>Editing a Record in a Recordset</H2>

<P>You can edit existing records if your recordset’s <A HREF="JavaScript:hhobj_9.Click()">CanUpdate</A> member function returns a nonzero value. </P>

<P class=label><B><A NAME="_core_to_edit_an_existing_record_in_a_recordset"></A>To edit an existing record in a recordset</B>

<OL>
	<LI>Make sure the recordset is updatable.<BR><BR></LI>

	<LI>Scroll to the record you want to update.<BR><BR></LI>

	<LI>Call the recordset object’s <A HREF="JavaScript:hhobj_10.Click()">Edit</A> member function. 
<P class=tl><B>Edit</B> prepares the recordset to act as an edit buffer. All field data members are marked so that the recordset can tell later whether they were changed. The new values for changed field data members are written to the data source when you call <A HREF="JavaScript:hhobj_11.Click()">Update</A>. </P></LI>

	<LI>Set the values of the new record’s field data members.
<P class=tl>Assign values to the field data members. Those you don’t assign values will remain unchanged.</P></LI>

	<LI>Call the recordset object’s <B>Update</B> member function.
<P class=tl><B>Update</B> completes the edit by writing the changed record to the data source. For what happens if you fail to call <B>Update</B>, see the article <A HREF="_core_recordset.3a_.how_recordsets_update_records_.28.odbc.29.htm">Recordset: How Recordsets Update Records (ODBC)</A>. </P></LI>
</OL>

<P>After you edit a record, the edited record remains the current record.</P>

<P>The following example shows an <B>Edit</B> operation. It assumes the user has moved to a record he or she wants to edit.</P>

<PRE><CODE>rsStudent.Edit( );
rsStudent.m_strStreet = strNewStreet;
rsStudent.m_strCity = strNewCity;
rsStudent.m_strState = strNewState;
rsStudent.m_strPostalCode = strNewPostalCode;
if( !rsStudent.Update( ) )
{
    AfxMessageBox( "Record not updated; no field values were set." );
    return FALSE;
}
</CODE></PRE>

<P>For more information, see <A HREF="_core_recordset.3a_.how_addnew.2c_.edit.2c_.and_delete_work_.28.odbc.29.htm#_core_editing_an_existing_record">Editing an Existing Record</A> in the article Recordset: How AddNew, Edit, and Delete Work. </P>

<P class=indent><B><B>Tip&nbsp;&nbsp;&nbsp;</B></B>To cancel an <B>AddNew</B> or <B>Edit</B> call, simply make another call to <B>AddNew</B> or <B>Edit</B> or call <B>Move</B> with the <B>AFX_MOVE_REFRESH</B> parameter. Data members will be reset to their previous values and you will still be in <B>Edit</B> or <B>Add</B> mode.</P>



<H2><A NAME="_core_deleting_a_record_from_a_recordset"></A>Deleting a Record from a Recordset</H2>

<P>You can delete records if your recordset’s <A HREF="JavaScript:hhobj_12.Click()">CanUpdate</A> member function returns a nonzero value. </P>

<P class=label><B><A NAME="_core_to_delete_a_record"></A>To delete a record</B>

<OL>
	<LI>Make sure the recordset is updatable.<BR><BR></LI>

	<LI>Scroll to the record you want to update.<BR><BR></LI>

	<LI>Call the recordset object’s <A HREF="JavaScript:hhobj_13.Click()">Delete</A> member function. 
<P class=tl><B>Delete</B> immediately marks the record as deleted, both in the recordset and on the data source.</P>
<P class=tl>Unlike <B>AddNew</B> and <B>Edit</B>, <B>Delete</B> has no corresponding <B>Update</B> call.</P></LI>

	<LI>Scroll to another record.
<P class=atl><B><B>Important&nbsp;&nbsp;&nbsp;</B></B>When moving through the recordset, deleted records may not be skipped. See the <A HREF="JavaScript:hhobj_14.Click()">IsDeleted</A> member function for details.</p></LI>
</OL>

<P>The following example shows a <B>Delete</B> operation. It assumes the user has moved to a record he or she wants to delete. After <B>Delete</B> is called, it’s important to move to a new record.</P>

<PRE><CODE>rsStudent.Delete( );
rsStudent.MoveNext( );
</CODE></PRE>

<P>For more information about the effects of the <B>AddNew</B>, <B>Edit</B>, and <B>Delete</B> member functions, see the article <A HREF="_core_recordset.3a_.how_recordsets_update_records_.28.odbc.29.htm">Recordset: How Recordsets Update Records (ODBC)</A>. </P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_recordset.3a_.locking_records_.28.odbc.29.htm">Recordset: Locking Records (ODBC)</A> </P>
</font>
</BODY>
</HTML>
