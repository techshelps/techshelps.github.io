<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning (level 4) C4516</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c4516"></A><SUP></SUP>Compiler Warning (level 4) C4516</H1>

<P class=dt><B>'class::symbol' : access-declarations are deprecated; member using-declarations provide a better alternative</B></P>

<P>Here deprecated means the ANSI C++ committee has declared <I>access-declarations</I> (changing the access of a member in a derived class without the <A HREF="_langref_using_declaration.htm">using</A> keyword, see the example below) as outdated. You should use <I>using-declarations</I> because <I>access-declarations</I> will be removed by the committee in future versions of C++. </P>

<P>The following code shows class B derived from base class A.</P>

<PRE><CODE>class A {
public:
   x(char);
};

class B : protected A {
public:
   A::x;  // access-declaration, warning C4516
};
</CODE></PRE>

<P>To use <I>using-declarations</I>, rewrite class B with the <B>using</B> keyword:</P>

<PRE><CODE>class B : protected A {
public:
   using A::x; // using-declaration, ok
};
</CODE></PRE>
</font>
</BODY>
</HTML>
