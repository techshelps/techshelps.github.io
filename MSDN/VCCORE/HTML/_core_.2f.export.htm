<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>/EXPORT   (Exports A Function)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_.2f.export"></A>/EXPORT&nbsp;&nbsp;&nbsp;(Exports A Function)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_overviews.3a_.compiling_and_linking.htm">Overview</A>  |&nbsp; <A HREF="_core_set_linker_options.htm">How Do I</A>  |&nbsp; <A HREF="_core_linker_reference.htm">Linker Options</A></P>

<H3>Syntax</H3>

<P>/EXPORT:<I>entryname</I>[=<I>internalname</I>][,@<I>ordinal</I>[,NONAME]][,DATA]</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;You can only use this linker option for a small number of exports. It is recommended that you use the <A HREF="_core_exports.htm">EXPORTS</A> statement in a .DEF file instead.</P>

<P>With this option, you can export a function from your program so that other programs can call the function. You can also export data. Exports are usually defined in a DLL.</P>

<P>The <I>entryname</I> is the name of the function or data item as it is to be used by the calling program. You can optionally specify the <I>internalname</I> as the function known in the defining program; by default, <I>internalname</I> is the same as <I>entryname</I>. The <I>ordinal</I> specifies an index into the exports table in the range 1 through 65,535; if you do not specify <I>ordinal</I>, LINK assigns one. The <B>NONAME </B>keyword exports the function only as an ordinal, without an <I>entryname</I>.</P>

<P>The <B>DATA </B>keyword specifies that the exported item is a data item. The data item in the client program must be declared using <B>extern __declspec(dllimport)</B>.</P>

<P>There are three methods for exporting a definition, listed in recommended order of use:

<OL>
	<LI>The <B>__declspec(dllexport)</B> keyword in the source code<BR><BR></LI>

	<LI>An <B>EXPORTS</B> statement in a .DEF file<BR><BR></LI>

	<LI>An /EXPORT specification in a LINK command</LI>
</OL>

<P>All three methods can be used in the same program. When LINK builds a program that contains exports, it also creates an import library, unless an .EXP file is used in the build.</P>

<P>LINK uses decorated forms of identifiers. The compiler decorates an identifier when it creates the .OBJ file. If <I>entryname</I> or <I>internalname</I> is specified to the linker in its undecorated form (as it appears in the source code), LINK attempts to match the name. If it cannot find a unique match, LINK issues an error message. Use the <A HREF="_core_dumpbin_reference.htm">DUMPBIN</A> tool to get the decorated form of an identifier when you need to specify it to the linker. For more information on decorated names, see <A HREF="_core_decorated_names.htm">Decorated Names</A>. </P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;Do not specify the decorated form of C identifiers that are declared <B>__cdecl</B> or <B>__stdcall</B>.</P>
</font>
</BODY>
</HTML>
