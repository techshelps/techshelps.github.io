<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Comma Operator:  ,</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_comma_operator.3a_2c"></A><SUP></SUP>Comma Operator:&nbsp; ,</H1>

<P class=dt><I>expression </I>:</P>

<P class=indent><I>assignment-expression</I><BR>
<I>expression </I><B>,</B> <I>assignment-expression</I></P>

<P>The comma operator, also called the “sequential-evaluation” operator, evaluates its two operands sequentially from left to right. </P>

<P>The left operand of the comma operator is evaluated as a void expression. The result of the operation has the same value and type as the right operand. Each operand can be of any type. The comma operator does not perform type conversions between its operands, and it does not yield an l-value. There is a sequence point after the first operand, which means all side effects from the evaluation of the left operand are completed before beginning evaluation of the right operand. </P>

<P>The comma operator is typically used to evaluate two or more expressions in contexts where only one expression is allowed.</P>

<P>Commas can be used as separators in some contexts. However, you must be careful not to confuse the use of the comma as a separator with its use as an operator; the two uses are completely different. </P>

<P class=label><B>Example</B></P>

<P>In the following example, the function <CODE>AnyFunction</CODE> has three arguments, with the second argument resolving to a value of 3.</P>

<PRE><CODE>// Example of the comma operator
AnyFunction(a, (b=1, b+2), c);</CODE></PRE>
</font>
</BODY>
</HTML>
