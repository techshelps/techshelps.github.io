<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADO Data-Bound Controls</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcrefadodatacontrolcompatiblecontrols"></A>ADO Data-Bound Controls</H1>

<P>The following data-bound controls display data from the ADO Data Control. See <A HREF="vcrefinsertingcontrolintovisualcprogram.htm">Inserting the Control into a Visual C++ Application</A> and <A HREF="vcrefsettingproperties.htm">Setting Control Properties at Design Time</A> for information on using ActiveX controls.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=25%><B>Control Name and Support Files</B></TD>
<TD width=75%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><B>Microsoft DataCombo</B>
<P>Msdatlst.ocx</P>

<P>DBList98.chm</P>
</TD>
<TD width=75%>The DataCombo control allows retrieved data to appear in a drop-down combo box. 
<P class=label><B>To link the DataCombo control to a data source</B>

<OL>
	<LI>Set the DataSource and the RowSource properties to an ADO Data Control.<BR><BR></LI>

	<LI>Set the DataField and ListField properties to the desired fields.</LI>
</OL>

<P>DataSource and DataField govern the active value of the control. RowSource and ListField allow the display of column data other than the current record. You can also set BoundColumn; this property represents the value of the control when it is made into a variable in an MFC application.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><B>Microsoft DataGrid</B>
<P>Msdatgrd.ocx</P>

<P>DBGrid98.chm</P>
</TD>
<TD width=75%>DataGrid can hold text data, but not linked or embedded objects. The AllowAddNew, AllowDelete, and AllUpdate properties allow the DataGrid to modify data.</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><B>Microsoft DataList</B>
<P>Msdatlst.ocx</P>

<P>DBList98.chm</P>
</TD>
<TD width=75%>The DataList control allows retrieved data to appear in a drop-down list box.
<P class=label><B>To link the DataList control</B>

<OL>
	<LI>Set the DataSource and the RowSource properties to an ADO Data Control. <BR><BR></LI>

	<LI>Set the DataField and ListField properties to the desired fields.</LI>
</OL>

<P>DataSource and DataField govern the active value of the control. RowSource and ListField allow the display of column data other than the current record. You can also set the BoundColumn value. This value represents the value of the control when it is made into a variable in an MFC application.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><B>Microsoft DataRepeater</B>
<P>Msdatrep.ocx</P>

<P>DatRpt98.chm</P>
</TD>
<TD width=75%>The DataRepeater control is a composite control; a control that hosts other controls. It allows you to specify a control to repeat, and when bound, displays the selected control for each record retrieved. The DataRepeater will then allow end users to scroll through the retrieved records.
<P class=label><B>To link the DataRepeater control</B>

<OL>
	<LI>In the <B>All</B> property tab, set the DataSource property to an ADO Data Control.<BR><BR></LI>

	<LI>In the <B>All</B> property tab, select a control to repeat for the Repeated Control Name property.<BR><BR></LI>

	<LI>Once a control is selected, go to the <B>RepeaterBindings</B> tab.<BR><BR></LI>

	<LI>Set a property name to bind. The drop-down box will enumerate bindable properties in the control to be repeated.<BR><BR></LI>

	<LI>Set a data field. The drop-down box will enumerate column names returned from the bound ADO Data Control.<BR><BR></LI>

	<LI>Click on the <B>Add</B> button to add the binding. The RepeaterBindings list box will then populate with the new binding.</LI>
</OL>

<P>The DataRepeater control also ships separately with Visual Studio 6.0.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><B>Microsoft Hierarchical FlexGrid</B>
<P>Mshflxgd.ocx</P>

<P>MsHFlx98.chm</P>
</TD>
<TD width=75%>The Hierarchical FlexGrid control displays tabular data. Unlike the DataGrid, it is strictly read-only. However, it can sort, merge, and format tables containing strings and pictures. Additionally, the Hierarchical FlexGrid differs from its predecessor, the FlexGrid, in that it can display both summary data and detail data.
<P>A hierarchical rowset is required to display summary-detail information in the Hierarchical FlexGrid control. To create a hierarchical rowset for this control, the Microsoft Data Shape Provider is required in combination with the ADO Data Control.</P>

<P class=label><B>To use the Hierarchical FlexGrid</B>

<OL>
	<LI>Use the ADO Data Control to set the ConnectionString property to specify the Microsoft Data Shape Provider. For example:
<PRE><CODE>Provider=MSDataShape.1;Data Source=myPubsDataSource;User ID=sa</CODE></PRE>
</LI>
</OL>

<PRE></PRE>

<OL start=2>
	<LI>Set the RecordSource property to use Microsoft Data Shape Provider syntax to create a hierarchical rowset. For example:
<PRE><CODE>SHAPE {select * from authors} APPEND ({select * from titleauthor} AS chapter RELATE au_id TO au_id)</CODE></PRE>
</LI>
</OL>

<PRE></PRE>

<OL start=3>
	<LI>Set the DataSource property of the Hierarchical FlexGrid control to the ADO Data Control configured above.</LI>
</OL>

<P>For additional information on data shaping see the topic Hierarchical Cursors and Data Shaping in the <I>ADO Programmer's Reference</I>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><B>Microsoft Chart</B>
<P>Mschart.ocx</P>

<P>MSchrt98.chm</P>
</TD>
<TD width=75%>The Chart control displays an array of data as a graph. It can display both two-dimensional and three-dimensional graphs. When data-bound, it treats the retrieved rowset as an array of data.
<P class=label><B>To link the Chart control</B>

<OL>
	<LI>Set the DataSource property to an ADO Data Control.</LI>
</OL>

<P>It is recommended that the ADO Data Control's database query retrieve a rowset of aggregate information such as count(*), sum(*), min(*), and max(*).</P>

<P>Previous versions of the MS Chart control were RDO based.</P>

<P><B>Note&nbsp;&nbsp;&nbsp;</B>The Chart control ships with Visual Studio 6.0 (not Visual C++), so you must have a Visual Studio 6.0 license to redistribute it.</P>
</TD>
</TR>
</TABLE><BR>

<P>Back to <A HREF="vcrefdatabindingcontrols.htm">ActiveX Controls that Support Databinding</A>.</P>
</font>
</BODY>
</HTML>
