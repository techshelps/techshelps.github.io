<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error C2593</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c2593"></A><SUP></SUP>Compiler Error C2593</H1>

<P class=dt><B>'operator identifier' is ambiguous</B></P>

<P>More than one possible operator was defined for the specified overloaded operator.</P>

<P>An explicit cast of one or more of the actual parameters can resolve the ambiguity.</P>

<P>The following is an example of this error:</P>

<PRE><CODE>struct A {};
struct B : A {};
struct X {};
struct D : B, X {};
void operator+( X, X );
void operator+( A, B );
D d;
void main()
{
   d +  d;         // error, D has an A, B, and X 
   (X)d + (X)d;    // OK, uses operator+( X, X )
}
</CODE></PRE>

<P>This error can also be caused by serializing a floating-point variable using a <B>CArchive</B> object. The error identifies the operator <B>&lt;&lt;</B> as being ambiguous. The only primitive C++ types that <B>CArchive</B> can serialize are the fixed-size types <B>BYTE</B>, <B>WORD</B>, <B>DWORD</B>, and <B>LONG</B>. All integer types can be cast to one of these types for serialization. Floating-point types must be handled differently. They can be archived using <B>CArchive</B>'s member function <B>CArchive::Write()</B>. The following example shows how to archive a floating-point variable 'f' to an archive 'ar':</P>

<PRE><CODE>ar.Write(&amp;f, sizeof( float ));
</CODE></PRE>
</font>
</BODY>
</HTML>
