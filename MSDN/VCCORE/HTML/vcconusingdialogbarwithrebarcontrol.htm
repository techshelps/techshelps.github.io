<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Dialog Bar with a Rebar Control</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcconusingdialogbarwithrebarcontrol"></A>Using a Dialog Bar with a Rebar Control</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_using_crebarctrl.htm">Overview</A>  |&nbsp; <A HREF="_core_common_control_sample_list.htm">Sample</A></P>

<P>As mentioned in <A HREF="_core_rebar_controls_and_bands.htm">Rebar Controls and Bands</A>, each band can contain only one child window (or control). This might be a limitation if you want to have more than one child window per band. A convenient workaround is to create a dialog bar resource with multiple controls and then add a rebar band (containing the dialog bar) to the rebar control. </P>

<P>Normally, if you wanted the dialog bar band to appear transparent, you would set the <B>WM_EX_TRANSPARENT</B> extended style for the dialog bar object. However, because <B>WM_EX_TRANSPARENT</B> has some issues with properly painting the background of a dialog bar, you will need to do a little extra work to achieve the desired effect.</P>

<P>The following procedure details the steps necessary to achieve transparency without using the <B>WM_EX_TRANSPARENT</B> extended style.</P>

<P class=label><B>To implement a transparent dialog bar in a rebar band</B>

<OL>
	<LI>Using ClassWizard, add a new class (for example, <CODE>CMyDlgBar</CODE>) that implements your dialog bar object.<BR><BR></LI>

	<LI>Add a handler for the <B>WM_ERASEBKGND</B> message.<BR><BR></LI>

	<LI>In the new handler, modify the existing code to match the following example:
<PRE><CODE>BOOL CMyDlgBar::OnEraseBkgnd( CDC* pDC )
{
    CWnd* pParent = GetParent();
    ASSERT_VALID(pParent);
    CPoint pt(0, 0);
    MapWindowPoints(pParent, &amp;pt, 1);
    pt = pDC-&gt;OffsetWindowOrg(pt.x, pt.y);
    LRESULT lResult = pParent-&gt;SendMessage(WM_ERASEBKGND,
        (WPARAM)pDC-&gt;m_hDC, 0L);
    pDC-&gt;SetWindowOrg(pt.x, pt.y);
    return lResult;
}
</CODE></PRE>
</LI>

	<LI>Add a handler for the <B>WM_MOVE</B> message.<BR><BR></LI>

	<LI>In the new handler, modify the existing code to match the following example:
<PRE><CODE>BOOL CMyDlgBar::OnMove( int cx, int cy )
{
    Invalidate();
}
</CODE></PRE>
</LI>
</OL>

<P>The new handlers simulate the transparency of the dialog bar by forwarding the <B>WM_ERASEBKGND</B> message to the parent window and forcing a repaint every time the dialog bar object is moved.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_control_topics.htm#_core_windows_common_controls_and_mfc_classes">Windows Common Controls and MFC Classes</A></P>
</font>
</BODY>
</HTML>
