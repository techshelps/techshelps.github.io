<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetDialog</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_begin_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_appwiz_CUSTOMWZ">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_c_function_getdialog"></A>GetDialog</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_appwizard_programming_reference.htm">Overviews</A>  |&nbsp; <A HREF="_core_creating_custom_appwizards.htm">How Do I</A> |&nbsp; <A HREF="_core_details.3a_.beginning_your_program.htm">Details</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Creating a Custom AppWizard is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_3.Click()">Visual C++ Editions</A>.</P>

<P><B>CAppWizStepDlg* GetDialog(</B> <B>AppWizDlgID</B> <I>nID </I><B>);</B></P>

<P class=label><B>Return Value</B></P>

<P>A pointer to the standard MFC AppWizard step specified in the <I>nID</I> argument.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>nID</I></P>

<P class=indent>The enumerated value of a standard AppWizard step.&nbsp; See below for a list of the possible values.</P>

<P class=label><B>Remarks</B></P>

<P>CUSTMWZ.AWX generates calls to <B>GetDialog</B> in the <A HREF="_core_ccustomappwiz.3a3a.initcustomappwiz.htm">CCustomAppWiz::InitCustomAppWiz</A> function of every custom AppWizard that uses one of the two standard sequences of MFC AppWizard steps; one call for each of the standard MFC AppWizard steps that a custom AppWizard needs. The returned pointers are automatically stored by the custom AppWizard and are returned in response to an MFCAPWZ.DLL call to <A HREF="_core_ccustomappwiz.3a3a.next.htm">CCustomAppWiz::Next</A> or <A HREF="_core_ccustomappwiz.3a3a.back.htm">CCustomAppWiz::Back</A>.</P>

<P>The actual calls to <B>GetDialog</B> and storage of the returned pointers occurs in the constructor of a CUSTMWZ.AWX-generated class named <B>CDialogChooser</B>. The pointers are stored, sequentially, in an order determined by the original order of the standard MFC AppWizard steps. Pointers to any custom steps you specify are automatically added to the end of the sequence of pointers returned by the calls to <B>GetDialog</B>.</P>

<P>You will probably not add your own call to <B>GetDialog</B> or modify the existing calls to <B>GetDialog</B> unless you want to change the default order in which your custom AppWizard presents steps to its users. </P>

<P>The standard MFC AppWizard offers two different sequences of steps to the AppWizard user: AppWizard Executable and AppWizard Dynamic Link Library. Each step in each sequence is represented by an enumerated value, as shown in the following table.</P>

<P class=label><B>Enumerated Values of Standard AppWizard Steps</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=46%><B>Value</B></TD>
<TD class=label width=54%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=46%>APWZDLG_APPTYPE</TD>
<TD width=54%>Step 1, MFC AppWizard (exe)
<P>Allows the user to choose a type of application (<B>single document</B> (SDI), <B>multiple documents</B> (MDI), or <B>dialog based</B>) and the languages into which their application’s resource strings will be translated.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>APWZDLG_DATABASE</TD>
<TD width=54%>Step 2, MFC AppWizard (exe)
<P>Allows the user to specify the type of database support for SDI and MDI applications. Possible choices are <B>None</B>, <B>Header files only</B>, <B>Database view without file support</B>, or <B>Database view with file support</B>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>APWZDLG_DLGAPPOPTIONS</TD>
<TD width=54%>Step 2, MFC AppWizard (exe)
<P>Allows the user to choose standard application features for dialog-based applications (<B>About box</B>, <B>Context-sensitive Help</B>, and <B>3D controls</B>). Also allows the user to choose <B>Automation</B>, <B>ActiveX Controls</B> or <B>Windows Sockets</B> support and to name the application’s dialog box.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>APWZDLG_OLE</TD>
<TD width=54%>Step 3, MFC AppWizard (exe)
<P>Allows the user to specify the level of compound document support for SDI and MDI applications (<B>None</B>, <B>Container</B>, <B>Mini-server</B>, <B>Full-server</B>, <B>Both container and server, Active document server</B>). Also allows the user to choose support for compound files and automation and ActiveX controls.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>APWZDLG_DOCAPPOPTIONS</TD>
<TD width=54%>Step 4, MFC AppWizard (exe)
<P>Allows the user to choose standard application features for MDI and SDI applications (<B>Docking toolbar</B>, <B>Initial status bar</B>, <B>Printing and print preview</B>, <B>Context-sensitive Help</B>, and <B>3D controls</B>). Allows the user to choose <B>MAPI (Messaging API)</B> and <B>Windows Sockets</B> and to specify the number of files remembered in their application’s most recently used list.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>APWZDLG_PROJOPTIONS</TD>
<TD width=54%>Step 5, MFC AppWizard (exe)<BR>
Step 3, (dialog-based programs)
<P>Allows the user to choose whether AppWizard generates commented or uncommented MFC code in their project and whether they want their project linked with the static MFC library or the shared MFC DLL. <B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Static linking to MFC is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_4.Click()">Visual C++ Editions</A>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>APWZDLG_CLASSES</TD>
<TD width=54%>Step 6, MFC AppWizard (exe)<BR>
Step 4, (dialog-based programs)
<P>Allows the user to modify the default class and file names that AppWizard will generate.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=46%>APWZDLG_DLLPROJOPTIONS</TD>
<TD width=54%>Step 1, MFC AppWizard (dll)
<P>Allows the user to choose whether AppWizard generates commented or uncommented MFC code in their project and whether they want their project linked with the static MFC library or the shared MFC DLL. Also allows the user to choose Automation and Windows Sockets support.</P>
</TD>
</TR>
</TABLE><BR>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_c_functions_exported_by_mfcapwz..dll.htm">C Functions Exported by MFCAPWZ.DLL</A>, <A HREF="_core_ccustomappwiz.3a3a.initcustomappwiz.htm">CCustomAppWiz::InitCustomAppWiz</A>, <A HREF="_core_ccustomappwiz.3a3a.next.htm">CCustomAppWiz::Next</A>, <A HREF="_core_ccustomappwiz.3a3a.back.htm">CCustomAppWiz::Back</A></P>
</font>
</BODY>
</HTML>
