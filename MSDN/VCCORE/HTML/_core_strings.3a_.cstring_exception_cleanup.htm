<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Strings: CString Exception Cleanup</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CString">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_strings.3a_.cstring_exception_cleanup"></A>Strings: CString Exception Cleanup</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_strings.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_string_handling_tasks.htm">How Do I</A></P>

<P>In previous versions of MFC, it was important that you clean up <A HREF="JavaScript:hhobj_2.Click()">CString</A> objects after use. With MFC version 3.0 and later, explicit cleanup is no longer necessary.</P>

<P>Under the C++ exception handling mechanism that MFC now uses, you don’t have to worry about cleanup after an exception. For a description of how C++ “unwinds” the stack after an exception is caught, see <A HREF="_core_exception_handling_topics_.28.c.2b2b29.htm">Exception Handling Topics (C++)</A>. Even if you use the MFC <B>TRY</B>/<B>CATCH</B> macros instead of the C++ keywords <B>try</B> and <B>catch</B>, MFC uses the C++ exception mechanism underneath, so you still don’t need to clean up explicitly.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_exception_handling_topics_.28.mfc.29.htm">Exception Handling Topics (MFC)</A> </P>
</font>
</BODY>
</HTML>
