<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ftell</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_ftell"></A><SUP></SUP>ftell</H1>

<P>Gets the current position of a file pointer.</P>

<P><B>long</B> <B>ftell(</B> <B>FILE</B> <B>*</B><I>stream</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Function</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=27%><B>Optional Headers</B></TD>
<TD class=label width=31%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>ftell</B></TD>
<TD width=26%>&lt;stdio.h&gt;</TD>
<TD width=27%>&lt;errno.h&gt;</TD>
<TD width=31%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>ftell</B> returns the current file position. The value returned by <B>ftell</B> may not reflect the physical byte offset for streams opened in text mode, because text mode causes carriage return–linefeed translation. Use <B>ftell</B> with <B>fseek</B> to return to file locations correctly. On error, <B>ftell</B> returns –1L and <B>errno</B> is set to one of two constants, defined in ERRNO.H. The <B>EBADF</B> constant means the <I>stream</I> argument is not a valid file-handle value or does not refer to an open file. <B>EINVAL</B> means an invalid <I>stream</I> argument was passed to the function. On devices incapable of seeking (such as terminals and printers), or when <I>stream</I> does not refer to an open file, the return value is undefined.</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>stream</I></P>

<P class=indent>Target <B>FILE</B> structure</P>

<P class=label><B>Remarks</B></P>

<P>The <B>ftell</B> function gets the current position of the file pointer (if any) associated with <I>stream.</I> The position is expressed as an offset relative to the beginning of the stream.</P>

<P>Note that when a file is opened for appending data, the current file position is determined by the last I/O operation, not by where the next write would occur. For example, if a file is opened for an append and the last operation was a read, the file position is the point where the next read operation would start, not where the next write would start. (When a file is opened for appending, the file position is moved to end of file before any write operation.) If no I/O operation has yet occurred on a file opened for appending, the file position is the beginning of the file.</P>

<P>In text mode, CTRL+Z is interpreted as an end-of-file character on input. In files opened for reading/writing, <B>fopen</B> and all related routines check for a CTRL+Z at the end of the file and remove it if possible. This is done because using <B>ftell</B> and <B>fseek</B> to move within a file that ends with a CTRL+Z may cause <B>ftell</B> to behave improperly near the end of the file. </P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* FTELL.C: This program opens a file named FTELL.C
 * for reading and tries to read 100 characters. It
 * then uses ftell to determine the position of the
 * file pointer and displays this position.
 */

#include &lt;stdio.h&gt;

FILE *stream;

void main( void )
{
   long position;
   char list[100];
   if( (stream = fopen( "ftell.c", "rb" )) != NULL )
   {
      /* Move the pointer by reading data: */
      fread( list, sizeof( char ), 100, stream );
      /* Get position after read: */
      position = ftell( stream );
      printf( "Position after trying to read 100 bytes: %ld\n",
              position );
      fclose( stream );
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Position after trying to read 100 bytes: 100

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_fgetpos.htm">fgetpos</A>, <A HREF="_crt_fseek.htm">fseek</A>, <A HREF="_crt__lseek.2c_._lseeki64.htm">_lseek</A>, <A HREF="_crt__tell.2c_._telli64.htm">_tell</A></P>
</font>
</BODY>
</HTML>
