<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_stricmp, _wcsicmp, _mbsicmp</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__stricmp.2c_._wcsicmp.2c_._mbsicmp"></A>_stricmp, _wcsicmp, _mbsicmp</H1>

<P>Perform a lowercase comparison of strings.</P>

<P><B>int</B> <B>_stricmp(</B> <B>const</B> <B>char</B> <B>*</B><I>string1</I><B>,</B> <B>const</B> <B>char</B> <B>*</B><I>string2</I> <B>);</B></P>

<P><B>int</B> <B>_wcsicmp(</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>string1</I><B>,</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>string2</I> <B>);</B></P>

<P><B>int</B> <B>_mbsicmp(</B> <B>const</B> <B>unsigned</B> <B>char</B> <B>*</B><I>string1</I><B>,</B> <B>const</B> <B>unsigned</B> <B>char_t</B> <B>*</B><I>string2</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=34%><B>Required Header</B></TD>
<TD class=label width=49%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_stricmp</B></TD>
<TD width=34%>&lt;string.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_wcsicmp</B></TD>
<TD width=34%>&lt;string.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_mbsicmp</B></TD>
<TD width=34%>&lt;mbstring.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>The return value indicates the relation of <I>string1</I> to <I>string2</I> as follows.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=25%><B>Return Value</B></TD>
<TD class=label width=75%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%>&lt; 0</TD>
<TD width=75%><I>string1</I> less than <I>string2</I></TD>
</TR>

<TR VALIGN="top">
<TD width=25%>0</TD>
<TD width=75%><I>string1</I> identical to <I>string2</I></TD>
</TR>

<TR VALIGN="top">
<TD width=25%>&gt; 0</TD>
<TD width=75%><I>string1</I> greater than <I>string2</I></TD>
</TR>
</TABLE><BR>

<P>On an error, <B>_mbsicmp</B> returns <B>_NLSCMPERROR</B>, which is defined in STRING.H and MBSTRING.H.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>string1</I>, <I>string2</I></P>

<P class=indent>Null-terminated strings to compare</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_stricmp</B> function lexicographically compares lowercase versions of <I>string1</I> and <I>string2</I> and returns a value indicating their relationship. <B>_stricmp</B> differs from <B>_stricoll</B> in that the <B>_stricmp</B> comparison is not affected by locale, whereas the <B>_stricoll</B> comparison is according to the <B>LC_COLLATE</B> category of the current locale. For more information on the <B>LC_COLLATE</B> category, see <A HREF="_crt_setlocale.2c_._wsetlocale.htm">setlocale</A>. </P>

<P>The <B>_strcmpi</B> function is equivalent to <B>_stricmp</B> and is provided for backward compatibility only. </P>

<P><B>_wcsicmp</B> and <B>_mbsicmp</B> are wide-character and multibyte-character versions of <B>_stricmp</B>. The arguments and return value of <B>_wcsicmp</B> are wide-character strings; those of <B>_mbsicmp</B> are multibyte-character strings. <B>_mbsicmp</B> recognizes multibyte-character sequences according to the current multibyte code page and returns <B>_NLSCMPERROR</B> on an error. (For more information, see <A HREF="_crt_code_pages.htm">Code Pages</A>.) These three functions behave identically otherwise.</P>

<P><B>_wcsicmp</B> and <B>wcscmp</B> behave identically except that <B>wcscmp</B> does not convert its arguments to lowercase before comparing them. <B>_mbsicmp</B> and <B>_mbscmp</B> behave identically except that _<B>mbscmp</B> does not convert its arguments to lowercase before comparing them.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tcsicmp</TD>
<TD width=29%>_stricmp</TD>
<TD width=26%>_mbsicmp</TD>
<TD width=28%>_wcsicmp</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* STRCMP.C */

#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

char string1[] = "The quick brown dog jumps over the lazy fox";
char string2[] = "The QUICK brown dog jumps over the lazy fox";

void main( void )
{
   char tmp[20];
   int result;
   /* Case sensitive */
   printf( "Compare strings:\n\t%s\n\t%s\n\n", string1, string2 );
   result = strcmp( string1, string2 );
   if( result &gt; 0 )
      strcpy( tmp, "greater than" );
   else if( result &lt; 0 )
      strcpy( tmp, "less than" );
   else
      strcpy( tmp, "equal to" );
   printf( "\tstrcmp:   String 1 is %s string 2\n", tmp );
   /* Case insensitive (could use equivalent _stricmp) */
   result = _stricmp( string1, string2 );
   if( result &gt; 0 )
      strcpy( tmp, "greater than" );
   else if( result &lt; 0 )
      strcpy( tmp, "less than" );
   else
      strcpy( tmp, "equal to" );
   printf( "\t_stricmp:  String 1 is %s string 2\n", tmp );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Compare strings:
   The quick brown dog jumps over the lazy fox
   The QUICK brown dog jumps over the lazy fox

   strcmp:   String 1 is greater than string 2
   _stricmp:  String 1 is equal to string 2

</CODE></PRE>

<P><A HREF="_crt_string_manipulation.htm">String Manipulation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_memcmp.htm">memcmp</A>, <A HREF="_crt__memicmp.htm">_memicmp</A>, <A HREF="_crt_strcmp.2c_.wcscmp.2c_._mbscmp.htm">strcmp</A>, <A HREF="_crt_strcoll_functions.htm">strcoll Functions</A>, <A HREF="_crt_strncmp.2c_.wcsncmp.2c_._mbsncmp.htm">strncmp</A>, <A HREF="_crt__strnicmp.2c_._wcsnicmp.2c_._mbsnicmp.htm">_strnicmp</A>, <A HREF="_crt_strrchr.2c_.wcsrchr.2c_._mbsrchr.htm">strrchr</A>, <A HREF="_crt__strset.2c_._wcsset.2c_._mbsset.htm">_strset</A>, <A HREF="_crt_strspn.2c_.wcsspn.2c_._mbsspn.htm">strspn</A></P>
</font>
</BODY>
</HTML>
