<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Support for Multibyte Character Sets (MBCS)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_support_for_multibyte_character_sets_.28.mbcs.29"></A><SUP></SUP>Support for Multibyte Character Sets (MBCS)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_unicode_programming_tasks.htm">Unicode Tasks</A>  |&nbsp; <A HREF="_core_multibyte_character_set_.28.mbcs.29_.tasks.htm">Multibyte Character Set (MBCS) Tasks</A></P>

<P>For platforms used in markets whose languages use large character sets, the best alternative to Unicode is MBCS. MFC supports MBCS by using “internationalizable” data types and C run-time functions. You should do the same in your code.</P>

<P>Under MBCS, characters are encoded in either one or two bytes. In two-byte characters, the first, or “lead-byte,” signals that both it and the following byte are to be interpreted as one character. The first byte comes from a range of codes reserved for use as lead bytes. Which ranges of bytes can be lead bytes depends on the code page in use. For example, Japanese code page 932 uses the range 0x81 through 0x9F as lead bytes, but Korean code page 949 uses a different range.</P>

<P>Consider all of the following in your MBCS programming:</P>

<P class=dt>MBCS characters in the environment</P>

<P class=indent>MBCS characters can appear in strings such as file and directory names. </P>

<P class=dt>Editing operations</P>

<P class=indent>Editing operations in MBCS applications should operate on characters, not bytes. The caret should not split a character, the RIGHT ARROW key should move right one character, and so on. <B>Delete </B>should delete a character; <B>Undo</B> should reinsert it.</P>

<P class=dt>String handling</P>

<P class=indent>In an application that uses MBCS, string handling poses special problems. Characters of both widths are mixed in a single string; therefore you must remember to check for lead bytes.</P>

<P class=dt>Run-time library support</P>

<P class=indent>The C run-time library and MFC support single-byte, MBCS, and Unicode programming. Single-byte strings are processed with the <I>str</I> family of run-time functions, MBCS strings are processed with corresponding <I>_mbs</I> functions, and Unicode strings are processed with corresponding <I>wcs</I> functions. MFC class member function implementations use portable run-time functions that map, under the right circumstances, to the normal <I>str</I> family of functions, the MBCS functions, or the Unicode functions, as described in “MBCS/Unicode portability.”</P>

<P class=dt>MBCS/Unicode portability</P>

<P class=indent>Using the header file TCHAR.H, you can build single-byte, MBCS, and Unicode applications from the same sources. TCHAR.H defines macros prefixed with <I>_tcs</I> , which map to <I>str</I>, <I>_mbs</I>, or <I>wcs</I> functions, as appropriate. To build MBCS, define the symbol <B>_MBCS</B>. To build Unicode, define the symbol <B>_UNICODE</B>. By default, <B>_MBCS</B> is defined for MFC applications. For more information, see <A HREF="_core_generic.2d.text_mappings_in_tchar..h.htm">Generic-Text Mappings in TCHAR.H</A>. </P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;Behavior is undefined if you define both <B>_UNICODE</B> and <B>_MBCS</B>.</P>

<P>The MBCTYPE.H and MBSTRING.H header files define MBCS-specific functions and macros, which you may need in some cases. For example, <B>_ismbblead</B> tells you whether a specific byte in a string is a lead byte.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_mbcs_support_in_visual_c.2b2b.htm">MBCS Support in Visual C++</A></P>
</font>
</BODY>
</HTML>
