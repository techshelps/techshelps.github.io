<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Class Templates</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_working_with_class_templates"></A><SUP></SUP>Working with Class Templates</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_templates_in_c.2b2b3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_template_tasks.htm">How Do I</A></P>

<P>You can use class templates to create a family of classes that operate on a type. </P>

<PRE><CODE>template &lt;class T, int i&gt; class TempClass 
{
public:
    TempClass( void );
    ~TempClass( void );
    int MemberSet( T a, int b );
private:
    T Tarray[i];
    int arraysize;
};
</CODE></PRE>

<P>In this example, the templated class uses two parameters, a type <CODE>T</CODE> and an int <CODE>i</CODE>. The <CODE>T</CODE> parameter can be passed any type, including structures and classes. The <CODE>i</CODE> parameter has to be passed an integer constant. Because <CODE>i</CODE> is a constant defined at compile time, you can define a member array of size <CODE>i</CODE> using a standard array declaration.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_members_of_class_templates.htm">Members of template classes</A><BR><BR></LI>

	<LI><A HREF="_core_templates_for_constructors_and_destructors.htm">Templates for constructors and destructors</A><BR><BR></LI>

	<LI><A HREF="_core_class_template_instantiation.htm">Class template instantiation</A><BR><BR></LI>

	<LI><A HREF="_core_angle_bracket_placement.htm">Angle bracket placement</A></LI>
</UL>
</font>
</BODY>
</HTML>
