<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>bool</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_bool"></A>bool</H1>

<P><B>C++ Specific </B></P>

<P><B>bool</B> <I>declarators</I><B>;</B></P>

<P>This keyword is an integral type. A variable of this type can have values <A HREF="_langref_true.htm">true</A> and <A HREF="_langref_false.htm">false</A>. All conditional expressions now return a value of type <B>bool</B>. For example, <CODE>i!=0</CODE> now returns <B>true</B> or <B>false</B> depending on the value of <CODE>i</CODE>.</P>

<P>The values <B>true</B> and <B>false</B> have the following relationship:</P>

<PRE><CODE>!false == true
!true == false</CODE></PRE>

<P>In the following statement: </P>

<PRE><CODE>if (expres1) statement1; </CODE></PRE>

<P>If <CODE>expres1</CODE> is <B>true</B>, <CODE>statement1</CODE> is always executed; if <CODE>expres1</CODE> is <B>false</B>, <CODE>statement1</CODE> is never executed.</P>

<P>When a postfix or prefix <B>++</B> operator is applied to a variable of type <B>bool</B>, the variable is set to <B>true</B>. The postfix or prefix <B>--</B> operator cannot be applied to a variable of this type.</P>

<P>The <B>bool</B> type participates in integral promotions. An r-value of type <B>bool</B> can be converted to an r-value of type <B>int</B>, with <B>false</B> becoming zero and <B>true</B> becoming one.</P>

<P><B>END C++ Specific</B></P>

<P><B>Microsoft Specific </B></P>

<P>In Visual C++4.2, the Standard C++ header files contained a <B>typedef</B> that equated <B>bool </B>with <B>int</B>. In Visual C++ 5.0 and later, <B>bool</B> is implemented as a built-in type with a size of 1 <B>byte</B>. That means that for Visual C++ 4.2, a call of <B>sizeof(bool)</B> yields 4, while in Visual C++ 5.0 and later, the same call yields 1. This can cause memory corruption problems if you have defined structure members of type <B>bool</B> in Visual C++ 4.2 and are mixing object files (OBJ) and/or DLLs built with the 4.2 and 5.0 or later compilers. </P>

<P><B>END Microsoft Specific</B></P>
</font>
</BODY>
</HTML>
