<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_strnicmp, _wcsnicmp, _mbsnicmp</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__strnicmp.2c_._wcsnicmp.2c_._mbsnicmp"></A><SUP></SUP>_strnicmp, _wcsnicmp, _mbsnicmp</H1>

<P>Compare characters of two strings without regard to case.</P>

<P><B>int</B> <B>_strnicmp(</B> <B>const</B> <B>char</B> <B>*</B><I>string1</I><B>,</B> <B>const</B> <B>char</B> <B>*</B><I>string2</I><B>,</B> <B>size_t</B> <I>count</I> <B>);</B></P>

<P><B>int</B> <B>_wcsnicmp(</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>string1</I><B>,</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>string2</I><B>,</B> <B>size_t</B> <I>count</I> <B>);</B></P>

<P><B>int</B> <B>_mbsnicmp(</B> <B>const</B> <B>unsigned</B> <B>char</B> <B>*</B><I>string1</I><B>,</B> <B>const</B> <B>unsigned</B> <B>char</B> <B>*</B><I>string2</I><B>,</B> <B>size_t</B> <I>count</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=20%><B>Routine</B></TD>
<TD class=label width=34%><B>Required Header</B></TD>
<TD class=label width=46%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=20%><B>_strnicmp</B></TD>
<TD width=34%>&lt;string.h&gt;</TD>
<TD width=46%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=20%><B>_wcsnicmp</B></TD>
<TD width=34%>&lt;string.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=46%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=20%><B>_mbsnicmp</B></TD>
<TD width=34%>&lt;mbstring.h&gt;</TD>
<TD width=46%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>The return value indicates the relationship between the substrings as follows.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=22%><B>Return Value</B></TD>
<TD class=label width=78%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%>&lt; 0</TD>
<TD width=78%><I>string1</I> substring less than <I>string2</I> substring</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>0</TD>
<TD width=78%><I>string1</I> substring identical to <I>string2</I> substring</TD>
</TR>

<TR VALIGN="top">
<TD width=22%>&gt; 0</TD>
<TD width=78%><I>string1</I> substring greater than <I>string2</I> substring</TD>
</TR>
</TABLE><BR>

<P>On an error, <B>_mbsnicmp</B> returns <B>_NLSCMPERROR</B>, which is defined in STRING.H and MBSTRING.H.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>string1</I>, <I>string2</I></P>

<P class=indent>Null-terminated strings to compare</P>

<P class=dt><I>count</I></P>

<P class=indent>Number of characters to compare</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_strnicmp</B> function lexicographically compares, at most, the first <I>count</I> characters of <I>string1</I> and <I>string2.</I> The comparison is performed without regard to case; <B>_strnicmp</B> is a case-insensitive version of <B>strncmp</B>. The comparison ends if a terminating null character is reached in either string before <I>count</I> characters are compared. If the strings are equal when a terminating null character is reached in either string before <I>count</I> characters are compared, the shorter string is lesser.</P>

<P>Two strings containing characters located between 'Z' and 'a' in the ASCII table ('[', '<B>\</B>', ']', '<B>^</B>', '<B>_</B>', and '<B>`</B>') compare differently, depending on their case. For example, the two strings <CODE>"ABCDE"</CODE> and <CODE>"ABCD^"</CODE> compare one way if the comparison is lowercase (<CODE>"abcde"</CODE> &gt; <CODE>"abcd^"</CODE>) and the other way (<CODE>"ABCDE"</CODE> &lt; <CODE>"ABCD^"</CODE>) if it is uppercase.</P>

<P><B>_wcsnicmp</B> and <B>_mbsnicmp</B> are wide-character and multibyte-character versions of <B>_strnicmp</B>. The arguments and return value of <B>_wcsnicmp</B> are wide-character strings; those of <B>_mbsnicmp</B> are multibyte-character strings. <B>_mbsnicmp</B> recognizes multibyte-character sequences according to the current multibyte code page and returns <B>_NLSCMPERROR</B> on an error. For more information, see <A HREF="_crt_code_pages.htm">Code Pages</A>. These three functions behave identically otherwise. These functions are not affected by the current locale setting.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tcsncicmp</TD>
<TD width=29%>_strnicmp</TD>
<TD width=26%>_mbsnbicmp </TD>
<TD width=28%>_wcsnicmp</TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tcsnicmp</TD>
<TD width=29%>_strnicmp</TD>
<TD width=26%><A HREF="_crt__mbsnbicmp.htm">_mbsnbicmp</A></TD>
<TD width=28%>_wcsnicmp</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* STRNCMP.C */
#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

char string1[] = "The quick brown dog jumps over the lazy fox";
char string2[] = "The QUICK brown fox jumps over the lazy dog";

void main( void )
{
   char tmp[20];
   int result;
   printf( "Compare strings:\n\t\t%s\n\t\t%s\n\n", string1, string2 );
   printf( "Function:\tstrncmp (first 10 characters only)\n" );
   result = strncmp( string1, string2 , 10 );
   if( result &gt; 0 )
      strcpy( tmp, "greater than" );
   else if( result &lt; 0 )
      strcpy( tmp, "less than" );
   else
      strcpy( tmp, "equal to" );
   printf( "Result:\t\tString 1 is %s string 2\n\n", tmp );
   printf( "Function:\tstrnicmp _strnicmp (first 10 characters only)\n" );
   result = _strnicmp( string1, string2, 10 );
   if( result &gt; 0 )
      strcpy( tmp, "greater than" );
   else if( result &lt; 0 )
      strcpy( tmp, "less than" );
   else
      strcpy( tmp, "equal to" );
   printf( "Result:\t\tString 1 is %s string 2\n\n", tmp );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Compare strings:
      The quick brown dog jumps over the lazy fox
      The QUICK brown fox jumps over the lazy dog

Function:   strncmp (first 10 characters only)
Result:      String 1 is greater than string 2

Function:   _strnicmp (first 10 characters only)
Result:      String 1 is equal to string 2

</CODE></PRE>

<P><A HREF="_crt_string_manipulation.htm">String Manipulation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_strcat.2c_.wcscat.2c_._mbscat.htm">strcat</A>, <A HREF="_crt_strcmp.2c_.wcscmp.2c_._mbscmp.htm">strcmp</A>, <A HREF="_crt_strcpy.2c_.wcscpy.2c_._mbscpy.htm">strcpy</A>, <A HREF="_crt_strncat.2c_.wcsncat.2c_._mbsncat.htm">strncat</A>, <A HREF="_crt_strncmp.2c_.wcsncmp.2c_._mbsncmp.htm">strncmp</A>, <A HREF="_crt_strncpy.2c_.wcsncpy.2c_._mbsncpy.htm">strncpy</A>, <A HREF="_crt_strrchr.2c_.wcsrchr.2c_._mbsrchr.htm">strrchr</A>, <A HREF="_crt__strset.2c_._wcsset.2c_._mbsset.htm">_strset</A>, <A HREF="_crt_strspn.2c_.wcsspn.2c_._mbsspn.htm">strspn</A></P>
</font>
</BODY>
</HTML>
