<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Memory Management: Resizable Memory Blocks</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_memory_management.3a_.resizable_memory_blocks"></A>Memory Management: Resizable Memory Blocks</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_memory_management_with_mfc.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_memory.2d.management_tasks.htm">How Do I</A></P>

<P>The <B>new</B> and <B>delete</B> operators, described in the article <A HREF="_core_memory_management.3a_.examples.htm">Memory Management: Examples</A>, are good for allocating and deallocating fixed-size memory blocks and objects. Occasionally, your application may need resizable memory blocks. You must use the standard C run-time library functions <A HREF="_crt_malloc.htm">malloc</A>, <A HREF="_crt_realloc.htm">realloc</A>, and <A HREF="_crt_free.htm">free</A> to manage resizable memory blocks on the heap.</P>

<P><B><B>Important</B></B>&nbsp;&nbsp;&nbsp;Mixing the <B>new</B> and <B>delete</B> operators with the resizable memory-allocation functions on the same memory block will result in corrupted memory in the Debug version of MFC. You should not use <B>realloc</B> on a memory block allocated with <B>new</B>. Likewise, you should not allocate a memory block with the <B>new</B> operator and delete it with <B>free</B>, or use the <B>delete</B> operator on a block of memory allocated with <B>malloc</B>.</P>
</font>
</BODY>
</HTML>
