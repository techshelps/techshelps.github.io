<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exception Handling Topics (SEH)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_exception_handling_topics_.28.seh.29"></A>Exception Handling Topics (SEH)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_exception_handling_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_exception_handling.3a_.frequently_asked_questions.htm">FAQ</A></P>

<P>Windows 95 and Windows NT support a robust approach to handling exceptions, called structured exception handling, which involves cooperation of the operating system but also has direct support in the programming language.</P>

<P>An “exception” is an event that is unexpected or disrupts the ability of the process to proceed normally. Exceptions can be detected by both hardware and software. Hardware exceptions include dividing by zero and overflow of a numeric type. Software exceptions include those you detect and signal to the system by calling the <B>RaiseException</B> function, and special situations detected by Windows&nbsp;95 and Windows&nbsp;NT.</P>

<P>You can write more reliable code with structured exception handling. You can ensure that resources, such as memory blocks and files, are properly closed in the event of unexpected termination. You can also handle specific problems, such as insufficient memory, with concise, structured code that doesn’t rely on <B>goto</B> statements or elaborate testing of return codes.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;These articles describe structured exception handling for the C programming language. Although structured exception handling can also be used with C++, the new <A HREF="_core_exception_handling_topics_.28.c.2b2b29.htm">C++ exception handling</A> method should be used for C++ programs. See <A HREF="_core_using_structured_exception_handling_with_c.2b2b.htm">Using Structured Exception Handling with C++</A> for information on special considerations. </P>

<H2><A NAME="_core_how_structured_exception_handling_works"></A><SUP></SUP>How Structured Exception Handling Works</H2>

<P>The traditional approach to exception handling involves passing error codes: one function detects an error and passes an error code to its caller. This process may continue through many levels, until the error is communicated to the function that can properly respond to the error. If there is a weak link in the chain of function calls, the whole procedure fails.</P>

<P>Structured exception handling avoids this propagation of error codes. Its distinctive feature is that after an exception handler is installed, it can handle the exception no matter how many other functions are called. Thus, function A can handle an exception raised inside a function called by A.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_exception_handlers_and_termination_handlers.htm">Exception handlers and termination handlers</A>.<BR><BR></LI>

	<LI><A HREF="_core_writing_an_exception_handler.htm">Writing an exception handler</A>.<BR><BR></LI>

	<LI><A HREF="_core_writing_a_termination_handler.htm">Writing a termination handler</A>.<BR><BR></LI>

	<LI><A HREF="_core_using_structured_exception_handling_with_c.2b2b.htm">Using structured exception handling with C++</A>.</LI>
</UL>
</font>
</BODY>
</HTML>
