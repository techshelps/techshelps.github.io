<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Create a Custom AppWizard Project</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_begin_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_appwiz_CUSTOMWZ">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_how_to_create_a_custom_appwizard_project"></A><SUP></SUP>How to Create a Custom AppWizard Project</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_understanding_custom_appwizards.htm">Overviews</A>  |&nbsp; <A HREF="_core_overview_of_creating_a_custom_appwizard.htm">How Do I</A> |&nbsp; <A HREF="_core_appwizard_programming_reference.htm">Details</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Creating a Custom AppWizard is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_3.Click()">Visual C++ Editions</A>.</P>

<P>You use the standard MFC AppWizard and the build tools to create a custom AppWizard. You can create custom AppWizards based on one of the three categories: an existing project, the standard MFC AppWizard steps, or your own custom steps. These are described below.</P>

<H4>An Existing Project </H4>

<P>By choosing this category, you can leverage code from a workspace that contains a single existing project. The project’s files must have originally been created by the standard MFC AppWizard, and the names of the existing project’s files and classes (C<I>YourApp</I>View, C<I>YourApp</I>Doc, etc.) should be those generated by the MFC AppWizard.</P>

<P>The existing project’s name must not contain nonalphanumeric characters, such as DBCS characters. The existing files, originally created from the standard MFC AppWizard, can include minor changes or additions, but major changes can introduce flaws into your new custom AppWizard. </P>

<P>If the base class’s default, MFC AppWizard-provided class, and/or filenames have been modified, Custom AppWizard cannot convert them to macro form as it adds them to the text templates that it generates. This is also true if you use ClassWizard to add classes to a default MFC AppWizard project. Custom AppWizard will still parse the modified names and add them to the templates, and your custom AppWizard will generate an application, but your custom AppWizard will not be able to modify the names based on the project name provided by your custom AppWizard’s user. You can work around this by adding the appropriate macros to the names in the text templates. For more information on text templates, see <A HREF="_core_understanding_text_templates.htm">Understanding Text Templates</A>. For more information on macros, see <A HREF="_core_how_macros_get_their_values.htm">How Macros Get Their Values</A>.</P>

<P>You may find it useful to examine the Custmwz.awx source code, found in the Microsoft Visual Studio\Common\msdev98\bin\ide directory that is included as a sample program.</P>

<H4>Standard AppWizard Steps </H4>

<P>By choosing this category, you can use one of the existing sequences of the standard MFC AppWizard steps that create an executable file or a DLL. You can use the MFC AppWizard steps by themselves, or add your own custom steps to them.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;You can’t connect your own custom AppWizard code with existing MFC AppWizard dialog templates. For example, if your custom AppWizard uses the standard ActiveX options page, AppWizard will use its own ActiveX options step dialog template and dialog class; you cannot modify the AppWizard dialog template or class. </P>

<H4>Your Own Custom Steps </H4>

<P>By choosing this category, you can create a custom AppWizard that presents a completely new set of custom steps to the user.</P>

<H3>Creating a Custom AppWizard</H3>

<P>The procedures below list the steps necessary to create a custom AppWizard based on any of the three categories: an existing project, the standard AppWizard steps, or your own custom steps. The first procedure describes how to use the Custom AppWizard project type to create a custom AppWizard. </P>

<P class=label><B>To create a custom AppWizard</B>

<OL>
	<LI>On the <B>File</B> menu, click <B>New</B> and then click the <B>Projects</B> tab.<BR><BR></LI>

	<LI>Specify the <B>Project Name</B>, <B>Location</B>, <B>Workspace</B>, <B>Dependency</B>, and <B>Platforms</B> options and then double-click the <B>Custom AppWizard</B> icon.
<P class=tl>The name that you specify in the Name text box is used to derive the default names for the <A HREF="_core_ccustomappwiz.htm">CCustomAppWiz</A> class and its files.</P></LI>
</OL>

<P class=label><B>To specify a custom AppWizard type, name, and number of steps</B>

<OL>
	<LI>From Custom AppWizard Step 1 of 2, select a custom AppWizard category:
<UL type=disc>
	<LI><B>An existing project</B>
<P class=tl>Select this option if you want your custom AppWizard to generate code, resource, and project files that are based on those found in a workspace that contains a single existing project. For more information on this option, see <A HREF="#_core_how_to_create_a_custom_appwizard_project">How to Create a Custom AppWizard Project</A>.</P>
<P class=tl>If you select this option, the AppWizard title bar displays “Step 1 of 2.” The text box for specifying the number of custom steps is grayed out because the features of the resulting custom AppWizard project are defined by the features of the existing project; you will not need to provide any custom AppWizard steps.</P></LI>

	<LI><B>Standard AppWizard steps</B>
<P class=tl>Select this option if you want your custom AppWizard to use an existing sequence of AppWizard steps. For more information on this option, see <A HREF="#_core_how_to_create_a_custom_appwizard_project">How to Create a Custom AppWizard Project</A>.</P></LI>

	<LI><B>Your own custom steps</B>
<P class=tl>Choose this option if you want to create an entirely new custom AppWizard.</P></LI>
</UL>
</LI>

	<LI>Type a name for your custom AppWizard.<BR><BR></LI>

	<LI>If you have chosen to base your custom AppWizard on either the standard MFC AppWizard steps or a completely custom set of steps, specify the required number of custom steps.
<P class=atl><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;If your project is based on the standard MFC AppWizard steps, type a number only if you plan to create steps other than the standard ones.</p>
<P class=tl>For each step that you specify, MFCAPWZ.DLL will provide a resource template that you can edit in the dialog editor, and a <A HREF="_core_cappwizstepdlg.htm">CAppWizStepDlg</A> class derived from the MFC library’s <B>CDialog</B> class.</P></LI>
</OL>

<P class=label><B>To specify the location of an existing project</B></P>

<P>If you’ve chosen to base your custom AppWizard on an existing project, you must specify the location of the existing project:

<OL>
	<LI>From Custom AppWizard Step 1 of 2, click <B>Next</B>.<BR><BR></LI>

	<LI>In Step 2 of 2, type or use <B>Browse</B> to find the path that contains the existing project on which your custom AppWizard will be based.</LI>
</OL>

<P class=label><B>To choose the type of standard MFC AppWizard steps</B>

<OL>
	<LI>From Custom AppWizard Step 2 of 2, select either <B>AppWizard Executable</B> or <B>AppWizard Dynamic Link Library</B>.<BR><BR></LI>

	<LI>Select the languages that your custom AppWizard will support.
<P class=tl>The list box contains a language name for each language DLL in your Microsoft Visual Studio\Common\msdev98\bin\ide directory. The names of these DLLs take the form APPWZ*.DLL. For example, if Microsoft Visual Studio\Common\msdev98\bin\ide contains APPWZENU.DLL and APPWZDEU.DLL, the list box will list both English and German.</P>
<P class=tl>For each language you select from the list box, AppWizard will copy language-specific versions of the standard MFC AppWizard resource templates from the associated language DLL to your custom AppWizard project’s template directory. Then, after your finished custom AppWizard is copied to a custom AppWizard user’s Microsoft Visual Studio\Common\msdev98\Template directory, the custom AppWizard user can use your custom AppWizard to generate projects that support any of the languages you select.</P>
<P class=atl><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The language DLLs (such as APPWZENU.DLL and APPWZDEU.DLL) contain only standard AppWizard resource templates. You must supply any nonstandard resource templates required by applications that your custom AppWizard creates. For a complete list of the standard AppWizard resource templates, see <A HREF="_core_standard_custom_resource_templates.htm">Standard Custom Resource Templates</A>.</p></LI>
</OL>

<H4>What do you want to know more about?</H4>

<UL type=disc>
	<LI><A HREF="_core_overview_of_creating_a_custom_appwizard.htm">An overview of creating a custom AppWizard</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_the_files_that_appwizard_creates.htm">The files that AppWizard creates</A><BR><BR></LI>

	<LI><A HREF="_core_adding_functionality_to_your_custom_appwizard.htm">Adding functionality to a custom AppWizard</A><BR><BR></LI>

	<LI><A HREF="_core_customizing_the_generated_custom_appwizard_project.htm">Customizing a generated AppWizard project</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_custom_resource_templates.htm">Custom resource templates</A><BR><BR></LI>

	<LI><A HREF="_core_debugging_custom_appwizards.htm">Debugging custom AppWizards</A><BR><BR></LI>

	<LI><A HREF="_core_creating_a_classwizard_information_file_template.htm">Creating a ClassWizard information file template</A><BR><BR></LI>

	<LI><A HREF="_core_providing_context.2d.sensitive_help.htm">Providing context-sensitive help</A><BR><BR></LI>

	<LI><A HREF="_core_appwizard_language_support_for_far_east_languages.htm">AppWizard Language Support for Far East Languages</A><BR><BR></LI>

	<LI><A HREF="_core_appwizard_programming_reference.htm">The AppWizard Programming Reference</A></LI>
</UL>
</font>
</BODY>
</HTML>
