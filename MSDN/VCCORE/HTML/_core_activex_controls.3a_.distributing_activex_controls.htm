<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Controls: Distributing ActiveX Controls</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="circle sample start">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_Controls">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_activex_controls.3a_.distributing_activex_controls"></A>ActiveX Controls: Distributing ActiveX Controls</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_activex_controls.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_activex_control_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_frequently_asked_questions_about_activex_controls.htm">FAQ</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_activex_control_sample_list.htm">Sample</A></P>

<P>This article discusses several issues related to redistributing ActiveX controls:

<UL type=disc>
	<LI><A HREF="#_core_ansi_or_unicode_control_versions">ANSI or Unicode control versions</A><BR><BR></LI>

	<LI><A HREF="#_core_installing_activex_controls_and_redistributable_dlls">Installing the control and its components</A><BR><BR></LI>

	<LI><A HREF="#_core_registering_controls">Registering the ActiveX Control</A><BR><BR></LI>

	<LI><A HREF="#_core_list_of_redistributable_files">List of redistributable files</A></LI>
</UL>



<H2><A NAME="_core_ansi_or_unicode_control_versions"></A>ANSI or Unicode Control Versions</H2>

<P>You must decide whether to ship an ANSI or Unicode version of the control, or both. This decision is based on portability factors inherent in ANSI and Unicode character sets.</P>

<P>ANSI controls, which work on all Win32 operating systems, allow for maximum portability between the various Win32 operating systems. Unicode controls work on only Windows NT (version 3.51 or later), but not on Windows 95. If portability is your primary concern, ship ANSI controls. If your controls will run only on Windows NT, you can ship Unicode controls. You could also choose to ship both and have your application install the version most appropriate for the user’s operating system.</P>



<H2><A NAME="_core_installing_activex_controls_and_redistributable_dlls"></A>Installing ActiveX Controls and Redistributable DLLs</H2>

<P>The setup program you provide with your ActiveX controls should create a special subdirectory of the Windows directory and install the controls’ .OCX files in it.</P>

<P class=indent><B><B>Tip</B></B>&nbsp;&nbsp;&nbsp;Use the Windows <B>GetWindowsDirectory</B> API in your setup program to obtain the name of the Windows directory.</P>

<P class=indent>You may want to derive the subdirectory name from the name of your company or product.</P>

<P>The setup program must install the necessary redistributable DLL files in the Windows system directory. If any of the DLLs are already present on the user's machine, the setup program should compare their versions with the versions you are installing. Reinstall a file only if its version number is higher than the file already installed.</P>

<P>Because ActiveX controls can be used only in OLE container applications, there is no need to distribute the full set of OLE DLLs with your controls. You can assume that the containing application (or the operating system itself) has the standard OLE DLLs installed.</P>



<H2><A NAME="_core_registering_controls"></A>Registering Controls</H2>

<P>Before a control can be used, appropriate entries must be created for it in the Windows registration database. Some ActiveX control containers provide a menu item for users to register new controls, but this feature may not be available in all containers. Therefore, you may want your setup program to register the controls when they are installed. Visual C++ includes a redistributable program, RegSvr32.exe, which can be used to register controls. Just pass the complete path and filename of the control .OCX file as an argument to RegSvr32. The MFC ActiveX controls sample <A HREF="JavaScript:hhobj_3.Click()">REGSVR</A> provides the source code for RegSvr32.EXE. This sample illustrates one method for performing the registration task and can be used as a guide to writing your own registration routine.</P>

<P>If you prefer, you can write your setup program to register the control directly instead.</P>

<P>Use the <B>LoadLibrary </B>Windows API to load the control DLL. Next, use <B>GetProcAddress </B>to obtain the address of the “DllRegisterServer” function. Finally, call the DllRegisterServer function. The following code sample demonstrates one possible method, where <CODE>hLib</CODE> stores the handle of the control library, and <CODE>lpDllEntryPoint </CODE>stores the address of the “DllRegisterServer” function.</P>

<PRE><CODE>HINSTANCE hLib = LoadLibrary(pszDllName);

if (hLib &lt; (HINSTANCE)HINSTANCE_ERROR)
{
 DisplayMessage(IDS_LOADLIBFAILED, pszDllName); //unable to load DLL
 iReturn = FAIL_LOAD;                   //unable to load DLL
}

// Find the entry point.
(FARPROC&amp;)lpDllEntryPoint = GetProcAddress(hLib, 
   _T(“DllRegisterServer”));
if (lpDllEntryPoint != NULL)
 (*lpDllEntryPoint)();
else
   //unable to locate entry point
</CODE></PRE>

<P>The advantage of registering the control directly is that you don’t need to invoke and load a separate process (namely, REGSVR32), reducing installation time. In addition, because registration is an internal process, the setup program can handle errors and unforeseen situations better than an external process can.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;Before your setup program installs an ActiveX control, it should call <B>OleInitialize</B>. When your setup program is finished, call <B>OleUnitialize</B>. This ensures that the OLE system DLLs are in the proper state for registering an ActiveX control.</P>

<P>When you install and register a control, you should also register OLEPRO32.DLL if you are using Microsoft Windows 95 (or OLEAUT32.DLL if you are using Microsoft Windows NT 4.0 or later). Use the same procedure for registering this DLL as you did for your .OCX file. Perform this registration step only if you need to install OLEPRO32.DLL or OLEAUT32.DLL. If the DLL is installed already, you should assume that it has been registered.</P>

<P>If your control uses one of the stock property pages, you should also register MFCx0.DLL. Unlike OLEPRO32.DLL or OLEAUT32.DLL, you should always register this DLL, even if it is already installed.</P>



<H2><A NAME="_core_list_of_redistributable_files"></A>List of Redistributable Files</H2>

<P>This section lists the files you may redistribute with your ActiveX control. The conditions under which you may or may not redistribute these files are described in the License Agreement included in the product. Visual C++ Setup may install some of these files on your development machine, depending on the options you chose during Setup. When you redistribute any of these files, copy them from the Visual C++ CD to your distribution medium. This ensures that you are redistributing the correct version of the files. The following table lists files that must be redistributed with your ActiveX control.</P>

<P class=label><B>Redistributable Files</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=34%><B>File</B></TD>
<TD class=label width=66%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MFCx0.DLL</TD>
<TD width=66%>MFC DLL (ANSI)</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MFCx0U.DLL</TD>
<TD width=66%>MFC DLL (Unicode)</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>MSVCRTx0.DLL</TD>
<TD width=66%>C run-time libraries</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>OLEPRO32.DLL (or OLEAUT32.DLL)</TD>
<TD width=66%>OLE property frame and standard types support. With Microsoft Windows NT 4.0 and later, this file is replaced by OLEAUT32.DLL.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%>REGSVR32.EXE</TD>
<TD width=66%>Control registration utility</TD>
</TR>
</TABLE><BR>
</font>
</BODY>
</HTML>
