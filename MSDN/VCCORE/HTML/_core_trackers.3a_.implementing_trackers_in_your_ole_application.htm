<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Trackers: Implementing Trackers in Your OLE Application</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_OCLIENT">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRectTracker">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_OCLIENT">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_OCLIENT">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_OCLIENT">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_OCLIENT">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_TRACKER">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRectTracker.3a3a.TrackRubberBand">
</OBJECT>
<OBJECT ID="hhobj_12" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRectTracker.3a3a.m_rect">
</OBJECT>
<OBJECT ID="hhobj_13" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRect.3a3a.NormalizeRect">
</OBJECT>
<OBJECT ID="hhobj_14" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CRectTracker">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_trackers.3a_.implementing_trackers_in_your_ole_application"></A>Trackers: Implementing Trackers in Your OLE Application</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_ole_in_mfc.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_ole_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_ole_sample_list.htm">Sample</A>  |&nbsp; <A HREF="_core_ole_tutorial_list.htm">Tutorial</A></P>

<P>Trackers provide a graphical interface to enable users to interact with OLE client items. By using different tracker styles, OLE client items can be displayed with hatched borders, resize handles, or a variety of other visual effects. This article describes:

<UL type=disc>
	<LI><A HREF="#_core_how_to_implement_tracking_in_your_code">Tracking and how to implement it in your code</A>.<BR><BR></LI>

	<LI><A HREF="#_core_rubber.2d.banding_and_trackers">The rubber-band effect and trackers</A>.</LI>
</UL>

<P>The article also covers the use of styles with trackers. </P>

<P>In addition, it makes several references to the MFC OLE sample <A HREF="JavaScript:hhobj_2.Click()">OCLIENT</A>. </P>



<H2><A NAME="_core_how_to_implement_tracking_in_your_code"></A>How to Implement Tracking in Your Code</H2>

<P><A HREF="JavaScript:hhobj_3.Click()">Home</A>  |&nbsp; <A HREF="_core_ole_in_mfc.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_ole_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_ole_sample_list.htm">Sample</A>  |&nbsp; <A HREF="_core_ole_tutorial_list.htm">Tutorial</A></P>

<P>To track an OLE item, you must handle certain events related to the item, such as clicking the item or updating the view of the document. In all cases, it is sufficient to declare a temporary <A HREF="JavaScript:hhobj_4.Click()">CRectTracker</A> object and manipulate the item by means of this object.</P>

<P>When a user selects an item or inserts an object with a menu command, you must initialize the tracker with the proper styles to represent the state of the OLE item. The following table outlines the conventions used by the OCLIENT sample. For more information on these styles, see <B>CRectTracker</B>.</P>

<P class=label><B>Container Styles and States of the OLE Item</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=42%><B>Style displayed</B></TD>
<TD class=label width=58%><B>State of OLE item</B></TD>
</TR>

<TR VALIGN="top">
<TD width=42%>Dotted border</TD>
<TD width=58%>Item is linked</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>Solid border</TD>
<TD width=58%>Item is embedded in your document</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>Resize handles</TD>
<TD width=58%>Item is currently selected</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>Hatched border</TD>
<TD width=58%>Item is currently in-place active</TD>
</TR>

<TR VALIGN="top">
<TD width=42%>Hatching pattern overlays item</TD>
<TD width=58%>Item’s server is open</TD>
</TR>
</TABLE><BR>

<P>You can handle this initialization easily using a procedure that checks the state of the OLE item and sets the appropriate styles. The <CODE>SetupTracker</CODE> function found in the OCLIENT sample demonstrates tracker initialization. The parameters for this function are the address of the tracker, <I>pTracker</I>; a pointer to the client item that is related to the tracker, <I>pItem</I>; and a pointer to a rectangle, <I>pTrueRect</I>. For a more complete example of this function, see the MFC OLE sample <A HREF="JavaScript:hhobj_5.Click()">OCLIENT</A>.</P>

<P>The <CODE>SetupTracker </CODE>code example below presents a single function; lines of the function are interspersed with discussion of the function’s features:</P>

<PRE><CODE>void CMainView::SetupTracker( CRectTracker* pTracker, 
  CRectItem* pItem, CRect* pTrueRect )
{
</CODE></PRE>

<P>The tracker is initialized by setting the minimum size and clearing the style of the tracker.</P>

<PRE><CODE>  pTracker-&gt;m_sizeMin.cx = 8;
  pTracker-&gt;m_sizeMin.cy = 8;
  
  pTracker-&gt;m_nStyle = 0;
  
</CODE></PRE>

<P>The following lines check to see whether the item is currently selected and whether the item is linked to the document or embedded in it. Resize handles located on the inside of the border are added to the style, indicating that the item is currently selected. If the item is linked to your document, the dotted border style is used. A solid border is used if the item is embedded.</P>

<PRE><CODE>  if ( pItem == m_pSelection )
    pTracker-&gt;m_nStyle |= CRectTracker::resizeInside;

  if ( pItem-&gt;GetType( ) == OT_LINK )
    pTracker-&gt;m_nStyle |= CRectTracker::dottedLine;
  else
    pTracker-&gt;m_nStyle |= CRectTracker::solidLine;
</CODE></PRE>

<P>The following code overlays the item with a hatched pattern if the item is currently open.</P>

<PRE><CODE>  if ( pItem-&gt;GetItemState( ) == 
           COleClientItem::openState ||
       pItem-&gt;GetItemState( ) == 
           COleClientItem::activeUIState )
    pTracker-&gt;m_nStyle |= CRectTracker::hatchInside;
}
</CODE></PRE>

<P>You can then call this function whenever the tracker has to be displayed. For example, call this function from the <B>OnDraw</B> function of your view class. This updates the tracker’s appearance whenever the view is repainted. For a complete example, see the <B>CMainView::OnDraw</B> function of the MFC OLE sample <A HREF="JavaScript:hhobj_6.Click()">OCLIENT</A>.</P>

<P>Events will occur in your application that require tracker code, such as resizing, moving, or hit detecting. These actions usually indicate that an attempt is being made to grab or move the item. In these cases, you will need to decide what was grabbed: a resize handle or a portion of the border between resize handles. The <B>OnLButtonDown</B> message handler is a good place to test the position of the mouse in relation to the item. Make a call to <B>CRectTracker::HitTest</B>. If the test returns something besides <B>CRectTracker::hitOutside</B>, the item is being resized or moved. Therefore, you should make a call to the <B>Track</B> member function. See the <B>CMainView::OnLButtonDown</B> function located in the MFC OLE sample <A HREF="JavaScript:hhobj_7.Click()">OCLIENT</A> for a complete example.</P>

<P>The <B>CRectTracker</B> class provides several different cursor shapes used to indicate whether a move, resize, or drag operation is taking place. To handle this event, check to see whether the item currently under the mouse is selected. If it is, make a call to <B>CRectTracker::SetCursor</B>, or call the default handler. The following example is from the MFC OLE sample <A HREF="JavaScript:hhobj_8.Click()">OCLIENT</A>:</P>

<PRE><CODE>BOOL CMainView::OnSetCursor( CWnd* pWnd, UINT nHitTest, 
  UINT message )
{
  if ( pWnd == this &amp;&amp; m_pSelection != NULL )
  {
    // give the tracker for the selection a chance
    CRectTracker tracker;
    SetupTracker( &amp;tracker, m_pSelection );
    if ( tracker.SetCursor( this, nHitTest ))
      return TRUE;
  }
  return CScrollView::OnSetCursor( pWnd, 
    nHitTest, message );
}
</CODE></PRE>



<H2><A NAME="_core_rubber.2d.banding_and_trackers"></A>Rubber-Banding and Trackers</H2>

<P><A HREF="JavaScript:hhobj_9.Click()">Home</A>  |&nbsp; <A HREF="_core_ole_in_mfc.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_ole_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_ole_sample_list.htm">Sample</A>  |&nbsp; <A HREF="_core_ole_tutorial_list.htm">Tutorial</A></P>

<P>Another feature supplied with trackers is the “rubber-band” selection, which allows a user to select multiple OLE items by dragging a sizing rectangle around the items to be selected. When the user releases the left mouse button, items within the region selected by the user are selected and can be manipulated by the user. For instance, the user might drag the selection into another container application.</P>

<P>Implementing this feature requires some additional code in your application’s <B>WM_LBUTTONDOWN</B> handler function.</P>

<P>The following code sample implements rubber-band selection and additional features and is taken from the <B>WM_LBUTTONDOWN</B> handler function of MFC General sample <A HREF="JavaScript:hhobj_10.Click()">TRACKER</A>.</P>

<PRE><CODE>if (pDoc-&gt;m_tracker.HitTest(point) &lt; 0)
{
  // just to demonstrate CRectTracker::TrackRubberBand
  CRectTracker tracker;
  if (tracker.TrackRubberBand(this, point, 
    pDoc-&gt;m_bAllowInvert))
  {
    MessageBeep(0); // beep indicates TRUE

    // see if rubber band intersects 
    // with the doc's tracker
    CRect rectT;
    // so intersect rect works
    tracker.m_rect.NormalizeRect();
    if (rectT.IntersectRect(tracker.m_rect, 
      pDoc-&gt;m_tracker.m_rect))
    {
    // if so, put resize handles on it
    // (i.e. select it)
      if (pDoc-&gt;m_tracker.m_nStyle &amp;
        CRectTracker::resizeInside)
      {
      // swap from resize inside to
      // resize outside for effect
        pDoc-&gt;m_tracker.m_nStyle &amp;=
          ~CRectTracker::resizeInside;
        pDoc-&gt;m_tracker.m_nStyle |=
          CRectTracker::resizeOutside;
      }
      else
      {
      // just use inside resize handles on first time
        pDoc-&gt;m_tracker.m_nStyle &amp;=
          ~CRectTracker::resizeOutside;
        pDoc-&gt;m_tracker.m_nStyle |=
          CRectTracker::resizeInside;
      }
      pDoc-&gt;SetModifiedFlag();
      pDoc-&gt;UpdateAllViews(NULL,
        (LPARAM)(LPCRECT)rectSave);
      pDoc-&gt;UpdateAllViews(NULL);
    }
  }
}
</CODE></PRE>

<P>If you want to allow reversible orientation of the tracker during rubber-banding, you should call <A HREF="JavaScript:hhobj_11.Click()">CRectTracker::TrackRubberBand</A> with the third parameter set to <B>TRUE</B>. Remember that allowing reversible orientation will sometimes cause <A HREF="JavaScript:hhobj_12.Click()">CRectTracker::m_rect</A> to become inverted. This can be corrected by a call to <A HREF="JavaScript:hhobj_13.Click()">CRect::NormalizeRect</A>.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_containers.3a_.client_items.htm">Container client items</A><BR><BR></LI>

	<LI><A HREF="_core_drag_and_drop.3a_.customizing.htm">Customizing drag and drop</A></LI>
</UL>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="JavaScript:hhobj_14.Click()">CRectTracker</A></P>
</font>
</BODY>
</HTML>
