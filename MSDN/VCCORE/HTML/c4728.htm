<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning (level 1) C4728</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c4728"></A><SUP></SUP>Compiler Warning (level 1) C4728</H1>

<P class=dt><B>attempt to take address of function identifier produces address of jump table entry</B></P>

<P>Your code contains a statement or expression that tries to refer to the address of a function by taking the address of the function's identifier. When you take the address of a function you get the address of the jump table entry for the function, not the address of the function itself.</P>

<P>As an example of this condition, consider this code fragment:</P>

<PRE><CODE>void func(void) {}
   .
   .
   .
int in_func(char *ptr)
{
   if (ptr &gt; (char *)&amp;func &amp;&amp; ptr &lt; (char *)&amp;func + 40)
   {
      // erroneously expects that ptr points within func()
      return 1;
   }

   return 0;
}
</CODE></PRE>

<P>Within the expression: </P>

<PRE><CODE>   (ptr &gt; (char *)&amp;func &amp;&amp; ptr &lt; (char *)&amp;func + 40)
</CODE></PRE>

<P>the result of <CODE>&amp;func</CODE> is the address of the jump table entry for <CODE>func()</CODE>, not the address of <CODE>func()</CODE> itself. Hence the expression does not determine whether or not <CODE>ptr</CODE> is within the first 40 bytes of <CODE>func()</CODE>; but instead determines whether or not <CODE>ptr</CODE> is within the 40 bytes following the jump table entry for <CODE>func()</CODE>, which is not what was intended.</P>
</font>
</BODY>
</HTML>
