<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Working with Dialog Box Data</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble start">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_working_with_dialog_box_data"></A>Working with Dialog Box Data</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_working_with_classes.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_working_with_classes_tasks.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A></P>

<P>ClassWizard offers an easy way to take advantage of the <A HREF="_core_classwizard_and_dialog_data_exchange.htm">dialog data exchange</A> (DDX) and <A HREF="_core_classwizard_and_dialog_data_validation.htm">dialog data validation</A> (DDV) capabilities of MFC. </P>

<P>To use DDX, you define member variables in the dialog box, form view, or record view class, and associate each of them with a dialog box control. The framework transfers any initial values to the controls when the dialog box is displayed. When you click OK, it updates the variables with the data that you entered.</P>

<P>With DDV, dialog box information entered by the user is validated automatically. You can set the validation boundaries: the maximum length for string values in an edit-box control or the minimum or maximum numeric values when you expect a number to be entered. You can also use ClassWizard to connect dialog box controls to your own <A HREF="_core_custom_data_exchange_and_validation.htm">custom data-validation routines</A>.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_classwizard_and_dialog_data_exchange.htm">ClassWizard and Dialog Data Exchange</A><BR><BR></LI>

	<LI><A HREF="_core_classwizard_and_dialog_data_validation.htm">ClassWizard and Dialog Data Validation</A><BR><BR></LI>

	<LI><A HREF="_core_custom_data_exchange_and_validation.htm">Custom Data Exchange and Validation</A></LI>
</UL>
</font>
</BODY>
</HTML>
