<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Unicode and MBCS</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_unicode_and_mbcs"></A><SUP></SUP>Unicode and MBCS</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_unicode_programming_tasks.htm">Unicode Tasks</A>  |&nbsp; <A HREF="_core_multibyte_character_set_.28.mbcs.29_.tasks.htm">Multibyte Character Set (MBCS) Tasks</A></P>

<P>The Microsoft Foundation Class Library (MFC), the C run-time library for Visual C++, and the Visual C++ development environment are enabled to assist your international programming. They provide:

<UL type=disc>
	<LI>Support for the Unicode standard on Windows NT.
<P class=tl>Unicode is a 16-bit character encoding, providing enough encodings for all languages. All ASCII characters are included in Unicode as “widened” characters.</P>
<P class=atl><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The Unicode standard is not supported on Windows 95.</p></LI>

	<LI>Support for a form of Multibyte Character Set (MBCS) called Double Byte Character Set (DBCS) on all platforms.
<P class=tl>DBCS characters are composed of one or two bytes. Some ranges of bytes are set aside for use as “lead bytes.” A lead byte specifies that it and the following “trail byte” comprise a single two-byte-wide character. You must keep track of which bytes are lead bytes. In a particular multibyte-character set, the lead bytes fall within a certain range, as do the trail bytes. When these ranges overlap, it may be necessary to evaluate the context to determine whether a given byte is functioning as a lead byte or a trail byte.</P></LI>

	<LI>Support for tools that simplify MBCS programming of applications written for international markets. 
<P class=tl>When run on an MBCS-enabled version of the Windows NT operating system, the Visual C++ development system — including the integrated source code editor, debugger, and command line tools — is completely MBCS-enabled. For more information, see <A HREF="_core_mbcs_support_in_visual_c.2b2b.htm">MBCS Support in Visual C++</A>.</P></LI>
</UL>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;In this documentation, “MBCS” is used to describe all non-Unicode support for wide characters. In Visual C++, MBCS always means DBCS. Character sets wider than two bytes are not supported.</P>

<P>By definition, the ASCII character set is a subset of all multibyte-character sets. In many multibyte character sets, each character in the range 0x00 – 0x7F is identical to the character that has the same value in the ASCII character set. For example, in both ASCII and MBCS character strings, the one-byte <B>NULL</B> character ('\0') has value 0x00 and indicates the terminating null character.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_international_enabling.htm">International Enabling</A></P>
</font>
</BODY>
</HTML>
