<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Report Hook Functions</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_report_hook_functions"></A>Report Hook Functions</H1>

<P>A report hook function, installed using <B>_CrtSetReportHook</B>, is called every time <B>_CrtDbgReport </B>generates a debug report. You can use it, among other things, for filtering reports to focus on specific types of allocations. A report hook function should have a prototype like the following:</P>

<PRE><CODE>int YourReportHook(int nRptType, char *szMsg, int *retVal);
</CODE></PRE>

<P>The pointer that you pass to <B>_CrtSetReportHook </B>is of type <B>_CRT_REPORT_HOOK</B>, as defined in CRTDBG.H:</P>

<PRE><CODE>typedef int (__cdecl *_CRT_REPORT_HOOK)(int, char *, int *);
</CODE></PRE>

<P>When the run-time library calls your hook function, the <I>nRptType </I>argument contains the category of the report (<B>_CRT_WARN</B>, <B>_CRT_ERROR</B>, or <B>_CRT_ASSERT</B>), <I>szMsg </I>contains a pointer to a fully assembled report message string, and <I>retVal</I> specifies the value that should be returned by <B>_CrtDbgReport</B>. If the hook handles the message in question completely, so that no further reporting is required, it should return <B>FALSE</B>. If it returns TRUE, then <B>_CrtDbgReport</B> will report the message in the normal way.</P>
</font>
</BODY>
</HTML>
