<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_getdcwd, _wgetdcwd</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__getdcwd.2c_._wgetdcwd"></A><SUP></SUP>_getdcwd, _wgetdcwd</H1>

<P>Get full path name of current working directory on the specified drive.</P>

<P><B>char</B> <B>*_getdcwd(</B> <B>int</B> <I>drive</I><B>,</B> <B>char</B> <B>*</B><I>buffer</I><B>,</B> <B>int</B> <I>maxlen</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*_wgetdcwd(</B> <B>int</B> <I>drive</I><B>,</B> <B>wchar_t</B> <B>*</B><I>buffer</I><B>,</B> <B>int</B> <I>maxlen</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=19%><B>Routine</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=55%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>_getdcwd</B></TD>
<TD width=26%>&lt;direct.h&gt;</TD>
<TD width=55%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>_wgetdcwd</B></TD>
<TD width=26%>&lt;direct.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=55%>Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns <I>buffer</I>. A <B>NULL</B> return value indicates an error, and <B>errno</B> is set either to <B>ENOMEM</B>, indicating that there is insufficient memory to allocate <I>maxlen</I> bytes (when a <B>NULL</B> argument is given as <I>buffer</I>), or to <B>ERANGE</B>, indicating that the path is longer than <I>maxlen</I> characters.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>drive</I></P>

<P class=indent>Disk drive</P>

<P class=dt><I>buffer</I></P>

<P class=indent>Storage location for path</P>

<P class=dt><I>maxlen</I></P>

<P class=indent>Maximum length of path</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_getdcwd</B> function gets the full path of the current working directory on the specified drive and stores it at <I>buffer</I>. An error occurs if the length of the path (including the terminating null character) exceeds <I>maxlen</I>. The <I>drive</I> argument specifies the drive (0 = default drive, 1 = A, 2 = B, and so on). The <I>buffer</I> argument can be <B>NULL</B>; a buffer of at least size <I>maxlen</I> (more only if necessary) will automatically be allocated, using <B>malloc</B>, to store the path. This buffer can later be freed by calling <B>free</B> and passing it the <B>_getdcwd</B> return value (a pointer to the allocated buffer).</P>

<P><B>_getdcwd</B> returns a string that represents the path of the current working directory. If the current working directory is set to the root, the string ends with a backslash ( <B>\</B> ). If the current working directory is set to a directory other than the root, the string ends with the name of the directory and not with a backslash.</P>

<P><B>_wgetdcwd</B> is a wide-character version of <B>_getdcwd</B>; the <I>buffer</I> argument and return value of <B>_wgetdcwd</B> are wide-character strings. <B>_wgetdcwd</B> and <B>_getdcwd</B> behave identically otherwise.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tgetdcwd</TD>
<TD width=29%>_getdcwd</TD>
<TD width=26%>_getdcwd</TD>
<TD width=28%>_wgetdcwd</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* GETDRIVE.C illustrates drive functions including:
 *      _getdrive       _chdrive        _getdcwd
 */

#include &lt;stdio.h&gt;
#include &lt;conio.h&gt;
#include &lt;direct.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;ctype.h&gt;

void main( void )
{
   int ch, drive, curdrive;
   static char path[_MAX_PATH];

   /* Save current drive. */
   curdrive = _getdrive();

   printf( "Available drives are: \n" );

   /* If we can switch to the drive, it exists. */
   for( drive = 1; drive &lt;= 26; drive++ )
      if( !_chdrive( drive ) )
         printf( "%c: ", drive + 'A' - 1 );

   while( 1 )
   {
      printf( "\nType drive letter to check or ESC to quit: " );
      ch = _getch();
      if( ch == 27 )
         break;
      if( isalpha( ch ) )
         _putch( ch );
      if( _getdcwd( toupper( ch ) - 'A' + 1, path, _MAX_PATH ) != NULL )
         printf( "\nCurrent directory on that drive is %s\n", path );
   }

   /* Restore original drive.*/
   _chdrive( curdrive );
   printf( "\n" );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Available drives are:
A: B: C: L: M: O: U: V: 
Type drive letter to check or ESC to quit: c
Current directory on that drive is C:\CODE

Type drive letter to check or ESC to quit: m
Current directory on that drive is M:\

Type drive letter to check or ESC to quit: 

</CODE></PRE>

<P><A HREF="_crt_directory_control.htm">Directory Control Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__chdir.2c_._wchdir.htm">_chdir</A>, <A HREF="_crt__getcwd.2c_._wgetcwd.htm">_getcwd</A>, <A HREF="_crt__getdrive.htm">_getdrive</A>, <A HREF="_crt__mkdir.2c_._wmkdir.htm">_mkdir</A>, <A HREF="_crt__rmdir.2c_._wrmdir.htm">_rmdir</A></P>
</font>
</BODY>
</HTML>
