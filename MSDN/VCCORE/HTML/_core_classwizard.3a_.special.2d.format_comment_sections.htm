<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ClassWizard: Special-Format Comment Sections</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble start">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_classwizard.3a_.special.2d.format_comment_sections"></A>ClassWizard: Special-Format Comment Sections</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_working_with_classes.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_working_with_classes_tasks.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A></P>

<P>This article explains where and how ClassWizard edits your source files.</P>

<P>When you add a new class using ClassWizard, special-format comments are placed in your code to mark the sections of the header and implementation files that ClassWizard edits. ClassWizard never modifies code that is outside these commented sections.</P>

<P>ClassWizard creates the following types of comments in your code:

<UL type=disc>
	<LI><A HREF="#_core_message.2d.map_comments">Message-Map Comments</A><BR><BR></LI>

	<LI><A HREF="#_core_virtual_function_comments">Virtual Function Comments</A><BR><BR></LI>

	<LI><A HREF="#_core_data_map_comments">Data Map Comments</A><BR><BR></LI>

	<LI><A HREF="#_core_field_map_comments">Field Map Comments</A><BR><BR></LI>

	<LI><A HREF="#_core_activex_dispatch_map_comments">Active Dispatch Map Comments</A></LI>
</UL>

<H2><A NAME="_core_message.2d.map_comments"></A>Message-Map Comments</H2>

<P>For most classes, there are two related sections of code that ClassWizard edits: the member-function definitions in the class header file and the message-map entries in the class implementation file.</P>

<P>The ClassWizard comments in the header file look like this:</P>

<PRE><CODE>//{{AFX_MSG(&lt;classname&gt;)
  afx_msg void OnAppAbout();
//}}AFX_MSG
</CODE></PRE>

<P>The ClassWizard section in the implementation file is set off with comments that look like this:</P>

<PRE><CODE>//{{AFX_MSG_MAP(&lt;classname&gt;)
  ON_COMMAND(ID_APP_ABOUT, OnAppAbout)
//}}AFX_MSG_MAP
</CODE></PRE>

<P>The notes in the ClassWizard section act as placeholders. ClassWizard removes the note from any ClassWizard section in which it writes code.</P>

<H2><A NAME="_core_virtual_function_comments"></A>Virtual Function Comments</H2>

<P>As with message handlers, ClassWizard writes code to two locations when you use it to override a virtual function in one of your classes.</P>

<P>The ClassWizard comments in the header file look like the following example for virtual function overrides:</P>

<PRE><CODE>//{{AFX_VIRTUAL(&lt;classname&gt;)
  virtual BOOL InitInstance();
//}}AFX_VIRTUAL
</CODE></PRE>

<P>The ClassWizard section in the implementation file has no special comments. Virtual function definitions in the .cpp file look like other function definitions.</P>

<H2><A NAME="_core_data_map_comments"></A>Data Map Comments</H2>

<P>For dialog boxes, form views, and record views, ClassWizard creates and edits three other sections that are marked with special format comments:

<UL type=disc>
	<LI>Member variable declarations in the class header file:
<PRE><CODE>//{{AFX_DATA
..
//}}AFX_DATA
</CODE></PRE>
</LI>

	<LI>Member variable initialization in the class implementation file:
<PRE><CODE>//{{AFX_DATA_INIT
..
//}}AFX_DATA_INIT
</CODE></PRE>
</LI>

	<LI>Data-exchange macros in the implementation file:
<PRE><CODE>//{{AFX_DATA_MAP
..
//}}AFX_DATA_MAP
</CODE></PRE>
</LI>
</UL>

<H2><A NAME="_core_field_map_comments"></A>Field Map Comments</H2>

<P>For record field exchange, ClassWizard creates and edits three other sections that are marked with special format comments:

<UL type=disc>
	<LI>Member variable declarations in the class header file:
<PRE><CODE>//{{AFX_FIELD
..
//}}AFX_FIELD
</CODE></PRE>
</LI>

	<LI>Record exchange function calls in the implementation file:
<PRE><CODE>//{{AFX_FIELD_MAP
..
//}}AFX_FIELD_MAP
</CODE></PRE>
</LI>

	<LI>Member variable initializations in the class header file:
<PRE><CODE>//{{AFX_FIELD_INIT
..
//}}AFX_FIELD_INIT
</CODE></PRE>
</LI>
</UL>

<H2><A NAME="_core_activex_dispatch_map_comments"></A>Active Dispatch Map Comments</H2>

<P>For Active method dispatch, ClassWizard creates and edits four other sections that are marked with special format comments:

<UL type=disc>
	<LI>Active events in the class header file:
<PRE><CODE>//{{AFX_EVENT
..
//}}AFX_EVENT
</CODE></PRE>
</LI>

	<LI>Active events in the class implementation file:
<PRE><CODE>//{{AFX_EVENT_MAP
..
//}}AFX_EVENT_MAP
</CODE></PRE>
</LI>

	<LI>Automation declarations in the class header file:
<PRE><CODE>//{{AFX_DISP
..
//}}AFX_DISP
</CODE></PRE>
</LI>

	<LI>Automation mapping in the class implementation file:
<PRE><CODE>//{{AFX_DISP_MAP
..
//}}AFX_DISP_MAP
</CODE></PRE>
</LI>
</UL>

<P>For more information see <A HREF="_core_working_with_dialog_box_data.htm">Working with Dialog Box Data</A>.</P>
</font>
</BODY>
</HTML>
