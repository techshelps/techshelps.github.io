<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning (levels 1 and 3) C4115</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c4115"></A><SUP></SUP>Compiler Warning (levels 1 and 3) C4115</H1>

<P class=dt><B>'type' : named type definition in parentheses</B></P>

<P>The given symbol was used to define a structure, union, or enumerated type inside a parenthetical expression. The scope of this definition may be unexpected.</P>

<P>In a C function call, the definition has global scope. In a C++ function call, the definition has the same scope as the function being called.</P>

<P>This warning can also be caused by declarators within parentheses (such as prototypes) that are not parenthetical expressions.</P>

<P>This is a level-1 warning with C++ programs or under the /Za ANSI- compatibility command-line option. It is level 3 otherwise.</P>

<P>The following example causes this warning:</P>

<PRE><CODE>void func(struct S *);  /* warning */
</CODE></PRE>

<P>This warning can be avoided by declaring or defining the structure outside of the parentheses before the line that caused this warning, as in:</P>

<PRE><CODE>struct S;
void func(struct S *);
</CODE></PRE>

<P>or:</P>

<PRE><CODE>struct S
{
   int mem;
};
void func(struct S *);
</CODE></PRE>
</font>
</BODY>
</HTML>
