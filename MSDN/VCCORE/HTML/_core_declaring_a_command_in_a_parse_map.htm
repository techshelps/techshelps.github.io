<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declaring a Command in a Parse Map</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>
<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_declaring_a_command_in_a_parse_map"></A>Declaring a Command in a Parse Map</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_internet_support.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_internet_tasks.htm">How Do I</A></P>

<P>The rest of this article is a continuing example of a parse map. The code examples demonstrate the parsing of a URL string, specifying default and required parameters, and using optional parameters. The example uses these elements:</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=28%><B>Element</B></TD>
<TD class=label width=72%><B>Name</B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Server</TD>
<TD width=72%><CODE>MOOSE</CODE></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Server DLL</TD>
<TD width=72%><CODE>SURVEY.DLL</CODE></TD>
</TR>

<TR VALIGN="top">
<TD width=28%><B>CHttpServer</B> object</TD>
<TD width=72%><CODE>CServerDerived</CODE></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>Command</TD>
<TD width=72%><CODE>RegisterUser</CODE></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>User name</TD>
<TD width=72%><CODE>Richard M. Jones</CODE></TD>
</TR>
</TABLE><BR>

<P>The following parse map declares a single command, <CODE>RegisterUser</CODE>. This command accepts only one parameter: a pointer to a string:</P>

<PRE><CODE>BEGIN_PARSE_MAP( CServerDerived, CHttpServer )
ON_PARSE_COMMAND( RegisterUser, CServerDerived, ITS_PSTR )
END_PARSE_MAP( CServerDerived )
</CODE></PRE>

<P>The corresponding command handler, <CODE>RegisterUser</CODE>, is a member of the <CODE>CServerDerived</CODE> class, and must be declared as follows:</P>

<PRE><CODE>CServerDerived::RegisterUser( CHttpServerContext* pCtxt, LPCTSTR pstrParameter )
{
   // do work here!
}
</CODE></PRE>

<P class=indent>The first parameter of the handling member function must be a pointer to a <B>CHttpServerContext </B>object.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_passing_a_string_from_the_url.htm">Passing a String from the URL</A><BR><BR></LI>

	<LI><A HREF="_core_naming_parameters_with_on_parse_command_params.htm">Naming Parameters with ON_PARSE_COMMAND_PARAMS</A><BR><BR></LI>

	<LI><A HREF="_core_managing_required_and_optional_parameters.htm">Managing Required and Optional Parameters</A></LI>
</UL>
</font>
</BODY>
</HTML>
