<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CCustomAppWiz::LoadTemplate</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_begin_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_appwiz_CUSTOMWZ">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_ccustomappwiz.3a3a.loadtemplate"></A>CCustomAppWiz::LoadTemplate</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_appwizard_programming_reference.htm">Overviews</A>  |&nbsp; <A HREF="_core_creating_custom_appwizards.htm">How Do I</A> |&nbsp; <A HREF="_core_details.3a_.beginning_your_program.htm">Details</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Creating a Custom AppWizard is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_3.Click()">Visual C++ Editions</A>.</P>

<P><B>virtual LPCTSTR LoadTemplate( LPCTSTR </B><I>lpszTemplateName</I><B>, DWORD&amp; </B><I>rdwSize</I><B>, HINSTANCE </B><I>hInstance</I><B> = NULL );</B></P>

<P class=label><B>Return Value</B></P>

<P>A pointer to the loaded custom resource template for use by <A HREF="_core_ccustomappwiz.3a3a.copytemplate.htm">CCustomAppWiz::CopyTemplate</A> or <A HREF="_core_ccustomappwiz.3a3a.processtemplate.htm">CCustomAppWiz::ProcessTemplate</A>.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>lpszTemplateName</I></P>

<P class=indent>A pointer to a string that contains the name (such as “NEWPROJ.INF” or “RESOURCE.H”) of a custom resource template. The custom resource has a type of “TEMPLATE”. </P>

<P class=dt><I>rdwSize</I></P>

<P class=indent>The size of the custom resource template is returned in this parameter. <B>LoadTemplate</B> provides this value for use by <B>CCustomAppWiz::CopyTemplate</B> and <B>CCustomAppWiz::ProcessTemplate</B>. </P>

<P class=dt><I>hInstance</I></P>

<P class=indent>A pointer that can either be <B>NULL</B> or be the handle of a Win32 module (a DLL or executable file) that you specify. In either case, <I>hInstance</I> informs <B>LoadTemplate</B> where it can find the custom resource template named by <I>lpszTemplateName</I>. </P>

<P class=label><B>Remarks</B></P>

<P>After the user clicks <B>OK</B> in the custom AppWizard’s <B>New Project Information</B> dialog box, <B>LoadTemplate</B> finds, locks, and loads into memory the custom resource of type “TEMPLATE” that is named by <I>lpszTemplateName</I>.</P>

<P>If <I>hInstance</I> is <B>NULL</B>, the base-class implementation of <B>LoadTemplate </B>first looks in your custom AppWizard’s DLL for the custom resource template named by <I>lpszTemplateName</I>, and then, if the template is not there, among the MFC AppWizard’s custom resource templates. If <I>hInstance</I> is not <B>NULL</B>, the base-class implementation of <B>LoadTemplate</B> looks in the Win32 module <I>hInstance</I>. </P>

<P>You can override <B>LoadTemplate</B> to load templates from sources other than your custom AppWizard’s DLL or the MFC AppWizard DLLs. For more information on this process, see the implementation of <B>LoadTemplate</B> in the sample code for CUSTMWZ.AWX in the Microsoft Visual Studio\Common\msdev98\bin\ide directory.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_ccustomappwiz.htm">CCustomAppWiz Overview</A>, <A HREF="_core_ccustomappwiz_class_members.htm">Class Members</A>, <A HREF="_core_ccustomappwiz.3a3a.copytemplate.htm">CCustomAppWiz::CopyTemplate</A>, <A HREF="_core_ccustomappwiz.3a3a.processtemplate.htm">CCustomAppWiz::ProcessTemplate</A>, <A HREF="_core_ccustomappwiz.3a3a.postprocesstemplate.htm">CCustomAppWiz::PostProcessTemplate</A>, <A HREF="_core_understanding_custom_resource_templates.htm">Understanding Custom Resource Templates</A>, <A HREF="_core_understanding_text_templates.htm">Understanding Text Templates</A></P>
</font>
</BODY>
</HTML>
