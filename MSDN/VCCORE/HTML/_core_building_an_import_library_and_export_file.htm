<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Building an Import Library and Export File</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_building_an_import_library_and_export_file"></A><SUP></SUP>Building an Import Library and Export File</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_additional_command.2d.line_build_tools.3a_.overview.htm">Overviews</A></P>

<P>To build an import library and export file, use the following syntax:</P>

<P>LIB /DEF[:<I>deffile</I>] [<I>options</I>] [<I>objfiles</I>] [<I>libraries</I>]</P>

<P>When /DEF is specified, LIB creates the output files from export specifications that are passed in the LIB command. There are three methods for specifying exports, listed in recommended order of use:

<OL>
	<LI>A <B>__declspec(dllexport)</B> definition in one of the <I>objfiles</I> or <I>libraries</I><BR><BR></LI>

	<LI>A specification of /EXPORT:<I>name</I> on the LIB command line<BR><BR></LI>

	<LI>A definition in an <B>EXPORTS </B>statement in a <I>deffile</I></LI>
</OL>

<P>These are the same methods you use to specify exports when linking an exporting program. A program can use more than one method. You can specify parts of the LIB command (such as multiple <I>objfiles</I> or /EXPORT specifications) in a command file in the LIB command, just as you can in a LINK command.</P>

<P>The following options apply to building an import library and export file:</P>

<P class=dt>/DEBUGTYPE:{CV|COFF|BOTH}</P>

<P class=indent>Sets the format of debugging information. Specify CV for Microsoft Symbolic Debugging Information, required by Visual C++. Specify COFF for Common Object File Format debugging information used by some other debuggers. Specify BOTH for both COFF debugging information and Microsoft format debugging information.</P>

<P class=dt>/OUT:<I>import</I></P>

<P class=indent>Overrides the default output filename for the <I>import</I> library being created. When /OUT is not specified, the default name is the base name of the first object file or library in the LIB command and the extension .LIB. The export file is given the same base name as the import library and the extension .EXP.</P>

<P class=dt>/EXPORT:<I>entryname</I>[=<I>internalname</I>][,@<I>ordinal</I>[,<B>NONAME</B>]][,<B>DATA</B>]</P>

<P class=indent>Exports a function from your program to allow other programs to call the function. You can also export data (using the <B>DATA </B>keyword). Exports are usually defined in a DLL.</P>

<P class=tl>The <I>entryname</I> is the name of the function or data item as it is to be used by the calling program. Optionally, you can specify the <I>internalname</I> as the function known in the defining program; by default, <I>internalname</I> is the same as <I>entryname</I>. The <I>ordinal</I> specifies an index into the export table in the range 1 through 65,535; if you do not specify <I>ordinal</I>, LIB assigns one. The <B>NONAME </B>keyword exports the function only as an ordinal, without an <I>entryname</I>. The <B>DATA </B>keyword is used to export data-only objects.</P>
<P class=dt>/INCLUDE:<I>symbol</I></P>

<P class=indent>Adds the specified symbol to the symbol table. This option is useful for forcing the use of a library object that otherwise would not be included.</P>
</font>
</BODY>
</HTML>
