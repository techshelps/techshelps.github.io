<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>main, wmain</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_main.2c_.wmain"></A><SUP></SUP>main, wmain</H1>

<P><B>main( int</B> argc<B>,</B> <B>char *</B>argv<B>[ ],</B> <B>char *</B>envp<B>[ ] )</B><BR>
<B>{</B><BR>
<I>program-statements</I><BR>
<B>}</B></P>

<P><B>wmain( int</B> argc<B>, wchar_t *</B>argv<B>[ ], wchar_t *</B>envp<B>[ ] )</B><BR>
<B>{</B><BR>
<I>program-statements</I><BR>
<B>}</B></P>

<P>The <B>main</B> function marks the beginning and end of program execution. A C or C++ program must have one function named <B>main</B>. If your code adheres to the Unicode programming model, you can use the wide-character version of <B>main</B>, which is <B>wmain</B>.</P>

<P>The <B>main</B> and <B>wmain</B> functions can take the following three optional arguments, traditionally called <CODE>argc</CODE>, <CODE>argv</CODE>, and <CODE>envp</CODE> (in that order):</P>

<P class=dt><CODE>argc</CODE></P>

<P class=indent>An integer specifying how many arguments are passed to the program from the command line. Because the program name is considered an argument, argc is at least 1.</P>

<P class=dt><CODE>argv</CODE></P>

<P class=indent>An array of null-terminated strings. It can be declared as an array of pointers to <B>char</B> <B>(char</B> *argv[ ] or <B>wchar_t</B> *argv[ ] for <B>wmain)</B> or as a pointer to pointers to <B>char</B> <B>(char</B> **argv or <B>wchar_t</B> **argv for <B>wmain)</B>. The first string <B>(</B>argv[0]<B>)</B> is the program name, and each following string is an argument passed to the program from the command line. The last pointer <B>(</B>argv[argc]<B>)</B> is NULL.</P>

<P><B>Microsoft Specific —&gt;</B></P>

<P class=dt><CODE>envp</CODE></P>

<P class=indent>A pointer to an array of environment strings. It can be declared as an array of pointers to <B>char</B> <B>(char</B> *envp[ ]<B>)</B> or as a pointer to pointers to <B>char</B> <B>(char</B> **envp<B>)</B>. If your program uses <B>wmain</B> instead of <B>main</B>, use the <B>wchar_t</B> data type instead of <B>char</B>. The end of the array is indicated by a NULL pointer. The environment block passed to <B>main</B> and <B>wmain</B> is a “frozen” copy of the current environment. If you subsequently change the environment via a call to <B>putenv</B> or <B>_wputenv</B>, the current environment (as returned by <B>getenv</B>/<B>_wgetenv</B> and the <B>_environ</B>/ <B>_wenviron</B> variable) will change, but the block pointed to by envp will not change. This argument is ANSI compatible in C, but not in C++.</P>

<P><B>END Microsoft Specific</B></P>
</font>
</BODY>
</HTML>
