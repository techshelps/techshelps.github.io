<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Jumping to Labels in Inline Assembly</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_jumping_to_labels_in_inline_assembly"></A>Jumping to Labels in Inline Assembly</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_assembler_.28.inline.293a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_assembler_.28.inline.29_.tasks.htm">How Do I</A></P>

<P>Like an ordinary C or C++ label, a label in an <B>__asm</B> block has scope throughout the function in which it is defined (not only in the block). Both assembly instructions and <B>goto</B> statements can jump to labels inside or outside the <B>__asm</B> block.</P>

<P>Labels defined in <B>__asm</B> blocks are not case sensitive; both <B>goto</B> statements and assembly instructions can refer to those labels without regard to case. C and C++ labels are case sensitive only when used by <B>goto</B> statements. Assembly instructions can jump to a C or C++ label without regard to case. </P>

<P>The following code shows all the permutations:</P>

<PRE><CODE>void func( void )
{
   goto C_Dest;  /* Legal: correct case   */
   goto c_dest;  /* Error: incorrect case */

   goto A_Dest;  /* Legal: correct case   */
   goto a_dest;  /* Legal: incorrect case */

   __asm
   {
      jmp C_Dest ; Legal: correct case
      jmp c_dest ; Legal: incorrect case

      jmp A_Dest ; Legal: correct case
      jmp a_dest ; Legal: incorrect case

      a_dest:    ; __asm label
   }

   C_Dest:       /* C label */ 
   return;
}
</CODE></PRE>

<P>Don’t use C library function names as labels in <B>__asm</B> blocks. For instance, you might be tempted to use <CODE>exit</CODE> as a label, as follows:</P>

<PRE><CODE>; BAD TECHNIQUE: using library function name as label
jne exit
   .
   .
   .
exit:
   ; More __asm code follows
</CODE></PRE>

<P>Because <B>exit</B> is the name of a C library function, this code might cause a jump to the <B>exit</B> function instead of to the desired location.</P>

<P>As in MASM programs, the dollar symbol (<B>$</B>) serves as the current location counter. It is a label for the instruction currently being assembled. In <B>__asm</B> blocks, its main use is to make long conditional jumps:</P>

<PRE><CODE>jne $+5 ; next instruction is 5 bytes long
jmp farlabel
; $+5
   .
   .
   .
farlabel:
</CODE></PRE>
</font>
</BODY>
</HTML>
