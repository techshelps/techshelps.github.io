<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Recordset (ODBC)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Enroll tutorial">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CRecordset">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.Requery">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CRecordset.3a3a.Open">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_recordset_.28.odbc.29"></A>Recordset (ODBC)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_databases.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_odbc_database_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_databases.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_odbc_database_sample_list.htm">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_odbc_driver_list.htm">ODBC Driver List</A></P>

<P>This article applies to the MFC ODBC classes. For DAO recordsets, see the article <A HREF="_core_dao_recordset.htm">DAO Recordset</A>.</P>

<P>A <A HREF="JavaScript:hhobj_3.Click()">CRecordset</A> object represents a set of records selected from a data source. The records can be from:

<UL type=disc>
	<LI>A table<BR><BR></LI>

	<LI>A query<BR><BR></LI>

	<LI>A stored procedure that accesses one or more tables</LI>
</UL>

<P>An example of a recordset based on a table is “all customers,” which accesses a Customer table. An example of a query is “all invoices for Joe Smith.” An example of a recordset based on a stored procedure (sometimes called a predefined query) is “all of the delinquent accounts,” which invokes a stored procedure in the back-end database. A recordset can join two or more tables from the same data source, but not from different data sources.</P>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>Some ODBC drivers support views of the database. A view in this sense is a query originally created with the SQL <B>CREATE VIEW</B> statement. The wizards currently do not support views, but it is possible to code this support yourself.</P>

<H2><A NAME="_core_recordset_capabilities"></A>Recordset Capabilities</H2>

<P>All recordset objects share the following capabilities:

<UL type=disc>
	<LI>If the data source is not read-only, you can specify that your recordset be <A HREF="_core_recordset.3a_.adding.2c_.updating.2c_.and_deleting_records_.28.odbc.29.htm">updatable</A>, <A HREF="_core_recordset.3a_.adding.2c_.updating.2c_.and_deleting_records_.28.odbc.29.htm">appendable</A>, or read-only. If the recordset is updatable, you can choose either pessimistic or optimistic <A HREF="_core_recordset.3a_.locking_records_.28.odbc.29.htm">locking</A> methods, provided the driver supplies the appropriate locking support. If the data source is read-only, the recordset will be read-only.<BR><BR></LI>

	<LI>You can call member functions to <A HREF="_core_recordset.3a_.scrolling_.28.odbc.29.htm">scroll</A> through the selected records.<BR><BR></LI>

	<LI>You can <A HREF="_core_recordset.3a_.filtering_records_.28.odbc.29.htm">filter</A> the records to constrain which records are selected from those available.<BR><BR></LI>

	<LI>You can <A HREF="_core_recordset.3a_.sorting_records_.28.odbc.29.htm">sort</A> the records in ascending or descending order, based on one or more columns.<BR><BR></LI>

	<LI>You can <A HREF="_core_recordset.3a_.parameterizing_a_recordset_.28.odbc.29.htm">parameterize</A> the recordset in order to qualify the recordset selection at run time.</LI>
</UL>

<H2><A NAME="_core_snapshots_and_dynasets"></A>Snapshots and Dynasets</H2>

<P>There are two principal kinds of recordsets: <A HREF="_core_snapshot.htm">snapshots</A> and <A HREF="_core_dynaset.htm">dynasets</A>. Both are supported by class <B>CRecordset</B>. Each shares the common characteristics of all recordsets, but each also extends the common functionality in its own specialized way. Snapshots provide a static view of the data and are useful for reports and other situations in which you want a view of the data as it existed at a particular time. Dynasets are useful when you want updates made by other users to be visible in the recordset without having to requery or refresh the recordset. Snapshots and dynasets can be updatable or read-only. In order to reflect records added or deleted by other users, call <A HREF="JavaScript:hhobj_4.Click()">CRecordset::Requery</A>.</P>

<P><B>CRecordset</B> also allows for two other kinds of recordsets: dynamic recordsets and forward-only recordsets. Dynamic recordsets are similar to dynasets; however, dynamic recordsets reflect any records added or deleted without calling <B>CRecordset::Requery</B>. For this reason, dynamic recordsets are generally expensive with respect to processing time on the DBMS, and many ODBC drivers do not support them. In contrast, forward-only recordsets provide the most efficient method of data access for recordsets that don't require updates or backward scrolling. For example, you might use a forward-only recordset to migrate data from one data source to another, where you only need to move through the data in a forward direction. To use a forward-only recordset, you must do both of the following:

<UL type=disc>
	<LI>Pass the option <B>CRecordset::forwardOnly</B> as the <I>nOpenType</I> parameter of the <A HREF="JavaScript:hhobj_5.Click()">Open</A> member function.<BR><BR></LI>

	<LI>Specify <B>CRecordset::readOnly</B> in the <I>dwOptions</I> parameter of <B>Open</B>.</LI>
</UL>

<P><B><B>Important</B></B>&nbsp;&nbsp;&nbsp;For information about ODBC driver requirements for dynaset support, see the article <A HREF="_core_odbc.htm">ODBC</A>. For a list of ODBC drivers included in this version of Visual C++ and for information about obtaining additional drivers, see the article <A HREF="_core_odbc_driver_list.htm">ODBC Driver List</A>.</P>

<H2><A NAME="_core_your_recordsets"></A>Your Recordsets</H2>

<P>For every distinct table, view, or stored procedure you wish to access, you typically define a class derived from <B>CRecordset</B>, normally with the help of ClassWizard. (The exception is a database join, in which one recordset represents columns from two or more tables.) When you derive a recordset class with ClassWizard, you enable the record field exchange (RFX) mechanism or the bulk record field exchange (Bulk RFX) mechanism, which are similar to the dialog data exchange (DDX) mechanism. RFX and Bulk RFX simplify the transfer of data from the data source into your recordset; RFX additionally transfers data from your recordset to the data source. For more information, see the articles <A HREF="_core_record_field_exchange_.28.rfx.29.htm">Record Field Exchange (RFX)</A> and <A HREF="_core_recordset.3a_.fetching_records_in_bulk_.28.odbc.29.htm">Recordset: Fetching Records in Bulk (ODBC)</A>.</P>

<P>A recordset object gives you access to all the selected records. You scroll through the multiple selected records using <B>CRecordset</B> member functions, such as <B>MoveNext</B> and <B>MovePrev</B>. At the same time, a recordset object represents only one of the selected records, the “current record.” You can examine the fields of the current record by declaring recordset class member variables that correspond to columns of the table or of the records that result from the database query. ClassWizard helps you declare these recordset class data members. You update a record by scrolling to it — making it the current record — and changing the values of these data members. For details about recordset data members, see the article <A HREF="_core_recordset.3a_.architecture_.28.odbc.29.htm">Recordset: Architecture (ODBC)</A>. </P>

<P>The articles listed below explain the details of using recordset objects. The articles are listed in functional categories and a natural browse order to permit sequential reading.</P>

<P><I>Articles about the mechanics of opening, reading, and closing recordsets</I>

<UL type=disc>
	<LI><A HREF="_core_recordset.3a_.architecture_.28.odbc.29.htm">Recordset: Architecture (ODBC)</A> <BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.declaring_a_class_for_a_table_.28.odbc.29.htm">Recordset: Declaring a Class for a Table (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.creating_and_closing_recordsets_.28.odbc.29.htm">Recordset: Creating and Closing Recordsets (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.scrolling_.28.odbc.29.htm">Recordset: Scrolling (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.bookmarks_and_absolute_positions_.28.odbc.29.htm">Recordset: Bookmarks and Absolute Positions (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.filtering_records_.28.odbc.29.htm">Recordset: Filtering Records (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.sorting_records_.28.odbc.29.htm">Recordset: Sorting Records (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.parameterizing_a_recordset_.28.odbc.29.htm">Recordset: Parameterizing a Recordset (ODBC)</A></LI>
</UL>

<P><I>Articles about the mechanics of modifying recordsets</I>

<UL type=disc>
	<LI><A HREF="_core_recordset.3a_.adding.2c_.updating.2c_.and_deleting_records_.28.odbc.29.htm">Recordset: Adding, Updating, and Deleting Records (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.locking_records_.28.odbc.29.htm">Recordset: Locking Records (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.requerying_a_recordset_.28.odbc.29.htm">Recordset: Requerying a Recordset (ODBC)</A></LI>
</UL>

<P><I>Articles about somewhat more advanced techniques</I>

<UL type=disc>
	<LI><A HREF="_core_recordset.3a_.performing_a_join_.28.odbc.29.htm">Recordset: Performing&nbsp; a Join (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.declaring_a_class_for_a_predefined_query_.28.odbc.29.htm">Recordset: Declaring a Class for a Predefined Query (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.dynamically_binding_data_columns_.28.odbc.29.htm">Recordset: Dynamically Binding Data Columns (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.fetching_records_in_bulk_.28.odbc.29.htm">Recordset: Fetching Records in Bulk (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.working_with_large_data_items_.28.odbc.29.htm">Recordset: Working with Large Data Items (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.obtaining_sums_and_other_aggregate_results_.28.odbc.29.htm">Recordset: Obtaining SUMs and Other Aggregate Results (ODBC)</A></LI>
</UL>

<P><I>Articles about how recordsets work</I>

<UL type=disc>
	<LI><A HREF="_core_recordset.3a_.how_recordsets_select_records_.28.odbc.29.htm">Recordset: How Recordsets Select Records (ODBC)</A><BR><BR></LI>

	<LI><A HREF="_core_recordset.3a_.how_recordsets_update_records_.28.odbc.29.htm">Recordset: How Recordsets Update Records (ODBC)</A></LI>
</UL>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_classwizard.3a_.creating_a_recordset_class.htm">ClassWizard: Creating a Recordset Class</A>, <A HREF="_core_transaction_.28.odbc.29.htm">Transaction (ODBC)</A> </P>
</font>
</BODY>
</HTML>
