<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAO Record Field Exchange: Double Buffering Records</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Daoenrol tutorial">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.SetFieldDirty">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.SetFieldNull">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.m_bCheckCacheForDirtyFields">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_DFX_Text">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_DFX_Binary">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_DFX_Short">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.m_bCheckCacheForDirtyFields">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.DoFieldExchange">
</OBJECT>
<OBJECT ID="hhobj_12" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.Edit">
</OBJECT>
<OBJECT ID="hhobj_13" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.AddNew">
</OBJECT>
<OBJECT ID="hhobj_14" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.GetFieldValue">
</OBJECT>
<OBJECT ID="hhobj_15" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDaoRecordset.3a3a.m_bCheckCacheForDirtyFields">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_dao_record_field_exchange.3a_.double_buffering_records"></A>DAO Record Field Exchange: Double Buffering Records</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_databases.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_dao_database_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_databases.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_dao_database_sample_list.htm">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_odbc_driver_list.htm">ODBC Driver List</A></P>

<P>This article explains the double buffering mechanism that MFC uses to detect changes to the current record in a recordset. Topics covered include:

<UL type=disc>
	<LI><A HREF="#_core_double_buffering.3a_.definition">Double buffering: definition</A><BR><BR></LI>

	<LI><A HREF="#_core_using_double_buffering">Using double buffering</A><BR><BR></LI>

	<LI><A HREF="#_core_effects_of_double_buffering">Effects of double buffering</A></LI>
</UL>

<P>In the DAO database classes, records are double buffered by default. For information about turning double buffering off, see <A HREF="#_core_using_double_buffering">Using Double Buffering</A>.</P>



<H2><A NAME="_core_double_buffering.3a_.definition"></A>Double Buffering: Definition</H2>

<P>In MFC's <A HREF="JavaScript:hhobj_3.Click()">CDaoRecordset</A> class, double buffering is a mechanism that simplifies detecting when the current record in a recordset has changed. Using double buffering with your DAO recordsets reduces the amount of work you have to do when adding new records and editing existing records.</P>

<P>By default, your MFC DAO recordsets keep a second copy of the edit buffer (the field data members of the recordset class, taken collectively; DAO Help calls the corresponding buffer a copy buffer). As you make changes to the data members, MFC compares them to the copy (the double buffer) to detect the changes. </P>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>Not all fields are double buffered by default. Variable length fields, such as those containing binary data, are not. But you can choose to double buffer them if you wish. Note that this can affect performance if the binary data is large.</P>

<P>The alternative to double buffering — not keeping a copy of the data — requires you to make additional function calls when you edit a field of the current record. </P>

<P>For example, suppose your user changes the name of her contact person at company X. With double buffering, MFC detects the change for you. Without it, you must accompany the change with a call to <A HREF="JavaScript:hhobj_4.Click()">CDaoRecordset::SetFieldDirty</A> and a call to <A HREF="JavaScript:hhobj_5.Click()">SetFieldNull</A> (with a parameter of <B>FALSE</B>). If a field is supposed to be Null, you must explicitly call <B>SetFieldNull</B>. You must make these calls for every change to a record field.</P>

<P>In general, you get better performance with double buffering off, but double buffering is a considerable convenience when performance is not critical.</P>



<H2><A NAME="_core_using_double_buffering"></A>Using Double Buffering</H2>

<P>Double buffering is the default for recordset fields of most data types, but not for the variable-length data types, such as text and binary. Because data of those types is potentially very large, storing a second copy of the data is not a good default. However, if you know your data will not be prohibitively large, you can turn double buffering on for these types as well. You can also choose to turn double buffering off. You can control double buffering for the whole recordset or on a field-by-field basis.</P>

<P>Overall double buffering is controlled by the <A HREF="JavaScript:hhobj_6.Click()">CDaoRecordset::m_bCheckCacheForDirtyFields</A> data member. Field-by-field double buffering is controlled by the <I>dwBindOptions</I> parameter to any of the DFX functions (<A HREF="JavaScript:hhobj_7.Click()">DFX_Text</A>, <A HREF="JavaScript:hhobj_8.Click()">DFX_Binary</A>, <A HREF="JavaScript:hhobj_9.Click()">DFX_Short</A>, and so on).</P>

<P class=label><B>To turn double buffering on or off for the whole recordset</B>

<UL type=disc>
	<LI>Set the value of <A HREF="JavaScript:hhobj_10.Click()">m_bCheckCacheForDirtyFields</A> to <B>AFX_DAO_ENABLE_FIELD_CACHE</B> (on) or <B>AFX_DAO_DISABLE_FIELD_CACHE</B> (off). A typical place to do this is in the recordset constructor.</LI>
</UL>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>If this data member is <B>TRUE</B> (the default), double buffering is on for all field data members except those of variable-length data type (binary, long binary, and text). If this data member is <B>FALSE</B>, double buffering is off for all fields, regardless of data type.</P>

<P class=label><B>To turn double buffering on or off for a specific field in the recordset</B>

<UL type=disc>
	<LI>In the DFX function call for the field, set the <I>dwBindOptions</I> parameter to <B>TRUE</B> (on) or <B>FALSE</B> (off).</LI>
</UL>

<P>DFX function calls are made in your recordset class's <A HREF="JavaScript:hhobj_11.Click()">DoFieldExchange</A> member function. See the article <A HREF="_core_dao_record_field_exchange.3a_.working_with_the_wizard_code.htm">DAO Record Field Exchange: Working with the Wizard Code</A> for a discussion of <B>DoFieldExchange</B>.</P>

<P>Possible values for <I>dwBindOptions</I> are:

<UL type=disc>
	<LI><B>AFX_DAO_ENABLE_FIELD_CACHE</B>&nbsp;&nbsp;&nbsp;(Default) Double buffering is on for the field.<BR><BR></LI>

	<LI><B>AFX_DAO_DISABLE_FIELD_CACHE</B>&nbsp;&nbsp;&nbsp;Double buffering is off for the field.</LI>
</UL>

<P>In the following example, double buffering is on for the first field but explicitly turned off for the second field.</P>

<PRE><CODE>void CSections::DoFieldExchange(CDaoFieldExchange* pFX)
{
    //{{AFX_FIELD_MAP(CSections)
    pFX-&gt;SetFieldType(CDaoFieldExchange::outputColumn);
    DFX_Short(pFX, "Capacity", m_Capacity);
    DFX_Short(pFX, "Enrollment", m_Enrollment, 
                         AFX_DAO_DISABLE_FIELD_CACHE);
    //}}AFX_FIELD_MAP
}
</CODE></PRE>

<H2><A NAME="_core_effects_of_double_buffering"></A>Effects of Double Buffering</H2>

<P>If double buffering is on, as it is by default, record data is double buffered when:

<UL type=disc>
	<LI>You call <A HREF="JavaScript:hhobj_12.Click()">CDaoRecordset::Edit</A> to edit the fields of the current record.<BR><BR></LI>

	<LI>You call <A HREF="JavaScript:hhobj_13.Click()">CDaoRecordset::AddNew</A> to add a new record to the recordset.</LI>
</UL>

<P>MFC copies the field data members of the recordset into a buffer (the double buffer). Then it uses the copy to detect changes to the original field data members in the recordset. For more discussion of how double buffering fits into the record updating process, see the article <A HREF="_core_dao_record_field_exchange.3a_.how_dfx_works.htm">DAO Record Field Exchange: How DFX Works</A>.</P>

<P class=indent><B><B>Tip&nbsp;&nbsp;&nbsp;</B></B>To improve performance you might sometimes prefer to turn double buffering off. However, alternatives include:

<UL type=disc>
	<LI>Creating queries that only return the fields and rows that you actually need.<BR><BR></LI>

	<LI>Specifying in your recordset only the fields that you will always use. Then you can supplement those fields by calling <A HREF="JavaScript:hhobj_14.Click()">CDaoRecordset::GetFieldValue</A> at appropriate times to retrieve the fields you need only occasionally. See the article <A HREF="_core_dao_recordset.3a_.binding_records_dynamically.htm">DAO Recordset: Binding Records Dynamically</A>.</LI>
</UL>

<P>In the <I>Class Library Reference</I>, see <A HREF="JavaScript:hhobj_15.Click()">CDaoRecordset::m_bCheckCacheForDirtyFields</A>.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_dao.3a_.where_is.......htm">DAO: Where Is...</A>, <A HREF="_core_dao_recordset.htm">DAO Recordset</A>, <A HREF="_core_dao_record_field_exchange_.28.dfx.29.htm">DAO Record Field Exchange (DFX)</A>, <A HREF="_core_dao_record_field_exchange.3a_.working_with_the_wizard_code.htm">DAO Record Field Exchange: Working with the Wizard Code</A></P>
</font>
</BODY>
</HTML>
