<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Forms-Based Applications</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_scribble">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble view">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CFormView">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcconformtopics">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="dialog editor">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="classwiz">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CScrollView">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_core_Defining_Member_Variables_for_DDX">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CFormView">
</OBJECT>
<OBJECT ID="hhobj_11" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_core_Derived_View_Classes">
</OBJECT>
<OBJECT ID="hhobj_12" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcconformtopics">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcconformsbasedapplications"></A>Forms-Based Applications</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_document.2f.view.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_document.2f.view_tasks.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_3.Click()">Tutorial</A> </P>

<P><A HREF="JavaScript:hhobj_4.Click()">CFormView</A> is the base class for form views. A form view is essentially a view that contains controls. A forms-based application lets the user create and use one or more forms within the application, as do the AppWizards and other dialog-based applications. The view class of a forms-based application is based on one of the form-style classes such as <B>CFormView</B>, <B>CRecordView</B>, <B>CDaoRecordView</B>, or <B>CDialog</B>.</P>

<P>To create a forms-based application, use one of the following procedures:

<UL type=disc>
	<LI><A HREF="vcconcreatingforms-basedapplication.htm">Create an application using MFC AppWizard</A>. Either create a dialog-based application or select a form-style class as the view's base class.<BR><BR></LI>

	<LI><A HREF="JavaScript:hhobj_5.Click()">Insert a new form into an existing MFC application</A>. Even if your application did not initially support forms, Visual C++ will add this support when you insert a new form.</LI>
</UL>

<P>The procedures above are preferred for creating forms-based applications. Because these procedures automatically and correctly implement the forms-based architecture, you should never have to do so by hand. However, if you need to create a forms-based application without using the AppWizard or the <B>New Form</B> command on the <B>Insert</B> menu, the following steps are provided for your information. These steps are the same as those that the MFC AppWizard performs in creating a <B>CFormView</B>-based application.</P>

<P class=atl><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The following steps do not apply to <B>CDialog</B>-based applications. For dialog-based applications, the MFC AppWizard creates a <B>CDialog</B>-based class and a dialog resource with appropriate styles as described in step 1 below.</p>
<OL>
	<LI>Creating a view based on <B>CFormView</B> is similar to creating a dialog box. Use the dialog editor to design the dialog box.<BR><BR></LI>

	<LI>In the <B>Styles </B>and <B>More Styles </B>property pages, set the following properties:
<UL type=disc>
	<LI>In the <B>Style </B>box, select <B>Child </B>(<B>WS_CHILD</B> on).<BR><BR></LI>

	<LI>In the <B>Border </B>box, select <B>None </B>(<B>WS_BORDER</B> off).<BR><BR></LI>

	<LI>Clear the <B>Visible </B>check box (<B>WS_VISIBLE</B> off).<BR><BR></LI>

	<LI>Clear the <B>Titlebar </B>check box (<B>WS_CAPTION</B> off).</LI>
</UL>

<P class=tl>These steps are necessary because a form view is not a true dialog box. For more information about creating a dialog-box resource, see <A HREF="JavaScript:hhobj_6.Click()">Dialog Editor</A>.</P></LI>

	<LI>Create a view class.
<P class=tl>With your dialog template open, run ClassWizard and choose <B>CFormView</B> as the class type when you are filling in the <B>Add Class</B> dialog box. ClassWizard creates a <B>CFormView</B>-derived class and connects it to the dialog template you just designed. This connection is established in the constructor for your class; ClassWizard generates a call to the base-class constructor, <B>CFormView::CFormView</B>, and passes the resource ID of your dialog template. For example:</P>
<PRE><CODE>CMyFormView::CMyFormView()
    : CFormView( CMyFormView::IDD )
{
    //{{AFX_DATA_INIT( CMyFormView )
    // NOTE: the ClassWizard will add member
    // initialization here
    //}}AFX_DATA_INIT

    // Other construction code, such as data initialization
}
</CODE></PRE>

<P class=atl><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;If you choose not to use ClassWizard, you must define the appropriate ID you supply to the <B>CFormView</B> constructor (that is, <CODE>CMyFormView::IDD</CODE> is not predefined). ClassWizard declares <CODE>IDD</CODE> as an <B>enum</B> value in the class it creates for you.</p>
<P class=tl>If you want to define member variables in your view class that correspond to the controls in your form view, use the <B>Add Variables</B> button on the <B>Member Variables</B> tab of the ClassWizard. This allows you to use the dialog data exchange (DDX) mechanism. If you want to define message handlers for control-notification messages, use the <B>Add Function</B> button on the <B>Message Maps</B> tab of the ClassWizard. For more information see <A HREF="JavaScript:hhobj_7.Click()">Using ClassWizard</A> in the <I>Visual C++ Programmer's Guide</I>.</P></LI>

	<LI>Override the <B>OnUpdate</B> member function.
<P class=tl>The <B>OnUpdate</B> member function is defined by <B>CView</B> and is called to update the form view’s appearance. Override this function to update the member variables in your view class with the appropriate values from the current document. Then, if you are using DDX, use the <B>UpdateData</B> member function (defined by <B>CWnd</B>) with an argument of <B>FALSE</B> to update the controls in your form view.</P>
<P class=tl>The <B>OnInitialUpdate</B> member function (also defined by <B>CView</B>) is called to perform one-time initialization of the view. <B>CFormView</B> overrides this function to use DDX to set the initial values of the controls you have mapped using ClassWizard. Override <B>OnInitialUpdate</B> if you want to perform custom initialization.</P></LI>

	<LI>Implement a member function to move data from your view to your document.
<P class=tl>This member function is typically a message handler for a control-notification message or for a menu command. If you are using DDX, call the <B>UpdateData</B> member function to update the member variables in your view class. Then move their values to the document associated with the form view.</P></LI>

	<LI>Override the <B>OnPrint</B> member function (optional).
<P class=tl>The <B>OnPrint</B> member function is defined by <B>CView</B> and prints the view. By default, printing and print preview are not supported by the <B>CFormView</B> class. To add printing support, override the <B>OnPrint</B> function in your derived class.</P></LI>

	<LI>Associate your view class with a document class and a frame-window class using a document template.</LI>
</OL>

<P>Unlike ordinary views, form views do not require you to override the <B>OnDraw</B> member function defined by <B>CView</B>. This is because controls are able to paint themselves. Only if you want to customize the display of your form view (for example, to provide a background for your view) should you override <B>OnDraw</B>. If you do so, be careful that your updating does not conflict with the updating done by the controls.</P>

<P>Form views support scrolling, as needed, using functionality provided by <A HREF="JavaScript:hhobj_8.Click()">CScrollView</A>. If your view contains controls that are derived from (or instances of) <B>CSliderCtrl</B> or <B>CSpinButtonCtrl</B> and you have message handlers for <B>WM_HSCROLL</B> and <B>WM_VSCROLL</B>, you should write code that calls the proper routines. The code example below calls <B>CWnd::OnHScroll</B> if a <B>WM_HSCROLL</B> message is sent by either a spin button or slider control.</P>

<PRE><CODE>void CMyFormView::OnHScroll( UINT nSBCode, UINT nPos, CScrollBar* pScrollBar )
{
    if ( pScrollBar-&gt;IsKindOf( RUNTIME_CLASS( CScrollBar ) ))
    {
        CFormView::OnHScroll( nSBCode, nPos, pScrollBar );
    }
    else if ( pScrollBar-&gt;IsKindOf( RUNTIME_CLASS( CSliderCtrl ) ))
    {
        CWnd::OnHScroll( nSBCode, nPos, pScrollBar );
    }
    else if ( pScrollBar-&gt;IsKindOf( RUNTIME_CLASS( CSpinButtonCtrl ) ))
    {
        CWnd::OnHScroll( nSBCode, nPos, pScrollBar );
    }
}
</CODE></PRE>

<P>If the view becomes smaller than the dialog template, scroll bars appear automatically. Views derived from <B>CFormView</B> support only the <B>MM_TEXT</B> mapping mode.</P>

<P>If you are not using DDX, use the <B>CWnd</B> dialog functions to move data between the member variables in your view class and the controls in your form view. For more information about DDX, see <A HREF="JavaScript:hhobj_9.Click()">Defining Member Variables for DDX</A>.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="JavaScript:hhobj_10.Click()">CFormView</A><BR><BR></LI>

	<LI><A HREF="JavaScript:hhobj_11.Click()">Derived view classes</A><BR><BR></LI>

	<LI><A HREF="vcconcreatingforms-basedapplication.htm">Creating a forms-based application</A><BR><BR></LI>

	<LI><A HREF="JavaScript:hhobj_12.Click()">Inserting a form into an MFC application</A></LI>
</UL>
</font>
</BODY>
</HTML>
