<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging COM Servers</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_debugging_activex_servers"></A>Debugging COM Servers</H1>

<P>Debugging COM server applications poses a unique set of problems that are not always easy to solve. This topic details debugging tasks that might not behave the way you would expect when debugging a server application.</P>

<P>If you do not have debugging information for your container application, or do not need to see symbolic information for the container, starting to debug the server application is a three-step process:

<OL>
	<LI>Start debugging the server as a normal application.<BR><BR></LI>

	<LI>Set breakpoints as desired.<BR><BR></LI>

	<LI>Start the container application.</LI>
</OL>

<P>For information on viewing symbolic information for both the container and the server, see <A HREF="_core_debugging_activex_containers_and_servers_simultaneously.htm">Debugging COM Containers and Servers Simultaneously</A>.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The Visual C++ debugger supports stepping across and into containers and servers. This includes the ability to step across Remote Procedure Calls (RPC). For more information, see <A HREF="_core_debugging_activex_applications.htm">Debugging COM Applications</A>.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_debugging_activex_containers.htm">Debugging COM Containers</A> </P>
</font>
</BODY>
</HTML>
