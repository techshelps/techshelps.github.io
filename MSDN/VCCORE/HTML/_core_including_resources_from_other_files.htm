<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Including Resources from Other Files</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_including_resources_from_other_files"></A>Including Resources from Other Files</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_resource_editors.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_resource_editor_tasks.htm">How Do I</A></P>

<P>Normally it is easy and convenient to work with the default arrangement of all resources in one resource script (.rc) file. However, you can add resources in other files to your current project at compile time by listing them in the <B>Compile-time directives</B> box in the <B>Resource Includes</B> dialog box. </P>

<P>There are several reasons to place resources in a file other than the main .rc file:

<UL type=disc>
	<LI>To include resources that have already been developed and tested and do not need further modification.<BR><BR></LI>

	<LI>To include resources that are being used by several different projects, or that are part of a source code version-control system, and thus must exist in a central location where modifications will affect all projects.<BR><BR></LI>

	<LI>To include resources (such as RCDATA resources) that are in a custom format. RCDATA resources may have special requirements. For example, you cannot use an expression as a value for the nameID field. See the Win32 SDK documentation for more information.<BR><BR></LI>

	<LI>To include statements in your resource file that execute conditionally at compile time using compiler directives such as <B>#ifdef</B> and <B>#else</B>. For example, your project may have a group of resources that are bracketed by <B>#ifdef _DEBUG ... #endif</B> and are thus included only if the constant <B>_DEBUG</B> is defined at compile time. <BR><BR></LI>

	<LI>To include statements in your resource file that modify resource-file syntax by using <B>#define</B> to implement simple macros. </LI>
</UL>

<P>If you have sections in your existing .rc files that meet any of these conditions, you should place the sections in one or more separate .rc files and include them in your project using the <B>Resource Includes</B> dialog box. The Projectname.rc2 file created in the \res subdirectory of a new project is used for this purpose.</P>

<P class=label><B>To include resource files that will be added to your project at compile time</B>

<OL>
	<LI>Place the resources in a resource script file with a unique filename. (Do not use <I>projectname</I>.rc, since this is the filename used for the main resource script file.)<BR><BR></LI>

	<LI>From the <B>View</B> menu, choose <B>Resource Includes</B>. <BR><BR></LI>

	<LI>In the <B>Compile-time directives</B> box, use the <B>#include</B> compiler directive to include the new resource file in the main resource file in the development environment.
<P class=tl>The resources in files included in this way are made a part of your executable file at compile time. They are not directly available for editing or modification when you are working on your project’s main .rc file. You need to open included .rc files separately.</P></LI>

	<LI>Click <B>OK</B>.</LI>
</OL>
</font>
</BODY>
</HTML>
