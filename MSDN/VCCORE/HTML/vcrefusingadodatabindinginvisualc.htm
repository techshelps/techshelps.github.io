<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using ADO Databinding in Visual C++</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcrefusingadodatabindinginvisualc"></A>Using ADO Databinding in Visual C++</H1>

<P>Using ADO databinding in Visual C++ requires the following steps.

<UL type=disc>
	<LI>Add an ADO Data Control.<BR><BR></LI>

	<LI>Point to a data source.<BR><BR></LI>

	<LI>Specify the record source (SQL query or data retrieval language).<BR><BR></LI>

	<LI>Add an ADO data-bound control.<BR><BR></LI>

	<LI>Connect the data-bound control to an ADO Data Control.<BR><BR></LI>

	<LI>Select the fields to bind to the ADO Data Control's record source.</LI>
</UL>

<P class=label><B>To use ADO databinding in Visual C++</B>

<OL>
	<LI>Create an MFC Dialog application or MFC Formview application using the MFC AppWizard.<BR><BR></LI>

	<LI>Add the Microsoft ADO Data Control to the dialog box; see <A HREF="vcrefinsertingcontrolintovisualcprogram.htm">Inserting the Control into a Visual C++ Application</A>.<BR><BR></LI>

	<LI>Point the ADO Data Control to your OLE DB data source.
<OL>
	<LI>Right-click on the ADO Data Control and select <B>Properties</B> from the shortcut menu.<BR><BR></LI>

	<LI>On the <B>Control</B> tab, select the <B>Use Connection String</B>. You can use the supplied provider or you can delete it.<BR><BR></LI>

	<LI>Select <B>Build</B>. If you deleted the provider from <B>Use Connection String</B>, you will now be able to define one. After you define the provider, access the properties of the ADO Data Control again and select <B>Build</B> again to continue.
<P class=tl>If a provider is defined in <B>Use Connection String </B>before you select <B>Build</B>, you will now be able to define the data link properties. This displays the DataLink Wizard.</P></LI>

	<LI>Change the <B>Provider</B> if necessary, and define <B>Location</B> and <B>Data Source</B> values, as appropriate for your provider. For example, if you are using a SQL Server provider, <B>Location</B> specifies the database server and <B>Data Source</B> specifies the database. If you are using an ODBC provider, the <B>Data Source</B> corresponds to the ODBC DSN.<BR><BR></LI>

	<LI>Select the <B>Authentication</B> tab and set values for <B>User Name</B> and <B>Password</B>, if required by the data source.<BR><BR></LI>

	<LI>Return to the <B>Connection</B> tab and click <B>Test Connection</B> to test the data source. Scroll to the end of the <B>Results</B> window to see if the test passed. If it failed, check the configuration of your data source. Common errors include invalid passwords and incorrect values for the <B>Location</B> and <B>Data Source</B> fields.<BR><BR></LI>

	<LI>Exit the DataLink Wizard and return to the property sheet for the ADO Data Control.</LI>
</OL>
</LI>

	<LI>In the <B>RecordSource</B> tab, enter a query into the <B>Command Text (SQL)</B>. The data-bound controls can bind to the results of this query. The query will usually be SQL. However, some OLE DB providers do not use SQL.<BR><BR></LI>

	<LI>Set any other ADO Data Control properties as needed and close the property sheet for the ADO Data Control.<BR><BR></LI>

	<LI>Add a data-bound control. For example, add the DataGrid control. (Do not confuse the DataGrid control with the RDO DBGrid control.)<BR><BR></LI>

	<LI>Set the DataGrid's properties.
<OL>
	<LI>Right-click on the DataGrid and select <B>Properties</B> from the shortcut menu.<BR><BR></LI>

	<LI>Select the <B>All</B> tab and set the <B>DataSource</B> property to the ADO Data Control. Click on the <B>DataSource</B> drop-down list and find the ID of the ADO Data Control. The default ID name is IDC_ADODC1.</LI>
</OL>
</LI>

	<LI>To run in test mode, use CTRL+T. You will be able to scroll through the data. Use the Esc key or close the dialog box to end test mode.</LI>
</OL>

<P>If you compile and run the program, you will be able to scroll through the data as well.</P>

<P>Back to <A HREF="vcrefmicrosoftdatasourcecontrolsdataboundcontrolsincludedwithvisualc6.htm">Databinding with ActiveX Controls in Visual C++</A>.</P>
</font>
</BODY>
</HTML>
