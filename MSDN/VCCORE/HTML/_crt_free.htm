<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>free</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_free"></A><SUP></SUP>free</H1>

<P>Deallocates or frees a memory block.</P>

<P><B>void</B> <B>free(</B> <B>void</B> <B>*</B><I>memblock</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Function</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=57%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>free</B></TD>
<TD width=27%>&lt;stdlib.h&gt; and &lt;malloc.h&gt;</TD>
<TD width=57%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>None</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>memblock</I></P>

<P class=indent>Previously allocated memory block to be freed</P>

<P class=label><B>Remarks</B></P>

<P>The <B>free</B> function deallocates a memory block (<I>memblock</I>) that was previously allocated by a call to <B>calloc</B>, <B>malloc</B>, or <B>realloc</B>. The number of freed bytes is equivalent to the number of bytes requested when the block was allocated (or reallocated, in the case of <B>realloc</B>). If <I>memblock</I> is <B>NULL</B>, the pointer is ignored and <B>free</B> immediately returns. Attempting to free an invalid pointer (a pointer to a memory block that was not allocated by <B>calloc</B>, <B>malloc</B>, or <B>realloc</B>) may affect subsequent allocation requests and cause errors.</P>

<P>After a memory block has been freed, <A HREF="_crt__heapmin.htm">_heapmin</A> minimizes the amount of free memory on the heap by coalescing the unused regions and releasing them back to the operating system. Freed memory that is not released to the operating system is restored to the free pool and is available for allocation again.</P>

<P>When the application is linked with a debug version of the C run-time libraries, <B>free</B> resolves to <A HREF="_crt__free_dbg.htm">_free_dbg</A>. For more information about how the heap is managed during the debugging process, see <A HREF="_core_using_c_run.2d.time_library_debugging_support.htm">Using C Run-Time Library Debugging Support</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* MALLOC.C: This program allocates memory with
 * malloc, then frees the memory with free.
 */

#include &lt;stdlib.h&gt;         /* For _MAX_PATH definition */
#include &lt;stdio.h&gt;
#include &lt;malloc.h&gt;

void main( void )
{
   char *string;

   /* Allocate space for a path name */
   string = malloc( _MAX_PATH );
   if( string == NULL )
      printf( "Insufficient memory available\n" );
   else
   {
      printf( "Memory space allocated for path name\n" );
      free( string );
      printf( "Memory freed\n" );
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Memory space allocated for path name
Memory freed

</CODE></PRE>

<P><A HREF="_crt_memory_allocation.htm">Memory Allocation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__alloca.htm">_alloca</A>, <A HREF="_crt_calloc.htm">calloc</A>, <A HREF="_crt_malloc.htm">malloc</A>, <A HREF="_crt_realloc.htm">realloc</A>, <A HREF="_crt__free_dbg.htm">_free_dbg</A>, <A HREF="_crt__heapmin.htm">_heapmin</A></P>
</font>
</BODY>
</HTML>
