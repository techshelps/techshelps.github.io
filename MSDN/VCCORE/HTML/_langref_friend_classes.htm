<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Friend Classes</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_friend_classes"></A><SUP></SUP>Friend Classes</H1>

<P><B>C++ Specific —&gt;</B></P>

<P>A <B>friend</B> class is a class all of whose member functions are friend functions of a class, that is, whose member functions have access to the other class's private and protected members.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>// Example of the friend class
class YourClass
{
friend class YourOtherClass;  // Declare a friend class
private:
   int topSecret;
};

class YourOtherClass
{
public:
   void change( YourClass yc );
};

void YourOtherClass::change( YourClass yc )
{
   yc.topSecret++;    // Can access private data
}</CODE></PRE>

<P>Friendship is not mutual unless explicitly specified as such. In the above example, member functions of <CODE>YourClass</CODE> cannot access the private members of <CODE>YourOtherClass</CODE>.</P>

<P>Friendship is not inherited, meaning that classes derived from <CODE>YourOtherClass</CODE> cannot access <CODE>YourClass</CODE>'s private members; nor is it transitive, so classes that are friends of <CODE>YourOtherClass</CODE> cannot access <CODE>YourClass</CODE>'s private members.</P>

<P><B>END C++ Specific</B></P>
</font>
</BODY>
</HTML>
