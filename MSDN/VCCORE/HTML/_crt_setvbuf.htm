<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>setvbuf</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_setvbuf"></A><SUP></SUP>setvbuf</H1>

<P>Controls stream buffering and buffer size.</P>

<P><B>int</B> <B>setvbuf(</B> <B>FILE</B> <B>*</B><I>stream</I><B>,</B> <B>char</B> <B>*</B><I>buffer</I><B>,</B> <B>int</B> <I>mode</I><B>,</B> <B>size_t</B> <I>size</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=15%><B>Routine</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=59%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>setvbuf</B></TD>
<TD width=26%>&lt;stdio.h&gt;</TD>
<TD width=59%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>setvbuf</B> returns 0 if successful, or a nonzero value if an illegal type or buffer size is specified.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>stream</I></P>

<P class=indent>Pointer to <B>FILE</B> structure</P>

<P class=dt><I>buffer</I></P>

<P class=indent>User-allocated buffer</P>

<P class=dt><I>mode</I></P>

<P class=indent>Mode of buffering</P>

<P class=dt><I>size</I></P>

<P class=indent>Buffer size in bytes. Allowable range: 2 &lt; <I>size</I> &lt; 32768. Internally, the value supplied for <I>size</I> is rounded down to the nearest multiple of 2.</P>

<P class=label><B>Remarks</B></P>

<P>The <B>setvbuf</B> function allows the program to control both buffering and buffer size for <I>stream</I>. <I>stream</I> must refer to an open file that has not undergone an I/O operation since it was opened. The array pointed to by <I>buffer</I> is used as the buffer, unless it is <B>NULL</B>, in which case <B>setvbuf</B> uses an automatically allocated buffer of length <I>size</I>/2 * 2 bytes.</P>

<P>The mode must be <B>_IOFBF</B>, <B>_IOLBF</B>, or <B>_IONBF</B>. If <I>mode</I> is <I>_</I><B>IOFBF</B> or <B>_IOLBF</B>, then <I>size</I> is used as the size of the buffer. If <I>mode</I> is <B>_IONBF</B>, the stream is unbuffered and <I>size</I> and <I>buffer</I> are ignored. Values for <I>mode</I> and their meanings are:</P>

<P class=dt><B>_IOFBF</B></P>

<P class=indent>Full buffering; that is, <I>buffer</I> is used as the buffer and <I>size</I> is used as the size of the buffer. If <I>buffer</I> is <B>NULL</B>, an automatically allocated buffer <I>size</I> bytes long is used.</P>

<P class=dt><B>_IOLBF</B></P>

<P class=indent>With MS-DOS, the same as <B>_IOFBF</B>.</P>

<P class=dt><B>_IONBF</B></P>

<P class=indent>No buffer is used, regardless of <I>buffer</I> or <I>size</I>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* SETVBUF.C: This program opens two streams: stream1
 * and stream2. It then uses setvbuf to give stream1 a
 * user-defined buffer of 1024 bytes and stream2 no buffer.
 */

#include &lt;stdio.h&gt;

void main( void )
{
   char buf[1024];
   FILE *stream1, *stream2;

   if( ((stream1 = fopen( "data1", "a" )) != NULL) &amp;&amp;
       ((stream2 = fopen( "data2", "w" )) != NULL) )
   {
      if( setvbuf( stream1, buf, _IOFBF, sizeof( buf ) ) != 0 )
         printf( "Incorrect type or size of buffer for stream1\n" );
      else
         printf( "'stream1' now has a buffer of 1024 bytes\n" );
      if( setvbuf( stream2, NULL, _IONBF, 0 ) != 0 )
         printf( "Incorrect type or size of buffer for stream2\n" );
      else
         printf( "'stream2' now has no buffer\n" );
      _fcloseall();
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>'stream1' now has a buffer of 1024 bytes
'stream2' now has no buffer

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_fclose.2c_._fcloseall.htm">fclose</A>, <A HREF="_crt_fflush.htm">fflush</A>, <A HREF="_crt_fopen.2c_._wfopen.htm">fopen</A>, <A HREF="_crt_setbuf.htm">setbuf</A></P>
</font>
</BODY>
</HTML>
