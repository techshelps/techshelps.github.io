<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Avoiding Problem Areas with Multithread Programs</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_avoiding_problem_areas_with_multithread_programs"></A>Avoiding Problem Areas with Multithread Programs</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_multithreaded_programs.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_multithreading_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_multithreading_sample_list.htm">Sample</A></P>

<P>There are several problems you might encounter in creating, linking, or executing a multithread C program. Some of the more common ones are described here. (For a similar discussion from the MFC point of view, see <A HREF="_core_multithreading.3a_.programming_tips.htm">Multithreading: Programming Tips</A>.)</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=30%><B>Problem</B></TD>
<TD width=70%><B>Probable cause</B></TD>
</TR>

<TR VALIGN="top">
<TD width=30%>You get a message box showing that your program caused a protection violation.</TD>
<TD width=70%>Many Win32 programming errors cause protection violations. A common cause of protection violations is the indirect assignment of data to null pointers. This results in your program trying to access memory that does not “belong” to it, so a protection violation is issued. 
<P>An easy way to detect the cause of a protection violation is to compile your program with debugging information, and then run it through the debugger in the Visual C++ environment. When the protection fault occurs, Windows transfers control to the debugger, and the cursor is positioned on the line that caused the problem.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=30%>Your program generates numerous compile and link errors.</TD>
<TD width=70%>If you attempt to compile and link a multithread program without defining the symbolic constant <B>_MT</B>, many of the definitions required for the multithread library will be missing. If you are using the Visual C++ development environment, make sure that the Project Settings dialog box specifies multithread libraries. From the command line, define <B>_MT</B> to CL with /MT or /D _MT, or use <CODE>#define _MT</CODE> in your program.
<P>You can eliminate many potential problems by setting the compiler’s warning level to one of its highest values and heeding the warning messages. By using the level 3 or level 4 warning level options, you can detect unintentional data conversions, missing function prototypes, and use of non-ANSI features.</P>
</TD>
</TR>
</TABLE>
</font>
</BODY>
</HTML>
