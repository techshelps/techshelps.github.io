<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>intrinsic</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_predir_intrinsic"></A>intrinsic</H1>

<P><B>#pragma intrinsic(</B> <I>function1</I> [<B>,</B> <I>function2</I><B>,</B> ...] <B>)</B></P>

<P>Specifies that calls to functions specified in the pragma’s argument list are intrinsic. The compiler generates intrinsic functions as inline code, not as function calls. The library functions with intrinsic forms are listed below. Once an <B>intrinsic</B> pragma is seen, it takes effect at the first function definition containing a specified intrinsic function. The effect continues to the end of the source file or to the appearance of a <B>function</B> pragma specifying the same intrinsic function. The <B>intrinsic</B> pragma can be used only outside of a function definition — at the global level.</P>

<P>The following functions have intrinsic forms:</P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD width=26%>_disable
<P>_enable</P>

<P><A HREF="_crt__inp.2c_._inpw.2c_._inpd.htm">_inp</A></P>

<P><A HREF="_crt__inp.2c_._inpw.2c_._inpd.htm">_inpw</A></P>

<P><A HREF="_crt__lrotl.2c_._lrotr.htm">_lrotl</A></P>

<P><A HREF="_crt__lrotl.2c_._lrotr.htm">_lrotr</A></P>
</TD>
<TD width=29%><A HREF="_crt__outp.2c_._outpw.2c_._outpd.htm">_outp</A>
<P><A HREF="_crt__outp.2c_._outpw.2c_._outpd.htm">_outpw</A></P>

<P><A HREF="_crt__rotl.2c_._rotr.htm">_rotl</A></P>

<P><A HREF="_crt__rotl.2c_._rotr.htm">_rotr</A></P>

<P><A HREF="_crt__strset.2c_._wcsset.2c_._mbsset.htm">_strset</A></P>

<P><A HREF="_crt_abs.htm">abs</A></P>
</TD>
<TD width=25%><A HREF="_crt_fabs.htm">fabs</A>
<P><A HREF="_crt_labs.htm">labs</A></P>

<P><A HREF="_crt_memcmp.htm">memcmp</A></P>

<P><A HREF="_crt_memcpy.htm">memcpy</A></P>

<P><A HREF="_crt_memset.htm">memset</A></P>

<P><A HREF="_crt_strcat.2c_.wcscat.2c_._mbscat.htm">strcat</A></P>
</TD>
<TD width=20%><A HREF="_crt_strcmp.2c_.wcscmp.2c_._mbscmp.htm">strcmp</A>
<P><A HREF="_crt_strcpy.2c_.wcscpy.2c_._mbscpy.htm">strcpy</A></P>

<P><A HREF="_crt_strlen.2c_.wcslen.2c_._mbslen.2c_._mbstrlen.htm">strlen</A></P>
</TD>
</TR>
</TABLE><BR>

<P>Programs that use intrinsic functions are faster because they do not have the overhead of function calls but may be larger due to the additional code generated.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The <B>_alloca</B> and <B>setjmp</B> functions are always generated inline; this behavior is not affected by the <B>intrinsic</B> pragma.</P>

<P>The floating-point functions listed below do not have true intrinsic forms. Instead they have versions that pass arguments directly to the floating-point chip rather than pushing them onto the program stack:</P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_acos.htm">acos</A>
<P><A HREF="_crt_asin.htm">asin</A></P>
</TD>
<TD width=25%><A HREF="_crt_cos.2c_.cosh.htm">cosh</A>
<P><A HREF="_crt_fmod.htm">fmod</A></P>
</TD>
<TD width=25%><A HREF="_crt_pow.htm">pow</A>
<P><A HREF="_crt_sin.2c_.sinh.htm">sinh</A></P>
</TD>
<TD width=25%><A HREF="_crt_tan.2c_.tanh.htm">tanh</A></TD>
</TR>
</TABLE><BR>

<P>The floating-point functions listed below have true intrinsic forms when you specify both the /Oi and /Og compiler options (or any option that includes /Og: /Ox, /O1, and /O2):</P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD width=22%><A HREF="_crt_atan.2c_.atan2.htm">atan</A></TD>
<TD width=23%><A HREF="_crt_exp.htm">exp</A></TD>
<TD width=25%><A HREF="_crt_log.2c_.log10.htm">log10</A></TD>
<TD width=30%><A HREF="_crt_sqrt.htm">sqrt</A></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><A HREF="_crt_atan.2c_.atan2.htm">atan2</A></TD>
<TD width=23%><A HREF="_crt_log.2c_.log10.htm">log</A></TD>
<TD width=25%><A HREF="_crt_sin.2c_.sinh.htm">sin</A></TD>
<TD width=30%><A HREF="_crt_tan.2c_.tanh.htm">tan</A></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><A HREF="_crt_cos.2c_.cosh.htm">cos</A></TD>
<TD width=23%>&nbsp;</TD>
<TD width=25%>&nbsp;</TD>
<TD width=30%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P>You can use the /Op or /Za compiler option to override generation of true intrinsic floating-point options. In this case, the functions are generated as library routines that pass arguments directly to the floating-point chip instead of pushing them onto the program stack. </P>
</font>
</BODY>
</HTML>
