<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Address-of Operator:  &amp;</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_address.2d.of_operator.3a_26"></A><SUP></SUP>Address-of Operator:&nbsp; &amp;</H1>

<P>The address-of operator (<B>&amp;</B>) gives the address of its operand. The operand of the address-of operator can be either a function designator or an l-value that designates an object that is not a bit field and is not declared with the <B>register</B> storage-class specifier.</P>

<P>The address-of operator can only be applied to variables with fundamental, structure, class, or union types that are declared at the file-scope level, or to subscripted array references. In these expressions, a constant expression that does not include the address-of operator can be added to or subtracted from the address expression.</P>

<P>For related information, see <A HREF="_langref_indirection_operator.3a_2a.htm">Indirection Operator</A>.</P>

<P class=label><B>Example</B></P>

<P>In the following example, the address-of-operator (<B>&amp;</B>) takes the address of the third element of the <CODE>nArray</CODE> and stores the result in the pointer variable <CODE>pPtr</CODE>.</P>

<PRE><CODE>// Example of the address-of operator
int *pPtr;
int nArray[20];
pPtr = &amp;nArray[2];</CODE></PRE>
</font>
</BODY>
</HTML>
