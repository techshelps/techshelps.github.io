<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C/C++ Keywords</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_c.2f.c.2b2b_.keywords"></A>C/C++ Keywords</H1>

<P>The following are keywords in Microsoft C and C++. Names with leading underscores are Microsoft extensions.</P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref___asm.htm">__asm</A></TD>
<TD width=17%><A HREF="_langref_if.2c_.else_statements.htm">else</A></TD>
<TD width=34%><A HREF="_langref_main.2c_.wmain.htm">main</A></TD>
<TD width=26%><A HREF="_langref_struct.htm">struct</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="vcref_assume.htm">__assume</A></TD>
<TD width=17%><A HREF="_langref_enum.htm">enum</A></TD>
<TD width=34%><A HREF="_langref_inheritance_keywords.htm">__multiple_inheritance</A></TD>
<TD width=26%><A HREF="_langref_switch.2c_.case.2c_.default_statements.htm">switch</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_auto.htm">auto</A></TD>
<TD width=17%><A HREF="_langref_try_except_statement.htm">__except</A></TD>
<TD width=34%><A HREF="_langref_inheritance_keywords.htm">__single_inheritance</A></TD>
<TD width=26%><A HREF="_langref_template.htm">template</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref___based.htm">__based</A></TD>
<TD width=17%><A HREF="_langref_explicit.htm">explicit</A></TD>
<TD width=34%><A HREF="_langref_inheritance_keywords.htm">__virtual_inheritance</A></TD>
<TD width=26%><A HREF="_langref_this.htm">this</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_bool.htm">bool</A></TD>
<TD width=17%><A HREF="_langref_extern.htm">extern</A></TD>
<TD width=34%><A HREF="_langref_mutable.htm">mutable</A></TD>
<TD width=26%><A HREF="_langref_thread.htm">thread</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_break_statement.htm">break</A></TD>
<TD width=17%><A HREF="_langref_false.htm">false</A></TD>
<TD width=34%><A HREF="_langref_naked.htm">naked</A></TD>
<TD width=26%><A HREF="_langref_try.2c_.catch.2c_.and_throw_statements.htm">throw</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_switch.2c_.case.2c_.default_statements.htm">case</A></TD>
<TD width=17%><A HREF="_core___fastcall.htm">__fastcall</A></TD>
<TD width=34%><A HREF="_langref_namespace_declaration.htm">namespace</A></TD>
<TD width=26%><A HREF="_langref_true.htm">true</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_try.2c_.catch.2c_.and_throw_statements.htm">catch</A></TD>
<TD width=17%><A HREF="_langref_try_finally_statement.htm">__finally</A></TD>
<TD width=34%><A HREF="_langref_new_operator.htm">new</A></TD>
<TD width=26%><A HREF="_langref_try.2c_.catch.2c_.and_throw_statements.htm">try</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_core___cdecl.htm">__cdecl</A></TD>
<TD width=17%><A HREF="_langref_data_type_ranges.htm">float</A></TD>
<TD width=34%><A HREF="vcrefnoreturn.htm">noreturn</A></TD>
<TD width=26%><A HREF="_langref_exception_handling_mechanisms.htm">__try</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_data_type_ranges.htm">char</A></TD>
<TD width=17%><A HREF="_langref_for_statement.htm">for</A></TD>
<TD width=34%><A HREF="_langref_operator.htm">operator</A></TD>
<TD width=26%><A HREF="_langref_typedef.htm">typedef</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_class.htm">class</A></TD>
<TD width=17%><A HREF="_langref_friend.htm">friend</A></TD>
<TD width=34%><A HREF="_langref_private.htm">private</A></TD>
<TD width=26%><A HREF="_langref_typeid_operator.htm">typeid</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_const.htm">const</A></TD>
<TD width=17%><A HREF="_langref_goto_statement.htm">goto</A></TD>
<TD width=34%><A HREF="_langref_protected.htm">protected</A></TD>
<TD width=26%><A HREF="_langref_typename.htm">typename</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_const_cast_operator.htm">const_cast</A></TD>
<TD width=17%><A HREF="_langref_if.2c_.else_statements.htm">if</A></TD>
<TD width=34%><A HREF="_langref_public.htm">public</A></TD>
<TD width=26%><A HREF="_langref_union.htm">union</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_continue_statement.htm">continue</A></TD>
<TD width=17%><A HREF="_langref_inline.2c_.__inline.htm">inline</A></TD>
<TD width=34%><A HREF="_langref_register.htm">register</A></TD>
<TD width=26%><A HREF="_langref_data_type_ranges.htm">unsigned</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref___declspec.htm">__declspec</A></TD>
<TD width=17%><A HREF="_langref_inline.2c_.__inline.htm">__inline</A></TD>
<TD width=34%><A HREF="_langref_reinterpret_cast_operator.htm">reinterpret_cast</A></TD>
<TD width=26%><A HREF="_langref_using_declaration.htm">using</A> declaration, <BR>
<A HREF="_langref_using_directive.htm">using</A> directive</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_switch.2c_.case.2c_.default_statements.htm">default</A></TD>
<TD width=17%><A HREF="_langref_data_type_ranges.htm">int</A></TD>
<TD width=34%><A HREF="_langref_return_statement.htm">return</A></TD>
<TD width=26%><A HREF="_langref_uuid.htm">uuid</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_delete_operator.htm">delete</A></TD>
<TD width=17%><A HREF="_langref___int8.2c_.__int16.2c_.__int32.2c_.__int64.htm">__int8</A></TD>
<TD width=34%><A HREF="_langref_data_type_ranges.htm">short</A></TD>
<TD width=26%><A HREF="_langref___uuidof.htm">__uuidof</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_dllimport.2c_.dllexport.htm">dllexport</A></TD>
<TD width=17%><A HREF="_langref___int8.2c_.__int16.2c_.__int32.2c_.__int64.htm">__int16</A></TD>
<TD width=34%><A HREF="_langref_data_type_ranges.htm">signed</A></TD>
<TD width=26%><A HREF="_langref_virtual.htm">virtual</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_dllimport.2c_.dllexport.htm">dllimport</A></TD>
<TD width=17%><A HREF="_langref___int8.2c_.__int16.2c_.__int32.2c_.__int64.htm">__int32</A></TD>
<TD width=34%><A HREF="_langref_sizeof_operator.htm">sizeof</A></TD>
<TD width=26%><A HREF="_langref_void.htm">void</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_do_statement.htm">do</A></TD>
<TD width=17%><A HREF="_langref___int8.2c_.__int16.2c_.__int32.2c_.__int64.htm">__int64</A></TD>
<TD width=34%><A HREF="_langref_static.htm">static</A></TD>
<TD width=26%><A HREF="_langref_volatile.htm">volatile</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_data_type_ranges.htm">double</A></TD>
<TD width=17%><A HREF="_langref_try_finally_statement.htm#_langref___leave">__leave</A></TD>
<TD width=34%><A HREF="_langref_static_cast_operator.htm">static_cast</A></TD>
<TD width=26%><A HREF="_langref_main.2c_.wmain.htm">wmain</A></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_langref_dynamic_cast_operator.htm">dynamic_cast</A></TD>
<TD width=17%><A HREF="_langref_data_type_ranges.htm">long</A></TD>
<TD width=34%><A HREF="_core___stdcall.htm">__stdcall</A></TD>
<TD width=26%><A HREF="_langref_while_statement.htm">while</A></TD>
</TR>
</TABLE><BR>
</font>
</BODY>
</HTML>
