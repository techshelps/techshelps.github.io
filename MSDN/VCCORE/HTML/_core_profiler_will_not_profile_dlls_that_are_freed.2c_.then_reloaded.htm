<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Profiler Will Not Profile DLLs That Are Freed, Then Reloaded</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_perf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>
<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_profiler_will_not_profile_dlls_that_are_freed.2c_.then_reloaded"></A>Profiler Will Not Profile DLLs That Are Freed, Then Reloaded</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_profiling.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_procedures_for_performance_tuning.htm">How Do I</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Profiling is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_2.Click()">Visual C++ Editions</A>.</P>

<P>The Microsoft Source Profiler version can profile the first instance of any and all DLLs (dynamic-link libraries) in a Windows application, but it cannot continue to collect statistics for a dynamically loaded DLL that is freed and then reloaded.</P>

<P>DLLs that are dynamically loaded with <B>LoadLibrary( )</B>, and that are freed and then reloaded, should not be profiled because the results will not be correct.</P>

<P>This behavior can be observed by attempting to profile code that performs the following actions:

<OL>
	<LI>Dynamically loads a DLL with <B>LoadLibrary( )</B>.<BR><BR></LI>

	<LI>Frees the DLL with <B>FreeLibrary( )</B>.<BR><BR></LI>

	<LI>Reloads the DLL with <B>LoadLibrary( )</B>.</LI>
</OL>

<P>There is currently no way to work around this limitation. The ability to handle dynamically reloaded DLLs under Windows is being considered for a future version of the profiler. </P>
</font>
</BODY>
</HTML>
