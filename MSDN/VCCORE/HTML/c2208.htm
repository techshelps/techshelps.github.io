<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error C2208</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c2208"></A><SUP></SUP>Compiler Error C2208</H1>

<P class=dt><B>'type' : no members defined using this type</B></P>

<P>An enumeration, structure, or union was defined without any members. This is an error only when compiling for C++ with the ANSI compatibility option (/Za).</P>

<P>This error can be caused by porting C code using nested structs to C++. Rewriting the code to use C++ mechanisms will eliminate this error. The following example shows C and C++ style <B>structs</B>. Note that the first C <B>struct</B>, if compiled for C++, declares a nested <B>struct</B>, <B>Struct::ToBeIncluded</B>, which is not the same as <B>::ToBeIncluded</B>.</P>

<PRE><CODE>struct ToBeIncluded {
    int i;
};

#ifndef __cplusplus
struct Struct {     //C struct defined using /Ze extensions
    float x;
    struct ToBeIncluded;     // MS-C style struct injection
    float y;
};                           // error under /Za ANSI compatibility
#else
struct Intermediate {        // revised C++ struct
    float x;
};

struct Struct                // C++ style
    :   public Intermediate,
        public ToBeIncluded
{
    float y;
};                           // Always OK for C++
#endif
</CODE></PRE>
</font>
</BODY>
</HTML>
