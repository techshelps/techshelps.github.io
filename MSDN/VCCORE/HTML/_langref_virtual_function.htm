<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Virtual Function</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_virtual_function"></A><SUP></SUP>Virtual Function</H1>

<P><B>C++ Specific —&gt;</B></P>

<P>A virtual function is a member function that you expect to be redefined in derived classes. When you refer to a derived class object using a pointer or a reference to the base class, you can call a virtual function for that object and execute the derived class's version of the function.</P>

<P><B>END C++ Specific</B></P>

<P class=label><B>Example 1</B></P>

<PRE><CODE>class WageEmployee
{
public:
   virtual float computePay();
};

class SalesPerson : public WageEmployee
{
public: 
   float computePay();
};</CODE></PRE>

<P>You can execute different versions of <CODE>computePay( )</CODE> depending on the type of object you're calling it for.</P>

<P class=label><B>Example 2</B></P>

<PRE><CODE>WageEmployee aWorker;
SalesPerson aSeller;
WageEmployee *wagePtr;

wagePtr = &amp;aWorker;
wagePtr-&gt;computePay();   // call WageEmployee::computePay
wagePtr = &amp;aSeller;
wagePtr-&gt;computePay();   // call SalesPerson::computePay</CODE></PRE>

<P>The <B>virtual</B> keyword is needed only in the base class's declaration of the function; any subsequent declarations in derived classes are virtual by default.</P>

<P>A derived class's version of a virtual function must have the same parameter list and return type as those of the base class. If these are different, the function is not considered a redefinition of the virtual function. A redefined virtual function cannot differ from the original only by return type.</P>
</font>
</BODY>
</HTML>
