<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_onexit</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__onexit"></A><SUP></SUP>_onexit</H1>

<P>Registers a routine to be called at exit time.</P>

<P><B>_onexit_t</B> <B>_onexit(</B> <B>_onexit_t</B> <I>func</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=15%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=58%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>_onexit</B></TD>
<TD width=27%>&lt;stdlib.h&gt;</TD>
<TD width=58%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_onexit</B> returns a pointer to the function if successful, or <B>NULL</B> if there is no space to store the function pointer.</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>func</I></P>

<P class=indent>Pointer to function to be called at exit</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_onexit</B> function is passed the address of a function (<I>func</I>) to be called when the program terminates normally. Successive calls to <B>_onexit</B> create a register of functions that are executed in LIFO (last-in-first-out) order. The functions passed to <B>_onexit</B> cannot take parameters.</P>

<P><B>_onexit</B> is a Microsoft extension. For ANSI portability use <A HREF="_crt_atexit.htm">atexit</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* ONEXIT.C */

#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

/* Prototypes */
int fn1(void), fn2(void), fn3(void), fn4 (void);

void main( void )
{
   _onexit( fn1 );
   _onexit( fn2 );
   _onexit( fn3 );
   _onexit( fn4 );
   printf( "This is executed first.\n" );
}

int fn1()
{
   printf( "next.\n" );
   return 0;
}

int fn2()
{
   printf( "executed " );
   return 0;
}

int fn3()
{
   printf( "is " );
   return 0;
}

int fn4()
{
   printf( "This " );
   return 0;
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>This is executed first.
This is executed next.

</CODE></PRE>

<P><A HREF="_crt_process_and_environment_control.htm">Process and Environment Control Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_atexit.htm">atexit</A>, <A HREF="_crt_exit.2c_._exit.htm">exit</A></P>
</font>
</BODY>
</HTML>
