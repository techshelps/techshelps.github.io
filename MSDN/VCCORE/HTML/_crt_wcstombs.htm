<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>wcstombs</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_WideCharToMultiByte">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_wcstombs"></A><SUP></SUP>wcstombs</H1>

<P>Converts a sequence of wide characters to a corresponding sequence of multibyte characters.</P>

<P><B>size_t</B> <B>wcstombs(</B> <B>char</B> <B>*</B><I>mbstr</I><B>,</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>wcstr</I><B>,</B> <B>size_t</B> <I>count</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=56%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>wcstombs</B></TD>
<TD width=27%>&lt;stdlib.h&gt;</TD>
<TD width=56%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>If <B>wcstombs</B> successfully converts the multibyte string, it returns the number of bytes written into the multibyte output string, excluding the terminating <B>NULL</B> (if any). If the <I>mbstr</I> argument is <B>NULL</B>, <B>wcstombs</B> returns the required size of the destination string. If <B>wcstombs</B> encounters a wide character it cannot be convert to a multibyte character, it returns –1 cast to type <B>size_t</B>.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>mbstr</I></P>

<P class=indent>The address of a sequence of multibyte characters</P>

<P class=dt><I>wcstr</I></P>

<P class=indent>The address of a sequence of wide characters</P>

<P class=dt><I>count</I></P>

<P class=indent>The maximum number of bytes that can be stored in the multibyte output string</P>

<P class=label><B>Remarks</B></P>

<P>The <B>wcstombs</B> function converts the wide-character string pointed to by <I>wcstr</I> to the corresponding multibyte characters and stores the results in the <I>mbstr</I> array. The <I>count</I> parameter indicates the maximum number of bytes that can be stored in the multibyte output string (that is, the size of <I>mbstr</I>). In general, it is not known how many bytes will be required when converting a wide-character string. Some wide characters will require only one byte in the output string; others require two. If there are two bytes in the multibyte output string for every wide character in the input string (including the wide character <B>NULL</B>), the result is guaranteed to fit.</P>

<P>If <B>wcstombs</B> encounters the wide-character null character (L'\0') either before or when <I>count</I> occurs, it converts it to an 8-bit 0 and stops. Thus, the multibyte character string at <I>mbstr</I> is null-terminated only if <B>wcstombs</B> encounters a wide-character null character during conversion. If the sequences pointed to by <I>wcstr</I> and <I>mbstr</I> overlap, the behavior of <B>wcstombs</B> is undefined.</P>

<P>If the <I>mbstr</I> argument is <B>NULL</B>, <B>wcstombs</B> returns the required size of the destination string. </P>

<P class=label><B>Example </B></P>

<PRE><CODE>/* WCSTOMBS.C illustrates the behavior of the wcstombs function. */

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

void main( void )
{
   int      i;
   char    *pmbbuf   = (char *)malloc( MB_CUR_MAX );
   wchar_t *pwchello = L"Hello, world.";

   printf( "Convert wide-character string:\n" );
   i = wcstombs( pmbbuf, pwchello, MB_CUR_MAX );
   printf( "\tCharacters converted: %u\n", i );
   printf( "\tMultibyte character: %s\n\n", pmbbuf );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Convert wide-character string:
   Characters converted: 1
   Multibyte character: H

</CODE></PRE>

<P><A HREF="_crt_data_conversion.htm">Data Conversion Routines</A>  |&nbsp; <A HREF="_crt_locale.htm">Locale Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__mbclen.2c_.mblen.htm">mblen</A>, <A HREF="_crt_mbstowcs.htm">mbstowcs</A>, <A HREF="_crt_mbtowc.htm">mbtowc</A>, <A HREF="_crt_wctomb.htm">wctomb</A>, <A HREF="JavaScript:hhobj_1.Click()">WideCharToMultiByte</A></P>
</font>
</BODY>
</HTML>
