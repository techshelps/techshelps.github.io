<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>/Gf, /GF   (Eliminate Duplicate Strings)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_.2f.gf"></A>/Gf, /GF&nbsp;&nbsp;&nbsp;(Eliminate Duplicate Strings)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_overviews.3a_.compiling_and_linking.htm">Overview</A>  |&nbsp; <A HREF="_core_set_compiler_options.htm">How Do I</A>  |&nbsp; <A HREF="_core_compiler_reference.htm">Compiler Options</A></P>

<P>This option enables the compiler to place a single copy of identical strings into the .EXE file. Because identical strings are copied into a single memory location, programs compiled with this option can be smaller than those compiled without it. This space optimization is also called “string pooling.” Using this option ensures that string pooling occurs in most cases. </P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=19%><B>Command Line</B></TD>
<TD class=label width=27%><B>Project Settings</B></TD>
<TD class=label width=54%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=19%>/Gf</TD>
<TD width=27%>Eliminate Duplicate Strings</TD>
<TD width=54%>Pools strings </TD>
</TR>

<TR VALIGN="top">
<TD width=19%>/GF</TD>
<TD width=27%>Not applicable</TD>
<TD width=54%>Pools strings and places them in read-only memory </TD>
</TR>
</TABLE><BR>

<P>To find the Eliminate Duplicate Strings option in the development environment, click <B>Settings</B> on the <B>Project</B> menu. Then click the <B>C/C++</B> tab, and click <B>Customize </B>in the Category box. </P>

<P>The /GF option enables the compiler to pool strings and place them in read-only memory. By placing the strings in read-only memory, the operating system does not need to swap that portion of memory. Instead, it can read the strings back from the image file. Strings placed in read-only memory cannot be modified; if you try to modify them, you will see an Application Error dialog box.</P>

<P>The /GF option is comparable to the /Gf option, except that /Gf does not place the strings in read-only memory. When you are using the /Gf option, your program must not write over pooled strings. Also, if you use identical strings to allocate string buffers, the /Gf option pools the strings. Thus, what was intended as multiple pointers to multiple buffers ends up as multiple pointers to a single buffer. For example, with /Gf, the following code causes <CODE>s</CODE> and <CODE>t</CODE> to point to the same memory because they are initialized with the same string:</P>

<PRE><CODE>char *s = "This is a character buffer";
char *t = "This is a character buffer";</CODE></PRE>
</font>
</BODY>
</HTML>
