<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>noreturn</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcrefnoreturn"></A>noreturn</H1>

<P><B>Microsoft and C++ Specific —&gt;</B></P>

<P>This <B>__declspec</B> attribute tells the compiler that a function does not return. As a consequence, the compiler knows that the code following a call to a <B>__declspec(noreturn)</B> function is unreachable. </P>

<P>If the compiler finds a function with a control path that does not return a value, it generates a warning (C4715) or error message (C2202). If the control path cannot be reached due to a function that never returns, you can use <B>__declspec(noreturn)</B> to prevent this warning or error. </P>

<P>Consider, for example, the following code. The <B>else</B> clause does not contain a return statement, so the programmer declares <CODE>fatal</CODE> as <B>__declspec(noreturn)</B> to avoid an error or warning message. </P>

<PRE><CODE>__declspec(noreturn) extern void fatal ()
{
   // Code omitted
}

int gloo()
{
   if(...)
     return 1;
   else if(...)
     return 0;
   else
     fatal();
}
</CODE></PRE>

<P><B>END Microsoft and C++ Specific</B></P>
</font>
</BODY>
</HTML>
