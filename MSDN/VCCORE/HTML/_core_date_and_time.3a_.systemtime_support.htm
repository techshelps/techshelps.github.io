<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Date and Time: SYSTEMTIME Support</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CTime">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CFile.3a3a.GetStatus">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_date_and_time.3a_.systemtime_support"></A>Date and Time: SYSTEMTIME Support</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_date_and_time_data.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_date_and_time_tasks.htm">How Do I</A></P>

<P>The <A HREF="JavaScript:hhobj_2.Click()">CTime</A> class has constructors that accept system and file times from Win32. If you use <B>CTime</B> objects for these purposes, you must modify their initialization accordingly, as described in this article.</P>

<P>MFC still provides <B>CTime</B> constructors that take time arguments of the MS-DOS style, but, with MFC version 3.0, the <B>CTime</B> class also supports a constructor that takes a Win32 <B>SYSTEMTIME</B> structure and another that takes a Win32 <B>FILETIME</B> structure.</P>

<P>The new <B>CTime</B> constructors are:

<UL type=disc>
	<LI><B>CTime( const SYSTEMTIME&amp;</B> <I>sysTime</I> <B>);</B><BR><BR></LI>

	<LI><B>CTime( const FILETIME&amp;</B> <I>fileTime</I> <B>);</B></LI>
</UL>

<P>The <I>fileTime</I> parameter is a reference to a Win32 <B>FILETIME</B> structure, which represents time as a 64-bit value, a more convenient format for internal storage than a <B>SYSTEMTIME</B> structure and the format used by Win32 to represent the time of file creation.</P>

<P>If your code contains a <B>CTime</B> object initialized with the system time, you should use the <B>SYSTEMTIME</B> constructor in Win32.</P>

<P>You most likely will not use <B>CTime</B> <B>FILETIME</B> initialization directly. If you use a <B>CFile</B> object to manipulate a file, <A HREF="JavaScript:hhobj_3.Click()">CFile::GetStatus</A> retrieves the file timestamp for you via a <B>CTime</B> object initialized with a <B>FILETIME</B> structure.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_date_and_time.htm">General date and time programming in MFC</A><BR><BR></LI>

	<LI><A HREF="_core_date_and_time.3a_.automation_support.htm">Automation support of date and time programming</A><BR><BR></LI>

	<LI><A HREF="_core_date_and_time.3a_.general.2d.purpose_classes.htm">General-purpose classes for date and time programming</A></LI>
</UL>
</font>
</BODY>
</HTML>
