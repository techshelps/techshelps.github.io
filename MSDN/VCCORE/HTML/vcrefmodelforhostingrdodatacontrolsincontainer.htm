<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Model for Hosting RDO Data Controls in a Container</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcrefmodelforhostingrdodatacontrolsincontainer"></A>Model for Hosting RDO Data Controls in a Container</H1>

<P class=label><B>A container hosts an RDO data-source control as follows </B>

<OL>
	<LI>The container obtains an IVBDSC interface from the data-source control. If it cannot find IVBDSC, then it is not a data-source control.<BR><BR></LI>

	<LI>The container obtains the ICursor interfaces from the data-source control. These interfaces supply a Cursor object that can be manipulated by a client.<BR><BR></LI>

	<LI>The container hooks up to the data-source control's INotifyDBEvents interface. This interface allows the container to receive notifications from the data-source control. The container should support the INotifyDBEventsSink interface in order to do this.</LI>
</OL>

<P class=label><B>A container hosts an RDO data-bound control as follows </B>

<OL>
	<LI>The control supports the IBoundObject interface and the container supports the IBoundObjectSite interface. The control obtains the container's IBoundObjectSite interface, and the container obtains the IBoundObject interface from the control.<BR><BR></LI>

	<LI>The control supports the IPropNotifySink interface, and hooks up with the container. This allows the container to receive notifications from the control.<BR><BR></LI>

	<LI>If the control supports INotifyDBEventsSink, it can receive notifications from an RDO data-source control after connecting with the data-source control's INotifyDBEvents interface.<BR><BR></LI>

	<LI>The control then can receive cursor objects from the data-source control (directly or through the container). The cursors can then be manipulated and scrolled. At this point, the RDO data-bound control is successfully bound.</LI>
</OL>

<P>Back to <A HREF="vcrefusingrdodatabindinginvisualc.htm">Using RDO Databinding in Visual C++</A>.</P>
</font>
</BODY>
</HTML>
