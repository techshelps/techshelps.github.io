<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding Custom Resource Templates</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_begin_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_appwiz_CUSTOMWZ">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_understanding_custom_resource_templates"></A>Understanding Custom Resource Templates</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_understanding_custom_appwizards.htm">Overviews</A>  |&nbsp; <A HREF="_core_overview_of_creating_a_custom_appwizard.htm">How Do I</A> |&nbsp; <A HREF="_core_appwizard_programming_reference.htm">Details</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Creating a Custom AppWizard is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_3.Click()">Visual C++ Editions</A>.</P>

<P>The MFC AppWizard obtains the building blocks for the code, resource, and project files it creates from special files called custom resource templates. There are two types of custom resource templates: <A HREF="_core_understanding_text_templates.htm">text templates</A> and <A HREF="_core_understanding_binary_templates.htm">binary templates</A>. Text templates are used to create the source files for a project, and binary templates usually contain bitmaps for user-interface components, such as toolbars.</P>

<P>AppWizard always provides you with a copy of the CONFIRM.INF and NEWPROJ.INF templates and, if you use existing sequences of standard MFC AppWizard steps, AppWizard copies its own custom resource templates into your custom AppWizard project for you to use and/or modify. You can also create your own templates and add them to your custom AppWizard project.</P>

<P>Custom resource templates are resources of type “TEMPLATE”. You can see these if you double-click your project’s resource script file (.RC) in the Workspace window. All custom resource templates are in the folder called “TEMPLATE”. Because these are custom resources, they are treated as binary data. If you double-click a custom resource type in the Project Workspace window, the associated file opens in a binary editor. If you want to edit a custom resource, you must know the actual type it represents and choose that type from the <B>Open As</B> list in the <B>Open</B> dialog box.</P>

<P class=label><B>To open a custom resource type in the appropriate editor</B>

<OL>
	<LI>On the <B>File</B> menu, click <B>Open</B>.<BR><BR></LI>

	<LI>Select the drive and directories where the template is stored.<BR><BR></LI>

	<LI>In the <B>Files of type</B> box, set the types of files to display.
<P class=tl>Files with the chosen extension are displayed in the <B>File Name</B> box.</P>
<P class=tl>This box serves as a filter to display all files with a given extension. For example, selecting Image Files in the <B>Files of Type</B> box displays all files with *.BMP, *.DIB, *.ICO, and *.CUR extensions in the <B>File name</B> box.</P></LI>

	<LI>In the <B>File Name</B> box, select a filename.<BR><BR></LI>

	<LI>From the <B>Open As</B> list, select the type of file that describes the template you wish to open.
<P class=tl>The <B>Auto</B> type will correctly recognize custom resource template file extensions such as .BMP, .H, and .CPP and open an associated file in the correct editor. Select <B>Text</B> from the <B>Open As</B> list to edit custom resource templates that represent resource scripts (.RC files).</P></LI>
</OL>

<P class=label><B>To create a custom resource template</B>

<OL>
	<LI>Copy the file you wish to import as a custom resource template to your project’s Template directory.<BR><BR></LI>

	<LI>On the <B>Insert</B> menu, click <B>Resource</B>.<BR><BR></LI>

	<LI>From the <B>Resource type</B> list, select the type of the custom resource template and click <B>Import</B>.<BR><BR></LI>

	<LI>In the <B>Look in</B> box, select your project’s Template directory.<BR><BR></LI>

	<LI>In the <B>Files of type</B> box, set the types of files to display.
<P class=tl>This box serves as a filter to display all files with a given extension. For example, selecting <B>Icons</B> in the <B>Files of type </B>box displays all files with *.ICO extension in the <B>File Name</B> box.</P></LI>

	<LI>In the <B>File name</B> box, select a file name. <BR><BR></LI>

	<LI>From the <B>Open As</B> list, select <B>Custom</B> and then click <B>Import</B>.<BR><BR></LI>

	<LI>From the <B>Resource Type</B> list, choose <B>“Template”</B>.
<P class=tl>The file is imported into your project as a custom resource type and opened in the binary data editor.</P>
<P class=tl>The custom resource type is added to your project under your projects “Template” folder, which is available by selecting the <B>ResourceView</B> tab in the Project Workspace window. The custom resource template type is given an ID of IDR_TEMPLATE*, where * is a number that is unique within the “Template” folder. You can use the <B>Properties</B> command on the pop-up menu to change the ID. To activate the ID’s pop-up menu, place the mouse cursor on the new custom resource template’s ID in the “Template” window and click the right mouse button.</P></LI>
</OL>

<H4>What do you want to know more about?</H4>

<UL type=disc>
	<LI><A HREF="_core_overview_of_creating_a_custom_appwizard.htm">An overview of creating a custom AppWizard</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_the_files_that_appwizard_creates.htm">The files that AppWizard creates</A><BR><BR></LI>

	<LI><A HREF="_core_adding_functionality_to_your_custom_appwizard.htm">Adding functionality to a custom AppWizard</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_text_templates.htm">Text templates</A><BR><BR></LI>

	<LI><A HREF="_core_how_macros_get_their_values.htm">How macros get their values</A><BR><BR></LI>

	<LI><A HREF="_core_how_to_specify_macros_in_directives_or_text.htm">How to specify macros in directives or text</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_binary_templates.htm">Binary templates</A><BR><BR></LI>

	<LI><A HREF="_core_creating_a_classwizard_information_file_template.htm">Creating a ClassWizard information file template</A><BR><BR></LI>

	<LI><A HREF="_core_appwizard_programming_reference.htm">The AppWizard Programming Reference</A></LI>
</UL>
</font>
</BODY>
</HTML>
