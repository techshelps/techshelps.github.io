<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Internationalization Strategies</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_internationalization_strategies"></A><SUP></SUP>Internationalization Strategies</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_unicode_programming_tasks.htm">Unicode Tasks</A>  |&nbsp; <A HREF="_core_multibyte_character_set_.28.mbcs.29_.tasks.htm">Multibyte Character Set (MBCS) Tasks</A></P>

<P>Depending on your target operating system(s) and markets, you have several internationalization strategies:

<UL type=disc>
	<LI>Your application uses Unicode and therefore runs on Windows NT (but not on Windows 95).
<P class=tl>You use Unicode-specific programming techniques and all characters are 16 bits wide (although you can use ANSI characters in some parts of your program for special purposes). The C run-time library provides functions, macros, and data types for Unicode-only programming. MFC is fully Unicode-enabled.</P></LI>

	<LI>Your application uses MBCS and can be run on any Win32 platform.
<P class=tl>You use MBCS-specific programming techniques. Strings can contain single-byte characters, double-byte characters, or both. The C run-time library provides functions, macros, and data types for MBCS-only programming. MFC is fully MBCS-enabled.</P></LI>

	<LI>The source code for your application is written for complete portability&nbsp; —  by recompiling with the symbol <B>_UNICODE</B> or the symbol <B>_MBCS</B> defined, you can produce versions that use either. For more information, see <A HREF="_core_generic.2d.text_mappings_in_tchar..h.htm">Generic-Text Mappings in TCHAR.H</A>.
<P class=tl>You use fully portable C run-time functions, macros, and data types. MFC’s flexibility supports any of these strategies.</P></LI>
</UL>

<P>The remainder of this family of articles focuses on writing completely portable code that you can build as Unicode or as MBCS.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_locales_and_code_pages.htm">Locales and Code Pages</A></P>
</font>
</BODY>
</HTML>
