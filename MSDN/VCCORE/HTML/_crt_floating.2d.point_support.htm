<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Floating-Point Support</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_floating.2d.point_support"></A><SUP></SUP>Floating-Point Support</H1>

<P>Many Microsoft run-time library functions require floating-point support from a math coprocessor or from the floating-point libraries that accompany the compiler. Floating-point support functions are loaded only if required.</P>

<P>When you use a floating-point type specifier in the format string of a call to a function in the <B>printf</B> or <B>scanf</B> family, you must specify a floating-point value or a pointer to a floating-point value in the argument list to tell the compiler that floating-point support is required. The math functions in the Microsoft run-time library handle exceptions the same way that the UNIX V math functions do.</P>

<P>The Microsoft run-time library sets the default internal precision of the math coprocessor (or emulator) to 64 bits. This default applies only to the internal precision at which all intermediate calculations are performed; it does not apply to the size of arguments, return values, or variables. You can override this default and set the chip (or emulator) back to 80-bit precision by linking your program with LIB/FP10.OBJ. On the linker command line, FP10.OBJ must appear before LIBC.LIB, LIBCMT.LIB, or MSVCRT.LIB.</P>

<P class=label><B>Floating-Point Functions</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=29%><B>Routine</B></TD>
<TD class=label width=71%><B>Use</B></TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_abs.htm">abs</A></TD>
<TD width=71%>Return absolute value of <B>int</B></TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_acos.htm">acos</A></TD>
<TD width=71%>Calculate arccosine</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_asin.htm">asin</A></TD>
<TD width=71%>Calculate arcsine</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_atan.2c_.atan2.htm">atan, atan2</A></TD>
<TD width=71%>Calculate arctangent</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_atof.2c_.atoi.2c_._atoi64.2c_.atol.htm">atof</A></TD>
<TD width=71%>Convert character string to double-precision floating-point value</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_bessel_functions.htm">Bessel functions</A></TD>
<TD width=71%>Calculate Bessel functions <B>_j0</B>, <B>_j1</B>, <B>_jn</B>, <B>_y0</B>, <B>_y1</B>, <B>_yn</B></TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__cabs.htm">_cabs</A></TD>
<TD width=71%>Find absolute value of complex number</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_ceil.htm">ceil</A></TD>
<TD width=71%>Find integer ceiling</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__chgsign.htm">_chgsign</A></TD>
<TD width=71%>Reverse sign of double-precision floating-point argument</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__clear87.2c_._clearfp.htm">_clear87, _clearfp</A></TD>
<TD width=71%>Get and clear floating-point status word</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__control87.2c_._controlfp.htm">_control87, _controlfp</A></TD>
<TD width=71%>Get old floating-point control word and set new control-word value</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__copysign.htm">_copysign</A></TD>
<TD width=71%>Return one value with sign of another</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_cos.2c_.cosh.htm">cos</A></TD>
<TD width=71%>Calculate cosine</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_cos.2c_.cosh.htm">cosh</A></TD>
<TD width=71%>Calculate hyperbolic cosine</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_difftime.htm">difftime</A></TD>
<TD width=71%>Compute difference between two specified time values</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_div.htm">div</A></TD>
<TD width=71%>Divide one integer by another, returning quotient and remainder</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__ecvt.htm">_ecvt</A></TD>
<TD width=71%>Convert <B>double</B> to character string of specified length</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_exp.htm">exp</A></TD>
<TD width=71%>Calculate exponential function</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_fabs.htm">fabs</A></TD>
<TD width=71%>Find absolute value</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__fcvt.htm">_fcvt</A></TD>
<TD width=71%>Convert <B>double</B> to string with specified number of digits following decimal point</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__finite.htm">_finite</A></TD>
<TD width=71%>Determine whether given double-precision floating-point value is finite</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_floor.htm">floor</A></TD>
<TD width=71%>Find largest integer less than or equal to argument</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_fmod.htm">fmod</A></TD>
<TD width=71%>Find floating-point remainder</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__fpclass.htm">_fpclass</A></TD>
<TD width=71%>Return status word containing information on floating-point class </TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__fpieee_flt.htm">_fpieee_flt</A></TD>
<TD width=71%>Invoke user-defined trap handler for IEEE floating-point exceptions</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__fpreset.htm">_fpreset</A></TD>
<TD width=71%>Reinitialize floating-point math package</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_frexp.htm">frexp</A></TD>
<TD width=71%>Calculate exponential value</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__gcvt.htm">_gcvt</A></TD>
<TD width=71%>Convert floating-point value to character string</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__hypot.htm">_hypot</A></TD>
<TD width=71%>Calculate hypotenuse of right triangle</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__isnan.htm">_isnan</A></TD>
<TD width=71%>Check given double-precision floating-point value for not a number (NaN)</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_labs.htm">labs</A></TD>
<TD width=71%>Return absolute value of <B>long</B></TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_ldexp.htm">ldexp</A></TD>
<TD width=71%>Calculate product of argument and 2 to specified power</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_ldiv.htm">ldiv</A></TD>
<TD width=71%>Divide one <B>long</B> integer by another, returning quotient and remainder</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_log.2c_.log10.htm">log</A></TD>
<TD width=71%>Calculate natural logarithm</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_log.2c_.log10.htm">log10</A></TD>
<TD width=71%>Calculate base-10 logarithm</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__logb.htm">_logb</A></TD>
<TD width=71%>Extract exponential value of double-precision floating-point argument</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__lrotl.2c_._lrotr.htm">_lrotl, _lrotr</A></TD>
<TD width=71%>Shift <B>unsigned long int</B> left (<B>_lrotl</B>) or right (<B>_lrotr</B>)</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__matherr.htm">_matherr</A></TD>
<TD width=71%>Handle math errors</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt___max.htm">__max</A></TD>
<TD width=71%>Return larger of two values</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt___min.htm">__min</A></TD>
<TD width=71%>Return smaller of two values</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_modf.htm">modf</A></TD>
<TD width=71%>Split argument into integer and fractional parts</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__nextafter.htm">_nextafter</A></TD>
<TD width=71%>Return next representable neighbor</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_pow.htm">pow</A></TD>
<TD width=71%>Calculate value raised to a power</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_printf.2c_.wprintf.htm">printf, wprintf</A></TD>
<TD width=71%>Write data to <B>stdout</B> according to specified format</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_rand.htm">rand</A></TD>
<TD width=71%>Get pseudorandom number</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__rotl.2c_._rotr.htm">_rotl, _rotr</A></TD>
<TD width=71%>Shift <B>unsigned int</B> left (<B>_rotl</B>) or right (<B>_rotr</B>)</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__scalb.htm">_scalb</A></TD>
<TD width=71%>Scale argument by power of 2</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_scanf.2c_.wscanf.htm">scanf, wscanf</A></TD>
<TD width=71%>Read data from <B>stdin</B> according to specified format and write data to specified location</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_sin.2c_.sinh.htm">sin</A></TD>
<TD width=71%>Calculate sine</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_sin.2c_.sinh.htm">sinh</A></TD>
<TD width=71%>Calculate hyperbolic sine</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_sqrt.htm">sqrt</A></TD>
<TD width=71%>Find square root</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_srand.htm">srand</A></TD>
<TD width=71%>Initialize pseudorandom series</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt__status87.2c_._statusfp.htm">_status87, _statusfp</A></TD>
<TD width=71%>Get floating-point status word</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_strtod.2c_.wcstod.htm">strtod</A></TD>
<TD width=71%>Convert character string to double-precision value</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_tan.2c_.tanh.htm">tan</A></TD>
<TD width=71%>Calculate tangent</TD>
</TR>

<TR VALIGN="top">
<TD width=29%><A HREF="_crt_tan.2c_.tanh.htm">tanh</A></TD>
<TD width=71%>Calculate hyperbolic tangent</TD>
</TR>
</TABLE><BR>
</font>
</BODY>
</HTML>
