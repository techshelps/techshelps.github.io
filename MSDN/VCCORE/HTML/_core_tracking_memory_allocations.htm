<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tracking Memory Allocations</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_tracking_memory_allocations"></A>Tracking Memory Allocations</H1>

<P>The Microsoft Foundation Class Library (MFC) defines the macro <B>DEBUG_NEW</B> to assist you in locating memory leaks. You can use <B>DEBUG_NEW</B> everywhere in your program that you would ordinarily use the <B>new</B> operator.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;As of MFC version 4.0, MFC uses the same debug heap and memory allocator as the C run-time library. For more information, see <A HREF="_core_c_run.2d.time_debug_libraries.htm">C Run-Time Debug Libraries</A>.</P>

<P>When you compile a debug version of your program, <B>DEBUG_NEW</B> keeps track of the file name and line number for each object that it allocates. Then, when you call <B>DumpAllObjectsSince</B>, as described in the topic <A HREF="_core_dumping_all_objects.htm">Dumping All Objects</A>, each object allocated with <B>DEBUG_NEW</B> will be shown with the file and line number where it was allocated, thus allowing you to pinpoint the sources of memory leaks.</P>

<P>When you compile a release version of your program, <B>DEBUG_NEW</B> resolves to a simple <B>new</B> operation without the file name and line number information. Thus, you pay no speed penalty in the release version of your program.</P>

<P class=label><B><A NAME="_core_to_use_debug_new"></A>To use DEBUG_NEW</B>

<UL type=disc>
	<LI>Define a macro in your source files that replaces <B>new</B> with <B>DEBUG_NEW</B>, as shown here:
<PRE><CODE>#define new DEBUG_NEW
</CODE></PRE>

<P class=atl><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;While the framework uses <B>DEBUG_NEW</B> in debug builds, your code does not. You must enable this feature, as shown in this procedure.</p>
<P class=tl>You can then use <B>new</B> for all heap allocations. The preprocessor will substitute <B>DEBUG_NEW</B> when compiling your code. In the <B>Win32 Debug</B> version of the library, <B>DEBUG_NEW</B> will create debugging information for each heap block. In the release version, <B>DEBUG_NEW</B> will resolve to a standard memory allocation without the extra debugging information.</P></LI>
</UL>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_detecting_memory_leaks.htm">Detecting Memory Leaks</A> </P>
</font>
</BODY>
</HTML>
