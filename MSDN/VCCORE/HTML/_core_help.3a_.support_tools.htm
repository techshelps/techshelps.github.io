<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Help: Support Tools</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Sample_mfc_scribble">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble help">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_GS_Compiling_Your_Help_Files">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_help.3a_.support_tools"></A>Help: Support Tools</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_help.3a_.context.2d.sensitive_help_overview.htm">Overview</A>  |&nbsp; <A HREF="_core_help_tasks.3a_.context.2d.sensitive_help_for_your_programs.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_3.Click()">Tutorial</A></P>

<P>You will use three main tools to develop your application’s Help system: AppWizard, MakeHm, and the Windows Help Compiler. You also need an editor, such as Microsoft Word for Windows, that can edit rich text format (.RTF) files. You can use the Visual C++ bitmap editor to create bitmaps to include in your Help files. </P>

<P class=indent><B><B>Note</B></B>  You can upgrade your Help Project files to a 4.0 format with the Windows 4.0 Help compiler. This gives you access to the Windows 4.0 Help Workshop, a graphical help authoring environment with many useful features. If you’re planning on porting your applications to other platforms, first ensure that those platforms have a compiler that’s compatible with the 4.0 Help Project file before upgrading.</P>



<H2><A NAME="_core_choosing_the_help_option_in_appwizard"></A>Choosing the Help Option in AppWizard</H2>

<P>AppWizard is your first tool for implementing context-sensitive Help. Check the Context-Sensitive Help checkbox in AppWizard. AppWizard then provides the message-map entries in your <B>CWinApp</B>-derived class that connect the whole help mechanism, adds a menu item to the Help menu, and adds a button to the toolbar resource that the user can press to invoke Help mode. </P>

<P>AppWizard also creates a set of skeletal starter files, as shown in the following table. </P>

<P class=label><B>AppWizard-Supplied Help Files</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=29%><B>File</B></TD>
<TD class=label width=71%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=29%>MakeHelp.bat</TD>
<TD width=71%>A batch file that manages help ID mapping and calls the Help Compiler. Only supplied in Visual C++ 6.0 for compatibility with previous releases.&nbsp; Custom build rules for the .hpj, .cnt and resource.h file replace the functionality of MakeHelp.bat.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>HLP\&lt;project&gt;.HPJ</TD>
<TD width=71%>A Windows Help project file that the Windows Help Compiler uses.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>HLP\&lt;project&gt;.CNT</TD>
<TD width=71%>A file containing the information needed to create the Help Contents screen.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>HLP\*.BMP</TD>
<TD width=71%>Various bitmap files used with the supplied Help files.</TD>
</TR>

<TR VALIGN="top">
<TD width=29%>HLP\*.RTF</TD>
<TD width=71%>Help files in .RTF format that contain starter help for the application components supplied by the framework.</TD>
</TR>
</TABLE><BR>

<P>The MakeHelp.bat file is in your project directory. The .BMP, .RTF, .CNT, and Help project file (.HPJ) are in an HLP subdirectory that AppWizard creates in your project directory. </P>

<P>You can edit these files as described in <A HREF="_core_help.3a_.authoring_help_topics.htm">Help: Authoring Help Topics</A> to fill in application-specific help information.</P>



<H2><A NAME="_core_using_makehm_and_makehelp..bat"></A>Using MakeHm</H2>

<P>Once you’ve created an AppWizard application with help support, you can build help simply by clicking Build &lt;project&gt; on the Build menu. This command runs invokes the custom build rules on the .hpj, .cnt and resource.h files and create an .HLP file..</P>

<P>If the resource.h file changed, MakeHm runs. MakeHm reads your project’s RESOURCE.H file and creates a help mapping (.HM) file. This .HM file defines help-context IDs corresponding to the resource IDs in your RESOURCE.H file, so that each dialog, menu item, or other resource has a help-context ID associated with it. </P>

<P>Your project’s .HPJ file contains a statement in its [MAP] section that includes your project’s .HM file, as well as the standard .HM file included with MFC. The Help Compiler uses the help-context IDs in these .HM files to determine which Help topic is associated with each dialog, menu item, or other resource.</P>

<P>Whenever you add new resources to your project, you must add new Help topics for those resources to your .RTF files and then recompile your Help file. For more information, see <A HREF="JavaScript:hhobj_4.Click()">Compiling Your Help Files</A> in <I>Tutorials</I>.</P>

<P>Custom build rules will run the Windows Help Compiler to create the .HLP file if the .hpj file changes. The Help Compiler creates the .HLP file in your application’s main source code directory. If a Debug and/or Release subdirectory already exists, the .HLP file is copied to that subdirectory. This is useful because when you run either the Debug or Release version of your application, it will expect to find the .HLP file in the same directory as the debug or release executable file.</P>

<P>If you add new resources for which you wish to implement help contexts, compile the .HPJ from either the command line or from within the integrated development environment.</P>
</font>
</BODY>
</HTML>
