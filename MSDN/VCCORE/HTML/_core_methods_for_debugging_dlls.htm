<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Methods for Debugging DLLs</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_methods_for_debugging_dlls"></A>Methods for Debugging DLLs</H1>

<P>If you have the source for both the DLL and the calling program, open the project for the calling executable file and debug the DLL from there. If you load a DLL dynamically, you must specify it in the Additional DLLs category of the <B>Debug</B> tab in the <B>Project Settings</B> dialog box. </P>

<P>If you have the source for the DLL only, open the project that builds the DLL. Use the <B>Debug</B> tab in the <B>Project Settings</B> dialog box to specify the executable file that calls the DLL.</P>

<P>You can also debug a DLL without a project. For example, maybe you just picked up a DLL and source code but you don’t have an associated project or workspace. You can use the <B>Open</B> command on the <B>File</B> menu to select the .DLL file you want to debug. The debug information should be in either the .DLL or the related .PDB file. After Visual C++ opens the file, on the <B>Build</B> menu click <B>Start Debug</B> and <B>Go</B> to begin debugging.</P>

<P class=label><B>To debug a DLL using the project for the executable file</B>

<OL>
	<LI>From the <B>Project</B> menu, click <B>Settings</B>.
<P class=tl>The <B>Project Settings</B> dialog box appears.</P></LI>

	<LI>Choose the <B>Debug</B> tab.<BR><BR></LI>

	<LI>In the <B>Category</B> drop-down list box, select General. <BR><BR></LI>

	<LI>In the <B>Program Arguments</B> text box, type any command-line arguments required by the executable file.<BR><BR></LI>

	<LI>In the <B>Category</B> drop-down list box, select <B>Additional DLLs</B>.<BR><BR></LI>

	<LI>In the <B>Local Name</B> column, type the names of DLLs to debug.
<P class=tl>If you are debugging remotely, the <B>Remote Name</B> column appears. In this column, type the complete path for the remote module to map to the local module name.</P></LI>

	<LI>In the <B>Preload</B> column, select the check box if you want to load the module before debugging begins.<BR><BR></LI>

	<LI>Click <B>OK</B> to store the information in your project.<BR><BR></LI>

	<LI>From the <B>Build</B> menu, click <B>Start Debug</B> and <B>Go</B> to start the debugger.</LI>
</OL>

<P>You can set breakpoints in the DLL or the calling program. You can open a source file for the DLL and set breakpoints in that file, even though it is not a part of the executable file’s project.</P>

<P class=label><B>To debug a DLL using the project for the DLL</B>

<OL>
	<LI>From the <B>Project</B> menu, click <B>Settings</B>.
<P class=tl>The <B>Project Settings</B> dialog box appears.</P></LI>

	<LI>Choose the <B>Debug</B> tab.<BR><BR></LI>

	<LI>In the <B>Category</B> drop-down list box, select General. <BR><BR></LI>

	<LI>In the <B>Executable For Debug Session</B> text box, type the name of the executable file that calls the DLL.<BR><BR></LI>

	<LI>In the <B>Category</B> list box, select <B>Additional DLLs</B>.<BR><BR></LI>

	<LI>In the <B>Local Module Name</B> column, type the name of the DLLs you want to debug.<BR><BR></LI>

	<LI>Click <B>OK</B> to store the information in your project.<BR><BR></LI>

	<LI>Set breakpoints as required in your DLL source files or on function symbols in the DLL.<BR><BR></LI>

	<LI>From the <B>Build</B> menu, click <B>Start Debug</B> and <B>Go</B> to start the debugger.</LI>
</OL>

<P class=label><B>To debug a DLL created with an external project</B>

<OL>
	<LI>From the <B>Project</B> menu, click <B>Settings</B>.
<P class=tl>The <B>Project Settings</B> dialog box appears.</P></LI>

	<LI>Choose the <B>Debug</B> tab.<BR><BR></LI>

	<LI>In the <B>Category</B> drop-down list box, select General.<BR><BR></LI>

	<LI>In the <B>Executable For Debug Session</B> text box, type the name of the DLL that your external makefile builds. <BR><BR></LI>

	<LI>Click <B>OK</B> to store the information in your project.<BR><BR></LI>

	<LI>Build a debug version of the DLL with symbolic debugging information, if you don’t already have one.<BR><BR></LI>

	<LI>Follow one of the two procedures immediately preceding this one to debug the DLL.</LI>
</OL>
</font>
</BODY>
</HTML>
