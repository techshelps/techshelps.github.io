<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_lseek, _lseeki64</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__lseek.2c_._lseeki64"></A><SUP></SUP>_lseek, _lseeki64</H1>

<P>Move a file pointer to the specified location.</P>

<P><B>long</B> <B>_lseek(</B> <B>int</B> <I>handle</I><B>,</B> <B>long</B> <I>offset</I><B>,</B> <B>int</B> <I>origin</I> <B>);</B></P>

<P><B>__int64</B> <B>_lseeki64(</B> <B>int</B> <I>handle</I><B>,</B> <B>__int64</B> <I>offset</I><B>,</B> <B>int</B> <I>origin</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=56%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_lseek</B></TD>
<TD width=27%>&lt;io.h&gt;</TD>
<TD width=56%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_lseeki64</B></TD>
<TD width=27%>&lt;io.h&gt;</TD>
<TD width=56%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_lseek</B> returns the offset, in bytes, of the new position from the beginning of the file. <B>_lseeki64</B> returns the offset in a 64-bit integer. The function returns&nbsp; –1L to indicate an error and sets <A HREF="_crt__doserrno.2c_.errno.2c_._sys_errlist.2c_.and__sys_nerr.htm">errno</A> either to <B>EBADF</B>, meaning the file handle is invalid, or to <B>EINVAL</B>, meaning the value for <I>origin</I> is invalid or the position specified by <I>offset</I> is before the beginning of the file. On devices incapable of seeking (such as terminals and printers), the return value is undefined.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>handle</I></P>

<P class=indent>Handle referring to open file</P>

<P class=dt><I>offset</I></P>

<P class=indent>Number of bytes from <I>origin</I></P>

<P class=dt><I>origin</I></P>

<P class=indent>Initial position</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_lseek</B> function moves the file pointer associated with <I>handle</I> to a new location that is <I>offset</I> bytes from <I>origin</I>. The next operation on the file occurs at the new location. The <I>origin</I> argument must be one of the following constants, which are defined in STDIO.H:</P>

<P class=dt><B>SEEK_SET</B></P>

<P class=indent>Beginning of file</P>

<P class=dt><B>SEEK_CUR</B></P>

<P class=indent>Current position of file pointer</P>

<P class=dt><B>SEEK_END</B></P>

<P class=indent>End of file</P>

<P>You can use <B>_lseek</B> to reposition the pointer anywhere in a file or beyond the end of the file.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* LSEEK.C: This program first opens a file named LSEEK.C.
 * It then uses _lseek to find the beginning of the file,
 * to find the current position in the file, and to find
 * the end of the file.
 */

#include &lt;io.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   int fh;
   long pos;               /* Position of file pointer */
   char buffer[10];

   fh = _open( "lseek.c", _O_RDONLY );

   /* Seek the beginning of the file: */
   pos = _lseek( fh, 0L, SEEK_SET );
   if( pos == -1L )
      perror( "_lseek to beginning failed" );
   else
      printf( "Position for beginning of file seek = %ld\n", pos );

   /* Move file pointer a little */
    _read( fh, buffer, 10 );

   /* Find current position: */
   pos = _lseek( fh, 0L, SEEK_CUR );
   if( pos == -1L )
      perror( "_lseek to current position failed" );
   else
      printf( "Position for current position seek = %ld\n", pos );

   /* Set the end of the file: */
   pos = _lseek( fh, 0L, SEEK_END );
   if( pos == -1L )
      perror( "_lseek to end failed" );
   else
      printf( "Position for end of file seek = %ld\n", pos );

   _close( fh );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Position for beginning of file seek = 0
Position for current position seek = 10
Position for end of file seek = 1207

</CODE></PRE>

<P><A HREF="_crt_low.2d.level_i.2f.o.htm">Low-Level I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_fseek.htm">fseek</A>, <A HREF="_crt__tell.2c_._telli64.htm">_tell</A></P>
</font>
</BODY>
</HTML>
