<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Missing Function Body or Variable</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_error_missing_function_body_or_variable"></A>Missing Function Body or Variable</H1>

<P>Having just a function prototype will allow the compiler to continue without error, but the linker will not be able to resolve your call to an address because there is no function code or variable space reserved. You will not see this error until you create an actual call to the function that the linker must resolve.</P>

<P>TEST.CPP</P>

<PRE><CODE>void DoSomething(void);

void main(void)
{

DoSomething( );  // This line will cause LNK2001 because 
                 // the prototype in testcls.h allows the 
                 // compiler to think the function exists. 
                 // The linker finds that it doesn't.
}</CODE></PRE>

<P>When using&nbsp; C++, make sure that you include the implementation of a specific function for a class and not just a prototype in the class definition. If you are defining the class outside of the header file be sure to include the class name before the function in the Classname::memberfunction style.</P>

<PRE><CODE>class testcls {
 public:
  static void DoSomething(void);
};


void DoSomething(void)    // Should probably be testcls::DoSomething
{
}

void main(void)
{
testcls testclsObject;
testclsObject.DoSomething( ); 

}
</CODE></PRE>
</font>
</BODY>
</HTML>
