<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Notification Hooks</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcconnotificationhooks"></A>Notification Hooks</H1>

<P>The notification hook is enabled:

<UL type=disc>
	<LI>By supplying a new definition of the pointer __pfnDliNotifyHook that is initialized to point to your own function that receives the notifications, or<BR><BR></LI>

	<LI>By setting the pointer __pfnDliNotifyHook to the function before any calls to the DLL that the program is delay loading.</LI>
</UL>

<P>If this pointer is initialized (non-zero), the delay load helper will invoke the function at certain notification points throughout its execution. The function pointer has the following definition:</P>

<PRE><CODE>// The "notify hook" gets called for every call to the
// delay load helper. This allows a user to hook every call and
// skip the delay load helper entirely.
//
// dliNotify == {
//  dliStartProcessing |
//  dliPreLoadLibrary  |
//  dliPreGetProc |
//  dliNoteEndProcessing}
//  on this call.
//
#if defined(__cplusplus)
extern "C"
#endif
extern
PfnDliHook   __pfnDliNotifyHook;
</CODE></PRE>

<P>The notifications pass in a DelayLoadInfo structure to the hook function along with the notification value. This data is identical to that used by the delay load helper routine. The notification value will be one of the values defined in <A HREF="vcconstructureconstantdefinitions.htm">Structure and Constant Definitions</A>.</P>
</font>
</BODY>
</HTML>
