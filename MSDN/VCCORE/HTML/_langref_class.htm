<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>class</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_class"></A><SUP></SUP>class</H1>

<P><B>C++ Specific </B></P>

<P><B>class</B> [<I>tag</I> [<B>:</B> <I>base-list</I> ]]<BR>
<B>{</B><BR>
<I>member-list</I><BR>
<B>}</B> [<I>declarators</I>]<B>;</B><BR>
[ <B>class</B> ] <I>tag declarators</I><B>;</B></P>

<P>The <B>class</B> keyword declares a class type or defines an object of a class type.</P>

<P>The elements of a class definition are as follows:</P>

<P class=dt><I>tag</I></P>

<P class=indent>Names the class type. The tag becomes a reserved word within the scope of the class.</P>

<P class=dt><I>base-list</I></P>

<P class=indent>Specifies the class(es) from which the class is derived (its base classes). Each base class's name can be preceded by an access specifier (<A HREF="_langref_public.htm">public</A>, <A HREF="_langref_private.htm">private</A>, <A HREF="_langref_protected.htm">protected</A>) and the <A HREF="_langref_virtual.htm">virtual</A> keyword. See the <A HREF="_langref_table_of_member_access_privileges.htm">Table of Member Access Privileges</A> for more information.</P>

<P class=dt><I>member-list</I></P>

<P class=indent>Declares members or friends of the class. Members can include data, functions, nested classes, enums, bit fields, and type names. Friends can include functions or classes. Explicit data initialization is not allowed. A class type cannot contain itself as a nonstatic member. It can contain a pointer or a reference to itself. See the <A HREF="_langref_virtual.htm">virtual</A> keyword and the <A HREF="_langref_table_of_member_access_privileges.htm">Table of Member Access Privileges</A> for more information.</P>

<P class=dt><I>declarators</I></P>

<P class=indent>Declares one or more objects of the class type.</P>

<P><B>END C++ Specific</B></P>

<P class=label><B>Example</B></P>

<P>In the following example, the class <CODE>CAboutDlg</CODE> is derived from the base class <CODE>CDialog</CODE>. The new class contains one member function named <CODE>CAboutDlg</CODE>:</P>

<PRE><CODE>// Example of the class keyword
// CAboutDlg dialog used for App About

class CAboutDlg : public CDialog
{
public:
   CAboutDlg();

// Dialog Data
   //{{AFX_DATA(CAboutDlg)
   enum { IDD = IDD_ABOUTBOX };
   //}}AFX_DATA

// Implementation
protected:
   virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
   //{{AFX_MSG(CAboutDlg)
      // No message handlers
   //}}AFX_MSG
   DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)
{
   //{{AFX_DATA_INIT(CAboutDlg)
   //}}AFX_DATA_INIT
}</CODE></PRE>

<P>For more information, see <A HREF="_langref_struct.htm">struct</A>, <A HREF="_langref_union.htm">union</A>, <A HREF="_langref_inheritance_keywords.htm">__multiple_inheritance</A>, <A HREF="_langref_inheritance_keywords.htm">__single_inheritance</A>, and <A HREF="_langref_inheritance_keywords.htm">__virtual_inheritance</A>. </P>
</font>
</BODY>
</HTML>
