<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_set_new_mode</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__set_new_mode"></A><SUP></SUP>_set_new_mode</H1>

<P>Sets a new handler mode for <B>malloc</B>.</P>

<P><B>int</B> <B>_set_new_mode(</B> <B>int</B> <I>newhandlermode</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=26%><B>Routine</B></TD>
<TD class=label width=29%><B>Required Header</B></TD>
<TD class=label width=45%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=26%><B>_set_new_mode</B></TD>
<TD width=29%>&lt;new.h&gt;</TD>
<TD width=45%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_set_new_mode</B> returns the previous handler mode set for <B>malloc</B>. A return value of 1 indicates that, on failure to allocate memory, <B>malloc</B> previously called the new handler routine; a return value of 0 indicates that it did not. If the <I>newhandlermode</I> argument does not equal 0 or 1, <B>_set_new_mode</B> returns –1.</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>newhandlermode</I></P>

<P class=indent>New handler mode for <B>malloc</B>; valid value is 0 or 1</P>

<P class=label><B>Remarks</B></P>

<P>The C++ <B>_set_new_mode</B> function sets the new handler mode for <A HREF="_crt_malloc.htm">malloc</A>. The new handler mode indicates whether, on failure, <B>malloc</B> is to call the new handler routine as set by <A HREF="_crt__set_new_handler.htm">_set_new_handler</A>. By default, <B>malloc</B> does not call the new handler routine on failure to allocate memory. You can override this default behavior so that, when <B>malloc</B> fails to allocate memory, <B>malloc</B> calls the new handler routine in the same way that the <B>new</B> operator does when it fails for the same reason. For more information, see the <A HREF="_langref_new_operator.htm">new</A> and <A HREF="_langref_delete_operator.htm">delete</A> operators in the <I>Language Quick Reference</I>. To override the default, call </P>

<PRE><CODE>_set_new_mode(1)
</CODE></PRE>

<P>early in your program, or link with NEWMODE.OBJ.</P>

<P><A HREF="_crt_memory_allocation.htm">Memory Allocation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_calloc.htm">calloc</A>, <A HREF="_crt_free.htm">free</A>, <A HREF="_crt_realloc.htm">realloc</A>, <A HREF="_crt__query_new_handler.htm">_query_new_handler</A>, <A HREF="_crt__query_new_mode.htm">_query_new_mode</A></P>
</font>
</BODY>
</HTML>
