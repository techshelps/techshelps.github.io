<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handlers for Commands and Control Notifications</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble start">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_handlers_for_commands_and_control_notifications"></A>Handlers for Commands and Control Notifications</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_messages_and_commands.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_message.2d.mapping_tasks.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A></P>

<P>There are no default handlers for commands or control-notification messages. Therefore, you are bound only by convention in naming your handlers for these categories of messages. When you map the command or control notification to a handler, ClassWizard proposes a name based on the command ID or control-notification code. You can accept the proposed name, change it, or replace it.</P>

<P>Convention suggests that you name handlers in both categories for the user-interface object they represent. Thus a handler for the Cut command on the Edit menu might be named</P>

<PRE><CODE>afx_msg void OnEditCut();
</CODE></PRE>

<P>Because the Cut command is so commonly implemented in applications, the framework predefines the command ID for the Cut command as <B>ID_EDIT_CUT</B>. For a list of all predefined command IDs, see the file AFXRES.H. For more information, see <A HREF="_core_standard_commands.htm">Standard Commands</A>. </P>

<P>In addition, convention suggests a handler for the <B>BN_CLICKED</B> notification message from a button labeled “Use As Default” might be named</P>

<PRE><CODE>afx_msg void OnClickedUseAsDefault();
</CODE></PRE>

<P>You might assign this command an ID of <CODE>IDC_USE_AS_DEFAULT</CODE> because it is equivalent to an application-specific user-interface object.</P>

<P>Both categories of messages take no arguments and return no value.</P>
</font>
</BODY>
</HTML>
