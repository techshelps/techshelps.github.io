<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_fullpath, _wfullpath</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__fullpath.2c_._wfullpath"></A><SUP></SUP>_fullpath, _wfullpath</H1>

<P>Create an absolute or full path name for the specified relative path name.</P>

<P><B>char</B> <B>*_fullpath(</B> <B>char</B> <B>*</B><I>absPath</I><B>,</B> <B>const</B> <B>char</B> <B>*</B><I>relPath</I><B>,</B> <B>size_t</B> <I>maxLength</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*_wfullpath(</B> <B>wchar_t</B> <B>*</B><I>absPath</I><B>,</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>relPath</I><B>,</B> <B>size_t</B> <I>maxLength</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Function</B></TD>
<TD class=label width=34%><B>Required Header</B></TD>
<TD class=label width=49%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_fullpath</B></TD>
<TD width=34%>&lt;stdlib.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_wfullpath</B></TD>
<TD width=34%>&lt;stdlib.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=49%>Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns a pointer to a buffer containing the absolute path name (<I>absPath</I>). If there is an error (for example, if the value passed in <I>relPath</I> includes a drive letter that is not valid or cannot be found, or if the length of the created absolute path name (<I>absPath</I>) is greater than <I>maxLength</I>) the function returns <B>NULL</B>.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>absPath</I></P>

<P class=indent>Pointer to a buffer containing the absolute or full path name</P>

<P class=dt><I>relPath</I></P>

<P class=indent>Relative path name</P>

<P class=dt><I>maxLength</I></P>

<P class=indent>Maximum length of the absolute path name buffer (<I>absPath</I>). This length is in bytes for _<B>fullpath</B> but in wide characters (<B>wchar_t</B>) for _<B>wfullpath</B>.</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_fullpath</B> function expands the relative path name in <I>relPath</I> to its fully qualified or “absolute” path, and stores this name in <I>absPath.</I> A relative path name specifies a path to another location from the current location (such as the current working directory: “.”). An absolute path name is the expansion of a relative path name that states the entire path required to reach the desired location from the root of the filesystem. Unlike <B>_makepath</B>, <B>_fullpath</B> can be used to obtain the absolute path name for relative paths (<I>relPath</I>) that include “./” or “../” in their names.</P>

<P>For example, to use C run-time routines, the application must include the header files that contain the declarations for the routines. Each header file include statement references the location of the file in a relative manner (from the application’s working directory):</P>

<PRE><CODE>#include &lt;stdlib.h&gt;
</CODE></PRE>

<P>when the absolute path (actual file system location) of the file may be:</P>

<PRE><CODE>\\machine\shareName\msvcSrc\crt\headerFiles\stdlib.h
</CODE></PRE>

<P><B>_fullpath</B> automatically handles multibyte-character string arguments as appropriate, recognizing multibyte-character sequences according to the multibyte code page currently in use. <B>_wfullpath</B> is a wide-character version of <B>_fullpath</B>; the string arguments to <B>_wfullpath</B> are wide-character strings. <B>_wfullpath</B> and <B>_fullpath</B> behave identically except that <B>_wfullpath</B> does not handle multibyte-character strings.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tfullpath</TD>
<TD width=29%>_fullpath</TD>
<TD width=26%>_fullpath</TD>
<TD width=28%>_wfullpath</TD>
</TR>
</TABLE><BR>

<P>If the <I>absPath</I> buffer is <B>NULL</B>, <B>_fullpath</B> calls <A HREF="_crt_malloc.htm">malloc</A> to allocate a buffer of size <B>_MAX_PATH</B> and ignores the <I>maxLength</I> argument. It is the caller’s responsibility to deallocate this buffer (using <A HREF="_crt_free.htm">free</A>) as appropriate. If the <I>relPath</I> argument specifies a disk drive, the current directory of this drive is combined with the path. </P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* FULLPATH.C: This program demonstrates how _fullpath
 * creates a full path from a partial path.
 */

#include &lt;stdio.h&gt;
#include &lt;conio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;direct.h&gt;

char full[_MAX_PATH], part[_MAX_PATH];

void main( void )
{
   while( 1 )
   {
      printf( "Enter partial path or ENTER to quit: " );
      gets( part );
      if( part[0] == 0 )
         break;

      if( _fullpath( full, part, _MAX_PATH ) != NULL )
         printf( "Full path is: %s\n", full );
      else
         printf( "Invalid path\n" );
   }
}

</CODE></PRE>

<P><A HREF="_crt_file_handling.htm">File Handling Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__getcwd.2c_._wgetcwd.htm">_getcwd</A>, <A HREF="_crt__getdcwd.2c_._wgetdcwd.htm">_getdcwd</A>, <A HREF="_crt__makepath.2c_._wmakepath.htm">_makepath</A>, <A HREF="_crt__splitpath.2c_._wsplitpath.htm">_splitpath</A></P>
</font>
</BODY>
</HTML>
