<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C Run-Time Debug Libraries</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_stdlib_overview">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_stdlib_overview">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_c_run.2d.time_debug_libraries"></A>C Run-Time Debug Libraries</H1>

<P>The following table lists the debug versions of the C run-time library files, along with their associated compiler options and environment variables. For a list of the release versions of these libraries, see <A HREF="_crt_c_run.2d.time_libraries.htm">C Run-Time Libraries</A>. </P>

<P>Prior to Visual C++ 4.2, the C run-time libraries contained the iostream library functions. In Visual C++ 4.2, the old iostream library functions were removed from LIBCD.LIB, LIBCMTD.LIB, and MSVCRTD.LIB. This change was made because the Standard C++ library was added to Visual C++, and it contains a new set of iostream libraries. </P>

<P>Two sets of iostream functions are now included in Visual C++. The old iostream functions now exist in their own libraries: LIBCID.LIB, LIBCIMTD.LIB, and MSVCIRTD.LIB. The new iostream functions, as well as many other new functions, exist in the Standard C++ libraries: LIBCPD.LIB, LIBCPMTD.LIB, and MSVCPRTD.LIB. </P>

<P>The Standard C++ library and the old iostream library are incompatible and only one of them can be linked with your project. See the <A HREF="JavaScript:hhobj_1.Click()">Standard C++ Library Overview</A> and <A HREF="_core_make_the_old_iostream_library_the_default.htm">Make the Old iostream Library the Default</A> for details.</P>

<P>When you build a debug version of your project, one of the basic C run-time debug libraries (LIBCD.LIB, LIBCMTD.LIB, and MSVCRTD.LIB) is linked by default, depending on the compiler option you choose (single-threaded, multithreaded, or DLL). Depending on the headers you use in your code, a debug library from the Standard C++ libraries or one from the old iostream libraries may also be linked.

<UL type=disc>
	<LI>If you include a <A HREF="JavaScript:hhobj_2.Click()">Standard C++ library header</A> in your code, a Standard C++ library will be linked in automatically by Visual C++ at compile time. For example: </LI>
</UL>

<PRE><CODE>   #include &lt;ios&gt; 
</CODE></PRE>

<UL type=disc>
	<LI>If you include an <A HREF="_core_make_the_old_iostream_library_the_default.htm">old iostream library header</A>, an old iostream library will be linked in automatically by Visual C++ at compile time. For example:</LI>
</UL>

<PRE><CODE>   #include &lt;ios.h&gt;
</CODE></PRE>

<P>Note that headers from the Standard C++ library and the old iostream library cannot be mixed.</P>

<P>Headers determine whether a Standard C++ library, an old iostream library, or neither will be linked. Compiler options determine which of the libraries to be linked is the default (single-threaded, multithreaded, or DLL). When a specific library compiler option is defined, that library is considered to be the default and its environment variables are automatically defined.</P>

<TABLE border=1 cellpadding=5 cols=5 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=31%><B>C Run-Time Debug Library (without iostream)</B></TD>
<TD class=label width=40%><B>Characteristics</B></TD>
<TD class=label colspan=2 width=13%><B>Option</B></TD>
<TD class=label width=16%><B>Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>LIBCD.LIB</TD>
<TD width=40%>Single-threaded, static link</TD>
<TD colspan=2 width=13%><B>/MLd</B></TD>
<TD width=16%><B>_DEBUG</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>LIBCMTD.LIB</TD>
<TD width=40%>Multithreaded, static link</TD>
<TD colspan=2 width=13%><B>/MTd</B></TD>
<TD width=16%><B>_DEBUG</B>, <B>_MT</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>MSVCRTD.LIB</TD>
<TD width=40%>Multithreaded, dynamic link <BR>
(import library for MSVCRTD.DLL)<SUP>1</SUP></TD>
<TD colspan=2 width=13%><B>/MDd</B></TD>
<TD width=16%><B>_DEBUG</B>, <B>_MT</B>, <B>_DLL</B></TD>
</TR>

<TR VALIGN="top">
<TD class=mini colspan=3 width=81%><SUP>1&nbsp;&nbsp;&nbsp;</SUP>In place of the “x” in the DLL name, substitute the major version numeral of Visual C++ that you are using. For example, if you are using Visual C++ version 4, then the library name would be MSVCR40D.DLL.</TD>
</TR>
</TABLE><BR>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=31%><B>Standard C++ Debug Library</B></TD>
<TD class=label width=39%><B>Characteristics</B></TD>
<TD class=label width=14%><B>Option</B></TD>
<TD class=label width=16%><B>Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>LIBCPD.LIB</TD>
<TD width=39%>Single-threaded, static link</TD>
<TD width=14%><B>/MLd</B></TD>
<TD width=16%><B>_DEBUG</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>LIBCPMTD.LIB</TD>
<TD width=39%>Multithreaded, static link</TD>
<TD width=14%><B>/MTd</B></TD>
<TD width=16%><B>_DEBUG</B>, <B>_MT</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>MSVCPRTD.LIB</TD>
<TD width=39%>Multithreaded, dynamic link (import library for MSVCRTD.DLL)</TD>
<TD width=14%><B>/MDd</B></TD>
<TD width=16%><B>_DEBUG</B>, <B>_MT</B>, <B>_DLL</B></TD>
</TR>
</TABLE><BR>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=31%><B>iostream Debug Library</B></TD>
<TD class=label width=39%><B>Characteristics</B></TD>
<TD class=label width=14%><B>Option</B></TD>
<TD class=label width=16%><B>Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>LIBCID.LIB</TD>
<TD width=39%>Single threaded, static link</TD>
<TD width=14%><B>/MLd</B></TD>
<TD width=16%><B>_DEBUG</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>LIBCIMTD.LIB</TD>
<TD width=39%>Multithreaded, static link</TD>
<TD width=14%><B>/MTd</B></TD>
<TD width=16%><B>_DEBUG</B>, <B>_MT</B></TD>
</TR>

<TR VALIGN="top">
<TD width=31%>MSVCIRTD.LIB</TD>
<TD width=39%>Multithreaded, dynamic link (import library for MSVCIRTD.DLL)</TD>
<TD width=14%><B>/MDd</B></TD>
<TD width=16%><B>_DEBUG</B>, <B>_MT</B>, <B>_DLL</B></TD>
</TR>
</TABLE><BR>

<P>The debug versions of the library functions differ from the release versions mainly in that debug information was included when they were compiled (using the /Z7 or /Zi compiler option), optimization was turned off, and source code is available. A few of the debug library functions also contain asserts that verify parameter validity.</P>

<P>Using one of these debug libraries is as simple as linking it to your application with the /DEBUG:FULL linker option set. You can then step directly into almost any run-time function call.</P>
</font>
</BODY>
</HTML>
