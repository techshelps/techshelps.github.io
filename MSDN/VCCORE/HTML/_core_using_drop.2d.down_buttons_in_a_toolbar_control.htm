<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Drop-Down Buttons in a Toolbar Control</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CToolBarCtrl.3a3a.InsertButton">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CToolBarCtrl.3a3a.AddButtons">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CToolBarCtrl.3a3a.SetButtonInfo">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_using_drop.2d.down_buttons_in_a_toolbar_control"></A>Using Drop-Down Buttons in a Toolbar Control</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_using_ctoolbarctrl.htm">Overview</A>  |&nbsp; <A HREF="_core_common_control_sample_list.htm">Sample</A></P>

<P>In addition to standard push buttons, a toolbar can also have drop-down buttons. A drop-down button is usually indicated by the presence of an attached down arrow.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The attached down arrow will appear only if the <B>TBSTYLE_EX_DRAWDARROWS</B> extended style has been set.</P>

<P>When the user clicks on this arrow (or the button itself, if no arrow is present), a <B>TBN_DROPDOWN</B> notification message is sent to the parent of the toolbar control. You can then handle this notification and display a popup menu; similar to the behavior of Internet Explorer.</P>

<P>The following procedure illustrates how to implement a drop-down toolbar button with a popup menu:</P>

<P class=label><B>To implement a drop-down button</B>

<OL>
	<LI>Once your <B>CToolBarCtrl</B> object has been created, set the <B>TBSTYLE_EX_DRAWDDARROWS</B> style, using the following code:
<PRE><CODE>m_wndToolBar.GetToolBarCtrl().SetExtendedStyle(TBSTYLE_EX_DRAWDDARROWS);
</CODE></PRE>
</LI>

	<LI>Set the <B>TBSTYLE_DROPDOWN</B> style for any new (<A HREF="JavaScript:hhobj_2.Click()">InsertButton</A> or <A HREF="JavaScript:hhobj_3.Click()">AddButtons</A>) or existing (<A HREF="JavaScript:hhobj_4.Click()">SetButtonInfo</A>) buttons that will be drop-down buttons. The following example demonstrates modifying an existing button in a <B>CToolBarCtrl</B> object:
<PRE><CODE>TBBUTTONINFO tbi;

tbi.dwMask= TBIF_STYLE;
tbi.cbSize= sizeof(TBBUTTONINFO);
m_wndToolBar.GetToolBarCtrl().GetButtonInfo(ID_EDIT_CUT, &amp;tbi);
tbi.fsStyle |= TBSTYLE_DROPDOWN;
m_wndToolBar.GetToolBarCtrl().SetButtonInfo(ID_EDIT_CUT, &amp;tbi);
</CODE></PRE>
</LI>

	<LI>Add a <B>WM_NOTIFY</B> handler to the parent class of the toolbar object.<BR><BR></LI>

	<LI>In the new handler, check for the <B>TBN_DROPDOWN</B> notification, using the following code:
<PRE><CODE>#define lpnm   ((LPNMHDR)lParam)
#define lpnmTB ((LPNMTOOLBAR)lParam)

   switch(lpnm-&gt;code)
   {
      case TBN_DROPDOWN:
         //drop down button was hit
         //handle appropriately
         . . .
         return FALSE; //indicates the TBN_DROPDOWN
                       //notification was handled.
   }
</CODE></PRE>
</LI>

	<LI>If the <B>TBN_DROPDOWN</B> notification has been sent, display the appropriate popup menu. The following code demonstrates one method:
<PRE><CODE>CMenu menu;
VERIFY(menu.LoadMenu(IDR_MENU1));
CMenu* pPopup = menu.GetSubMenu(0);
ASSERT(pPopup != NULL);
pPopup-&gt;TrackPopupMenu(TPM_RIGHTALIGN |
   TPM_RIGHTBUTTON, x, y, this);
</CODE></PRE>
</LI>
</OL>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_control_topics.htm#_core_windows_common_controls_and_mfc_classes">Windows Common Controls and MFC Classes</A></P>
</font>
</BODY>
</HTML>
