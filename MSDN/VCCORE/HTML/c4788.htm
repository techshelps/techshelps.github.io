<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning (level 1) C4788</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c4788"></A><SUP></SUP>Compiler Warning (level 1) C4788</H1>

<P class=dt><B>'identifier' identifier was truncated to 'number' characters</B></P>

<P>Only the first 31 characters of an identifier are significant in C. In Visual C++, the first 255 characters (after name decoration) are significant. The characters after the limit were truncated.</P>

<P>This may mean that two identifiers that are different before truncation may have the same identifier name after truncation.</P>

<P>The debugger cannot debug code with symbols longer than 255 characters.&nbsp; In the debugger, you cannot view, evaluate, update, or watch the truncated symbols.</P>

<P>This limitation can be overcome by shortening identifier names. Please see compiler warning <A HREF="c4786.htm">C4786</A> for examples that demonstrate the solution to this problem.</P>

<P>A trace mechanism can also be used to solve this problem. A trace mechanism is like the <B>printf</B> statements in the code. It keeps track of what is going on in an application during the debugging process. The <B>_ASSERT</B>, <B>_ASSERTE</B>, <B>_RPTn</B> and <B>_RPTFn</B> macros provide concise and flexible ways to perform the trace. These macros are not defined when <B>_DEBUG</B> is not defined. See <A HREF="_core_using_macros_for_verification_and_reporting.htm">Using Macros for Verification and Reporting</A> for more information.</P>
</font>
</BODY>
</HTML>
