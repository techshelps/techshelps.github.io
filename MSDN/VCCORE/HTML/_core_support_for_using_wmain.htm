<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Support for Using wmain</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_support_for_using_wmain"></A><SUP></SUP>Support for Using wmain</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_unicode_programming_tasks.htm">Unicode Tasks</A>  |&nbsp; <A HREF="_core_multibyte_character_set_.28.mbcs.29_.tasks.htm">Multibyte Character Set (MBCS) Tasks</A></P>

<P><B>Microsoft Specific —&gt;</B></P>

<P>Visual C++ supports defining a <B>wmain</B> function and passing wide-character arguments to your Unicode application. You declare formal parameters to <B>wmain</B>, using a format similar to <B>main</B>. You can then pass wide-character arguments and, optionally, a wide-character environment pointer to the program. The <I>argv</I> and <I>envp</I> parameters to <B>wmain</B> are of type <B>wchar_t*</B>. For example:</P>

<P><B>wmain( int</B> <I>argc</I><B>, wchar_t</B> <I>*argv</I><B>[</B> <B>], wchar_t</B> <I>*envp</I><B>[</B> <B>]</B> <B>)</B></P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;MFC Unicode applications use <B>wWinMain</B> as the entry point. In this case, <B>CWinApp::m_lpCmdLine</B> is a Unicode string. Be sure to set <B>wWinMainCRTStartup</B> as the Entry Point symbol in the Output category of the Link tab in the Project Settings dialog box.</P>

<P>If your program uses a <B>main</B> function, the multibyte-character environment is created by the run-time library at program startup. A wide-character copy of the environment is created only when needed (for example, by a call to the <B>_wgetenv</B> or <B>_wputenv</B> functions). On the first call to <B>_wputenv</B>, or on the first call to <B>_wgetenv</B> if an MBCS environment already exists, a corresponding wide-character string environment is created. The environment is then pointed to by the <B>_wenviron</B> global variable, which is a wide-character version of the <B>_environ</B> global variable. At this point, two copies of the environment (MBCS and Unicode) exist simultaneously and are maintained by the run-time system throughout the life of the program.</P>

<P>Similarly, if your program uses a <B>wmain</B> function, a wide-character environment is created at program startup and is pointed to by the <B>_wenviron</B> global variable. An MBCS (ASCII) environment is created on the first call to <B>_putenv</B> or <B>getenv</B>, and is pointed to by the <B>_environ</B> global variable.</P>

<P><B>END Microsoft Specific</B></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_unicode_programming_summary.htm">Unicode Programming Summary</A></P>
</font>
</BODY>
</HTML>
