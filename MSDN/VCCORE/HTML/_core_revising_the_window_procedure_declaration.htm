<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Revising the Window Procedure Declaration</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_revising_the_window_procedure_declaration"></A><SUP></SUP>Revising the Window Procedure Declaration</H1>

<P>To port a Windows 3.<I>x</I> application, you must revise the declaration of the window procedure. The following is a declaration of a window procedure for a Windows 3.<I>x</I> application.</P>

<PRE><CODE>LONG FAR PASCAL MainWndProc(  HWND hWnd,
    unsigned message,
    WORD wParam,
    LONG lParam)</CODE></PRE>

<P>To revise the declaration for Win32, replace the data types used in Windows 3.<I>x</I> as shown in the <A HREF="#_core_changes_to_the_window_procedure_declaration">table</A>. The following code can be compiled as a 32-bit application, but it can still be used to compile 16-bit applications as before:</P>

<PRE><CODE>LRESULT CALLBACK MainWndProc(  HWND hWnd,
    UINT message,
    WPARAM wParam,
    LPARAM lParam)</CODE></PRE>

<P>This table summarizes the changes to the declaration noted in the previous example.</P>

<P class=label><B><A NAME="_core_changes_to_the_window_procedure_declaration"></A>Changes to the Window Procedure Declaration</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=22%><B>Windows 3.x</B></TD>
<TD class=label width=35%><B>Win32 (portable code)</B></TD>
<TD class=label width=43%><B>Reason for changing</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>FAR PASCAL</B></TD>
<TD width=35%><B>CALLBACK</B></TD>
<TD width=43%><B>CALLBACK</B> is guaranteed to use whatever calling convention is appropriate for windows and dialog procedures.</TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>unsigned</B></TD>
<TD width=35%><B>UINT</B></TD>
<TD width=43%>Meaning is the same, but <B>UINT</B> guarantees portability for future platforms.</TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>WORD</B></TD>
<TD width=35%><B>WPARAM</B></TD>
<TD width=43%><B>WORD</B> is always 16 bits. The <B>WPARAM</B> type grows to 32 bits.</TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>LONG</B></TD>
<TD width=35%><B>LPARAM</B></TD>
<TD width=43%>Meaning is the same (32 bits), but <B>LPARAM</B> guarantees portability for future platforms.</TD>
</TR>
</TABLE><BR>

<P>A significant difference between the Windows 3.<I>x</I> declaration and the portable version involves the <I>wParam</I> parameter, which grows to 32 bits under Win32. Therefore, replacing the <B>WORD</B> type with <B>WPARAM</B> is critical. The <B>WPARAM</B> type varies with the operating system, as does <B>UINT</B>: these types are 16 bits wide under Windows 3.<I>x</I> and 32 bits wide under Win32.</P>

<P>The other changes shown in the <A HREF="#_core_changes_to_the_window_procedure_declaration">table</A> are recommended for code clarity and portability. For example, <B>WPARAM</B> and <B>LPARAM</B> are automatically defined to be the correct types for message parameters, and <B>CALLBACK</B> will always be the correct declaration for window procedures.</P>

<P>A 32-bit <I>wParam</I> message parameter combined with the addresses and handles that grow to 32 bits, means that some messages must be repacked, as described in <A HREF="_core_handling_32.2d.bit_messages.htm">Handling 32-Bit Messages</A>.</P>
</font>
</BODY>
</HTML>
