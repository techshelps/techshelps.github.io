<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error C2660</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c2660"></A><SUP></SUP>Compiler Error C2660</H1>

<P class=dt><B>'function' : function does not take number parameters</B></P>

<P>The specified function was called with an incorrect number of actual parameters.</P>

<P class=label><B>Tips</B>

<UL type=disc>
	<LI>The most typical cause of this error is calling a function with the incorrect number of actual parameters. The following example demonstrates this:
<PRE><CODE>void func( int, int );
void main()
{
   func( 1 );     // error, func( int ) not declared
   func( 1, 0 );  // OK, func( int, int ) was declared
}
</CODE></PRE>
</LI>

	<LI>A problem similar to the one shown above occurs when you mistakenly call a Windows API function directly from within an MFC member function, rather than calling the equivalent MFC member function of the same name. Since the two functions are identical in name this error may occur frequently. Either of the two following methods will solve this error:
<UL type=disc>
	<LI>Adjust the function call to conform to the format of the member function call.<BR><BR></LI>

	<LI>Use the scope resolution operator (<B>::</B>) to tell the compiler to look for the function name in the global name space.</LI>
</UL>
</LI>
</UL>
</font>
</BODY>
</HTML>
