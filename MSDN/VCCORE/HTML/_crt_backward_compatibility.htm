<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Backward Compatibility</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_backward_compatibility"></A><SUP></SUP>Backward Compatibility</H1>

<P>The compiler views a structure that has both an old name and a new name as two different types. You cannot copy from an old structure type to a new structure type. Old prototypes that take <B>struct</B> pointers use the old <B>struct</B> names in the prototype.</P>

<P>For compatibility with Microsoft C professional development system version 6.0 and earlier Microsoft C versions, the library OLDNAMES.LIB maps old names to new names. For instance, <B>open</B> maps to <B>_open</B>. You must explicitly link with OLDNAMES.LIB only when you compile with the following combinations of command-line options:

<UL type=disc>
	<LI>/Zl (omit default library name from object file) and /Ze (the default — use Microsoft extensions) <BR><BR></LI>

	<LI>/link (linker-control), /NOD (no default-library search), and /Ze</LI>
</UL>

<P>For more information about compiler command-line options, see <A HREF="_core_compiler_reference.htm">Compiler Reference</A> in the <I>Visual C++</I> <I>Programmer’s Guide</I>.</P>
</font>
</BODY>
</HTML>
