<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Viewing Memory Contents</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_viewing_memory_contents"></A>Viewing Memory Contents</H1>

<P>You can use the Memory window to view large buffers, strings, and other data that do not display well in the Watch or Variables window.</P>

<P>By default, the Memory window displays numbers in decimal (base 10) format. You can control the Memory window display by using options on the <B>Debug</B> tab in the <B>Options</B> dialog box on the <B>Tools</B> menu. To view Unicode in the Memory window, set the <B>Format</B> option to <B>Wide Char</B>. To display data bytes with Unicode characters, select the <B>Show Data Bytes</B> check box also.</P>

<P class=label><B>To view memory contents at a specified location using drag-and-drop functionality</B>

<OL>
	<LI>From the <B>View</B> menu, click <B>Debug Windows </B>and <B>Registers</B>.
<P class=tl>The Memory window appears.</P></LI>

	<LI>In any window, select a memory address or pointer variable containing a memory address.<BR><BR></LI>

	<LI>Drag the address or pointer to the address section of the Memory window, and drop it.</LI>
</OL>

<P class=label><B>To view memory contents at a specified location by editing</B>

<OL>
	<LI>From the <B>View</B> menu, click <B>Debug Windows </B>and <B>Memory</B>.
<P class=tl>The Memory window appears.</P></LI>

	<LI>Select the Memory window.<BR><BR></LI>

	<LI>In the <B>Address</B> box, select the memory address.<BR><BR></LI>

	<LI>Type or paste the new memory address and press ENTER.
<P class=tl>The Memory window displays the contents of memory locations beginning at the address specified in the <B>Address</B> box.</P></LI>
</OL>

<P class=label><B>To view memory contents at a specified location using Go To</B>

<OL>
	<LI>From the <B>View</B> menu, click <B>Debug Windows </B>and <B>Memory</B>.
<P class=tl>The Memory window appears.</P></LI>

	<LI>Select the Memory window.<BR><BR></LI>

	<LI>From the <B>Edit</B> menu, click <B>Go To</B>.
<P class=tl>The <B>Go To</B> dialog box appears.</P></LI>

	<LI>In the <B>Go To What</B> box, select <B>Address</B>.<BR><BR></LI>

	<LI>In the <B>Enter Address/Expression</B> box, type or paste an address.<BR><BR></LI>

	<LI>Click <B>Go To</B>.</LI>
</OL>

<P class=label><B>To specify a live expression for the memory location </B>

<OL>
	<LI>From the <B>View</B> menu, click <B>Debug Windows </B>and <B>Memory</B>.
<P class=tl>The Memory window appears.</P></LI>

	<LI>From the <B>Tools</B> menu, click <B>Options</B>.
<P class=tl>The <B>Options</B> dialog box appears.</P></LI>

	<LI>Click the <B>Debug</B> tab.<BR><BR></LI>

	<LI>In the Memory window <B>Address</B> box, type an address expression.
<P class=tl>You can type <CODE>*pPtr</CODE>, for example, to display memory contents starting at the address pointed to by <CODE>pPtr</CODE>.</P></LI>

	<LI>Click the <B>Re-evaluate Expression</B> check box.<BR><BR></LI>

	<LI>Click <B>OK</B>.</LI>
</OL>

<P>You can view some items more easily using live expressions. On an Intel-compatible system, you can examine the top of the stack by typing <CODE>ESP</CODE> as a live expression. By specifying a pointer variable, you can use the Memory window to follow the pointer as it increments through an array.</P>
</font>
</BODY>
</HTML>
