<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_mbsnbcnt, _mbsnccnt, _strncnt, _wcsncnt</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__mbsnbcnt.2c_._mbsnccnt.2c_._strncnt.2c_._wcsncnt"></A><SUP></SUP>_mbsnbcnt, _mbsnccnt, _strncnt, _wcsncnt</H1>

<P>Return number of characters or bytes within a supplied count</P>

<P><B>size_t</B> <B>_mbsnbcnt(</B> <B>const</B> <B>unsigned</B> <B>char</B> <B>*</B><I>string</I><B>,</B> <B>size_t</B> <I>number </I><B>);</B></P>

<P><B>size_t</B> <B>_mbsnccnt(</B> <B>const</B> <B>unsigned</B> <B>char</B> <B>*</B><I>string</I><B>,</B> <B>size_t</B> <I>number </I><B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=19%><B>Routine</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=55%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>_mbsnbcnt</B></TD>
<TD width=26%>&lt;mbstring.h&gt;</TD>
<TD width=55%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>_mbsnccnt</B></TD>
<TD width=26%>&lt;mbstring.h&gt;</TD>
<TD width=55%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>_strncnt</B></TD>
<TD width=26%>&lt;tchar.h&gt;</TD>
<TD width=55%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=19%><B>_wcsncnt</B></TD>
<TD width=26%>&lt;tchar.h&gt;</TD>
<TD width=55%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_mbsnbcnt</B> returns the number of bytes found in the first <I>number</I> of multibyte characters of <I>string</I>. <B>_mbsnccnt</B> returns the number of characters found in the first <I>number</I> of bytes of <I>string</I>. If a NULL character is encountered before the examination of <I>string</I> has completed, they return the number of bytes or characters found before the NULL character. If <I>string</I> consists of fewer than <I>number</I> characters or bytes, they return the number of characters or bytes in the string. If <I>number</I> is less than zero, they return 0. In previous versions, these functions had a return value of type <B>int</B> rather than <B>size_t</B>. </P>

<P><B>_strncnt</B> returns the number of characters in the first <I>number</I> bytes of the single-byte string <I>string</I>. <B>_wcsncnt</B> returns the number of bytes in the first <I>number</I> wide characters of the wide-character string <I>string</I>.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>string</I></P>

<P class=indent>String to be examined</P>

<P class=dt><I>number</I></P>

<P class=indent>Number of characters or bytes to be examined in <I>string</I></P>

<P class=label><B>Remarks</B></P>

<P><B>_mbsnbcnt</B> counts the number of bytes found in the first <I>number</I> of multibyte characters of <I>string</I>. <B>_mbsnbcnt</B> replaces <B>mtob</B>, and should be used in place of <B>mtob</B>.</P>

<P><B>_mbsnccnt</B> counts the number of characters found in the first <I>number</I> of bytes of <I>string</I>. If <B>_mbsnccnt</B> encounters a NULL in the second byte of a double-byte character, the first byte is also considered to be NULL and is not included in the returned count value. <B>_mbsnccnt</B> replaces <B>btom</B>, and should be used in place of <B>btom</B>.</P>

<P>If <B>_MBCS</B> is defined, <B>_mbsnbcnt</B> is mapped to <B>_tcsnbcnt</B> and <B>_mbsnbcnt</B> is mapped to <B>_tcsnccnt</B>. These two mapping routines provide generic-text support and are defined in TCHAR.H. If <B>_UNICODE</B> is defined, both <B>_mbsnbcnt</B> and <B>_mbsnccnt</B> are mapped to the <B>_wcsncnt</B> macro. When <B>_MBCS</B> and <B>_UNICODE</B> are not defined, both <B>_tcsnbcnt</B> and <B>_tcsnccnt</B> are mapped to the <B>_strncnt</B> macro. <B>_strncnt</B> is the single-byte–character string version and <B>_wcsncnt</B> is the wide-character–string version of these mapping routines. <B>_strncnt</B> and <B>_wcsncnt</B> are provided only for generic-text mapping and should not be used otherwise. For more information, see <A HREF="_crt_using_generic.2d.text_mappings.htm">Using Generic-Text Mappings</A> and see Appendix B, <A HREF="_crt_generic.2d.text_mappings.htm">Generic-Text Mappings</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* MBSNBCNT.C */

#include  &lt;mbstring.h&gt;
#include  &lt;stdio.h&gt;

void main( void )
{
   unsigned char str[] = "This is a multibyte-character string.";
   unsigned int char_count, byte_count;
   char_count = _mbsnccnt( str, 10 );
   byte_count = _mbsnbcnt( str, 10 );
   if ( byte_count - char_count )
      printf( "The first 10 characters contain %s multibyte characters", char_count );
   else
      printf( "The first 10 characters are single-byte.");
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>The first 10 characters are single-byte.

</CODE></PRE>

<P><A HREF="_crt_string_manipulation.htm">String Manipulation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__mbsnbcat.htm">_mbsnbcat</A></P>
</font>
</BODY>
</HTML>
