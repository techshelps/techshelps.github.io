<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NEWPROJ.INF Statements</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_begin_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_appwiz_CUSTOMWZ">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_newproj..inf_statements"></A>NEWPROJ.INF Statements</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_appwizard_programming_reference.htm">Overviews</A>  |&nbsp; <A HREF="_core_creating_custom_appwizards.htm">How Do I</A> |&nbsp; <A HREF="_core_details.3a_.beginning_your_program.htm">Details</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Creating a Custom AppWizard is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_3.Click()">Visual C++ Editions</A>.</P>

<P>NEWPROJ.INF contains statements that MFCAPWZ.DLL reads to determine a project structure. A statement in NEWPROJ.INF can use either of the following two forms of syntax:</P>

<P class=dt>/<I>directory</I></P>

<P class=indent>This statement directs MFCAPWZ.DLL to create a subdirectory of the Visual C++ project directory. Note that the slash is a forward slash, not a backslash. This is how, for example, AppWizard creates a separate RES subdirectory under the project directory, and how the custom AppWizard project type creates its TEMPLATE subdirectory. </P>

<P class=tl>–or–</P>
<P class=dt>[<I>flags</I>]<I>template-name</I> tab-character <I>destination-filename</I></P>

<P class=indent>This statement directs MFCAPWZ.DLL to use a <A HREF="_core_understanding_custom_resource_templates.htm">custom resource template</A> named <I>template-name</I> to generate a file named by <I>destination-filename</I>. If <I>destination-filename</I> includes a path, all directories on the path must exist. Remember that you can use the /<I>directory</I> statement to create a directory. You generate the tab-character by pressing the TAB key. </P>

<P class=dt><I>flags</I></P>

<P class=indent>A flag is any of three optional characters defined in the table below. They can appear in any order and any combination, but must appear immediately before <I>template-name</I>. No characters (not even whitespace) can separate the flags from each other or from <I>template-name</I>. By default, a file appearing in NEWPROJ.INF is added to the project. If a - flag precedes the file, it is not added.</P>

<P class=label><B>Template Name Flags</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=13%><B>Flag</B></TD>
<TD class=label width=87%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=13%>=</TD>
<TD width=87%>Copies the template, verbatim, to <I>destination-filename</I>. This flag tells MFCAPWZ.DLL to use <B>CopyTemplate</B> rather than <B>ProcessTemplate</B>. <B>ProcessTemplate</B> is the default. 
<P>For example, the following line causes MFCAPWZ.DLL to call <B>CopyTemplate</B> to copy the project’s icon directly to the project:</P>

<PRE><CODE>=ROOT.ICO  $$root$$.ico</CODE></PRE>

<P>Note that using the lowercase version of the <B>$$root$$</B> macro causes the generated filename to be lowercase. For more information on the <B>root</B> macro, see <A HREF="_core_the_projects_tab_on_the_new_dialog_box.htm">The Projects Tab on the New Dialog Box Options</A>.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>-</TD>
<TD width=87%>Specifies that the file should not be added to the project.</TD>
</TR>

<TR VALIGN="top">
<TD class=dt width=13%>
<P class=indent>!</P>
</TD>
<TD width=87%>Specifies that the file should be marked exclude from build.&nbsp; This forces the build system to ignore the file during a build of the project.</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>?</TD>
<TD width=87%>Specifies that the file should be treated as a Help file.&nbsp; This puts the file in the “Help Files” folder in the <B>FileView</B> tab of the project workspace window.</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>:</TD>
<TD width=87%>Specifies that the file should be treated as a resource file. This puts the file in the “Resource Files” folder in the <B>FileView</B> tab of the project workspace window.</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>#</TD>
<TD width=87%>Specifies that the file should be treated as a template. This flag implies that the ! flag will be used. This puts the file in the “Template Files” folder in the <B>FileView</B> tab of the project workspace window.</TD>
</TR>

<TR VALIGN="top">
<TD width=13%>*</TD>
<TD width=87%>Forces <B>LoadTemplate</B> to use an MFC AppWizard resource rather than a custom AppWizard resource. Use this flag when you want your custom AppWizard to bypass its own template in preference to the MFC AppWizard’s copy. For example, when the Custom AppWizard project type (CUSTMWZ.AWX) generates a custom AppWizard that is based on an existing sequence of MFC AppWizard steps, it needs the MFC AppWizard’s NEWPROJ.INF, not its own. Using this flag is unnecessary in most situations because MFCAPWZ.DLL looks for a template in the MFC AppWizard’s resources if it can’t first find the template in the custom AppWizard’s resources. This flag simply bypasses the initial check in the custom AppWizard’s resources. For example, the following line causes <B>ProcessTemplate</B> to add the MFCAPWZ.DLL version of DLGROOT.CPP to the generated project’s makefile:
<PRE><CODE> *+DLGROOT.CPP  $$root$$.cpp</CODE></PRE>

<P>Note that using the lowercase version of the <B>$$root$$</B> macro causes the generated filename to be lowercase. For more information on the <B>root</B> macro, see <A HREF="_core_the_projects_tab_on_the_new_dialog_box.htm">Projects Tab on the New Dialog Box Options</A>.</P>
</TD>
</TR>
</TABLE><BR>

<P class=dt><I>template-name</I></P>

<P class=indent>The resource ID of a custom resource template. When an end user clicks <B>OK</B> in the <B>New Project Information</B> dialog box, MFCAPWZ.DLL begins parsing NEWPROJ.INF. For each <I>template-name</I> found in NEWPROJ.INF, MFCAPPWZ.DLL calls <B>LoadTemplate</B> with <I>template-name</I> to load the custom resource template for processing. If <I>template-name</I> is not found, the custom AppWizard displays an error in a message box, stops code generation, and returns to the dialog box from which template parsing began. </P>

<P class=dt><I>destination-filename</I></P>

<P class=indent>Names the file and directory in which MFCAPWZ.DLL generates the file associated with <I>template-name</I>. The named directory must already exist. If it doesn’t, MFCAPWZ.DLL presents a message box to inform you that it can’t generate the file and stops code generation.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_overview_of_creating_a_custom_appwizard.htm">Overview of Creating a Custom AppWizard</A>, <A HREF="_core_understanding_the_files_that_appwizard_creates.htm">Understanding the Files That AppWizard Creates</A>, <A HREF="_core_adding_functionality_to_your_custom_appwizard.htm">Adding Functionality to Your Custom AppWizard</A>, <A HREF="_core_understanding_confirm..inf_and_newproj..inf.htm">Understanding CONFIRM.INF and NEWPROJ.INF</A>, <A HREF="_core_confirm..inf.htm">CONFIRM.INF</A>, <A HREF="_core_newproj..inf.htm">NEWPROJ.INF</A>, <A HREF="_core_understanding_text_templates.htm">Understanding Text Templates</A>, <A HREF="_core_how_macros_get_their_values.htm">How Macros Get Their Values</A>, <A HREF="_core_how_to_specify_macros_in_directives_or_text.htm">How to Specify Macros in Directives or Text</A></P>
</font>
</BODY>
</HTML>
