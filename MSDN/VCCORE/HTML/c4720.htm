<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning (level 2) C4720</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c4720"></A><SUP></SUP>Compiler Warning (level 2) C4720</H1>

<P class=dt><B>'initializing' : do not initialize a non-const 'type1' with a non-lvalue 'type2' function return</B></P>

<P>A nonconst <B>T&amp;</B> was initialized with the value of a function call which returns T. This is an error, because a function call is not an l-value (unless it returns a reference) and a nonconst <B>T&amp;</B> must be initialized with a <B>T</B> l-value. However, when Microsoft extensions have been enabled (/Ze), Visual C++ renders this as a warning because the construction is harmless and because the construction occurs fairly frequently in existing code.</P>

<P>The can be eliminated by changing the reference being initialized to a const T&amp;. The following example causes this warning:</P>

<PRE><CODE>struct X {};
X f();
X&amp;r = f();  // warning
</CODE></PRE>
</font>
</BODY>
</HTML>
