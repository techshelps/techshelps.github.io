<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_find, _wfind Functions</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__find.2c_._wfind_functions"></A><SUP></SUP>_find, _wfind Functions</H1>

<P>These functions search for and close searches for specified filenames.

<UL type=disc>
	<LI><A HREF="_crt__findclose.htm">_findclose</A><BR><BR></LI>

	<LI><A HREF="_crt__findnext.2c_._findnexti64.2c_._wfindnext.2c_._wfindnexti64.htm">_findnext, _findnexti64, _wfindnext, _wfindnexti64</A><BR><BR></LI>

	<LI><A HREF="_crt__findfirst.2c_._findfirsti64.2c_._wfindfirst.2c_._wfindfirsti64.htm">_findfirst, _findfirsti64, _wfindfirst, _wfindfirsti64</A></LI>
</UL>

<P class=label><B>Remarks</B></P>

<P>The <B>_findfirst</B> function provides information about the first instance of a filename that matches the file specified in the <I>filespec</I> argument. Any wildcard combination supported by the host operating system can be used in <I>filespec.</I> File information is returned in a <B>_finddata_t</B> structure, defined in IO.H. The <B>_finddata_t</B> structure includes the following elements:</P>

<P class=dt><B>unsigned attrib</B></P>

<P class=indent>File attribute</P>

<P class=dt><B>time_t time_create</B></P>

<P class=indent>Time of file creation ( –1L for FAT file systems)</P>

<P class=dt><B>time_t time_access</B></P>

<P class=indent>Time of last file access (–1L for FAT file systems)</P>

<P class=dt><B>time_t time_write</B></P>

<P class=indent>Time of last write to file</P>

<P class=dt><B>_fsize_t size</B></P>

<P class=indent>Length of file in bytes</P>

<P class=dt><B>char name</B>[<B>_MAX_FNAME</B>]</P>

<P class=indent>Null-terminated name of matched file/directory, without the path</P>

<P>In file systems that do not support the creation and last access times of a file, such as the FAT system, the <B>time_create</B> and <B>time_access</B> fields are always –1L.</P>

<P><B>_MAX_FNAME</B> is defined in STDLIB.H as 256 bytes.</P>

<P>You cannot specify target attributes (such as <B>_A_RDONLY</B>) by which to limit the find operation. This attribute is returned in the <B>attrib</B> field of the <B>_finddata_t</B> structure and can have the following values (defined in IO.H).</P>

<P class=dt><B>_A_ARCH</B></P>

<P class=indent>Archive. Set whenever the file is changed, and cleared by the BACKUP command. Value: 0x20</P>

<P class=dt><B>_A_HIDDEN</B></P>

<P class=indent>Hidden file. Not normally seen with the DIR command, unless the /AH option is used. Returns information about normal files as well as files with this attribute. Value: 0x02</P>

<P class=dt><B>_A_NORMAL</B></P>

<P class=indent>Normal. File can be read or written to without restriction. Value: 0x00</P>

<P class=dt><B>_A_RDONLY</B></P>

<P class=indent>Read-only. File cannot be opened for writing, and a file with the same name cannot be created. Value: 0x01</P>

<P class=dt><B>_A_SUBDIR</B></P>

<P class=indent>Subdirectory. Value: 0x10</P>

<P class=dt><B>_A_SYSTEM</B></P>

<P class=indent>System file. Not normally seen with the DIR command, unless the /A or /A:S option is used. Value: 0x04</P>

<P><B>_findnext</B> finds the next name, if any, that matches the <I>filespec</I> argument specified in a prior call to <B>_findfirst</B>. The <I>fileinfo</I> argument should point to a structure initialized by a previous call to <B>_findfirst</B>. If a match is found, the <I>fileinfo</I> structure contents are altered as described above. <B>_findclose</B> closes the specified search handle and releases all associated resources for both <B>_findfirst</B> and <B>_findnext</B>. The handle returned by either <B>_findfirst</B> or <B>_findnext</B> must first be passed to <B>_findclose</B>, before modification operations, such as deleting, can be performed on the directories that form the paths passed to them.</P>

<P>The <B>_find</B> functions allow nested calls. For example, if the file found by a call to <B>_findfirst</B> or <B>_findnext</B> is a subdirectory, a new search can be initiated with another call to <B>_findfirst</B> or <B>_findnext</B>.</P>

<P><B>_wfindfirst</B> and <B>_wfindnext</B> are wide-character versions of <B>_findfirst</B> and <B>_findnext</B>. The structure argument of the wide-character versions has the <B>_wfinddata_t</B> data type, which is defined in IO.H and in WCHAR.H. The fields of this data type are the same as those of the <B>_finddata_t</B> data type, except that in <B>_wfinddata_t</B> the name field is of type <B>wchar_t</B> rather than type <B>char</B>. Otherwise <B>_wfindfirst</B> and <B>_wfindnext</B> behave identically to <B>_findfirst</B> and <B>_findnext</B>. Functions <B>_findfirsti64</B>, <B>_findnexti64</B>, <B>_wfindfirsti64</B>, and <B>_wfindnexti64</B> also behave identically except they use and return 64-bit file lengths.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* FFIND.C: This program uses the 32-bit _find functions to print
 * a list of all files (and their attributes) with a .C extension
 * in the current directory.
 */

#include &lt;stdio.h&gt;
#include &lt;io.h&gt;
#include &lt;time.h&gt;

void main( void )
{
    struct _finddata_t c_file;
    long hFile;

    /* Find first .c file in current directory */
    if( (hFile = _findfirst( "*.c", &amp;c_file )) == -1L )
       printf( "No *.c files in current directory!\n" );
   else
   {
            printf( "Listing of .c files\n\n" );
            printf( "\nRDO HID SYS ARC  FILE         DATE %25c SIZE\n", ' ' );
            printf( "--- --- --- ---  ----         ---- %25c ----\n", ' ' );
            printf( ( c_file.attrib &amp; _A_RDONLY ) ? " Y  " : " N  " );
            printf( ( c_file.attrib &amp; _A_SYSTEM ) ? " Y  " : " N  " );
            printf( ( c_file.attrib &amp; _A_HIDDEN ) ? " Y  " : " N  " );
            printf( ( c_file.attrib &amp; _A_ARCH )   ? " Y  " : " N  " );
            printf( " %-12s %.24s  %9ld\n",
               c_file.name, ctime( &amp;( c_file.time_write ) ), c_file.size );

            /* Find the rest of the .c files */
            while( _findnext( hFile, &amp;c_file ) == 0 )
            {
                printf( ( c_file.attrib &amp; _A_RDONLY ) ? " Y  " : " N  " );
                printf( ( c_file.attrib &amp; _A_SYSTEM ) ? " Y  " : " N  " );
                printf( ( c_file.attrib &amp; _A_HIDDEN ) ? " Y  " : " N  " );
                printf( ( c_file.attrib &amp; _A_ARCH )   ? " Y  " : " N  " );
                printf( " %-12s %.24s  %9ld\n",
                   c_file.name, ctime( &amp;( c_file.time_write ) ), c_file.size );
            }

       _findclose( hFile );
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Listing of .c files

RDO HID SYS ARC  FILE         DATE                           SIZE
--- --- --- ---  ----         ----                           ----
 N   N   N   Y   CWAIT.C      Tue Jun 01 04:07:26 1993       1611
 N   N   N   Y   SPRINTF.C    Thu May 27 04:59:18 1993        617
 N   N   N   Y   CABS.C       Thu May 27 04:58:46 1993        359
 N   N   N   Y   BEGTHRD.C    Tue Jun 01 04:00:48 1993       3726

</CODE></PRE>

<P><A HREF="_crt_system_calls.htm">System Calls Routines</A></P>
</font>
</BODY>
</HTML>
