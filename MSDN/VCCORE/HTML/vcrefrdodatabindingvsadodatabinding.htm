<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Access: ADO and RDO</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcrefrdodatabindingvsadodatabinding"></A>Data Access: ADO and RDO</H1>

<P>Two underlying technologies support data-source or data-bound controls:</P>

<P class=dt>ADO</P>

<P class=indent>ADO is a COM wrapper of OLE DB that facilitates writing data access applications (consumers). OLE DB is a COM-based universal data access technology, allowing you to use any data source, not just indexed, sequential access methods (ISAMs) and SQL-based databases.</P>

<P class=tl>OLE DB providers can access data from a variety of data sources and is not limited to SQL queries to retrieve data but rather can use queries as defined in the provider.</P>
<P class=dt>RDO</P>

<P class=indent>RDO is the COM wrapper of ODBC. ODBC, a C-based API, allows general-purpose (heterogeneous) data access. However, RDO relies on SQL as the command language to access data.</P>

<P class=tl>As of this writing, Microsoft does not plan to further develop RDO. For this reason, you may consider using the ADO-based data-access controls rather than the RDO data-access controls.</P>
<P>The main differences between ADO and RDO data controls are:</P>

<P class=dt>Data-Bound Controls</P>

<P class=indent>RDO data-bound controls use the <B>ICursor</B> interfaces; ADO controls use the OLE DB <B>IRowset</B> interface. In both cases, the interfaces used by the controls return a rowset.</P>

<P class=indent>The RDO-based data-bound controls were designed to work best with Visual Basic. As such, some functionality of RDO data-bound controls, most notably in formatting, is not available in Visual C++ made applications. This problem is not present in the ADO databinding controls.</P>

<P class=dt>Data-Source Controls</P>

<P class=indent>ADO data-source controls implement the <B>IDataSource</B> interface and RDO data-source controls implement the <B>IVBDSC</B> interface. You can call an IDataSource method to receive an IRowset interface pointer. Similarly, you can call an IVBDSC method to get an ICursor interface pointer.</P>

<P>Back to <A HREF="vcrefmicrosoftdatasourcecontrolsdataboundcontrolsincludedwithvisualc6.htm">Databinding with ActiveX Controls in Visual C++</A>.</P>
</font>
</BODY>
</HTML>
