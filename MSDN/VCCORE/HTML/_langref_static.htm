<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>static</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_static"></A><SUP></SUP>static</H1>

<P><B>static</B> <I>declarator</I></P>

<P>When modifying a variable, the <B>static</B> keyword specifies that the variable has static duration (it is allocated when the program begins and deallocated when the program ends) and initializes it to 0 unless another value is specified. When modifying a variable or function at file scope, the <B>static</B> keyword specifies that the variable or function has internal linkage (its name is not visible from outside the file in which it is declared). </P>

<P>In C++, when modifying a data member in a class declaration, the <B>static</B> keyword specifies that one copy of the member is shared by all the instances of the class. When modifying a member function in a class declaration, the <B>static</B> keyword specifies that the function accesses only static members.</P>

<P>For related information, see <A HREF="_langref_auto.htm">auto</A>, <A HREF="_langref_extern.htm">extern</A>, and <A HREF="_langref_register.htm">register</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>// Example of the static keyword
static int i;         // Variable accessible only from this file

static void func();   // Function accessible only from this file

int max_so_far( int curr )
{
   static int biggest;    // Variable whose value is retained
                          //    between each function call
   if( curr &gt; biggest )
      biggest = curr;

   return biggest;
}

// C++ only

class SavingsAccount
{
public:
   static void setInterest( float newValue )  // Member function
      { currentRate = newValue; }             //    that accesses
                                              //    only static
                                              //    members
private:
   char name[30];
   float total;
   static float currentRate;    // One copy of this member is
                                //    shared among all instances
                                //    of SavingsAccount
};

// Static data members must be initialized at file scope, even
//    if private.
float SavingsAccount::currentRate = 0.00154;</CODE></PRE>
</font>
</BODY>
</HTML>
