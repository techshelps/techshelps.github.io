<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C Run-Time Library Functions for Thread Control</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_CreateThread">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_c_run.2d.time_library_functions_for_thread_control"></A>C Run-Time Library Functions for Thread Control</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_multithreaded_programs.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_multithreading_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_multithreading_sample_list.htm">Sample</A></P>

<P>All Win32 programs have at least one thread. Any thread can create additional threads. A thread can complete its work quickly and then terminate, or it can stay active for the life of the program.</P>

<P>The LIBCMT and MSVCRT C run-time libraries provide two functions for thread creation and termination: <B>_beginthread</B> and <B>_endthread</B>.</P>

<P>The <B>_beginthread</B> function creates a new thread and returns a thread identifier if the operation is successful. The thread terminates automatically if it completes execution, or it can terminate itself with a call to <B>_endthread</B>.</P>

<P class=indent><B><B>! Warning</B></B>&nbsp;&nbsp;&nbsp;If you are going to call C run-time routines from a program built with LIBCMT.LIB, you must start your threads with the <I>_</I><B>beginthread</B> function. Do not use the Win32 functions <B>ExitThread</B> and <B>CreateThread</B>. Using <B>SuspendThread</B> can lead to a deadlock when more than one thread is blocked waiting for the suspended thread to complete its access to a C run-time data structure.</P>



<H2><A NAME="_core_the__beginthread_function"></A>The _beginthread Function</H2>

<P>The <A HREF="_crt__beginthread.2c_._beginthreadex.htm">_beginthread</A> function creates a new thread. A thread shares the code and data segments of a process with other threads in the process, but has its own unique register values, stack space, and current instruction address. The system gives CPU time to each thread, so that all threads in a process can execute concurrently. </P>

<P>The <B>_beginthread</B> function is similar to the <A HREF="JavaScript:hhobj_2.Click()">CreateThread</A> function in the Win32 API but has these differences:

<UL type=disc>
	<LI>The <B>_beginthread</B> function lets you pass multiple arguments to the thread.<BR><BR></LI>

	<LI>The <B>_beginthread</B> function initializes certain C run-time library variables. This is important only if you use the C run-time library in your threads.<BR><BR></LI>

	<LI><B>CreateThread</B> provides control over security attributes. You can use this function to start a thread in a suspended state.</LI>
</UL>

<P>The <B>_beginthread</B> function returns a handle to the new thread if successful or&nbsp; –1 if there was an error. </P>



<H2><A NAME="_core_the__endthread_function"></A>The _endthread Function</H2>

<P>The <A HREF="_crt__endthread.2c_._endthreadex.htm">_endthread</A> function terminates a thread created by <B>_beginthread</B>. Threads terminate automatically when they finish. The <B>_endthread</B> function is useful for conditional termination from within a thread. A thread dedicated to communications processing, for example, can quit if it is unable to get control of the communications port. </P>
</font>
</BODY>
</HTML>
