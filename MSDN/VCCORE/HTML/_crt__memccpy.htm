<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_memccpy</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__memccpy"></A><SUP></SUP>_memccpy</H1>

<P>Copies characters from a buffer.</P>

<P><B>void</B> <B>*_memccpy(</B> <B>void</B> <B>*</B><I>dest</I><B>,</B> <B>const</B> <B>void</B> <B>*</B><I>src</I><B>,</B> <B>int</B> <I>c</I><B>,</B> <B>unsigned</B> <B>int</B> <I>count</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=56%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_memccpy</B></TD>
<TD width=27%>&lt;memory.h&gt; or &lt;string.h&gt;</TD>
<TD width=56%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>If the character <I>c</I> is copied, <B>_memccpy</B> returns a pointer to the byte in <I>dest</I> that immediately follows the character. If <I>c</I> is not copied, it returns <B>NULL</B>.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>dest</I></P>

<P class=indent>Pointer to destination</P>

<P class=dt><I>src</I></P>

<P class=indent>Pointer to source</P>

<P class=dt><I>c</I></P>

<P class=indent>Last character to copy</P>

<P class=dt><I>count</I></P>

<P class=indent>Number of characters</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_memccpy</B> function copies 0 or more bytes of <I>src</I> to <I>dest</I>, halting when the character <I>c</I> has been copied or when <I>count</I> bytes have been copied, whichever comes first.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* MEMCCPY.C */

#include &lt;memory.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

char string1[60] = "The quick brown dog jumps over the lazy fox";

void main( void )
{
   char buffer[61];
   char *pdest;

   printf( "Function:\t_memccpy 60 characters or to character 's'\n" );
   printf( "Source:\t\t%s\n", string1 );
   pdest = _memccpy( buffer, string1, 's', 60 );
   *pdest = '\0';
   printf( "Result:\t\t%s\n", buffer );
   printf( "Length:\t\t%d characters\n\n", strlen( buffer ) );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Function:   _memccpy 60 characters or to character 's'
Source:      The quick brown dog jumps over the lazy fox
Result:      The quick brown dog jumps
Length:      25 characters

</CODE></PRE>

<P><A HREF="_crt_buffer_manipulation.htm">Buffer Manipulation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_memchr.htm">memchr</A>, <A HREF="_crt_memcmp.htm">memcmp</A>, <A HREF="_crt_memcpy.htm">memcpy</A>, <A HREF="_crt_memset.htm">memset</A></P>
</font>
</BODY>
</HTML>
