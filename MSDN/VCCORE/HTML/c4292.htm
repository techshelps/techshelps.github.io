<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning (level 3) C4292</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c4292"></A><SUP></SUP>Compiler Warning (level 3) C4292</H1>

<P class=dt><B>'name' : 'name' is ambiguous or inaccessible; memory will not be freed if initialization throws an exception</B></P>

<P>Because an exception could happen while creating an instance of an object, the object’s destructor must be accessible and unambiguous. If it is not, the object will not be deleted correctly. You can avoid this problem by changing the access of the object’s delete operator or compiling without exception handling (<A HREF="_core_.2f.gx.htm">/GX</A>–).</P>

<P>The following example shows an inaccessible destructor:</P>

<PRE><CODE>// compiled with (/GX)
class B {
public:
    void *operator new(unsigned int);
};

class D : public B {
protected:
    void operator delete(void *);
};

class E : public D {
public:
    E();
    ~E();
};

void f()
{
    E *pE = new E; // warning C4292, delete is inaccessible (protected)
}
</CODE></PRE>
</font>
</BODY>
</HTML>
