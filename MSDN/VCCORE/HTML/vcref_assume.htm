<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>__assume</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcref_assume"></A>__assume</H1>

<P><B>Microsoft Specific </B></P>

<P class=dt><B>__assume(</B><I>expression</I><B>)</B></P>

<P class=dt></P>

<P>The <B>__assume</B> keyword passes a hint to the optimizer. The optimizer assumes that the condition represented by <I>expression</I> is true at the point where the keyword appears and remains true until <I>expression</I> is altered (for example, by assignment to a variable). Selective use of hints passed to the optimizer by <B>__assume</B> can improve optimization.&nbsp; </P>

<P>The most common use of <B>__assume</B> is with the default case of a switch statement, as shown below.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>#ifdef DEGUG
# define ASSERT(e)    ( ((e) || assert(__FILE__, __LINE__) )
#else
# define ASSERT(e)    ( __assume(e) )
#endif

void gloo(int p)
{
   switch(p){
      case 1:
         blah(1);
         break;
      case 2:
         blah(-1);
         break;
      default:
         __assume(0);
            // This tells the optimizer that the default
            // cannot be reached. As so it does not have to generate
            // the extra code to check that 'p' has a value 
            // not represented by a case arm.  This makes the switch 
            // run faster.
   }
}
</CODE></PRE>

<P>The use of <B>__assume(0)</B> tells the optimizer that the default case cannot be reached. As a result, the compiler does not generate code to test whether <B>p</B> has a value not represented in a case statement. Note that <B>__assume(0)</B> must be the first statement in the body of the default case for this to work. </P>

<P>Because the compiler generates code based on the <B>__assume</B> statement, that code may not correctly if the expression inside the <B>__assume</B> statement is false at runtime. If you are not sure that the expression will always be true at runtime, you can use the <B>assert</B> function to protect the code:</P>

<P class=label><B>Example</B></P>

<PRE><CODE># define ASSERT(e)    ( ((e) || assert(__FILE__, __LINE__)), __assume(e) )</CODE></PRE>

<P>Unfortunately, this use of <B>assert</B> prevents the compiler from performing the default-case optimization shown above. Therefore, you may want to use a separate macro instead:</P>

<P class=label><B>Example</B></P>

<PRE><CODE>#ifdef DEBUG
# define NODEFAULT   ASSERT(0)
#else
# define NODEFAULT   __assume(0)
#endif

   default:
      NODEFAULT;</CODE></PRE>

<P><B>END Microsoft Specific</B></P>
</font>
</BODY>
</HTML>
