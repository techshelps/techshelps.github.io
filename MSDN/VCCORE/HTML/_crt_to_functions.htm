<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>to Functions</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_to_functions"></A><SUP></SUP>to Functions</H1>

<P>Each of the <B>to</B> functions and its associated macro, if any, converts a single character to another character.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=42%><A HREF="_crt___toascii.htm">__toascii</A></TD>
<TD width=58%><A HREF="_crt_toupper__toupper.2c_.towupper.htm">toupper, _toupper, towupper</A></TD>
</TR>

<TR VALIGN="top">
<TD width=42%><A HREF="_crt_tolower.2c_._tolower.2c_.towlower.htm">tolower, _tolower, towlower</A></TD>
<TD width=58%>&nbsp;</TD>
</TR>
</TABLE><BR>

<P class=label><B>Remarks</B></P>

<P>The <B>to</B> functions and macro conversions are as follows.</P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=18%><B>Routine</B></TD>
<TD class=label width=18%><B>Macro</B></TD>
<TD class=label width=64%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>__toascii</B></TD>
<TD width=18%><B>__toascii</B></TD>
<TD width=64%>Converts <I>c</I> to ASCII character</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>tolower</B></TD>
<TD width=18%><B>tolower</B> </TD>
<TD width=64%>Converts <I>c</I> to lowercase if appropriate</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>_tolower</B></TD>
<TD width=18%><B>_tolower</B> </TD>
<TD width=64%>Converts <I>c</I> to lowercase</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>towlower</B></TD>
<TD width=18%>None</TD>
<TD width=64%>Converts <I>c</I> to corresponding wide-character lowercase letter</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>toupper</B></TD>
<TD width=18%><B>toupper</B> </TD>
<TD width=64%>Converts <I>c</I> to uppercase if appropriate</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>_toupper</B></TD>
<TD width=18%><B>_toupper</B></TD>
<TD width=64%>Converts <I>c</I> to uppercase</TD>
</TR>

<TR VALIGN="top">
<TD width=18%><B>towupper</B></TD>
<TD width=18%>None</TD>
<TD width=64%>Converts c to corresponding wide-character uppercase letter</TD>
</TR>
</TABLE><BR>

<P>To use the function versions of the <B>to</B> routines that are also defined as macros, either remove the macro definitions with <B>#undef</B> directives or do not include CTYPE.H. If you use the /Za compiler option, the compiler uses the function version of <B>toupper</B> or <B>tolower</B>. Declarations of the <B>toupper</B> and <B>tolower</B> functions are in STDLIB.H.</P>

<P>The <B>__toascii</B> routine sets all but the low-order 7 bits of <I>c</I> to 0, so that the converted value represents a character in the ASCII character set. If <I>c</I> already represents an ASCII character, <I>c</I> is unchanged.</P>

<P>The <B>tolower</B> and <B>toupper</B> routines:

<UL type=disc>
	<LI>Are dependent on the <B>LC_CTYPE</B> category of the current locale (<B>tolower</B> calls <B>isupper</B> and <B>toupper</B> calls <B>islower</B>).<BR><BR></LI>

	<LI>Convert <I>c</I> if <I>c</I> represents a convertible letter of the appropriate case in the current locale and the opposite case exists for that locale. Otherwise, <I>c</I> is unchanged.</LI>
</UL>

<P>The <B>_tolower</B> and <B>_toupper</B> routines:

<UL type=disc>
	<LI>Are locale-independent, much faster versions of <B>tolower</B> and <B>toupper.</B> <BR><BR></LI>

	<LI>Can be used only when <B>isascii(</B><I>c</I><B>)</B> and either <B>isupper(</B><I>c</I><B>)</B> or <B>islower(</B><I>c</I><B>)</B>, respectively, are true.<BR><BR></LI>

	<LI>Have undefined results if <I>c</I> is not an ASCII letter of the appropriate case for converting.</LI>
</UL>

<P>The <B>towlower</B> and <B>towupper</B> functions return a converted copy of <I>c</I> if and only if both of the following conditions are true. Otherwise, <I>c</I> is unchanged.

<UL type=disc>
	<LI><I>c</I> is a wide character of the appropriate case (that is, for which <B>iswupper</B> or <B>iswlower,</B> respectively, is true).<BR><BR></LI>

	<LI>There is a corresponding wide character of the target case (that is, for which <B>iswlower</B> or <B>iswupper,</B> respectively, is true).</LI>
</UL>

<P class=label><B>Example</B></P>

<PRE><CODE>/* TOUPPER.C: This program uses toupper and tolower to
 * analyze all characters between 0x0 and 0x7F. It also
 * applies _toupper and _tolower to any code in this
 * range for which these functions make sense.
 */

#include &lt;conio.h&gt;
#include &lt;ctype.h&gt;
#include &lt;string.h&gt;

char msg[] = "Some of THESE letters are Capitals\r\n";
char *p;

void main( void )
{
   _cputs( msg );

   /* Reverse case of message. */
   for( p = msg; p &lt; msg + strlen( msg ); p++ )
   {
      if( islower( *p ) )
         _putch( _toupper( *p ) );
      else if( isupper( *p ) )
         _putch( _tolower( *p ) );
      else
         _putch( *p );
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Some of THESE letters are Capitals
sOME OF these LETTERS ARE cAPITALS

</CODE></PRE>

<P><A HREF="_crt_data_conversion.htm">Data Conversion Routines</A>  |&nbsp; <A HREF="_crt_locale.htm">Locale Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_is.2c_.isw_routines.htm">is Routines</A></P>
</font>
</BODY>
</HTML>
