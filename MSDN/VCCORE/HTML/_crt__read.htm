<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_read</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__read"></A><SUP></SUP>_read</H1>

<P>Reads data from a file.</P>

<P><B>int</B> <B>_read(</B> <B>int</B> <I>handle</I><B>,</B> <B>void</B> <B>*</B><I>buffer</I><B>,</B> <B>unsigned</B> <B>int</B> <I>count</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=15%><B>Routine</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=59%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>_read</B></TD>
<TD width=26%>&lt;io.h&gt;</TD>
<TD width=59%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>_<B>read</B> returns the number of bytes read, which may be less than <I>count</I> if there are fewer than <I>count</I> bytes left in the file or if the file was opened in text mode, in which case each carriage return–linefeed (CR-LF) pair is replaced with a single linefeed character. Only the single linefeed character is counted in the return value. The replacement does not affect the file pointer.</P>

<P>If the function tries to read at end of file, it returns 0. If the <I>handle</I> is invalid, or the file is not open for reading, or the file is locked, the function returns –1 and sets <B>errno</B> to <B>EBADF</B>.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>handle</I></P>

<P class=indent>Handle referring to open file</P>

<P class=dt><I>buffer</I></P>

<P class=indent>Storage location for data</P>

<P class=dt><I>count</I></P>

<P class=indent>Maximum number of bytes</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_read</B> function reads a maximum of <I>count</I> bytes into <I>buffer</I> from the file associated with <I>handle</I>. The read operation begins at the current position of the file pointer associated with the given file. After the read operation, the file pointer points to the next unread character.</P>

<P>If the file was opened in text mode, the read terminates when <B>_read</B> encounters a CTRL+Z character, which is treated as an end-of-file indicator. Use <A HREF="_crt__lseek.2c_._lseeki64.htm">_lseek</A> to clear the end-of-file indicator.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* READ.C: This program opens a file named
 * READ.C and tries to read 60,000 bytes from
 * that file using _read. It then displays the
 * actual number of bytes read from READ.C.
 */

#include &lt;fcntl.h&gt;      /* Needed only for _O_RDWR definition */
#include &lt;io.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

char buffer[60000];

void main( void )
{
   int fh;
   unsigned int nbytes = 60000, bytesread;

   /* Open file for input: */
   if( (fh = _open( "read.c", _O_RDONLY )) == -1 )
   {
      perror( "open failed on input file" );
      exit( 1 );
   }

   /* Read in input: */
   if( ( bytesread = _read( fh, buffer, nbytes ) ) &lt;= 0 )
      perror( "Problem reading file" );
   else
      printf( "Read %u bytes from file\n", bytesread );

   _close( fh );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Read 775 bytes from file

</CODE></PRE>

<P><A HREF="_crt_low.2d.level_i.2f.o.htm">Low-Level I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__creat.2c_._wcreat.htm">_creat</A>, <A HREF="_crt_fread.htm">fread</A>, <A HREF="_crt__open.2c_._wopen.htm">_open</A>, <A HREF="_crt__write.htm">_write</A></P>
</font>
</BODY>
</HTML>
