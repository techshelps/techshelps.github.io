<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Detecting a Memory Leak</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_detecting_a_memory_leak"></A>Detecting a Memory Leak</H1>

<P>The following instructions and example show you how to detect a memory leak.</P>

<P class=label><B><A NAME="_core_to_detect_a_memory_leak"></A>To detect a memory leak</B>

<OL>
	<LI>Create a <B>CMemoryState</B> object and call the <B>Checkpoint</B> member function to get the initial snapshot of memory.<BR><BR></LI>

	<LI>After you perform the memory allocation and deallocation operations, create another <B>CMemoryState</B> object and call <B>Checkpoint</B> for that object to get a current snapshot of memory usage.<BR><BR></LI>

	<LI>Create a third <B>CMemoryState</B> object, call the <B>Difference</B> member function, and supply the previous two <B>CMemoryState</B> objects as arguments. The return value for the <B>Difference</B> function will be nonzero if there is any difference between the two specified memory states, indicating that some memory blocks have not been deallocated.
<P class=tl>The following example shows how to check for memory leaks:</P>
<PRE><CODE>// Declare the variables needed
#ifdef _DEBUG
    CMemoryState oldMemState, newMemState, diffMemState;
    oldMemState.Checkpoint();
#endif

    // do your memory allocations and deallocations...
    CString s = "This is a frame variable";
    // the next object is a heap object
    CPerson* p = new CPerson( "Smith", "Alan", "581-0215" );

#ifdef _DEBUG
    newMemState.Checkpoint();
    if( diffMemState.Difference( oldMemState, newMemState ) )
    {
        TRACE( "Memory leaked!\n" );
    }
#endif
</CODE></PRE>

<P class=tl>Notice that the memory-checking statements are bracketed by <B>#ifdef _DEBUG / #endif</B> blocks so that they are compiled only in <B>Win32 Debug</B> versions of your program.</P></LI>
</OL>
</font>
</BODY>
</HTML>
