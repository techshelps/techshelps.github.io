<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error C2555</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c2555"></A><SUP></SUP>Compiler Error C2555</H1>

<P class=dt><B>'class1::function1' : overriding virtual function differs from 'class2::function2' only by return type or calling convention</B></P>

<P>The specified virtual function and a derived overriding function had identical parameter lists but different return types.</P>

<P>An overriding function in a derived class cannot be redefined to differ only by its return type from a virtual function in a base class.</P>

<P>A function in a derived class or structure overrides a virtual function in a base class only if their names, parameters, and return values are all identical. (If the functions have different parameters, the compiler treats them as different functions and does not override the virtual function.)</P>

<P>It may be necessary to cast the return value after the virtual function has been called.</P>

<P>The following is an example of this error:</P>

<PRE><CODE>struct X
{
   virtual void func();
};
struct Y : X
{
   char func();  // error
};
</CODE></PRE>
</font>
</BODY>
</HTML>
