<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>setbuf</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_setbuf"></A><SUP></SUP>setbuf</H1>

<P>Controls stream buffering.</P>

<P><B>void</B> <B>setbuf(</B> <B>FILE</B> <B>*</B><I>stream</I><B>,</B> <B>char</B> <B>*</B><I>buffer</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=15%><B>Routine</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=59%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>setbuf</B></TD>
<TD width=26%>&lt;stdio.h&gt;</TD>
<TD width=59%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>None</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>stream</I></P>

<P class=indent>Pointer to <B>FILE</B> structure</P>

<P class=dt><I>buffer</I></P>

<P class=indent>User-allocated buffer</P>

<P class=label><B>Remarks</B></P>

<P>The <B>setbuf</B> function controls buffering for <I>stream</I>. The <I>stream</I> argument must refer to an open file that has not been read or written. If the <I>buffer</I> argument is <B>NULL</B>, the stream is unbuffered. If not, the buffer must point to a character array of length <B>BUFSIZ</B>, where <B>BUFSIZ</B> is the buffer size as defined in STDIO.H. The user-specified buffer, instead of the default system-allocated buffer for the given stream, is used for I/O buffering. The <B>stderr</B> stream is unbuffered by default, but you can use <B>setbuf</B> to assign buffers to <B>stderr</B>.</P>

<P><B>setbuf</B> has been replaced by <A HREF="_crt_setvbuf.htm">setvbuf</A>, which is the preferred routine for new code. <B>setbuf</B> is retained for compatibility with existing code.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* SETBUF.C: This program first opens files named DATA1 and
 * DATA2. Then it uses setbuf to give DATA1 a user-assigned
 * buffer and to change DATA2 so that it has no buffer.
 */

#include &lt;stdio.h&gt;

void main( void )
{
   char buf[BUFSIZ];
   FILE *stream1, *stream2;

   if( ((stream1 = fopen( "data1", "a" )) != NULL) &amp;&amp;
       ((stream2 = fopen( "data2", "w" )) != NULL) )
   {
      /* "stream1" uses user-assigned buffer: */
      setbuf( stream1, buf );
      printf( "stream1 set to user-defined buffer at: %Fp\n", buf );

      /* "stream2" is unbuffered              */
      setbuf( stream2, NULL );
      printf( "stream2 buffering disabled\n" );
      _fcloseall();
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>stream1 set to user-defined buffer at: 0013FDA0
stream2 buffering disabled

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_fclose.2c_._fcloseall.htm">fclose</A>, <A HREF="_crt_fflush.htm">fflush</A>, <A HREF="_crt_fopen.2c_._wfopen.htm">fopen</A>, <A HREF="_crt_setvbuf.htm">setvbuf</A></P>
</font>
</BODY>
</HTML>
