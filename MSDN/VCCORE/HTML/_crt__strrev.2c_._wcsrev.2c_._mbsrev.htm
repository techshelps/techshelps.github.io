<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_strrev, _wcsrev, _mbsrev</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__strrev.2c_._wcsrev.2c_._mbsrev"></A><SUP></SUP>_strrev, _wcsrev, _mbsrev</H1>

<P>Reverse characters of a string.</P>

<P><B>char</B> <B>*_strrev(</B> <B>char</B> <B>*</B><I>string</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*_wcsrev(</B> <B>wchar_t</B> <B>*</B><I>string</I> <B>);</B></P>

<P><B>unsigned</B> <B>char</B> <B>*_mbsrev(</B> <B>unsigned</B> <B>char</B> <B>*</B><I>string</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=34%><B>Required Header</B></TD>
<TD class=label width=49%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_strrev</B></TD>
<TD width=34%>&lt;string.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_wcsrev</B></TD>
<TD width=34%>&lt;string.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_mbsrev</B></TD>
<TD width=34%>&lt;mbstring.h&gt;</TD>
<TD width=49%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns a pointer to the altered string. No return value is reserved to indicate an error.</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>string</I></P>

<P class=indent>Null-terminated string to reverse</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_strrev</B> function reverses the order of the characters in <I>string</I>. The terminating null character remains in place. <B>_wcsrev</B> and <B>_mbsrev</B> are wide-character and multibyte-character versions of <B>_strrev</B>. The arguments and return value of <B>_wcsrev</B> are wide-character strings; those of <B>_mbsrev</B> are multibyte-character strings. For <B>_mbsrev</B>, the order of bytes in each multibyte character in <I>string</I> is not changed. These three functions behave identically otherwise. </P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_tcsrev</TD>
<TD width=29%>_strrev </TD>
<TD width=26%>_mbsrev </TD>
<TD width=28%>_wcsrev </TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* STRREV.C: This program checks an input string to
 * see whether it is a palindrome: that is, whether
 * it reads the same forward and backward.
 */

#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   char string[100];
   int result;

   printf( "Input a string and I will tell you if it is a palindrome:\n" );
   gets( string );

   /* Reverse string and compare (ignore case): */
   result = _stricmp( string, _strrev( _strdup( string ) ) );
   if( result == 0 )
      printf( "The string \"%s\" is a palindrome\n\n", string );
   else
      printf( "The string \"%s\" is not a palindrome\n\n", string );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Input a string and I will tell you if it is a palindrome:
Able was I ere I saw Elba
The string "Able was I ere I saw Elba" is a palindrome

</CODE></PRE>

<P><A HREF="_crt_string_manipulation.htm">String Manipulation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_strcpy.2c_.wcscpy.2c_._mbscpy.htm">strcpy</A>, <A HREF="_crt__strset.2c_._wcsset.2c_._mbsset.htm">_strset</A></P>
</font>
</BODY>
</HTML>
