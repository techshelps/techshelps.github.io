<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing the COMSTAT Structure</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_accessing_the_comstat_structure"></A>Accessing the COMSTAT Structure</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_win32_programming.3a_.overview.htm">Overview</A> |&nbsp; <A HREF="_core_win32_programming_tasks.htm">How Do I</A></P>

<P>The Windows 3.<I>x</I> declaration of the <B>COMSTAT</B> structure is incompatible with ANSI standards. WINDOWS.H now defines the <B>COMSTAT</B> structure, for compatibility with ANSI compilers, so that the /W4 option does not issue warnings.</P>

<P>To support backward compatibility of source code, WINDOWS.H does not use the new structure definition unless the version of Windows (as indicated by WINVER) is 3.<I>x</I> or later, or if STRICT is defined. When you enable STRICT, the presumption is that you are trying to write portable code. Therefore, WINDOWS.H uses the new <B>COMSTAT</B> structure for all versions of Windows if STRICT is enabled.</P>

<P>The new structure definition replaces the bit fields with flags that access bits in a single field, named <B>status</B>, as shown in the following table. Each flag turns on a different bit.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=37%><B>Windows 3.<I>x</I> field name</B></TD>
<TD class=label width=63%><B>Flag accessing the status field</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%>fCtsHold</TD>
<TD width=63%>CSTF_CTSHOLD</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>fDsrHold</TD>
<TD width=63%>CSTF_DSRHOLD</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>fEof</TD>
<TD width=63%>CSTF_EOF</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>fRlsdHold</TD>
<TD width=63%>CSTF_RLSDHOLD</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>fTxim</TD>
<TD width=63%>CSTF_TXIM</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>fXoffHold</TD>
<TD width=63%>CSTF_XOFFHOLD</TD>
</TR>

<TR VALIGN="top">
<TD width=37%>fXoffSent</TD>
<TD width=63%>CSTF_XOFFSENT</TD>
</TR>
</TABLE><BR>

<P>If your code accesses any of these status fields, you need to change your code as appropriate. For example, suppose you have the following code written for Windows 3.<I>x</I>:</P>

<PRE><CODE>if (comstat.fEof || fCondition)
    comstat.fCtsHold = TRUE;
    comstat.fTxim = FALSE;
</CODE></PRE>

<P>This code should be replaced by code that accesses individual bits of the <B>status</B> field by using flags. Note the use of bitwise operators:</P>

<PRE><CODE>if ((comstat.status &amp; CSTF_EOF) || fCondition)
    comstat.status |= CSTF_CTSHOLD;
    comstat.status &amp;= ~CSTF_TXIM;
</CODE></PRE>
</font>
</BODY>
</HTML>
