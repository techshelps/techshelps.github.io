<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>__stdcall</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core___stdcall"></A>__stdcall</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_calling_conventions.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_calling_conventions_tasks.htm">How Do I</A></P>

<P><B>Microsoft Specific —&gt;</B></P>

<P>The <B>__stdcall</B> calling convention is used to call Win32 API functions. The callee cleans the stack, so the compiler makes <B>vararg</B> functions <B>__cdecl</B>. Functions that use this calling convention require a function prototype. The following list shows the implementation of this calling convention.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=44%><B>Element</B></TD>
<TD class=label width=56%><B>Implementation</B></TD>
</TR>

<TR VALIGN="top">
<TD width=44%>Argument-passing order</TD>
<TD width=56%>Right to left.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>Argument-passing convention</TD>
<TD width=56%>By value, unless a pointer or reference type is passed.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>Stack-maintenance responsibility</TD>
<TD width=56%>Called function pops its own arguments from the stack.</TD>
</TR>

<TR VALIGN="top">
<TD width=44%>Name-decoration convention</TD>
<TD width=56%>An underscore (_) is prefixed to the name. The name is followed by the at sign (@) followed by the number of bytes (in decimal) in the argument list. Therefore, the function declared as <CODE>int func( int a, double b )</CODE> is decorated as follows: <CODE>_func@12</CODE></TD>
</TR>

<TR VALIGN="top">
<TD width=44%>Case-translation convention</TD>
<TD width=56%>None</TD>
</TR>
</TABLE><BR>

<P>The <A HREF="_core_.2f.gd.2c_2f.gr.2c_2f.gz.htm">/Gz</A> compiler option specifies <B>__stdcall</B> for all functions not explicitly declared with a different calling convention. </P>

<P>Functions declared using the <B>__stdcall</B> modifier return values the same way as functions declared using <A HREF="_core___cdecl.htm">__cdecl</A>. </P>

<P><B>END Microsoft Specific</B></P>

<H3>Example</H3>

<P>In the following example, use of __<B>stdcall</B> results in all <CODE>WINAPI</CODE> function types being handled as a standard call:</P>

<PRE><CODE>// Example of the __stdcall keyword
#define WINAPI __stdcall
</CODE></PRE>
</font>
</BODY>
</HTML>
