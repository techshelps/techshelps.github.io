<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Expression Evaluator Error CXX0017</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="expression_evaluator_error_cxx0017"></A><SUP></SUP>Expression Evaluator Error CXX0017</H1>

<P class=dt><B>symbol not found</B></P>

<P>A symbol specified in an expression could not be found.</P>

<P>One possible cause of this error is a case mismatch in the symbol name. Because C and C++ are case-sensitive languages, a symbol name must be given in the exact case in which it is defined in the source.</P>

<P>This error can occur when trying to typecast a variable in order to watch the variable during debugging. The <B>typedef</B> declares a new name for a type, but it does not define a new type. The typecast attempted in the debugger requires the name of a defined type.</P>

<P class=label><B>Tips</B>

<UL type=disc>
	<LI>Make sure the symbol is already declared at the point in the program where it is being used.<BR><BR></LI>

	<LI>Use an actual type name to cast variables in the debugger, rather than a <B>typedef</B> defined name.</LI>
</UL>

<P>This error is identical to CAN0017.</P>
</font>
</BODY>
</HTML>
