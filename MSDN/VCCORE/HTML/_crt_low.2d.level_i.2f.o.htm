<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Low-level I/O</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_low.2d.level_i.2f.o"></A><SUP></SUP>Low-level I/O</H1>

<P>These functions invoke the operating system directly for lower-level operation than that provided by stream I/O. Low-level input and output calls do not buffer or format data.</P>

<P>Low-level routines can access the standard streams opened at program startup using the following predefined handles:</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=24%><B>Stream</B></TD>
<TD class=label width=76%><B>Handle</B></TD>
</TR>

<TR VALIGN="top">
<TD width=24%><B>stdin</B></TD>
<TD width=76%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=24%><B>stdout</B></TD>
<TD width=76%>1</TD>
</TR>

<TR VALIGN="top">
<TD width=24%><B>stderr</B></TD>
<TD width=76%>2</TD>
</TR>
</TABLE><BR>

<P>Low-level I/O routines set the <A HREF="_crt__doserrno.2c_.errno.2c_._sys_errlist.2c_.and__sys_nerr.htm">errno</A> global variable when an error occurs. You must include STDIO.H when you use low-level functions only if your program requires a constant that is defined in STDIO.H, such as the end-of-file indicator (<B>EOF</B>).</P>

<P class=label><B>Low-Level I/O Functions</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=23%><B>Function</B></TD>
<TD class=label width=77%><B>Use</B></TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__close.htm">_close</A></TD>
<TD width=77%>Close file</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__commit.htm">_commit</A></TD>
<TD width=77%>Flush file to disk</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__creat.2c_._wcreat.htm">_creat, _wcreat</A></TD>
<TD width=77%>Create file</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__dup.2c_._dup2.htm">_dup</A></TD>
<TD width=77%>Return next available file handle for given file</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__dup.2c_._dup2.htm">_dup2</A></TD>
<TD width=77%>Create second handle for given file</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__eof.htm">_eof</A></TD>
<TD width=77%>Test for end of file</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__lseek.2c_._lseeki64.htm">_lseek, _lseeki64</A></TD>
<TD width=77%>Reposition file pointer to given location</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__open.2c_._wopen.htm">_open, _wopen</A></TD>
<TD width=77%>Open file</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__read.htm">_read</A></TD>
<TD width=77%>Read data from file</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__sopen.2c_._wsopen.htm">_sopen, _wsopen</A></TD>
<TD width=77%>Open file for file sharing</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__tell.2c_._telli64.htm">_tell, _telli64</A></TD>
<TD width=77%>Get current file-pointer position</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__umask.htm">_umask</A></TD>
<TD width=77%>Set file-permission mask</TD>
</TR>

<TR VALIGN="top">
<TD width=23%><A HREF="_crt__write.htm">_write</A></TD>
<TD width=77%>Write data to file</TD>
</TR>
</TABLE><BR>

<P><B>_dup</B> and <B>_dup2</B> are typically used to associate the predefined file handles with different files.</P>
</font>
</BODY>
</HTML>
