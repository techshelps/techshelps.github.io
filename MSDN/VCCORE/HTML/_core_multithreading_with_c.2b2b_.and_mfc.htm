<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multithreading with C++ and MFC</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CWinThread">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_AfxBeginThread">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_Processes_and_Threads">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_multithreading_with_c.2b2b_.and_mfc"></A>Multithreading with C++ and MFC</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_multithreaded_programs.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_multithreading_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_multithreading_sample_list.htm">Sample</A></P>

<P>The Microsoft Foundation Class Library (MFC) provides support for multithreaded applications. This article describes what processes and threads are, and MFC’s approach to multithreading.</P>

<P>A “process” is an executing instance of an application. For example, when you double-click the Notepad icon, you start a process that runs Notepad. </P>

<P>A “thread” is a path of execution within a process. When you start Notepad, the operating system creates a process and begins executing the primary thread of that process. When this thread terminates, so does the process. This primary thread is supplied to the operating system by the startup code in the form of a function address. Usually, it is the address of the <B>main</B> or <B>WinMain</B> function that is supplied.</P>

<P>You can create additional threads in your application if you wish. You may want to do this to handle background or maintenance tasks when you don’t want the user to wait for them to complete. All threads in MFC applications are represented by <A HREF="JavaScript:hhobj_2.Click()">CWinThread</A> objects. In most situations, you don’t even have to explicitly create these objects; instead call the framework helper function <A HREF="JavaScript:hhobj_3.Click()">AfxBeginThread</A>, which creates the <B>CWinThread</B> object for you.</P>

<P>MFC distinguishes two types of threads: user-interface threads and worker threads. User-interface threads are commonly used to handle user input and respond to events and messages generated by the user. Worker threads are commonly used to complete tasks, such as recalculation, that do not require user input. The Win32 API does not distinguish between types of threads; it just needs to know the thread’s starting address so it can begin to execute the thread. MFC handles user-interface threads specially by supplying a message pump for events in the user interface. <B>CWinApp</B> is an example of a user-interface thread object, as it derives from <B>CWinThread</B> and handles events and messages generated by the user.</P>

<P>Special attention should be given to situations where more than one thread may require access to the same object. The article <A HREF="_core_multithreading.3a_.programming_tips.htm">Multithreading: Programming Tips</A> describes techniques you can use to get around problems that may arise in these situations. The article <A HREF="_core_multithreading.3a_.how_to_use_the_synchronization_classes.htm">Multithreading: How to Use the Synchronization Classes</A> describes how to use the classes that are available to synchronize access from multiple threads to a single object.</P>

<P>Writing and debugging multithreaded programming is inherently a complicated and tricky undertaking, as you must ensure that objects are not accessed by more than one thread at a time. The articles in the Multithreading group do not teach the basics of multithreaded programming, only how to use MFC in your multithreaded program. The multithreaded MFC samples included in Visual C++ illustrate a few multithreaded programming techniques and Win32 APIs not encompassed by MFC, but are only intended to be a starting point.</P>

<P>For more information on how the operating system handles processes and threads, see <A HREF="JavaScript:hhobj_4.Click()">Processes and Threads</A>, in the Win32 Programmer’s Reference of the Win32 SDK.</P>

<P>To gain an understanding of how to write a multithreaded program, you should refer to a book such as Jeffrey Richter’s <I>Advanced Windows NT</I> (Microsoft Press, 1994).</P>

<P>For more details on MFC multithreading support, see the following articles:

<UL type=disc>
	<LI><A HREF="_core_multithreading.3a_.creating_user.2d.interface_threads.htm">Multithreading: Creating User-Interface Threads</A><BR><BR></LI>

	<LI><A HREF="_core_multithreading.3a_.creating_worker_threads.htm">Multithreading: Creating Worker Threads</A><BR><BR></LI>

	<LI><A HREF="_core_multithreading.3a_.how_to_use_the_synchronization_classes.htm">Multithreading: How to Use the Synchronization Classes</A><BR><BR></LI>

	<LI><A HREF="_core_multithreading.3a_.terminating_threads.htm">Multithreading: Terminating Threads</A><BR><BR></LI>

	<LI><A HREF="_core_multithreading.3a_.programming_tips.htm">Multithreading: Programming Tips</A><BR><BR></LI>

	<LI><A HREF="_core_multithreading.3a_.when_to_use_the_synchronization_classes.htm">Multithreading: When to Use the Synchronization Classes</A></LI>
</UL>
</font>
</BODY>
</HTML>
