<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error C2446</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c2446"></A><SUP></SUP>Compiler Error C2446</H1>

<P class=dt><B>'operator' : no conversion from 'type1' to 'type2'</B></P>

<P>The compiler is unable to convert <I>type1</I> to <I>type2</I>. Normally the compiler is able to convert from one type to another, but sometimes a conversion does not make sense because it would violate the semantics of C or C++. If you’ve encountered this error on code which compiled with an earlier version of Visual C++, please read <A HREF="technote.3a_.improved_conformance_to_ansi_c.2b2b.htm">Technote: Improved Conformance to ANSI C++</A> for more information.</P>

<P>The example below illustrates two conversion problems:

<OL>
	<LI>Converting an <B>int</B> to a pointer to <B>char</B> has no meaning and is not allowed.<BR><BR></LI>

	<LI>Converting a pointer to a <B>const</B> object to a pointer to a non-<B>const</B> object is not allowed. If you could obtain such a pointer, you could modify the <B>const</B> object through it, violating the sematics of <B>const</B>.
<PRE><CODE>int i;
char *p;
int *j;
const int *cj;

void main()
{
   p = i;  // ERROR #1: conversion has no meaning
   j = cj; // ERROR #2: pointer to const obj
}
</CODE></PRE>
</LI>
</OL>
</font>
</BODY>
</HTML>
