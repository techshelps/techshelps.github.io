<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Options Listed by Category</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_compiler_options_listed_by_category"></A>Compiler Options Listed by Category</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_overviews.3a_.compiling_and_linking.htm">Overview</A>  |&nbsp; <A HREF="_core_set_compiler_options.htm">How Do I</A></P>

<H2>Optimization:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.o1.2c_2f.o2.htm">/O1</A></TD>
<TD width=59%>Creates small code</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.o1.2c_2f.o2.htm">/O2</A></TD>
<TD width=59%>Creates fast code</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.oa.2c_2f.ow.htm">/Oa</A></TD>
<TD width=59%>Assumes no aliasing</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.ob.htm">/Ob</A></TD>
<TD width=59%>Controls inline expansion</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.od.htm">/Od</A></TD>
<TD width=59%>Disables optimization</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.og.htm">/Og</A></TD>
<TD width=59%>Uses global optimizations</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.oi.htm">/Oi</A></TD>
<TD width=59%>Generates intrinsic functions</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.op.htm">/Op</A></TD>
<TD width=59%>Improves floating-point consistency</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.os.htm">/Os</A></TD>
<TD width=59%>Favors small code </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.ot.htm">/Ot</A></TD>
<TD width=59%>Favors fast code </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.oa.2c_2f.ow.htm">/Ow</A></TD>
<TD width=59%>Assumes aliasing across function calls</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.ox.htm">/Ox</A></TD>
<TD width=59%>Uses maximum optimization (/Ob1gity /Gs)</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.oy.htm">/Oy</A></TD>
<TD width=59%>Omits frame pointer</TD>
</TR>
</TABLE><BR>

<H2>Code Generation:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.eh.htm">/EH</A>{s|a}[c][-]</TD>
<TD width=59%>Specifies the model of exception handling</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.g.htm">/G3</A></TD>
<TD width=59%>Optimizes code to favor the 386 processor. Phased out in Visual C++ 5.0, the compiler will ignore this option</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.g.htm">/G4</A></TD>
<TD width=59%>Optimizes code to favor the 486 processor. Phased out in Visual C++ 5.0, the compiler will ignore this option</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.g.htm">/G5</A></TD>
<TD width=59%>Optimizes code to favor the Pentium</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.g.htm">/G6</A></TD>
<TD width=59%>Optimizes code to favor the Pentium Pro</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.ga.htm">/GA</A></TD>
<TD width=59%>Optimizes code for Windows application</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.g.htm">/GB</A></TD>
<TD width=59%>Optimizes code to favor the Pentium processor. Blends optimizations for the 80386 (/G3), 80486 (/G4), Pentium (/G5), and Pentium Pro (/G6) options.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gd.2c_2f.gr.2c_2f.gz.htm">/Gd</A></TD>
<TD width=59%>Uses the __<B>cdecl</B> calling convention</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.ge.htm">/Ge</A></TD>
<TD width=59%>Activates stack probes </TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gf.htm">/GF</A><BR>
<A HREF="_core_.2f.gf.htm">/Gf</A></TD>
<TD width=59%>Enable string pooling</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gh.htm">/Gh</A></TD>
<TD width=59%>Calls hook function, __<B>penter</B></TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gi.htm">/Gi</A></TD>
<TD width=59%>Enables incremental compilation</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gm_minimal.htm">/Gm</A></TD>
<TD width=59%>Enables minimal rebuild</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gr_option.htm">/GR</A></TD>
<TD width=59%>Enables run-time type information (RTTI)</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gd.2c_2f.gr.2c_2f.gz.htm">/Gr</A></TD>
<TD width=59%>Uses the __<B>fastcall</B> calling convention</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gs.htm">/Gs</A><I>size</I></TD>
<TD width=59%>Controls stack probes</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gt.htm">/GT</A></TD>
<TD width=59%>Supports fiber safety for data allocated using static thread-local storage</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gx.htm">/GX</A>[–]</TD>
<TD width=59%>Enables synchronous exception handling</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gy.htm">/Gy</A></TD>
<TD width=59%>Enables function-level linking</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.gd.2c_2f.gr.2c_2f.gz.htm">/Gz</A></TD>
<TD width=59%>Uses the __<B>stdcall</B> calling convention</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MD</A></TD>
<TD width=59%>Creates a multithreaded DLL, using MSVCRT.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MDd</A></TD>
<TD width=59%>Creates a debug multithreaded DLL, using MSVCRTD.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/ML</A></TD>
<TD width=59%>Creates a single-threaded executable file, using LIBC.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MLd</A></TD>
<TD width=59%>Creates a debug single-threaded executable file, using LIBCD.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MT</A></TD>
<TD width=59%>Creates a multithreaded executable file, using LIBCMT.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MTd</A></TD>
<TD width=59%>Creates a debug multithreaded executable file, using LIBCMTD.LIB</TD>
</TR>
</TABLE><BR>

<H2>Output Files:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fa.htm">/FA</A>[<I>c</I>|<I>s</I>]<BR>
<A HREF="_core_.2f.fa.htm">/Fa</A></TD>
<TD width=59%>Creates a listing file<BR>
Sets listing file name</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fd.htm">/Fd</A><I>filename</I></TD>
<TD width=59%>Renames program database file</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fd1.htm">/FD</A></TD>
<TD width=59%>Generate file dependencies</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fe.htm">/Fe</A><I>filename</I></TD>
<TD width=59%>Renames the executable file</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fm.htm">/Fm</A>[<I>filename</I>]</TD>
<TD width=59%>Creates a map file</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fo.htm">/Fo</A><I>filename</I></TD>
<TD width=59%>Creates an object file</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fp.htm">/Fp</A><I>filename</I></TD>
<TD width=59%>Specifies a precompiled header file name</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fr.2c_2f.fr.htm">/FR</A>[<I>filename</I>]<BR>
<A HREF="_core_.2f.fr.2c_2f.fr.htm">/Fr</A>[<I>filename</I>]</TD>
<TD width=59%>Generate browser files</TD>
</TR>
</TABLE><BR>

<H2>Debugging:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=41%><A HREF="vcrefqlf.htm">/Qlf</A></TD>
<TD width=59%>Generates additional debugging information for kernal-mode device drivers.</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="vcrefgz(catchrelease-builderrorsindebugbuild).htm">/GZ</A></TD>
<TD width=59%>Catch release-build errors in debug build</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.yd.htm">/Yd</A></TD>
<TD width=59%>Places complete debugging information in all object files</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.z7.2c_2f.zd.2c_2f.zi.htm">/Z7</A></TD>
<TD width=59%>Generates C 7.0–compatible debugging information</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.z7.2c_2f.zd.2c_2f.zi.htm">/Zd</A></TD>
<TD width=59%>Generates line numbers</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.z7.2c_2f.zd.2c_2f.zi.htm">/Zi</A></TD>
<TD width=59%>Generates complete debugging information</TD>
</TR>
</TABLE><BR>

<H2>Preprocessor:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.c_uc.htm">/C</A></TD>
<TD width=59%>Preserves comments during preprocessing</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.d.htm">/D</A><I>name</I>[= | <B># </B>[{<I>string</I> | <I>number</I>}] ]</TD>
<TD width=59%>Defines constants and macros</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.e.htm">/E</A></TD>
<TD width=59%>Copies preprocessor output to standard output</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.ep.htm">/EP</A></TD>
<TD width=59%>Copies preprocessor output to standard output</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.fi.htm">/Fl</A><I>filename</I></TD>
<TD width=59%>Preprocesses the specified include file</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.i.htm">/I</A><I>directory</I></TD>
<TD width=59%>Searches a directory for include files</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.p.htm">/P</A></TD>
<TD width=59%>Writes preprocessor output to a file</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.u.2c_2f.u.htm">/U</A><I>symbol</I></TD>
<TD width=59%>Removes a predefined macro</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.u.2c_2f.u.htm">/u</A></TD>
<TD width=59%>Removes all predefined macros</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.x.htm">/X</A></TD>
<TD width=59%>Ignores the standard include directory</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.z7.2c_2f.zd.2c_2f.zi.htm">/ZI</A></TD>
<TD width=59%>Includes debug information in a program database compatible with Edit and Continue.</TD>
</TR>
</TABLE><BR>

<H2>Language:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.vd.htm">/vd</A>{0|1}</TD>
<TD width=59%>Suppresses or enables hidden vtordisp class members</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.vmb.2c_2f.vmg.htm">/vmb</A></TD>
<TD width=59%>Uses best base for pointers to members</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.vmb.2c_2f.vmg.htm">/vmg</A></TD>
<TD width=59%>Uses full generality for pointers to members</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.vmm.2c_2f.vms.2c_2f.vmv.htm">/vmm</A></TD>
<TD width=59%>Declares multiple inheritance</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.vmm.2c_2f.vms.2c_2f.vmv.htm">/vms</A></TD>
<TD width=59%>Declares single inheritance</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.vmm.2c_2f.vms.2c_2f.vmv.htm">/vmv</A></TD>
<TD width=59%>Declares virtual inheritance</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.za.2c_2f.ze.htm">/Za</A></TD>
<TD width=59%>Disables language extensions</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.za.2c_2f.ze.htm">/Ze</A></TD>
<TD width=59%>Enables language extensions</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.zg.htm">/Zg</A></TD>
<TD width=59%>Generates function prototypes</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.zl.htm">/Zl</A></TD>
<TD width=59%>Removes default library name from .OBJ file</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.zp.htm">/Zp</A><I>n</I></TD>
<TD width=59%>Packs structure members</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.zs.htm">/Zs</A></TD>
<TD width=59%>Checks syntax only</TD>
</TR>
</TABLE><BR>

<H2>Linking:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.f.htm">/F</A><I>number</I></TD>
<TD width=59%>Sets stack size</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/LD</A></TD>
<TD width=59%>Creates a dynamic-link library</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/LDd</A></TD>
<TD width=59%>Creates a debug dynamic-link library</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.link.htm">/link</A> <I>option</I></TD>
<TD width=59%>Passes the specified option to LINK</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MD</A></TD>
<TD width=59%>Compiles to create a multithreaded DLL, using MSVCRT.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MDd</A></TD>
<TD width=59%>Compiles to create a debug multithreaded DLL, using MSVCRTD.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/ML</A></TD>
<TD width=59%>Compiles to create a single-threaded executable file, using LIBC.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MLd</A></TD>
<TD width=59%>Compiles to create a debug single-threaded executable file, using LIBCD.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MT</A></TD>
<TD width=59%>Compiles to create a multithreaded executable file, using LIBCMT.LIB</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.md.2c_2f.ml.2c_2f.mt.2c_2f.ld.htm">/MTd</A></TD>
<TD width=59%>Compiles to create a debug multithreaded executable file, using LIBCMTD.LIB</TD>
</TR>
</TABLE><BR>

<H2>Precompiled Header Files:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.yc.htm">/Yc</A>[<I>filename</I>]</TD>
<TD width=59%>Creates a precompiled header file</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.yd.htm">/Yd</A></TD>
<TD width=59%>Places complete debugging information in all object files</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.yu.htm">/Yu</A>[<I>filename</I>]</TD>
<TD width=59%>Uses a precompiled header file during build</TD>
</TR>

<TR VALIGN="top">
<TD width=41%><A HREF="_core_.2f.yx.htm">/YX</A></TD>
<TD width=59%>Automates precompiled header </TD>
</TR>
</TABLE><BR>

<H2>Miscellaneous:</H2>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.c_lc.htm">/c</A></TD>
<TD width=50%>Compiles without linking</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.h.htm">/H</A><I>number</I></TD>
<TD width=50%>Restricts the length of external (public) names</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.help.htm">/HELP</A></TD>
<TD width=50%>Lists the compiler options</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.j.htm">/J</A></TD>
<TD width=50%>Changes the default <B>char</B> type</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.nologo_compiler.htm">/nologo</A></TD>
<TD width=50%>Suppresses display of sign-on banner</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.tc.2c_2f.tp.htm">/Tc</A><I>filename</I><BR>
<A HREF="_core_.2f.tc.2c_2f.tp.htm">/TC</A></TD>
<TD width=50%>Specifies a C source file</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.tc.2c_2f.tp.htm">/Tp</A><I>filename</I><BR>
<A HREF="_core_.2f.tc.2c_2f.tp.htm">/TP</A></TD>
<TD width=50%>Specifies a C++ source file</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.v.htm">/V</A></TD>
<TD width=50%>Sets the version string</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.w.2c_2f.w.htm">/W</A><I>level</I> <BR>
<A HREF="_core_.2f.w.2c_2f.w.htm">/w</A></TD>
<TD width=50%>Sets warning level</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.zm.htm">/Zm</A><I>number</I></TD>
<TD width=50%>Sets the compiler's memory allocation limit</TD>
</TR>

<TR VALIGN="top">
<TD width=50%><A HREF="_core_.2f.zn.htm">/Zn</A></TD>
<TD width=50%>Turns off SBRPACK for .SBR files</TD>
</TR>
</TABLE><BR>
</font>
</BODY>
</HTML>
