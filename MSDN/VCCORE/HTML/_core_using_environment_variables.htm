<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Environment Variables</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_using_environment_variables"></A>Using Environment Variables</H1>

<P>Environment variables are the variables set by the operating system; they allow for specifying a directory to find project files or copy output files. How environment variables are set differs between Windows 95 and Windows NT. </P>

<P>Environment variables are used in the Project Settings dialog box, especially on these tabs : Custom Build Rules, C/C++, Link, and Resources. </P>

<P class=label><B>To set environment variables with Windows NT</B>

<OL>
	<LI>On the <B>Start</B> menu, point to <B>Settings</B>, then click <B>Control Panel</B>. <BR><BR></LI>

	<LI>In the Control Panel, double click <B>System</B>. <BR><BR></LI>

	<LI>In the <B>System Properties</B> dialog box, click the <B>Environment</B> tab, and specify your environment variable setting, using the <B>User Variables for</B>, <B>Variable</B>, and <B>Value</B> boxes. <BR><BR></LI>

	<LI>Exit the development environment and restart it for the changed environment variable to take effect. </LI>
</OL>

<P class=label><B>To set environment variables with Windows 95</B>

<OL>
	<LI>Add the environment variable to the autoexec.bat file. <BR><BR></LI>

	<LI>Restart Windows 95 for the change to take effect. 
<P class=atl>&nbsp;</p></LI>
</OL>

<H2>Example</H2>

<P>Following is an example of using environment variables in a multi-user situation. </P>

<P>Take the project “BldSys.exe,” which uses a library called Mylib.lib. Each user places the Mylib library and include files in a different directory or drive. </P>

<P>To solve this problem, define the environment variable <CODE>MYLIB</CODE>. </P>

<P>User 1 sets <CODE>MYLIB</CODE> to: </P>

<PRE><CODE>MYLIB = c:\mylib</CODE></PRE>

<P>User 2 sets <CODE>MYLIB</CODE> to: </P>

<PRE><CODE>MYLIB = d:\dev\mylib
</CODE></PRE>

<P>In the <B>Project Settings</B> dialog box (<B>Project</B> menu), click the <B>C/C++</B> tab, then click <B>Preprocessor</B> in the <B>Categories</B> list. In the <B>Additional include directories</B> box, type <B>$(MYLIB)\include</B>. </P>

<P>On User 1’s machine, this setting resolves to: </P>

<PRE><CODE>C:\mylib\include</CODE></PRE>

<P>On User 2’s machine, this setting resolves to: </P>

<PRE><CODE>D:\dev\mylib\include</CODE></PRE>

<P class=indent><B><B>Warning</B></B>&nbsp;&nbsp;&nbsp;Although the Project Settings dialog box supports environment variables, it is not recommended that environment variables be used except in the Additional include directories box, and in the way suggested. Do not use environment variables to throw switches that change the name or location of output files. </P>

<P>Environment variables are also useful for custom build rules. For example, you can copy output files to a binary directory that could be in any arbitrary location on the user’s machine. </P>

<P>For example, suppose you have a setting you want to specify such as <CODE>BIN=C:\binnt</CODE> In the <B>Project Settings</B> dialog box, click the <B>Custom Build</B> tab, then click the first available line in the <B>Build Commands</B> box and type the following: </P>

<PRE><CODE>copy $(TargetName)$(BIN)$(TargetName)</CODE></PRE>

<P>Then, in the <B>Output Files</B> box, add:</P>

<PRE><CODE>$(BIN)$(TargetName)</CODE></PRE>
</font>
</BODY>
</HTML>
