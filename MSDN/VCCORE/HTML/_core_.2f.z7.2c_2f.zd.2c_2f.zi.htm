<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>/Z7, /Zd, /Zi, /ZI   (Debug Info)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_.2f.z7.2c_2f.zd.2c_2f.zi"></A>/Z7, /Zd, /Zi, /ZI&nbsp;&nbsp;&nbsp;(Debug Info)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_overviews.3a_.compiling_and_linking.htm">Overview</A>  |&nbsp; <A HREF="_core_set_compiler_options.htm">How Do I</A>  |&nbsp; <A HREF="_core_compiler_reference.htm">Compiler Options</A></P>

<P>The Debug Info options select the type of debugging information created for your program and whether this information is kept in object (.OBJ) files or in a program database (PDB).</P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Command Line</B></TD>
<TD class=label width=21%><B>Project Settings</B></TD>
<TD class=label width=62%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>None of these options</TD>
<TD width=21%>None</TD>
<TD width=62%>Produces no debugging information, so compilation is faster. </TD>
</TR>

<TR VALIGN="top">
<TD width=17%>/Zd</TD>
<TD width=21%>Line Numbers Only</TD>
<TD width=62%>Produces an .OBJ file or executable (.EXE) file containing only global and external symbol and line-number information (no symbolic debugging information). Use this option if you want to reduce the size of the .EXE file, or if you don’t want to use the debugger’s expression evaluator (requires symbolic information). </TD>
</TR>

<TR VALIGN="top">
<TD width=17%>/Z7</TD>
<TD width=21%>C 7.0- Compatible</TD>
<TD width=62%>Produces an .OBJ file and an .EXE file containing line numbers and full symbolic debugging information for use with the debugger. The symbolic debugging information includes the names and types of variables, as well as functions and line numbers. </TD>
</TR>

<TR VALIGN="top">
<TD width=17%>/Zi</TD>
<TD width=21%>Program Database</TD>
<TD width=62%>Produces a program database (PDB) that contains type information and symbolic debugging information for use with the debugger. The symbolic debugging information includes the names and types of variables, as well as functions and line numbers. </TD>
</TR>

<TR VALIGN="top">
<TD width=17%>/ZI</TD>
<TD width=21%>Program Database for "Edit &amp; Continue"</TD>
<TD width=62%>Produces a program database, as described above, in a format that supports the Edit and Continue feature. If you want to use Edit and Continue debugging, you must use this option. Use of the /ZI switch will disable any <CODE>#pragma optimize</CODE> statements in your code.</TD>
</TR>
</TABLE><BR>

<P>To find these options in the development environment, click <B>Settings</B> on the <B>Project</B> menu. Then click the <B>C/C++</B> tab, and click <B>General </B>in the <B>Category </B>box. </P>

<P>The compiler names the program database <I>project</I>.PDB. If you compile a file without a project, the compiler creates a database named VC50.PDB. The compiler embeds the name of the PDB in each .OBJ file created using this option, pointing the debugger to the location of symbolic and line-number information. When you use this option, your .OBJ files will be smaller, because debugging information is stored in the .PDB file rather than in .OBJ files.</P>

<P>If you create a library from objects that were compiled using this option, the associated .PDB file must be available when the library is linked to a program. Thus, if you distribute the library, you must distribute the PDB.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;To create a library that contains debugging information without using .PDB files, you must select the compiler’s C 7.0-Compatible (/Z7) option and clear the linker’s Use Program Database (/PDB:NONE) option. If you use the precompiled headers options, debugging information for both the precompiled header and the rest of the source code is placed in the PDB. The /Yd option is ignored when the Program Database option is specified.</P>
</font>
</BODY>
</HTML>
