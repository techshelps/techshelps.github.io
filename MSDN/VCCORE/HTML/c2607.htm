<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Error C2607</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c2607"></A><SUP></SUP>Compiler Error C2607</H1>

<P class=dt><B>'initializing' : cannot implicitly convert a 'type1' to a 'type2' that is not const</B></P>

<P>In C++, you create a reference to another object by initializing the reference using the address-of operator (&amp;). Creating a reference object allows you to modify the original object by changing the reference object. It is similar to modifying a variable in C through a pointer to that variable, but the notation is cleaner because you do not need to dereference the pointer to access the variable.</P>

<P>If you try to create a reference (“initializing a reference”) to an object of another type, the compiler will issue error C2607. For example, if you create an <B>int</B> reference to a <B>float</B> variable the compiler will issue this error unless the <B>float</B> variable is const. Otherwise, every time you modified the <B>int</B> variable, the compiler would have to supply a conversion to the <B>float</B> variable; and every time you modified the <B>float</B> variable, the compiler would also have to supply a conversion to the <B>int</B> variable.</P>

<P>The reference to <I>type2</I> must be one of the following:

<UL type=disc>
	<LI>An l-value of type <I>type2</I><BR><BR></LI>

	<LI>A type derived from <I>type2</I> for which <I>type2</I> is an accessible base</LI>
</UL>

<P>The following is an example of this error:</P>

<PRE><CODE>float f;
int&amp; ri2 = f; // error, f is not an int l-value 
</CODE></PRE>
</font>
</BODY>
</HTML>
