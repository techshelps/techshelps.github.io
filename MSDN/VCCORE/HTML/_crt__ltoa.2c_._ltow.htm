<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_ltoa, _ltow</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__ltoa.2c_._ltow"></A><SUP></SUP>_ltoa, _ltow</H1>

<P>Convert a long integer to a string.</P>

<P><B>char</B> <B>*_ltoa(</B> <B>long</B> <I>value</I><B>,</B> <B>char</B> <B>*</B><I>string</I><B>,</B> <B>int</B> <I>radix</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*_ltow(</B> <B>long</B> <I>value</I><B>,</B> <B>wchar_t</B> <B>*</B><I>string</I><B>,</B> <B>int</B> <I>radix</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=15%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=58%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>_ltoa</B></TD>
<TD width=27%>&lt;stdlib.h&gt;</TD>
<TD width=58%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=15%><B>_ltow</B></TD>
<TD width=27%>&lt;stdlib.h&gt;</TD>
<TD width=58%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns a pointer to <I>string</I>. There is no error return.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>value</I></P>

<P class=indent>Number to be converted</P>

<P class=dt><I>string</I></P>

<P class=indent>String result</P>

<P class=dt><I>radix</I></P>

<P class=indent>Base of <I>value</I></P>

<P class=label><B>Remarks</B></P>

<P>The <B>_ltoa</B> function converts the digits of <I>value</I> to a null-terminated character string and stores the result (up to 33 bytes) in <I>string</I>. The <I>radix</I> argument specifies the base of <I>value</I>, which must be in the range 2 – 36. If <I>radix</I> equals 10 and <I>value</I> is negative, the first character of the stored string is the minus sign (–). <B>_ltow</B> is a wide-character version of <B>_ltoa</B>; the second argument and return value of <B>_ltow</B> are wide-character strings. Each of these functions is Microsoft-specific.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=14%><B>TCHAR.H Routine </B></TD>
<TD class=label width=28%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=25%><B>_MBCS Defined</B></TD>
<TD class=label width=33%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=14%>_ltot</TD>
<TD width=28%>_ltoa</TD>
<TD width=25%>_ltoa</TD>
<TD width=33%>_ltow</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* ITOA.C: This program converts integers of various
 * sizes to strings in various radixes.
 */

#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   char buffer[20];
   int  i = 3445;
   long l = -344115L;
   unsigned long ul = 1234567890UL;

   _itoa( i, buffer, 10 );
   printf( "String of integer %d (radix 10): %s\n", i, buffer );
   _itoa( i, buffer, 16 );
   printf( "String of integer %d (radix 16): 0x%s\n", i, buffer );
   _itoa( i, buffer, 2  );
   printf( "String of integer %d (radix 2): %s\n", i, buffer );

   _ltoa( l, buffer, 16 );
   printf( "String of long int %ld (radix 16): 0x%s\n", l, 
                                                    buffer );

   _ultoa( ul, buffer, 16 );
   printf( "String of unsigned long %lu (radix 16): 0x%s\n", ul,
                                                    buffer );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>String of integer 3445 (radix 10): 3445
String of integer 3445 (radix 16): 0xd75
String of integer 3445 (radix 2): 110101110101
String of long int -344115 (radix 16): 0xfffabfcd
String of unsigned long 1234567890 (radix 16): 0x499602d2

</CODE></PRE>

<P><A HREF="_crt_data_conversion.htm">Data Conversion Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__itoa.2c_._i64toa.2c_._ui64toa.2c_._itow.2c_._i64tow.2c_._ui64tow.htm">_itoa</A>, <A HREF="_crt__ultoa.2c_._ultow.htm">_ultoa</A></P>
</font>
</BODY>
</HTML>
