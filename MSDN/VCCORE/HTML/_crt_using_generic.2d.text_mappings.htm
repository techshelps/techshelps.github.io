<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Generic-Text Mappings</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_using_generic.2d.text_mappings"></A><SUP></SUP>Using Generic-Text Mappings</H1>

<P><B>Microsoft Specific —&gt;</B></P>

<P>To simplify code development for various international markets, the Microsoft run-time library provides Microsoft-specific “generic-text” mappings for many data types, routines, and other objects. These mappings are defined in TCHAR.H. You can use these name mappings to write generic code that can be compiled for any of the three kinds of character sets: ASCII (SBCS), MBCS, or Unicode, depending on a manifest constant you define using a <B>#define</B> statement. Generic-text mappings are Microsoft extensions that are not ANSI compatible.</P>

<P class=label><B><A NAME="_crt_preprocessor_directives_for_generic.2d.text_mappings"></A>Preprocessor Directives for Generic-Text Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=28%><B>#define</B></TD>
<TD class=label width=32%><B>Compiled Version</B></TD>
<TD class=label width=40%><B>Example </B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%><B>_UNICODE</B></TD>
<TD width=32%>Unicode (wide-character)</TD>
<TD width=40%><B>_tcsrev</B> maps to <B>_wcsrev</B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%><B>_MBCS</B></TD>
<TD width=32%>Multibyte-character</TD>
<TD width=40%><B>_tcsrev</B> maps to <B>_mbsrev</B></TD>
</TR>

<TR VALIGN="top">
<TD width=28%>None (the default: neither <B>_UNICODE</B> nor <B>_MBCS</B> defined)</TD>
<TD width=32%>SBCS (ASCII)</TD>
<TD width=40%><B>_tcsrev</B> maps to <B>strrev</B></TD>
</TR>
</TABLE><BR>

<P>For example, the generic-text function <B>_tcsrev</B>, defined in TCHAR.H, maps to <B>mbsrev</B> if <B>MBCS</B> has been defined in your program, or to <B>_wcsrev</B> if <B>_UNICODE</B> has been defined. Otherwise <B>_tcsrev</B> maps to <B>strrev</B>. </P>

<P>The generic-text data type <B>_TCHAR</B>, also defined in TCHAR.H, maps to type <B>char</B> if <B>_MBCS</B> is defined, to type <B>wchar_t</B> if <B>_UNICODE</B> is defined, and to type <B>char</B> if neither constant is defined. Other data type mappings are provided in TCHAR.H for programming convenience, but <B>_TCHAR</B> is the type that is most useful. </P>

<P class=label><B>Generic-Text Data Type Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=22%><B>Generic-Text Data Type Name</B></TD>
<TD class=label width=30%><B>SBCS (_UNICODE, _MBCS Not Defined)</B></TD>
<TD class=label width=25%><B><BR>
_MBCS Defined</B></TD>
<TD class=label width=23%><B><BR>
_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>_TCHAR</B></TD>
<TD width=30%><B>char</B></TD>
<TD width=25%><B>char</B></TD>
<TD width=23%><B>wchar_t</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>_TINT</B></TD>
<TD width=30%><B>int</B></TD>
<TD width=25%><B>int</B></TD>
<TD width=23%><B>wint_t</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>_TSCHAR</B></TD>
<TD width=30%><B>signed char</B></TD>
<TD width=25%><B>signed char</B></TD>
<TD width=23%><B>wchar_t</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>_TUCHAR</B></TD>
<TD width=30%><B>unsigned char</B></TD>
<TD width=25%><B>unsigned char</B></TD>
<TD width=23%><B>wchar_t</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>_TXCHAR</B></TD>
<TD width=30%><B>char</B></TD>
<TD width=25%><B>unsigned char</B></TD>
<TD width=23%><B>wchar_t</B></TD>
</TR>

<TR VALIGN="top">
<TD width=22%><B>_T</B> or <B>_TEXT</B></TD>
<TD width=30%>No effect (removed by preprocessor)</TD>
<TD width=25%>No effect (removed by preprocessor)</TD>
<TD width=23%><B>L</B> (converts following character or string to its Unicode counterpart)</TD>
</TR>
</TABLE><BR>

<P>For a complete list of generic-text mappings of routines, variables, and other objects, see Appendix B, <A HREF="_crt_generic.2d.text_mappings.htm">Generic-Text Mappings</A>.</P>

<P>The following code fragments illustrate the use of <B>_TCHAR</B> and <B>_tcsrev</B> for mapping to the MBCS, Unicode, and SBCS models.</P>

<PRE><CODE>_TCHAR *RetVal, *szString;
RetVal = _tcsrev(szString);
</CODE></PRE>

<P>If <B>MBCS</B> has been defined, the preprocessor maps the preceding fragment to the following code:</P>

<PRE><CODE>char *RetVal, *szString;
RetVal = _mbsrev(szString);
</CODE></PRE>

<P>If <B>_UNICODE</B> has been defined, the preprocessor maps the same fragment to the following code:</P>

<PRE><CODE>wchar_t *RetVal, *szString;
RetVal = _wcsrev(szString);
</CODE></PRE>

<P>If neither <B>_MBCS</B> nor <B>_UNICODE</B> has been defined, the preprocessor maps the fragment to single-byte ASCII code, as follows:</P>

<PRE><CODE>char *RetVal, *szString;
RetVal = strrev(szString);
</CODE></PRE>

<P>Thus you can write, maintain, and compile a single source code file to run with routines that are specific to any of the three kinds of character sets. </P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_generic.2d.text_mappings.htm">Generic-text mappings</A>, <A HREF="_crt_data_type_mappings.htm">Data type mappings</A>, <A HREF="_crt_constant_and_global_variable_mappings.htm">Constants and global variable mappings</A>, <A HREF="_crt_routine_mappings.htm">Routine mappings</A>, <A HREF="_crt_a_sample_generic.2d.text_program.htm">A sample generic-text propgram</A></P>

<P><B>END Microsoft Specific</B></P>
</font>
</BODY>
</HTML>
