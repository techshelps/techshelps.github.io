<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing Instances</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_initializing_instances"></A><SUP></SUP>Initializing Instances</H1>

<P>The <I>hPrevInstance</I> parameter is always passed NULL in Win32. This causes each instance of an application to act as though it were the only instance running. The application must register the window class, and it cannot access data used by other instances, except through standard interprocess communication techniques such as shared memory or DDE. Calls to <B>GetInstanceData</B> must be replaced with these techniques.</P>

<P>Before registering a window class, source code for Windows 3.<I>x</I> normally tests <I>hPrevInstance</I> to see whether another instance of the application is already running. This code needs no change, because under Win32, it will always register the window class.</P>

<P>Some applications must know whether other instances are running. Sometimes this is because data sharing is required. More frequently, it is because only one instance of the application should run at a time. Examples of this latter case include Control Panel and NT's Task Manager.</P>

<P>Applications cannot use <I>hPrevInstance</I> to test for previous instances under Win32. An alternative method must be used, such as creating a unique named pipe, creating or testing for a named semaphore, broadcasting a unique message, or calling <B>FindWindow</B>.</P>
</font>
</BODY>
</HTML>
