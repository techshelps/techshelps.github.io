<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ODBC: The ODBC Cursor Library</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Enroll tutorial">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CTime">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_Macros.2c_.Global_Functions.2c_.and_Global_Variables">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDatabase.3a3a.OpenEx">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDatabase.3a3a.Open">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_odbc.3a_.the_odbc_cursor_library"></A>ODBC: The ODBC Cursor Library</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_databases.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_odbc_database_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_databases.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_odbc_database_sample_list.htm">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_odbc_driver_list.htm">ODBC Driver List</A></P>

<P>This article describes the ODBC Cursor Library and explains how to use it. Topics include:

<UL type=disc>
	<LI><A HREF="#_core_the_cursor_library_and_level_1_odbc_drivers">The Cursor Library and Level 1 ODBC drivers</A><BR><BR></LI>

	<LI><A HREF="#_core_positioned_updates_and_timestamp_columns">Positioned updates and timestamp columns</A><BR><BR></LI>

	<LI><A HREF="#_core_using_the_cursor_library">Using the Cursor Library</A></LI>
</UL>

<P>The ODBC Cursor Library is a dynamic-link library (DLL) that resides between the ODBC Driver Manager and the driver. In ODBC terms, a driver maintains a “cursor” to keep track of its position in the recordset. The cursor marks the position in the recordset to which you have already scrolled — the current record.</P>



<H2><A NAME="_core_the_cursor_library_and_level_1_odbc_drivers"></A>The Cursor Library and Level 1 ODBC Drivers</H2>

<P>The ODBC Cursor Library gives Level 1 drivers the following new capabilities:

<UL type=disc>
	<LI>Forward and backward scrolling. Level 2 drivers don’t need the cursor library because they are already scrollable.<BR><BR></LI>

	<LI>Support for snapshots. The cursor library manages a buffer containing the snapshot’s records. This buffer reflects your program’s deletions and edits to records but not the additions, deletions, or edits of other users, so the snapshot is only as current as the cursor library’s buffer. The buffer also does not reflect your own additions until you call <B>Requery</B>. Dynasets do not use the cursor library.</LI>
</UL>

<P>The cursor library will give you snapshots (static cursors) even if they are not normally supported by your driver. If your driver already supports static cursors, you don’t need to load the cursor library to get snapshot support. If you do use the cursor library, you can use only snapshots and forward-only recordsets. If your driver supports dynasets (KEYSET_DRIVEN cursors) and you want to use them, you must not use the cursor library. If you want to use both snapshots and dynasets, you must base them on two different <B>CDatabase</B> objects (two different connections) unless your driver supports both.</P>



<H2><A NAME="_core_positioned_updates_and_timestamp_columns"></A>Positioned Updates and Timestamp Columns</H2>

<P class=indent><B><B>Note&nbsp;&nbsp;&nbsp;</B></B>ODBC data sources are accessible through the MFC ODBC classes, as described in this article, or through the MFC Data Access Object (DAO) classes. For information about the DAO classes, see the article <A HREF="_core_dao_and_mfc.htm">DAO and MFC</A>.</P>

<P class=indent>If your ODBC driver supports <B>SQLSetPos</B>, which MFC uses if available, this topic does not apply to you.</P>

<P>Most Level 1 drivers do not support positioned updates. Such drivers rely on the cursor library to emulate the capabilities of Level 2 drivers in this regard. The cursor library emulates positioned update support by doing a searched update on the unchanging fields. </P>

<P>In some cases, a recordset may contain a timestamp column as one of those unchanging fields. Two issues arise in using MFC recordsets with tables that contain timestamp columns. </P>

<P>The first issue concerns updatable snapshots on tables with timestamp columns. If the table to which your snapshot is bound contains a timestamp column, you should call <B>Requery</B> after you call <B>Edit</B> and <B>Update</B>. If not, you may not be able to edit the same record again. When you call <B>Edit</B> and then <B>Update</B>, the record is written to the data source and the timestamp column is updated. If you don’t call <B>Requery</B>, the timestamp value for the record in your snapshot no longer matches the corresponding timestamp on the data source. When you try to update the record again, the data source may disallow the update because of the mismatch.</P>

<P>The second issue concerns limitations of class <A HREF="JavaScript:hhobj_3.Click()">CTime</A> when used with the <B>RFX_Date</B> function to transfer time and date information to or from a table. Processing the <B>CTime</B> object imposes some overhead in the form of extra intermediate processing during the data transfer. The date range of <B>CTime</B> objects may also be too limiting for some applications. A new version of the <B>RFX_Date</B> function takes an ODBC <B>TIMESTAMP_STRUCT</B> parameter instead of a <B>CTime</B> object. For more information, see <B>RFX_Date</B> in <A HREF="JavaScript:hhobj_4.Click()">Macros and Globals</A> in the <I>Class Library Reference</I>. </P>

<H2><A NAME="_core_using_the_cursor_library"></A>Using the Cursor Library</H2>

<P>When you connect to a data source — by calling <A HREF="JavaScript:hhobj_5.Click()">CDatabase::OpenEx</A> or <A HREF="JavaScript:hhobj_6.Click()">CDatabase::Open</A> — you can specify whether to use the cursor library for the data source. If you will be creating snapshots on that data source, specify the <B>CDatabase::useCursorLib</B> option in the <I>dwOptions</I> parameter to <B>OpenEx</B>, or specify <B>TRUE</B> for the <B>bUseCursorLib</B> parameter to <B>Open</B> (the default value is <B>TRUE</B>). If your ODBC driver supports dynasets and you want to open dynasets on the data source, do not use the cursor library (it masks some driver functionality needed for dynasets). In that case, do not specify <B>CDatabase::useCursorLib</B> in <B>OpenEx</B>, or specify <B>FALSE</B> for the <B>bUseCursorLib</B> parameter in <B>Open</B>.</P>
</font>
</BODY>
</HTML>
