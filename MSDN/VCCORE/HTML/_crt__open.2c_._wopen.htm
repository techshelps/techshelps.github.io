<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_open, _wopen</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__open.2c_._wopen"></A><SUP></SUP>_open, _wopen</H1>

<P>Open a file.</P>

<P><B>int</B> <B>_open(</B> <B>const</B> <B>char</B> <B>*</B><I>filename</I><B>,</B> <B>int</B> <I>oflag</I> [<B>,</B> <B>int</B> <I>pmode</I>] <B>);</B></P>

<P><B>int</B> <B>_wopen(</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>filename</I><B>,</B> <B>int</B> <I>oflag</I> [<B>,</B> <B>int</B> <I>pmode</I>] <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Routine</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=28%><B>Optional Headers</B></TD>
<TD class=label width=30%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_open</B></TD>
<TD width=26%>&lt;io.h&gt;</TD>
<TD width=28%>&lt;fcntl.h&gt;, &lt;sys/types.h&gt;, &lt;sys/stat.h&gt;</TD>
<TD width=30%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_wopen</B></TD>
<TD width=26%>&lt;io.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=28%>&lt;fcntl.h&gt;, &lt;sys/types.h&gt;, &lt;sys/stat.h&gt;</TD>
<TD width=30%>Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns a file handle for the opened file. A return value of –1 indicates an error, in which case <B>errno</B> is set to one of the following values:</P>

<P class=dt><B>EACCES</B></P>

<P class=indent>Tried to open read-only file for writing, or file’s sharing mode does not allow specified operations, or given path is directory</P>

<P class=dt><B>EEXIST</B></P>

<P class=indent><B>_O_CREAT</B> and <B>_O_EXCL</B> flags specified, but <I>filename</I> already exists</P>

<P class=dt><B>EINVAL</B></P>

<P class=indent>Invalid <I>oflag</I> or <I>pmode</I> argument </P>

<P class=dt><B>EMFILE</B></P>

<P class=indent>No more file handles available (too many open files)</P>

<P class=dt><B>ENOENT</B></P>

<P class=indent>File or path not found</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>filename</I></P>

<P class=indent>Filename</P>

<P class=dt><I>oflag</I></P>

<P class=indent>Type of operations allowed</P>

<P class=dt><I>pmode</I></P>

<P class=indent>Permission mode</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_open</B> function opens the file specified by <I>filename</I> and prepares the file for reading or writing, as specified by <I>oflag</I>. <B>_wopen</B> is a wide-character version of <B>_open</B>; the <I>filename</I> argument to <B>_wopen</B> is a wide-character string. <B>_wopen</B> and <B>_open</B> behave identically otherwise.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_topen</TD>
<TD width=29%>_open</TD>
<TD width=26%>_open</TD>
<TD width=28%>_wopen</TD>
</TR>
</TABLE><BR>

<P><I>oflag</I> is an integer expression formed from one or more of the following manifest constants or constant combinations defined in FCNTL.H:</P>

<P class=dt><B>_O_APPEND</B></P>

<P class=indent>Moves file pointer to end of file before every write operation.</P>

<P class=dt><B>_O_BINARY</B></P>

<P class=indent>Opens file in binary (untranslated) mode. (See <A HREF="_crt_fopen.2c_._wfopen.htm">fopen</A> for a description of binary mode.)</P>

<P class=dt><B>_O_CREAT</B></P>

<P class=indent>Creates and opens new file for writing. Has no effect if file specified by <I>filename</I> exists. <I>pmode</I> argument is required when <B>_O_CREAT</B> is specified.</P>

<P class=dt><B>_O_CREAT</B> | <B>_O_SHORT_LIVED</B></P>

<P class=indent>Create file as temporary and if possible do not flush to disk. <I>pmode</I> argument is required when <B>_O_CREAT</B> is specified.</P>

<P class=dt><B>_O_CREAT</B> | <B>_O_TEMPORARY</B></P>

<P class=indent>Create file as temporary; file is deleted when last file handle is closed. <I>pmode</I> argument is required when <B>_O_CREAT</B> is specified. </P>

<P class=dt><B>_O_CREAT</B> | <B>_O_EXCL</B></P>

<P class=indent>Returns error value if file specified by <I>filename</I> exists. Applies only when used with <B>_O_CREAT</B>.</P>

<P class=dt><B>_O_RANDOM</B></P>

<P class=indent>Specifies primarily random access from disk</P>

<P class=dt><B>_O_RDONLY</B></P>

<P class=indent>Opens file for reading only; cannot be specified with <B>_O_RDWR</B> or <B>_O_WRONLY</B>.</P>

<P class=dt><B>_O_RDWR</B></P>

<P class=indent>Opens file for both reading and writing; you cannot specify this flag with <B>_O_RDONLY</B> or <B>_O_WRONLY</B>.</P>

<P class=dt><B>_O_SEQUENTIAL</B></P>

<P class=indent>Specifies primarily sequential access from disk</P>

<P class=dt><B>_O_TEXT</B></P>

<P class=indent>Opens file in text (translated) mode. (For more information, see <A HREF="_crt_text_and_binary_mode_file_i.2f.o.htm">Text and Binary Mode File I/O</A> and <A HREF="_crt_fopen.2c_._wfopen.htm">fopen</A>.)</P>

<P class=dt><B>_O_TRUNC</B></P>

<P class=indent>Opens file and truncates it to zero length; file must have write permission. You cannot specify this flag with <B>_O_RDONLY</B>. <B>_O_TRUNC</B> used with <B>_O_CREAT</B> opens an existing file or creates a new file.</P>

<P class=indent><B><B>Warning</B></B>&nbsp;&nbsp;&nbsp;The <B>_O_TRUNC</B> flag destroys the contents of the specified file.</P>

<P class=dt><B>_O_WRONLY</B></P>

<P class=indent>Opens file for writing only; cannot be specified with <B>_O_RDONLY</B> or <B>_O_RDWR</B>.</P>

<P>To specify the file access mode, you must specify either <B>_O_RDONLY</B>, <B>_O_RDWR</B>, or <B>_O_WRONLY</B>. There is no default value for the access mode.</P>

<P>When two or more manifest constants are used to form the <I>oflag</I> argument, the constants are combined with the bitwise-OR operator ( <B>|</B> ). See <A HREF="_crt_text_and_binary_mode_file_i.2f.o.htm">Text and Binary Mode File I/O</A> for a discussion of binary and text modes. </P>

<P>The <I>pmode</I> argument is required only when <B>_O_CREAT</B> is specified. If the file already exists, <I>pmode</I> is ignored. Otherwise, <I>pmode</I> specifies the file permission settings, which are set when the new file is closed the first time. <B>_open</B> applies the current file-permission mask to <I>pmode</I> before setting the permissions (for more information, see <A HREF="_crt__umask.htm">_umask</A>). <I>pmode</I> is an integer expression containing one or both of the following manifest constants, defined in SYS\STAT.H: </P>

<P class=dt><B>_S_IREAD</B></P>

<P class=indent>Reading only permitted</P>

<P class=dt><B>_S_IWRITE</B></P>

<P class=indent>Writing permitted (effectively permits reading and writing)</P>

<P class=dt><B>_S_IREAD | _S_IWRITE</B></P>

<P class=indent>Reading and writing permitted</P>

<P>When both constants are given, they are joined with the bitwise-OR operator ( <B>|</B> ). In Windows NT, all files are readable, so write-only permission is not available; thus the modes <B>_S_IWRITE</B> and <B>_S_IREAD | _S_IWRITE</B> are equivalent.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* OPEN.C: This program uses _open to open a file
 * named OPEN.C for input and a file named OPEN.OUT
 * for output. The files are then closed.
 */

#include &lt;fcntl.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;io.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   int fh1, fh2;

   fh1 = _open( "OPEN.C", _O_RDONLY );
   if( fh1 == -1 )
      perror( "open failed on input file" );
   else
   {
      printf( "open succeeded on input file\n" );
      _close( fh1 );
   }

   fh2 = _open( "OPEN.OUT", _O_WRONLY | _O_CREAT, _S_IREAD | 
                            _S_IWRITE );
   if( fh2 == -1 )
      perror( "Open failed on output file" );
   else
   {
      printf( "Open succeeded on output file\n" );
      _close( fh2 );
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Open succeeded on input file
Open succeeded on output file

</CODE></PRE>

<P><A HREF="_crt_low.2d.level_i.2f.o.htm">Low-Level I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__chmod.2c_._wchmod.htm">_chmod</A>, <A HREF="_crt__close.htm">_close</A>, <A HREF="_crt__creat.2c_._wcreat.htm">_creat</A>, <A HREF="_crt__dup.2c_._dup2.htm">_dup</A>, <A HREF="_crt_fopen.2c_._wfopen.htm">fopen</A>, <A HREF="_crt__sopen.2c_._wsopen.htm">_sopen</A></P>
</font>
</BODY>
</HTML>
