<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_gcvt</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__gcvt"></A><SUP></SUP>_gcvt</H1>

<P>Converts a floating-point value to a string, which it stores in a buffer.</P>

<P><B>char</B> <B>*_gcvt(</B> <B>double</B> <I>value</I><B>,</B> <B>int</B> <I>digits</I><B>,</B> <B>char</B> <B>*</B><I>buffer</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=57%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_gcvt</B></TD>
<TD width=27%>&lt;stdlib.h&gt;</TD>
<TD width=57%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_gcvt</B> returns a pointer to the string of digits. There is no error return.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>value</I></P>

<P class=indent>Value to be converted</P>

<P class=dt><I>digits</I></P>

<P class=indent>Number of significant digits stored</P>

<P class=dt><I>buffer</I></P>

<P class=indent>Storage location for result</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_gcvt</B> function converts a floating-point <I>value</I> to a character string (which includes a decimal point and a possible sign byte) and stores the string in <I>buffer</I>. The <I>buffer</I> should be large enough to accommodate the converted value plus a terminating null character, which is appended automatically. If a buffer size of <I>digits</I> + 1 is used, the function overwrites the end of the buffer. This is because the converted string includes a decimal point and can contain sign and exponent information. There is no provision for overflow. <B>_gcvt</B> attempts to produce <I>digits</I> digits in decimal format. If it cannot, it produces <I>digits</I> digits in exponential format. Trailing zeros may be suppressed in the conversion.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* _GCVT.C: This program converts -3.1415e5
 * to its string representation.
 */

#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   char buffer[50];
   double source = -3.1415e5;
   _gcvt( source, 7, buffer );
   printf( "source: %f  buffer: '%s'\n", source, buffer );
   _gcvt( source, 7, buffer );
   printf( "source: %e  buffer: '%s'\n", source, buffer );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>source: -314150.000000  buffer: '-314150.'
source: -3.141500e+005  buffer: '-314150.'

</CODE></PRE>

<P><A HREF="_crt_data_conversion.htm">Data Conversion Routines</A>  |&nbsp; <A HREF="_crt_floating.2d.point_support.htm">Floating-Point Support Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_atof.2c_.atoi.2c_._atoi64.2c_.atol.htm">atof</A>, <A HREF="_crt__ecvt.htm">_ecvt</A>, <A HREF="_crt__fcvt.htm">_fcvt</A></P>
</font>
</BODY>
</HTML>
