<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sscanf, swscanf</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_sscanf.2c_.swscanf"></A><SUP></SUP>sscanf, swscanf</H1>

<P>Read formatted data from a string.</P>

<P><B>int</B> <B>sscanf(</B> <B>const</B> <B>char</B> <B>*</B><I>buffer</I><B>,</B> <B>const</B> <B>char</B> <B>*</B><I>format</I> [<B>,</B> <I>argument</I> ] ... <B>);</B></P>

<P><B>int</B> <B>swscanf(</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>buffer</I><B>,</B> <B>const</B> <B>wchar_t</B> <B>*</B><I>format</I> [<B>,</B> <I>argument</I> ] ... <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Routine</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=58%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>sscanf</B></TD>
<TD width=26%>&lt;stdio.h&gt;</TD>
<TD width=58%>ANSI, Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>swscanf</B></TD>
<TD width=26%>&lt;stdio.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=58%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns the number of fields successfully converted and assigned; the return value does not include fields that were read but not assigned. A return value of 0 indicates that no fields were assigned. The return value is <B>EOF</B> for an error or if the end of the string is reached before the first conversion.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>buffer</I></P>

<P class=indent>Stored data</P>

<P class=dt><I>format</I></P>

<P class=indent>Format-control string</P>

<P class=dt><I>argument</I></P>

<P class=indent>Optional arguments</P>

<P>For more information, see <A HREF="_crt_format_specification_fields_.2d_.scanf_and_wscanf_functions.htm">Format Specifications</A>.</P>

<P class=label><B>Remarks</B></P>

<P>The <B>sscanf</B> function reads data from <I>buffer</I> into the location given by each <I>argument</I>. Every <I>argument</I> must be a pointer to a variable with a type that corresponds to a type specifier in <I>format</I>. The <I>format</I> argument controls the interpretation of the input fields and has the same form and function as the <I>format</I> argument for the <B>scanf</B> function; see <A HREF="_crt_scanf.2c_.wscanf.htm">scanf</A> for a complete description of <I>format</I>. If copying takes place between strings that overlap, the behavior is undefined.</P>

<P><B>swscanf</B> is a wide-character version of <B>sscanf</B>; the arguments to <B>swscanf</B> are wide-character strings. <B>sscanf </B>does not handle multibyte hexadecimal characters. <B>swscanf</B> does not handle Unicode fullwidth hexadecimal or “compatibility zone” characters. Otherwise, <B>swscanf</B> and <B>sscanf</B> behave identically.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_stscanf</TD>
<TD width=29%>sscanf</TD>
<TD width=26%>sscanf</TD>
<TD width=28%>swscanf</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* SSCANF.C: This program uses sscanf to read data items
 * from a string named tokenstring, then displays them.
 */

#include &lt;stdio.h&gt;

void main( void )
{
   char  tokenstring[] = "15 12 14...";
   char  s[81];
   char  c;
   int   i;
   float fp;

   /* Input various data from tokenstring: */
   sscanf( tokenstring, "%s", s );
   sscanf( tokenstring, "%c", &amp;c );
   sscanf( tokenstring, "%d", &amp;i );
   sscanf( tokenstring, "%f", &amp;fp );

   /* Output the data read */
   printf( "String    = %s\n", s );
   printf( "Character = %c\n", c );
   printf( "Integer:  = %d\n", i );
   printf( "Real:     = %f\n", fp );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>String    = 15
Character = 1
Integer:  = 15
Real:     = 15.000000

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_fscanf.2c_.fwscanf.htm">fscanf</A>, <A HREF="_crt_scanf.2c_.wscanf.htm">scanf</A>, <A HREF="_crt_sprintf.2c_.swprintf.htm">sprintf</A>, <A HREF="_crt__snprintf.2c_._snwprintf.htm">_snprintf</A></P>
</font>
</BODY>
</HTML>
