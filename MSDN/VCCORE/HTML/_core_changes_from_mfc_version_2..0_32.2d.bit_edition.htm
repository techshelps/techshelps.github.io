<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changes from MFC Version 2.0 32-Bit Edition</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_changes_from_mfc_version_2..0_32.2d.bit_edition"></A>Changes from MFC Version 2.0 32-Bit Edition</H1>

<P>This article discusses changes in version 3.0 of the Microsoft Foundation Class Library for users of the 32-bit version of MFC version 2.0 (sometimes called MFC version 2.1), which is part of Visual C++ 1.0 32-Bit Edition. Changes include:

<UL type=disc>
	<LI>Full support for writing multithreaded applications.
<P class=tl>You can use MFC functionality in both the primary thread of execution and in secondary threads.</P></LI>

	<LI>Support for OLE.
<P class=tl>MFC OLE classes make it easier to write OLE servers and containers and to implement Automation (formerly OLE Automation) in your applications. See <A HREF="_core_ole_topics.htm">OLE Topics</A>. </P></LI>

	<LI>Support for data access with Open Database Connectivity (ODBC).
<P class=tl>MFC database classes help you manipulate data in databases for which you have the appropriate 32-bit ODBC driver. See <A HREF="_core_database_topics_.28.odbc.29.htm">Database Topics (ODBC)</A>.</P></LI>

	<LI>Support for MFC packaged in a shared DLL, called AFXDLL. 
<P class=tl>To use AFXDLL, a set of DLLs that contains the entire 32-bit Microsoft Foundation Class Library, use “/D_AFXDLL” in your compiler options and one of the “MFC30” DLLs in your linker options. </P>
<P class=tl>Using AFXDLL results in smaller executable files than statically linking the class library with your application. This is particularly useful if you have several applications that run at the same time; they can share the DLL.</P>
<P class=tl>AFXDLL is the default when you create an MFC application with AppWizard.</P></LI>

	<LI><B>WIN32_LEAN_AND_MEAN</B>.
<P class=tl>To improve build times and reduce the size of your application’s precompiled header, MFC defines the symbol <B>WIN32_LEAN_AND_MEAN</B>. This definition lists a group of less commonly used header files that MFC does not automatically include through including AFXWIN.H.</P>
<P class=tl>To see the list of header files specifically excluded from MFC builds, look at the definition of <B>WIN32_LEAN_AND_MEAN</B> in WINDOWS.H. If you need the definitions provided by any of those files, you must explicitly include the appropriate file yourself.</P>
<P class=tl><B>WIN32_LEAN_AND_MEAN</B> was not defined in MFC version 2.1, and all of the extra headers were included.</P></LI>
</UL>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_changes_from_mfc_versions_2..0_and_2..5.htm">Changes from MFC Versions 2.0 and 2.5</A>, <A HREF="_core_multithreading_with_c.2b2b_.and_mfc.htm">Multithreading with C++ and MFC</A>, <A HREF="_core_dll_topics.htm">DLL Topics</A>, <A HREF="_core_mfc_library_versions.htm">MFC Library Versions</A></P>
</font>
</BODY>
</HTML>
