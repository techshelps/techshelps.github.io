<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Line Counting</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_perf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_line_counting"></A>Line Counting</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_procedures_for_performance_tuning.htm">How Do I</A>  |&nbsp; <A HREF="_core_articles_that_tell_about_performance_tuning.htm">Details</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Profiling is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_2.Click()">Visual C++ Editions</A>.</P>

<P>The <B>Line Counting</B> option in the <A HREF="_core_run_the_profiler_from_the_development_environment.htm">Profile dialog box</A> records how many times each line was called (hit count). To start a line count profile, use a custom batch file that specifies the source module and the lines to profile. </P>

<P>Here is a sample of the output of a line counting profile run:</P>

<PRE><CODE>          Hit        
  Line    count   %   Source
-----------------------------------------------------
    1:                // test.c
    2:             
    3:                #include &lt;windows.h&gt;
    4:             
    5:                void WasteTime(HANDLE hInstance, HWND hWnd)
    6:     1     0.0  {
    7:                     LONG lCount, lX;
    8:                     HCURSOR hOldCursor;
    9:     1     0.0       hOldCursor = SetCursor(LoadCursor(NULL,
                                     IDC_WAIT));
   10:     1     0.0       for(lCount = 0; lCount &lt; 1000L;  lCount++)  {
   11:  1000    49.9               lX = 57L;
   12:  1000    49.9       }
   13:     1     0.0       SetCursor(hOldCursor);
   14:     1     0.0 }
</CODE></PRE>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;All included source lines are printed, even if they are not executed.</P>

<P>Line counting profiling is very slow because the profiler inserts a debugging breakpoint for every source code line, and these breakpoints remain for the duration of the profile session. To speed up profiling, reduce the number of lines selected for profiling. For more information, see <A HREF="_core_select_code_to_profile.htm">Select Code to Profile</A>.</P>
</font>
</BODY>
</HTML>
