<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview of Creating a Custom AppWizard</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_begin_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_appwiz_CUSTOMWZ">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_overview_of_creating_a_custom_appwizard"></A>Overview of Creating a Custom AppWizard</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_understanding_custom_appwizards.htm">Overviews</A>  |&nbsp; <A HREF="_core_creating_custom_appwizards.htm">How Do I</A> |&nbsp; <A HREF="_core_appwizard_programming_reference.htm">Details</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Creating a Custom AppWizard is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_3.Click()">Visual C++ Editions</A>.</P>

<P>Creating a custom AppWizard requires the following steps:

<OL>
	<LI>On the <B>File</B> menu, click <B>New</B>, click the <B>Projects</B> tab and then choose the <B>Custom AppWizard</B> icon.<BR>
For more information, see <A HREF="_core_how_to_create_a_custom_appwizard_project.htm">How to Create a Custom AppWizard Project</A>.<BR><BR></LI>

	<LI>Edit two text templates, CONFIRM.INF and NEWPROJ.INF. Your finished custom AppWizard uses these to create the custom AppWizard user’s program.<BR>
For more information, see <A HREF="_core_understanding_confirm..inf_and_newproj..inf.htm">Understanding CONFIRM.INF and NEWPROJ.INF</A><BR><BR></LI>

	<LI>Create any other templates that your custom AppWizard requires.<BR>
For more information, see <A HREF="_core_understanding_custom_resource_templates.htm">Understanding Custom Resource Templates</A>.<BR><BR></LI>

	<LI>Use the Visual C++ programming tools to add functionality to your custom AppWizard.<BR><BR></LI>

	<LI>Use the AppWizard API to add calls into MFCAPWZ.DLL to create communication between the finished custom AppWizard and the standard MFC AppWizard (MFCAPWZ.DLL).<BR>
For more information, see <A HREF="_core_appwizard_programming_reference.htm">AppWizard Programming Reference</A>.<BR><BR></LI>

	<LI>After building a release version of your custom AppWizard, use the Visual C++ programming tools. A custom AppWizard is given an extension of .AWX, rather than .DLL, and is automatically added to the Microsoft Visual Studio\Common\msdev98\Template directory. Once in this directory, your custom AppWizard becomes a project type and shows up on the <B>Projects</B> tab in the <B>New</B> dialog box.</LI>
</OL>

<P>You’ll have to learn some of the inner workings of AppWizard to perform steps 3 and 5. But first, you need an overview of the players and the tools. The following table describes the players; the table after it describes the tools.</P>

<P class=label><B>The Players</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=25%><B>Players</B></TD>
<TD class=label width=75%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%>You</TD>
<TD width=75%>You are the custom AppWizard writer. Your job is to design and implement a custom AppWizard. In this documentation, “you” refers to a custom AppWizard writer.</TD>
</TR>

<TR VALIGN="top">
<TD width=25%>Custom AppWizard user</TD>
<TD width=75%>You, or any other developer, who uses a custom AppWizard with the purpose of creating a program for one or more end users. </TD>
</TR>

<TR VALIGN="top">
<TD width=25%>User</TD>
<TD width=75%>The end user who uses the program created from the project generated by the custom AppWizard. In this documentation, “user” refers to the end user.</TD>
</TR>
</TABLE><BR>

<P>As you can see, creating a custom AppWizard is a layered interaction between you (the custom AppWizard writer), the custom AppWizard user, and the end user who ultimately uses the program.</P>

<P>The following table describes the tools that you use (in addition to the compiler, linker, etc.) to create a custom AppWizard for a custom AppWizard user.</P>

<P class=label><B>The Tools</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=27%><B>Tools</B></TD>
<TD class=label width=73%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=27%>AppWizard</TD>
<TD width=73%>A tool that you use to create a program that is based on the Microsoft Foundation Class Library (MFC).
<P>AppWizard is composed of MFCAPWZ.DLL and all of the dynamic-link libraries (DLLs) containing localized resources (those with names described by APPWZ*.DLL).</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Custom AppWizard</TD>
<TD width=73%>A tool that you use to create custom programs. Your custom AppWizard is used to create a program. The custom AppWizard appears, to its user, as one or more steps that are embedded within a framework that looks like AppWizard.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>MFCAPWZ.DLL</TD>
<TD width=73%>The DLL that implements AppWizard. It also interacts with a finished custom AppWizard to lend it an AppWizard-like look and feel.
<P>MFCAPWZ.DLL has two different interfaces: an on-screen appearance that looks much like AppWizard (with a title bar and <B>Help</B>, <B>Cancel</B>, <B>Back</B>, <B>Next</B>, and <B>Finish</B> buttons), and an AppWizard API that you use to establish lines of communication and control between MFCAPWZ.DLL and your custom AppWizard.</P>
</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>CUSTMWZ.AWX</TD>
<TD width=73%>The dynamic-link library, which is itself a custom AppWizard, that implements the Custom AppWizard project type. You select this project type from <B>Projects</B> tab of the <B>New</B> dialog box in order to choose the features of your custom AppWizard. The CUSTMWZ.AWX source code is included as a sample program.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>AppWizard API</TD>
<TD width=73%>The application programming interface that provides you with calls into MFCAPWZ.DLL. You use the API to specify custom AppWizard and MFCAPWZ.DLL behavior in reaction to a custom AppWizard user’s on-screen manipulation of the <B>Help</B>, <B>Cancel</B>, <B>Back</B>, <B>Next</B>, and <B>Finish</B> buttons. For more information on the AppWizard API, see <A HREF="_core_appwizard_programming_reference.htm">AppWizard Programming Reference</A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Custom resource templates</TD>
<TD width=73%>There are two types of custom resource templates: binary and text. A finished custom AppWizard uses these templates to create a final application. For more information, see <A HREF="_core_standard_custom_resource_templates.htm">Standard Custom Resource Templates</A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Binary templates</TD>
<TD width=73%>Binary templates are not parsed by MFCAPWZ.DLL during the application generation process. They are copied verbatim to a new application. Binary templates can include, but are not restricted to, files such as .BMP and .RTF. For more information, see <A HREF="_core_understanding_binary_templates.htm">Understanding Binary Templates</A>.</TD>
</TR>

<TR VALIGN="top">
<TD width=27%>Text templates</TD>
<TD width=73%>Text templates are parsed by MFCAPWZ.DLL during the application generation process. They can, for example, contain source code, macros, and directives that a custom AppWizard can use to generate a new project’s source-code files. Typically, the new project’s final application is built from these source files. Text templates can include, but are not restricted to, files such as .H, .CPP, .RC, .CLW, .ODL, .RTF, and .RC2. For more information, see <A HREF="_core_understanding_text_templates.htm">Understanding Text Templates</A>.</TD>
</TR>
</TABLE><BR>

<H4>What do you want to know more about?</H4>

<UL type=disc>
	<LI><A HREF="_core_how_to_create_a_custom_appwizard_project.htm">How to create a custom AppWizard project</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_the_files_that_appwizard_creates.htm">The files that AppWizard creates</A><BR><BR></LI>

	<LI><A HREF="_core_adding_functionality_to_your_custom_appwizard.htm">Adding functionality to a custom AppWizard</A><BR><BR></LI>

	<LI><A HREF="_core_customizing_the_generated_custom_appwizard_project.htm">Customizing a generated AppWizard project</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_custom_resource_templates.htm">Custom resource templates</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_text_templates.htm">Text templates</A><BR><BR></LI>

	<LI><A HREF="_core_how_macros_get_their_values.htm">How macros get their values</A><BR><BR></LI>

	<LI><A HREF="_core_how_to_specify_macros_in_directives_or_text.htm">How to specify macros in directives or text</A><BR><BR></LI>

	<LI><A HREF="_core_understanding_binary_templates.htm">Binary templates</A><BR><BR></LI>

	<LI><A HREF="_core_debugging_custom_appwizards.htm">Debugging custom AppWizards</A><BR><BR></LI>

	<LI><A HREF="_core_creating_a_classwizard_information_file_template.htm">Creating a ClassWizard information file Template</A><BR><BR></LI>

	<LI><A HREF="_core_providing_context.2d.sensitive_help.htm">Providing context-sensitive help</A><BR><BR></LI>

	<LI><A HREF="_core_appwizard_programming_reference.htm">The AppWizard Programming Reference</A></LI>
</UL>
</font>
</BODY>
</HTML>
