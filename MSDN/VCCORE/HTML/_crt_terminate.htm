<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>terminate</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_terminate"></A><SUP></SUP>terminate</H1>

<P>Calls <B>abort</B> or a function you specify using <B>set_terminate</B>.</P>

<P><B>void</B> <B>terminate(</B> <B>void</B> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Routine</B></TD>
<TD class=label width=28%><B>Required Header</B></TD>
<TD class=label width=56%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>terminate</B></TD>
<TD width=28%>&lt;eh.h&gt;</TD>
<TD width=56%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>None</P>

<P class=label><B>Remarks</B></P>

<P>The <B>terminate</B> function is used with C++ exception handling and is called in the following cases:

<UL type=disc>
	<LI>A matching catch handler cannot be found for a thrown C++ exception.<BR><BR></LI>

	<LI>An exception is thrown by a destructor function during stack unwind.<BR><BR></LI>

	<LI>The stack is corrupted after throwing an exception.</LI>
</UL>

<P><B>terminate</B> calls <B>abort</B> by default. You can change this default by writing your own termination function and calling <B>set_terminate</B> with the name of your function as its argument. <B>terminate</B> calls the last function given as an argument to <B>set_terminate</B>. For more information, see <A HREF="_core_unhandled_exceptions.htm">Unhandled Exceptions</A>. </P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* TERMINAT.CPP:  
 */
#include &lt;eh.h&gt;
#include &lt;process.h&gt;
#include &lt;iostream.h&gt;

void term_func();

void main()
{

    int i = 10, j = 0, result;
    set_terminate( term_func );
    try
    {
        if( j == 0 )
            throw "Divide by zero!";
        else
            result = i/j;

    }
    catch( int )
    {
        cout &lt;&lt; "Caught some integer exception.\n";
    }
    cout &lt;&lt; "This should never print.\n";

}
void term_func()
{
    cout &lt;&lt; "term_func() was called by terminate().\n";

    // ... cleanup tasks performed here

    // If this function does not exit, abort is called.

    exit(-1);
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>term_func() was called by terminate().

</CODE></PRE>

<P><A HREF="_crt_exception_handling_routines.htm">Exception Handling Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_abort.htm">abort</A>,<A HREF="_crt__set_se_translator.htm"> _set_se_translator</A>,<A HREF="_crt_set_terminate.htm"> set_terminate</A>, <A HREF="_crt_set_unexpected.htm">set_unexpected</A>, <A HREF="_crt_unexpected.htm">unexpected</A></P>
</font>
</BODY>
</HTML>
