<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Serialization: Overview</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CDocument">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CObject">
</OBJECT>
</TD></TR></TABLE>
<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_serialization.3a_.overview"></A>Serialization: Overview</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_serialization_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_serialization_topics.htm">Details</A></P>

<P>Use MFC's serialization mechanism to read and write the data in your program's documents. Build serialization support into your data classes. Or override MFC's serialization mechanism to store data your own way, perhaps in a database or in your own file format.</P>

<P>Writing data to and reading it from files is complicated because one C++ object can contain other objects or pointers to objects. Reading or writing the state of objects to persistent storage, such as a file, requires managing this complex web of objects. (For more information, see <A HREF="_core_carchive_tasks.htm">CArchive Tasks</A>.)</P>

<P>MFC serialization is the default solution. When serialization doesn't suit your needs, you can trace through the call stack and pick a suitable place to override the mechanism, either to alter its behavior or to replace it with your own implementation.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="JavaScript:hhobj_2.Click()">CDocument</A><BR><BR></LI>

	<LI><A HREF="JavaScript:hhobj_3.Click()">CObject</A><BR><BR></LI>

	<LI><A HREF="_core_serialization_.28.object_persistence.29.htm">Serialization — object persistence</A><BR><BR></LI>

	<LI><A HREF="_core_serialization_topics.htm">MFC's serialization mechanism</A><BR><BR></LI>

	<LI><A HREF="_core_serialization.3a_.making_a_serializable_class.htm">Designing a serializable class</A></LI>
</UL>
</font>
</BODY>
</HTML>
