<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DLLs: Overview</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_dlls.3a_.overview"></A>DLLs: Overview</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_dll_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_dlls.3a_.frequently_asked_questions.htm">FAQ</A>  |&nbsp; <A HREF="_core_dll_topics.htm">Details</A>  |&nbsp; <A HREF="_core_dll_sample_programs.htm">Sample</A></P>

<P>A dynamic-link library (DLL) is an executable file that acts as a shared library of functions. Dynamic linking provides a way for a process to call a function that is not part of its executable code. The executable code for the function is located in a DLL, which contains one or more functions that are compiled, linked, and stored separately from the processes that use them. DLLs also facilitate the sharing of data and resources. Multiple applications can simultaneously access the contents of a single copy of a DLL in memory. </P>

<P>Dynamic linking differs from static linking in that it allows an executable module (either a .DLL or .EXE file) to include only the information needed at run time to locate the executable code for a DLL function. In static linking, the linker gets all the referenced functions from the static link library and places it with your code into your executable. Using DLLs instead of static link libraries makes the size of the executable file smaller. If several applications use the same DLL, this can be a big savings in disk space and memory.</P>

<H3>What do you want to do?</H3>

<UL type=disc>
	<LI><A HREF="_core_export_from_a_dll.htm">Export from a DLL</A><BR><BR></LI>

	<LI><A HREF="_core_link_an_executable_to_a_dll.htm">Link an executable to a DLL</A><BR><BR></LI>

	<LI><A HREF="_core_initialize_a_dll.htm">Initialize a DLL</A></LI>
</UL>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_the_advantages_of_using_dlls.htm">The advantages of using DLLs</A><BR><BR></LI>

	<LI><A HREF="_core_the_different_kinds_of_dlls_available_with_visual_c.2b2b.htm">The different kinds of DLLs available with Visual C++</A><BR><BR></LI>

	<LI><A HREF="_core_non.2d.mfc_dlls.3a_.overview.htm">Non-MFC DLLs: Overview</A><BR><BR></LI>

	<LI><A HREF="_core_regular_dlls_statically_linked_to_mfc.3a_.overview.htm">Regular DLLs statically linked to MFC: Overview</A><BR><BR></LI>

	<LI><A HREF="_core_regular_dlls_dynamically_linked_to_mfc.3a_.overview.htm">Regular DLLs dynamically linked to MFC: Overview</A><BR><BR></LI>

	<LI><A HREF="_core_extension_dlls.3a_.overview.htm">Extension DLLs: Overview</A><BR><BR></LI>

	<LI><A HREF="_core_which_kind_of_dll_to_use.htm">Which kind of DLL to use</A></LI>
</UL>
</font>
</BODY>
</HTML>
