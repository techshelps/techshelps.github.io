<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Advantages of Using the MFC Libraries: Overview</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_porting_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_advantages_of_using_the_mfc_libraries.3a_.overview"></A>Advantages of Using the MFC Libraries: Overview</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_overviews.3a_.porting_and_upgrading.htm">Overview</A>  |&nbsp; <A HREF="_core_how_do_i.3a_.porting_and_upgrading.htm">How Do I</A>  |&nbsp; <A HREF="_core_frequently_asked_questions.3a_.porting_and_upgrading.htm">FAQ</A>  |&nbsp; <A HREF="_core_details.3a_.porting_and_upgrading.htm">Details</A></P>

<P>MFC is the easiest way for you to achieve two kinds of portability:

<UL type=disc>
	<LI>Portability among different operating systems<BR><BR></LI>

	<LI>Portability among different processors, such as x86 and DEC Alpha</LI>
</UL>

<P>MFC is designed to wrap your C/C++ applications to work on almost any operating system with little or no modification, including 16-bit and 32-bit Windows and UNIX if a UNIX MFC library is present. MFC is also designed to be completely portable among different processors. </P>

<P>Note that if you want to write ANSI Standard C++ applications, you cannot use the MFC libraries. See <A HREF="_core_write_code_that_works_in_the_largest_number_of_c_compilers.htm">Write Code that Works in the Largest Number of C Compilers</A> for help on writing strict ANSI Standard C++.&nbsp; </P>

<H2>Advantages of MFC</H2>

<P>MFC is an application framework designed for rapid Windows development. Visual C++ for Intel x86, Alpha, and PowerPC are all Windows NT-based. They are designed to be portable among each other. MFC's job is to make C++ code universal on these platforms by wrapping the system dependent code, such as messages, and your applications should port easily among the platforms. In most cases, a Visual C++ application created in the development environment on one of these platforms can be opened in the development environment on another platform and the conversion is done automatically. See <A HREF="_core_port_to_and_from_non.2d.intel_platforms.htm">Port to and from Non-Intel Platforms</A>.</P>

<P>If you want to develop UNIX applications and your UNIX system has the UNIX version of MFC, your Visual C++ applications should port with no problem. If you want to port your UNIX application to 32-bit windows, see <A HREF="_core_port_from_unix_to_win32.htm">Port from UNIX to Win32</A>.</P>
</font>
</BODY>
</HTML>
