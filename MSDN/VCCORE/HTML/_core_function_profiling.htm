<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Function Profiling</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_perf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_function_profiling"></A>Function Profiling</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_procedures_for_performance_tuning.htm">How Do I</A>  |&nbsp; <A HREF="_core_articles_that_tell_about_performance_tuning.htm">Details</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Profiling is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_2.Click()">Visual C++ Editions</A>.</P>

<P>The profiler provides four ways to profile by function: 

<UL type=disc>
	<LI><A HREF="_core_function_timing.htm">Function timing</A> lists time spent in functions together with “hit count”—the number of times the function was called. <BR><BR></LI>

	<LI><A HREF="_core_function_counting.htm">Function counting</A> lists only hit counts, but it is faster than function timing. <BR><BR></LI>

	<LI><A HREF="_core_function_coverage.htm">Function coverage</A> lists functions that are or are not executed.<BR><BR></LI>

	<LI><A HREF="_core_function_attribution.htm">Function attribution</A> takes a snapshot of the stack on each function call.</LI>
</UL>

<P>Debugging information is not required for function timing, function counting, or function coverage. The profiler reads the project’s <A HREF="_core_enable_profiling.htm">.MAP file</A> to match addresses with function names. It also creates a modified executable module and saves it in a temporary file with an ._XE or ._LL extension. This modified file contains thunks (substitutions for function calls), enabling the profiler to count and time the functions.</P>

<P class=indent><B><B>Caution</B></B>&nbsp;&nbsp;&nbsp;With function timing, function counting, or function coverage, the function calls go through thunks for the profiler to record all the relevant information, which requires modification of the stack of the original executable (.EXE) file. As a result, it is not possible to profile functions that modify the stack themselves.</P>

<P>For example, the function<B> AfxDispatchCall </B>in the Microsoft Foundation Class dynamic-link library (.DLL) cannot be profiled, because it modifies the stack. However, the rest of the application or the .DLL can be profiled by excluding the object module that contains this offending function. (PREP automatically excludes the object module that defines <B>AfxDispatchCall</B>, olecall.obj.<CODE>)</CODE> The module that contains the offending function can be identified using the .MAP file (see the <A HREF="_core_.2f.map.htm">Generate Mapfile</A> linker option). For more information on how to exclude modules, see the /EXC option of <A HREF="_core_prep.htm">PREP</A>.</P>
</font>
</BODY>
</HTML>
