<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_mbsspnp, _strspnp, _wcsspnp</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__mbsspnp.2c_._strspnp.2c_._wcsspnp"></A><SUP></SUP>_mbsspnp, _strspnp, _wcsspnp</H1>

<P><B>unsigned</B> <B>char</B> <B>*_mbsspnp(</B> <B>const</B> <B>unsigned</B> <B>char</B> <B>*</B><I>string1</I><B>,</B><BR>
<B>const</B> <B>unsigned</B> <B>char</B> <B>*</B><I>string2 </I><B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=56%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_mbsspnp</B></TD>
<TD width=27%>&lt;mbstring.h&gt;</TD>
<TD width=56%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_strspnp</B></TD>
<TD width=27%>&lt;tchar.h&gt;</TD>
<TD width=56%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_wcsspnp</B></TD>
<TD width=27%>&lt;tchar.h&gt;</TD>
<TD width=56%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_strspnp</B>, <B>_wcsspnp</B>, and <B>_mbsspnp</B> return a pointer to the first character in <I>string1</I> that does not belong to the set of characters in <I>string2.</I> Each of these functions returns <B>NULL</B> if <I>string1</I> consists entirely of characters from <I>string2.</I> For each of these routines, no return value is reserved to indicate an error.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>string1</I></P>

<P class=indent>Null-terminated string to search</P>

<P class=dt><I>string2</I></P>

<P class=indent>Null-terminated character set</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_mbsspnp</B> function returns a pointer to the multibyte character that is the first character in <I>string1</I> that does not belong to the set of characters in <I>string2</I>. <B>_mbsspnp</B> recognizes multibyte-character sequences according to the <A HREF="_crt_code_pages.htm">multibyte code page</A> currently in use. The search does not include terminating null characters.</P>

<P>The generic-text function <B>_tcsspnp</B>, defined in TCHAR.H, maps to <B>_mbsspnp</B> if <B>_MBCS</B> has been defined, or to <B>_wcsspnp</B> if <B>_UNICODE</B> has been defined. Otherwise <B>_tcsspnp</B> maps to <B>_strspnp</B>. <B>_strspnp</B> and <B>_wcsspnp</B> are single-byte character and wide-character versions of <B>_mbsspnp</B>. <B>_strspnp</B> and <B>_wcsspnp</B> behave identically to <B>_mbsspnp</B> otherwise; they are provided only for this mapping and should not be used for any other reason. For more information, see <A HREF="_crt_using_generic.2d.text_mappings.htm">Using Generic-Text Mappings</A> and Appendix B, <A HREF="_crt_generic.2d.text_mappings.htm">Generic-Text Mappings</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* STRSPN.C: This program uses strspn to determine
 * the length of the segment in the string "cabbage"
 * consisting of a's, b's, and c's. In other words,
 * it finds the first non-abc letter.
 */

#include &lt;string.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   char string[] = "cabbage";
   int  result;
   result = strspn( string, "abc" );
   printf( "The portion of '%s' containing only a, b, or c "
           "is %d bytes long\n", string, result );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>The portion of 'cabbage' containing only a, b, or c is 5 bytes long

</CODE></PRE>

<P><A HREF="_crt_string_manipulation.htm">String Manipulation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_strspn.2c_.wcsspn.2c_._mbsspn.htm">strspn</A>, <A HREF="_crt_strcspn.2c_.wcscspn.2c_._mbscspn.htm">strcspn</A>, <A HREF="_crt_strncat.2c_.wcsncat.2c_._mbsncat.htm">strncat</A>, <A HREF="_crt_strncmp.2c_.wcsncmp.2c_._mbsncmp.htm">strncmp</A>, <A HREF="_crt_strncpy.2c_.wcsncpy.2c_._mbsncpy.htm">strncpy</A>, <A HREF="_crt__strnicmp.2c_._wcsnicmp.2c_._mbsnicmp.htm">_strnicmp</A>, <A HREF="_crt_strrchr.2c_.wcsrchr.2c_._mbsrchr.htm">strrchr</A></P>
</font>
</BODY>
</HTML>
