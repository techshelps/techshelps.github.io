<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_fpieee_flt</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__fpieee_flt"></A><SUP></SUP>_fpieee_flt</H1>

<P>Invokes user-defined trap handler for IEEE floating-point exceptions.</P>

<P><B>int</B> <B>_fpieee_flt(</B> <B>unsigned</B> <B>long</B> <I>exc_code</I><B>,</B> <B>struct</B> <B>_EXCEPTION_POINTERS</B> <B>*</B><I>exc_info</I><B>,</B> <B>int</B> <I>handler</I><B>(_FPIEEE_RECORD</B> <B>*)</B> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Function</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=56%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_fpieee_flt</B></TD>
<TD width=27%>&lt;fpieee.h&gt;</TD>
<TD width=56%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>The return value of <B>_fpieee_flt</B> is the value returned by <I>handler.</I> As such, the IEEE filter routine may be used in the except clause of a structured exception-handling (SEH) mechanism.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>exc_code</I></P>

<P class=indent>Exception code</P>

<P class=dt><I>exc_info</I></P>

<P class=indent>Pointer to the Windows NT exception information structure</P>

<P class=dt><I>handler</I></P>

<P class=indent>Pointer to user’s IEEE trap-handler routine</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_fpieee_flt</B> function invokes a user-defined trap handler for IEEE floating-point exceptions and provides it with all relevant information. This routine serves as an exception filter in the SEH mechanism, which invokes your own IEEE exception handler when necessary.</P>

<P>The <B>_FPIEEE_RECORD</B> structure, defined in FPIEEE.H, contains information pertaining to an IEEE floating-point exception. This structure is passed to the user-defined trap handler by <B>_fpieee_flt</B>.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=45%><B>_FPIEEE_RECORD Field</B></TD>
<TD class=label width=55%><B>Description</B></TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>unsigned int RoundingMode</B>, <BR>
<B>unsigned int Precision</B></TD>
<TD width=55%>These fields contain information on the floating-point environment at the time the exception occurred.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>unsigned int Operation</B></TD>
<TD width=55%>Indicates the type of operation that caused the trap. If the type is a comparison (<B>_FpCodeCompare</B>), you can supply one of the special <B>_FPIEEE_COMPARE_RESULT</B> values (as defined in FPIEEE.H) in the <B>Result.Value</B> field. The conversion type (<B>_FpCodeConvert</B>) indicates that the trap occurred during a floating-point conversion operation. You can look at the <B>Operand1</B> and <B>Result</B> types to determine the type of conversion being attempted.</TD>
</TR>

<TR VALIGN="top">
<TD width=45%><B>_FPIEEE_VALUE Operand1</B>, <B>_FPIEEE_VALUE Operand2</B>, <B>_FPIEEE_VALUE Result</B></TD>
<TD width=55%>These structures indicate the types and values of the proposed result and operands:<BR>
<B>OperandValid</B>&nbsp;&nbsp;&nbsp;Flag indicating whether the responding value is valid.<BR>
<B>Format</B>&nbsp;&nbsp;&nbsp;Data type of the corresponding value. The format type may be returned even if the corresponding value is not valid.<BR>
<B>Value</B>&nbsp;&nbsp;&nbsp;Result or operand data value.</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* FPIEEE.C: This program demonstrates the implementation of
 * a user-defined floating-point exception handler using the
 * _fpieee_flt function.
 */

#include &lt;fpieee.h&gt;
#include &lt;excpt.h&gt;
#include &lt;float.h&gt;

int fpieee_handler( _FPIEEE_RECORD * );

int fpieee_handler( _FPIEEE_RECORD *pieee )
{
   // user-defined ieee trap handler routine:
   // there is one handler for all 
   // IEEE exceptions

   // Assume the user wants all invalid 
   // operations to return 0.

   if ((pieee-&gt;Cause.InvalidOperation) &amp;&amp; 
       (pieee-&gt;Result.Format == _FpFormatFp32)) 
   {
        pieee-&gt;Result.Value.Fp32Value = 0.0F;

        return EXCEPTION_CONTINUE_EXECUTION;
   }
   else
      return EXCEPTION_EXECUTE_HANDLER;
}

#define _EXC_MASK    \
    _EM_UNDERFLOW  + \
    _EM_OVERFLOW   + \
    _EM_ZERODIVIDE + \
    _EM_INEXACT

void main( void )
{
   // ...

   __try {
      // unmask invalid operation exception
      _controlfp(_EXC_MASK, _MCW_EM); 

      // code that may generate 
      // fp exceptions goes here
   }
   __except ( _fpieee_flt( GetExceptionCode(),
                GetExceptionInformation(),
                fpieee_handler ) ){

      // code that gets control 

      // if fpieee_handler returns
      // EXCEPTION_EXECUTE_HANDLER goes here

   }

   // ...
}

</CODE></PRE>

<P><A HREF="_crt_floating.2d.point_support.htm">Floating-Point Support Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__control87.2c_._controlfp.htm">_control87</A></P>
</font>
</BODY>
</HTML>
