<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>fgets, fgetws</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_fgets.2c_.fgetws"></A><SUP></SUP>fgets, fgetws</H1>

<P>Get a string from a stream.</P>

<P><B>char</B> <B>*fgets(</B> <B>char</B> <B>*</B><I>string</I><B>,</B> <B>int</B> <I>n</I><B>,</B> <B>FILE</B> <B>*</B><I>stream</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*fgetws(</B> <B>wchar_t</B> <B>*</B><I>string</I><B>,</B> <B>int</B> <I>n</I><B>,</B> <B>FILE</B> <B>*</B><I>stream</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Function</B></TD>
<TD class=label width=35%><B>Required Header</B></TD>
<TD class=label width=49%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>fgets</B></TD>
<TD width=35%>&lt;stdio.h&gt;</TD>
<TD width=49%>ANSI, Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>fgetws</B></TD>
<TD width=35%>&lt;stdio.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=49%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns <I>string</I>. <B>NULL</B> is returned to indicate an error or an end-of-file condition. Use <B>feof</B> or <B>ferror</B> to determine whether an error occurred.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>string</I></P>

<P class=indent>Storage location for data</P>

<P class=dt><I>n</I></P>

<P class=indent>Maximum number of characters to read</P>

<P class=dt><I>stream</I></P>

<P class=indent>Pointer to <B>FILE</B> structure</P>

<P class=label><B>Remarks</B></P>

<P>The <B>fgets</B> function reads a string from the input <I>stream</I> argument and stores it in <I>string</I>. <B>fgets</B> reads characters from the current stream position to and including the first newline character, to the end of the stream, or until the number of characters read is equal to <I>n</I> – 1, whichever comes first. The result stored in <I>string</I> is appended with a null character. The newline character, if read, is included in the string. </P>

<P><B>fgets</B> is similar to the <B>gets</B> function; however, <B>gets</B> replaces the newline character with <B>NULL</B>. <B>fgetws</B> is a wide-character version of <B>fgets</B>. </P>

<P><B>fgetws</B> reads the wide-character argument <I>string</I> as a multibyte-character string or a wide-character string according to whether <I>stream</I> is opened in text mode or binary mode, respectively. For more information about using text and binary modes in Unicode and multibyte stream-I/O, see <A HREF="_crt_text_and_binary_mode_file_i.2f.o.htm">Text and Binary Mode File I/O</A> and <A HREF="_crt_unicode.99_.stream_i.2f.o_in_text_and_binary_modes.htm">Unicode Stream I/O in Text and Binary Modes</A>.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_fgetts</TD>
<TD width=29%>fgets</TD>
<TD width=26%>fgets</TD>
<TD width=28%>fgetws</TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* FGETS.C: This program uses fgets to display
 * a line from a file on the screen.
 */

#include &lt;stdio.h&gt;

void main( void )
{
   FILE *stream;
   char line[100];

   if( (stream = fopen( "fgets.c", "r" )) != NULL )
   {
      if( fgets( line, 100, stream ) == NULL)
         printf( "fgets error\n" );
      else
         printf( "%s", line);
      fclose( stream );
   }
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>/* FGETS.C: This program uses fgets to display
 

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_fputs.2c_.fputws.htm">fputs</A>, <A HREF="_crt_gets.2c_.getws.htm">gets</A>, <A HREF="_crt_puts.2c_._putws.htm">puts</A></P>
</font>
</BODY>
</HTML>
