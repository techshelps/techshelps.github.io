<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Pure Virtual Functions and Abstract Classes</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_pure_virtual_functions_and_abstract_classes"></A><SUP></SUP>Pure Virtual Functions and Abstract Classes</H1>

<P><B>C++ Specific —&gt;</B></P>

<P>An abstract class contains at least one pure virtual function. Specify a virtual function as pure by placing = 0 at the end of its declaration. You don't have to supply a definition for a pure virtual function.</P>

<P>You cannot declare an instance of an abstract base class; you can use it only as a base class when declaring other classes.</P>

<P><B>END C++ Specific</B></P>

<P class=label><B>Example</B></P>

<P>In the following program, <CODE>draw()</CODE> is a pure virtual function defined in the abstract class <CODE>Shape</CODE>. You cannot declare <CODE>Shape</CODE> objects. <CODE>Shape</CODE> acts as a base class for <CODE>Rectangle</CODE> and <CODE>Circle</CODE>. <CODE>Rectangle</CODE> and <CODE>Circle</CODE> provide definitions for <CODE>draw()</CODE>, so you can declare instances of those classes and call <CODE>draw()</CODE> for them.</P>

<PRE><CODE>// Example of a virtual function and abstract classes
#include &lt;iostream.h&gt;

class Shape
{
public:
   virtual void draw() = 0;
};

class Rectangle: public Shape
{
public:
   void draw();
};

class Circle : public Shape
{
public:
   void draw();
};</CODE></PRE>
</font>
</BODY>
</HTML>
