<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Constant Member Functions</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_constant_member_functions"></A><SUP></SUP>Constant Member Functions</H1>

<P><B>C++ Specific </B></P>

<P>Declaring a member function with the <B>const</B> keyword specifies that the function is a "read-only" function that does not modify the object for which it is called.</P>

<P>To declare a constant member function, place the <B>const</B> keyword after the closing parenthesis of the argument list. The <B>const</B> keyword is required in both the declaration and the definition. A constant member function cannot modify any data members or call any member functions that aren't constant.</P>

<P><B>END C++ Specific</B></P>

<P class=label><B>Example</B></P>

<PRE><CODE>// Example of a constant member function
class Date
{
public:
   Date( int mn, int dy, int yr );
   int getMonth() const;       // A read-only function
   void setMonth( int mn );    // A write function;
                               //    cannot be const
private:
   int month;
};

int Date::getMonth() const
{
   return month;        // Doesn't modify anything
}
void Date::setMonth( int mn )
{
   month = mn;          // Modifies data member
}</CODE></PRE>
</font>
</BODY>
</HTML>
