<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limitations of Databinding</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vcsmpATLMTODynamicallyAcquiresColumnDefinitions">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="asGettingStarted">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="vcreflimitations"></A>Limitations of Databinding</H1>

<P>Databinding is a powerful way to create data applications quickly. However the current databinding controls architecture is inherently 2-tier. Some issues:</P>

<P><B>Scalability</B></P>

<P>ADO data-bound controls can only access data from the ADO Data Control. RDO data-bound controls can only access data from the RDO RemoteData Control. For RDO RemoteData Control, there is no workaround but to use a 2-tier architecture, which results in the database server receiving all data retrieval requests directly. To avoid directly connecting to the database server, write a provider that allows access to middle-tier business and data objects. The ADO Data Control connects to these objects, rather than the database server. Such middle tier objects can be cached and managed in a transaction server such as Microsoft Transaction Server. Refer to the OLE DB Templates provider sample <A HREF="JavaScript:hhobj_1.Click()">ATLMTO</A> for an example of writing a provider exposing data from a middle tier object. Refer to <A HREF="JavaScript:hhobj_2.Click()">Microsoft Transaction Server</A> for more information on OLE DB provider requirements for transactions.</P>

<P><B>Versioning and Distribution</B></P>

<P>When new versions of controls are released, the application will have to be tested with the new versions. If another application is installed on a user's computer, and it has a different version of the controls, the application will have to be checked. Finally, when new versions of controls are released, the new controls will have to be distributed to application users.</P>

<P><B>Drivers and Providers</B></P>

<P>Databinding is only as good as the ODBC driver or OLE DB provider you are using. Since the drivers and providers are responsible for exposing data to data-source controls, it is important to ensure that the driver or provider supports the functionality that you need. Once you select a driver or provider, you must also ensure that your users have the driver or provider installed. This includes installing any middleware that the driver or provider requires. For example, for ODBC Oracle connectivity, the user should have installed not only an ODBC Oracle driver, but also Oracle's SQL*Net middleware. For connectivity to Oracle 7.3 servers, the Microsoft Oracle ODBC driver is recommended.</P>

<P><B>Programmability</B></P>

<P>Since ActiveX controls were designed to be black-box components, programmability is limited to a developer's access to the control's interfaces. In the databinding model in the resource editor, this is implemented via <A HREF="vcrefwrapperclasses.htm">wrapper classes</A> generated by ClassWizard. If ClassWizard is unable to detect a coclass, then no wrapper class is generated, and there is no programmatic access.</P>

<P>Despite these limitations, databinding affords a way to rapidly prototype data applications using Visual C++. If speed of development is important, then databinding should be considered when designing your application.</P>

<P>Back to <A HREF="vcrefmicrosoftdatasourcecontrolsdataboundcontrolsincludedwithvisualc6.htm">Databinding with ActiveX Controls in Visual C++</A>.</P>
</font>
</BODY>
</HTML>
