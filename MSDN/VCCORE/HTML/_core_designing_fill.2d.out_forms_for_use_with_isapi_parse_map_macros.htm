<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Designing Fill-out Forms for use with ISAPI Parse Map Macros</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CHttpServer.3a3a.HttpExtensionProc">
</OBJECT>
</TD></TR></TABLE>
<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_designing_fill.2d.out_forms_for_use_with_isapi_parse_map_macros"></A>Designing Fill-out Forms for Use with ISAPI Parse Map Macros</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_internet_support.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_internet_tasks.htm">How Do I</A></P>

<P>When a <B>CHttpServer</B> object receives a client request, it uses a set of macros called a parse map that map the request to the appropriate <B>CHttpServer</B> member functions. The client request can either be a server GET method or a server POST method. Other methods, like HEAD, are not supported. You can add your own support by overriding <A HREF="JavaScript:hhobj_2.Click()">CHttpServer::HttpExtensionProc</A>.</P>

<P>Authors of ISAPI forms are advised to use only the POST method because of browser inconsistencies, and because GET methods are limited to a 1024-byte buffer for their parameters. When writing forms for ISAPI, either use only the POST method, or design the ISA so that only the default function handles the form. </P>

<P>For example, some browsers sending a form via GET with an action of:</P>

<PRE><CODE>TestLet.DLL?Command
</CODE></PRE>

<P>will truncate <CODE>Command</CODE> and send</P>

<PRE><CODE>TestLet.DLL?name=value
</CODE></PRE>

<P>instead of the correct command,</P>

<PRE><CODE>TestLet.DLL?Command?name=value
</CODE></PRE>

<P>By truncating <CODE>Command</CODE>, the browser removes the association to the ISA function needed to map the request. Unless the function <CODE>Command</CODE> is the default function, the form will not be handled correctly.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_processing_html_forms_using_internet_server_extension_dlls_and_command_handlers.htm">Processing HTML Forms Using Internet Server Extension DLLs and Command Handlers</A><BR><BR></LI>

	<LI><A HREF="_core_declaring_a_command_in_a_parse_map.htm">Declaring a Command in a Parse Map</A><BR><BR></LI>

	<LI><A HREF="_core_passing_a_string_from_the_url.htm">Passing a String from the URL</A><BR><BR></LI>

	<LI><A HREF="_core_naming_parameters_with_on_parse_command_params.htm">Naming Parameters with ON_PARSE_COMMAND_PARAMS</A><BR><BR></LI>

	<LI><A HREF="_core_managing_required_and_optional_parameters.htm">Managing Required and Optional Parameters</A></LI>
</UL>
</font>
</BODY>
</HTML>
