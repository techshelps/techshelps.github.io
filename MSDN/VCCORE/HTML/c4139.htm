<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Warning (level 1) C4139</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="c4139"></A><SUP></SUP>Compiler Warning (level 1) C4139</H1>

<P class=dt><B>'hexnumber' : hex escape sequence is out of range</B></P>

<P>A hexadecimal escape sequence appearing in a character or string constant was too large to be converted to a character.</P>

<P>If the hexadecimal escape sequence is in a string constant, the compiler casts the low byte of the hexadecimal number to a <B>char</B>. If in a <B>char</B> constant, the compiler made the cast and then sign extended the result. If in a <B>char</B> constant and the program was compiled with the /J command-line option, the compiler cast the value to an unsigned <B>char</B>.</P>

<P>Note that the following code generates this warning:</P>

<PRE><CODE>printf("\x7Bell\n");
</CODE></PRE>

<P>The compiler reads the characters "7Be" as a legal hexadecimal number, but it is too large to fit in a character. To correct this example, use three hexadecimal digits:</P>

<PRE><CODE>printf("\007Bell\n");
</CODE></PRE>
</font>
</BODY>
</HTML>
