<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>/ENTRY   (Entry-Point Symbol)</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_.2f.entry"></A>/ENTRY&nbsp;&nbsp;&nbsp;(Entry-Point Symbol)</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_overviews.3a_.compiling_and_linking.htm">Overview</A>  |&nbsp; <A HREF="_core_set_linker_options.htm">How Do I</A>  |&nbsp; <A HREF="_core_linker_reference.htm">Linker Options</A></P>

<P>The Entry-Point Symbol (/ENTRY:<I>function</I>) option sets the starting address for an .EXE file or DLL. (To find this option in the development environment, click <B>Settings</B> on the <B>Project</B> menu. Then click the <B>Link</B> tab, and click <B>Output </B>in the <B>Category </B>box.) </P>

<P>Type a function name in the Entry-Point Symbol text box (or in the <I>function</I> argument on the command line). The function must be defined with the <B>__stdcall</B> calling convention. The parameters and return value must be defined as documented in the Win32 API for <B>WinMain</B> (for an .EXE file) or <B>DllEntryPoint</B> (for a DLL). It is recommended that you let the linker set the entry point so that the C run-time library is initialized correctly, and C++ constructors for static objects are executed.</P>

<P>By default, the starting address is a function name from the C run-time library. The linker selects it according to the attributes of the program, as shown in the following table.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=37%><B>Function name</B></TD>
<TD class=label width=63%><B>Default for</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>mainCRTStartup</B> (or <B>wmainCRTStartup</B>)</TD>
<TD width=63%>An application using /SUBSYSTEM:<B>CONSOLE</B>; calls <B>main</B> (or <B>wmain</B>)</TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>WinMainCRTStartup</B> (or <B>wWinMainCRTStartup</B>)</TD>
<TD width=63%>An application using /SUBSYSTEM:<B>WINDOWS</B>; calls <B>WinMain</B> (or <B>wWinMain</B>), which must be defined with <B>__stdcall</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>_DllMainCRTStartup</B></TD>
<TD width=63%>A DLL; calls <B>DllMain</B>, which must be defined with <B>__stdcall</B>, if it exists</TD>
</TR>
</TABLE><BR>

<P>If the <A HREF="_core_.2f.dll.htm">/DLL</A> or <A HREF="_core_.2f.subsystem.htm">/SUBSYSTEM</A> option is not specified, the linker selects a subsystem and entry point depending on whether <B>main</B> or <B>WinMain</B> is defined. </P>

<P>The functions <B>main</B>, <B>WinMain</B>, and <B>DllMain</B> are the three forms of the user-defined entry point.</P>
</font>
</BODY>
</HTML>
