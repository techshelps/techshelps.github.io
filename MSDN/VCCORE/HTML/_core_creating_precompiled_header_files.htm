<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Precompiled Header Files</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_compiling_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_creating_precompiled_header_files"></A>Creating Precompiled Header Files</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A></P>

<P>The Microsoft C and C++ compilers provide options for precompiling any C or C++ code—including inline code. Using this performance feature, you can compile a stable body of code, store the compiled state of the code in a file, and during subsequent compilations combine the precompiled code with code that is still under development. Each subsequent compilation is faster because the stable code does not need to be recompiled. </P>

<P>Visual C++ offers two ways to create and use precompiled header files: 

<UL type=disc>
	<LI>Use AppWizard and allow it to set default compiler options for your application. <BR><BR></LI>

	<LI>Set compiler options yourself, either on the command line or in the development environment (Project menu, Settings command).</LI>
</UL>

<P>With Microsoft Visual C++, you can precompile any C or C++ code; you are not limited to precompiling only header files. To precompile headers, you can choose one of two approaches:

<UL type=disc>
	<LI><A HREF="_core_the_.2f.yx_.28.automate_precompiled_header.29_.option.htm">Automatic precompiling</A>: Use just one option (/YX) and let the compiler decide when to create and use precompiled headers.<BR><BR></LI>

	<LI><A HREF="_core_the_.2f.yc_.28.create_precompiled_header.29_.option.htm">Manual precompiling</A>: Use this when you know that your source files use common sets of header files but do not include them in the same order, or when you want to include source code in your precompilation.</LI>
</UL>

<P>The first choice is quick and easy. The second requires some planning, but it offers significantly faster compilations if you precompile source code other than simple header files.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_when_to_precompile_source_code.htm">When to precompile source code</A><BR><BR></LI>

	<LI><A HREF="_core_two_choices_for_precompiling_code.htm">Details on automatic and manual precompiling</A></LI>
</UL>
</font>
</BODY>
</HTML>
