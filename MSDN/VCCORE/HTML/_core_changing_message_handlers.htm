<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changing Message Handlers</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CWnd.3a3a.OnCommand">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CWnd.3a3a.OnParentNotify">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CWnd.3a3a.OnCommand">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CWnd.3a3a.OnCommand">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_CWnd.3a3a.OnParentNotify">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_changing_message_handlers"></A>Changing Message Handlers</H1>

<P>Window handles in the Win32 API are 32-bit values; consequently, the <B>WPARAM</B> type has been widened from 16 to 32 bits to accommodate this change. This widening often necessitates repacking the values carried by the <I>wParam</I> and <I>lParam</I> parameters.</P>

<P>A 16-bit application, written for Windows without using the framework, requires a considerable amount of code rewriting to port successfully to 32-bit. Each window procedure declaration must be modified, as well as the message-handling code within the procedure.</P>

<P>The MFC class library accommodates most of these changes internally. The framework hides the window procedure from you, unpacks <I>wParam</I> and <I>lParam</I>, and passes the properly unpacked values to you in message handlers. The only two instances that require your attention are functions that override the <A HREF="JavaScript:hhobj_1.Click()">CWnd::OnCommand</A> and <A HREF="JavaScript:hhobj_2.Click()">CWnd::OnParentNotify</A> message handlers, where the framework passes <I>wParam</I> or <I>lParam</I> directly from Windows to you.</P>

<P>The framework also unpacks the <I>wParam</I> and <I>lParam</I> values associated with a <B>WM_COMMAND</B> message to implement message-map entries. The framework properly unpacks the values as appropriate for Windows version 3.<I>x</I> or Win32 with no attention from you.</P>



<H2><A NAME="_core_cwnd.3a3a.oncommand_changes"></A>CWnd::OnCommand Changes</H2>

<P>If your application overrides <B>OnCommand</B>, check the code carefully and modify it so that it unpacks <I>wParam</I> and <I>lParam</I> correctly. Your 16-bit override of <B>OnCommand</B> may compile successfully, but will not execute correctly.</P>

<P>When the framework receives a <B>WM_COMMAND</B> message, it calls the <A HREF="JavaScript:hhobj_3.Click()">CWnd::OnCommand</A> member function with the following arguments:</P>

<P><B>virtual BOOL OnCommand( WPARAM</B> <I>wParam</I><B>,</B><I> </I><B>LPARAM</B> <I>lParam</I> <B>);</B></P>

<P>A command ID, a control handle, and a notification message can be packed in <I>wParam</I> and <I>lParam</I>, depending on the circumstances of the call.</P>

<P>You don’t need to change the way you extract the command ID; it is packed the same way in both environments. You can extract it this way:</P>

<PRE><CODE>UINT nID = LOWORD(wParam);</CODE></PRE>

<P>You extract the remaining two values in this way in the 16-bit framework:</P>

<PRE><CODE>HWND hWndCtrl = (HWND)LOWORD(lParam);       //Control handle
int nCode = HIWORD(lParam);                 //Notification code</CODE></PRE>

<P>You extract them this way in the 32-bit framework:</P>

<PRE><CODE>HWND hWndCtrl = (HWND)lParam;              //Control handle
int nCode = HIWORD(wParam);                //Notification code</CODE></PRE>

<P>In both the 16-bit and 32-bit versions, if the <A HREF="JavaScript:hhobj_4.Click()">OnCommand</A> message is from an accelerator, the value retrieved in <CODE>nCode</CODE> is 1. If the message is from a menu, the value in <CODE>nCode</CODE> is 0.</P>



<H2><A NAME="_core_cwnd.3a3a.onparentnotify_changes"></A>CWnd::OnParentNotify Changes</H2>

<P>As with <B>OnCommand</B>, carefully check any code in your application that overrides <B>OnParentNotify</B> and modify it so that it unpacks values from <I>lParam</I> correctly. Your 16-bit override of <B>OnParentNotify</B> will compile successfully, but will not execute correctly.</P>

<P>The framework calls the <A HREF="JavaScript:hhobj_5.Click()">CWnd::OnParentNotify</A> member function with the following arguments:</P>

<P><B>afx_msg void OnParentNotify( UINT </B><I>message</I><B>,</B> <B>LPARAM</B><I> lParam</I> <B>);</B></P>

<P>The <B>OnParentNotify</B> member function is called for the parent of a child window in two cases: when the mouse is clicked over a child window, and when a child window is created or destroyed.</P>

<P>When the <I>message</I> parameter is equal to <B>WM_CREATE</B> or <B>WM_DESTROY</B>, the framework’s 16-bit packing of <I>lParam</I> puts the child window handle in the low-order word and the identifier of the child window in the high-order word. For the 32-bit framework, the child window handle has been widened and now takes up all of <I>lParam</I>; the child window identifier is unavailable.</P>

<P>If your Win32 code in <B>OnParentNotify</B> requires the child ID, retrieve it like this:</P>

<PRE><CODE>CWnd* pChild = FromHandle( (HWND)lParam );
int nID = pChild-&gt;GetDlgCtrlID();</CODE></PRE>

<P>In this example, <B>FromHandle</B> returns the <B>CWnd</B> object attached to the child window handle. The <B>GetDlgCtrlID</B> member function returns the child window ID. You could also retrieve the child ID by passing the child handle directly to the Windows <B>GetDlgCtrlID</B> function, but the code above also retrieves a pointer to the child <B>CWnd</B> object.</P>

<P>The pointer returned in <CODE>pChild</CODE> is temporary and should not be stored for use beyond the scope of <B>OnParentNotify</B>.</P>
</font>
</BODY>
</HTML>
