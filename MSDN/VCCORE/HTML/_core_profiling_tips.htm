<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Profiling Tips</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_perf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_profiling_tips"></A>Profiling Tips</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_procedures_for_performance_tuning.htm">How Do I</A>  |&nbsp; <A HREF="_core_articles_that_tell_about_performance_tuning.htm">Details</A></P>

<P><B><B>Feature Only in Professional and Enterprise Editions</B></B>&nbsp;&nbsp;&nbsp;Profiling is supported only in Visual C++ Professional and Enterprise Editions. For more information, see <A HREF="JavaScript:hhobj_2.Click()">Visual C++ Editions</A>.</P>

<P>This section discusses some guidelines for approaching your profiling task.

<UL type=disc>
	<LI>Don't profile your entire application. Profile only the specific areas of interest to you. See <A HREF="_core_prep.htm">PREP</A> Phase I commands /EXC and /INC. There are a lot of areas that don't make sense to profile. For example, you probably don’t care about performance in general user interface code.<BR><BR></LI>

	<LI>Reported times will be inaccurate, so do an average of a few runs and keep accurate notes. The averages will be more precise. You can accumulate profiler statistics for multiple runs by merging (the Merge option). <BR><BR></LI>

	<LI>To get more consistent results, reduce the number of processes running on your machine when you profile.&nbsp; <BR><BR></LI>

	<LI>Disconnect any network connections to relieve the operating system of the need to service incoming packets.<BR><BR></LI>

	<LI>If you are profiling with function timing and your timings and calculated overhead vary, you may want to use the /CB switch in <A HREF="_core_prep.htm">PREP</A> Phase I. Calculated overhead appears in default (not tab-delimited) <A HREF="_core_plist.htm">PLIST</A> format.<BR><BR></LI>

	<LI>Analyze the report. If you have a function that is reportedly using a lot of time, see if the reported calls to profiled subroutines add up to roughly the amount of time the function is using.<BR><BR></LI>

	<LI>Look at the hit counts. If you are iterating through an algorithm 1,000 times, are the functions it uses getting called the right number of times? Is there a way to reduce the calls? If a function isn't used, it doesn't cost anything.<BR><BR></LI>

	<LI>Just because you have a tried and true function, don't discount it as a possible problem.<BR><BR></LI>

	<LI>The times attributed to a function also include any children of the function.<BR><BR></LI>

	<LI>Disk caching can result in faster subsequent profile runs.<BR><BR></LI>

	<LI>Linked lists are slow; profiling shows this.<BR><BR></LI>

	<LI>Long functions can be difficult to profile. In some cases you may want to wrap part of a function within a subroutine to check the timing of that chunk of code.<BR><BR></LI>

	<LI>You can't profile threads. You can, however, use the /SF PREP (phase I) option to start profiling at the function that is the thread entry point. Or, to test a thread, make it a subroutine and create a special test case for it; this can be difficult to do.</LI>
</UL>

<P>For tips on how to improve your code to increase performance, see <A HREF="_core_tips_for_improving_time.2d.critical_code.htm">Tips for Improving Time-Critical Code</A>.</P>
</font>
</BODY>
</HTML>
