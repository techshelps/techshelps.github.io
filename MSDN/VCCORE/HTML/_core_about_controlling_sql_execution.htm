<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Controlling SQL Execution</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="vceditions">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_about_controlling_sql_execution"></A>About Controlling SQL Execution</H1>

<P class=indent><B><B>Feature Only in Enterprise Edition</B></B>&nbsp;&nbsp;&nbsp;This feature is supported only in Visual C++ Enterprise Edition. For more information, see <A HREF="JavaScript:hhobj_1.Click()">Visual C++ Editions</A>.</P>

<P>To control SQL source code execution, click the <B>Go</B>, <B>Step Into</B>, or <B>Run To Cursor</B> command under <B>Start Debug</B> on the <B>Build</B> menu. The following table lists the <B>Start Debug</B> commands and their actions.</P>

<P class=label><B>Build Menu Debug Commands</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=34%><B>Build menu command</B></TD>
<TD class=label width=66%><B><BR>
Action</B></TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Debug</B></TD>
<TD width=66%>Displays the initial debug commands: <B>Go</B>, <B>Step Into</B>, <B>Run to Cursor</B>.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Go</B></TD>
<TD width=66%>Executes code from the current statement until a breakpoint is reached or the end of the program is reached. This is equivalent to the <B>Go</B> button on the toolbar.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Step Into</B></TD>
<TD width=66%>Single-steps through statements in the SQL source code.</TD>
</TR>

<TR VALIGN="top">
<TD width=34%><B>Run to Cursor</B></TD>
<TD width=66%>Executes the program as far as the line that contains the insertion point. This is equivalent to setting a temporary breakpoint at the insertion point location. </TD>
</TR>
</TABLE><BR>

<P>After you click <B>Go</B>, <B>Step Into</B>, or <B>Run to Cursor</B>, the <B>Debug</B> menu appears, replacing the <B>Build</B> menu on the menu bar. You can then control program execution using the commands listed in the following table.</P>

<P class=label><B>Debug Menu Commands That Control SQL Execution</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=35%><B>Debug menu command</B></TD>
<TD class=label width=65%><B><BR>
Action</B></TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Go</B></TD>
<TD width=65%>Executes code from the current statement until a breakpoint is reached, the end of the program is reached, or an exception occurs. When the <B>Debug</B> menu is unavailable, you can click <B>Go</B> from the <B>Start Debug</B> submenu of the <B>Build</B> menu.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Restart</B> </TD>
<TD width=65%>Resets execution to the first line of the application.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Stop Debugging</B> </TD>
<TD width=65%>Terminates the debugging session and returns to a normal editing session. </TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Break </B></TD>
<TD width=65%>Halts the SQL source code or client application at its current location. </TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Step Into</B></TD>
<TD width=65%>Single-steps through statements in the SQL source. When the <B>Debug</B> menu is unavailable, you can click <B>Step Into</B> from the <B>Start Debug</B> submenu of the <B>Build</B> menu. If the SQL code is not encrypted, you can <B>Step Into</B>, <B>Step Over</B>, and <B>Step Out</B>.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Step Over</B></TD>
<TD width=65%>Single-steps through statements in the SQL source code.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Step Out</B></TD>
<TD width=65%>Executes the current SQL source code and returns to the next higher nesting level or currently executing client application instruction. Using this command, you can quickly finish executing the current SQL code. The maximum nesting level for SQL Server is 16.</TD>
</TR>

<TR VALIGN="top">
<TD width=35%><B>Run to Cursor</B></TD>
<TD width=65%>Executes the SQL code up to the line that contains the insertion point. This command is equivalent to setting a temporary breakpoint at the insertion point location. When the <B>Debug</B> menu is unavailable, you can click <B>Run To Cursor</B> from the <B>Start Debug</B> submenu of the <B>Build</B> menu. Other debugging events, such as breakpoints, will clear the temporary breakpoint.</TD>
</TR>
</TABLE><BR>
</font>
</BODY>
</HTML>
