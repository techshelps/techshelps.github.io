<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Excluding Files When Dependency Checking</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_begin_home">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_excluding_files_when_dependency_checking"></A>Excluding Files When Dependency Checking</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_overview.3a_.beginning_your_program.htm">Overview</A>  |&nbsp; <A HREF="_core_how_do_i_begin_my_visual_c.2b2b_.program.3f.htm">How Do I</A>  |&nbsp; <A HREF="_core_details.3a_.beginning_your_program.htm">Details</A></P>

<P>Two exclusion files are used for dependency checking. Adding files to the exclusion files speeds up dependency checking.</P>

<P>The file lists in the exclusion files should contain only files that are not likely to change often. Whenever dependencies are updated, the files in these lists are excluded from dependency scanning and does not display them in the <B>External</B> <B>Dependencies</B> folder.</P>

<P>If you change only files in either of these lists, you must click <B>Rebuild All</B> from the <B>Build</B> menu in order to build your selected project. If you click <B>Build</B>, and the <B>External Dependencies</B> folder has no changes in it, you will get a message reporting that your project is up to date. Alternatively, you could select the source files that include the changed dependencies, and click <B>Compile</B> from the shortcut menu in order to explicitly build those files. After those files have been built, click <B>Build</B> from the <B>Build</B> menu to build the project.</P>

<P>The following two exclusion files are referenced:</P>

<P class=dt>SYSINCL.DAT</P>

<P class=indent>Contains a default list of system include files, is installed by the setup program on your computer in the directory in which you installed MSDEV.EXE.</P>

<P class=dt>MSVCINCL.DAT</P>

<P class=indent>A text file that you can create and put in your Windows directory. You can list in it additional files that you want to exclude, such as headers for external class libraries or some of the include files in a large project. You should use this file for additions because SYSINCL.DAT may be overwritten if you reinstall Visual C++, if you modify your installation with Setup, or if you update your installation. If you use the text editor to create this file, you must exit and then restart it for the file to become effective.</P>

<P>Whenever you close the <B>Files Into Project</B> dialog box, the files in your project are scanned for dependencies. Any files found that are not already explicitly added to the project are added to the <B>Dependencies</B> folder for each project you’ve added files to.</P>

<P>If you move or copy selections that include files in the <B>External Dependencies</B> folder, only the source files are moved or copied. Dependencies are updated before the project is built, however, and they appear in the appropriate folders.</P>

<H3>What do you want to know more about?</H3>

<UL type=disc>
	<LI><A HREF="_core_updating_dependencies_in_a_project.htm">Updating dependencies in a project</A><BR><BR></LI>

	<LI><A HREF="_core_using_subprojects_in_visual_c.2b2b.htm">Using Subprojects</A></LI>
</UL>
</font>
</BODY>
</HTML>
