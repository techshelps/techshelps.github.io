<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>enum</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_langref_enum"></A><SUP></SUP>enum</H1>

<P><B>enum</B> [<I>tag</I>] <B>{</B><I>enum-list</I><B>}</B> [<I>declarator</I>]<B>;</B>&nbsp;&nbsp;&nbsp;// for definition of enumerated type</P>

<P><B>enum</B> <I>tag declarator</I><B>;</B>&nbsp;&nbsp;&nbsp;// for declaration of variable of type <I>tag</I></P>

<P>The <B>enum</B> keyword specifies an enumerated type.</P>

<P>An enumerated type is a user-defined type consisting of a set of named constants called enumerators. By default, the first enumerator has a value of 0, and each successive enumerator is one larger than the value of the previous one, unless you explicitly specify a value for a particular enumerator. Enumerators needn’t have unique values. The name of each enumerator is treated as a constant and must be unique within the scope where the <B>enum</B> is defined. An enumerator can be promoted to an integer value. However, converting an integer to an enumerator requires an explicit cast, and the results are not defined.</P>

<P>In C, you can use the <B>enum</B> keyword and the tag to declare variables of the enumerated type. In C++, you can use the tag alone.</P>

<P>In C++, enumerators defined within a class are accessible only to member functions of that class unless qualified with the class name (for example, <CODE>class_name::enumerator</CODE>). You can use the same syntax for explicit access to the type name (<CODE>class_name::tag</CODE>).</P>

<P>For related information, see <A HREF="_langref_class.htm">class</A> and <A HREF="_langref_struct.htm">struct</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>// Example of the enum keyword
enum Days               // Declare enum type Days
{
   saturday,            // saturday = 0 by default
   sunday = 0,          // sunday = 0 as well
   monday,              // monday = 1
   tuesday,             // tuesday = 2
   wednesday,           // etc.
   thursday,
   friday
} today;                // Variable today has type Days

int  tuesday;           // Error, redefinition of tuesday

enum Days yesterday;    // Legal in C and C++
Days tomorrow;          // Legal in C++ only

yesterday = monday;

int i = tuesday;        // Legal; i = 2
yesterday = 0;          // Error; no conversion
yesterday = (Days)0;    // Legal, but results undefined</CODE></PRE>
</font>
</BODY>
</HTML>
