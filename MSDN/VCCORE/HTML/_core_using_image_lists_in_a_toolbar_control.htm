<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Image Lists in a Toolbar Control</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CToolBarCtrl.3a3a.SetImageList">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CToolBarCtrl.3a3a.SetDisabledImageList">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_CToolBarCtrl.3a3a.SetHotImageList">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_using_image_lists_in_a_toolbar_control"></A>Using Image Lists in a Toolbar Control</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_using_ctoolbarctrl.htm">Overview</A>  |&nbsp; <A HREF="_core_common_control_sample_list.htm">Sample</A></P>

<P>By default, the images used by the buttons in a toolbar control are stored as a single bitmap. However, you can also store button images in a set of image lists. The toolbar control object can use up to three separate image lists:

<UL type=disc>
	<LI>Enabled image list&nbsp;&nbsp;&nbsp;Contains images for toolbar buttons that are currently enabled.<BR><BR></LI>

	<LI>Disabled image list&nbsp;&nbsp;&nbsp;Contains images for toolbar buttons that are currently disabled.<BR><BR></LI>

	<LI>Highlighted image list&nbsp;&nbsp;&nbsp;Contains images for toolbar buttons that are currently highlighted. This image list is used only when the toolbar uses the <B>TBSTYLE_FLAT</B> style.</LI>
</UL>

<P>These image lists are used by the toolbar control when you associate them with the <B>CToolBarCtrl</B> object. This association is accomplished by making calls to <A HREF="JavaScript:hhobj_2.Click()">CToolBarCtrl::SetImageList</A>, <A HREF="JavaScript:hhobj_3.Click()">SetDisabledImageList</A>, and <A HREF="JavaScript:hhobj_4.Click()">SetHotImageList</A>.</P>

<P>By default, MFC uses the <B>CToolBar</B> class to implement MFC application toolbars. However, the <B>GetToolBarCtrl</B> member function can be used to retrieve the embedded <B>CToolBarCtrl</B> object. You can then make calls to <B>CToolBarCtrl</B> member functions using the returned object.</P>

<P>The following example demonstrates this technique by assigning an enabled (<CODE>m_TBarImages</CODE>) and disabled (<CODE>m_TBarDis</CODE>) image list to a <B>CToolBarCtrl</B> object (<CODE>m_wndToolBar</CODE>).</P>

<PRE><CODE>CWinApp* pApp= AfxGetApp();

m_TBarImages.Create(16, 16, ILC_COLOR, 4, 4);
m_TBarImages.Add(pApp-&gt;LoadIcon(IDI_BLK));
m_TBarImages.Add(pApp-&gt;LoadIcon(IDI_RED));
m_TBarImages.Add(pApp-&gt;LoadIcon(IDI_YELL));
m_TBarImages.Add(pApp-&gt;LoadIcon(IDI_WHI));

m_TBarDis.Create(16, 16, ILC_COLOR, 4, 4);
m_TBarDis.Add(pApp-&gt;LoadIcon(IDI_DIS_BLK));
m_TBarDis.Add(pApp-&gt;LoadIcon(IDI_DIS_RED));
m_TBarDis.Add(pApp-&gt;LoadIcon(IDI_DIS_YELL));
m_TBarDis.Add(pApp-&gt;LoadIcon(IDI_DIS_WHI));

m_wndToolBar.SetImageList(&amp;m_TBarImages);
m_wndToolBar.SetDisabledImageList(&amp;m_TBarDis);
</CODE></PRE>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The image lists used by the toolbar object must be permanent objects. For this reason, they are commonly data members of an MFC class; in this example, the main frame window class.</P>

<P>Once the image lists are associated with the <B>CToolBarCtrl</B> object, the framework automatically displays the proper button image.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_control_topics.htm#_core_windows_common_controls_and_mfc_classes">Windows Common Controls and MFC Classes</A></P>
</font>
</BODY>
</HTML>
