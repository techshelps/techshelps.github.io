<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>clock</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_clock"></A><SUP></SUP>clock</H1>

<P>Calculates the processor time used by the calling process.</P>

<P><B>clock_t</B> <B>clock(</B> <B>void</B> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Routine</B></TD>
<TD class=label width=26%><B>Required Header</B></TD>
<TD class=label width=58%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>clock</B></TD>
<TD width=26%>&lt;time.h&gt;</TD>
<TD width=58%>ANSI, Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>clock</B> returns the number of clock ticks of elapsed processor time. The returned value is the product of the amount of time that has elapsed since the start of a process and the value of the <B>CLOCKS_PER_SEC</B> constant. If the amount of elapsed time is unavailable, the function returns –1, cast as a <B>clock_t</B>.</P>

<P class=label><B>Remarks</B></P>

<P>The <B>clock</B> function tells how much processor time the calling process has used. The time in seconds is approximated by dividing the clock return value by the value of the <B>CLOCKS_PER_SEC</B> constant. In other words, <B>clock</B> returns the number of processor timer ticks that have elapsed. A timer tick is approximately equal to 1/<B>CLOCKS_PER_SEC</B> second. In versions of Microsoft C before 6.0, the <B>CLOCKS_PER_SEC</B> constant was called <B>CLK_TCK</B>.</P>

<P class=label><B>Example </B></P>

<PRE><CODE>/* CLOCK.C: This example prompts for how long
 * the program is to run and then continuously
 * displays the elapsed time for that period.
 */

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

void sleep( clock_t wait );

void main( void )
{
   long    i = 600000L;
   clock_t start, finish;
   double  duration;

   /* Delay for a specified time. */
   printf( "Delay for three seconds\n" );
   sleep( (clock_t)3 * CLOCKS_PER_SEC );
   printf( "Done!\n" );

   /* Measure the duration of an event. */
   printf( "Time to do %ld empty loops is ", i );
   start = clock();
   while( i-- ) 
      ;
   finish = clock();
   duration = (double)(finish - start) / CLOCKS_PER_SEC;
   printf( "%2.1f seconds\n", duration );
}

/* Pauses for a specified number of milliseconds. */
void sleep( clock_t wait )
{
   clock_t goal;
   goal = wait + clock();
   while( goal &gt; clock() )
      ;
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Delay for three seconds
Done!
Time to do 600000 empty loops is 0.1 seconds
 

</CODE></PRE>

<P><A HREF="_crt_time_management.htm">Time Management Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_difftime.htm">difftime</A>, <A HREF="_crt_time.htm">time</A></P>
</font>
</BODY>
</HTML>
