<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_tempnam, _wtempnam, tmpnam, _wtmpnam</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__tempnam.2c_._wtempnam.2c_.tmpnam.2c_._wtmpnam"></A><SUP></SUP>_tempnam, _wtempnam, tmpnam, _wtmpnam</H1>

<P>Create temporary filenames.</P>

<P><B>char</B> <B>*_tempnam(</B> <B>char</B> <B>*</B><I>dir</I><B>,</B> <B>char</B> <B>*</B><I>prefix</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*_wtempnam(</B> <B>wchar_t</B> <B>*</B><I>dir</I><B>,</B> <B>wchar_t</B> <B>*</B><I>prefix</I> <B>);</B></P>

<P><B>char</B> <B>*tmpnam(</B> <B>char</B> <B>*</B><I>string</I> <B>);</B></P>

<P><B>wchar_t</B> <B>*_wtmpnam(</B> <B>wchar_t</B> <B>*</B><I>string</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=20%><B>Routine</B></TD>
<TD class=label width=35%><B>Required Header</B></TD>
<TD class=label width=45%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=20%><B>_tempnam</B></TD>
<TD width=35%>&lt;stdio.h&gt;</TD>
<TD width=45%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=20%><B>_wtempnam</B></TD>
<TD width=35%>&lt;stdio.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=45%>Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=20%><B>tmpnam</B></TD>
<TD width=35%>&lt;stdio.h&gt;</TD>
<TD width=45%>ANSI, Win 95, Win NT</TD>
</TR>

<TR VALIGN="top">
<TD width=20%><B>_wtmpnam</B></TD>
<TD width=35%>&lt;stdio.h&gt; or &lt;wchar.h&gt;</TD>
<TD width=45%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P>Each of these functions returns a pointer to the name generated, unless it is impossible to create this name or the name is not unique. If the name cannot be created or if a file with that name already exists, <B>tmpnam</B> and <B>_tempnam</B> return <B>NULL</B>. <B>_tempnam</B> and <B>_wtempnam</B> also return <B>NULL</B> if the file search fails.</P>

<P class=indent><B><B>Note</B></B>&nbsp;&nbsp;&nbsp;The pointer returned by <B>tmpnam</B> points to an internal static buffer. <A HREF="_crt_free.htm">free</A> does not need to be called to deallocate this pointer.</P>

<P class=label><B>Parameters</B></P>

<P class=dt><I>prefix</I></P>

<P class=indent>Filename prefix</P>

<P class=dt><I>dir</I></P>

<P class=indent>Target directory to be used if TMP not defined</P>

<P class=dt><I>string</I></P>

<P class=indent>Pointer to temporary name</P>

<P class=label><B>Remarks</B></P>

<P>The <B>tmpnam</B> function generates a temporary filename that can be used to open a temporary file without overwriting an existing file. </P>

<P>This name is stored in <I>string</I>. If <I>string</I> is <B>NULL</B>, then <B>tmpnam</B> leaves the result in an internal static buffer. Thus any subsequent calls destroy this value. If <I>string</I> is not <B>NULL</B>, it is assumed to point to an array of at least <B>L_tmpnam</B> characters — or 2*<B>L_tmpnam</B> bytes. The value of <B>L_tmpnam</B> is defined in STDIO.H. The function generates unique filenames for up to <B>TMP_MAX</B> calls.</P>

<P>The character string that <B>tmpnam</B> creates consists of the path prefix, defined by the entry <B>P_tmpdir</B> in the file STDIO.H, followed by a sequence consisting of the digit characters '0' through '9'; the numerical value of this string is in the range 1 – 65,535. Changing the definitions of <B>L_tmpnam</B> or <B>P_tmpdir</B> in STDIO.H does not change the operation of <B>tmpnam</B>.</P>

<P><B>_tempnam</B> creates a temporary filename for use in another directory. This filename is different from that of any existing file. The <I>prefix</I> argument is the prefix to the filename. <B>_tempnam</B> uses <A HREF="_crt_malloc.htm">malloc</A> to allocate space for the filename; the program is responsible for freeing this space when it is no longer needed. <B>_tempnam</B> looks for the file with the given name in the following directories, listed in order of precedence.</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=39%><B>Directory Used</B></TD>
<TD class=label width=61%><B>Conditions</B></TD>
</TR>

<TR VALIGN="top">
<TD width=39%>Directory specified by <B>TMP</B> </TD>
<TD width=61%><B>TMP</B> environment variable is set, and directory specified by <B>TMP</B> exists.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%><I>dir</I> argument to <B>_tempnam</B></TD>
<TD width=61%><B>TMP</B> environment variable is not set, or directory specified by <B>TMP</B> does not exist.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%><B>P_tmpdir</B> in STDIO.H</TD>
<TD width=61%><I>dir</I> argument is <B>NULL</B>, or <I>dir</I> is name of nonexistent directory.</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>Current working directory </TD>
<TD width=61%><B>P_tmpdir</B> does not exist.</TD>
</TR>
</TABLE><BR>

<P><B>_tempnam</B> and <B>tmpnam</B> automatically handle multibyte-character string arguments as appropriate, recognizing multibyte-character sequences according to the OEM code page obtained from the operating system. <B>_wtempnam</B> is a wide-character version of <B>_tempnam</B>; the arguments and return value of <B>_wtempnam</B> are wide-character strings. <B>_wtempnam</B> and <B>_tempnam</B> behave identically except that <B>_wtempnam</B> does not handle multibyte-character strings. <B>_wtmpnam</B> is a wide-character version of <B>tmpnam</B>; the argument and return value of <B>_wtmpnam</B> are wide-character strings. <B>_wtmpnam</B> and <B>tmpnam</B> behave identically except that <B>_wtmpnam</B> does not handle multibyte-character strings.</P>

<P class=label><B>Generic-Text Routine Mappings</B></P>

<TABLE border=1 cellpadding=5 cols=4 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>TCHAR.H Routine </B></TD>
<TD class=label width=29%><B>_UNICODE &amp; _MBCS Not Defined</B></TD>
<TD class=label width=26%><B>_MBCS Defined</B></TD>
<TD class=label width=28%><B>_UNICODE Defined</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_ttmpnam</TD>
<TD width=29%>tmpnam</TD>
<TD width=26%>tmpnam</TD>
<TD width=28%>_wtmpnam</TD>
</TR>

<TR VALIGN="top">
<TD width=17%>_ttempnam</TD>
<TD width=29%>_tempnam</TD>
<TD width=26%>_tempnam</TD>
<TD width=28%>_wtempnam </TD>
</TR>
</TABLE><BR>

<P class=label><B>Example</B></P>

<PRE><CODE>/* TEMPNAM.C: This program uses tmpnam to create a unique
 * filename in the current working directory, then uses
 * _tempnam to create a unique filename with a prefix of stq.
 */

#include &lt;stdio.h&gt;

void main( void )
{
   char *name1, *name2;

   /* Create a temporary filename for the current working directory: */
   if( ( name1 = tmpnam( NULL ) ) != NULL )
      printf( "%s is safe to use as a temporary file.\n", name1 );
   else
      printf( "Cannot create a unique filename\n" );

   /* Create a temporary filename in temporary directory with the
    * prefix "stq". The actual destination directory may vary
    * depending on the state of the TMP environment variable and
    * the global variable P_tmpdir.
    */
   if( ( name2 = _tempnam( "c:\\tmp", "stq" ) ) != NULL )
      printf( "%s is safe to use as a temporary file.\n", name2 );
   else
      printf( "Cannot create a unique filename\n" );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>\s5d. is safe to use as a temporary file.
C:\temp\stq2 is safe to use as a temporary file.

</CODE></PRE>

<P><A HREF="_crt_stream_i.2f.o.htm">Stream I/O Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt__getmbcp.htm">_getmbcp</A>, <A HREF="_crt_malloc.htm">malloc</A>, <A HREF="_crt__setmbcp.htm">_setmbcp</A>, <A HREF="_crt_tmpfile.htm">tmpfile</A></P>
</font>
</BODY>
</HTML>
