<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Controls: Adding Custom Properties</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="circle sample start">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_DISP_PROPERTY">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Circle special effects">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_DISP_PROPERTY_NOTIFY">
</OBJECT>
<OBJECT ID="hhobj_6" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Circle custom notification">
</OBJECT>
<OBJECT ID="hhobj_7" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_mfc_DISP_PROPERTY_EX">
</OBJECT>
<OBJECT ID="hhobj_8" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_COleControl.3a3a.SetModifiedFlag">
</OBJECT>
<OBJECT ID="hhobj_9" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Circle custom getset">
</OBJECT>
<OBJECT ID="hhobj_10" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_MFC_COleControl">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_activex_controls.3a_.adding_custom_properties"></A>ActiveX Controls: Adding Custom Properties</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_activex_controls.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_activex_control_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_frequently_asked_questions_about_activex_controls.htm">FAQ</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Tutorial</A>  |&nbsp; <A HREF="_core_activex_control_sample_list.htm">Sample</A></P>

<P>Custom properties differ from stock properties in that custom properties are not already implemented by the <B>COleControl</B> class. A custom property is used to expose a certain state or appearance of an ActiveX control to a programmer using the control.</P>

<P>This article describes how to add a custom property to the ActiveX control using ClassWizard and explains the resulting code modifications. Topics include:

<UL type=disc>
	<LI><A HREF="#_core_using_classwizard_to_add_a_custom_property">Using ClassWizard to add a custom property</A><BR><BR></LI>

	<LI><A HREF="#_core_classwizard_changes_for_custom_properties">ClassWizard changes for custom properties</A></LI>
</UL>

<P>Custom properties come in four varieties of implementation: Member Variable, Member Variable with Notification, Get/Set Methods, and Parameterized.

<UL type=disc>
	<LI>Member Variable Implementation
<P class=tl>This implementation represents the property’s state as a member variable in the control class. Use the Member Variable implementation when it is not important to know when the property value changes. Of the three types, this implementation creates the least amount of support code for the property. The dispatch map entry macro for member variable implementation is <A HREF="JavaScript:hhobj_3.Click()">DISP_PROPERTY</A>. For a detailed example of this implementation, see <A HREF="JavaScript:hhobj_4.Click()">Adding Special Effects</A>, in <I>Tutorials</I>.</P></LI>

	<LI>Member Variable with Notification Implementation
<P class=tl>This implementation consists of a member variable and a notification function created by ClassWizard. The notification function is automatically called by the framework after the property value changes. Use the Member Variable with Notification implementation when you need to be notified after a property value has changed. This implementation requires more time because it requires a function call. The dispatch map entry macro for this implementation is <A HREF="JavaScript:hhobj_5.Click()">DISP_PROPERTY_NOTIFY</A>. For a detailed example of this implementation, see <A HREF="JavaScript:hhobj_6.Click()">Adding a Custom Notification Property</A> in <I>Tutorials</I>.</P></LI>

	<LI>Get/Set Methods Implementation
<P class=tl>This implementation consists of a pair of member functions in the control class. The Get/Set Methods implementation automatically calls the Get member function when the control’s user requests the current value of the property and the Set member function when the control’s user requests that the property be changed. Use this implementation when you need to compute the value of a property during run time, validate a value passed by the control’s user before changing the actual property, or implement a read- or write-only property type. The dispatch map entry macro for this implementation is <A HREF="JavaScript:hhobj_7.Click()">DISP_PROPERTY_EX</A>. The following section, <A HREF="#_core_using_classwizard_to_add_a_custom_property">Using ClassWizard to Add a Custom Property</A>, uses the CircleOffset custom property to demonstrate this implementation.</P></LI>

	<LI>Parameterized Implementation
<P class=tl>Parameterized implementation is supported by ClassWizard. A parameterized property (sometimes called a property array) can be used to access a set of values through a single property of your control. The dispatch map entry macro for this implementation is <B>DISP_PROPERTY_PARAM</B>. For more information on implementing this type, see <A HREF="_core_activex_controls.3a_.advanced_topics.htm#_core_implementing_a_parameterized_property">Implementing a Parameterized Property</A> in the article “ActiveX Controls: Advanced Topics”.</P></LI>
</UL>



<H2><A NAME="_core_using_classwizard_to_add_a_custom_property"></A>Using ClassWizard to Add a Custom Property</H2>

<P>The following procedure demonstrates adding a custom property, CircleOffset, which uses the Get/Set Methods implementation. The CircleOffset custom property allows the control’s user to offset the circle from the center of the control’s bounding rectangle. The procedure for adding custom properties with an implementation other than Get/Set Methods is very similar.</P>

<P>This same procedure can also be used to add other custom properties you desire. Simply substitute your custom property name for the CircleOffset property name and parameters.</P>

<P class=label><B>To add the CircleOffset custom property using ClassWizard</B>

<OL>
	<LI>Load your control’s project.<BR><BR></LI>

	<LI>On the <B>View </B>menu, click <B>ClassWizard</B>.<BR><BR></LI>

	<LI>Click the <B>Automation</B> tab.<BR><BR></LI>

	<LI>Select the control’s class from the <B>Class Name</B> box.<BR><BR></LI>

	<LI>Click <B>Add Property</B>.<BR><BR></LI>

	<LI>In the <B>External Name</B> box, type <CODE>CircleOffset</CODE>.<BR><BR></LI>

	<LI>In the <B>Implementation </B>box, click <B>Get/Set Methods</B>.<BR><BR></LI>

	<LI>In the <B>Type </B>box, select <B>short </B>for the property’s type.<BR><BR></LI>

	<LI>Type unique names for your Get and Set Functions, or accept the default names.<BR><BR></LI>

	<LI>Click <B>OK </B>to close the <B>Add Property</B> dialog box.<BR><BR></LI>

	<LI>Click <B>OK </B>to confirm your choices and close <B>ClassWizard</B>.</LI>
</OL>

<H2><A NAME="_core_classwizard_changes_for_custom_properties"></A>ClassWizard Changes for Custom Properties</H2>

<P>When you add the CircleOffset custom property, ClassWizard makes changes to the header (.H) and the implementation (.CPP) files of the control class.</P>

<P>The following lines are added to the .H file to declare two functions called <CODE>GetCircleOffset</CODE> and <CODE>SetCircleOffset</CODE>:</P>

<PRE><CODE>afx_msg short GetCircleOffset( );
afx_msg void SetCircleOffset(short nNewValue);
</CODE></PRE>

<P>The following line is added to your control’s .ODL file:</P>

<PRE><CODE>[id(1)] short CircleOffset;
</CODE></PRE>

<P>This line assigns the CircleOffset property a specific ID number, taken from the method’s position in the methods and properties list of ClassWizard.</P>

<P>In addition, the following line is added to the dispatch map (in the .CPP file of the control class) to map the CircleOffset property to the control’s two handler functions:</P>

<PRE><CODE>DISP_PROPERTY_EX(CSampleCtrl,"CircleOffset", 
   GetCircleOffset, SetCircleOffset, VT_I2)
</CODE></PRE>

<P>Finally, the implementations of the <CODE>GetCircleOffset</CODE> and <CODE>SetCircleOffset</CODE> functions are added to the end of the control’s .CPP file. In most cases, you will modify the Get function to return the value of the property. The Set function will usually contain code that should be executed either before or after the property changes.</P>

<PRE><CODE>void CFooCtrl::SetCircleOffset(short nNewValue) 
{
   // TODO: Add your property handler here
   SetModifiedFlag();
}
</CODE></PRE>

<P>Note that ClassWizard automatically adds a call, to <A HREF="JavaScript:hhobj_8.Click()">SetModifiedFlag</A>, to the body of the Set function. Calling this function marks the control as modified. If a control has been modified, its new state will be saved when the container is saved. This function should be called whenever a property, saved as part of the control’s persistent state, changes value.</P>

<P>For a detailed implementation of the CircleOffset property, see <A HREF="JavaScript:hhobj_9.Click()">Adding a Custom Get/Set Property</A> in <I>Tutorials</I>.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_activex_controls.3a_.properties.htm">ActiveX Controls: Properties</A>, <A HREF="_core_activex_controls.3a_.methods.htm">ActiveX Controls: Methods</A>, <A HREF="JavaScript:hhobj_10.Click()">COleControl</A></P>
</font>
</BODY>
</HTML>
