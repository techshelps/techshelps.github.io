<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Help: Authoring Help Topics</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addui_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_Sample_mfc_scribble">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble help">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble help">
</OBJECT>
<OBJECT ID="hhobj_5" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble help">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_help.3a_.authoring_help_topics"></A>Help: Authoring Help Topics</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_help.3a_.context.2d.sensitive_help_overview.htm">Overview</A>  |&nbsp; <A HREF="_core_help_tasks.3a_.context.2d.sensitive_help_for_your_programs.htm">How Do I</A>  |&nbsp; <A HREF="JavaScript:hhobj_2.Click()">Sample</A>  |&nbsp; <A HREF="JavaScript:hhobj_3.Click()">Tutorial</A></P>

<P>The framework manages navigation from application user interfaces to help contexts. Implementing further navigation within the Help file is the domain of help authoring rather than programming. The purpose of this article is to describe the general process of authoring and editing Help topic files. Topics covered include:

<UL type=disc>
	<LI><A HREF="#_core_editing_the_starter_..rtf_files">Editing the starter .RTF files</A><BR><BR></LI>

	<LI><A HREF="#_core_help_topics_in_the_..rtf_file">Help topics in the .RTF file</A><BR><BR></LI>

	<LI><A HREF="#_core_topic_examples">Topic examples</A></LI>
</UL>

<P>The following article helps you begin testing your help files:</P>

<P><A HREF="_core_help.3a_.compiling_and_testing_your_help_file.htm">Compiling and testing your Help file</A></P>

<P>For details about authoring and compiling Windows Help, see the <I>Help Compiler User’s Guide</I>. </P>

<P>The following figure shows the general process for creating a Help system for your application.&nbsp; </P>

<P class=label><B>Preparing Help Files</B></P>

<P><IMG SRC="vc4x4s1.gif" ALT="" BORDER=0></P>

<P>For an example of preparing Help files, see <A HREF="JavaScript:hhobj_4.Click()">Adding Context-Sensitive Help</A> in <I>Tutorials</I>.</P>

<P>Editing the Help topics for any application is too big a task to work through in just one article; however, a few examples will help you get started. The examples in this article were edited with Microsoft Word for Windows, but you can use any application that can edit rich text format (.RTF) files. To make the following discussion concrete, the examples are drawn from the Scribble tutorial program, presented in <I>Tutorials</I>. If you want to see how Help is prepared for Scribble, look at <A HREF="JavaScript:hhobj_5.Click()">Adding Context-Sensitive Help</A> in <I>Tutorials</I>.</P>

<P>When you run AppWizard to start the Scribble tutorial, the wizard creates not only source code files, but also a set of files in rich text format (.RTF). These files contain starter Help topics for many of the user-interface elements that Scribble will have, including its menu commands. To complete a Help file for Scribble, follow the steps outlined in this group of Help articles. Then edit the .RTF files to fill in help material that AppWizard couldn’t supply. </P>

<P>You can easily upgrade your Help project files to a 4.0 format with the Windows 4.0 Help compiler included with Visual C++ version 4.0. This gives you access to the Windows 4.0 Help Workshop, a graphical help authoring environment with many useful features. Before you port any of your applications to other platforms, you must make sure that those platforms have a compiler that’s compatible with the 4.0 Help project file before upgrading.</P>

<P>The discussion in the rest of this article takes you through part of that process to illustrate the techniques and to point out some guidelines and tips. Scribble is used here merely as an example.</P>



<H2><A NAME="_core_editing_the_starter_..rtf_files"></A>Editing the Starter .RTF Files</H2>

<P>The .RTF files that AppWizard creates for an application such as Scribble&nbsp; contain starter Help topics for many elements of the Windows user interface. Some of them are fairly complete, while others are skeletal and must be filled out. </P>

<P>If you want to customize the Help topics supplied by AppWizard, you must do the following, using all of the .RTF files in your project’s HLP subdirectory (for example, \MYSCRIB\HLP):

<UL type=disc>
	<LI>Globally replace the placeholder string “&lt;&lt;YourApp&gt;&gt;” in the .RTF files with the name of the application: for example, replace “&lt;&lt;YourApp&gt;&gt;” with “Scribble”.<BR><BR></LI>

	<LI>From the Help topics, remove any references to menu items absent in your application.&nbsp; Add any additional menu items to the .CNT file, which contains the information needed to create the Help Contents screen.
<P class=tl>For example, file PEN.RTF contains a topic for the Edit Links command, which Scribble doesn’t support.</P></LI>

	<LI>Replace the directives in the Help topics with your own information. These directives are bracketed by &lt;&lt; and &gt;&gt; symbols.
<P class=tl>Notice that because the class library predefines <B>ID_EDIT_CLEAR_ALL</B>, Scribble’s file PEN.RTF already contains a Help topic for the Clear All command added to the Edit menu in the Scribble tutorial. However, the skeletal directive for such commands, “&lt;&lt; Write application-specific help here. &gt;&gt;,” needs to be replaced with a real description.</P></LI>

	<LI>Add topics for new commands and dialog boxes.
<P class=tl>Examine the listing of RESOURCE.H in <A HREF="_core_help.3a_.the_makehm_and_makehelp..bat_tools.htm#_core_example_help_contexts">Example Help Contexts</A> in the article <A HREF="_core_help.3a_.the_makehm_and_makehelp..bat_tools.htm">Help: The MakeHm Tool</A>. It lists the following Help topics (as seen in Scribble):</P>
<UL type=disc>
	<LI>Two resource-related HIDs (<B>HIDR_</B> ), for menus and related resources<BR><BR></LI>

	<LI>Two dialog-box HIDs (<B>HIDD_</B> ), for the About and Pen Widths dialog boxes<BR><BR></LI>

	<LI>Two command HIDs (<B>HID_</B> ), for the Thick Line and Pen Widths commands</LI>
</UL>

<P class=tl>In the Scribble tutorial, the Pen Widths dialog box is new, so new Help topics are needed for the dialog box and for two new commands. (The About dialog box is created by AppWizard, so it already has a topic in PEN.RTF.) </P></LI>
</UL>



<H2><A NAME="_core_help_topics_in_the_..rtf_file"></A>Help Topics in the .RTF File</H2>

<P>Help topics in an .RTF file are separated by hard page breaks. Each topic has a name and a footnote symbol (#). </P>

<P>The footnote symbol (#) identifies a context string in the .RTF file as a jump or a popup. When the user clicks on a hot-link to a context string, a jump takes the user to another topic screen in the Help system, while a popup displays a small popup window containing extra information.</P>

<P>Other possible footnote symbols identify keywords for searching (K) and topic names ($). For more information, see the <I>Tools User’s Guide</I> in the Win32 SDK. If you’re using Word for Windows for .RTF files, you can examine the file PEN.RTF with hidden text displayed.</P>

<H2><A NAME="_core_topic_examples"></A>Topic Examples</H2>

<P>To illustrate the process of adding topics, this topic shows the structure needed for a user to jump from the main contents screen in Help to a screen showing general information about the new Pen menu, and from there to screens that describe the Scribble tutorial application’s two Pen menu commands. These items are added to the PEN.RTF file.</P>



<H2><A NAME="_core_the_main_contents_screen"></A>The Main Contents Screen</H2>

<P>The following figure shows the Help topic for the main contents screen as it appears in Microsoft Word for Windows (with hidden text displayed). The screen contains entries for six menus: File, Edit, View, Pen, Window, and Help. The Pen menu is Scribble-specific, so this jump has been added. The others are created by AppWizard.&nbsp; </P>

<P class=label><B>The Main Contents Screen in PEN.RTF</B></P>

<P><IMG SRC="mhmisp.gif" ALT="" BORDER=0></P>

<P>Each of the menu names on this screen is a “hot spot” that links to another topic. By clicking this hot spot, the user can jump to another screen in the Help system. If you examine this screen in the PEN.RTF file using Word for Windows, you see that the menu names—such as Pen Menu— are formatted with double underlining. (This might be represented differently by another RTF editor.) Each menu name is followed immediately by a context name formatted as hidden text. For the Pen menu, this text reads “menu_pen.”</P>



<H3><A NAME="_core_the_pen_menu_screen"></A>The Pen Menu Screen</H3>

<P>The following figure shows the text in PEN.RTF for a Help screen about the Pen Menu topic. The upper part of the figure shows the text of the file; the lower part shows footnote text. All formatting and hidden text are displayed. </P>

<P class=label><B>The Pen Menu Topic in the PEN.RTF File</B></P>

<P><IMG SRC="mhpmtp.gif" ALT="" BORDER=0></P>

<P>The topic screen begins with a hard page break. The next line shows the footnote character, #, followed by the title to be displayed on the user’s screen, “Pen menu commands.” The rest of the screen contains descriptive text and two more hot spots for jumping to screens about the individual menu items.</P>

<P>The footnote text associated with the # footnote for the Pen menu is “menu_pen,” which is the help context. Jumps to this screen of the Help system must specify this help context.</P>

<P>Setting up this screen requires entering the hard page break and the footnote, then writing the text. In Word for Windows, for example, you use the Break command on the Insert menu to enter a hard page break. Then you use the Footnote entry on the Insert menu to specify a footnote with the special footnote character #.</P>

<P>Next, type the footnote text in the footnote window. Finally, type the descriptive text and format the hot-links.</P>

<P>A hot-link consist of the two parts:

<UL type=disc>
	<LI>Visible text, such as “Pen Widths,” formatted as double underlined, to designate how the hot-link looks onscreen.<BR><BR></LI>

	<LI>Hidden text, such as “pen_widths,” to designate the help context of the destination topic.</LI>
</UL>

<P>In the RTF files that AppWizard supplies, tables (as in Word for Windows) are used to present groups of jumps, but help authors are not required to use tables.</P>



<H3><A NAME="_core_a_screen_for_a_menu_item"></A>A Screen for a Menu Item</H3>

<P>The following figure shows a screen for the Pen Widths and Thick Line menu items. </P>

<P class=label><B>The Pen Widths and Thick Line Topics in the PEN.RTF File</B></P>

<P><IMG SRC="mhpwtl.gif" ALT="" BORDER=0></P>

<P>The screen is set up similarly to its parent screen for the Pen menu as a whole. Notice the text used for the footnotes in the lower part of the figure. </P>
</font>
</BODY>
</HTML>
