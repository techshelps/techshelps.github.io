<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Locale</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt_locale"></A><SUP></SUP>Locale</H1>

<P>Use the <A HREF="_crt_setlocale.2c_._wsetlocale.htm">setlocale</A> function to change or query some or all of the current program locale information. “Locale” refers to the locality (the country and language) for which you can customize certain aspects of your program. Some locale-dependent categories include the formatting of dates and the display format for monetary values. For more information, see <A HREF="_crt_locale_categories.htm">Locale Categories</A>. </P>

<P class=label><B><A NAME="_crt_locale.2d.dependent_routines"></A>Locale-Dependent Routines</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=25%><B><BR>
Routine</B></TD>
<TD class=label width=43%><B><BR>
Use</B></TD>
<TD class=label width=32%><B>setlocale</B> <B>Category <BR>
Setting Dependence</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_atof.2c_.atoi.2c_._atoi64.2c_.atol.htm">atof, atoi, atol</A></TD>
<TD width=43%>Convert character to floating-point, integer, or long integer value, respectively</TD>
<TD width=32%><B>LC_NUMERIC</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_is.2c_.isw_routines.htm">is Routines</A></TD>
<TD width=43%>Test given integer for particular condition.</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_isleadbyte.htm">isleadbyte</A></TD>
<TD width=43%>Test for lead byte ()</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_localeconv.htm">localeconv</A></TD>
<TD width=43%>Read appropriate values for formatting numeric quantities</TD>
<TD width=32%><B>LC_MONETARY</B>, <B>LC_NUMERIC</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_mb_cur_max.htm">MB_CUR_MAX</A></TD>
<TD width=43%>Maximum length in bytes of any multibyte character in current locale (macro defined in STDLIB.H)</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__mbccpy.htm">_mbccpy</A></TD>
<TD width=43%>Copy one multibyte character</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__mbclen.2c_.mblen.htm">_mbclen</A></TD>
<TD width=43%>Return length, in bytes, of given multibyte character</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__mbclen.2c_.mblen.htm">mblen</A></TD>
<TD width=43%>Validate and return number of bytes in multibyte character</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_strlen.2c_.wcslen.2c_._mbslen.2c_._mbstrlen.htm">_mbstrlen</A></TD>
<TD width=43%>For multibyte-character strings: validate each character in string; return string length </TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_mbstowcs.htm">mbstowcs</A></TD>
<TD width=43%>Convert sequence of multibyte characters to corresponding sequence of wide characters</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_mbtowc.htm">mbtowc</A></TD>
<TD width=43%>Convert multibyte character to corresponding wide character</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_printf.2c_.wprintf.htm">printf</A> functions</TD>
<TD width=43%>Write formatted output</TD>
<TD width=32%><B>LC_NUMERIC</B> (determines radix character output)</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_scanf.2c_.wscanf.htm">scanf</A> functions</TD>
<TD width=43%>Read formatted input</TD>
<TD width=32%><B>LC_NUMERIC</B> (determines radix character recognition)</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_setlocale.2c_._wsetlocale.htm">setlocale, _wsetlocale</A></TD>
<TD width=43%>Select locale for program</TD>
<TD width=32%>Not applicable</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_strcoll.2c_.wcscoll.2c_._mbscoll.htm">strcoll, wcscoll</A></TD>
<TD width=43%>Compare characters of two strings</TD>
<TD width=32%><B>LC_COLLATE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__stricoll.2c_._wcsicoll.2c_._mbsicoll.htm">_stricoll, _wcsicoll</A></TD>
<TD width=43%>Compare characters of two strings (case insensitive)</TD>
<TD width=32%><B>LC_COLLATE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__strncoll.2c_._wcsncoll.2c_._mbsncoll.htm">_strncoll, _wcsncoll</A></TD>
<TD width=43%>Compare first <I>n</I> characters of two strings </TD>
<TD width=32%><B>LC_COLLATE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__strnicoll.2c_._wcsnicoll.2c_._mbsnicoll.htm">_strnicoll, _wcsnicoll</A></TD>
<TD width=43%>Compare first <I>n</I> characters of two strings (case insensitive)</TD>
<TD width=32%><B>LC_COLLATE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_strftime.2c_.wcsftime.htm">strftime, wcsftime</A></TD>
<TD width=43%>Format date and time value according to supplied <I>format</I> argument</TD>
<TD width=32%><B>LC_TIME</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__strlwr.2c_._wcslwr.2c_._mbslwr.htm">_strlwr</A></TD>
<TD width=43%>Convert, in place, each uppercase letter in given string to lowercase</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_strtod.2c_.wcstod.htm">strtod, wcstod</A>, <A HREF="_crt_strtol.2c_.wcstol.htm">strtol, wcstol</A>, <A HREF="_crt_strtoul.2c_.wcstoul.htm">strtoul, wcstoul</A></TD>
<TD width=43%>Convert character string to double, long, or unsigned long value</TD>
<TD width=32%><B>LC_NUMERIC</B> (determines radix character recognition)</TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__strupr.2c_._wcsupr.2c_._mbsupr.htm">_strupr</A></TD>
<TD width=43%>Convert, in place, each lowercase letter in string to uppercase</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_strxfrm.2c_.wcsxfrm.htm">strxfrm, wcsxfrm</A></TD>
<TD width=43%>Transform string into collated form according to locale</TD>
<TD width=32%><B>LC_COLLATE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_to_functions.htm">tolower, towlower</A></TD>
<TD width=43%>Convert given character to corresponding lowercase character</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_to_functions.htm">toupper, towupper</A></TD>
<TD width=43%>Convert given character to corresponding uppercase letter</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_wcstombs.htm">wcstombs</A></TD>
<TD width=43%>Convert sequence of wide characters to corresponding sequence of multibyte characters</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt_wctomb.htm">wctomb</A></TD>
<TD width=43%>Convert wide character to corresponding multibyte character</TD>
<TD width=32%><B>LC_CTYPE</B></TD>
</TR>

<TR VALIGN="top">
<TD width=25%><A HREF="_crt__wtoi.2c_._wtol.htm">_wtoi, _wtol</A></TD>
<TD width=43%>Convert wide-character string to <B>int</B> or <B>long</B></TD>
<TD width=32%><B>LC_NUMERIC</B></TD>
</TR>
</TABLE><BR>
</font>
</BODY>
</HTML>
