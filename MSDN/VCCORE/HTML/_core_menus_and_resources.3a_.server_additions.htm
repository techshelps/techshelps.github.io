<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Menus and Resources: Server Additions</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_HIERSVR">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="Scribble OLE server">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_sample_mfc_HIERSVR">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_menus_and_resources.3a_.server_additions"></A>Menus and Resources: Server Additions</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_ole_in_mfc.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_ole_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_ole_sample_list.htm">Sample</A>  |&nbsp; <A HREF="_core_ole_tutorial_list.htm">Tutorial</A></P>

<P>This article explains the changes that need to be made to the menus and other resources in a visual editing server (component) application. A server application requires many additions to the menu structure and other resources because it can be started in one of three modes: stand-alone, embedded, or in place. As described in the <A HREF="_core_menus_and_resources_.28.ole.29.htm">Menus and Resources (OLE)</A> article, there are a maximum of four sets of menus. All four are used for an MDI full-server application, while only three are used for a mini-server. AppWizard will create the menu layout necessary for the type of server you want. Some customization may be necessary.</P>

<P>If you don’t use AppWizard, you may want to look at HIERSVR.RC, the resource script for the MFC sample application <A HREF="JavaScript:hhobj_2.Click()">HIERSVR</A>, to see how these changes are implemented. </P>

<P>Topics covered in this article include:

<UL type=disc>
	<LI><A HREF="#_core_server_menu_additions">Server menu additions</A><BR><BR></LI>

	<LI><A HREF="#_core_server_application_accelerator_table_additions">Accelerator table additions</A><BR><BR></LI>

	<LI><A HREF="_core_menus_and_resources.3a_.container_additions.htm#_core_string_table_additions_for_container_applications">String table additions</A><BR><BR></LI>

	<LI><A HREF="#_core_mini.2d.server_additions">Mini-Server additions</A></LI>
</UL>



<H2><A NAME="_core_server_menu_additions"></A>Server Menu Additions</H2>

<P>Server (component) applications must have menu resources added to support OLE visual editing. The menus used when the application is run in stand-alone mode do not have to be changed, but you must add two new menu resources before building the application; one to support in-place activation and one to support the server being fully open. Both menu resources are used by full- and mini-server applications.

<UL type=disc>
	<LI>To support in-place activation, you must create a menu resource that is very similar to the menu resource used when run in stand-alone mode. The difference in this menu is that the File and Window items (and any other menu items that deal with the application, and not the data) are missing. The container application will supply these menu items. For more information on, and an example of, this menu-merging technique, see the article <A HREF="_core_menus_and_resources.3a_.menu_merging.htm">Menus and Resources: Menu Merging</A>. <BR><BR></LI>

	<LI>To support fully open activation, you must create a menu resource nearly identical to the menu resource used when run in stand-alone mode. The only modification to this menu resource is that some items are reworded to reflect the fact that the server is operating on an item embedded in a compound document. For example, in Step 7 of the Scribble tutorial, <A HREF="JavaScript:hhobj_3.Click()">Creating an OLE Server</A>, when the application is open in-place, the Save command on the File menu changes to Save Copy As. </LI>
</UL>

<P>In addition to the changes listed in this article, your resource file needs to include AFXOLESV.RC, which is required for the Microsoft Foundation Class Library implementation. This file is in the MFC\Include subdirectory.</P>



<H2><A NAME="_core_server_application_accelerator_table_additions"></A>Server Application Accelerator Table Additions</H2>

<P>Two new accelerator table resources must be added to server applications; they correspond directly to the new menu resources described above. The first accelerator table is used when the server application is activated in place. It consists of all the entries in the view’s accelerator table except those tied to the File and Window menus.</P>

<P>The second table is nearly an exact copy of the view’s accelerator table. Any differences parallel changes made in the fully open menu mentioned in <A HREF="#_core_server_menu_additions">Server Menu Additions</A>. </P>

<P>For an example of these accelerator table changes, compare the <B>IDR_HIERSVRTYPE_SRVR_IP</B> and <B>IDR_HIERSVRTYPE_SRVR_EMB</B> accelerator tables with <B>IDR_MAINFRAME</B> in the HIERSVR.RC file included in the MFC OLE sample <A HREF="JavaScript:hhobj_4.Click()">HIERSVR</A>. The File and Window accelerators are missing from the in-place table and exact copies of them are in the embedded table.</P>



<H2><A NAME="_core_string_table_additions_for_server_applications"></A>String Table Additions for Server Applications</H2>

<P>Only one string table addition is necessary in a server application — a string to signify that the OLE initialization failed. As an example, here is the string-table entry AppWizard generates:</P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=40%><B>ID</B></TD>
<TD class=label width=60%><B>String</B></TD>
</TR>

<TR VALIGN="top">
<TD width=40%><B>IDP_OLE_INIT_FAILED</B></TD>
<TD width=60%>OLE initialization failed.&nbsp; Make sure that the OLE libraries are the correct version.</TD>
</TR>
</TABLE><BR>



<H2><A NAME="_core_mini.2d.server_additions"></A>Mini-Server Additions</H2>

<P>The same additions apply for mini-servers as those listed above for full-servers. Because a mini-server can’t be run in stand-alone mode, its main menu is much smaller. The main menu created by AppWizard has only a File menu, containing only the items Exit and About. Embedded and in-place menus and accelerators for mini-servers are exactly the same as those for full-servers.</P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_core_menus_and_resources.3a_.menu_merging.htm">Menus and Resources: Menu Merging</A> </P>
</font>
</BODY>
</HTML>
