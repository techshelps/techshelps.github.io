<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_msize</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__msize"></A><SUP></SUP>_msize</H1>

<P>Returns the size of a memory block allocated in the heap.</P>

<P><B>size_t</B> <B>_msize(</B> <B>void</B> <B>*</B><I>memblock</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=17%><B>Routine</B></TD>
<TD class=label width=28%><B>Required Header</B></TD>
<TD class=label width=55%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=17%><B>_msize</B></TD>
<TD width=28%>&lt;malloc.h&gt;</TD>
<TD width=55%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_msize</B> returns the size (in bytes) as an unsigned integer.</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>memblock</I></P>

<P class=indent>Pointer to memory block</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_msize</B> function returns the size, in bytes, of the memory block allocated by a call to <B>calloc</B>, <B>malloc</B>, or <B>realloc</B>.</P>

<P>When the application is linked with a debug version of the C run-time libraries, <B>_msize</B> resolves to <A HREF="_crt__msize_dbg.htm">_msize_dbg</A>. For more information about how the heap is managed during the debugging process, see <A HREF="_core_using_c_run.2d.time_library_debugging_support.htm">Using C Run-Time Library Debugging Support</A>.</P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* REALLOC.C: This program allocates a block of memory for
 * buffer and then uses _msize to display the size of that
 * block. Next, it uses realloc to expand the amount of
 * memory used by buffer and then calls _msize again to
 * display the new amount of memory allocated to buffer.
 */

#include &lt;stdio.h&gt;
#include &lt;malloc.h&gt;
#include &lt;stdlib.h&gt;

void main( void )
{
   long *buffer;
   size_t size;

   if( (buffer = (long *)malloc( 1000 * sizeof( long ) )) == NULL )
      exit( 1 );

   size = _msize( buffer );
   printf( "Size of block after malloc of 1000 longs: %u\n", size );

   /* Reallocate and show new size: */
   if( (buffer = realloc( buffer, size + (1000 * sizeof( long )) )) 
        ==  NULL )
      exit( 1 );
   size = _msize( buffer );
   printf( "Size of block after realloc of 1000 more longs: %u\n", 
            size );

   free( buffer );
   exit( 0 );
}

</CODE></PRE>

<P class=label><B>Output</B></P>

<PRE><CODE>Size of block after malloc of 1000 longs: 4000
Size of block after realloc of 1000 more longs: 8000

</CODE></PRE>

<P><A HREF="_crt_memory_allocation.htm">Memory Allocation Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_calloc.htm">calloc</A>, <A HREF="_crt__expand.htm">_expand</A>, <A HREF="_crt_malloc.htm">malloc</A>, <A HREF="_crt_realloc.htm">realloc</A></P>
</font>
</BODY>
</HTML>
