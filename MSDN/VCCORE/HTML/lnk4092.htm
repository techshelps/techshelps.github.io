<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Linker Tools Warning LNK4092</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="lnk4092"></A><SUP></SUP>Linker Tools Warning LNK4092</H1>

<P class=dt><B>shared section "section" contains relocations; image may not run correctly</B></P>

<P>The linker emits this warning whenever you have a shared section to warn you of a potentially serious problem.</P>

<P>One way to share data between multiple processes is to mark a section as “shared.” Marking a section as shared can cause problems, however. For example, you have a DLL that contains declarations like this in a shared data section:</P>

<PRE><CODE>int var = 1;
int *pvar = &amp;var;
</CODE></PRE>

<P>The linker cannot resolve <CODE>pvar</CODE> because its value depends on where the DLL is loaded in memory, so it puts a relocation record in the DLL. When the DLL is loaded into memory, the address of <CODE>var</CODE> can be resolved and <CODE>pvar</CODE> assigned. If another process loads the same DLL but cannot load it at the same address, the relocation for the address of <CODE>var</CODE> will be wrong because the relocation was applied for the first process's address space.</P>
</font>
</BODY>
</HTML>
