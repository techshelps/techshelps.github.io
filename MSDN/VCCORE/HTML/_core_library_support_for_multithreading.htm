<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Library Support for Multithreading</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>

<TABLE ALIGN=right WIDTH=0 BORDER=0><TR><TD>
<OBJECT ID="hhobj_1" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_vc_addpf_home">
</OBJECT>
<OBJECT ID="hhobj_2" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_CreateThread">
</OBJECT>
<OBJECT ID="hhobj_3" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_EnterCriticalSection">
</OBJECT>
<OBJECT ID="hhobj_4" TYPE="application/x-oleobject" CLASSID="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
	<PARAM NAME="Command" VALUE="ALink">
	<PARAM NAME="DefaultTopic" VALUE="_topic_not_found.htm">
	<PARAM NAME="Item1" VALUE="">
	<PARAM NAME="Item2" VALUE="_win32_LeaveCriticalSection">
</OBJECT>
</TD></TR></TABLE>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_library_support_for_multithreading"></A>Library Support for Multithreading</H1>

<P><A HREF="JavaScript:hhobj_1.Click()">Home</A>  |&nbsp; <A HREF="_core_multithreaded_programs.3a_.overview.htm">Overview</A>  |&nbsp; <A HREF="_core_multithreading_tasks.htm">How Do I</A>  |&nbsp; <A HREF="_core_multithreading_sample_list.htm">Sample</A></P>

<P>If one thread is suspended by the Win32 scheduler while executing the <B>printf</B> function, one of the program’s other threads might start executing. If the second thread also calls <B>printf</B>, data might be corrupted. To avoid this situation, access to static data used by the function must be restricted to one thread at a time. </P>

<P>You do not need to serialize access to stack-based (automatic) variables because each thread has a different stack. Therefore, a function that uses only automatic (stack) variables is reentrant. The standard C run-time libraries, such as LIBC, have a limited number of reentrant functions. A multithread program needing to use C run-time library functions that are normally not reentrant should be built with the multithread library LIBCMT.LIB.</P>



<H2><A NAME="_core_the_multithread_c_libraries.3a_.libcmt..lib_and_msvcrt..lib"></A>The Multithread C Libraries: LIBCMT.LIB and MSVCRT.LIB</H2>

<P>The support library LIBCMT.LIB is a reentrant library for creating multithread programs. The MSVCRT.LIB library, which calls code in the shared MSVCRT40.DLL, is also reentrant. When your application calls functions in these libraries, the following rules may apply:

<UL type=disc>
	<LI>All library calls must use the C (<B>__cdecl</B>) calling convention; programs compiled using other calling conventions (such as <B>__fastcall</B> or <B>__stdcall</B>) must use the standard include files for the run-time library functions they call.<BR><BR></LI>

	<LI>Variables passed to library functions must be passed by value or cast to a pointer.</LI>
</UL>

<P>Programs built with LIBCMT.LIB do not share C run-time library code or data with any dynamic-link libraries they call.</P>



<H2><A NAME="_core_alternatives_to_libcmt..lib_and_msvcrt..lib"></A>Alternatives to LIBCMT.LIB and MSVCRT.LIB</H2>

<P>If you build a multithread program without using LIBCMT.LIB, you must do the following:

<UL type=disc>
	<LI>Use the standard C libraries and limit library calls to the set of reentrant functions.<BR><BR></LI>

	<LI>Use the Win32 API thread management functions, such as <A HREF="JavaScript:hhobj_2.Click()">CreateThread</A>.<BR><BR></LI>

	<LI>Provide your own synchronization for functions that are not reentrant by using Win32 services such as semaphores and the <A HREF="JavaScript:hhobj_3.Click()">EnterCriticalSection</A> and <A HREF="JavaScript:hhobj_4.Click()">LeaveCriticalSection</A> functions.</LI>
</UL>

<P class=indent><B><B>Warning</B></B>&nbsp;&nbsp;&nbsp;The multithread library LIBCMT.LIB includes the <B>_beginthread</B> and <B>_endthread</B> functions. The <B>_beginthread</B> function performs initialization without which many C run-time functions will fail. You must use <B>_beginthread</B> instead of <B>CreateThread</B> in C programs built with LIBCMT.LIB if you intend to call C run-time functions.</P>



<H2><A NAME="_core_the_multithread_libraries_compile_option"></A>The Multithread Libraries Compile Option</H2>

<P>To build a multithread application that uses the C run-time libraries, you must tell the compiler to use a special version of the libraries (LIBCMT.LIB). To select these libraries, first open the Project Settings dialog box (Build menu) and click the C/C++ tab. Select Code Generation from the Category drop-down list box. From the Use Run-Time Library drop-down box, select Multithreaded. Click OK to return to editing.</P>

<P>From the command line, the Multithread Library compiler option (/MT) is the best way to build a multithread program with LIBCMT.LIB. This option, which is automatically set when you specify a multithreaded application when creating a new project, embeds the LIBCMT library name in the object file.</P>
</font>
</BODY>
</HTML>
