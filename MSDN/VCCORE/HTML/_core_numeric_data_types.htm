<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Numeric Data Types</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_core_numeric_data_types"></A>Numeric Data Types</H1>

<P>Normally, passing numeric data does not present a problem. The most important thing to keep in mind when passing numeric types is that in Win32, the C <B>int</B> type is 4 bytes, not 2 bytes, and therefore is equivalent to the Fortran <B>INTEGER*4</B> type. The <B>COMPLEX</B> type is a special case and is discussed in a later section. The following table summarizes equivalent numeric data types for Fortran, MASM, and C/C++.</P>

<P class=label><B>Equivalent Fortran, MASM, and C/C++ Numeric Data Types</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=37%><B>Fortran</B></TD>
<TD class=label width=23%><B>MASM</B></TD>
<TD class=label width=40%><B>C/C++</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>CHARACTER*1</B></TD>
<TD width=23%><B>BYTE</B></TD>
<TD width=40%><B>unsigned char</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>INTEGER*1</B></TD>
<TD width=23%><B>SBYTE</B></TD>
<TD width=40%><B>char</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%>(none)</TD>
<TD width=23%><B>WORD</B></TD>
<TD width=40%><B>unsigned short</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>INTEGER*2</B></TD>
<TD width=23%><B>SWORD</B></TD>
<TD width=40%><B>short</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%>(none)</TD>
<TD width=23%><B>DWORD</B></TD>
<TD width=40%><B>unsigned long</B>, <B>unsigned int</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>INTEGER, INTEGER*4</B></TD>
<TD width=23%><B>SDWORD</B></TD>
<TD width=40%><B>long, int</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>REAL, REAL*4</B></TD>
<TD width=23%><B>REAL4</B></TD>
<TD width=40%><B>float</B></TD>
</TR>

<TR VALIGN="top">
<TD width=37%><B>DOUBLE PRECISION, REAL*8</B></TD>
<TD width=23%><B>REAL8</B></TD>
<TD width=40%><B>double</B></TD>
</TR>
</TABLE><BR>

<P>If a C program passes an unsigned data type to a Fortran routine, the routine can accept the argument as the equivalent signed data type, but you should be careful that the range of the signed type is not exceeded.</P>
</font>
</BODY>
</HTML>
