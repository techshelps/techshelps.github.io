<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_cabs</TITLE>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>


<font face="verdana,arial,helvetica" size="2">
<H1><A NAME="_crt__cabs"></A><SUP></SUP>_cabs</H1>

<P>Calculates the absolute value of a complex number.</P>

<P><B>double</B> <B>_cabs(</B> <B>struct</B> <B>_complex</B> <I>z</I> <B>);</B></P>

<TABLE border=1 cellpadding=5 cols=3 frame=below rules=rows>

<TR VALIGN="top">
<TD class=label width=16%><B>Routine</B></TD>
<TD class=label width=27%><B>Required Header</B></TD>
<TD class=label width=57%><B>Compatibility</B></TD>
</TR>

<TR VALIGN="top">
<TD width=16%><B>_cabs</B></TD>
<TD width=27%>&lt;math.h&gt;</TD>
<TD width=57%>Win 95, Win NT</TD>
</TR>
</TABLE><BR>

<P>For additional compatibility information, see <A HREF="_crt_compatibility.htm">Compatibility</A> in the Introduction.</P>

<P class=label><B>Libraries</B></P>

<TABLE border=1 cellpadding=5 cols=2 frame=below rules=rows>

<TR VALIGN="top">
<TD width=24%>LIBC.LIB</TD>
<TD width=76%>Single thread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>LIBCMT.LIB</TD>
<TD width=76%>Multithread static library, retail version</TD>
</TR>

<TR VALIGN="top">
<TD width=24%>MSVCRT.LIB</TD>
<TD width=76%>Import library for MSVCRT.DLL, retail version</TD>
</TR>
</TABLE><BR>

<P class=label><B>Return Value</B></P>

<P><B>_cabs</B> returns the absolute value of its argument if successful. On overflow <B>_cabs</B> returns <B>HUGE_VAL</B> and sets <B>errno</B> to <B>ERANGE</B>. You can change error handling with <A HREF="_crt__matherr.htm">_matherr</A>.</P>

<P class=label><B>Parameter</B></P>

<P class=dt><I>z</I></P>

<P class=indent>Complex number</P>

<P class=label><B>Remarks</B></P>

<P>The <B>_cabs</B> function calculates the absolute value of a complex number, which must be a structure of type <A HREF="_crt_standard_types.htm">_complex</A>. The structure <I>z</I> is composed of a real component <I>x</I> and an imaginary component <I>y</I>. A call to <B>_cabs</B> produces a value equivalent to that of the expression <B>sqrt(</B> <I>z.x*z.x</I> + <I>z.y</I>*<I>z.y</I> <B>)</B>. </P>

<P class=label><B>Example</B></P>

<PRE><CODE>/* CABS.C: Using _cabs, this program calculates
 * the absolute value of a complex number.
 */
#include &lt;math.h&gt;
#include &lt;stdio.h&gt;

void main( void )
{
   struct _complex number = { 3.0, 4.0 };
   double d;

   d = _cabs( number );
   printf( "The absolute value of %f + %fi is %f\n",
           number.x, number.y, d );
}

Output
The absolute value of 3.000000 + 4.000000i is 5.000000

</CODE></PRE>

<P><A HREF="_crt_floating.2d.point_support.htm">Floating-Point Support Routines</A></P>

<P><B>See Also</B>&nbsp;&nbsp;&nbsp;<A HREF="_crt_abs.htm">abs</A>, <A HREF="_crt_fabs.htm">fabs</A>, <A HREF="_crt_labs.htm">labs</A></P>
</font>
</BODY>
</HTML>
