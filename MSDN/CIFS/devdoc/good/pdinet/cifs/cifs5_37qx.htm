<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SMB header</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_cifs_19"></a>SMB header</h3>
<pre><code>typedef unsigned char UCHAR;          // 8 unsigned bits
typedef unsigned short USHORT;        // 16 unsigned bits
typedef unsigned long ULONG;          // 32 unsigned bits

typedef struct {
    ULONG LowPart;
    LONG HighPart;
} LARGE_INTEGER;                      // 64 bits of data

typedef struct  {
    UCHAR Protocol[4];                // Contains 0xFF,'SMB'
    UCHAR Command;                    // Command code
    union {
        struct {
            UCHAR ErrorClass;         // Error class
            UCHAR Reserved;           // Reserved for future use
            USHORT Error;             // Error code
        } DosError;
        ULONG Status;                 // 32-bit error code
    } Status;
    UCHAR Flags;                      // Flags
    USHORT Flags2;                    // More flags
    union {
        USHORT Pad[6];                // Ensure this section is 12 bytes long
        struct {
            USHORT PidHigh;           // High part of PID
            ULONG  Unused;            // Not used
            ULONG  Unused2;
    } Extra;
    };
    USHORT Tid;                       // Tree identifier
    USHORT Pid;                       // Caller's process id
    USHORT Uid;                       // Unauthenticated user id
    USHORT Mid;                       // multiplex id
    UCHAR  WordCount;                 // Count of parameter words
    USHORT ParameterWords[ WordCount ];    // The parameter words
    USHORT ByteCount;                 // Count of bytes
    UCHAR  Buffer[ ByteCount ];       // The bytes
} SMB_HEADER;
</code></pre>
<p>
All SMBs have identical format up to the <i>ParameterWords</i> fields.  <br>
Different SMBs have a different number and interpretation of  <i>ParameterWords</i> and <i>Buffer</i>.  All reserved fields in the SMB header must be zero.
<ul>
<li>
<i>Command</i> is the operation code which this SMB is requesting, or responding to.</li>
<li>
<i>Status.DosError.ErrorClass</i> and <i>Status.DosError.Error</i> are set by the server and combine to give the error code of any failed server operation.  If the client is capable of receiving 32 bit error returns, the status is returned in <i>status.status</i> instead.  When an error is returned, the server may choose to return only the header portion of the response SMB.</li>
<li>
<i>Flags</i> and <i>Flags2</i> contain bits which, depending on the negotiated protocol dialect, indicate various client capabilities.</li>
<li>
<i>PidHigh</i> is used in the <i>NtCreateAndX</i> request SMB</li>
<li>
<i>Tid</i> identifies the subdirectory, or "tree", on the server which the client is accessing.  SMBs which do not reference a particular tree should set <i>Tid</i> to 0xFFFF.</li>
<li>
<i>Pid</i> is the caller's process id, and is generated by the client to uniquely identify a process within the client computer.</li>
<li>
<i>Mid</i> is reserved for multiplexing multiple messages on a single transport connection.  A response message will always contain the same value as the corresponding request message. The client MUST not have multiple outstanding requests to a server with the same <i>Mid.</i></li>
</ul>
<p>&nbsp;</p></body>
</HTML>
