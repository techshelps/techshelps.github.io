<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WRITE_AND_UNLOCK: Write Bytes and Unlock Range</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_cifs_130"></a><i></i>WRITE_AND_UNLOCK: Write Bytes and Unlock Range</h2>
<p>
This request is used to first write the specified bytes and then unlock them. The locked portion of a file is "safe" to write behind because no other process can access the locked bytes until this process unlocks the bytes.  Thus the client can buffer the locked bytes locally while they are being updated, then when the unlock request is received submit this protocol to both write and then unlock bytes.  Whether or not this SMB is supported (along with <code>SMB_COM_READ_AND_LOCK</code>) is returned in <i>bit0</i> of the <i>flags</i> field of the negotiate response.</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=47%>Client Request<br>
================================</td>
<td width=53%>Description<br>
===================================</td>
</tr>
<tr valign=top>
<td width=47%>UCHAR WordCount;</td>
<td width=53%>Count of parameter words = 5</td>
</tr>
<tr valign=top>
<td width=47%>USHORT Fid;</td>
<td width=53%>File handle</td>
</tr>
<tr valign=top>
<td width=47%>USHORT Count;</td>
<td width=53%>Number of bytes to be written</td>
</tr>
<tr valign=top>
<td width=47%>ULONG Offset;</td>
<td width=53%>Offset in file to begin write</td>
</tr>
<tr valign=top>
<td width=47%>USHORT Remaining;</td>
<td width=53%>Bytes remaining to satisfy request</td>
</tr>
<tr valign=top>
<td width=47%>USHORT ByteCount;</td>
<td width=53%>Count of data bytes</td>
</tr>
<tr valign=top>
<td width=47%>UCHAR BufferFormat;</td>
<td width=53%>0x01 -- Data block</td>
</tr>
<tr valign=top>
<td width=47%>USHORT DataLength;</td>
<td width=53%>Length of data</td>
</tr>
</table><br>
<p>
<i>count</i> specifies the number of bytes to be written.  <i>offset</i> is the offset in the file of the first byte to be written.  Since offset is 16 bits, this request is inappropriate for general use in a very large file.  <i>remaining</i> is advisory:  if the value is not zero, then it is taken as an estimate of the number of bytes that will be written -including those written by this request.  This additional information may be used by the server to optimize cache behavior.  A value of 0 for <i>count</i> is an error.</p>
<p>
If the request specifies a byte range beyond the current end of file, the file will be extended.  Any bytes between the previous end of file and the requested offset are initialized to 0.</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=50%>Server Response<br>
==================================</td>
<td width=50%>Description<br>
=================================</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR WordCount;</td>
<td width=50%>Count of parameter words = 1</td>
</tr>
<tr valign=top>
<td width=50%>USHORT Count;</td>
<td width=50%>Count of bytes actually written</td>
</tr>
<tr valign=top>
<td width=50%>USHORT ByteCount;</td>
<td width=50%>Count of data bytes = 0</td>
</tr>
</table><br>
<p>
<i>count</i> in the response indicates the actual number of bytes written, and for successful writes will always equal the count in the request message.  If the number of bytes written differs from the number requested and no error is indicated, then the server has no resources available with which to satisfy the complete write.</p>
<p>
If a Write sends a message of length greater than the <i>maxbuffersize</i> for the TID specified, the server may abort the connection to the client. If an error occurs on the write, the bytes remain locked.</p>
<p>&nbsp;</p></body>
</HTML>
