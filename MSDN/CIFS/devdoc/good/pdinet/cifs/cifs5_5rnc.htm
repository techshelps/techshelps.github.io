<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Small Key Space</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_cifs_148"></a>Small Key Space</h3>
<p>
The combination of the use of only uppercase characters, the usual user practice of  choosing passwords that have alpha and perhaps numeric characters, plus the fact that the protocol treats the upper and lower halves of the 14 bytes key almost identically means that the key space is rather small. Enumerating 7 uppercase characters and digits leads to a key space of 36**7, or 78.3 billion combinations. When this mechanism was introduced nearly a decade ago, this was probably an adequately large key space, but with today's much more powerful systems, it is now small enough to make a brute force search feasible upon a plaintext/ciphertext pair obtained via a known plaintext attack.</p>
<p>&nbsp;</p></body>
</HTML>
