<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SESSION_SETUP_ANDX: Session Setup</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_cifs_64"></a>SESSION_SETUP_ANDX: Session Setup</h3>
<p>
This SMB is used to further "Set up" the session normally just established via the negotiate protocol.</p>
<p>
One primary function is to perform a "user logon" in the case where the server is in <i>user level</i> security mode.  The <i>uid</i> in the SMB header is set by the client to be the userid desired for the <i>accountname</i> and validated by the <i>accountpassword</i>.</p>
<p>
If the negotiated protocol is prior to <code>NT LM 0.12</code>, the format of SMB_COM_SESSION_SETUP_ANDX is:</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=45%>Client Request<br>
==============================</td>
<td width=55%>Description<br>
=====================================</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR WordCount;</td>
<td width=55%>Count of parameter words = 10</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR AndXCommand;</td>
<td width=55%>Secondary (X) command; 0xFF = none</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR AndXReserved;</td>
<td width=55%>Reserved (must be 0)</td>
</tr>
<tr valign=top>
<td width=45%>USHORT AndXOffset;</td>
<td width=55%>Offset to next command WordCount</td>
</tr>
<tr valign=top>
<td width=45%>USHORT MaxBufferSize;</td>
<td width=55%>Client maximum buffer size</td>
</tr>
<tr valign=top>
<td width=45%>USHORT MaxMpxCount;</td>
<td width=55%>Actual maximum multiplexed pending requests</td>
</tr>
<tr valign=top>
<td width=45%>USHORT VcNumber;</td>
<td width=55%>0 = first (only), nonzero=additional VC number</td>
</tr>
<tr valign=top>
<td width=45%>ULONG SessionKey;</td>
<td width=55%>Session key (valid iff VcNumber != 0)</td>
</tr>
<tr valign=top>
<td width=45%>USHORT PasswordLength;</td>
<td width=55%>Account password size</td>
</tr>
<tr valign=top>
<td width=45%>ULONG Reserved;</td>
<td width=55%>Must be 0</td>
</tr>
<tr valign=top>
<td width=45%>USHORT ByteCount;</td>
<td width=55%>Count of data bytes;    min = 0</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR AccountPassword[];</td>
<td width=55%>Account Password</td>
</tr>
<tr valign=top>
<td width=45%>STRING AccountName[];</td>
<td width=55%>Account Name</td>
</tr>
<tr valign=top>
<td width=45%>STRING PrimaryDomain[];</td>
<td width=55%>Client's primary domain</td>
</tr>
<tr valign=top>
<td width=45%>STRING NativeOS[];</td>
<td width=55%>Client's native operating system</td>
</tr>
<tr valign=top>
<td width=45%>STRING NativeLanMan[];</td>
<td width=55%>Client's native LAN Manager type</td>
</tr>
</table><br>
<p>
and the response is:</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=50%>Server Response<br>
==================================</td>
<td width=50%>Description<br>
=================================</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR WordCount;</td>
<td width=50%>Count of parameter words = 3</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR AndXCommand;</td>
<td width=50%>Secondary (X) command;  0xFF = none</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR AndXReserved;</td>
<td width=50%>Reserved (must be 0)</td>
</tr>
<tr valign=top>
<td width=50%>USHORT AndXOffset;</td>
<td width=50%>Offset to next command WordCount</td>
</tr>
<tr valign=top>
<td width=50%>USHORT Action;</td>
<td width=50%>Request mode:</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>bit0 = logged in as GUEST</td>
</tr>
<tr valign=top>
<td width=50%>USHORT ByteCount;</td>
<td width=50%>Count of data bytes</td>
</tr>
<tr valign=top>
<td width=50%>STRING NativeOS[];</td>
<td width=50%>Server's native operating system</td>
</tr>
<tr valign=top>
<td width=50%>STRING NativeLanMan[];</td>
<td width=50%>Server's native LAN Manager type</td>
</tr>
<tr valign=top>
<td width=50%>STRING PrimaryDomain[];</td>
<td width=50%>Server's primary domain</td>
</tr>
</table><br>
<p>
If the server is in "share level security mode", the account name and passwd should be ignored by the server.</p>
<p>
If challenge/response authentication is not being used, <i>AccountPassword</i> should be a null terminated ASCII string with <i>PasswordLength</i> set to the string size including the null; the password will case insensitive. If challenge/response authentication is being used (see section 2.10), then <i>AccountPassword</i> will be the response to the server's challenge, and <i>PasswordLength</i> should be set to its length.</p>
<p>
The server validates the name and password supplied and if valid, it registers the user identifier on this session as representing the specified <i>AccountName</i>.  The <i>Uid</i>  field in the SMB header will then be used to validate access on subsequent SMB requests.  The SMB requests where permission checks are required are those which refer to a symbolically named resource such as SMB_COM_OPEN, SMB_COM_RENAME, SMB_COM_DELETE, etc..  The value of the <i>Uid</i> is relative to a specific client/server session so it is possible to have the same <i>Uid</i> value represent two different users on two different sessions at the server.</p>
<p>
Multiple session setup commands may be sent to register additional users on this session.  If the server receives an additional SMB_COM_SESSION_SETUP_ANDX, only the <i>Uid</i>, <i>AccountName</i> and <i>AccountPassword</i> fields need contain valid values (the server MUST ignore the other fields).</p>
<p>
The client writes the name of its domain in <i>PrimaryDomain</i> if it knows what the domain name is.  If the domain name is unknown, the client either encodes it as a NULL string, or as a question mark.</p>
<p>
If <i>bit0</i> of <i>Action</i> is set, this informs the client that although the server did not recognize the <i>AccountName</i>, it logged the user in as a guest.  This is optional behavior by the server, and in any case one would ordinarily expect guest privileges to limited.</p>
<p>
Another function of the Session Set Up protocol is to inform the server of the maximum values which will be utilized by this client.  Here <i>MaxBufferSize</i> is the maximum message size which the client can receive.  Thus although the server may support 16k buffers (as returned in the SMB_COM_NEGOTIATE response), if the client only has 4k buffers, the value of <i>MaxBufferSize</i> here would be 4096.  The minimum allowable value for <i>MaxBufferSize</i> is 1024.  The SMB_COM_NEGOTIATE response includes the server buffer size supported.  Thus this is the maximum SMB message size which the client can send to the server.  This size may be larger than the size returned to the server from the client via the SMB_COM_SESSION_SETUP_AND X protocol which is the maximum SMB message size which the server may send to the client.  Thus if the server's buffer size were 4k and the client's buffer size were only 2K,  the client could send up to 4k (standard) write requests but must only request up to 2k for (standard) read requests.</p>
<p>
The field, <i>MaxMpxCount</i> informs the server of the maximum number of requests which the client will have outstanding to the server simultaneously (see sections 5.13 and 5.24).</p>
<p>
The <i>VcNumber</i> field specifies whether the client wants this to be the first VC or an additional VC.</p>
<p>
The values for <i>MaxBufferSize</i>, <i>MaxMpxCount</i>, and <i>VcNumber</i> must be less than or equal to the maximum values supported by the server as returned in the SMB_COM_NEGOTIATE response.</p>
<p>
If the server gets a SMB_COM_SESSION_SETUP_ANDX request with <i>VcNumber</i> of 0 and other VCs are still connected to that client, they will be aborted thus freeing any resources held by the server.  This condition could occur if the client was rebooted and reconnected to the server before the transport level had informed the server of the previous VC termination.</p>
<p>
If the negotiated SMB dialect is "<code>NT LM 0.12"</code> or later, the format of the response SMB is unchanged, but the request is:</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=45%>Client Request<br>
==============================</td>
<td width=55%>Description<br>
=====================================</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR WordCount;</td>
<td width=55%>Count of parameter words = 13</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR AndXCommand;</td>
<td width=55%>Secondary (X) command;  0xFF = none</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR AndXReserved;</td>
<td width=55%>Reserved (must be 0)</td>
</tr>
<tr valign=top>
<td width=45%>USHORT AndXOffset;</td>
<td width=55%>Offset to next command WordCount</td>
</tr>
<tr valign=top>
<td width=45%>USHORT MaxBufferSize;</td>
<td width=55%>Client's maximum buffer size</td>
</tr>
<tr valign=top>
<td width=45%>USHORT MaxMpxCount;</td>
<td width=55%>Actual maximum multiplexed pending requests</td>
</tr>
<tr valign=top>
<td width=45%>USHORT VcNumber;</td>
<td width=55%>0 = first (only), nonzero=additional VC number</td>
</tr>
<tr valign=top>
<td width=45%>ULONG SessionKey;</td>
<td width=55%>Session key (valid iff VcNumber != 0)</td>
</tr>
<tr valign=top>
<td width=45%>USHORT CaseInsensitivePasswordLength;</td>
<td width=55%>Account password size, ANSI</td>
</tr>
<tr valign=top>
<td width=45%>USHORT CaseSensitivePasswordLength;</td>
<td width=55%>Account password size, Unicode</td>
</tr>
<tr valign=top>
<td width=45%>ULONG Reserved;</td>
<td width=55%>must be 0</td>
</tr>
<tr valign=top>
<td width=45%>ULONG Capabilities;</td>
<td width=55%>Client capabilities</td>
</tr>
<tr valign=top>
<td width=45%>USHORT ByteCount;</td>
<td width=55%>Count of data bytes;    min = 0</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR CaseInsensitivePassword[];</td>
<td width=55%>Account Password, ANSI</td>
</tr>
<tr valign=top>
<td width=45%>UCHAR CaseSensitivePassword[];</td>
<td width=55%>Account Password, Unicode</td>
</tr>
<tr valign=top>
<td width=45%>STRING AccountName[];</td>
<td width=55%>Account Name, Unicode</td>
</tr>
<tr valign=top>
<td width=45%>STRING PrimaryDomain[];</td>
<td width=55%>Client's primary domain, Unicode</td>
</tr>
<tr valign=top>
<td width=45%>STRING NativeOS[];</td>
<td width=55%>Client's native operating system, Unicode</td>
</tr>
<tr valign=top>
<td width=45%>STRING NativeLanMan[];</td>
<td width=55%>Client's native LAN Manager type, Unicode</td>
</tr>
</table><br>
<p>
The client expresses its capabilities to the server encoded in the <i>Capabilities</i> field:</p>
<table border=1 cellspacing=4 cols=3 frame=box rules=cols>
<tr valign=top>
<td width=37%>Capability Name<br>
========================</td>
<td width=15%>Encoding<br>
=========</td>
<td width=48%>Description<br>
================================</td>
</tr>
<tr valign=top>
<td width=37%>CAP_UNICODE</td>
<td width=15%>0x0004</td>
<td width=48%>The client can use UNICODE strings</td>
</tr>
<tr valign=top>
<td width=37%>CAP_LARGE_FILES</td>
<td width=15%>0x0008</td>
<td width=48%>The client can deal with files having 64 bit offsets</td>
</tr>
<tr valign=top>
<td width=37%>CAP_NT_SMBS</td>
<td width=15%>0x0010</td>
<td width=48%>The client understands the SMBs introduced with the <code>NT LM 0.12</code> dialect.  Implies CAP_NT_FIND.</td>
</tr>
<tr valign=top>
<td width=37%>cap_nt_find</td>
<td width=15%>0x0200</td>
<td width=48%></td>
</tr>
<tr valign=top>
<td width=37%>CAP_ STATUS32</td>
<td width=15%>0x0040</td>
<td width=48%>The client can receive 32 bit errors encoded in <i>Status.Status</i></td>
</tr>
<tr valign=top>
<td width=37%>CAP_LEVEL_II_OPLOCKS</td>
<td width=15%>0x0080</td>
<td width=48%>The client understands Level II oplocks</td>
</tr>
</table><br>
<p>
The entire message sent and received including the optional ANDX SMB must fit in the negotiated maximum transfer size.  The following are the only valid SMB commands for <i>AndXCommand</i> for SMB_COM_SESSION_SETUP_ANDX</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=50%><code>SMB_COM_TREE_CONNECT_ANDX</code></td>
<td width=50%><code>SMB_COM_OPEN</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_OPEN_ANDX</code></td>
<td width=50%><code>SMB_COM_CREATE</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_CREATE_NEW</code></td>
<td width=50%><code>SMB_COM_CREATE_DIRECTORY</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_DELETE</code></td>
<td width=50%><code>SMB_COM_DELETE_DIRECTORY</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_FIND</code></td>
<td width=50%><code>SMB_COM_FIND_UNIQUE</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_COPY</code></td>
<td width=50%><code>SMB_COM_RENAME</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_NT_RENAME</code></td>
<td width=50%><code>SMB_COM_CHECK_DIRECTORY</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_QUERY_INFORMATION</code></td>
<td width=50%><code>SMB_COM_SET_INFORMATION</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_NO_ANDX_COMMAND</code></td>
<td width=50%><code>SMB_COM_OPEN_PRINT_FILE</code></td>
</tr>
<tr valign=top>
<td width=50%><code>SMB_COM_GET_PRINT_QUEUE</code></td>
<td width=50%><code>SMB_COM_TRANSACTION</code></td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%></td>
</tr>
</table><br>
<h4>Errors</h4>
<p>
ERRSRV/ERRerror&nbsp;&nbsp;&nbsp;&nbsp;- no NEG_PROT issued</p>
<p>
ERRSRV/ERRbadpw&nbsp;&nbsp;&nbsp;&nbsp;- password not correct for given username</p>
<p>
ERRSRV/ERRtoomanyuids&nbsp;&nbsp;&nbsp;&nbsp;- maximum number of users per session exceeded</p>
<p>
ERRSRV/ERRnosupport&nbsp;&nbsp;&nbsp;&nbsp;- chaining of this request to the previous one is not supported</p>
<p>&nbsp;</p></body>
</HTML>
