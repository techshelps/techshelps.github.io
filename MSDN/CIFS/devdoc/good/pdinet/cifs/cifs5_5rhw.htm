<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OPEN: Open File</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_cifs_114"></a><i></i>OPEN: Open File</h2>
<p>
This message is sent to obtain a file handle for a data file.  This returned <i>fid</i> is used in subsequent client requests such as read, write, close, etc.</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=50%>Client Request<br>
==================================</td>
<td width=50%>Description<br>
=================================</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR WordCount;</td>
<td width=50%>Count of parameter words = 2</td>
</tr>
<tr valign=top>
<td width=50%>USHORT DesiredAccess;</td>
<td width=50%>Mode - read/write/share</td>
</tr>
<tr valign=top>
<td width=50%>USHORT SearchAttributes;</td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%>USHORT ByteCount;</td>
<td width=50%>Count of data bytes;    min = 2</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR BufferFormat;</td>
<td width=50%>0x04</td>
</tr>
<tr valign=top>
<td width=50%>STRING FileName[];</td>
<td width=50%>File name</td>
</tr>
</table><br>
<p>
<i>filename</i> is the fully qualified file name, relative to the root of the share specified in the <i>tid</i> field of the SMB header.  If <i>tid</i> in the SMB header refers to a print share, this SMB creates a new file which will be spooled to the printer when closed.  In this case, <i>filename</i> is ignored.</p>
<p>
<i>searchattributes</i> specifies the type of file desired.  The encoding is described in the "File Attribute Encoding" section.</p>
<p>
<i>desiredaccess</i> controls the mode under which the file is opened, and the file will be opened only if the client has the appropriate permissions.  The encoding of <i>desiredaccess</i> is discussed in the section entitled "Access Mode Encoding".</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=50%>Server Response<br>
==================================</td>
<td width=50%>Description<br>
=================================</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR WordCount;</td>
<td width=50%>Count of parameter words = 7</td>
</tr>
<tr valign=top>
<td width=50%>USHORT Fid;</td>
<td width=50%>File handle</td>
</tr>
<tr valign=top>
<td width=50%>USHORT FileAttributes;</td>
<td width=50%>Attributes of opened file</td>
</tr>
<tr valign=top>
<td width=50%>UTIME LastWriteTime;</td>
<td width=50%>Time file was last written</td>
</tr>
<tr valign=top>
<td width=50%>ULONG DataSize;</td>
<td width=50%>File size</td>
</tr>
<tr valign=top>
<td width=50%>USHORT GrantedAccess;</td>
<td width=50%>Access allowed</td>
</tr>
<tr valign=top>
<td width=50%>USHORT ByteCount;</td>
<td width=50%>Count of data bytes = 0</td>
</tr>
</table><br>
<p>
<i>fid</i> is the handle value which should be used for subsequent file operations.</p>
<p>
<i>fileattributes</i> specifies the type of file obtained.  The encoding is described in the "File Attribute Encoding" section.</p>
<p>
<i>grantedaccess</i> indicates the access permissions actually allowed, and may have one of the following values:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=9%>0</td>
<td width=91%> read-only</td>
</tr>
<tr valign=top>
<td width=9%>1</td>
<td width=91%> write-only</td>
</tr>
<tr valign=top>
<td width=9%>2</td>
<td width=91%>read/write</td>
</tr>
</table><br>
<p>
File Handles (<i>fid</i>s) are scoped per client.  A <i>pid</i> may reference any <i>fid</i> established by itself or any other <i>pid</i> on the client (so far as the server is concerned).  The actual accesses allowed through the <i>fid</i> depends on the open and deny modes specified when the file was opened (see below).</p>
<p>
The MS-DOS compatibility mode of file open provides exclusion at the client level.  A file open in compatibility mode may be opened (also in compatibility mode) any number of times for any combination of reading and writing (subject to the user's permissions) by any <i>pid</i> on the same client.  If the first client has the file open for writing, then the file may not be opened in any way by any other client.  If the first client has the file open only for reading, then other clients may open the file, in compatibility mode, for reading..  The above notwithstanding, if the filename has an extension of .EXE, .DLL, .SYM, or .COM other clients are permitted to open the file regardless of read/write open modes of other compatibility mode opens.  However, once multiple clients have the file open for reading, no client is permitted to open the file for writing and no other client may open the file in any mode other than compatibility mode.</p>
<p>
The other file exclusion modes (Deny read/write, Deny write, Deny read, Deny none) provide exclusion at the file level.  A file opened in any "Deny" mode may be opened again only for the accesses allowed by the Deny mode (subject to the user's permissions).  This is true regardless of the identity of the second opener -a different client, a <i>pid</i> from the same client, or the <i>pid</i> that already has the file open.  For example, if a file is open in "Deny write" mode a second open may only obtain read permission to the file.</p>
<p>
Although <i>fid</i>s are available to all <i>pid</i>s on a client, <i>pid</i>s other than the owner may not have the full access rights specified in the open mode by the <i>fid</i>'s creator.  If the open creating the <i>fid</i> specified a deny mode, then any <i>pid</i> using the <i>fid</i>, other than the creating <i>pid</i>, will have only those access rights determined by "anding" the open mode rights and the deny mode rights, i.e., the deny mode is checked on all file accesses.  For example, if a file is opened for Read/Write in Deny write mode, then other clients may only read the file and cannot write; if a file is opened for Read in Deny read mode, then the other clients can neither read nor write the file.</p>
<p>&nbsp;</p></body>
</HTML>
