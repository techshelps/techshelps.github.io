<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NEGOTIATE: Negotiate Protocol</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_cifs_63"></a>NEGOTIATE: Negotiate Protocol</h3>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=42%><code>Client Request<br>
============================</code></td>
<td width=58%><code>Description<br>
=======================================</code></td>
</tr>
<tr valign=top>
<td width=42%><code>UCHAR WordCount;</code></td>
<td width=58%><code>Count of parameter words = 0</code></td>
</tr>
<tr valign=top>
<td width=42%><code>USHORT  ByteCount;</code></td>
<td width=58%><code>Count of data bytes; min = 2</code></td>
</tr>
<tr valign=top>
<td width=42%><code>struct {</code></td>
<td width=58%></td>
</tr>
<tr valign=top>
<td width=42%><code>UCHAR BufferFormat;</code></td>
<td width=58%><code>0x02 -- Dialect</code></td>
</tr>
<tr valign=top>
<td width=42%><code>UCHAR DialectName[];</code></td>
<td width=58%><code>ASCII null-terminated string</code></td>
</tr>
<tr valign=top>
<td width=42%><code>} Dialects[];</code></td>
<td width=58%></td>
</tr>
</table><br>
<p>
The Client sends a list of dialects that it can communicate with.  The response is a selection of one of those dialects (numbered 0 through n) or -1 (hex FFFF) indicating that none of the dialects were acceptable.  The negotiate message is binding on the virtual circuit and must be sent.  One and only one negotiate message may be sent, subsequent negotiate requests will be rejected with an error response and no action will be taken.</p>
<p>
The protocol does not impose any particular structure to the dialect strings.  Implementers of particular protocols may choose to include, for example, version numbers in the string.</p>
<p>
If the server does not understand any of the dialect strings, or if <code>PC NETWORK PROGRAM 1.0</code> is the chosen dialect, the response format is</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=42%>Server Response<br>
============================</td>
<td width=58%>Description<br>
=======================================</td>
</tr>
<tr valign=top>
<td width=42%>UCHAR WordCount;</td>
<td width=58%>Count of parameter words = 1</td>
</tr>
<tr valign=top>
<td width=42%>USHORT DialectIndex;</td>
<td width=58%>Index of selected dialect</td>
</tr>
<tr valign=top>
<td width=42%>USHORT ByteCount;</td>
<td width=58%>Count of data bytes = 0</td>
</tr>
</table><br>
<p>
If the chosen dialect is greater than core up to and including <code>LANMAN2.1</code>, the protocol response format is</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=42%>Server Response<br>
============================</td>
<td width=58%>Description<br>
=======================================</td>
</tr>
<tr valign=top>
<td width=42%>UCHAR WordCount;</td>
<td width=58%>Count of parameter words = 13</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  DialectIndex;</td>
<td width=58%>Index of selected dialect</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  SecurityMode;</td>
<td width=58%>Security mode:</td>
</tr>
<tr valign=top>
<td width=42%></td>
<td width=58%>bit 0: 0 = share, 1 = user</td>
</tr>
<tr valign=top>
<td width=42%></td>
<td width=58%>bit 1: 1 = use challenge/response authentication</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  MaxBufferSize;</td>
<td width=58%>Max transmit buffer size (&gt;= 1024)</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  MaxMpxCount;</td>
<td width=58%>Max pending multiplexed requests</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  MaxNumberVcs;</td>
<td width=58%>Max VCs between client and server</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  RawMode; </td>
<td width=58%>Raw modes supported:</td>
</tr>
<tr valign=top>
<td width=42%></td>
<td width=58%> bit 0: 1 = Read Raw supported</td>
</tr>
<tr valign=top>
<td width=42%></td>
<td width=58%> bit 1: 1 = Write Raw supported</td>
</tr>
<tr valign=top>
<td width=42%>ULONG SessionKey;</td>
<td width=58%>Unique token identifying this session</td>
</tr>
<tr valign=top>
<td width=42%>SMB_TIME ServerTime;</td>
<td width=58%>Current time at server</td>
</tr>
<tr valign=top>
<td width=42%>SMB_DATE ServerDate;</td>
<td width=58%>Current date at server</td>
</tr>
<tr valign=top>
<td width=42%>USHORT ServerTimeZone;</td>
<td width=58%>Current time zone at server</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  EncryptionKeyLength;</td>
<td width=58%>MBZ if this is not LM2.1</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  Reserved;</td>
<td width=58%>MBZ</td>
</tr>
<tr valign=top>
<td width=42%>USHORT  ByteCount </td>
<td width=58%>Count of data bytes</td>
</tr>
<tr valign=top>
<td width=42%>UCHAR EncryptionKey[];</td>
<td width=58%>The challenge encryption key</td>
</tr>
<tr valign=top>
<td width=42%>STRING PrimaryDomain[];</td>
<td width=58%>The server's primary domain</td>
</tr>
</table><br>
<p>
<i>MaxBufferSize</i> is the size of the largest message which the client can legitimately send to the server</p>
<p>
If  <i>bit0</i> of the <i>Flags</i> field is set in the negotiate response, this indicates the server supports the SMB_COM_LOCK_AND_READ and SMB_COM_WRITE_AND_UNLOCK client requests.</p>
<p>
If the <i>SecurityMode</i> field indicates the server is running in <i>user mode</i>, the client must send appropriate SMB_COM_SESSION_SETUP_ANDX requests before the server will allow the client to access resources.   If the <i>SecurityMode</i> fields indicates the client should use challenge/response authentication, the client should use the authentication mechanism specified in section 2.10.</p>
<p>
Clients should submit no more than <i>MaxMpxCount</i> distinct unanswered SMBs to the server when using multiplexed reads or writes (see sections 5.13 and 5.24)</p>
<p>
Clients using the  <code>"MICROSOFT NETWORKS 1.03"</code> dialect use a different form of raw reads than documented here, and servers are better off setting <i>RawMode</i> in this response to 0 for such sessions.</p>
<p>
If the negotiated dialect is "<code>DOS LANMAN2.1</code>" or "<code>LANMAN2.1"</code>, then <i>PrimaryDomain</i> string should be included in this response.</p>
<p>
If the negotiated dialect is <code>NT LM 0.12</code>, the response format is</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=38%>Server Response<br>
==========================</td>
<td width=62%>Description<br>
=========================================</td>
</tr>
<tr valign=top>
<td width=38%>UCHAR WordCount;</td>
<td width=62%>Count of parameter words = 17</td>
</tr>
<tr valign=top>
<td width=38%>USHORT DialectIndex;</td>
<td width=62%>Index of selected dialect</td>
</tr>
<tr valign=top>
<td width=38%>UCHAR SecurityMode;</td>
<td width=62%>Security mode:</td>
</tr>
<tr valign=top>
<td width=38%></td>
<td width=62%>bit 0: 0 = share, 1 = user</td>
</tr>
<tr valign=top>
<td width=38%></td>
<td width=62%>bit 1: 1 = encrypt passwords</td>
</tr>
<tr valign=top>
<td width=38%>USHORT MaxMpxCount;</td>
<td width=62%>Max pending multiplexed requests</td>
</tr>
<tr valign=top>
<td width=38%>USHORT MaxNumberVcs;</td>
<td width=62%>Max VCs between client and server</td>
</tr>
<tr valign=top>
<td width=38%>ULONG MaxBufferSize;</td>
<td width=62%>Max transmit buffer size</td>
</tr>
<tr valign=top>
<td width=38%>ULONG MaxRawSize;</td>
<td width=62%>Maximum raw buffer size</td>
</tr>
<tr valign=top>
<td width=38%>ULONG SessionKey;</td>
<td width=62%>Unique token identifying this session</td>
</tr>
<tr valign=top>
<td width=38%>ULONG Capabilities;</td>
<td width=62%>Server capabilities</td>
</tr>
<tr valign=top>
<td width=38%>ULONG SystemTimeLow;</td>
<td width=62%>System (UTC) time of the server (low).</td>
</tr>
<tr valign=top>
<td width=38%>ULONG SystemTimeHigh;</td>
<td width=62%>System (UTC) time of the server (high).</td>
</tr>
<tr valign=top>
<td width=38%>USHORT ServerTimeZone;</td>
<td width=62%>Time zone of server (min from UTC)</td>
</tr>
<tr valign=top>
<td width=38%>UCHAR EncryptionKeyLength;</td>
<td width=62%>Length of encryption key.</td>
</tr>
<tr valign=top>
<td width=38%>USHORT ByteCount;</td>
<td width=62%>Count of data bytes</td>
</tr>
<tr valign=top>
<td width=38%>UCHAR EncryptionKey[];</td>
<td width=62%>The challenge encryption key</td>
</tr>
<tr valign=top>
<td width=38%>UCHAR OemDomainName[];</td>
<td width=62%>The name of the domain (in OEM chars)</td>
</tr>
</table><br>
<p>
In addition to the definitions above, <i>MaxBufferSize</i> is the size of the largest message which the client can legitimately send to the server.  If the client is using a connectionless protocol,  <i>MaxBufferSize</i> must be set to the smaller of the server's internal buffer size and the amount of data which can be placed in a response packet.</p>
<p>
<i>MaxRawSize</i> specifies the maximum message size the server can send or receive for SMB_COM_WRITE_RAW or SMB_COM_READ_RAW.</p>
<p>
Connectionless clients must set <i>sid</i> to 0 in the SMB request header.</p>
<p>
<i>Capabilities</i> allows the server to tell the client what it supports.  The bit definitions are:</p>
<table border=1 cellspacing=4 cols=3 frame=box rules=cols>
<tr valign=top>
<td width=30%>Capability Name<br>
====================</td>
<td width=15%>Encoding<br>
========</td>
<td width=55%>Meaning<br>
=====================================</td>
</tr>
<tr valign=top>
<td width=30%>CAP_RAW_MODE</td>
<td width=15%>0x0001</td>
<td width=55%>The server supports SMB_COM_READ_RAW and SMB_COM_WRITE_RAW</td>
</tr>
<tr valign=top>
<td width=30%>CAP_MPX_MODE</td>
<td width=15%>0x0002</td>
<td width=55%>The server supports SMB_COM_READ_MPX and SMB_COM_WRITE_MPX</td>
</tr>
<tr valign=top>
<td width=30%>CAP_UNICODE</td>
<td width=15%>0x0004</td>
<td width=55%>The server supports Unicode strings</td>
</tr>
<tr valign=top>
<td width=30%>CAP_LARGE_FILES</td>
<td width=15%>0x0008</td>
<td width=55%>The server supports large files with 64 bit offsets</td>
</tr>
<tr valign=top>
<td width=30%>CAP_NT_SMBS</td>
<td width=15%>0x0010</td>
<td width=55%>The server supports the SMBs particular to the <code>NT LM 0.12</code> dialect</td>
</tr>
<tr valign=top>
<td width=30%>CAP_RPC_REMOTE_APIS</td>
<td width=15%>0x0020</td>
<td width=55%>The sever supports remote API requests via RPC</td>
</tr>
<tr valign=top>
<td width=30%>CAP_STATUS32</td>
<td width=15%>0x0040</td>
<td width=55%>The server can respond with 32 bit status codes in Status.Status</td>
</tr>
<tr valign=top>
<td width=30%>CAP_LEVEL_II_OPLOCKS</td>
<td width=15%>0x0080</td>
<td width=55%>The server supports level 2 oplocks</td>
</tr>
<tr valign=top>
<td width=30%>CAP_LOCK_AND_READ</td>
<td width=15%>0x0100</td>
<td width=55%>The server supports the SMB_COM_LOCK_AND_READ SMB</td>
</tr>
<tr valign=top>
<td width=30%>CAP_NT_FIND</td>
<td width=15%>0x0200</td>
<td width=55%></td>
</tr>
<tr valign=top>
<td width=30%>CAP_DFS</td>
<td width=15%>0x1000</td>
<td width=55%>This server is DFS aware</td>
</tr>
<tr valign=top>
<td width=30%>CAP_LARGE_READX</td>
<td width=15%>0x4000</td>
<td width=55%>The server supports SMB_COM_READ_ANDX requests which exceed the negotiated buffer size</td>
</tr>
</table><br>
<h4>Errors</h4>
<p>
SUCCESS/SUCCESS</p>
<p>
ERRSRV/ERRerror</p>
<p>&nbsp;</p></body>
</HTML>
