<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>READ_RAW: Read Raw</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_cifs_121"></a><i></i>READ_RAW: Read Raw</h2>
<p>
The SMB_COM_READ_RAW protocol is used to maximize the performance of reading a large block of data from the server to the client.  This request can be applied to files and named pipes.</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=47%>Client Request<br>
================================</td>
<td width=53%>Description<br>
===================================</td>
</tr>
<tr valign=top>
<td width=47%>UCHAR WordCount;</td>
<td width=53%>Count of parameter words = 8</td>
</tr>
<tr valign=top>
<td width=47%>USHORT Fid;</td>
<td width=53%>File handle</td>
</tr>
<tr valign=top>
<td width=47%>ULONG Offset;</td>
<td width=53%>Offset in file to begin read</td>
</tr>
<tr valign=top>
<td width=47%>USHORT MaxCount;</td>
<td width=53%>Max bytes to return (maximum 65535)</td>
</tr>
<tr valign=top>
<td width=47%>USHORT MinCount;</td>
<td width=53%>Min bytes to return (normally 0)</td>
</tr>
<tr valign=top>
<td width=47%>ULONG Timeout;</td>
<td width=53%>Wait time if named pipe</td>
</tr>
<tr valign=top>
<td width=47%>USHORT Reserved;</td>
<td width=53%></td>
</tr>
<tr valign=top>
<td width=47%>USHORT ByteCount;</td>
<td width=53%>Count of data bytes = 0</td>
</tr>
</table><br>
<p>
<i>fid</i> identifies the resource being read, and may refer to a disk file or a named pipe.</p>
<p>
<i>timeout</i> is the number of milliseconds to wait for completion <i>fid</i> refers to a named pipe.</p>
<p>
When the client issues this request, the client must guarantee that there is (and will be) no other request to the server for the duration of the SMB_COM_READ_RAW.  The server will respond, in one send, with the raw data being read.  Thus the client is able to request up to 65,535 bytes of data and receive it directly into the user's buffer, since the server response has no header or trailer.  Note that the amount of data requested is expected to be larger than the negotiated buffer size for this protocol.</p>
<p>
The reason that no other requests can be active on the client's connection to the server for the duration of the request is that if other receives are present, there is normally no way to guarantee that the data will be received into the user space, rather the data may fill one (or more) of the other buffers.</p>
<p>
The number of bytes actually returned is determined by the length of the message the client receives as reported by the transport layer.  If the request is to read more bytes than are present in the file, the read response will be of the length actually read from the file.</p>
<p>
If none of the requested bytes exist (EOF) or an error occurs on the read, the server responds with a zero byte send.  Upon receipt of a zero length response, the client should send a different type of request to the server.  The response to that read will then tell the client that EOF was hit or identify the error condition.</p>
<p>
The number of bytes returned may be less than the number requested only if a read specifies bytes beyond the current file size.  In this case only the bytes that exist are returned.  A read completely beyond the end of file results in a response of zero length.  If the number of bytes returned is less than the number of bytes requested, this indicates end of file (if reading other than a standard blocked disk file, only ZERO bytes returned indicates end of file).</p>
<p>
The transport layer guarantees delivery of all response bytes to the client.  Thus no  SMB level confirmation protocol is required.  If an error should occur at the clients end, all bytes must be received and thrown away.  There is no need to inform the server of the error.</p>
<p>
This message was introduced with <code>the LANMAN1.0</code> SMB dialect.  Whether or not this request is supported is returned in the response to <code>SMB_COM_NEGOTIATE</code>.</p>
<p>
The flow for reading a sequential file using <code>SMB_COM_READ_BOCK_RAW</code> is:</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=45%>Client Request<br>
==============================</td>
<td width=55%>Server Response<br>
=====================================</td>
</tr>
<tr valign=top>
<td width=45%>SMB_COM_OPEN file</td>
<td width=55%>Success</td>
</tr>
<tr valign=top>
<td width=45%>SMB_COM_READ_RAW</td>
<td width=55%></td>
</tr>
<tr valign=top>
<td width=45%></td>
<td width=55%>raw data returned</td>
</tr>
<tr valign=top>
<td width=45%>SMB_COM_READ_RAW</td>
<td width=55%></td>
</tr>
<tr valign=top>
<td width=45%></td>
<td width=55%>more raw data returned</td>
</tr>
<tr valign=top>
<td width=45%>SMB_COM_READ_RAW</td>
<td width=55%></td>
</tr>
<tr valign=top>
<td width=45%></td>
<td width=55%>short (or 0 length) response returned</td>
</tr>
<tr valign=top>
<td width=45%>SMB_COM_READ</td>
<td width=55%></td>
</tr>
<tr valign=top>
<td width=45%></td>
<td width=55%>0 bytes returned indicating EOF</td>
</tr>
<tr valign=top>
<td width=45%>SMB_COM_CLOSE</td>
<td width=55%>Success</td>
</tr>
</table><br>
<p>
SMB_COM_READ_RAW has no way to return errors.  Because the response is raw data only, a zero length response indicates EOF, a read error or that the server is temporarily out of large buffers.  The client should then retry using a different type of read request.  This request will then either return the EOF condition, an error if the read is still failing, or will work if the problem was due to a temporary server condition.</p>
<p>
If the negotiated dialect is <code>NT LM 0.12</code> or later, and the response to the SMB_COM_NEGOTIATE SMB has CAP_LARGE_FILES set in the <i>capabilities</i> field, a new format of  the SMB_COM_READ_RAW request is allowed which accommodates very large files having 64 bit offsets.</p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=47%>Client Request<br>
================================</td>
<td width=53%>Description<br>
===================================</td>
</tr>
<tr valign=top>
<td width=47%>UCHAR WordCount;</td>
<td width=53%>Count of parameter words = 10</td>
</tr>
<tr valign=top>
<td width=47%>USHORT Fid;</td>
<td width=53%>File handle</td>
</tr>
<tr valign=top>
<td width=47%>ULONG Offset;</td>
<td width=53%>Offset in file to begin read</td>
</tr>
<tr valign=top>
<td width=47%>USHORT MaxCount;</td>
<td width=53%>Max bytes to return (maximum 65535)</td>
</tr>
<tr valign=top>
<td width=47%>USHORT MinCount;</td>
<td width=53%>Min bytes to return (normally 0)</td>
</tr>
<tr valign=top>
<td width=47%>ULONG Timeout;</td>
<td width=53%>Wait time if named pipe</td>
</tr>
<tr valign=top>
<td width=47%>USHORT Reserved;</td>
<td width=53%></td>
</tr>
<tr valign=top>
<td width=47%>ULONG OffsetHigh;</td>
<td width=53%>Upper 32 bits of offset</td>
</tr>
<tr valign=top>
<td width=47%>USHORT ByteCount;</td>
<td width=53%>Count of data bytes = 0</td>
</tr>
</table><br>
<p>
This form of the request is differentiated from the previous form of the request by the <i>wordcount</i> field.  In this case, the final offset to read from is used by combining <i>offsethigh</i> and <i>offset</i>, the resulting value can not be negative or the request will be rejected by the server.</p>
<p>
SMB_COM_READ_RAW can not be used over connectionless transports.</p>
<p>&nbsp;</p></body>
</HTML>
