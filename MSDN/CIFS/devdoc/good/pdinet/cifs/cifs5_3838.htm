<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COPY: Copy File</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_cifs_84"></a>COPY: Copy File</h3>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=50%>Client Request<br>
==================================</td>
<td width=50%>Description<br>
=================================</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR WordCount;</td>
<td width=50%>Count of parameter words = 3</td>
</tr>
<tr valign=top>
<td width=50%>USHORT Tid2;</td>
<td width=50%>Second (target) path TID</td>
</tr>
<tr valign=top>
<td width=50%>USHORT OpenFunction;</td>
<td width=50%>What to do if target file exists</td>
</tr>
<tr valign=top>
<td width=50%>USHORT Flags;</td>
<td width=50%>Flags to control copy operation:</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>bit 0 - target must be a file</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>bit 1 - target must be a dir.</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>bit 2 - copy target mode:</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>0 = binary, 1 = ASCII</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>bit 3 - copy source mode:</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>0 = binary, 1 = ASCII</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>bit 4 - verify all writes</td>
</tr>
<tr valign=top>
<td width=50%></td>
<td width=50%>bit 5 - tree copy</td>
</tr>
<tr valign=top>
<td width=50%>USHORT ByteCount;</td>
<td width=50%>Count of data bytes;    min = 2</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR SourceFileNameFormat;</td>
<td width=50%>0x04</td>
</tr>
<tr valign=top>
<td width=50%>STRING SourceFileName;</td>
<td width=50%>Pathname of source file</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR TargetFileNameFormat;</td>
<td width=50%>0x04</td>
</tr>
<tr valign=top>
<td width=50%>STRING TargetFileName;</td>
<td width=50%>Pathname of target file</td>
</tr>
</table><br>
<p>
The file at <i>SourceName</i> is copied to <i>TargetFileName</i>, both of which must refer to paths on the same server.</p>
<p>
The <i>tid</i> in the header is associated with the source while <i>Tid2</i> is associated with the destination.  These fields may contain the same or differing valid values. <i>Tid2</i> can be set to -1 indicating that this is to be the same <i>Tid</i> as in the SMB header.  This allows use of the move protocol with <code>SMB_TREE_CONNECT_ANDX.</code></p>
<table border=1 cellspacing=4 cols=2 frame=box rules=cols>
<tr valign=top>
<td width=50%>Server Response<br>
==================================</td>
<td width=50%>Description<br>
=================================</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR WordCount;</td>
<td width=50%>Count of parameter words = 1</td>
</tr>
<tr valign=top>
<td width=50%>USHORT Count;</td>
<td width=50%>Number of files copied</td>
</tr>
<tr valign=top>
<td width=50%>USHORT ByteCount;</td>
<td width=50%>Count of data bytes;    min = 0</td>
</tr>
<tr valign=top>
<td width=50%>UCHAR ErrorFileFormat;</td>
<td width=50%>0x04 (only if error)</td>
</tr>
<tr valign=top>
<td width=50%>STRING ErrorFileName;</td>
<td width=50%></td>
</tr>
</table><br>
<p>
The source path must refer to an existing file or files.  Wildcards are permitted.  Source files specified by wildcards are processed until an error is encountered. If an error is encountered, the expanded name of the file is returned in ErrorFileName.  Wildcards are not permitted in <i>TargetFileName</i>.  <i>TargetFileName</i> can refer to either a file or a directory.</p>
<p>
The destination can be required to be a file or a directory by the bits in <i>flags</i>.  If neither <i>bit0</i> nor <i>bit1</i> are set, the destination may be either a file or a directory.  <i>Flags</i> also controls the copy mode.  In a binary copy for the source, the copy stops the first time an EOF (control-Z) is encountered. In a binary copy for the target, the server must make sure that there is exactly one EOF in the target file and that it is the last character of the file.</p>
<p>
If the destination is a file and the source contains wildcards, the destination file will either be truncated or appended to at the start of the operation depending on bits in <i>OpenFunction</i> (see section 3.7).  Subsequent files will then be appended to the file.</p>
<p>
If the negotiated dialect is <code> LM1.2X002</code> or later, <i>bit5</i> of <i>Flags</i> is used to specify a tree copy on the remote server.  When this option is selected the destination must not be an existing file and the source mode must be binary.  A request with <i>bit5</i> set and either <i>bit0</i> or <i>bit3</i> set is therefore an error.  When the tree copy mode is selected, the <i>Count</i> field in the server response is undefined.</p>
<h4>Errors</h4>
<p>
ERRDOS/ERRfilexists<br>
ERRDOS/ERRshare<br>
ERRDOS/ERRnofids<br>
ERRDOS/ERRbadfile<br>
ERRDOS/ERRnoaccess<br>
ERRDOS/ERRnofiles<br>
ERRDOS/ERRbadshare<br>
ERRSRV/ERRnoaccess<br>
ERRSRV/ERRinvdevice<br>
ERRSRV/ERRinvid<br>
ERRSRV/ERRbaduid<br>
ERRSRV/ERRaccess</p>
<p>&nbsp;</p></body>
</HTML>
