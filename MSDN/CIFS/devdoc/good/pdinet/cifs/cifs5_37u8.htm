<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Resource Share/Access Example</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_cifs_30"></a><i></i>Resource Share/Access Example</h2>
<p>
The following examples illustrate a possible command line user interface for a server to offer a disk resource, and for a client to connect to and use that resource.</p>
<p>
a) NET SHARE</p>
<p>
The <i>net share</i> command, when executed on the server, specifies a directory name to be made available to clients on the network.  A share name must be given, and this name is presented by clients wishing to access the directory.</p>
<p>
Examples:</p>
<p>
<code>NET SHARE  src=c:\dir1\src  "bonzo"</code></p>
<p>
assigns password <i>bonzo</i> to all files within directory <i>c:\dir1\src</i> and its subdirectories with the share name <i>src</i> being the name used to connect to this resource.</p>
<p>
<code>NET SHARE  c=c:\        " "        RO</code></p>
<p>
<code>NET SHARE  work=c:\work  "flipper"  RW</code></p>
<p>
offers read-only access to everything on the <i>c</i> drive. Offers read-write access to all files within the <i>c:\work</i> directory and its subdirectories.</p>
<p>
The above example is appropriate for servers operating as a <i>share</i> <i>level</i> server.  A <i>user</i> <i>level</i> server would not require the permissions or password, since the combination of the client's account name and specific access control lists on files is sufficient to govern access.</p>
<p>
b) NET USE</p>
<p>
Clients can gain access to one or more offered directories via the <i>net use</i> command.  Once the <i>net use</i> command is issued the user can access the files freely without further special requirements.</p>
<p>
Examples:</p>
<p>
<code>1.  NET USE  d: \\Server1\src  "bonzo"</code></p>
<p>
gains full access to the files and directories on Server1 matching the offer defined by the netname <i>src</i> with the password of <i>bonzo</i>.  The user may now address files on <i>server1 c:\dir1\src</i> by referencing d:. E.g. "type d:srcfile1.c".</p>
<p>
<code>2.  NET USE  e: \\Server1\c</code></p>
<p>
<code>3.  NET USE  f: \\Server1\work   "flipper"</code></p>
<p>
Now any read request to any file on that node (drive c) is valid (e.g. "type e:\bin\foo.bat").  Read-write requests only succeed to files whose pathnames start with f: (e.g. "copy foo f:foo.tmp" copies foo to Server1 c:\work\foo.tmp).</p>
<p>
For <i>user level</i> servers, the client would not provide a password with the <i>net use</i> command.</p>
<p>
The client software must remember the drive identifier supplied with the NET USE request and associate it with the <i>tid</i> value returned by the server in the SMB header.  Subsequent requests using this <i>tid</i> must include only the pathname relative to the connected subtree as the server treats the subtree as the root directory (virtual root).  When the user references one of the remote drives, the client software looks through its list of drives for that node and includes the tree id associated with this drive in the <i>tid</i> field of each request.</p>
<p>
Note that one shares a directory and all files underneath that directory are then affected.  If a particular file is within the range of multiple shares, connecting to any of the share ranges gains access to the file with the permissions specified for the offer named in the NET USE.  The server will not check for nested directories with more restrictive permissions.</p>
<p>&nbsp;</p></body>
</HTML>
