<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Appendix B: Digital Video MCI Command String Syntax</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H1>Appendix B: Digital Video MCI Command String Syntax</H1>  </P>
Digitalvideo devices support the following set of commands. Digitalvideo devices also support <B>notify</B>,<B> test </B>and<B> wait</B> as optional flags. You can add either or all of these flags to any digitalvideo command.</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="118pt" VALIGN="TOP"><COL WIDTH="197pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Command</B></P></TD><TD VALIGN="TOP"><B>Arguments</B></P></TD></TR></TBODY></TABLE>
<BR></P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="118pt" VALIGN="TOP"><COL WIDTH="197pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">capability <I>item<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR></I>capture <I>items<BR></I>close<I><BR></I>configure</P></TD><TD VALIGN="TOP">{can eject <BR>   | can freeze<BR>   | can lock <BR>   | can play <BR>   | can record <BR>   | can reverse <BR>   | can save <BR>   | can stretch [input]<BR>   | can test <BR>   | compound device <BR>   | device type <BR>   | has audio <BR>   | has still<BR>   | has video <BR>   | maximum play rate<BR>   | minimum play rate<BR>   | uses files <BR>   | uses palettes<BR>   | windows}<BR>as <I>file</I> [at <I>rect</I>]<BR></P></TD></TR><TR><TD VALIGN="TOP">copy<I> items</I></P></TD><TD VALIGN="TOP">[at <I>rect</I>]</P></TD></TR><TR><TD VALIGN="TOP"><BR><BR><BR><BR>cue <I>items</I></P></TD><TD VALIGN="TOP">[audio stream <I>stream</I>]<BR>[from <I>position</I>]<BR>[to <I>position</I>]<BR>[video stream <I>stream</I>]<BR>{[input]  | [output [to <I>position </I>[noshow]]]}</P></TD></TR><TR><TD VALIGN="TOP">cut <I>items</I></P></TD><TD VALIGN="TOP">[at <I>rect</I>]</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">[audio stream <I>stream</I>]<BR>[from <I>position</I>]<BR>[to <I>position</I>]<BR>[video stream <I>stream</I>]</P></TD></TR><TR><TD VALIGN="TOP">delete<I> items</I></P></TD><TD VALIGN="TOP">[at <I>rect</I>]</P></TD></TR><TR><TD VALIGN="TOP"><BR><BR><BR><BR>freeze<I> item</I></P></TD><TD VALIGN="TOP">[audio stream <I>stream</I>]<BR>[from <I>position</I>] <BR>[to <I>position</I>]<BR>[video stream <I>stream</I>]<BR>[at <I>rect </I>[outside]]</P></TD></TR><TR><TD VALIGN="TOP">info <I>items</I></P></TD><TD VALIGN="TOP">{audio algorithm <BR>   | audio quality <BR>   | file <BR>   | product <BR>   | still algorithm <BR>   | still quality <BR>   | usage<BR>   | version <BR>   | video algorithm <BR>   | video quality <BR>   | window text} </P></TD></TR><TR><TD VALIGN="TOP">list<I> items<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR></I>load <I>item<BR></I>monitor <I>items</I></P></TD><TD VALIGN="TOP">{audio algorithm {count | number <I>n</I>}<BR>   | audio quality algorithm <BR>    {<I>algorithm | </I>current} {count | number <I>n</I>}<BR>   | audio stream {count | number <I>n</I>}<BR>   | still algorithm {count | number <I>n</I>}<BR>   | still quality algorithm <BR>    {<I>algorithm | </I>current} {count | number <I>n</I>}<BR>   | video algorithm {count | number <I>n</I>}<BR>   | video quality algorithm <BR>    {<I>algorithm | </I>current}<I> </I>{count | number <I>n</I>}<BR>   | video source {count | number <I>n</I>}<BR>   | video stream {count | number <I>n</I>}}<BR><I>filename<BR></I>{file | input [method {pre | post | direct}]}</P></TD></TR><TR><TD VALIGN="TOP">open<I> items</I></P></TD><TD VALIGN="TOP">[alias <I>alias</I>]<BR>[nostatic] <BR>[parent <I>hwnd</I>] <BR>[shareable] <BR>[style {overlapped | popup | child}] <BR>[type <I>device_type</I>] </P></TD></TR><TR><TD VALIGN="TOP">paste <I>items<BR><BR><BR><BR><BR></I>pause</P></TD><TD VALIGN="TOP">[at <I>rect</I>]<BR>[audio stream <I>stream</I>]<BR>[insert | overwrite]<BR>[to <I>position</I>]<BR>[video stream <I>stream</I>]</P></TD></TR><TR><TD VALIGN="TOP">play <I>items</I></P></TD><TD VALIGN="TOP">[from <I>pos</I>]<BR>[repeat]<BR>[reverse]<BR>[to <I>pos</I>]</P></TD></TR><TR><TD VALIGN="TOP">put<I> items</I></P></TD><TD VALIGN="TOP">{destination  [at <I>rect</I>]<BR>   | frame [at <I>rect</I>]<BR>   | source [at <I>rect</I>] <BR>   | video [at <I>rect</I>]<BR>   | {window [at  <I>rect</I>]<I> </I>[client]}}</P></TD></TR><TR><TD VALIGN="TOP">quality <I>items<BR><BR><BR><BR><BR><BR></I>realize<I> items</I></P></TD><TD VALIGN="TOP">{audio name <I>name</I> algorithm <I>algorithm</I> <BR>    {dialog | handle <I>handle</I>}<BR>   | still name <I>name</I> algorithm <I>algorithm</I> <BR>    {dialog | handle <I>handle</I>}<BR>   | video name <I>name</I> algorithm <I>algorithm</I> <BR>    {dialog | handle <I>handle</I>}}<BR>    [background | normal]</P></TD></TR><TR><TD VALIGN="TOP">record <I>items<BR><BR><BR><BR><BR><BR><BR></I>reserve <I>items<BR><BR></I>restore<I><BR></I>resume<I><BR></I>save<I> item<BR><BR></I>seek <I>items</I></P></TD><TD VALIGN="TOP">[at <I>rect</I>] <BR>[audio stream <I>stream</I>]<BR>[from <I>pos</I>] <BR>[hold] <BR>[insert | overwrite] <BR>[to <I>pos</I>]<BR>[video stream <I>stream]</I><BR>[in <I>pathname</I>] <BR>[size <I>duration</I>]<BR>[at <I>rect</I>] from <I>file</I><BR><BR> <I>filename </I>[keepreserve] [at <I>rect</I>]<BR><I>| </I>abort<BR>{to <I>pos</I> | to end | to start}</P></TD></TR><TR><TD VALIGN="TOP">set <I>items<BR><BR><BR><BR><BR></I>setaudio <I>items<BR><BR><BR><BR><BR></I> <I><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR></I>setvideo <I>items<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR></I>signal <I>items<BR><BR></I>status <I>items<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR></I>step <I>items<BR></I>stop <I>item<BR></I>undo<I><BR></I>unfreeze <I>item<BR></I>update <I>items</I></P></TD><TD VALIGN="TOP">{door {open | closed}<BR>   | [still] file format  <I>format</I><BR>   | seek exactly  {on | off}<BR>   | speed <I>factor</I><BR>   | time format {frames | ms | milliseconds}}<BR>{algorithm  <I>name</I> [quality <I>name</I>]<BR>   | alignment to <I>integer</I><BR>   | bass to <I>value</I> <BR>    [over <I>duration</I> [clocktime]] [input | output]<BR>   | bitspersample to <I>bitcount</I><BR>   | bytespersec to <I>integer</I><BR>   | record {on | off}<BR>   | samplespersec to <I>integer</I><BR>   | source to {left | right | average | stereo}<BR>   | stream to <I>number</I><BR>   | treble to <I>value</I> <BR>    [over <I>duration</I> [clocktime]] [input | output]<BR>   | [left | right] on | off <BR>   | [left | right] volume to <I>value</I> <BR>    [over <I>duration</I> [clocktime]] [input | output]}<BR>{[still] algorithm  <I>name</I> [quality <I>descriptor</I>]}<BR>   | bitsperpel to <I>count</I><BR>   | brightness  to <I>value</I> <BR>    [over<I> duration</I> [clocktime]] [input | output]<BR>   | color to <I>value</I> <BR>    [over<I> duration</I> [clocktime]] [input | output]<BR>   | contrast to <I>value</I> <BR>    [over<I> duration </I>[clocktime]] [input | output]<BR>   | gamma to <I>gamma * 1000</I> <BR>    [over <I>duration</I> [clocktime]] [input | output]<BR>   | key index to <I>index<BR></I>   | key color to <I>r:g:b<BR></I>   | on | off<I><BR></I>   | palette handle to <I>handle<BR></I>   | record {on | off}<I><BR></I>   | record frame rate to {<I>1000 * frames/sec</I> | natural}<I><BR></I>   | sharpness to <I>value</I> <I><BR>    </I>[over <I>duration</I> [clocktime]] [input | output]<BR>   | source to {ntsc | rgb | svideo | pal | secam | generic} <BR>    [number <I>value</I>]<BR>   | [still] quality <I>descriptor</I><BR>   | stream to <I>number</I><BR>   | tint to <I>value</I> <BR>    [over <I>duration</I> [clocktime]] [input | output]}<BR>   |{{{[at <I>pos</I>] [every <I>dur</I>]} [return position] } | cancel} <BR>    [uservalue <I>id</I>]<BR>{  audio<BR>   | audio alignment<BR>   | audio input <BR>   | audio record<BR>   | audio source<BR>   | audio stream<BR>   | bass [nominal] [input | output]<BR>   | bitsperpel<BR>   | bitspersample<BR>   | brightness [nominal] [input | output]<BR>   | bytespersec<BR>   | color [nominal] [input | output]<BR>   | contrast [nominal] [input | output]<BR>   | current track <BR>   | disk space <I>drive</I><BR>   | [still] file format<BR>   | file completion<BR>   | file mode<BR>   | forward <BR>   | gamma [input | output]<BR>   | length <BR>   | length track  <I>trackno<BR></I>   | media present <I><BR></I>   | mode <I><BR></I>   | monitor [method]<I><BR></I>   | nominal frame rate<I><BR></I>   | number of tracks <BR>   | palette handle <BR>   | pause mode<BR>   | position <BR>   | position track  <I>trackno</I><BR>   | ready <BR>   | record frame rate [nominal]<BR>   | reference <I>frame</I><BR>   | reserved size <BR>   | samplespersec<BR>   | seek exactly<BR>   | sharpness [nominal] [input | output]<BR>   | smpte <BR>   | speed<BR>   | start position <BR>   | time format <BR>   | tint [nominal] [input | output]<BR>   | treble [nominal] [input | output]<BR>   | unsaved <BR>   | video <BR>   | video key index<BR>   | video key color<BR>   | video record <BR>   | video source<BR>   | video source number<BR>   | video stream<BR>   | [left | right] volume [input | output]}<BR>   | window handle<BR>   | window maximized<BR>   | window minimized<BR>   | window visible}<BR>[by <I>frames</I>] [reverse]<BR>[hold]<BR><BR>[at <I>rect</I>]<BR>[at <I>rect</I>] [hdc <I>hdc</I>] [paint]</P></TD></TR><TR><TD VALIGN="TOP">where <I>items</I></P></TD><TD VALIGN="TOP">{destination [max]<BR>   | frame [max]<BR>   | source [max]<BR>   | video [max]<BR>   | window [max]}</P></TD></TR><TR><TD VALIGN="TOP">window <I>items</I></P></TD><TD VALIGN="TOP">{{handle <I>handle</I> |  handle default}  <BR>   | state <I>state</I> <BR>   | text <I>caption</I>}</P></TD></TR></TBODY></TABLE>
<BR></P>The following conventions are used in the previous table:</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="76pt" VALIGN="TOP"><COL WIDTH="322pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Type <BR>Style</B></P></TD><TD VALIGN="TOP"><B>Used <BR>For</B></P></TD></TR></TBODY></TABLE>
<BR></P></P>
<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="76pt" VALIGN="TOP"><COL WIDTH="322pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Bold</P></TD><TD VALIGN="TOP">A specific term intended to be used literally. When used in the command column, it represents the MCI string command. When used in the arguments column, it represents a flag. For example, the capability command and the can play flag must be typed as show.</P></TD></TR><TR><TD VALIGN="TOP"><I>Italics</I></P></TD><TD VALIGN="TOP">Place holders for information you must provide. The MCI command or flag associated with the information must precede it. For example, to use the alias words for the <I>device_name</I> with the capability command, type "capability words can play."</P></TD></TR><TR><TD VALIGN="TOP">|</P></TD><TD VALIGN="TOP">Divider for mutually exclusive arguments. When multiple arguments are separated by this symbol, only one of them can be used for each command. For example, the items in the list are mutually exclusive and you must select only one to use with the capability command. (Do not type the | with the argument.)</P></TD></TR><TR><TD VALIGN="TOP">{ }</P></TD><TD VALIGN="TOP">Required argument. You must include an argument enclosed by braces. For example, you must use one of the arguments can eject, can play, can record, can save, compound device, device type, has audio, has video, uses files with the capability command. (Do not type the braces with the argument.)</P></TD></TR><TR><TD VALIGN="TOP">[ ]</P></TD><TD VALIGN="TOP">Optional argument.  For example, the alias, type, and shareable flags are optional for the open command.  You can use any combination of these flags.  You can also use optional arguments with a required argument.  (Do not type the brackets with the argument)</P></TD></TR></TBODY></TABLE>
<BR></P></P>
<P></P>
 </P>
</P></BODY></HTML>
