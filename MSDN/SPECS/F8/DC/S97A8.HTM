<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MCI_UPDATE</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>MCI_UPDATE</H2>  </P>
This MCI command message repaints the current frame into the specified display context.</P>
<B>Parameters</B>     DWORD  <I>lParam1</I> </P>
The following flags apply to all devices supporting MCI_UPDATE:</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="94pt" VALIGN="TOP"><COL WIDTH="321pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">MCI_NOTIFY</P></TD><TD VALIGN="TOP">Specifies that MCI should post the MM_MCINOTIFY message when this command completes. The window that receives this message is specified in the <B>dwCallback</B> field of the data structure identified by <I>lParam2</I>.</P></TD></TR><TR><TD VALIGN="TOP">MCI_TEST</P></TD><TD VALIGN="TOP">Queries the device to determine if it can execute the command. The device returns an error if it is incapable of executing the command. It returns no error if it can handle the command. MCI returns control to the application without executing the command.</P></TD></TR><TR><TD VALIGN="TOP">MCI_WAIT</P></TD><TD VALIGN="TOP">Specifies that the operation should finish before MCI returns control to the application.</P></TD></TR><TR><TD VALIGN="TOP">MCI_DGV_RECT</P></TD><TD VALIGN="TOP">Specifies that the <B>rc</B> field of the data structure identified by <I>lParam2</I> contains a valid display rectangle. The rectangle specifies the clipping rectangle relative to the client rectangle.</P></TD></TR><TR><TD VALIGN="TOP">MCI_DGV_UPDATE_HDC</P></TD><TD VALIGN="TOP">Specifies that the <B>hDC</B> field of the data structure identified by <I>lParam2</I> contains a valid window of the display context to paint. This field is required.</P></TD></TR><TR><TD VALIGN="TOP">MCI_DGV_UPDATE_PAINT</P></TD><TD VALIGN="TOP">An application uses this flag when it receives a WM_PAINT message that is intended for a for a display DC. A frame buffer device will usually paint the key color. A device that does not have a frame buffer may ignore the MCI_UPDATE message when the MCI_DGV_UPDATE_PAINT flag is used if it is currently playing because the display will be repainted during the play operation.</P></TD></TR><TR><TD VALIGN="TOP">LPMCI_DGV_UPDATE_PARMS  <I>lParam2</I> </P></TD><TD VALIGN="TOP">Specifies a far pointer to a <B>MCI_DGV_UPDATE_PARMS</B> data structure.</P></TD></TR><TR><TD VALIGN="TOP"><B>Return Value</B> </P></TD><TD VALIGN="TOP">Returns zero if successful. Otherwise, it returns an MCI error code.</P></TD></TR><TR><TD VALIGN="TOP"><B>Comments</B> </P></TD><TD VALIGN="TOP">When the application owns a window (that is, the application specified a window handle with the MCI_WINDOW message), it must send MCI_UPDATE whenever the window needs repainting. For example, an application uses these messages when it responds to a WM_PAINT message. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">If MCI_DGV_UPDATE_HDC is used without MCI_DGV_UPDATE_PAINT, the video overlay renders the current frame into the provided HDC. Devices supporting this feature will render a full bitmap and not just update the key color. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">If both MCI_DGV_UPDATE_HDC and MCI_DGV_UPDATE_PAINT are omitted, the contents of the video overlay device's frame buffer are refreshed. This is useful to show new live video data after MCI_UNFREEZE is sent to the driver from a paused state.</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
