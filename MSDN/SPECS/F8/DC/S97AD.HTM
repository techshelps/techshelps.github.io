<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MM_MCINOTIFY</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>MM_MCINOTIFY</H2>  </P>
This message is sent to a window to notify an application that an MCI device has completed an operation. MCI devices send this message only when the MCI_NOTIFY flag is used with an MCI command message or when the notify flag is used with an MCI command string.</P>
<B>Parameters</B>     WORD  <I>wParam</I> </P>
Contains one of the following message:</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="139pt" VALIGN="TOP"><COL WIDTH="265pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">MCI_NOTIFY_ABORTED</P></TD><TD VALIGN="TOP">Indicates the device received a command that prevented the current callback conditions from being met. If a new command interrupts the current command and it also requests notification, the device will send only this message and not MCI_NOTIFY_SUPERSEDED.</P></TD></TR><TR><TD VALIGN="TOP">MCI_NOTIFY_SUCCESSFUL</P></TD><TD VALIGN="TOP">Indicates the callback conditions have been met.</P></TD></TR><TR><TD VALIGN="TOP">MCI_NOTIFY_SUPERSEDED</P></TD><TD VALIGN="TOP">Indicates the device received another command with the MCI_NOTIFY flag set and the current callback conditions have been superseded.</P></TD></TR><TR><TD VALIGN="TOP">MCI_NOTIFY_FAILURE</P></TD><TD VALIGN="TOP">Indicates a device error occurred while the device was executing the command.</P></TD></TR><TR><TD VALIGN="TOP">LONG  <I>lParam</I> </P></TD><TD VALIGN="TOP">The low-order word specifies the ID of the device initiating the callback.</P></TD></TR><TR><TD VALIGN="TOP"><B>Return Value</B> </P></TD><TD VALIGN="TOP">Returns zero if successful. Otherwise, it returns an MCI error code.</P></TD></TR><TR><TD VALIGN="TOP"><B>Comments</B> </P></TD><TD VALIGN="TOP">A device returns MM_MCINOTIFY with the MCI_NOTIFY_SUCCESSFUL flag when the action for a command finishes. For example, MCI_PLAY for a CD audio device completes successfully only when it reaches the specified end position or reaches the end of the media. Similarly, MCI_SEEK and MCI_RECORD do not return MCI_NOTIFY_SUCCESSFUL until they reach the specified end position or reach the end of the media. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">A device returns the flag MCI_NOTIFY_ABORTED with MM_MCINOTIFY only when it receives a command that prevents it from meeting the notification conditions. For example, MCI_PLAY would not abort notification for a previous play command provided that the new command does not change the play direction or change the ending position for the play command with an active notify. The MCI_RECORD and MCI_SEEK commands behave similarly. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">MCI also does not send MCI_NOTIFY_ABORTED when MCI_PLAY or MCI_RECORD is paused with MCI_PAUSE. Sending the MCI_RESUME command will let them continue to meet the callback conditions. </P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">When your application requests notification for a command, check the error return of <B>mciSendMessage</B> or <B>mciSendCommand</B>. If these functions encounter an error and return a nonzero value, MCI will not set notification for the command.</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
