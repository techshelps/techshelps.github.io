<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Symbols for MIPS Architectures</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Symbols for MIPS Architectures</H2></P>
<H3><A NAME="sec0"></A>(0x1010) Local Procedure Start MIPS </H3>The symbol records define local (file static) procedure definition.  For C/C++, functions that are declared static to a module are emitted as Local Procedure symbols.  </P>

<TABLE COLS="10" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="43pt" VALIGN="TOP"><COL WIDTH="41pt" VALIGN="TOP"><COL WIDTH="44pt" VALIGN="TOP"><COL WIDTH="33pt" VALIGN="TOP"><COL WIDTH="36pt" VALIGN="TOP"><COL WIDTH="59pt" VALIGN="TOP"><COL WIDTH="59pt" VALIGN="TOP"><COL WIDTH="3pt" VALIGN="TOP"><COL WIDTH="23pt" VALIGN="TOP"><COL WIDTH="3pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD COLSPAN="2" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>length</P></TD><TD VALIGN="TOP"><P>symbol</P></TD><TD VALIGN="TOP"><P>pParent</P></TD><TD VALIGN="TOP"><P>pEnd</P></TD><TD VALIGN="TOP"><P>pNext</P></TD><TD VALIGN="TOP"><P>length</P></TD><TD COLSPAN="2" VALIGN="TOP"><P>debug start</P></TD><TD COLSPAN="3" VALIGN="TOP"><P>-&gt;</P></TD></TR></TBODY></TABLE>
<BR></P></P>

<TABLE COLS="6" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="52pt" VALIGN="TOP"><COL WIDTH="66pt" VALIGN="TOP"><COL WIDTH="66pt" VALIGN="TOP"><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="25pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>debug end</P></TD><TD VALIGN="TOP"><P>int save mask</P></TD><TD VALIGN="TOP"><P>fp save mask</P></TD><TD VALIGN="TOP"><P>int save offset</P></TD><TD VALIGN="TOP"><P>fp save offset</P></TD><TD VALIGN="TOP"><P>-&gt;</P></TD></TR></TBODY></TABLE>
<BR></P></P>

<TABLE COLS="6" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="57pt" VALIGN="TOP"><COL WIDTH="57pt" VALIGN="TOP"><COL WIDTH="30pt" VALIGN="TOP"><COL WIDTH="35pt" VALIGN="TOP"><COL WIDTH="85pt" VALIGN="TOP"><COL WIDTH="61pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>1</P></TD><TD VALIGN="TOP"><P>1</P></TD><TD VALIGN="TOP"><P>*</P></TD></TR><TR><TD VALIGN="TOP"><P>@proctype</P></TD><TD VALIGN="TOP"><P>offset</P></TD><TD VALIGN="TOP"><P>seg</P></TD><TD VALIGN="TOP"><P>retreg</P></TD><TD VALIGN="TOP"><P>frame pointer reg</P></TD><TD VALIGN="TOP"><P>name</P></TD></TR></TBODY></TABLE>
<BR></P><P></P>
<P><I>symbol</I>    S_LPROCMIPS or S_GPROCMIPS</P>
<P><I>pParent</I>    See the section on lexical scope linking</P>
<P><I>pEnd</I>    See the section on lexical scope linking</P>
<P><I>pNext</I>    See the section on lexical scope linking</P>
<P><I>length</I>    Length in bytes of this procedure</P>
<P><I>debug start</I>    Offset in bytes from the start of the procedure to the point where the stack frame has been set up.  Parameter and frame variables can be viewed at this point.</P>
<P><I>debug end</I>    Offset in bytes from the start of the procedure to the point where the procedure is ready to return and has calculated its return value, if any.  Frame and register variables can still be viewed.  If the procedure has multiple exits, then this field is zero.</P>
<P><I>int save mask</I>    Integer register save mask</P>
<P><I>fp save mask</I>    Floating point register save mask</P>
<P><I>int save offset</I>    Offset from sp to the integer register save area</P>
<P><I>fp save offset</I>    Offset from sp to the floating point register save area</P>
<P><I>@proctype</I>    Type index of the procedure type record</P>
<P><I>offset</I>    Offset portion of the address of the start of the procedure </P>
<P><I>segment</I>    Segment portion of the address of the start of the procedure</P>
<P><B></B></P>
<P><I>retreg</I>    Index of the register that contains the return address.  If this register is 31 and the integer register save mask indicates that the register has been saved, then the return address is in the integer register save area.</P>
<P><I>framepointer</I>    Frame pointer register if not zero</P>
<P><I>name</I>    Length prefixed name of procedure</P>
<H3><A NAME="sec1"></A>(0x1011) Global Procedure Start MIPS </H3>This symbol is used for procedures that are not specifically declared static to a module.  The format is the same as the Local Procedure Start 16:32 symbol (see above.)</P></BODY></HTML>
