<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hash table and sort table descriptions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Hash table and sort table descriptions</H2></P>
The NB09 and NB11 signature CodeView information contains hash/sort tables in the sstGlobalSym, sstGlobalPub, and sstStaticSym subsections.</P>
</P>
<H3><A NAME="sec0"></A>Name hash table (symhash == 10):</H3></P>
The symbol name hash table uses the following checksum algorithm to generate the hash.</P>
</P>
    byt_toupper(b)     &lt;- (b&amp;0xDF)</P>
    dwrd_toupper(dw)     &lt;- (dw&amp;0xDFDFDFDF)</P>
</P>
    cb     = {Number of characters in the name}</P>
    lpbName    = {pointer to the first character of the name}</P>
</P>
    ulEnd = 0;</P>
    while ( cb &amp; 3 ) {</P>
        ulEnd |= byt_toupper ( lpbName [ cb - 1 ] );</P>
        ulEnd &lt;&lt;= 8;</P>
        cb -= 1;</P>
    }</P>
</P>
    cul = cb / 4;</P>
</P>
    lpulName = lpbName;</P>
    for ( iul = 0; iul &lt; cul; iul++ ) {</P>
        ulSum ^= dwrd_toupper(lpulName[iul]);</P>
        _lrotl ( ulSum, 4 );</P>
    }</P>
    ulSum ^= ulEnd;</P>
</P>
The hash bucket number is derived from ulSum by taking the modulo of ulSum with the total number of hash buckets.</P>
</P>
The format of the table is as follows.</P>
</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="24pt" VALIGN="TOP"><COL WIDTH="117pt" VALIGN="TOP"><COL WIDTH="234pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>cHash(n)</P></TD><TD VALIGN="TOP"><P>Number of hash buckets</P></TD></TR><TR><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>Alignment</P></TD><TD VALIGN="TOP"><P>Filler to preserve alignment</P></TD></TR><TR><TD VALIGN="TOP"><P>4n</P></TD><TD VALIGN="TOP"><P>Hash Table[n]</P></TD><TD VALIGN="TOP"><P>Each ulong entry is a file offset from the beginning of the chain table to the first chain item for each hash bucket.</P></TD></TR><TR><TD VALIGN="TOP"><P>4n</P></TD><TD VALIGN="TOP"><P>Bucket Counts[n]</P></TD><TD VALIGN="TOP"><P>Each ulong entry is the count of items in the chain for each hash bucket.</P></TD></TR><TR><TD VALIGN="TOP"><P>8m</P></TD><TD VALIGN="TOP"><P>Chain table[m]</P></TD><TD VALIGN="TOP"><P>Each entry is a pair of dwords.  The first dword is the file offset of the referenced symbol from the beginning of the symbols.  The second dword is the checksum of the referenced symbol generated by the above algorithm.</P></TD></TR></TBODY></TABLE>
<BR></P></P>
<P>n  = the number of hash buckets</P>
<P>m =  the number of symbols (with names) = the number of entries in the chain table</P>
</P>
<H3><A NAME="sec1"></A>Address sort table (addrhash == 12):</H3></P>
</P>
The address sort table is a grouping of logical segments (or sections) where each symbol reference within the segment/section is sorted by its segment/section relative offset.</P>
</P>
The format of the table is as follows.</P>
</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="24pt" VALIGN="TOP"><COL WIDTH="117pt" VALIGN="TOP"><COL WIDTH="234pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>cSeg(n)</P></TD><TD VALIGN="TOP"><P>Number of logical segments/sections</P></TD></TR><TR><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>Alignment</P></TD><TD VALIGN="TOP"><P>Filler to preserve alignment</P></TD></TR><TR><TD VALIGN="TOP"><P>4n</P></TD><TD VALIGN="TOP"><P>Segment Table[n]</P></TD><TD VALIGN="TOP"><P>Each ulong entry is a file offset from the beginning of the offset table to the first offset item for each segment/section.</P></TD></TR><TR><TD VALIGN="TOP"><P>4n</P></TD><TD VALIGN="TOP"><P>Offset Counts[n]</P></TD><TD VALIGN="TOP"><P>Each ulong entry is the count of items in the offset table for each segment.</P></TD></TR><TR><TD VALIGN="TOP"><P>8m</P></TD><TD VALIGN="TOP"><P>Offset Table[m]</P></TD><TD VALIGN="TOP"><P>Each entry is a pair of dwords.  The first dword is the file offset of the referenced symbol from the beginning of the symbols.  The second dword is the segment/section relative offset of the referenced symbol in memory.</P></TD></TR></TBODY></TABLE>
<BR></P></P>
n  = the number of segments/sections</P>
m =  the number of symbols (with addresses) = the number of entries in the offset table</P>
</P>
<P></P></BODY></HTML>
