<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DllCanUloadNow</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>DllCanUloadNow</H3>  </P>
<B>HRESULT DllCanUnloadNow(void)</B></P>
DllCanUnloadNow is not provided by COM. Rather, it is a function implemented by and exported from .DLLs supporting the Component Object Model. DllCanUnloadNow should be exported from .DLLs designed to be dynamically loaded in CoGetClassObject or CoLoadLibrary calls. A .DLL is no longer in use when there are no existing instances of classes it manages; at this point, the .DLL can be safely freed by calling CoFreeUnusedLibraries. If the .DLL loaded by CoGetClassObject fails to export DllCanUnloadNow, the .DLL will only be unloaded when CoUninitialize is called to release the COM libraries.</P>
If this function returns S_OK, the duration within which it is in fact safe to unload the .DLL depends on whether the .DLL is single- or multi-thread aware. For single-thread .DLLs, it is safe to unload the .DLL up until such time as the thread on which DllCanUnloadNow was invoked causes it to be otherwise (objects created, for example). </P>
</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="92pt" VALIGN="TOP"><COL WIDTH="253pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Return Value</B></P></TD><TD VALIGN="TOP"><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP">S_OK</P></TD><TD VALIGN="TOP">The .DLL may be unloaded now.</P></TD></TR><TR><TD VALIGN="TOP">S_FALSE</P></TD><TD VALIGN="TOP">The .DLL should not be unloaded at the present time.</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
