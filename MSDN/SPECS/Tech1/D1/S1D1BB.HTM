<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoGetStandardMarshal</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>CoGetStandardMarshal</H3>  </P>
<B>HRESULT CoGetStandardMarshal(iid, pUnkObject, dwDestContext, pvDestContext, mshlflags, ppmarshal)</B></P>
Return an IMarshal instance that knows how to do the standard marshaling and unmarshaling in order to create a proxy in the indicated destination context. Custom marshaling implementations should delegate to the marshaler here returned for destination contexts that they do not fully understand or for which they choose not to take special action. The standard marshaler is also used in the case that the object being marshaled does not support custom marshaling.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="106pt" VALIGN="TOP"><COL WIDTH="87pt" VALIGN="TOP"><COL WIDTH="271pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">iid</P></TD><TD VALIGN="TOP">REFIID</P></TD><TD VALIGN="TOP">The interface id we would like to marshal.</P></TD></TR><TR><TD VALIGN="TOP">pUnkObject</P></TD><TD VALIGN="TOP">IUnknown*</P></TD><TD VALIGN="TOP">The object that we want to marshal. It is specifically <I>not</I> the case that this interface is known to be of shape iid; rather, it can be any interface on the object which conforms to IUnknown. The standard marshaler will internally do a <B>QueryInterface().</B></P></TD></TR><TR><TD VALIGN="TOP">dwDestContext</P></TD><TD VALIGN="TOP">DWORD</P></TD><TD VALIGN="TOP">The destination context in which the unmarshaling will occur.</P></TD></TR><TR><TD VALIGN="TOP">pvDestContext</P></TD><TD VALIGN="TOP">void *</P></TD><TD VALIGN="TOP">Associated with the destination context.</P></TD></TR><TR><TD VALIGN="TOP">mshlflags</P></TD><TD VALIGN="TOP">DWORD</P></TD><TD VALIGN="TOP">The marshal flags for the marshaling operation.</P></TD></TR><TR><TD VALIGN="TOP">ppmarshal</P></TD><TD VALIGN="TOP">IMarshal **</P></TD><TD VALIGN="TOP">The place at which the standard marshaler should be returned.</P></TD></TR><TR><TD VALIGN="TOP">return value</P></TD><TD VALIGN="TOP">HRESULT</P></TD><TD VALIGN="TOP">S_OK, E_FAIL</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
