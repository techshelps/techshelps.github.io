<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AntiMoniker Class</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>AntiMoniker Class</H2>  </P>
An anti-moniker is a moniker that when composed onto the end of a generic composite moniker removes the last piece. Composing an anti-moniker onto the end of another kind of moniker should, generally, annihilate the whole other moniker.</P>
Being composed onto the end of another moniker is pretty much the only interesting thing one can do to an anti-moniker: they cannot be bound, their display name is useless, and so forth. They exist to support implementations of IMoniker::Inverse; see that function for usage scenarios.</P>
Moniker implementations that use anti-monikers as inverses should check for anti-monikers on the right in their implementations of IMoniker::ComposeWith and collapse down to nothing if so.</P>
 </P></BODY></HTML>
