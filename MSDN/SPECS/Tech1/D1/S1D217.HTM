<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MonikerCommonPrefixWith</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>MonikerCommonPrefixWith</H3>  </P>
<B>HRESULT MonikerCommonPrefixWith(pmkThis, pmkOther, ppmkPrefix)</B></P>
This function is intended solely for the use of moniker <I>implementors; </I>clients of monikers "need not apply;" clients should instead compute the common prefix between two monikers by using:</P>
  </P>
<BR></P>
<pre><code>     pmkSrc-&gt;CommonPrefixWith(pmkOther, ppmkPrefix);
</code></pre>
  </P>
Implementations of IMoniker::CommonPrefixWith necessarily call MonikerCommonPrefixWith as part of their internal processing. Such a method should first check to see if the other moniker is a type that it recognizes and handles specially. If not, it should call MonikerCommonPrefixWith, passing itself as pmkSrc and the other moniker as pmkDest. MonikerCommonPrefixWith will handle the generic composite cases correctly.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="88pt" VALIGN="TOP"><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="304pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pmkThis</P></TD><TD VALIGN="TOP">IMoniker*</P></TD><TD VALIGN="TOP">The starting moniker for the computation of the relative path.</P></TD></TR><TR><TD VALIGN="TOP">pmkOther</P></TD><TD VALIGN="TOP">IMoniker*</P></TD><TD VALIGN="TOP">The moniker to which a relative path should be taken.</P></TD></TR><TR><TD VALIGN="TOP">ppmkPrefix</P></TD><TD VALIGN="TOP">IMoniker**</P></TD><TD VALIGN="TOP">May <I>not</I> be NULL. The place at which the moniker of pmkDest relative to pmkSrc is to be returned.</P></TD></TR><TR><TD VALIGN="TOP">return value</P></TD><TD VALIGN="TOP">HRESULT</P></TD><TD VALIGN="TOP">S_OK, MK_S_HIM, MK_S_ME, MK_S_US, MK_S_NOPREFIX</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
