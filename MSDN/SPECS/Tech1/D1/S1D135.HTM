<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing ORPC in RPC</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>Implementing ORPC in RPC</H2>  </P>
Since the implicit parameters are specified as IDL, the ORPC header received by RPC will contain many fields inserted by MIDL. Here are the definitions for the header on the wire.</P>
  </P>
<BR></P>
<pre><code>/*
     An inbound header would be laid out as follows where the
extent array is optional and there may be zero of more extents.
An outbound header is laid out similarly.

      ORPCTHIS_WITHNOEXTENSIONS
      [
       ORPC_EXTENT_ARRAY
          [ORPC_EXTENT]*
         ]

*/
typedef struct
{
  COMVERSION     version;       // COM version number
  unsigned long  flags;         // INFO flags for presence of other data
  unsigned long  reserved1;     // set to zero
  LTID           ltid;          // logical thread id of caller
  unsigned long  unique;        // tag to indicate presence of extensions
} ORPCTHIS_WITHNOEXTENSION;

typedef struct
{
    unsigned long  rounded_size;   // Actual number of extents.
    uuid_t         id;             // Extension identifier.
    unsigned long  size;           // Extension size.
    byte           data[];         // Extension data.
} ORPC_EXTENT;


// Array of extensions.
typedef struct
{
  unsigned long  rounded_size;   // Actual number of extents
  unsigned long  size;           // Number of extents
  unsigned long  unique_flag[];  // Flags to indicate presense of ORPC_EXTENTs
} ORPC_EXTENT_ARRAY;

typedef struct
{
  unsigned long  flags;         // INFO flags for presence of other data
  unsigned long  unique;        // tag to indicate presence of extensions
} ORPCTHAT_WITH_NOEXTENSIONS;
</code></pre>
  </P>
 </P></BODY></HTML>
