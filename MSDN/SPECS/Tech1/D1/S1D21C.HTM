<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMoniker::ParseDisplayName</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IMoniker::ParseDisplayName</H3>  </P>
<B>HRESULT IMoniker::ParseDisplayName(pbc, pmkToLeft, lpszDisplayName, pcchEaten, ppmkOut)</B></P>
Given that the composite moniker (pmkToLeft + [composition operation] (the receiver)) is the moniker which has so far been parsed, parse as much of the remaining tail as is appropriate. In general, the maximal prefix of lpszDisplayName which is syntactically valid and which currently <I>represents an existing object </I>should be consumed.</P>
The main loop of MkParseDisplayName finds the next piece moniker piece by calling this function on the moniker-so-far that it holds on to, passing NULL through pmkToLeft. In the case that the moniker-so-far is a generic composite, this is forwarded by that composite onto its last piece, passing the prefix of the composite to the left of the piece in pmkToLeft.</P>
lpszDisplayName is the as-yet-to-be-parsed tail of the display name. This function is to consume as much of it as is appropriate for a name within the object identified by (pmkToLeft + [composition operation] (the receiver)) and return the corresponding moniker.</P>
Some moniker classes will be able to handle this parsing internally to themselves since they are designed to designate only certain kinds of objects. Others will need to bind to the object that they designate in order to accomplish the parsing process. As is usual, these objects should not be released by IMoniker::ParseDisplayName but instead should be transferred to the bind context for release at a later time.</P>
If a syntax error occurs, then NULL should be returned through ppmkOut and MK_E_SYNTAX returned. In addition, the number of characters of the display name that were <I>successfully</I> parsed should be returned through pcchEaten.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="106pt" VALIGN="TOP"><COL WIDTH="78pt" VALIGN="TOP"><COL WIDTH="290pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pbc</P></TD><TD VALIGN="TOP">IBindCtx*</P></TD><TD VALIGN="TOP">The binding context in which to accumulate bound objects.</P></TD></TR><TR><TD VALIGN="TOP">pmkToLeft</P></TD><TD VALIGN="TOP">IMoniker*</P></TD><TD VALIGN="TOP">The moniker to the left of this one in the so-far-parsed display name.</P></TD></TR><TR><TD VALIGN="TOP">lpszDisplayName</P></TD><TD VALIGN="TOP">LPSTR</P></TD><TD VALIGN="TOP">The display name to be parsed.</P></TD></TR><TR><TD VALIGN="TOP">pcchEaten</P></TD><TD VALIGN="TOP">ULONG*</P></TD><TD VALIGN="TOP">The number of characters of the input name that this parse consumed.</P></TD></TR><TR><TD VALIGN="TOP">ppmkOut</P></TD><TD VALIGN="TOP">IMoniker*</P></TD><TD VALIGN="TOP">The resulting moniker.</P></TD></TR><TR><TD VALIGN="TOP">return value</P></TD><TD VALIGN="TOP">HRESULT</P></TD><TD VALIGN="TOP">S_OK, MK_E_SYNTAX<I>.</I></P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
