<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>Introduction</H2>  </P>
The COM technology known as <I>Connectable Objects </I>(also called connection points) supports a generic ability for any object, called in this context a <I>connectable</I> object, to express these capabilities:</P>
<SPAN CLASS="list"><UL><LI>The existence of <I>outgoing</I> interfaces,1. such as event sets.</LI><LI>The ability to enumerate the IIDs of the outgoing interfaces.</LI><LI>The ability to connect and disconnect <I>sinks</I> to the object for those outgoing IIDs.</LI><LI>The ability to enumerate the connections that exist to a particular outgoing interface.</LI></UL></SPAN>Support for these capabilities involves four interfaces: IConnectionPointContainer<I>, </I>IEnumConnectionPoints<I>, </I>IConnectionPoint<I>, </I>and IEnumConnections. A connectable object implements IConnectionPointContainer<I> </I>to indicate existence of outgoing interfaces. Through this interface a client can enumerate connection points for each outgoing IID (via an enumerator with IEnumConnectionPoints) and can obtain an IConnectionPoint<I> </I>interface to a connection point for each IID. Through a connection point a client starts or terminates an advisory loop with the connectable object and the client's own sink. The connection point can also enumerate the connections it knows about through an enumerator with IEnumConnections<I>.</I></P>
</P>
 </P></BODY></HTML>
