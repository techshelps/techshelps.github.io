<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Activation Security</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>Activation Security</H2>  </P>
As described in previous chapters, objects are exposed to clients either <I>statically</I>, by configuring a persistent registry with information about the server code the <I>Service Control Manager</I> launches to retrieve an object, or <I>dynamically</I>, through publishing an object, such as a class object via CoRegisterClassObject or a running object via IRunningObjectTable::Register. Accordingly, there are two aspects to activation security, one static (or automatic) form, and one dynamic form.</P>
Activation security is automatically applied by the <I>Service Control Manager</I> of a particular computer. Upon receipt of a request to retrieve an object, the <I>Service Control Manager</I> checks the request against security information stored either within its registry or gathered dynamically from objects and stored within its internal tables.</P>
 </P></BODY></HTML>
