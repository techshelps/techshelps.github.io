<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRpcChannelBuffer::FreeBuffer</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IRpcChannelBuffer::FreeBuffer</H3>  </P>
<B>HRESULT IRpcChannelBuffer::FreeBuffer(pMessage)</B></P>
Free a memory buffer in pMessage-&gt;pvBuffer that was previously allocated by the channel.</P>
At various times the RPC channel allocates a memory buffer and returns control of same to a calling client. Both GetBuffer() and SendReceive() do so, for example. FreeBuffer() is the means by which said calling client informs the channel that it is done with the buffer.</P>
On function entry, the buffer which is to be freed is pMessage-&gt;pvBuffer, which explicitly may or may not be NULL. If pMessage-&gt;pvBuffer is non-NULL, then FreeBuffer() frees the buffer, NULLs the pointer, and returns NOERROR; if pMessage-&gt;pvBuffer is NULL, then FreeBuffer() simply returns NOERROR (for example, passing NULL is <I>not</I> an error). Thus, on function exit, pMessage-&gt;pvBuffer is always NULL. Notice that pMessage-&gt;cbBuffer is never looked at or changed.</P>
There are strict rules as to what data accessible from pMessage may have been modified in the intervening time between the time the buffer was allocated and the call to FreeBuffer(). In short, very little modification is permitted; see above and below for precise details.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="128pt" VALIGN="TOP"><COL WIDTH="280pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pMessage</P></TD><TD VALIGN="TOP">RPCOLEMESSAGE *</P></TD><TD VALIGN="TOP">Pointer to structure containing pointer to buffer to free.</P></TD></TR><TR><TD VALIGN="TOP">return value</P></TD><TD VALIGN="TOP">HRESULT</P></TD><TD VALIGN="TOP">S_OK, E_UNEXPECTED</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
