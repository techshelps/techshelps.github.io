<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The IEnumConnectionPoints Interface</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>The IEnumConnectionPoints Interface</H2>  </P>
A connectable object can be asked to enumerate its supported connection points—in essence, its outgoing interfaces—through IConnectionPointContainer::EnumConnectionPoints. The resulting enumerator returned from this member implements the interface IEnumConnectionPoints<I> </I>through which a client can access all the individual connection point sub-objects supported within the connectable object itself, where each connection point, of course, implements IConnectionPoint<I>.</I></P>
Therefore IEnumConnectionPoints is a standard enumerator interface typed for IConnectionPoint*.</P>
IDL:</P>
  </P>
<BR></P>
<pre><code>[
uuid(B196B285-BAB4-101A-B69C-00AA00341D07)
    , object, pointer_default(unique)
]
interface IEnumConnectionPoints : IUnknown
    {
    HRESULT Next([in] ULONG cConnections
        , [out, max_is(cConnections)] IConnectionPoint **rgpcn
        , [out] ULONG *pcFetched);

    HRESULT Skip([in] ULONG cConnections);
    HRESULT Reset(void);
    HRESULT Clone([out] IEnumConnectionPoints **ppEnum);
    }
</code></pre>
  </P>
 </P></BODY></HTML>
