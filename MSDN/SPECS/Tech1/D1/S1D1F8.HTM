<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IConnectionPointContainer::FindConnectionPoint</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IConnectionPointContainer::FindConnectionPoint</H3>  </P>
<B>HRESULT FindConnectionPoint([in] REFIID riid , [out] IConnectionPoint **ppCP);</B></P>
Asks the connectable object if it has a connection point for a particular IID, and if so, returns the IConnectionPoint<I> </I>interface pointer to that connection point. Upon successful return, the caller must call IConnectionPoint::Release<I> </I>when that connection point is no longer needed.</P>
Note that this function is the QueryInterface<I> </I>equivalent for an object's outgoing interfaces, where the outgoing interface is specified with riid and where the interface pointer returned is always that of a connection point.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="124pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">riid</P></TD><TD VALIGN="TOP">REFIID</P></TD><TD VALIGN="TOP">[in]    A reference to the outgoing interface IID whose connection point is being requested.</P></TD></TR><TR><TD VALIGN="TOP">ppCP</P></TD><TD VALIGN="TOP">IConnectionPoint **</P></TD><TD VALIGN="TOP">[out]    The address of the caller's variable that is to receive the IConnectionPoint<I> </I>interface pointer to the connection point that manages the outgoing interface identified with riid. This is set to NULL on failure of the call; otherwise the caller must call IConnectionPoint::Release<I> </I>when the connection point is no longer needed.</P></TD></TR></TBODY></TABLE>
<BR></P></P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="155pt" VALIGN="TOP"><COL WIDTH="307pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Return Value</B></P></TD><TD VALIGN="TOP"><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP">S_OK</P></TD><TD VALIGN="TOP">The call succeeded and *ppCP<I> </I>has a valid interface pointer.</P></TD></TR><TR><TD VALIGN="TOP">E_POINTER</P></TD><TD VALIGN="TOP">The address passed in ppCP<I> </I>is not valid (such as NULL).</P></TD></TR><TR><TD VALIGN="TOP">E_UNEXPECTED</P></TD><TD VALIGN="TOP">An unknown error occurred.</P></TD></TR><TR><TD VALIGN="TOP">E_OUTOFMEMORY</P></TD><TD VALIGN="TOP">There was not enough memory to carry out the operation, such as not being able to create a new connection point object.</P></TD></TR><TR><TD VALIGN="TOP">CONNECT_E_NOCONNECTION</P></TD><TD VALIGN="TOP">This connectable object does not support the outgoing interface specified by riid<I>.</I></P></TD></TR></TBODY></TABLE>
<BR></P>  </P>
<B>Comments</B>   E_NOTIMPL is not allowed as a return code for this member. Any implementation of <I>IConnectionPointConta</I>i<I>ner </I>must implement this method.</P>
  </P>
</P>
 </P></BODY></HTML>
