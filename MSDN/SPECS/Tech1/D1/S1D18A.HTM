<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IClassFactory::LockServer</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IClassFactory::LockServer</H3>  </P>
The other interesting member function of a class factory is LockServer. Here the server increments of decrements a lock count depending on the fLock parameter. If the last lock is removed and there are no objects in server, the server initiates unloading which again, is specific to the type of server and a topic for a later section. In any case, COM does not define a standard method for tracking the lock count. Since other code outside of the class factory may need access to the lock count, a global variable works well:</P>
  </P>
<BR></P>
<pre><code>//Global server lock count.
ULONG       g_cLock=0;
The implementation of LockServer<I> </I>is correspondingly simple:
HRESULT CTextRenderFactory::LockServer(BOOL fLock)
   {
   if (fLock)
      g_cLock++;
   else
      {
      g_cLock--;
      [Initiate unloading if there are no objects and no locks]
      }

   return NOERROR;
   }</code></pre>
  </P>
It is perfectly reasonable to double the use of g_cObj for counting locks as well as objects. You might want to keep them separate for debugging purposes.</P>
</P>
 </P></BODY></HTML>
