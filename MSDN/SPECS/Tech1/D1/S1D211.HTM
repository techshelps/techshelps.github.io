<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMoniker::IsEqual</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IMoniker::IsEqual</H3>  </P>
<B>HRESULT IMoniker::IsEqual(pmkOtherMoniker)</B></P>
The most important use of this function is in the implementation of the Running Object Table. As discussed in detail later, this table has two distinct but closely related roles. First, using a moniker, entries in the Running Object Table indicate those objects which are presently now logically running and to which auto-link reconnections should be made. Second, for those objects which are actually running (have an object pointer), it provides a means given their moniker to actually connect to the appropriate running object.</P>
The moniker implementation should <I>not</I> reduce itself before carrying out the compare operation.</P>
Two monikers which can compare as equal in either order must hash to the same value; see IMoniker::Hash.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="110pt" VALIGN="TOP"><COL WIDTH="78pt" VALIGN="TOP"><COL WIDTH="294pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pmkOtherMoniker</P></TD><TD VALIGN="TOP">IMoniker*</P></TD><TD VALIGN="TOP">The other moniker with whom we would like to compare the receiver.</P></TD></TR><TR><TD VALIGN="TOP">return value</P></TD><TD VALIGN="TOP">HRESULT</P></TD><TD VALIGN="TOP">S_OK, S_FALSE</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
