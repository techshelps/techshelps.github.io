<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 10: Persistent Storage</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H1>Chapter 10: Persistent Storage</H1>  </P>
As mentioned in Chapter 1, the enhanced COM services define a number of storage-related interfaces, collectively called <I>Persistent Storage </I>or Structured Storage. By definition of the term <I>interface</I>, these interfaces carry no implementation. They describe a way to create a "file system within a file," and they provide some extremely powerful features for applications including incremental access, transactioning, and a sharable medium that can be used for data exchange or for storing the persistent data of objects that know how to read and write such data themselves. The following sections deal with the structure of storage and the other features.</P>
You can read through this chapter, or choose a topic of interest from this list:</P>
<SPAN CLASS="list"><UL><LI><font class="MissingLink" meta="aslch10_File">A File System Within a File</font></LI><LI><font class="MissingLink" meta="aslch10_Stream">Storage and Stream Objects</font></LI><LI><font class="MissingLink" meta="aslch10_Design">Application Design with Structured Storage</font></LI><LI><font class="MissingLink" meta="aslch10_Elements">Naming Elements</font></LI><LI><font class="MissingLink" meta="aslch10_Access">Direct Access vs. Transacted Access</font></LI><LI><font class="MissingLink" meta="aslch10_Browsing">Browsing Elements</font></LI><LI><font class="MissingLink" meta="aslch10_Persistent">Persistent Objects</font></LI></UL></SPAN></P>
 </P></BODY></HTML>
