<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMarshal::MarshalInterface</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IMarshal::MarshalInterface</H3>  </P>
<B>HRESULT IMarshal::MarshalInterface(pstm, iid, pvInterface, dwDestContext, pvDestContext, mshlflags)</B></P>
Marshal a reference to the interface iid of this object into the given stream. The interface actually marshaled is the one that would be returned by this-&gt;QueryInterface(iid, ...). Once the contents of this stream are conveyed to the destination by whatever means, the interface reference can be reconstituted by instantiating with IMarshal interface the class here retrievable with GetUnmarshalClass and then calling IMarshal::UnmarshalInterface. The implementation of IMarshal::MarshalInterface writes in the stream any data required for initialization of this proxy.</P>
If the caller already has in hand the iid interface identified as being marshaled, he should pass the interface pointer through pvInterface. If he does not have this interface already, then he should pass NULL; the IMarshal implementation will QueryInterface on itself to retrieve the interface pointer.</P>
On exit from this function, the seek pointer in the stream must be positioned immediately after the last byte of data written to the stream.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="74pt" VALIGN="TOP"><COL WIDTH="303pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pstm</P></TD><TD VALIGN="TOP">IStream *</P></TD><TD VALIGN="TOP">The stream onto which the object should be marshaled. </P></TD></TR><TR><TD VALIGN="TOP">iid</P></TD><TD VALIGN="TOP">REFIID</P></TD><TD VALIGN="TOP">The interface of this object that we want to marshal.</P></TD></TR><TR><TD VALIGN="TOP">pvInterface</P></TD><TD VALIGN="TOP">void *</P></TD><TD VALIGN="TOP">The actual pointer that will be marshaled. May be NULL.</P></TD></TR><TR><TD VALIGN="TOP">dwDestContext</P></TD><TD VALIGN="TOP">DWORD</P></TD><TD VALIGN="TOP">As in CoMarshalInterface().</P></TD></TR><TR><TD VALIGN="TOP">pvDestContext</P></TD><TD VALIGN="TOP">void *</P></TD><TD VALIGN="TOP">As in CoMarshalInterface().</P></TD></TR><TR><TD VALIGN="TOP">mshlflags</P></TD><TD VALIGN="TOP">DWORD</P></TD><TD VALIGN="TOP">As in CoMarshalInterface().</P></TD></TR><TR><TD VALIGN="TOP">return value</P></TD><TD VALIGN="TOP">HRESULT</P></TD><TD VALIGN="TOP">S_OK, E_FAIL, E_NOINTERFACE, STG_E_MEDIUMFULL, E_UNEXPECTED</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
