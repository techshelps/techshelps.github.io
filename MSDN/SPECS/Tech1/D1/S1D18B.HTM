<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exposing the Class Factory from .DLL Servers</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Exposing the Class Factory from .DLL Servers</H3>  </P>
<A NAME="PT2"></A>To expose its class factory, an in-process server only needs to export<font class="MissingLink" meta="aslch06_FNFour">4.</font> a function explicitly named DllGetClassObject<I>. </I>The COM Library will attempt to locate this function in the .DLL's exports<font class="MissingLink" meta="aslch06_FNFive">5.</font> and call it from within CoGetClassObject<I> </I>when the client has specified CLSCTX_INPROC_SERVER. Note that a .DLL server can in addition expose a class factory at a later time using the function CoRegisterClassObject discussed for .EXE servers below. This would only be used after the .DLL was already loaded for some other reason.</P>
 </P></BODY></HTML>
