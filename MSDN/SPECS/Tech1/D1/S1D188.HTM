<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Defining the Class Factory Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Defining the Class Factory Object</H3>  </P>
First of all, you need to define an object that implements the IClassFactory interface (or other factory-type interface if applicable). As you would define any other object, you can define a class factory. The following is an example class factory for our TextRender objects in C++:</P>
  </P>
<BR></P>
<pre><code>class CTextRenderFactory : public IClassFactory
   {
   protected:
      ULONG           m_cRef;

   public:
      CTextRenderFactory(void);
      ~CTextRenderFactory(void);

      //IUnknown members
      HRESULT QueryInterface(REFIID, pLPVOID);
      ULONG AddRef(void);
      ULONG Release(void);

      //IClassFactory members
      HRESULT CreateInstance(IUnknown *, REFIID iid, void **ppv
      HRESULT LockServer(BOOL);
   };</code></pre>
  </P>
Implementing the member functions of this object are fairly straightforward. AddRef<I> </I>and <I>Release </I>do their usual business, with Release calling <I>delete this</I> when the count is decremented to zero. Note that the zero-count event in <I>Release</I> has no effect other than to destroy the object—it does not cause the server to unload as that is the prerogative of LockServer. In any case, the QueryInterface implementation here will return pointers for IUnknown<I> </I>and IClassFactory<I>.</I></P>
 </P></BODY></HTML>
