<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Creating the Object</H3>  </P>
Given a CLSID, the client must now create an object of that class in order to make use of its services. It does so using two steps:</P>
<SPAN CLASS="list"><OL><LI>Obtain the "class factory" for the CLSID.</LI><LI>Ask the class factory to instantiate an object of the class, returning an interface pointer to the client.</LI></OL></SPAN>After these steps, illustrated in Figure 5-1, the client is free to do whatever it wishes with the object through whatever interfaces the object supports. In fact, <I>everything </I>done with the object is accomplished through calls to interface member functions—APIs that seems to affect objects through other means are merely wrappers to common sequences of interface calls.</P>
Before examining each of these steps, let's take a look at what a class factory is in the first place.</P>
 </P></BODY></HTML>
