<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Wrapping DCE RPC Calls to Interoperate with ORPC</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>Wrapping DCE RPC Calls to Interoperate with ORPC</H2>  </P>
This is an example of a server side wrapper for the Bar method. It assumes the existence of small helper functions to import and export object references and lookup previously exported object references.</P>
  </P>
<BR></P>
<pre><code>RPC_STATUS Bar(handle_t h, short i, OBJREF * prIB, OBJREF ** pprIW) {
      UUID ipid;
   RPC_STATUS status;
   IFoo * pIF;
   IBar * pIB;
   IWaz * PIW;
   HRESULT hR;

   status = RpcBindingInqObject(h, &amp;ipid);
   if (status) return(SOMETHING); 

   status = ORpcLookupIPID(ipid, &amp;pIF);
   if (status) return(SOMETHING); 

   status = ORpcImportObjRef(prIB, &amp;pIB);
   if (status) return(SOMETHING); 

   hR = pIF-&gt;Bar(i, pIB, &amp;pIW);         // actual call to the method!

   pIB-&gt;Release();
   status = ORpcExportObjRef(pIW, pprIW);
   return(hR ? hR : SOMETHING);
   };</code></pre>
  </P>
This is an example of the client side wrapper for Bar:</P>
  </P>
<BR></P>
<pre><code>// assume some class CFoo that implements Bar method
class CFoo : IUnknown, IFoo {
   UUID ipid;      // one for each interface?
   handle_t h;

   virtual HRESULT QueryInterface(UUID iid, void **ppvoid);
   virtual HRESULT AddRef();
   virtual HRESULT Release();
   virtual HRESULT Bar(short i, IFoo * pIF, IWaz ** ppIW);
   };
HRESULT CFoo::Bar(short i, IFoo * pIF, IWaz ** ppIW) {
   OBJREF * prIF;
   OBJREF * prIW;
   HRESULT hR;
   RPC_STATUS status;

   status = RpcBindingSetObject(this-&gt;h, this-&gt;ipid);
   if (status) return(SOMETHING);

   status = ORpcExportObjRef(pIF, &amp;prIF);
   if (status) return(SOMETHING);

   hR = Bar(this-&gt;h, i, prIF, &amp;prIW);
   
   status = ORpcImportObjRef(prIW, ppIW);
   
   ORpcFreeObjRef(prIF);
   ORpcFreeObjRef(prIW);

   return(hR ? hR : SOMETHING);
};</code></pre>
  </P>
 </P></BODY></HTML>
