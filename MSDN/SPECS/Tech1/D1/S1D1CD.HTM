<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DebugORPCServerNotify</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>DebugORPCServerNotify</H3>  </P>
<B>void DebugORPCServerNotify(pMessage, iid, pChannel, pInterface, pUnkObject, pvBuffer, cbBuffer)</B></P>
Called on the server side immediately before calling IRpcStubBuffer::Invoke() to inform it that there is an incoming request. Will start the debugger in this process if need be. See the above overview for further details.</P>
The GUID for this notification is 1084FA00-9674-101A-B07B-00DD01113F11:</P>
  </P>
<BR></P>
<pre><code>GUID __private_to_macro__ = { /* 1084FA00-9674-101A-B07B-00DD01113F11 */
    0x1084FA00,
    0x9674,
    0x101A,
    0xB0,
    0x7B,
    {0x00, 0xDD, 0x01, 0x11, 0x3F, 0x11}
  };</code></pre>
  </P>
On entry, the members of pMessage are set as follows:</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="119pt" VALIGN="TOP"><COL WIDTH="343pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Member Name</B></P></TD><TD VALIGN="TOP"><B>Value on entry to Invoke()</B></P></TD></TR><TR><TD VALIGN="TOP">reserved members</P></TD><TD VALIGN="TOP">Indeterminate. These members are neither to be read nor to be changed by the callee.</P></TD></TR><TR><TD VALIGN="TOP">dataRepresentation</P></TD><TD VALIGN="TOP">This indicates the byte order, and so forth, of the client debugger.</P></TD></TR><TR><TD VALIGN="TOP">pvBuffer</P></TD><TD VALIGN="TOP">Points to a buffer which contains the marshaled incoming arguments. In the case that there are no such arguments (for example, cbBuffer == 0), pvBuffer may be NULL, but will not necessarily be so.</P></TD></TR><TR><TD VALIGN="TOP">cbBuffer</P></TD><TD VALIGN="TOP">The size in bytes of the memory buffer to which pvBuffer points. If pvBuffer is NULL, then cbBuffer will be zero (but the converse is not necessarily true, as was mentioned in pvBuffer).</P></TD></TR><TR><TD VALIGN="TOP">iMethod</P></TD><TD VALIGN="TOP">The zero-based method number in the interface which is being invoked.</P></TD></TR><TR><TD VALIGN="TOP">rpcFlags</P></TD><TD VALIGN="TOP">Indeterminate. Neither to be read nor to be changed by the callee.</P></TD></TR></TBODY></TABLE>
<BR></P></P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="92pt" VALIGN="TOP"><COL WIDTH="127pt" VALIGN="TOP"><COL WIDTH="254pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pMessage</P></TD><TD VALIGN="TOP">RPCOLEMESSAGE*</P></TD><TD VALIGN="TOP">As in <B>IRpcStubBuffer::Invoke().</B></P></TD></TR><TR><TD VALIGN="TOP">iid</P></TD><TD VALIGN="TOP">REFIID</P></TD><TD VALIGN="TOP">Contains the<B> iid </B>of the interface being called.</P></TD></TR><TR><TD VALIGN="TOP">pChannel</P></TD><TD VALIGN="TOP">IRpcChannelBuffer*</P></TD><TD VALIGN="TOP">As in<B> IRpcStubBuffer::Invoke(). </B>The COM RPC channel implementation on the server side.</P></TD></TR><TR><TD VALIGN="TOP">pInterface</P></TD><TD VALIGN="TOP">void *</P></TD><TD VALIGN="TOP">This contains the pointer to the COM interface instance which contains the pointer to the method that will be invoked by this particular remote procedure call. Debuggers can use this information in conjunction with the iMethod field of the pMessage structure to get to the address of the method to be invoked. May not be NULL.</P></TD></TR><TR><TD VALIGN="TOP">pUnkObject</P></TD><TD VALIGN="TOP">IUnknown *</P></TD><TD VALIGN="TOP">This pointer is currently NULL. In the future this might be used to pass the controlling IUnknown of the server object whose method is being invoked.</P></TD></TR><TR><TD VALIGN="TOP">pvBuffer</P></TD><TD VALIGN="TOP">void *</P></TD><TD VALIGN="TOP">The pointer to the incoming debug information. Is undefined (may or may not be NULL) if cbBuffer is zero.</P></TD></TR><TR><TD VALIGN="TOP">cbBuffer</P></TD><TD VALIGN="TOP">ULONG</P></TD><TD VALIGN="TOP">The size of the data pointed to by pvBuffer. May be zero, but as described above, a size of zero can only passed in the case that debugging is already enabled.</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
