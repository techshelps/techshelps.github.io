<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Extended Error Information Body Extension</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Extended Error Information Body Extension</H3>  </P>
The Extended Error Information Body Extension conveys extended error information concerning the original root cause of a error back to a caller [that] can deal with it. It is intended that this error information is suitable for displaying information to a human being who is the user; this information is not intended to be the basis for logical decisions in a piece of client code, for doing so couples the client code to the implementation of the server. Rather, client code should act semantically only on the information returned through the interface that it invokes. See also the ISupportErrorInfo, IErrorInfo, and ICreateErrorInfo interfaces. </P>
This extension is identified by the UUID f1f19681-4d2a-11ce-a66a-0020af6e72f4. It is only semantically useful in Response and Fault PDUs.</P>
There are three variations of the error information. The first of these can be used in a local context, where (i) the server knows it can reliably specify a path name to a file that can in fact be understood by the client, and (ii) the server knows the language of interest to the client. This first variation specifies the following members:</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="106pt" VALIGN="TOP"><COL WIDTH="358pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Member</B></P></TD><TD VALIGN="TOP">Description</P></TD></TR></TBODY></TABLE>
<BR></P></P>
  wszErrorString</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="106pt" VALIGN="TOP"><COL WIDTH="358pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">An error string suitable for display to a human user.</P></TD></TR><TR><TD VALIGN="TOP">_</P></TD></TR><TR><TD VALIGN="TOP">wszHelpFile</P></TD><TD VALIGN="TOP">A path to a help file that can give additional information concerning the error.</P></TD></TR><TR><TD VALIGN="TOP">ulHelpContext</P></TD><TD VALIGN="TOP">A Help context topic within that Help file.</P></TD></TR></TBODY></TABLE>
<BR></P>The second variation is suitable for use in remote situations where one or the other of the requirements of the use of the first variation cannot be upheld. This second variation specifies the following members:</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="119pt" VALIGN="TOP"><COL WIDTH="344pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Member</B></P></TD><TD VALIGN="TOP">Description</P></TD></TR></TBODY></TABLE>
<BR></P></P>
  uuidErrorSemantic</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="119pt" VALIGN="TOP"><COL WIDTH="344pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">A UUID signifying the semantic of the error.</P></TD></TR><TR><TD VALIGN="TOP">_</P></TD></TR><TR><TD VALIGN="TOP">ulErrorSemantic</P></TD><TD VALIGN="TOP">A four-byte quantity that qualifies the error semantic. The semantics of these four bytes are completely determined by the uuidErrorSemantic.</P></TD></TR><TR><TD VALIGN="TOP">cbData</P></TD><TD VALIGN="TOP">The size of the data passed in pbData.</P></TD></TR><TR><TD VALIGN="TOP">pbData</P></TD><TD VALIGN="TOP">Data associated with the error marshaled as an array of bytes. The interpretation of these bytes is governed by the uuidErrorSemantic.</P></TD></TR><TR><TD VALIGN="TOP">wszErrorString</P></TD><TD VALIGN="TOP">An error string suitable for display to a human user. This is in fact of somewhat little use, as the server returning the error can usually only guess as to the appropriate language in which to form this string. However, the ability to pass such as string is provided here as a last resort.</P></TD></TR><TR><TD VALIGN="TOP">lcidErrorString</P></TD><TD VALIGN="TOP">The locale context in which the error string, if any, is formed. Locale constants are as in the Microsoft Win32 API.</P></TD></TR></TBODY></TABLE>
<BR></P>The third variation allows for extensibility of the error information being passed. It specifies an object reference (an OBJREF). In practice, this reference most always contains a custom marshaled object, though this is not required.</P>
 </P></BODY></HTML>
