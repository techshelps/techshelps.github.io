<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 8: Security</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H1>Chapter 8: Security</H1>  </P>
There are two distinguishable categories of security provided by COM. The first form is termed <font class="MissingLink" meta="aslch08_Activation">Activation Security</font>, and it dictates how new objects are started, how new and existing objects are connected to, and how certain public services, such as the <I>Class Table</I> and the <I>Running Object Table</I> are secured. The second form is <font class="MissingLink" meta="aslch08_Call">Call Security</font>, which dictates how security operates at the call level between an established connection from a client to an object (server).</P>
Aspects of the security API are necessarily platform dependent. The Windows versions are shown for reference. Complete interoperability is supported by the user of common, installable authenticators. COM on Windows will support at least Windows NT, Novell Netware, and DCE Kerberos security.</P>
The remainder of this chapter describes these two forms of COM security in detail.</P>
 </P></BODY></HTML>
