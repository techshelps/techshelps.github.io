<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRunningObjectTable::Register</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IRunningObjectTable::Register</H3>  </P>
<B>HRESULT IRunningObjectTable::Register(reserved, pUnkObject, pmkObjectName, pdwRegister)</B></P>
Register the fact that the object pUnkObject has just entered the running state and that if the moniker pmkObjectName is bound to, then this object should be used as the result of the bind (with an appropriate QueryInterface). </P>
The moniker pmkObjectName should be fully reduced before registration. See IMoniker::Reduce for a more complete discussion. If an object goes by more than one fully reduced moniker, then it should register itself under all such monikers. Here, <I>fully reduced </I>means reduced to the state MKRREDUCE_THROUGUSER.</P>
Registering a second object under the same moniker sets up a second independent registration, though MK_S_MONIKERALREADYREGISTERED is returned instead of S_OK. This is done without regard to the value of pUnkObject in the second registration; thus, registering the exact same (pmkObjectName, pUnkObject) pair a second time will set up a second registration. It is not intended that multiple registration under the same moniker be a common occurrence, as which registration actually gets used in various situations is non-deterministic.</P>
The arguments to this function are as follows:</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="106pt" VALIGN="TOP"><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="286pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">reserved</P></TD><TD VALIGN="TOP">DWORD</P></TD><TD VALIGN="TOP">Reserved for future use; must be zero.</P></TD></TR><TR><TD VALIGN="TOP">pUnkObject</P></TD><TD VALIGN="TOP">IUnknown*</P></TD><TD VALIGN="TOP">The object which has just entered the running state.</P></TD></TR><TR><TD VALIGN="TOP">pmkObjectName</P></TD><TD VALIGN="TOP">IMoniker*</P></TD><TD VALIGN="TOP">The moniker which would bind to the newly running object.</P></TD></TR><TR><TD VALIGN="TOP">pdwRegister</P></TD><TD VALIGN="TOP">DWORD*</P></TD><TD VALIGN="TOP">A place to return a value by which this registration can later be revoked. May not be NULL. Zero will never be returned as a valid registration value; that is, on exit, *pdwRegister is never NULL.</P></TD></TR><TR><TD VALIGN="TOP">return value</P></TD><TD VALIGN="TOP">HRESULT</P></TD><TD VALIGN="TOP">S_OK, MK_S_MONIKERALREADYREGISTERED</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
