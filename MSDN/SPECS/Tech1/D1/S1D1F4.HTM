<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IConnectionPoint::Advise</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IConnectionPoint::Advise</H3>  </P>
<B>HRESULT IConnectionPoint::Advise([in] IUnknown *pUnk, [out] DWORD *pdwCookie); </B></P>
Establishes an advisory connection between the connection point and the caller's sink object identified with pUnk. The connection point must call pUnk-&gt;QueryInterface(iid, ...) on this pointer in order to obtain the correct outgoing interface pointer to call when events occur, where <I>iid </I>is the inherent outgoing interface IID managed by the connection point (that is, that when passed to IConnectionPointContainer::FindConnectionPoint would return an interface pointer to this same connection point).</P>
Upon successful return, the connection point provides a unique <I>cookie</I> in *pdwCookie<I> </I>that must be later passed to IConnectionPoint::Unadvise<I> </I>to terminate the connection.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="88pt" VALIGN="TOP"><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="304pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pUnk</P></TD><TD VALIGN="TOP">IUnknown *</P></TD><TD VALIGN="TOP">[in]     The IUnknown<I> </I>pointer to the client's sink that wishes to receive calls for the outgoing interface managed by this connection point. The connection point must query this pointer for the correct outgoing interface. If this query fails, this member returns CONNECT_E_CANNOTCONNECT.</P></TD></TR><TR><TD VALIGN="TOP">pdwCookie</P></TD><TD VALIGN="TOP">DWORD *</P></TD><TD VALIGN="TOP">[out]     A pointer to the caller's variable that is to receive the connection cookie when connection is successful. This cookie must be unique for each connection to any given <I>instance </I>of a connection point.</P></TD></TR></TBODY></TABLE>
<BR></P></P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="169pt" VALIGN="TOP"><COL WIDTH="294pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Return Value</B></P></TD><TD VALIGN="TOP"><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP">S_OK</P></TD><TD VALIGN="TOP">The connection has been established and *pdwCookie<I> </I>has the connection key.</P></TD></TR><TR><TD VALIGN="TOP">E_POINTER</P></TD><TD VALIGN="TOP">The value of pUnk<I> </I>or pdwCookie<I> </I>is not valid (NULL cannot be passed for either argument)</P></TD></TR><TR><TD VALIGN="TOP">E_UNEXPECTED</P></TD><TD VALIGN="TOP">An unknown error occurred.</P></TD></TR><TR><TD VALIGN="TOP">E_OUTOFMEMORY</P></TD><TD VALIGN="TOP">There was not enough memory to complete the operation, such as if the connection point failed to allocate memory in which to store the sink's interface pointer.</P></TD></TR><TR><TD VALIGN="TOP">CONNECT_E_ADVISELIMIT</P></TD><TD VALIGN="TOP">The connection point has already reached its limit of connections and cannot accept any more.</P></TD></TR><TR><TD VALIGN="TOP">CONNECT_E_CANNOTCONNECT</P></TD><TD VALIGN="TOP">The sink does not support the interface required by this connection point.</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
