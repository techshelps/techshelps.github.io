<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Item Moniker Class</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>Item Moniker Class</H2>  </P>
Item monikers provide a bridge from the generality of IMoniker interface to the simple and common situation in which an object which is a container of other objects also provides a space of names for those objects. Examples include spreadsheet applications which contain named ranges, various word-processing applications which support bookmarks.</P>
Item Moniker is a <I>class</I>, not a <I>interface</I>; that is, it is an <I>implementation </I>of IMoniker provided by COM library,<I> </I>not an interface that others implement. This implementation supports IMoniker interface by converting IMoniker invocations into a series of calls on part of the interface IOleItemContainer. The implication is that many object implementers do not have to deal much with monikers: they can deal simply with "items" in a string form, then wrap them in an Item Moniker as needed to support other interfaces.</P>
A client creates an Item Moniker using CreateItemMoniker. When this new moniker is composed onto the end of a moniker that binds to an IOleItemContainer, the resulting composite moniker will bind to the appropriate contained object.</P>
The following is the IOleItemContainer interface used by Item Monikers:</P>
  </P>
<BR></P>
<pre><code>interface <B>IOleItemContainer</B> : IOleContainer { 
<B>    </B>virtual    HRESULT    <B>GetObject</B>(lpszItem, dwSpeedNeeded, pbc, riid, ppvObject);
    virtual    HRESULT    <B>GetObjectStorage</B>(lpszItem, pbc, riid, ppvStorage);
    virtual    HRESULT    <B>IsRunning</B>(lpszItem);
    };</code></pre>
  </P>
 </P></BODY></HTML>
