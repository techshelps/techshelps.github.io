<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Class Factory Object: IClassFactory Interface</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>The Class Factory Object: IClassFactory Interface</H3>  </P>
<A NAME="PT2"></A>The class factory is another object itself that exists to <I>manufacture</I> objects (hence the name "factory") of a specific class (hence the qualifier "class").<font class="MissingLink" meta="aslch05_FNOne">1.</font> A class factory object is implemented by a server module, either a .DLL or .EXE, and supports the IClassFactory interface described below. For the purposes of COM Clients, the IClassFactory interface is and interface on an object used by a client. For information on implementation, see Chapter 6, "COM Servers."</P>
<img src="ASL0F.gif"></P>
<B>Figure 5-1 A client asks a class factory in the server to create an object.</B></P>
The IClassFactory interface is implemented by COM servers on a "class factory" object for the purpose of creating new objects of a particular class. The interface also provides for a COM client to keep the server in memory even when it is not servicing any object. A class factory has a one-to-one correspondence with a CLSID (although actual implementations can be made generic to service multiple classes if the COM server so chooses).</P>
  </P>
<BR></P>
<pre><code>[
    object,
    uuid(00000001-0000-0000-C000-000000000046), // IID_IClassFactory
    pointer_default(unique)
]
interface<B> IClassFactory </B>: IUnknown 
{
.....HRESULT <B>CreateInstance</B>([in] IUnknown * pUnkOuter, [in] REFIID iid, [out] void * ppv);
.....HRESULT <B>LockServer</B>([in]BOOL fLock);
}</code></pre>
  </P>
 </P></BODY></HTML>
