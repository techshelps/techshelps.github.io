<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMalloc Interface</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IMalloc Interface</H3>  </P>
The <I>IMalloc </I>interface is an abstraction of familiar memory-allocation primitives that fit into the COM interface model. Like all other interface[s], it is derived from IUnknown and correspondingly includes the AddRef, Release<I>, </I>and QueryInterface<I> </I>member functions. The first three IMalloc<I>-</I>specific<I> </I>functions in this interface are merely simple abstractions of the familiar C library functions malloc, realloc, and free.</P>
  </P>
<BR></P>
<pre><code>[
    local,
    object,
    uuid(00000002-0000-0000-C000-000000000046)
]
interface <B>IMalloc</B> : IUnknown {
...void * ...<B>Alloc</B>([in] ULONG cb);
...void *...<B>Realloc</B>([in] void * pv, [in] ULONG cb);
...void......<B>Free</B>([in] void* pv);
...ULONG...<B>GetSize</B>([in] void * pv);
...int......<B>DidAlloc</B>([in] void * pv);
...void......<B>HeapMinimize</B>(void);
...};</code></pre>
  </P>
 </P></BODY></HTML>
