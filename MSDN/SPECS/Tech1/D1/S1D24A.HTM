<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface name as a type</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Interface name as a type</H3>  </P>
The interface name becomes the name of a type, which can then be used as a parameter in methods. For example:</P>
  </P>
<BR></P>
<pre><code>[object, uuid(b5483f00-4f6c-101b-a1c7-00aa00389acb)]
   interface IFoo {
      };</code></pre>
  </P>
causes a typed named "IFoo" to be declared, such that a method</P>
  </P>
<BR></P>
<pre><code>[object, uuid(6A874340-57EB-11ce-A964-00AA006C3706)] 
   interface IBar {
      HRESULT   M1([in] short i, [in] IFoo* pfoo);
      };</code></pre>
  </P>
is a legal declaration.</P>
 </P></BODY></HTML>
