<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoReleaseMarshalData</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>CoReleaseMarshalData</H3>  </P>
<B>HRESULT CoReleaseMarshalData(pstm)</B></P>
This helper function destroys a previously marshaled data packet. This function must always be called in order to destroy data packets. Examples of when this occurs include:</P>
<SPAN CLASS="list"><OL><LI>An internal error during an RPC invocation prevented the UnmarshalInterface() operation from being attempted.</LI><LI>A marshaled-data-packet was removed from a global table.</LI><LI>Following a successful, normal, unmarshal call.</LI></OL></SPAN>This function works as should be expected: the class ID is obtained from the stream; an instance is created; IMarshal is obtained from that instance; then IMarshal::ReleaseMarshalData() is invoked.</P>
Note for clarity: CoReleaseMarshalData() is not to be called following a normal, successful CoUnmarshalInterface(), as the latter function does this automatically for MSHLFLAGS_NORMAL. However, clients that use IMarshal interface directly, rather than simply going through the functions CoMarshal/UnmarshalInterface(), and so forth, must of course themselves always call IMarshal::ReleaseMarshalData() after calling IMarshal::UnmarshalInterface().</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="83pt" VALIGN="TOP"><COL WIDTH="285pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pstm</P></TD><TD VALIGN="TOP">IStream*</P></TD><TD VALIGN="TOP">A pointer to a stream that contains the data packet which is to be destroyed.</P></TD></TR><TR><TD VALIGN="TOP">return value</P></TD><TD VALIGN="TOP">HRESULT</P></TD><TD VALIGN="TOP">S_OK, E_FAIL</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
