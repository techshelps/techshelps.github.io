<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IClassFactory::CreateInstance</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IClassFactory::CreateInstance</H3>  </P>
<B>HRESULT IClassFactory::CreateInstance(pUnkOuter, iid, ppvObject)</B></P>
Create an uninitialized instance, that is, object, of the class associated with the class factory, returning an interface pointer of type iid on the object to the caller in the out-parameter ppvObject.</P>
If the object is being created as part of an aggregate—that is, the client of the object in this case is also an object server itself—then pUnkOuter contains the IUnknown pointer to the "outer unknown." See "Object Reusability" in Chapter 6 for more information. Class implementations need to be consciously designed to be aggregatable and accordingly not all classes are so designed.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="83pt" VALIGN="TOP"><COL WIDTH="289pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">pUnkOuter</P></TD><TD VALIGN="TOP">IUnknown *</P></TD><TD VALIGN="TOP">The controlling unknown of the aggregate object if this object is being created as part of an aggregate. If NULL, then the object is not being aggregated, which is the case when the object is being created from a pure client. If non-NULL and the class does not support aggregation, then the function returns CLASS_E_NOAGGREGATION.</P></TD></TR><TR><TD VALIGN="TOP">iid</P></TD><TD VALIGN="TOP">REFIID</P></TD><TD VALIGN="TOP">The identifier of the first interface desired by the caller through which it will communicate with the object; usually the "initialization interface."</P></TD></TR><TR><TD VALIGN="TOP">ppv</P></TD><TD VALIGN="TOP">void **</P></TD><TD VALIGN="TOP">The place in which the first interface pointer is to be returned.</P></TD></TR></TBODY></TABLE>
<BR></P></P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="155pt" VALIGN="TOP"><COL WIDTH="289pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Return Value</B></P></TD><TD VALIGN="TOP"><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP">S_OK</P></TD><TD VALIGN="TOP">Success. A new instance was created.</P></TD></TR><TR><TD VALIGN="TOP">E_NOAGGREGATION</P></TD><TD VALIGN="TOP">Use of aggregation was requested, but this class does not support it.</P></TD></TR><TR><TD VALIGN="TOP">E_OUTOFMEMORY</P></TD><TD VALIGN="TOP">Memory could not be allocated to service the request.</P></TD></TR><TR><TD VALIGN="TOP">E_UNEXPECTED</P></TD><TD VALIGN="TOP">An unknown error occurred.</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
