<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 12: Uniform Data Transfer</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H1>Chapter 12: Uniform Data Transfer</H1>  </P>
Just as COM provides interfaces for dealing with storage and object naming, it also provides interfaces for exchanging data between applications. So built on top of both COM and the Persistent Storage technology is Uniform Data Transfer, which provides the functionality to represent all data transfers through a single implementation of a <I>data object</I>. Data objects implement an interface called <B>IDataObject </B>which encompasses the standard operations of get/set data and query/enumerate formats as well as functions through which a client of a data object can establish a notification loop to detect data changes in the object. In addition, this technology enables use of richer descriptions of data formats and the use of virtually any storage medium as the transfer medium.</P>
You can read through this chapter, or you can choose a topic of interest from this list:</P>
<SPAN CLASS="list"><UL><LI><font class="MissingLink" meta="aslch12_Isolation">Isolation of Transfer Protocols</font></LI><LI><font class="MissingLink" meta="aslch12_Formats">Data Formats and Transfer Mediums</font></LI><LI><font class="MissingLink" meta="aslch12_Selection">Data Selection</font></LI><LI><font class="MissingLink" meta="aslch12_Notification">Notification</font></LI></UL></SPAN></P>
 </P></BODY></HTML>
