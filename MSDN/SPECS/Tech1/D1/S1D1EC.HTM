<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoSetCallContext</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>CoSetCallContext</H3>  </P>
<B>HRESULT CoSetCallContext(punk);</B></P>
Establishes the call context for the current call, overriding the default call context object normally available via CoGetCallContext.</P>
This function is provided primarily for objects performing custom marshaling. Before transferring control from their stub or IPC mechanism to the server-side code, a custom marshaler may establish the call context via CoSetCallContext so that subsequent objects can be written to take advantage of call-level security or other caller-specific contextual information in a transport neutral fashion; for example, without regard to whether an object between them and the client was remoted via custom marshaling.</P>
The call context reverts automatically at the end of each call. Furthermore, a custom marshaling layer which calls CoSetCallContext prior to entering the server need not call CoSetCallContext(NULL) after each returning call.</P>
A second call to CoSetCallContext with a non-NULL punk will Release the first punk and AddRef the second.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="97pt" VALIGN="TOP"><COL WIDTH="295pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">punk</P></TD><TD VALIGN="TOP">IUnknown*</P></TD><TD VALIGN="TOP">When non-NULL, the IUnknown which is to be QueryInterface'd for the requested call context interface by subsequent calls to CoGetCallContext during the span of the current call. This interface is AddRef'd prior to returning. When NULL, resets the call context to the COM-provided default for the current call.</P></TD></TR><TR><TD VALIGN="TOP"><I>Returns</I></P></TD><TD VALIGN="TOP">S_OK</P></TD><TD VALIGN="TOP">Success.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">E_INVALIDARG</P></TD><TD VALIGN="TOP">One or more arguments are invalid.</P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
