<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The COM Library</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>The COM Library</H2>  </P>
It should be clear by this time that COM itself involves some systems-level code, that is, some implementation of its own. However, at the core the Component Object Model by itself is a specification (hence <I>Model</I>) for how objects and their clients interact through the binary standard of interfaces. As a specification it defines a number of other standards for interoperability:</P>
<SPAN CLASS="list"><UL><LI>The fundamental process of interface negotiation through QueryInterface.</LI><LI>A <I>reference counting</I> mechanism through objects (and their resources) are managed even when connected to multiple clients.</LI><LI>Rules for memory allocation and responsibility for those allocations when exchanged between independently developed components.</LI><LI>Consistent and rich error reporting facilities.</LI></UL></SPAN>In addition to being a specification, COM is also an implementation contained what is called <I>The COM Library. </I>The implementation is provided through a library (such as a .DLL on Microsoft Windows) that includes:</P>
<SPAN CLASS="list"><UL><LI>A small number of fundamental API functions that facilitate the creation of COM applications, both clients and servers. For clients, COM supplies basic object creation functions; for servers the facilities to expose their objects.</LI><LI>Implementation locator services through which COM determines from a class identifier which server implements that class and where that server is located. This includes support for a level of indirection, usually a system registry, between the identity of an object class and the packaging of the implementation such that clients are independent of the packaging which can change in the future.</LI><LI>Transparent remote procedure calls when an object is running in a local or remote server, as illustrated in Figure 1-8 in the previous section.</LI><LI>A standard mechanism to allow an application to control how memory is allocated within its process.</LI></UL></SPAN>In general, only one vendor needs to, or should, implement a COM Library for any particular operating system. For example, Microsoft has implemented COM on Microsoft Windows 3.1, Microsoft Windows 95, Microsoft Windows NT, and for Apple&reg; Macintosh&reg;.<I> </I>Part V of this document specifies in detail the internals of the COM Library for those vendors who wish to implement the COM Library on a platform for which it does not already have support.</P>
</P>
 </P></BODY></HTML>
