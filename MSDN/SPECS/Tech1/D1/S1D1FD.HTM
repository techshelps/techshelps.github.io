<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumConnections::Next</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>IEnumConnections::Next</H3>  </P>
<B>HRESULT IEnumConnections::Next([in] ULONG cConnections, [out, max_is(cConnections)] CONNECTDATA *rgpcd, [out] ULONG *pcFetched);</B></P>
Enumerates the next cConnections<I> </I>elements in the enumerator's list, returning them in rgpcd<I> </I>along with the actual number of enumerated elements in pcFetched<I>.</I> The caller is responsible for calling IUnknown::Release<I> </I>through each pUnk<I> </I>pointer returned in the structure elements of rgpcd.</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="97pt" VALIGN="TOP"><COL WIDTH="105pt" VALIGN="TOP"><COL WIDTH="272pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Argument</B></P></TD><TD VALIGN="TOP"><B>Type</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">cConnections</P></TD><TD VALIGN="TOP">ULONG</P></TD><TD VALIGN="TOP">[in]    Specifies the number of CONNECTDATA<I> </I>structures to return in the array pointed to by rgpcd. This argument must be 1 if pcFetched<I> </I>is NULL.</P></TD></TR><TR><TD VALIGN="TOP">rgpcd</P></TD><TD VALIGN="TOP">CONNECTDATA *</P></TD><TD VALIGN="TOP">[out]    A pointer to a caller-allocated CONNECTDATA<I> </I>array of size cConnections<I> </I>in which to return the enumerated connections. The caller is responsible for calling CONNECTDATA.pUnk-&gt;Release<I> </I>for each element in the array once this method returns successfully. If cConnections<I> </I>is greater than one the caller must also pass a non-NULL pointer passed to pcFetched<I> </I>to know how many pointers to release.</P></TD></TR><TR><TD VALIGN="TOP">pcFetched</P></TD><TD VALIGN="TOP">ULONG</P></TD><TD VALIGN="TOP">[out]    A pointer to the variable to receive the actual number of connections enumerated in rgpcd. This argument can be NULL in which case the cConnections<I> </I>argument must be 1.</P></TD></TR></TBODY></TABLE>
<BR></P></P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="110pt" VALIGN="TOP"><COL WIDTH="352pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Return Value</B></P></TD><TD VALIGN="TOP"><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP">S_OK</P></TD><TD VALIGN="TOP">The requested number of elements has been returned and *pcFetched<I> </I>(if non-NULL) is set to <I>cConnections </I>if. </P></TD></TR><TR><TD VALIGN="TOP">S_FALSE</P></TD><TD VALIGN="TOP">The enumerator returned fewer elements than cConnections<I> </I>because there were not that many elements left in the list. In this case, unused elements in <I>rgpcd </I>in the enumeration are not set to NULL and *pcFetched<I> </I>holds the number of valid entries, even if zero is returned.</P></TD></TR><TR><TD VALIGN="TOP">E_POINTER</P></TD><TD VALIGN="TOP">The address in rgpcd<I> </I>is not valid (such as NULL).</P></TD></TR><TR><TD VALIGN="TOP">E_INVALIDARG</P></TD><TD VALIGN="TOP">The value of cConnections<I> </I>is not 1 when pcFetched<I> </I>is NULL; or the value of cConnections<I> </I>is zero.</P></TD></TR><TR><TD VALIGN="TOP">E_UNEXPECTED</P></TD><TD VALIGN="TOP">An unknown error occurred.</P></TD></TR><TR><TD VALIGN="TOP">E_OUTOFMEMORY</P></TD><TD VALIGN="TOP">There is not enough memory to enumerate the elements.</P></TD></TR></TBODY></TABLE>
<BR></P>  </P>
<B>Comments</B>   E_NOTIMPL is not allowed as a return value. If an error value is returned, no entries in the rgpcn<I> </I>array are valid on exit and require no release.</P>
  </P>
 </P></BODY></HTML>
