<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Footnotes</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Footnotes</H3>  </P>
</P>
<A NAME="PT2"></A>1.    This specification recommends that the COM implementation on a given platform (Windows&reg;, Apple&reg; Macintosh&reg;, and so forth) includes a standard storage implementation for use by all applications. <font class="MissingLink" meta="aslch10_returnFNOne">[Back]</font></P>
<A NAME="PT3"></A>2.    This mechanism, in fact, was employed by compound documents in Microsoft's OLE version 1.0. The problems describe here were some of the major limitations of OLE 1.0 which provided much of the impetus for COM's Persistent Storage technology. <font class="MissingLink" meta="aslch10_returnFNTwo">[Back]</font></P>
<A NAME="PT4"></A> 3.    The application would only create year, month, and day substorages for those days that had information in them, that is, the diary application would create sparse storage for efficiency. <font class="MissingLink" meta="aslch10_returnFNThree">[Back]</font></P>
<A NAME="PT5"></A>4.    Case sensitivity is a locale-sensitive operation: some characters compare case-insensitive-equal in some locales and -not-equal in others. In an <B>IStorage </B>implementation, the case-insensitive comparison is done with respect to the current locale in which the system is presently running. This has implications on the use of <B>IStorage </B>names for those who wish to create globally portable documents. <font class="MissingLink" meta="aslch10_returnFNFour">[Back]</font></P>
<P></P>
 </P></BODY></HTML>
