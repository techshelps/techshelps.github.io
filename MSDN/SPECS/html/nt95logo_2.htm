<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="Content-Type" Content="text-html; Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Use This Handbook</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>



<h3>How To Use This Handbook</h3>
<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;This document contains all of the technical requirements necessary to obtain the Designed for Windows<sup> </sup>NT&reg; and Windows&reg; 95 Logo. There are additional forms (Vendor Questionnaire, License Agreement, and Testing Agreement) you will need to complete in order to submit your application for testing. These are available at <a href="http://www.microsoft.com/windows/thirdparty/winlogo/">http://www.microsoft.com/windows/thirdparty/winlogo/</a> </p>
<p>
This handbook is divided into the following sections:</p>
<p>
<b>Welcome</b></p>
<p>
A welcome letter from the Microsoft Designed for Windows Logo Team.</p>
<p>
<b>What Does The “Designed For Windows NT and Windows 95” Logo Mean?</b></p>
<p>
This section provides an overview of the purpose of the Logo, why this Logo has value to your customers and how it differs from the Designed for Windows 95 Logo.</p>
<p>
<b>How to Obtain the Logo</b></p>
<p>
This section describes the procedure you must follow in order to apply for and obtain the Logo.</p>
<p>
<b>The Logo Requirements: Overview</b></p>
<p>
This section provides a high level summary of the Logo requirements.</p>
<p>
<b>The Logo Requirements: Detailed Specifications</b></p>
<p>
This section details the complete requirements that your application must meet in order to obtain the Logo.</p>
<p>
Legend for Detailed Specifications</p>
<table>
<tr valign=top>
<TD>

<b>
Type</b></td>
<TD>

<b>
Definition</b></td>
</tr>
<tr valign=top>
<TD>

<b>
Required</b></td>
<TD>

The feature must be supported as described in order for the application to pass testing and receive the Logo.</td>

</tr>
<tr valign=top>
<TD>

<b>
Exception</b></td>
<TD>

These are situations where a requirement may not apply.</td>

</tr>
<tr valign=top>
<TD>

<b>
Recommendation</b></td>
<TD>

These features are recommended but not required at this time in order for the application to pass testing and receive the Logo.  A recommendation will become a requirement in the future.</td>

</tr>
<tr valign=top>
<TD>

<b>
Verification</b></td>
<TD>

These are suggested ways that you can test whether your application meets a specific requirement or recommendation.</td>

</tr>
<tr valign=top>
<TD>

<b>
Tip</b></td>
<TD>

These are helpful suggestions. They are not recommendations or requirements.</td>

</tr>
<tr valign=top>
<TD>

<b>
Note</b></td>
<TD>

These are clarifications to the requirements/recommendations.</td>

</tr>
</table><br>
<p>
<b>Exceptions, Exemptions, And Additional Requirements</b></p>
<p>
This section describes exceptions, exemptions, and additional requirements for certain application categories, such as non-file-based applications, development tools, utilities, games and multimedia applications, and add-on products.</p>
<p>
<b>Pretesting &amp; Verification of Compliance</b></p>
<p>
This section provides tips on how to pretest your product to verify compliance with requirements before submitting for testing.  We include this section to help reduce the need for product retests, and therefor speed up the testing process for you.</p>
<p>
<b>Other Resources</b></p>
<p>
This section provides links to additional information to help you with your Windows-based application development.  </p>
<p>
<b>Key Definitions</b></p>
<table>
<tr valign=top>
<TD>

<b>
Term</b></td>
<TD>

<b>
Definition</b></td>
</tr>
<tr valign=top>
<TD>

<b>
AutoPlay</b></td>
<TD>

Denotes the behavior of automatically launching a program immediately after inserting a CD-ROM into the drive.</td>

</tr>
<tr valign=top>
<TD>

<b>
Autorun.inf</b></td>
<TD>

Text-based information file called during AutoPlay. Contains operating system instructions describing what executable to launch, etc.</td>

</tr>
<tr valign=top>
<TD>

<b>
Core Components</b></td>
<TD>

Core components are defined as DLLs that application developers have come to depend on for the proper functionality of their applications. Reverting to an older version or to an incorrectly implemented version may break many third party applications.  In general terms, the core components are USER, GDI, and KERNEL. Core components are files which are installed by the operating system during a full installation, or which are considered operating system upgrades (for example, DirectX&reg;, Direct3D&reg;). This includes such things as DLLs which are installed by applets. This list is dynamic. For the most up to date list of core components for Windows NT and Windows 95, see <a href="http://www.microsoft.com/windows/thirdparty/winlogo/">
http://www.microsoft.com/windows/thirdparty/winlogo/</a>.</td>
</tr>
<tr valign=top>
<TD>

<b>
Degrade Gracefully</b></td>
<TD>

<ul>

<li>
Does not crash the operating system (GPF or bluescreen)<br><br></li>
<li>
Dialog box or other visual and audio cue appears informing the user that the functionality is not available on <i>X</i> version of <i>Y</i> operating system<br><br></li>
<li>
User is not required to close the application, but may continue to use the other functionality</li>
</ul>
</td>
</tr>
<tr valign=top>
<TD>

<b>
File-Based Application</b></td>
<TD>

File-based applications have as their primary purpose the creation and editing of documents and include <b>
Open</b>, <b>Save</b>, and <b>Close</b> commands, typically on the <b>File </b>menu of the application.</td>
</tr>
<tr valign=top>
<TD>

<b>
Labeling Scheme</b></td>
<TD>

Common to games, accounting, and database programs. Users save “profiles” of reports, game states, etc. which have limited naming schemes. Labels may create actual file names, but the file naming behavior only vaguely represents the input of the user. Example: User may enter, “File Name Test”, but the application would save “SAV001.EXT”, or “FILAAAA.EXT” to the hard disk. These files are not intended to be accessed directly from Windows Explorer. A labeling scheme is not required to save long file names to the hard disk and is exempt from the long file name requirements. </td>

</tr>
<tr valign=top>
<TD>

<b>
Non-File-Based Application</b></td>
<TD>

A non-file-based application is one that is <i>
not</i> primarily used to create, edit, and save files (although file operations may be common ancillary tasks).</td>
</tr>
<tr valign=top>
<TD>

<b>
Product Category</b></td>
<TD>

These categories are used to determine what behavior is required from the application to pass the Logo test. Includes: File-Based, Non-File-Based, Utility, Development Tool, Add-On. The final determination of what category applies to a product will be made by Microsoft.</td>

</tr>
<tr valign=top>
<TD>

<b>
Refcount</b></td>
<TD>

The act of incrementing and decrementing shareable components in the system registry under the ...\SharedDLLs key.</td>

</tr>
<tr valign=top>
<TD>

<b>
Shared Components</b></td>
<TD>

Any files which are installed by an application, but might be shared by multiple applications. Shared components are usually DLLs, but may be EXEs or any other file type. These must be “refcounted” unless they are “core components” or installed to the application’s own directory.</td>

</tr>
<tr valign=top>
<TD>

<b>
Suite vs. Product</b></td>
<TD>

A suite is a collection of programs typically denoted by more than one shortcut on the Start Menu. A product can be a suite or a single executable. The final determination of whether or not a product is a suite will be made by Microsoft and VeriTest.</td>

</tr>
<tr valign=top>
<TD>

<b>
Telephony Centric</b></td>
<TD>

One of two categories of communications applications. An application that performs any telephony function beyond simple dialing of voice calls is considered a telephony <i>
centric</i> application (including, for example, all applications that use a modem for data or fax calls).  Examples of telephony centric include:  dialers, answering machines, voicemail, interactive voice response, modem or fax communications, etc.</td>
</tr>
<tr valign=top>
<TD>

<b>
Telephony Enabled</b></td>
<TD>

One of two categories of communications applications. Telephone communications are not the primary purpose of the application. Examples of telephony enabled applications are:  Personal Information Managers, address books, and databases</td>

</tr>
<tr valign=top>
<TD>

<b>
Win32</b></td>
<TD>

Any 32-bit executable file described as “[PE_Win32]” by the Exedump program available on the Win32&reg; SDK (Software Development Kit). </td>

</tr>
</table><br>
</FONT></BODY>
</HTML>
