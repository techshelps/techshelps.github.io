<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="Content-Type" Content="text-html; Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACPI/OnNow Support</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>



<h4>ACPI/OnNow Support</h4>
<p>
The OnNow design initiative is a set of design specifications which, when applied to system hardware and software applications, enable a PC to deliver the 'instant on' capabilities consumers have come to expect from TVs, VCRs, stereos and other appliances.  This initiative and the recommendations below work to ensure that all elements of the system -- applications, devices, and user interface -- can take advantage of this PC power management technology. </p>
<p>
Because applications have the most direct knowledge of the user's activity on a PC, they must participate in system-wide power management decision-making in order to ensure error-free handling of power down and power up scenarios.  See <a href="http://www.microsoft.com/hwdev/onnow.htm">http://www.microsoft.com/hwdev/onnow.htm</a> for more information and technical specifications for the OnNow initiative.</p>
<p>
<i>Many of the recommendations listed below will become requirements in the next revision of the Designed for Windows Logo program so please review this section closely.</i></p>
<p>
<i>Verification suggestions for these recommendations can be found in the 'Pre-testing &amp; Verification of Compliance' section.</i></p>
<p>
<b>Recommended:<BR></b>Applications should handle system sleep/wake transitions by listening to WM_POWERBROADCAST messages.  When applications receive sleep messages (WM_POWERBROADCAST / PBT_APMSUSPEND), they must:
<ul>
<li>
Flush any unsaved user data to non-volatile media.   Applications must save this data to temporary file or backup file since the user has not given the command to save the original file.<br><br></li>
<li>
Close all open files.<br><br></li>
<li>
When applications receive wake messages (WM_POWERBROADCAST / PBT_APMRESUMESUSPEND), they must:<br><br></li>
<li>
Re-open any files that had been open.  <br><br></li>
<li>
Verify the user’s files and inform the user if there are any problems (for example: files can no longer be found, files have been modified by someone else, etc.)</li>
</ul>
<p>
<b>Recommended:<BR></b>Games should pause game play and stop playing sound when they receive WM_POWERBROADCAST sleep messages.</p>
<p>
<b>Recommended:<BR></b>Applications should not ask the user any questions while it is processing a WM_POWERBROADCAST sleep or query message.</p>
<p>
<b>Exception:<BR></b>An application may pop up a confirmation dialog only if the UI Allowed bit is set in the message and if putting the machine to sleep will cause user data loss or corruption.</p>
<p>
<b>Recommended:<BR></b>Event handling applications such as phone answering machine applications, fax servers, periodic maintenance or desktop management applications, etc must call the SetTreadExecutionState API before and after handling each event.  This allows the operating system keep the machine awake while the event is being handled and to put the machine to sleep immediately after the event has been handled.</p>
<p>
<b>Recommended:<BR></b>Presentation applications must call the SetTreadExecutionState API when switching into and out of slide-show mode.  This allows the operating system keep the machine awake and display on while the event is being handled and to put the machine to sleep immediately after the event has been handled.</p>
<p>
<b>Recommended:<BR></b>Applications should reduce background activities such as background pagination, background recalculation, auto-saves, auto-formatting, etc. when the computer is running on batteries.  The hard disk and CPU are the highest power devices that applications have a direct impact on.  The following can be done to reduce hard disk and CPU usage while on batteries:
<ul>
<li>
Performing non-essential disk activity at regular intervals may cause the hard disk to spin up and down frequently, thus using significantly more power than leaving the disk fully running.  While on batteries, applications should delay all non-essential disk activity until essential disk activity is required (for example, in response to explicit user command).  This allows the hard disk to remain off as much as possible. An application can detect if the hard disk is already running by calling GetDevicePowerState before accessing the disk.<br><br></li>
<li>
While on batteries, applications should not perform operations at idle time unless they are in response to an explicit user command.  This allows the OS to temporarily stop the processor between time slices.</li>
</ul>
<p>
Applications can determine when the computer is running on batteries by calling the GetSystemPowerStatus API and listening for the WM_POWERBROADCAST / PBT_APMPOWERSTATUSCHANGED message.</p>
<p>
<b>Recommended:<BR></b>Applications should not take any action when they receive a WM_POWERBROADCAST / PBT_APMRESUMEAUTOMATIC message.  OnNow computers may be configured to automatically wake when no user is present.  Since no user is present, most programs do not need to take action.  If the operating system detects the user, it will send WM_POWERBROADCAST / PBT_APMRESUMESUSPEND.</p>
<p>
<b>Recommended:<BR></b>With the introduction of OnNow applications will be run continuously (without restarting) for a much longer than those applications are typically run today.  For this reason, applications should take particular care to ensure they do not have any memory leaks.  A memory leak is defined as a memory allocation that grows without bounds.  Memory leaks occur when an application opens a system handle and neglects to close it.  (A handle can be used to extend the functionality of your application by using features provided by the shell.)  Lack of system resources, resulting from memory leaks, will cause a decline in system performance and eventual failure.  </p>
<p>
<i>For more information on ACPI/OnNow please refer to the following web site: </i><a href="http://www.microsoft.com/hwdev/onnow.htm">http://www.microsoft.com/hwdev/onnow.htm</a></p>
</FONT></BODY>
</HTML>
