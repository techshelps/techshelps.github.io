<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="Content-Type" Content="text-html; Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>UNC &amp; Long File Name</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>



<h4>UNC &amp; Long File Name</h4>
<p>
<b>To test direct network browsing</b> with UNC paths: Open a file, and use the <b>Save As</b> command to save it with a Long File Name (LFN) and UNC paths (for example, \\ServerName\MySubdirectory\MyLongFileName) to a standard server. It should be possible to save and retrieve files without specifically referencing a network drive letter.</p>
<p>
<b>Here is how to test whether your product properly handles LFNs.</b> Basically, LFNs must do the following:
<ul>
<li>
Allow plus signs, commas, semicolons, equal signs, and square brackets anywhere.<br><br></li>
<li>
Not save leading or trailing spaces. (You can test for this by removing the name inserted into the Save As dialog box and typing “###test###” or similar text. The program should strip the spaces and add an extension, returning the file name “test.ext”.)<br><br></li>
<li>
Not save question marks.<br><br></li>
<li>
Support 255 characters (including the path and extension).<br><br></li>
<li>
Save to a UNC path, such as \\Server\Directory\Filename.<br><br></li>
<li>
You should test each of the allowed file names in the following list. When your application saves each file, it should add an extension and save it to the hard disk.For example, “test.” will save as “test..ext”.</li>
</ul>
<table><tr valign=top><TD>
<ol>
<li>test</li>
<li>test#test#test#test</li>
<li>test#1234567890[on through 260]</li>
</ol></td></tr></table>
<ul>
<li>You should also test the following list of file names, which should save to the hard disk as indicated:</li>
</ul>
<table><tr valign=top><TD>
<ol>
<li>test (saved as “test.ext”)</li>
<li>###test (saved as “test.ext”)</li>
<li>test### (saved as “test.ext”)</li>
<li>test#;#+#,#=#[#] (saved as “test#;#+#,#=#[#].ext”)</li>
<li>\\folder#one\folder#two\folder#three\folder#four\file</li>
</ol></td></tr></table>
<p>
<b>LFN Verification for Utilities:<BR></b>Run the utility (that is, your product), and manipulate several LFN files. Open these files with their LFN and with their 8.3 aliases, and make sure they still relate to the same file.</p>
<p>
Check overall LFN file structure to make sure its integrity has not been damaged.</p>
</FONT></BODY>
</HTML>
