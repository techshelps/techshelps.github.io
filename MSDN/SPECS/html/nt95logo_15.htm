<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="Content-Type" Content="text-html; Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Communications:  TAPI 2.x</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>



<h4>Communications:  TAPI 2.x</h4>
<dl>
<dt>
<b>Telephony <i>enabled</i> applications Vs. Telephony <i>centric</i> applications</b></dt>
<dd>
A telephony <i>enabled</i> application is one capable of simple outbound dialing. If an application performs more than simple outbound dialing, it must implement the <i>full</i> TAPI interface and meet the requirements for telephony <i>centric</i> applications.  <p>
For more information on writing TAPI applications refer to the Win32 SDK online documentation.  For more information on writing TAPI service providers refer to the TAPI Service Provider documentation.</p>
<p>
<b>Required:<BR></b>Communications applications that dial, answer, and otherwise control telephone calls on equipment such as modems, ISDN adapters, and telephones must control those calls using the Windows Telephony API (TAPI).  This includes online registration of an application.  All telephony <i>enabled</i> applications must either use the <i>full</i> TAPI interface or must pass requests to a telephony <i>centric</i> application that does.</p>
<br>
</dd>
<dt>
<b>Telephony <i>enabled</i> applications</b></dt>
<dd>
<b>Required:<BR></b>Telephony <i>enabled</i> applications must, at minimum, use the Assisted Telephony interface and pass requests for dialing of calls to a telephony <i>centric</i> application such as <i>Phone Dialer</i> that uses the full TAPI interface for call control. When using the Assisted Telephony interface, the following additional behaviors are recommended.<p>
<b>Recommended:<BR></b>In addition to the above requirements, the following behaviors are strongly recommended for all telephony <i>enabled</i> applications:
<ul>
<li>
In telephony enabled applications, phone number entry fields for country code and area code should use the Dialing Properties current location settings as defaults. These defaults can be obtained by calling tapiGetLocationInfo.<br><br></li>
<li>
A telephony enabled application should pass the number dialed to tapiRequestMakeCall in canonical/international form. This is done so that the call manager application placing the call can properly apply the user’s Dialing Properties settings. </li>
</ul>
<br>
</dd>
<dt>
<b>Telephony <i>centric</i> applications</b></dt>
<dd>
If an application performs more than simple outbound dialing, it must implement the <i>full</i> TAPI interface and meet the requirements for telephony <i>centric</i> applications.<p>
<b>Required:<BR></b>Telephony <i>centric</i> applications must use the full Windows Telephony API (TAPI) for telephony-related functions. They must not control telephony-related equipment through proprietary interfaces, drivers, or APIs other than TAPI.  In particular, the application must not access a modem by directly opening the serial port using CreateFile (“COMx”), although a “Direct to COMx” mode may be available for accessing non-modem devices. </p>
<p>
<b>Required:<BR></b>Telephony <i>centric</i> applications must apply the user’s Dialing Properties settings to numbers to be dialed. This can be accomplished by passing the number to the <b>lineTranslateAddress</b> function before the call is placed. This number must be in canonical/international form unless the number to be dialed is an internal extension or the user has otherwise explicitly instructed the application to dial the digits “as is” without applying Dialing Properties (they should pass to <b>lineTranslateAddress</b> so that tone/pulse dialing settings can be applied).</p>
<p>
<b>Required:<BR></b>Telephony <i>centric</i> applications must allow the user to select the device to use for calls. The device name can be obtained from the <b>LINEDEVCAPS</b> structure returned by the TAPI <b>lineGetDevCaps</b> function.</p>
<p>
<b>Required:<BR></b>If a telephony <i>centric</i> application is performing extended control functions on a serial device that is also accessible through TAPI (such as a fax application issuing Class 1 or 2 fax AT commands to a fax modem), it must use <b>LINEBEARERMODE_PASSTHROUGH </b>as defined in TAPI rather than opening the serial device directly, so that the device is properly shared with other TAPI apps when not in use. The application must not open the serial device directly using <b>CreateFile</b>.</p>
<p>
<b>Required:<BR></b>If the application uses TAPI 2.x functions, it must either explicitly link to TAPI32.dll (by calling GetProcAddress) or be linked to theTAPI32.lib <i>explicit</i> link library so that it will load on both Windows 95 (TAPI 1.4) and Windows NT 4.0 (TAPI 2.0). The application should gracefully degrade its features so that it works as well as possible within the limitations of TAPI 1.4 when running on Windows 95.</p>
<p>
<b>Recommended:<BR></b>In addition to the above requirements, the following behaviors are strongly recommended for all telephony <i>centric</i> applications:
<ul>
<li>
User entry of phone numbers should be in separate fields for country code, area/city code, and local number. The country code and area code fields should default to the user’s current location country code and area code obtained from lineGetTranslateCaps function. The country code selected may consist of a drop-down list of countries obtained from the lineGetCountry function.<br><br></li>
<li>
The application should properly handle the LINE_CREATE message so those telephony devices that are added by the user while the application is active become immediately available for use.<br><br></li>
<li>
The application should properly respond to LINEDEVSTATE_REINIT and PHONESTATE_REINIT messages by shutting down the application's use of TAPI at the earliest opportunity so that TAPI can be restarted.<br><br></li>
<li>
As soon as TAPI 2.1 is available, it is STRONGLY recommended that vendors develop telephony applications utilizing TAPI 2.1 for the Windows 95, Windows NT 4.0 Workstation and the Windows NT 4.0 Server platforms.  Because TAPI version 2.1 is the only version that runs on all three platforms, this will become a Logo requirement in the future.<br><br></li>
<li>
Client server telephony applications are recommended to use the TAPI 2.1 Remote Service Provider.<br><br></li>
<li>
Client server telephony applications are recommended to use the TAPI 2.1 client management APIs to enable value-added client management and control form the server.</li>
</ul>
</dd>
</dl>
</FONT></BODY>
</HTML>
