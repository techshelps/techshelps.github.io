<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="Content-Type" Content="text-html; Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Uninstall</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>



<h4>Uninstall</h4>
<p>
<b>User Experience - Uninstall</b></p>
<p>
<b>Required:<BR></b> The product must provide a fully automated uninstaller that removes the program files, folders, and Registry entries for the 32-bit Microsoft Windows 95 and Windows NT operating systems.
<ul>
<li>
The uninstaller must be accessible through Add/Remove Programs on the Control Panel and must operate properly from the Control Panel.<br><br></li>
<li>
The uninstaller must be properly registered and must appear under Add/Remove Programs in the Control Panel. The method for this registration is:</li>
</ul>
<p>
<code>[HKEY_LOCAL_MACHINE]\SOFTWARE\Microsoft\Windows\Current Version\Uninstall\YourProductName<BR><BR>DisplayName=REG_SZ:&lt;your product name and version number&gt;<BR><BR>UninstallString=REG_SZ: c:\apps\myapp\uninstll.log /h<BR></code></p>
<p>
<b>Required:<BR></b>All files and folders copied onto the hard disk must be removed, with certain exceptions.</p>
<p>
<b>Exception:<BR></b>User data files including the following should remain on the hard disk:
<ul>
<li>
Resources that other programs might use, such as sharable DLLs, sharable fonts, and sharable Registry entries. <br><br></li>
<li>
It is better to err on the side of safety regarding other applications. If you are not sure whether removing a DLL might harm other applications, it is better to leave it behind. However, you must explain everything you leave behind when you submit your application for testing. The proper place to do this is in the Vendor Questionnaire.</li>
</ul>
<p>
<b>Tip:</b>  Remember to remove .gid files created by your Help. Create a zero-length (0) file with the same name at install time.</p>
<p>
<b>Required:<BR></b>The uninstaller must remove all advertisements and shortcuts placed anywhere in the <b>Start Menus </b>by its installer that are associated with the component that is being removed.</p>
<p>
<b>Recommended:<BR></b>On Windows NT a user must not be able to uninstall an application if that user does not have adequate security permissions to complete the uninstall.  In this situation the application must provide an appropriate error message such as &quot;You do not have adequate security permissions to successfully uninstall this application.  Please contact your system administrator.&quot; A system administrator should be able to uninstall all applications that were installed (by a user or administrator) using the default installation.</p>
<p>
<b>Registry, System &amp; Shared Components - Uninstall</b></p>
<p>
<b>Required:<BR></b>The uninstaller must remove all Registry entries (with the exception of keys that might be shared by other programs). </p>
<p>
<b>Required:<BR></b>The uninstaller must <i>not</i> decrement or remove any core component, in particular Microsoft Foundation Class Library (MFC) DLLs, as well as ODBC &amp; DAO DLLs. Please see http://www.microsoft.com/windows/thirdparty/winlogo/ for the most up-to-date and complete listing of all Windows NT and Windows 95 core components.  The core component list is updated regularly.  It is the vendor's responsibility to check the web for the most up to date list.</p>
<p>
<b>Required:<BR></b>The uninstaller must accurately decrement the count on all components your application uses that are installed as shared components.</p>
<p>
<b>Required:<BR></b>If the Reference Count is at zero (0) and you will not be removing the component, you must leave the Reference Count at 0. This requirement prevents installers from inaccurately incrementing the Shared Count if the component was on the system, but was not registered. </p>
<p>
<b>Recommended:<BR></b>If your installer finds a shared component already on the system and not registered, the SharedDLL (see section 6.2.2) count should be incremented by 1 plus the number of clients being installed. For example, if you install your application with 3 clients using a shared component, your installer will bump the SharedDLL count by 3. But if the shared component was already on the system and no SharedDLL exists for it (that is, the previous installer did not create the refcount), then set the SharedDLL count to 4. That way, when your application is uninstalled, it leaves the shared component on the system with a refcount of 1.</p>
<p>
<b>Required:<BR></b>The uninstaller must remove itself</p>
<p>
<b>Uninstall Support of a Networked or Managed environment</b></p>
<p>
<b>Recommended:<BR></b>Administrators should be able to uninstall and unadvertise (remove shortcuts) the application by means of a centrally managed Group Policy Template or through changes to user Profiles.  Refer to section 6.2.5 for more information on the use of Policy &amp; Policy Templates.</p>
<p>
<b>Managed Installation Service - coming with NT 5.0</b></p>
<p>
Microsoft is working on new technologies to greatly simplify installation and uninstallation processes by the use of an operating system installation manager.  This new installation manager will act as a gateway to the registry, handling all ref counting, component tracking, installation and uninstallation.  Microsoft is working with major installation vendors to release tools to enable vendors to create install packages to work with this new system.  Use of this technology will become a requirement in the NT 5.0 timeframe.  Today's installation requirements and the recommended changes in registry usage reflect incremental steps towards a model in which registry entries will be managed by a central OS service.  </p>
<p>
Applications that are developed using the OS-provided installation service will be compliant by default with the majority of the Logo installation &amp; uninstallation requirements.</p>
<p>
<b>Recommended:<BR></b>The application should<b> </b>make appropriate use of user Profiles.  In the NT 5.0 timeframe this means:
<ul>
<li>
Maintain strict separation of user data from application bits whenever possible.  <br><br></li>
<li>
On Windows NT, applications should use the document storage folder in the user's Profile to store user data.  The Profile path can be queried via the SHGetSpecialFolderLocation() function with the CSIDL_PERSONAL flag.<br><br></li>
<li>
On Windows NT applications should use the ...\winnt\Profiles\username\Application Data and …\winnt\Profiles\username\Personal folders. <br><br></li>
<li>
On Windows 95 applications should use …\windows\Profiles\username and should create \Application Data and \Personal subfolders.  (Applications will need to create these subfolders on Windows 95)<br><br></li>
<li>
User data should by default be stored in the user Profile<br><br></li>
<li>
If the application settings are no longer part of a Profile, the application should recover gracefully and regenerate the needed settings based on the application’s defaults.</li>
</ul>
</FONT></BODY>
</HTML>
