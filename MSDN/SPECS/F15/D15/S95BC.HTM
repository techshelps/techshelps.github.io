<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Unicode</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Unicode</H2><B><I>16 bit character code representation</I></B></P>
Unicode is a 16 bit character encoding standard that represents most of the characters used in general text interchange throughout the world. Unlike other character encoding standards that assign character codes to both characters and glyphs, Unicode assigns character codes only to characters. In Unicode, each character has a distinct linguistic function or meaning, and its character code is unambiguous. Character codes are not assigned to glyphs or glyph variants because a glyph is simply a graphic depiction that has no meaning apart from the character or characters that it represents. By functionally separating characters and glyphs, Unicode simplifies text processing for software developers and users.</P>
Although Windows 95 does not use Unicode internally for character encoding, it does include a small number of Unicode-enabled APIs for converting character codes and rendering characters, such as MultiByteToWideChar, ExtTextOutW, and GetCharWidthW.</P>
NT uses Unicode internally for character encoding, but applications can still support existing single-byte codepages using the NLS APIs. Mappings between double-byte character sets and Unicode values are handled via the MultiByteToWideChar and WideCharToMultiByte APIs. </P></BODY></HTML>
