<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.1 Calculating Adaptive Acknowledgment Time-Out</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>A.1 Calculating Adaptive Acknowledgment Time-Out</H2>We still must decide how much time to allow for acknowledgments to return. If we set the time-out too high, we end up unnecessarily waiting for dropped packets. If the time-out is too short, we end up timing out just before the acknowledgment arrives. The acknowledgment time-out should also be reasonable and responsive to changing network congestion.</P>
The suggested adaptive algorithm detailed below is based on the TCP 1989 implementation and is explained in Richard Stevens's book <I>TCP/IP Illustrated, Volume 1</I> (page 300). <I>'n'</I> means this iteration of the calculation, and <I>'n-1'</I> refers to values from the last calculation.</P>
<img src="17459.gif"></P>
<P>DIFF represents the error in the last estimated round-trip time. DIFF is calculated on each iteration.</P>
<P>RTT is the estimated round-trip time of an average packet. RTT is calculated on each iteration and stored for use in the next iteration.</P>
<P>DEV is the estimated mean deviation. This approximates the standard deviation. DEV is calculated on each iteration and stored for use in the next iteration.</P>
<P>ATO is the adaptive time-out for the next transmitted packet. ATO is calculated on each iteration.</P>
<P>Alpha (<SPAN CLASS="Symbol">a</SPAN>) is the <I>gain</I> for the average and is typically 1/8 (0.125).</P>
<P>Beta (<SPAN CLASS="Symbol">b</SPAN>) is the gain for the deviation and is typically 1/4 (0.250).</P>
<P>Chi (<SPAN CLASS="Symbol">c</SPAN>) is the gain for the time-out and is typically set to 4.</P>
To eliminate division operations for fractional gain elements, the entire set of equations can be scaled. With the suggested gain constants, they should be scaled by 8 to eliminate all division. To simplify calculations, all gain values are kept to powers of two so that shift operations can be used in place of multiplication or division.</P>
The final calculation of ATO should use a MIN function to ensure that the time-out does not exceed the maximum time-out.</P></BODY></HTML>
