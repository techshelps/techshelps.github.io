<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.4.1 GRE Encapsulation</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H3>3.4.1 GRE Encapsulation</H3><P>Once a call is established, user data messages can be sent to carry the user data. This document details enhancements to the Generic Routing Encapsulation (GRE) protocol (RFC 1701 and 1702) for use in transporting PPTP packets. The enhanced GRE packet format (GRE v2) is depicted in Figure 4.</P>
<BR></P>
<pre><code>    +-----------------------------------------+
    |               Media Header              |
    +-----------------------------------------+
    |                IP Header                |
    +-----------------------------------------+
    |               GRE Header                |
    +-----------------------------------------+
    |             Payload  Packet             |
    +-----------------------------------------+</code></pre>
<P>Figure 4. GRE v2 packet</P>
<P>The GRE v2 header has the following format when used as the PPTP data stream protocol:</P>
<BR></P>
<pre><code>                     1                   2                   3  
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|C|R|K|S|s|Recur|A| Flags | Ver |        Protocol Type          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Key (HW)Payload Length     |      Key (LW)Call ID          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Sequence Number (Opt)                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                     Acknowledge Number (Opt)                  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</code></pre>
<P>Figure 5. GRE v2 packet</P>
where:</P>
<P>C (Bit 0): Checksum present. Set to zero (0).</P>
<P>R (Bit 1): Routing present. Set to zero (0).</P>
<P>K (Bit 2): Key present. Set to one (1).</P>
<P>S (Bit 3): Sequence number present. Set to one (1) if a payload (data) is actually present, set to zero (0) if no payload is present (packet is an acknowledgment only).</P>
<P>s (Bit 4): Strict source route present. Set to zero (0).</P>
<P>Recur (Bits 5-7): Recursion control. Set to zero (0).</P>
<P>A (Bit 8): Acknowledge sequence number. Set to one (1) if packet contains acknowledgment sequence and is used for acknowledging previous data.</P>
<P>Flags (Bits 9-12): Must be set to zero.</P>
<P>Ver (Bits 13-15): Must contain 1 (GRE v2).</P>
<P>Protocol type (2 octets): Contains the assigned protocol ID for PPTP (see assigned numbers RFC).</P>
<P>Key (4 octets): Use of the Key field is up to the implementation. We propose using it as two fields:</P>
<P>Payload Length (2 octets): Size of payload.</P>
<P>Call ID (2 octets): Contains the peer's call ID.</P>
<P>Sequence number (4 octets): Contains the sequence number of the payload. Present if S bit (Bit 3) is one (1).</P>
<P>Acknowledgment number (4 octets): Contains the acknowledgment number. Present if A bit (Bit 8) is one (1).</P>
The payload sections contain the PPTP payload, which is essentially a PPP packet without the media-specific framing elements.</P>
The proposed solution requires a GRE v2 header and can be used directly over IP. Since the header size is variable in length, it makes the protocol overhead efficient. The maximum total header size at any given time would be 36 (20 IP + 16 GREv2 = 36), if both data and acknowledgments were carried within the packet.</P>
This protocol allows acknowledgments to be carried with the data and makes the overall protocol more efficient, which in turn requires less buffering of packets.</P>
This solution is backward-compatible with GRE v1.</P></BODY></HTML>
