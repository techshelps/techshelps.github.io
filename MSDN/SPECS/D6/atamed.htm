<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Media Status Notification Support Specification</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY TOPMARGIN=0 LEFTMARGIN=10 BGCOLOR="#FFFFFF" LINK="#000066"
VLINK="#666666" TEXT="#000000">



<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->

<font size="2" face="verdana,arial,helvetica">


<!--DocHeaderEnd-->
<H2>Media Status Notification Support Specification, Version 1.03</H2>
<P>Microsoft Corporation, March 1996
<H3>Introduction</H3>
<P>A major shortcoming of removable media devices on PC platforms is their inability to report to the host when the user attempts to eject the medium. Currently most removable media devices just eject the medium when the user presses the Eject button, and potentially any data the operating system has not saved to the device is lost. Various volume tracking and locking schemes reduce this risk, but do not eliminate it. Ideally, devices will have a means of communicating to the host that the user wants to eject the medium or has inserted a new medium. 
<P>This specification defines a protocol for providing this function for ATA and ATAPI devices. The support is enabled using a SET FEATURES command, and the media status is retrieved using a new command, GET MEDIA STATUS. 
<P>Because it is difficult for an ATA drive to asynchronously interrupt the host when it is not the active drive, this scheme is implemented by the host polling the device for status.
<H3>Drive Indication of Media Status Notification Support</H3>
<P>Because some older ATA hard disk drives and some caching controllers fail when they receive nonstandard commands, ATA and ATAPI devices must return a "1" in bit zero and a "0" in bit one of word 127 of the data returned from the IDENTIFY DRIVE or ATAPI IDENTIFY DRIVE commands. The operating system uses this bit in this word to determine whether media status commands are supported. Note that it is necessary to return the "0" in bit one of the data (as well as the "1" in bit zero) as some controllers return 0FFFFh in the unused words of the ID drive data, which would be falsely detected as support for Media Status Notification without the "0".

<H3>Enabling and Disabling Media Status Notification Support</H3>
<P>To maintain compatibility with existing BIOS implementations and operating systems, the drive shall not enable Media Status Notification until a SET FEATURES command is issued, as described in this section.
<P>When the host enables the support using the SET FEATURES command, the drive shall respond as described in this specification. When the host disables this feature, the drive must default to normal operating modes. A hard or soft reset must also cause the drive to return to normal operating modes. The host is required to re-enable Media Status Notification after any reset condition has occurred.
 This includes Power On Reset, SRST, RESET DEVICE command (08h) or ECECUTE DRIVE DIAGNOSTICS commands.
<P>Note that the normal SET FEATURES option to enable/disable reverting to power on defaults has no effect on the Media status notification support.

<P>The protocol of the command is as defined in the ATA Attachment Interface, version 3.3 for the SET FEATURES command. Media Status Notification support is enabled and disabled using SET FEATURES as defined in the following sections.
<H4><b>Enabling Media Status Notification</b></H4>
<P>COMMAND register = 0xEF
<BR>FEATURES register = 0x95
<P>When the command is completed successfully:
<P>&#183; CYLINDER LOW register will contain the version of the support (currently 0x00). 
<P>&#183; CYLINDER HIGH register will be set as follows.
<P>
<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="Arial" SIZE=2>Bit 7</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 6</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 5</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 4</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 3</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 2</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 1</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 0</FONT></TD></TR>
<TR VALIGN=TOP>
<TD><FONT FACE="Arial" SIZE=2>RSRVD</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>RSRVD</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>RSRVD</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>RSRVD</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>RSRVD</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>POWER_EJ</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>LOCK</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>PRV_ENAB</FONT></TD></TR>
</TABLE>
<P>These bits are defined as follows:
<P><b>PRV_ENAB</b>
<P>This bit is set to "0" if Media Status Notification support was not enabled previously in the drive, and set to "1" if the support was enabled earlier (presumably by a lower level device driver). This indication allows the device driver to know whether it must disable the support after it unloads and returns control to a lower level device driver.
<P><b>LOCK</b>
<P>This bit is set to "1" if the drive is capable of inhibiting a hardware eject action (that is, when the Eject button is pressed by the user) from ejecting the medium. For example, traditional PC floppy disk devices would set this bit to "0," because the Eject button is usually just a lever that cannot be locked, and the drive cannot control when the medium is ejected. Drives that can lock the Eject button must set this bit to "1." 
<P><b>POWER_EJ</b>
<P>This bit is set to "1" if the drive has a power eject mechanism that is functional when a software EJECT command is sent to the drive. This bit must be set to "0" if the drive unlocks the media only when an EJECT command is received.
<P><b>RSRVD </b>
<P>This bit shall be zero.

<P><H4><b>Disabling Media Status Notification</b></H4>
<P>COMMAND register = 0xEF 
<BR>FEATURES register = 0x31
<P>After Media Status Notification is disabled, the drive must return to normal operating modes, such as ejecting the medium immediately when the user presses the Eject button.
<P><H3>Returning Media Status</H3>
<P>The media status information is returned when the host issues the GET MEDIA STATUS (0xDA) command. The command protocol is as follows:
<P> 1. GET MEDIA STATUS (0xDA) command is written to the Command Register.
<P> 2. The drive asserts BSY.
<P> 3. After the drive has completed processing the command, it clears BSY and sets INTRQ.
<P> 4. The host reads the Status Register.
<P> 5. The drive clears INTRQ.
<P>If the state of the drive is normal (that is, medium in the drive, medium not changed, Eject button not pushed, medium not write protected), the GET MEDIA STATUS command must return good status. If the command fails due to a hardware fault, the command must be failed with the ERROR bit set in the status register, and the ABORT bit set in the error register.
<P>If the state of the drive has changed (or no medium is in the drive), the GET MEDIA STATUS command must be failed with the ERROR bit set in the status register, and the appropriate bits set in the ERROR register as follows.
<P>
<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="Arial" SIZE=2>Bit 7</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 6</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 5</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 4</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 3</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 2</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 1</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Bit 0</FONT></TD></TR>
<TR VALIGN=TOP>
<TD><FONT FACE="Arial" SIZE=2>RSRVD</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>WT_PT</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>MC</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>RSVD</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>MCR</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>RSRVD</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>NOMED</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>RSRVD</FONT></TD></TR>
</TABLE>
<P>These bits are defined as follows:
<P><b>RSRVD </b>
<P>This bit shall be zero.

<P><b>NOMED</b>
<P>This bit indicates there is currently no medium in the drive. This bit must be set for each invocation of the GET MEDIA STATUS command until the user inserts a medium in the drive.
<P><b>MCR</b>
<P>This bit indicates that the user has attempted to eject the medium. Usually this bit will be set when the user presses the Eject button on the drive. If the drive is capable of preventing removal of the media, the drive shall not allow the medium to be ejected until an EJECT command is received from the host. This bit shall not be set again in response to the GET MEDIA STATUS command until the user subsequently releases the button and presses it again. The drive must take no action with regard to the user's attempt to eject the medium other than setting this bit, except in the case that the ELECT_EJ functionality is not reported in the CYL HIGH register from the ENABLE MEDIA STATUS SET FEATURES command, which means that the drive cannot control when the medium is ejected.
<P><b>MC</b>
<P>This bit indicates that a medium has been newly inserted in the drive. The bit must not be set for more than one invocation of the GET MEDIA STATUS command, until the user removes or reinserts the medium. In other words, when the user inserts a new medium in the drive, and a GET MEDIA STATUS command is issued, the drive will set this bit. The next GET MEDIA STATUS command must not result in this bit being set again unless the medium has been removed and reinserted.
<P><b>WRT_PT</b>
<P>This bit indicates that a medium is currently write protected. 
<P><H3>Performance Notes</H3>
<P>Get Media Status.
 The GET MEDIA STATUS command must be completed within the next I/O cycle (or as soon as possible) in order to facilitate drivers that, for performance reasons, poll BSY rather than waiting for an interrupt. Therefore, the drive's firmware implementation might need to determine the drive status periodically, rather than having to determine it (if necessary) when the GET MEDIA STATUS command is issued. 
<P><H3><b>ATA Compatibility Considerations</b></H3>
<P>Lock/Unlock/Eject.
 The LOCK and UNLOCK ATA commands or the equivalent PREVENT/ALLOW ATAPI commands, have no function when Media Status Notification support is enabled. Any Lock or Prevent that was in effect when Media Status Notification is enabled will be cleared. If supported, these commands must be completed, but must have no effect on the state of the drive. The EJECT command must always eject the medium, regardless of any pending lock commands. 
<P>Acknowledge Media Change.
 The ACKNOWLEDGE MEDIA CHANGE ATA command must not be required when Media Status Notification support is enabled. However, if the host issues the command, it must be completed without error if supported.
 Note that this command is obsolete and is no longer supported in ATA-3.

<P>ATA drives must fail any READ, WRITE, VERIFY, LOCK, UNLOCK, or EJECT command when Media Status Notification support is enabled and no medium is in the drive. Also, as defined in the "Returning Media Status" section earlier in this specification, the NOMED bit must be the error reported if these commands are received with no medium. This behavior differs from that of some currently available ATA removable devices, which will "virtualize" certain commands and return "fake" data when no medium is in the drive.

<P>A problem arises if the drive wants to report the TK0NF error, because the NOMED bit replaces this error bit when Media Status Notification is enabled. This type of error should be reported using one of the other ERROR bits. 
<P>Also, if Media Status Notification is enabled and the state of the drive changes (that is, the user inserts a medium or presses a button) and an ATA command other than the GET MEDIA STATUS command is received by the drive before the GET MEDIA STATUS command is received, the drive must return the status change in the ERROR register just as it is defined for the GET MEDIA STATUS command. The drive must also clear the condition just as defined for the GET MEDIA STATUS command. Only changes in the state of the drive with respect to the bits MC, MCR, and NOMED (as defined in the GET MEDIA STATUS command) must be handled in this manner. The WRITE PROTECT bit, of course, must not be reported as errors except from the GET MEDIA STATUS command or WRITE request. 
<P><H3>ATAPI Compatibility Considerations</H3>
<P>ATAPI commands must be processed exactly the same as they would be if Media Status Notification was not enabled. For example, CHECK CONDITION with UNIT ATTENTION must be returned for ATAPI commands under the same conditions that would cause the MC bit to be set.
<P>When the GET MEDIA STATUS command is received by the ATAPI drive, the MCR, NOMED, MC, and WRT_PT bits must be reported as described in "Returning Media Status" earlier in this specification. However, the state of the bits must not be cleared by any ATAPI command. The insertion of a new medium must be reported independently with both the GET MEDIA STATUS and ATAPI commands. For example, if the user inserts a new medium and the drive is accessed with an ATAPI command, the CHECK CONDITION with UNIT ATTENTION must be reported, but the drive must also report the MC error when it receives the next GET MEDIA STATUS command. The behavior must be the same if, after the medium is inserted, the GET MEDIA STATUS command is received before the next ATAPI command.
<P>When the user presses the Eject button on the drive, the ATAPI commands must not be affected, but the MCR status must be reported when the first GET MEDIA STATUS command is received after the button is pressed (it is reported only once after each button press). The ATAPI drive must continue to operate as normal. If the operating system determines that it is safe to eject the medium, an ATAPI EJECT command must be issued to the drive.
<P>ATAPI devices that support multiple LUNs shall honor the LUN field in the ATAPI Drive Select register for the GET MEDIA STATUS command. For example, if the medium is inserted in LUN 2 of a device, a GET MEDIA STATUS command issued for LUN 2 shall report the change, but a GET MEDIA STATUS command for LUN 0 shall not. The ENABLE and DISABLE MEDIA STATUS SET FEATURES commands are not LUN based. These commands shall be applicable for the entire device, and shall enable Media Status Notification on all LUN's present. The protocol for reporting and accessing multiple LUN's is defined in SFF-8020i version 2.6 and higher.
<P>Please send feedback to ihv@microsoft.com.
<P>Microsoft Corporation
<BR>Windows Hardware Programs Group
<BR>1 Microsoft Way
<BR>Redmond, WA 98052
<BR>(425) 882-8080
<P>
<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="Arial" SIZE=2>Revision Record</FONT></TD></TR>
<TR VALIGN=TOP>
<TD><FONT FACE="Arial" SIZE=2><b>Edition</b></FONT></TD>
<TD><FONT FACE="Arial" SIZE=2><b>Date Published</b></FONT></TD>
<TD><FONT FACE="Arial" SIZE=2><b>Revised Comments</b></FONT></TD></TR>
<TR VALIGN=TOP>
<TD><FONT FACE="Arial" SIZE=2>1.0</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>December 1995</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Original Release.
</FONT></TD></TR>
<TR VALIGN=TOP>
<TD><FONT FACE="Arial" SIZE=2>1.01</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>January 1996</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Amended final paragraph of "ATA Compatibility Considerations"</FONT></TD></TR>
<TR VALIGN=TOP>
<TD><FONT FACE="Arial" SIZE=2>1.02</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>February 1996</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Added multiple LUN support for ATAPI devices, removed RD_PT definition</FONT></TD></TR>
<TR VALIGN=TOP>
<TD><FONT FACE="Arial" SIZE=2>1.03</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>March 1996</FONT></TD>
<TD><FONT FACE="Arial" SIZE=2>Modified disclaimer on first page</FONT></TD></TR>
</TABLE>
<P><A HREF="http://www.microsoft.com/hwdev/DISCLAIM.HTM">Disclaimer for Working Documents</A>


<P>
&#169; 1997 Microsoft Corporation. All rights reserved. <a href="http://www.microsoft.com/misc/cpyright.htm">Legal Notices.</a>

</blockquote>
</font>
</body>
</html>
