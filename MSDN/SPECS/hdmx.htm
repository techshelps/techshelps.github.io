<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Horizontal Device Metrics</TITLE>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H2>hdmx - Horizontal Device Metrics
</H2>
<P>
The hdmx table relates to OpenType fonts with TrueType outlines. The Horizontal Device Metrics table stores
integer advance widths scaled to particular pixel sizes.  This
allows the font manager to build integer width tables without
calling the scaler for each glyph.  Typically this table contains
only selected screen sizes. This table is sorted by pixel size.
The checksum for this table applies to both subtables listed.
<P>
Note that for non-square pixel grids (for example, on an EGA),
the character width (in pixels) will be used to determine which
device record to use.  For example, a 12 point character on an
EGA (resolution of 72x96) would be 12 pixels high, and 16 pixels
wide, and the hdmx device record for 16 pixel characters would
be used.
<P>
If bit 4 of the flag field in the 'head' table is not set, then
it is assumed that the font scales linearly; in this case an 'hdmx'
table is not necessary and should not be built.  If bit 4 of the
flag field is set, then one or more glyphs in the font are assumed
to scale nonlinearly.  In this case, performance can be improved
by including the 'hdmx' table with one or more important DeviceRecord's
for important sizes.  Please see the chapter &quot;Recommendations
for Windows Fonts&quot; for more detail.
<P>
The table begins as follows:

<TABLE WIDTH=460 BGCOLOR="#F0F0F0">
<THEAD>
<TR><TH BGCOLOR="#C0C0C0">Type</TH><TH BGCOLOR="#C0C0C0">Description</TH></TR>
</THEAD>
<TBODY>
<TR><TD VALIGN=TOP>USHORT</TD><TD VALIGN=TOP>Table version number (starts at 0)</TD></TR>
<TR><TD VALIGN=TOP>SHORT</TD><TD VALIGN=TOP>Number of device records.</TD></TR>
<TR><TD VALIGN=TOP>LONG</TD><TD VALIGN=TOP>Size of a device record, long aligned.</TD></TR>
<TR><TD VALIGN=TOP>DeviceRecord</TD><TD VALIGN=TOP>Records[number of device records].</TD></TR>
</TABLE>&nbsp;&nbsp;<P>

<P>
Each DeviceRecord for format 0 looks like
this.

<TABLE WIDTH=460 BGCOLOR="#F0F0F0">
<THEAD>
<TR><TH BGCOLOR="#C0C0C0">Type</TH><TH BGCOLOR="#C0C0C0">Description</TH></TR>
</THEAD>
<TBODY>
<TR><TD VALIGN=TOP>BYTE</TD><TD VALIGN=TOP>Pixel size for following widths (as ppem).</TD></TR>
<TR><TD VALIGN=TOP>BYTE</TD><TD VALIGN=TOP>Maximum width.</TD></TR>
<TR><TD VALIGN=TOP>BYTE</TD><TD VALIGN=TOP>Widths[numGlyphs] (numGlyphs is from the 'maxp' table).</TD></TR>
</TABLE>&nbsp;&nbsp;<P>

<P>
Each DeviceRecord is padded with 0's to make
it long word aligned.
<P>
Each Width value is the width of the particular glyph, in pixels,
at the pixels per em (ppem) size listed at the start of the DeviceRecord.
<P>
The ppem sizes are measured along the y axis. 

</BODY></HTML>
