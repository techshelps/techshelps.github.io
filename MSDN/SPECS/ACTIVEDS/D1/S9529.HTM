<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>10.5.2    IADsCOMBindingInfo (Optional)</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H3>10.5.2    IADsCOMBindingInfo (Optional)</H3><P>The optional IADsCOMBindingInfo interface is used to obtain binding information for services that publish COM Interfaces.    IADsCOMBindingInfo is designed for C/C++ and other VTABLE clients;  it is not supported from Automation controllers. </P>
<P>The interface definition is as follows:</P>
<P><pre><code>interface IADsCOMBindingInfo: IUnknown</P>
<P>{</P>
<P>// Read/write properties</P>
<P>[propget]</P>
<P>HRESULT DisplayName([out, retval]BSTR *pbstrDisplayName);</P>
<P>[propput]</P>
<P>HRESULT DisplayName([in]BSTR bstrDisplayName);</P>
<P>[propget]</P>
<P>HRESULT Object ([in]REFIID riid, [out,iid_is(riid)] void **ppvObject);</P>
<P>[propput]</P>
<P>HRESULT Object ([in]Iunknown* punkObject);</P>
<P>[propget]</P>
<P>HRESULT Moniker ([out, retval]Imoniker **ppMk);</P>
<P>[propput]</P>
<P>HRESULT Moniker ([in]Imoniker *pMk);</P>
<P>// Methods.</P>
<P>HRESULT put_BindingInfo([in] BSTR* pszDisplayName, </P>
<P>     [in] IUnknown* punkObject, </P>
<P>     [in] IMoniker* pmk);</P>
<P>HRESULT get_BindingInfo([out, retval] BSTR* pszDisplayName, </P>
<P>[in] REFIID riid, </P>
<P>out, iid_is(riid)] void** ppvObject,</P>
<P>[out, retval] IMoniker** ppmk);</P>
<P>};</code></pre></P>
<P></P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="95pt" VALIGN="TOP"><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="270pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Method</B></P></TD><TD VALIGN="TOP"><P><B>Syntax</B></P></TD><TD VALIGN="TOP"><P><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP"><P>DisplayName</P></TD><TD VALIGN="TOP"><P>BSTR</P></TD><TD VALIGN="TOP"><P>Gets and sets a BSTR display name that can be passed to CreateFileMoniker to bind this service</P></TD></TR><TR><TD VALIGN="TOP"><P>Object</P></TD><TD VALIGN="TOP"><P>Interface</P></TD><TD VALIGN="TOP"><P>Gets and sets an interface pointer that can be used to bind to a running instance of this service.  The provider is responsible for marahslling and storing the interface pointer on a PUT_ operation and retrieving and unmarshalling the interface pointer on a GET_ operation.</P></TD></TR><TR><TD VALIGN="TOP"><P>Moniker</P></TD><TD VALIGN="TOP"><P>Interface</P></TD><TD VALIGN="TOP"><P>Gets and sets a Moniker that can be used to bind to an instance of this service.  The provider is responsible for serializing and storing the Moniker on a PUT_ and retrieving and restoring the Moniker on a GET_.</P></TD></TR><TR><TD VALIGN="TOP"><P>Put_BindingInfo</P></TD><TD VALIGN="TOP"><P>Method</P></TD><TD VALIGN="TOP"><P>sets an array of display names,  interface pointers, and/or monikers used to bind this service.  Each parameter is an array of pointers terminated by a NULL pointer.  A NULL for any parameter indicates that it is unused.</P></TD></TR><TR><TD VALIGN="TOP"><P>Get_BindingInfo</P></TD><TD VALIGN="TOP"><P>Method</P></TD><TD VALIGN="TOP"><P>gets an array of display names,  interface pointers, and/or monikers used to bind this service.  Each parameter is an array of pointers terminated by a NULL pointer.  A NULL for any parameter indicates that it is unused.  The riid array is used to request a set of specific interface pointers from the underlying namespace.</P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
