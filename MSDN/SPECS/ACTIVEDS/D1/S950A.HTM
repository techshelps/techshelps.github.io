<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.4.1    Adding, Removing, and Modifying Schema Classes</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H3>6.4.1    Adding, Removing, and Modifying Schema Classes</H3><P>A network administrator might discover that the classes offered in the base schema of a namespace are inadequate for the client's needs.  In that case, a whole new class of object may be required.  Consider the FaxQueue example.  In order to distinguish the fax queues on the network from the print queues, a new class, FaxQueue, could be added to the schema.</P>
<P><B>Example 2:  Adding the FaxQueue Class (Visual Basic)</B></P>
<P><pre><code>Dim Schema as IADsContainer</P>
<P>Dim FQClass as IADsClass</P>
<P></P>
<P>' Bind to the SCHEMA container.</P>
<P>Set Schema = GetObject("WinNT://MSFT/SCHEMA")</P>
<P></P>
<P>' Create the new FaxQueue class in the SCHEMA container.</P>
<P>Set FQClass = Schema.Create("Class", "FaxQueue")</P>
<P></P>
<P>' Set some of the attribute of the new class.</P>
<P>'</P>
<P>' This code fragment assumes that the client has generated a GUID for</P>
<P>' the new class using the UUIDGEN utility, and has placed the</P>
<P>' value of the GUID into the FQGUID variable.</P>
<P>FQClass.GUID = FQGUID</P>
<P>FQClass.Container = False</P>
<P>' Set the FaxQueue class to derive from the PrintQueue class.</P>
<P>FQClass.DerivedFrom = Array("WinNT://MSFT/SCHEMA/PrintQueue")</P>
<P></P>
<P>' Complete the operation and create the new class in the schema.</P>
<P>FQClass.SetInfo</P>
<P></P></code></pre></BODY></HTML>
