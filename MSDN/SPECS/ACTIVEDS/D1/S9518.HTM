<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>9.1.1    IADsUser</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H3>9.1.1    IADsUser</H3><P>The IADsUser interface is used to get and set the properties of the User object.  The interface definition is as follows:</P>
<P></P>
<P><pre><code>[ object, uuid(IID_IADsUser), oleautomation, dual ]</P>
<P>interface IADsUser: IADs</P>
<P>{</P>
<P>// Read-only properties.</P>
<P>[propget]</P>
<P>HRESULT BadLoginAddress ([out, retval]BSTR *pbstrBadLoginAddress);</P>
<P>[propget]</P>
<P>HRESULT BadLoginCount ([out, retval]long *plBadLoginCount);</P>
<P> [propget]</P>
<P>HRESULT LastLogin ([out, retval]DATE *pdateLastLogin);</P>
<P>[propget]</P>
<P>HRESULT LastLogoff ([out, retval]DATE *pdateLastLogoff);</P>
<P>[propget]</P>
<P>HRESULT LastFailedLogin ([out, retval]DATE *pdateLastFailedLogin);</P>
<P>[propget]</P>
<P>HRESULT PasswordLastChanged ([out, retval]DATE *pdatePasswordLastChanged);</P>
<P>//</P>
<P>// Read/write properties</P>
<P>[propget]</P>
<P>HRESULT Description ([out, retval]BSTR *pbstrDescription);</P>
<P>[propput]</P>
<P>HRESULT Description ([in]BSTR bstrDescription);</P>
<P> [propget]</P>
<P>HRESULT Division ([out, retval]BSTR *pbstrDivision);</P>
<P>[propput]</P>
<P>HRESULT Division ([in]BSTR bstrDivision);</P>
<P>[propget]</P>
<P>HRESULT Department ([out, retval]BSTR *pbstrDepartment);</P>
<P>[propput]</P>
<P>HRESULT Department ([in]BSTR bstrDepartment);</P>
<P> [propget]</P>
<P>HRESULT EmployeeID ([out, retval]BSTR *pbstrEmployeeID);</P>
<P>[propput]</P>
<P>HRESULT EmployeeID ([in]BSTR bstrEmployeeID);</P>
<P>[propget]</P>
<P>HRESULT FullName ([out, retval]BSTR *pbstrFullName);</P>
<P>[propput]</P>
<P>HRESULT FullName ([in]BSTR bstrFullName);</P>
<P>[propget]</P>
<P>HRESULT FirstName ([out, retval]BSTR *pbstrFirstName);</P>
<P>[propput]</P>
<P>HRESULT FirstName ([in]BSTR bstrFirstName);</P>
<P> [propget]</P>
<P>HRESULT LastName ([out, retval]BSTR *pbstrLastName);</P>
<P>[propput]</P>
<P>HRESULT LastName ([in]BSTR bstrLastName);</P>
<P>[propget]</P>
<P>HRESULT OtherName ([out, retval]BSTR *pbstrOtherName);</P>
<P>[propput]</P>
<P>HRESULT OtherName ([in]BSTR bstrOtherName);</P>
<P>[propget]</P>
<P>HRESULT NamePrefix ([out, retval]BSTR *pbstrNamePrefix);</P>
<P>[propput]</P>
<P>HRESULT NamePrefix ([in]BSTR bstrNamePrefix);</P>
<P>[propget]</P>
<P>HRESULT NameSuffix ([out, retval]BSTR *pbstrNameSuffix);</P>
<P>[propput]</P>
<P>HRESULT NameSuffix ([in]BSTR bstrNameSuffix);</P>
<P>[propget]</P>
<P>HRESULT Title ([out, retval]BSTR *pbstrTitle);</P>
<P>[propput]</P>
<P>HRESULT Title ([in]BSTR bstrTitle);</P>
<P>[propget]</P>
<P>HRESULT Manager ([out, retval]BSTR *pbstrManager);</P>
<P>[propput]</P>
<P>HRESULT Manager ([in]BSTR bstrManager);</P>
<P>[propget]</P>
<P>HRESULT TelephoneNumber ([out, retval]VARIANT *pvarTelephoneNumber);</P>
<P>[propput]</P>
<P>HRESULT TelephoneNumber ([in]VARIANT varTelephoneNumber);</P>
<P>[propget]</P>
<P>HRESULT TelephoneHome ([out, retval]VARIANT *pvarTelephoneHome);</P>
<P>[propput]</P>
<P>HRESULT TelephoneHome ([in]VARIANT varTelephoneHome);</P>
<P>[propget]</P>
<P>HRESULT TelephoneMobile ([out, retval]VARIANT *pvarTelephoneMobile);</P>
<P>[propput]</P>
<P>HRESULT TelephoneMobile ([in]VARIANT varTelephoneMobile);</P>
<P>[propget]</P>
<P>HRESULT TelephonePager ([out, retval]VARIANT *pvarTelephonePager);</P>
<P>[propput]</P>
<P>HRESULT TelephonePager ([in]VARIANT varTelephonePager);</P>
<P>[propget]</P>
<P>HRESULT FaxNumber ([out, retval]VARIANT *pvarFaxNumber);</P>
<P>[propput]</P>
<P>HRESULT FaxNumber ([in]VARIANT varFaxNumber);</P>
<P> [propget]</P>
<P>HRESULT OfficeLocations ([out, retval]VARIANT *pvOfficeLocations);</P>
<P>[propput]</P>
<P>HRESULT OfficeLocations ([in]VARIANT vOfficeLocations);</P>
<P>[propget]</P>
<P>HRESULT PostalAddresses ([out, retval]VARIANT *pvAddresses);</P>
<P>[propput]</P>
<P>HRESULT PostalAddresses ([in]VARIANT vAddresses);</P>
<P>[propget]</P>
<P>HRESULT PostalCodes ([out, retval]VARIANT *pvPostalCodes);</P>
<P>[propput]</P>
<P>HRESULT PostalCodes ([in]VARIANT vPostalCodes);</P>
<P>[propget]</P>
<P>HRESULT SeeAlso ([out, retval]VARIANT *pvSeeAlso);</P>
<P>[propput]</P>
<P>HRESULT SeeAlso ([in]VARIANT vSeeAlso);</P>
<P>[propget]</P>
<P>HRESULT AccountDisabled ([out, retval]boolean *pbAccountDisabled);</P>
<P>[propput]</P>
<P>HRESULT AccountDisabled ([in]boolean bAccountDisabled);</P>
<P> [propget]</P>
<P>HRESULT AccountExpirationDate ([out, retval]DATE *pdateAccountExpirationDate);</P>
<P>[propput]</P>
<P>HRESULT AccountExpirationDate ([in]DATE dateAccountExpirationDate);</P>
<P>[propget]</P>
<P>HRESULT GraceLoginsAllowed ([out, retval]long *plGraceLoginsAllowed);</P>
<P>[propput]</P>
<P>HRESULT GraceLoginsAllowed ([in]long lGraceLoginsAllowed);</P>
<P>[propget]</P>
<P>HRESULT GraceLoginsRemaining ([out, retval]long *plGraceLoginsRemaining);</P>
<P>[propput]</P>
<P>HRESULT GraceLoginsRemaining ([in]long lGraceLoginsRemaining);</P>
<P>[propget]</P>
<P>HRESULT IsAccountLocked ([out, retval]boolean *pbIsAccountLocked);</P>
<P>[propput]</P>
<P>HRESULT IsAccountLocked ([in]boolean bIsAccountLocked);</P>
<P> [propget]</P>
<P>HRESULT LoginHours ([out, retval]VARIANT *pvLoginHours);</P>
<P>[propput]</P>
<P>HRESULT LoginHours ([in]VARIANT vLoginHours);</P>
<P>[propget]</P>
<P>HRESULT LoginWorkstations ([out, retval]VARIANT *pvLoginWorkstations);</P>
<P>[propput]</P>
<P>HRESULT LoginWorkstations ([in]VARIANT vLoginWorkstations);</P>
<P>[propget]</P>
<P>HRESULT MaxLogins ([out, retval]long *plMaxLogins);</P>
<P>[propput]</P>
<P>HRESULT MaxLogins ([in]long lMaxLogins);</P>
<P>[propget]</P>
<P>HRESULT MaxStorage ([out, retval]long *plMaxStorage);</P>
<P>[propput]</P>
<P>HRESULT MaxStorage ([in]long lMaxStorage);</P>
<P> [propget]</P>
<P>HRESULT PasswordExpirationDate ([out, retval]DATE *pdatePasswordExpirationDate);</P>
<P>[propput]</P>
<P>HRESULT PasswordExpirationDate ([in]DATE datePasswordExpirationDate);</P>
<P>[propget]</P>
<P>HRESULT PasswordMinimumLength ([out, retval]long *plPasswordMinimumLength);</P>
<P>[propput]</P>
<P>HRESULT PasswordMinimumLength ([in]long lPasswordMinimumLength);</P>
<P>[propget]</P>
<P>HRESULT PasswordRequired ([out, retval]boolean *pbPasswordRequired);</P>
<P>[propput]</P>
<P>HRESULT PasswordRequired ([in]boolean bPasswordRequired);</P>
<P>[propget]</P>
<P>HRESULT RequireUniquePassword ([out, retval]boolean *pbRequireUniquePassword);</P>
<P>[propput]</P>
<P>HRESULT RequireUniquePassword ([in]boolean bRequireUniquePassword);</P>
<P>[propget]</P>
<P>HRESULT EmailAddress ([out, retval]BSTR *pbstrEmailAddress);</P>
<P>[propput]</P>
<P>HRESULT EmailAddress ([in]BSTR bstrEmailAddress);</P>
<P>[propget]</P>
<P>HRESULT HomeDirectory ([out, retval]BSTR *pbstrHomeDirectory);</P>
<P>[propput]</P>
<P>HRESULT HomeDirectory ([in]BSTR bstrHomeDirectory);</P>
<P>[propget]</P>
<P>HRESULT Languages ([out, retval]VARIANT *pvLanguages);</P>
<P>[propput]</P>
<P>HRESULT Languages ([in]VARIANT vLanguages);</P>
<P>[propget]</P>
<P>HRESULT Profile ([out, retval]BSTR *pbstrProfile);</P>
<P>[propput]</P>
<P>HRESULT Profile ([in]BSTR bstrProfile);</P>
<P>[propget]</P>
<P>HRESULT LoginScript ([out, retval]BSTR *pbstrLoginScript);</P>
<P>[propput]</P>
<P>HRESULT LoginScript ([in]BSTR bstrLoginScript);</P>
<P> [propget]</P>
<P>HRESULT HomePage ([out, retval]BSTR *pbstrHomePage);</P>
<P>[propput]</P>
<P>HRESULT HomePage ([in]BSTR bstrHomePage);</P>
<P>[propget]</P>
<P>HRESULT Picture ([out, retvalVARIANT *pvarPicture);</P>
<P>[propput]</P>
<P>HRESULT Picture ([in]VARIANT varPicture);</P>
<P>// Methods.</P>
<P>HRESULT Groups ([out, retval]IADsMembers **ppGroups);</P>
<P>HRESULT SetPassword ([in]BSTR bstr NewPassword);</P>
<P>HRESULT ChangePassword (    [in]BSTR bstrOldPassword</P>
<P>[in]BSTR bstrNewPassword);</P>
<P>};</code></pre></P>
<P></P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="126pt" VALIGN="TOP"><COL WIDTH="94pt" VALIGN="TOP"><COL WIDTH="216pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Method</B></P></TD><TD VALIGN="TOP"><P><B>Syntax</B></P></TD><TD VALIGN="TOP"><P><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP"><P>BadLoginAddress</P></TD><TD VALIGN="TOP"><P>NetAddress</P></TD><TD VALIGN="TOP"><P>Gets the address of last node that is considered an Intruder (kept if Intruder detection is active).</P></TD></TR><TR><TD VALIGN="TOP"><P>BadLoginCount</P></TD><TD VALIGN="TOP"><P>Integer</P></TD><TD VALIGN="TOP"><P>If Intruder detection is active, gets the number of bad logon attempts since the last reset time.</P></TD></TR><TR><TD VALIGN="TOP"><P>LastLogin</P></TD><TD VALIGN="TOP"><P>Time</P></TD><TD VALIGN="TOP"><P>Gets the time and date of last network logon.</P></TD></TR><TR><TD VALIGN="TOP"><P>LastLogoff</P></TD><TD VALIGN="TOP"><P>Time</P></TD><TD VALIGN="TOP"><P>Gets the time and date of last network logoff.</P></TD></TR><TR><TD VALIGN="TOP"><P>LastFailedLogin</P></TD><TD VALIGN="TOP"><P>Time</P></TD><TD VALIGN="TOP"><P>Gets the time and date of last failed network login.</P></TD></TR><TR><TD VALIGN="TOP"><P>PasswordLastChanged</P></TD><TD VALIGN="TOP"><P>Time</P></TD><TD VALIGN="TOP"><P>Gets the last time the password was changed.</P></TD></TR><TR><TD VALIGN="TOP"><P>Groups</P></TD><TD VALIGN="TOP"><P>Method</P></TD><TD VALIGN="TOP"><P>Returns a collection of Group objects representing the groups that this user is a member of.</P></TD></TR><TR><TD VALIGN="TOP"><P>Description</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the text description of the user.</P></TD></TR><TR><TD VALIGN="TOP"><P>Country</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the reference to the country.</P></TD></TR><TR><TD VALIGN="TOP"><P>Division</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the division within a company (organization).</P></TD></TR><TR><TD VALIGN="TOP"><P>Department</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the department (OU) within the company to which the user belongs.</P></TD></TR><TR><TD VALIGN="TOP"><P>DepartmentNumber</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets department's charge number, e.g., 4911-19.</P></TD></TR><TR><TD VALIGN="TOP"><P>EmployeeID</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the user's employee ID.</P></TD></TR><TR><TD VALIGN="TOP"><P>FullName</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the user's full name.</P></TD></TR><TR><TD VALIGN="TOP"><P>FirstName</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the user's first name.</P></TD></TR><TR><TD VALIGN="TOP"><P>LastName</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the user's last name.</P></TD></TR><TR><TD VALIGN="TOP"><P>OtherName</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets an additional name (for example, middle name) for the user</P></TD></TR><TR><TD VALIGN="TOP"><P>NamePrefix</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Prefix for the user's name, for example "Ms.", "Hon."</P></TD></TR><TR><TD VALIGN="TOP"><P>NameSuffix</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Suffix for the user's name, for example "Jr.", "III".</P></TD></TR><TR><TD VALIGN="TOP"><P>Title</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the user's title.</P></TD></TR><TR><TD VALIGN="TOP"><P>Manager</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets the user's manager.</P></TD></TR><TR><TD VALIGN="TOP"><P>TelephoneNumber</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of  (usually work-related) telephone numbers associated with the user</P></TD></TR><TR><TD VALIGN="TOP"><P>TelephoneHome</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array og  home telephone numbers for  the user</P></TD></TR><TR><TD VALIGN="TOP"><P>TelephoneMobile</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of mobile telephone numbers for  the user</P></TD></TR><TR><TD VALIGN="TOP"><P>TelephonePager</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of  pager numbers for  the user</P></TD></TR><TR><TD VALIGN="TOP"><P>FaxNumber</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets the fax number associated with the user.</P></TD></TR><TR><TD VALIGN="TOP"><P>OfficeLocations</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of BSTR user locations.</P></TD></TR><TR><TD VALIGN="TOP"><P>PostalAddresses</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of BSTR postal addresses, multivalued in the case where the user has more than one address.  The internal format of a Postal Address should comply with CCITT F.401 as referenced in X.521-1993,  which defines a PostalAddress as 6 elements of 30 bytes each,  holding a street address,  (optionally) Post Office Box, city or locality, state or province, Postal Code, and Country. . </P></TD></TR><TR><TD VALIGN="TOP"><P>PostalCodes</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of BSTR postal codes..</P></TD></TR><TR><TD VALIGN="TOP"><P>SeeAlso</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of Active Directory Paths of other objects related to this user.</P></TD></TR><TR><TD VALIGN="TOP"><P>AccountDisabled</P></TD><TD VALIGN="TOP"><P>Boolean</P></TD><TD VALIGN="TOP"><P>Gets and sets if the account is or should be disabled.</P></TD></TR><TR><TD VALIGN="TOP"><P>AccountExpirationDate</P></TD><TD VALIGN="TOP"><P>Time</P></TD><TD VALIGN="TOP"><P>Gets and sets the date and time after which the user cannot log in.</P></TD></TR><TR><TD VALIGN="TOP"><P>GraceLoginsAllowed</P></TD><TD VALIGN="TOP"><P>Integer</P></TD><TD VALIGN="TOP"><P>Gets and sets the number of times the user can log on after the password has expired.</P></TD></TR><TR><TD VALIGN="TOP"><P>GraceLoginsRemaining</P></TD><TD VALIGN="TOP"><P>Integer</P></TD><TD VALIGN="TOP"><P>Gets and sets how many grace logons are left before the account is locked.</P></TD></TR><TR><TD VALIGN="TOP"><P>IsAccountLocked</P></TD><TD VALIGN="TOP"><P>Boolean</P></TD><TD VALIGN="TOP"><P>Gets and sets if account is locked because of intruder detection.</P></TD></TR><TR><TD VALIGN="TOP"><P>LoginHours</P></TD><TD VALIGN="TOP"><P>OctetString</P></TD><TD VALIGN="TOP"><P>Gets and sets time periods for each day of the week during which logons are permitted for the user. Represented as a table of Booleans for the week, each indicating if that time slot is a valid logon time.</P></TD></TR><TR><TD VALIGN="TOP"><P>LoginWorkstations</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of BSTR addresses (or names) of workstations and net numbers at which the user can log on. </P></TD></TR><TR><TD VALIGN="TOP"><P>MaxLogins</P></TD><TD VALIGN="TOP"><P>Integer</P></TD><TD VALIGN="TOP"><P>Gets and sets the number of simultaneous login sessions allowed.</P></TD></TR><TR><TD VALIGN="TOP"><P>MaxStorage</P></TD><TD VALIGN="TOP"><P>Integer</P></TD><TD VALIGN="TOP"><P>Gets and sets the maximum amount of disk space a user can have. Expressed in KBytes.</P></TD></TR><TR><TD VALIGN="TOP"><P>PasswordExpirationDate</P></TD><TD VALIGN="TOP"><P>Time</P></TD><TD VALIGN="TOP"><P>Gets and sets the date and time at which the password expires.</P></TD></TR><TR><TD VALIGN="TOP"><P>PasswordMinimumLength</P></TD><TD VALIGN="TOP"><P>Integer</P></TD><TD VALIGN="TOP"><P>Gets and sets the minimum password length.</P></TD></TR><TR><TD VALIGN="TOP"><P>PasswordRequired</P></TD><TD VALIGN="TOP"><P>Boolean</P></TD><TD VALIGN="TOP"><P>Gets and sets if the password is required.</P></TD></TR><TR><TD VALIGN="TOP"><P>RequireUniquePassword</P></TD><TD VALIGN="TOP"><P>Boolean</P></TD><TD VALIGN="TOP"><P>Gets and sets if a new password must be different than those known through a password history.</P></TD></TR><TR><TD VALIGN="TOP"><P>EmailAddress</P></TD><TD VALIGN="TOP"><P>EmailAddress</P></TD><TD VALIGN="TOP"><P>Gets and sets the user's e-mail address.</P></TD></TR><TR><TD VALIGN="TOP"><P>HomeDirectory</P></TD><TD VALIGN="TOP"><P>Path</P></TD><TD VALIGN="TOP"><P>Gets and sets the user's home directory.</P></TD></TR><TR><TD VALIGN="TOP"><P>Languages</P></TD><TD VALIGN="TOP"><P>List</P></TD><TD VALIGN="TOP"><P>Gets and sets an array of BSTR language names for the user.</P></TD></TR><TR><TD VALIGN="TOP"><P>Profile</P></TD><TD VALIGN="TOP"><P>Path</P></TD><TD VALIGN="TOP"><P>Gets and sets the path of user's profile.</P></TD></TR><TR><TD VALIGN="TOP"><P>LoginScript</P></TD><TD VALIGN="TOP"><P>Path</P></TD><TD VALIGN="TOP"><P>Gets and sets the logon script path.</P></TD></TR><TD VALIGN="TOP"><P>HomePage</P></TD><TD VALIGN="TOP"><P>String</P></TD><TD VALIGN="TOP"><P>Gets and sets a string containing the URL of a home page for this user.</P></TD></TR><TR><TD VALIGN="TOP"><P>Picture</P></TD><TD VALIGN="TOP"><P>OctetString</P></TD><TD VALIGN="TOP"><P>Gets and sets array of bytes that hold an image.</P></TD></TR><TR><TD VALIGN="TOP"><P>Groups</P></TD><TD VALIGN="TOP"><P>Method</P></TD><TD VALIGN="TOP"><P>Returns a collection of Group objects representing the groups that this user is a member of.</P></TD></TR><TR><TD VALIGN="TOP"><P>SetPassword</P></TD><TD VALIGN="TOP"><P>Method</P></TD><TD VALIGN="TOP"><P>Sets the user's password to a specified value.</P></TD></TR><TR><TD VALIGN="TOP"><P>ChangePassword</P></TD><TD VALIGN="TOP"><P>Method</P></TD><TD VALIGN="TOP"><P>Changes the user's password from the specified old value to a new value.</P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
