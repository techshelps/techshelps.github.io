<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.1.3    Examples</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H3>5.1.3    Examples</H3><P>The following example adds users to a group.</P>
<P><B>Example 1:  Adding Users to a Group (Visual Basic)</B></P>
<P><pre><code>Dim Group as IADsGroup</P>
<P></P>
<P>' Bind to a known group object.</P>
<P>Set Group = GetObject("WinNT://MSFT/Groups/Administrators")</P>
<P></P>
<P>' Add Jane and John to the Administrators group.</P>
<P>Group.Add("WinNT://MSFT/Users/John")</P>
<P>Group.Add("WinNT://MSFT/Users/Jane")</P>
<P></code></pre></P>
<P><B>Example 1:  Adding Users to a Group (C/C++)</B></P>
<P><pre><code>IADsGroup *pGroup;</P>
<P></P>
<P>//</P>
<P>// Bind to a known group object.</P>
<P>//</P>
<P>ADsGetObject(TEXT("WinNT://MSFT/Groups/Administrators"),</P>
<P>IID_IADsGroup,</P>
<P>(void**)&amp;pGroup);</P>
<P></P>
<P>//</P>
<P>// Add Jane and John to the Administrators group.</P>
<P>//</P>
<P>pGroup-&gt;Add(TEXT("WinNT://MSFT/Users/John"));</P>
<P>pGroup-&gt;Add(TEXT("WinNT://MSFT/Users/Jane"));</P>
<P></P>
<P>//</P>
<P>// Cleanup.</P>
<P>//</P>
<P>pGroup-&gt;Release();</P>
<P></code></pre></P>
<P>The following example removes users from a group.</P>
<P><B>Example 2:  Removing Users from a Group (Visual Basic)</B></P>
<P><pre><code>Dim Group as IADsGroup</P>
<P></P>
<P>' Bind to a known group object.</P>
<P>Set Group = GetObject("@WinNT!MSFT\Groups\Administrators")</P>
<P></P>
<P>' Remove Jane and John from the Administrators group.</P>
<P>Group.Remove("WinNT://MSFT/Users/John")</P>
<P>Group.Remove("WinNT://MSFT/Users/Jane")</P>
<P></code></pre></P>
<P><B>Example 2:  Removing Users from a Group (C/C++)</B></P>
<P><pre><code>IADsGroup *pGroup;</P>
<P></P>
<P>//</P>
<P>// Bind to a known group object.</P>
<P>//</P>
<P>ADsGetObject(TEXT("WinNT://MSFT/Groups/Administrators"),</P>
<P>IID_IADsGroup,</P>
<P>(void**)&amp;pGroup);</P>
<P></P>
<P>//</P>
<P>// Remove Jane and John from the Administrators group.</P>
<P>//</P>
<P>pGroup-&gt;Remove(TEXT("WinNT://MSFT/Users/John"));</P>
<P>pGroup-&gt;Remove(TEXT("WinNT://MSFT/Users/Jane"));</P>
<P></P>
<P>//</P>
<P>// Cleanup.</P>
<P>//</P>
<P>pGroup-&gt;Release();</P>
<P></code></pre></P>
<P>The following example enumerates the users in a group.</P>
<P><B>Example 3:  Enumerating Users in a Group (Visual Basic)</B></P>
<P><pre><code>Dim Group as IADsGroup</P>
<P>Dim Member as IADs</P>
<P></P>
<P>' Bind to a known group object.</P>
<P>Set Group = GetObject("WinNT://MyDomain/Administrators")</P>
<P></P>
<P>' Enumerate the members in the group.</P>
<P>For Each Member in Group.Members</P>
<P>    Debug.Print Member.Name</P>
<P>Next Member</P>
<P></code></pre></P>
<P><B>Example 3:  Enumerating Users in a Group (C/C++)</B></P>
<P><pre><code>IADsGroup *pGroup;</P>
<P>IADsMembers *pMembers;</P>
<P>IEnumVARIANT *pEnum;</P>
<P>IADs *pMember;</P>
<P>BSTR bstrMemberName;</P>
<P></P>
<P>//</P>
<P>// Bind to a known group object.</P>
<P>//</P>
<P>ADsGetObject(TEXT("WinNT://MSFT/Groups/Administrators"),</P>
<P>IID_IADsGroup,</P>
<P>(void**)&amp;pGroup);</P>
<P></P>
<P>//</P>
<P>// Get the Members collection.</P>
<P>//</P>
<P>pGroup-&gt;Members(&amp;pMembers);</P>
<P></P>
<P>//</P>
<P>// Get an enumerator.  ADsBuildEnumerator is a helper</P>
<P>// function supplied by Active Directory.  See Appendix B for more</P>
<P>// details.</P>
<P>//</P>
<P>ADsBuildEnumerator((IADsContainer *)pMembers,</P>
<P>            &amp;pEnum);</P>
<P></P>
<P>//</P>
<P>// Enumerate through all the children of the container.</P>
<P>// ADsEnumerateNext is a helper function supplied by Active Directory.</P>
<P>// See Appendix B for more details.</P>
<P>//</P>
<P>do</P>
<P>{</P>
<P>hr = ADsEnumerateNext(pEnum,</P>
<P></P>
<P>1,</P>
<P>(void**)&amp;pMember,</P>
<P>NULL);</P>
<P>if (SUCCEEDED(hr))</P>
<P>    {</P>
<P>pMember-&gt;get_Name(&amp;bstrMemberName);</P>
<P>printf("%s\n", bstrMemberName);</P>
<P></P>
<P>SysFreeString(bstrMemberName);</P>
<P>pMember-&gt;Release();</P>
<P>} // if</P>
<P></P>
<P>} while (SUCCEEDED(hr)); // do</P>
<P></P>
<P>//</P>
<P>// Cleanup.</P>
<P>//</P>
<P>pEnum-&gt;Release();</P>
<P>pMembers-&gt;Release();</P>
<P>pGroup-&gt;Release();</code></pre></P></BODY></HTML>
