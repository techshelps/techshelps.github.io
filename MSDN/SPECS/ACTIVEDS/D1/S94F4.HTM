<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.1.3    Binding to the Default Container</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H3>4.1.3    Binding to the Default Container</H3><P>Active Directory defines the concept of a <B>default container</B> to provide a quick way of getting a pointer to a previously identified Active Directory container.  This is especially useful when an explicit ADsPath string is not known to the Active Directory client or the client would like to start browsing at a specific, previously set location. </P>
<P>The <B>default container</B> simply contains the ADsPath of a "starting point" in a given DS for a particular user.  Users can save the ADsPath of their "favorite starting point" in the default container.</P>
<P>Active Directory defines the DefaultContainer for the namespaces object.  The namespaces object is implemented by Active Ds  and is always obtained with the ADsPath "ADS://" or "@ADS!//"..  Microsoft provides the implementation if the namespaces object..  <B>Note: </B>setting the default container takes effect immediately.</P>
<P>The default container allows a client to obtain an interface pointer on a container component using only the ADsPath string of the namespaces object.  As noted above, the ADsPath string of the namespaces object is always known, for Active Directory version 1.1, to be "ADS://" or "@ADS!//".</P>
<P>The following code example demonstrates how to bind to the default container and print its name.</P>
<P><B>Example 1:  Binding to the Default Container (Visual Basic)</B></P>
<P>Dim NamespacesObj as IADsNamespaces</P>
<P>Dim ReturnedContainer as IADsContainer</P>
<P>Dim ContainedOBject as IADs</P>
<P></P>
<P>'Bind to the Namespaces container.</P>
<P>Set NamespacesObj = GetObject("ADS://")</P>
<P></P>
<P>' Get the default container.</P>
<P>Set ReturnedContainer = GetObject(NamespacesObj.DefaultContainer)</P>
<P>Debug.Print ReturnedContainer.Name</P>
<P>' Use the Default Container as a starting point for other operations</P>
<P>' such as browsing the namespace, etc.</P>
<P>for each ContainedObject in ReturnedContainer</P>
<P>    Debug.Print ContainedObject.Name</P>
<P>next ContainedObject</P>
<P></P>
<P><B>Example 1:  Binding to the Default Container (C/C++)</B></P>
<P>IADs    *pNamespacesObj;</P>
<P>IADs    *pDefaultContainer;</P>
<P>BSTR    bstrDefaultContainerPath;</P>
<P>BSTR    bstrName;</P>
<P></P>
<P>//</P>
<P>// Bind to the Namespaces object.</P>
<P>//</P>
<P>ADsGetObject(TEXT("ADS://"),</P>
<P>IID_IADsNamespaces,</P>
<P>(void**)&amp;pNamespacesObj);</P>
<P></P>
<P>//</P>
<P>// Get the default container path and bind to it.</P>
<P>//</P>
<P>pNamespacesObj-&gt;get_DefaultContainer(&amp;bstrDefaultContainerPath);</P>
<P>ADsGetObject(bstrDefaultContainerPath,</P>
<P>IID_IADs,</P>
<P>(void**)&amp;pDefaultContainer);</P>
<P></P>
<P>//</P>
<P>// Print the name.</P>
<P>//</P>
<P>pDefaultContainer-&gt;get_Name(&amp;bstrName);</P>
<P>printf("%s\n", bstrName);</P>
<P></P>
<P>//</P>
<P>// Cleanup.</P>
<P>//</P>
<P>SysFreeString(bstrDefaultContainerPath);</P>
<P>SysFreeString(bstrName);</P>
<P>pDefaultContainer-&gt;Release();</P>
<P>pNamespacesObj-&gt;Release();</P>
<P></P>
<P><B>Example 2:  Setting the Default Container (Visual Basic)</B></P>
<P>Dim NamespacesObj as IADsNamespaces</P>
<P></P>
<P>' Bind to the Namespaces container.</P>
<P>Set NamespacesObj = GetObject("ADS://")</P>
<P></P>
<P>' Set the default container.</P>
<P>NamespacesObj.DefaultContainer = ("WinNT://MyDomain")</P>
<P></P>
<P></P>
<P><B>Example 2:  Setting the Default Container (C/C++)</B></P>
<P>IADs    *pNamespacesObj;</P>
<P></P>
<P>//</P>
<P>// Bind to the Namespaces object.</P>
<P>//</P>
<P>ADsGetObject(TEXT("ADS://"),</P>
<P>IID_IADsNamespaces,</P>
<P>(void**)&amp;pNamespacesObj);</P>
<P></P>
<P>//</P>
<P>// Set the default container.</P>
<P>//</P>
<P>pNamespacesObj-&gt;put_DefaultContainer(TEXT("WinNT://MyDomain"));</P>
<P></P>
<P>//</P>
<P>// Cleanup.</P>
<P>//</P>
<P>pNamespacesObj-&gt;Release();</P>
<P></P></BODY></HTML>
