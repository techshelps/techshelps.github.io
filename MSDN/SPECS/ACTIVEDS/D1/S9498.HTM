<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.1.4    Property Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H3>6.1.4    Property Object</H3>A property is an entity which signifies a storage area in an Directory.  Properties are contained within class objects. A class can have multiple properties. </P>
<P>A property is described by its name, syntax, and qualifiers. Active Directory allows a provider to expose multiple names for the same property.  Names for a property are exposed through:</P>
<P><UL><LI>The RDN for the property as it appears in IADs.Name</LI></UL></P>
<P><UL><LI>The "native" name as is appears in the schema for the underlying DS</LI></UL></P>
<P>The names exposed as described above  for a given schema Property object must be valid for use in name-bound operations on that property (approaches 2 and 3 in Section 0)</P>
<P>Standard Active Directory objects expose properties through the defined interface for the object class in question,  for example IADsUser (for user objects). .    Providers can elect to expose additional properties and objects not defined by Active Directory.  Providers that expose additional properties can expose them via additional interfaces,  or via dynamic name-bound access (IADs.Get() and IADs.Put).   </P>
<P>This object supports the mandatory IADs interface and one additional COM interface, IADsProperty.</P>
<H4><A NAME="sec0"></A>6.1.4.1    Rules for creating a new Property object </H4><P><UL><LI>Active Directory represents properties as a global list within a schema instance and requires property names to be  unique within a schema instance. </LI></UL></P>
<H4><A NAME="sec1"></A>6.1.4.2    IADsProperty</H4><P>The IADsProperty interface is used to get and set the properties of the Property object. The interface definition is as follows:</P>
<P></P>
<P><pre><code>[ object, uuid(IID_IADsProperty), oleautomation, dual ]</P>
<P>interface IADsProperty: IADs</P>
<P>{</P>
<P>// Read/write properties.</P>
<P>[propget]</P>
<P>HRESULT OID     ([in]BSTR bstrOID);</P>
<P>[propput]</P>
<P>HRESULT OID     ([out, retval]BSTR *pbstrOID);</P>
<P>[propget]</P>
<P>HRESULT Syntax ([out, retval]BSTR *pbstrSyntax);</P>
<P>[propput]</P>
<P>HRESULT Syntax ([in]BSTR bstrSyntax);</P>
<P> [propget]</P>
<P>HRESULT MaxRange ([out, retval]long *plMaxRange);</P>
<P>[propput]</P>
<P>HRESULT MaxRange ([in]long lMaxRange);</P>
<P>[propget]</P>
<P>HRESULT MinRange ([out, retval]long *plMinRange);</P>
<P>[propput]</P>
<P>HRESULT MinRange ([in]long lMinRange);</P>
<P> [propget]</P>
<P>HRESULT MultiValued ([out, retval]boolean *pbMultiValued);</P>
<P>[propput]</P>
<P>HRESULT MultiValued ([in]lboolean bMultiValued);</P>
<P>// Methods</P>
<P>HRESULT Qualifiers([out, retval]IADsCollection **ppQualifiers)</P>
<P>};</code></pre></P>
<P></P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="90pt" VALIGN="TOP"><COL WIDTH="346pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Method</B></P></TD><TD VALIGN="TOP"><P><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP"><P>OID</P></TD><TD VALIGN="TOP"><P>Gets and sets the namespace-specific Object Identifier defining this property.  This is provided to allow schema extension via Active Directory in namespaces that require namespace-specific OIDs for properties.</P></TD></TR><TR><TD VALIGN="TOP"><P>Syntax</P></TD><TD VALIGN="TOP"><P>Relative  path of  the  schema syntax object defining the syntax of this property.  Relative to the current schema container.  A list of valid syntax objects can be enumerated in the schema.</P></TD></TR><TR><TD VALIGN="TOP"><P>MaxRange</P></TD><TD VALIGN="TOP"><P>Gets and sets the upper limit of values assigned to the property.</P></TD></TR><TR><TD VALIGN="TOP"><P>MinRange</P></TD><TD VALIGN="TOP"><P>Gets and sets the lower limit of values assigned to the property.</P></TD></TR><TR><TD VALIGN="TOP"><P>MultiValued</P></TD><TD VALIGN="TOP"><P>Gets and sets the boolean value that determines of this property is multi-valued.  A TRUE value indicates the property is multi-valued.</P></TD></TR><TR><TD VALIGN="TOP"><P>Qualifiers</P></TD><TD VALIGN="TOP"><P><B>OPTIONAL</B> method returning a collection of Active Directory objects describing additional qualifiers of this property.  Qualifier objects are provider specific.</P>
<P>Providers that do not implement the Qualifiers collection must return E_NOTIMPL when the Qualifiers method is called.</P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
