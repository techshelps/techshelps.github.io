<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Superclassed Standard Controls</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Superclassed Standard Controls</H3>  </P>
Some applications that use standard controls alter their behavior by employing a technique known as superclassing. When an application uses superclassed standard controls, basic control functions are still handled by the underlying system code for the standard control type, but the application adds its own special behavior. You should follow these guidelines when using superclassed standard controls:</P>
<SPAN CLASS="list"><UL><LI>Make sure that the superclassed controls respond to the normal messages for their class.</LI><LI>Use recognizable class names. Because superclassed controls normally have a unique class name, you should make sure the control's class name identifies the base class by including the normal class name as part of its name. For example, a superclassed button could be given a class name like "MyAppButton." Any accessibility aid encountering this name would assume that the control is a superclassed button.</LI><LI>Do not include the name of an unrelated standard class in a superclassed control's class name because an accessibility aid might mistakenly assume that the control is related to the standard class.</LI></UL></SPAN> </P></BODY></HTML>
