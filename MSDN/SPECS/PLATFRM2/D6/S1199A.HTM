<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE Controls</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>OLE Controls</H3>  </P>
The preferred method for creating custom controls is to use the OLE controls architecture. OLE controls are an extension of the model used by the Microsoft Visual Basic programming system. Each control is an OLE object with many standardized properties and methods. Future OLE interfaces will support a method of obtaining interface pointers (object handles) to each object in a window or region of a window by querying with a window message. Once you have an interface pointer, you can make calls to an object to retrieve or set properties, including the object's location, name, and primary value.</P>
An application that hosts OLE controls should support the <B>IOLEContainer</B> interface, which allows the enumeration of embedded controls and other objects.</P>
 </P></BODY></HTML>
