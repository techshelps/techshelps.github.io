<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Spacing for a Specific Font</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Spacing for a Specific Font</H3>  </P>
Some applications space their dialog boxes so tightly that they look unattractive if the user changes the dialog box font. Some users change the font to make the dialog box easier to read, so you should leave enough white space in your dialog box layouts that they can accommodate small changes in font metrics. Extra white space also makes an application easier to localize into other languages.</P>
Some developers fear that a change of font will completely break their dialog boxes, but this is rarely a problem. Users typically change only the size of the font, not the typeface, and Windows automatically positions dialog box controls based on the size of the dialog box font.</P>
The primary case where changing fonts can be a problem is when an application draws directly into elements of a dialog box. For example, some applications create a static control and then draw over it to create a custom design element. This element can appear incorrectly if the size of the static control is scaled to match a new dialog box font size. However, the application can determine the proper location and size at run time to avoid these problems.</P>
Some applications now include specific fonts in their dialog boxes rather than relying on the system dialog box font. It is a dangerous practice, however, to not allow the user to adjust those font sizes. For more information about these issues, see "Color" and "Size" earlier in this document.</P>
 </P></BODY></HTML>
