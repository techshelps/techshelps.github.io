<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Keyboard Access</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Keyboard Access</H3>  </P>
Providing a good keyboard interface is key to designing an accessible application. You should follow these guidelines when implementing keyboard access in your application:</P>
<SPAN CLASS="list"><UL><LI>Provide keyboard access to all features.</LI><LI>When possible, model your keyboard interface on a familiar application or control.</LI><LI>Provide access keys for all menu items and controls.</LI><LI>Use a logical keyboard navigation order.</LI><LI>Fully document your keyboard user interface.</LI><LI>If you normally hide some keyboard user interface elements, display them when the Keyboard Preference flag is set.</LI><LI>Avoid using the <B>GetAsynchKeyState</B> function; use alternatives instead, such as the <B>GetKeyState</B> function.</LI></UL></SPAN> </P></BODY></HTML>
