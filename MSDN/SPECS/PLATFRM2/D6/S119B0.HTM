<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scaling Nondocument Regions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Scaling Nondocument Regions</H3>  </P>
Most applications display information in more forms than just text. Buttons, rulers, and graphic images can also pose problems for people if the object is a fixed size (especially a small size).</P>
Many application windows contain two types of information: an image of a document created by the user and one or more panes belonging to the application itself. A good example of nondocument panes is a word processor's toolbar of command buttons. If the Zoom command applies only to the document and not to the surrounding information, the user may still find it difficult to use the application or suffer from "tiny button syndrome." The application could have a single zoom factor applied to both types of information. However, the size of buttons should not change when 8 point text is zoomed because much of the benefit of a toolbar is lost if the user has to scroll to reach some of the buttons.</P>
A better solution is to allow the user to independently select the zoom ratio for each pane, whether a document or nondocument region. For example, "Toolbar Size" can be provided as a separate option, and a single setting can apply to all toolbars. It is also acceptable to provide a simple option that permits the user to choose from a range of sizes instead of using a more general scaling factor.</P>
 </P></BODY></HTML>
