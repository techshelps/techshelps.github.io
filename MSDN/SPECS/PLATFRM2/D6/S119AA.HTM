<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Making Custom Colors Customizable</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Making Custom Colors Customizable</H3>  </P>
If you use colors for elements that do not correspond to system colors selected in Control Panel, you should provide your own means for adjusting the colors. For example, you could design a calendar application that uses different background colors to indicate various types of events. When using application-specific colors in this way, you should allow the user to assign his or her own choice of colors for the elements.</P>
Historically, some applications have had fixed colors to prevent the user from selecting an "ugly" color scheme that would make the application look unattractive. However, a user will not complain about a color scheme that he or she chooses, but may be displeased by a fixed color scheme.</P>
Another option is to provide patterns as an alternative to colors. In the case of the calendar application, users could be allowed to choose a pattern along with the color for each type of scheduled event. They could choose a color combination that works for their eyes and supply any additional information as a background pattern. This option works best when the pattern fills an object without interfering with the text.</P>
 </P></BODY></HTML>
