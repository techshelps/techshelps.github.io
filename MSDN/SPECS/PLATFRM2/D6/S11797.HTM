<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Keyboard Access</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>Keyboard Access</H2>  </P>
An application should be designed so that a mouse is not required for its use. Providing a good keyboard interface is actually one of the most important and most visible aspects of software accessibility. It is important because it affects users with a wide range of disabilities. For example, a keyboard interface may be the only option for users who are blind, who use voice input or keyboard macro utilities, or who cannot use a mouse. (The accessibility options in Windows 95 can often compensate for problems involving the keyboard, but it is more difficult to handle problems relating to pointing devices. Although Windows supports movement of the mouse pointer using the keyboard, this technique cannot be used by everyone, and it is extremely cumbersome at best.)</P>
In addition to accommodating people with disabilities, there are many other reasons for providing a good keyboard interface. Many experienced typists do not like to take their hands off the keyboard to use a mouse. In addition, pointing devices on many laptop computers can be inconvenient to use, and a working mouse may not always be available.</P>
 </P></BODY></HTML>
