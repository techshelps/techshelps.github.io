<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.3 Byte Ordering</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>2.3 Byte Ordering</H3>  </P>
The Intel byte ordering is like that of the DEC VAX3, and therefore differs from the Internet and 6800068000-type processor byte ordering.  Thus care must be taken to ensure correct orientation.</P>
Any reference to IP addresses or port numbers passed to or from a Windows Sockets routine must be in network order.  This includes the IP address and port fields of a struct sockaddr_in (but not the sin_family field).</P>
Consider an application which normally contacts a server on the TCP port corresponding to the "time" service, but which provides a mechanism for the user to specify that an alternative port is to be used.  The port number returned by getservbyname() is already in network order, which is the format required constructing an address, so no translation is required.  However if the user elects to use a different port, entered as an integer, the application must convert this from host to network order (using the htons() function) before using it to construct an address.  Conversely, if the application wishes to display the number of the port within an address (returned via, e.g., getpeername()), the port number must be converted from network to host order (using ntohs()) before it can be displayed.</P>
Since the Intel and Internet byte orders are different, the conversions described above are unavoidable.  Application writers are cautioned that they should use the standard conversion functions provided as part of the Windows Sockets API rather than writing their own conversion code, since future implementations of Windows Sockets are likely to run on systems for which the host order is identical to the network byte order.  Only applications which use the standard conversion functions are likely to be portable.</P>
</P>
</P>
3    VAX is a trademark of Digital Equipment Corporation.</P>
4        is a trademark of Motorola, Inc.</P>
 </P></BODY></HTML>
