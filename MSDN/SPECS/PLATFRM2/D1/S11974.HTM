<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>B.7 DLL Ordinal Numbers</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>B.7 DLL Ordinal Numbers</H3>  </P>
The winsock.def file for use by every Windows Sockets implementation is as follows.  Ordinal values starting at 1000 are reserved for Windows Sockets implementors to use for exporting private interfaces to their DLLs.  A Windows Sockets implementation must not use any ordinals 999 and below except for those APIs listed below.  An application which wishes to work with any Windows Sockets DLL must use only those routines listed below; using a private export makes an application dependent on a particular Windows Sockets implementation.</P>
  </P>
<BR></P>
<pre><code>;  
;         File: winsock.def 
;       System: MS-Windows 3.x 
;      Summary: Module definition file for Windows Sockets DLL.  
;  

LIBRARY         WINSOCK         ; Application's module name 

DESCRIPTION     'BSD Socket API for Windows' 

EXETYPE         WINDOWS         ; required for all windows applications 

STUB            'WINSTUB.EXE'   ; generates error message if application 
                                ; is run without Windows 

;CODE can be FIXED in memory because of potential upcalls 
CODE            PRELOAD         FIXED 

;DATA must be SINGLE and at a FIXED location since this is a DLL 
DATA            PRELOAD         FIXED           SINGLE

HEAPSIZE        1024 
STACKSIZE       16384 

; All functions that will be called by any Windows routine 
; must be exported.  Any additional exports beyond those defined
; here must have ordinal numbers 1000 or above. 

EXPORTS 
        accept                         @1 
        bind                           @2 
        closesocket                    @3 
        connect                        @4 
        getpeername                    @5 
        getsockname                    @6 
        getsockopt                     @7 
        htonl                          @8 
        htons                          @9 
        inet_addr                      @10 
        inet_ntoa                      @11 
        ioctlsocket                    @12 
        listen                         @13 
        ntohl                          @14 
        ntohs                          @15 
        recv                           @16 
        recvfrom                       @17 
        select                         @18 
        send                           @19 
        sendto                         @20 
        setsockopt                     @21 
        shutdown                       @22 
        socket                         @23 

        gethostbyaddr                  @51 
        gethostbyname                  @52 
        getprotobyname                 @53 
        getprotobynumber               @54 
        getservbyname                  @55 
        getservbyport                  @56 
        gethostname                    @57

        WSAAsyncSelect                 @101 
        WSAAsyncGetHostByAddr          @102 
        WSAAsyncGetHostByName          @103 
        WSAAsyncGetProtoByNumber       @104 
        WSAAsyncGetProtoByName         @105 
        WSAAsyncGetServByPort          @106 
        WSAAsyncGetServByName          @107 
        WSACancelAsyncRequest          @108 
        WSASetBlockingHook             @109 
        WSAUnhookBlockingHook          @110 
        WSAGetLastError                @111 
        WSASetLastError                @112 
        WSACancelBlockingCall          @113 
        WSAIsBlocking                  @114 
        WSAStartup                     @115 
        WSACleanup                     @116 

        __WSAFDIsSet                   @151 

        WEP                            @500    RESIDENTNAME 

;eof 
</code></pre>
  </P>
 </P></BODY></HTML>
