<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>8. Import Library Format</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<FONT FACE="verdana, Arial, Helvetica" SIZE="2">

<h1><a name="8.importlibraryformat"></a>8. Import Library Format</h1>
<p>
Traditional import libraries, i.e., libraries that describe the exports from one image for use by another, typically follow the layout described in 7. Archive (Library) File Format. The primary difference is that import library members contain pseudo-object files instead of real ones, where each member includes the section contributions needed to build the Import Tables described in Section 6.4. The .idata Section.  The linker generates this archive while building the exporting application.
<p>
The section contributions for an import can be inferred from a small set of information. The linker can either generate the complete, verbose information into the import library for each member at the time of the library’s creation, or it can write only the canonical information to the library and let the application that later uses it generate the necessary data on-the-fly.
<p>
In an import library with the long format, a single member contains the following information:
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Archive member header<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File header<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Section headers<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Data corresponding to each of the section headers	COFF symbol table<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Strings
<p>
In contrast a short import library is written as follows:
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Archive member header<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Import header<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Null-terminated import name string<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Null-terminated dll name string
<p>
This is sufficient information to accurately reconstruct the entire contents of the member at the time of its use.
</p>
</BODY>
</HTML>
