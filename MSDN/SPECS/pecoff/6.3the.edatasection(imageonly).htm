<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.3 The .edata Section (Image Only)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>


<FONT FACE="verdana, Arial, Helvetica" SIZE="2">

<h1><a name="6.3the.edatasection(imageonly)"></a>6.3 The .edata Section (Image Only)</h1>
<p>
The export data section, named <b>.edata</b>, contains information about symbols that other images can access through dynamic linking. Exports are generally found in DLLs, but DLLs can import symbols as well.</p>
<p>
An overview of the general structure of the export section is described below. The tables described are generally contiguous in the file and present in the order shown (though this is not strictly required). Only the Directory Table and Address Table are necessary for exporting symbols as ordinals. (An ordinal is an export accessed directly as an Export Address Table index.) The Name Pointer Table, Ordinal Table, and Export Name Table all exist to support use of export names.</p>
<table cols=2>
<tr valign=top>
<TD width=136pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2"><b>Table Name</b></td>
<TD width=299pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2"><b>Description</b></td>
</tr>
<tr valign=top>
<TD width=136pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Export Directory Table</td>
<TD width=299pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">A table with just one row (unlike the debug directory). This table indicates the locations and sizes of the other export tables.</td>
</tr>
<tr valign=top>
<TD width=136pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Export Address Table</td>
<TD width=299pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">An array of RVAs of exported symbols. These are the actual addresses of the exported functions and data within the executable code and data sections. Other image files can import a symbol by using an index to this table (an ordinal) or, optionally, by using the public name that corresponds to the ordinal if one is defined.</td>
</tr>
<tr valign=top>
<TD width=136pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Name Pointer Table</td>
<TD width=299pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Array of pointers to the public export names, sorted in ascending order.</td>
</tr>
<tr valign=top>
<TD width=136pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Ordinal Table</td>
<TD width=299pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Array of the ordinals that correspond to members of the Name Pointer Table. The correspondence is by position; therefore, the Name Pointer Table and the Ordinal Table must have the same number of members. Each ordinal is an index into the Export Address Table.</td>
</tr>
<tr valign=top>
<TD width=136pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Export Name Table</td>
<TD width=299pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">A series of null-terminated ASCII strings. Members of the Name Pointer Table point into this area. These names are the public names through which the symbols are imported and exported; they do not necessarily have to be the same as the private names used within the image file.</td>
</tr>
</table><br>

<p>
When another image file imports a symbol by name, the Name Pointer Table is searched for a matching string. If one is found, the associated ordinal is then determined by looking at the corresponding member in the Ordinal Table (that is, the member of the Ordinal Table with the same index as the string pointer found in the Name Pointer Table). The resulting ordinal is an index into the Export Address Table, which gives the actual location of the desired symbol. Every export symbol can be accessed by an ordinal.</p>
<p>
Direct use of an ordinal is therefore more efficient, because it avoids the need to search the Name Pointer Table for a matching string. However, use of an export name is more mnemonic and does not require the user to know the table index for the symbol.</p>

</BODY>
</HTML>
