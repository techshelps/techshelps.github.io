<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.3.2 Export Address Table</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>


<FONT FACE="verdana, Arial, Helvetica" SIZE="2">

<h1><a name="6.3.2exportaddresstable"></a>6.3.2 Export Address Table</h1>
<p>
The Export Address Table contains the address of exported entry points and exported data and absolutes. An ordinal number is used to index the Export Address Table, after subtracting the value of the Ordinal Base field to get a true, zero-based index. (Thus, if the Ordinal Base is set to 1, a common value, an ordinal of 6 is the same as a zero-based index of 5.)</p>
<p>
Each entry in the Export Address Table is a field that uses one of two formats, as shown in the following table. If the address specified is <i>not</i> within the export section (as defined by the address and length indicated in the Optional Header), the field is an Export RVA: an actual address in code or data. Otherwise, the field is a Forwarder RVA, which names a symbol in another DLL.</p>
<table border=1 cols=4 frame=box rules=all>
<tr valign=top>
<TD width=69pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2"><b>Offset</b></td>
<TD width=40pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2"><b>Size</b></td>
<TD width=117pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2"><b>Field</b></td>
<TD width=212pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2"><b>Description</b></td>
</tr>
<tr valign=top>
<TD width=69pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">0</td>
<TD width=40pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">4</td>
<TD width=117pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Export RVA</td>
<TD width=212pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Address of the exported symbol when loaded into memory, relative to the image base. For example, the address of an exported function.</td>
</tr>
<tr valign=top>
<TD width=69pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">0</td>
<TD width=40pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">4</td>
<TD width=117pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Forwarder RVA</td>
<TD width=212pt><FONT FACE="verdana, Arial, Helvetica" SIZE="2">Pointer to a null-terminated ASCII string in the export section, giving the DLL name and the name of the export (for example, &quot;MYDLL..expfunc&quot;) or the DLL name and an export (for example, &quot;MYDLL.#27&quot;).</td>
</tr>
</table><br>
<p>
A Forwarder RVA exports a definition from some other image, making it appear as if it were being exported by the current image. Thus the symbol is simultaneously imported and exported.</p>
<p>
For example, in KERNEL32.DLL in Windows NT, the export named &quot;HeapAlloc&quot; is forwarded to the string &quot;NTDLL.RtlAllocateHeap&quot;. This allows applications to use the NT-specific module &quot;NTDLL.DLL&quot; without actually containing import references to it. The application&#39;s import table references only &quot;KERNEL32.DLL.&quot; Therefore, the application is not specific to Windows NT and can run on any Win32 system.</p>

</BODY>
</HTML>
