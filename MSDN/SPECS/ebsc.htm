<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Embedded Bitmap Scaling Table</TITLE>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H2>EBSC - <BR>Embedded Bitmap Scaling Table</H2>
<P>
The 'EBSC' table provides a mechanism for
describing embedded bitmaps which are created by scaling other
embedded bitmaps. While this is the sort of thing that outline
font technologies were invented to avoid, there are cases (small
sizes of Kanji, for example) where scaling a bitmap produces a
more legible font than scan-converting an outline. For this reason
the 'EBSC' table allows a font to define a bitmap strike as a
scaled version of another strike.
<P>
The 'EBSC' table begins with a header containing the table version
and number of strikes.

<BR>&nbsp;<BR><FONT SIZE=5>ebscHeader</FONT>
<TABLE WIDTH=460 BGCOLOR="#F0F0F0">
<THEAD>
<TR>
<TH BGCOLOR="#C0C0C0">Type</TH><TH BGCOLOR="#C0C0C0">Name</TH><TH BGCOLOR="#C0C0C0">Description</TH></TR>
</THEAD><TBODY>
<TR>
<TD VALIGN=TOP>FIXED</TD><TD VALIGN=TOP>version</TD><TD VALIGN=TOP>initially defined as 0x00020000</TD></TR>
<TR>
<TD VALIGN=TOP>ULONG</TD><TD VALIGN=TOP>numSizes</TD><TD>&nbsp;</TD></TR>
</TABLE>&nbsp;&nbsp;
<P>
The ebscHeader is followed immediately by
the bitmapScaleTable array. The numSizes in the ebscHeader indicates
the number of bitmapScaleTables in the array. Each strike is defined
by one bitmapScaleTable. 

<BR>&nbsp;<BR><FONT SIZE=5>bitmapScaleTable</FONT>
<TABLE WIDTH=460 BGCOLOR="#F0F0F0">
<THEAD>
<TR>
<TH BGCOLOR="#C0C0C0">Type</TH><TH BGCOLOR="#C0C0C0">Name</TH><TH BGCOLOR="#C0C0C0">Description</TH></TR>
</THEAD><TBODY>
<TR>
<TD VALIGN=TOP>sbitLineMetrics</TD><TD VALIGN=TOP>hori</TD><TD VALIGN=TOP>line metrics</TD></TR>
<TR>
<TD VALIGN=TOP>sbitLineMetrics</TD><TD VALIGN=TOP>vert</TD><TD VALIGN=TOP>line metrics</TD></TR>
<TR>
<TD VALIGN=TOP>BYTE</TD><TD VALIGN=TOP>ppemX</TD><TD VALIGN=TOP>target horizontal pixels per Em</TD></TR>
<TR>
<TD VALIGN=TOP>BYTE</TD><TD VALIGN=TOP>ppemY</TD><TD VALIGN=TOP>target vertical pixels per Em</TD></TR>
<TR>
<TD VALIGN=TOP>BYTE</TD><TD VALIGN=TOP>substitutePpemX</TD><TD VALIGN=TOP>use bitmaps of this size</TD></TR>
<TR>
<TD VALIGN=TOP>BYTE</TD><TD VALIGN=TOP>substitutePpemY</TD><TD VALIGN=TOP>use bitmaps of this size</TD></TR>
</TABLE>&nbsp;&nbsp;
<P>
The line metrics have the same meaning as
those in the bitmapSizeTable, and refer to font wide metrics after
scaling. The ppemX and ppemY values describe the size of the font
after scaling. The substitutePpemX and substitutePpemY values
describe the size of a strike that exists as an sbit in the 'EBLC'
and 'EBDT', and that will be scaled up or down to generate the
new strike.
<P>
Notice that scaling in the x direction is independent of scaling
in the y direction, and their scaling values may differ. A square
aspect-ratio strike could be scaled to a non-square aspect ratio.
Glyph metrics are scaled by the same factor as the pixels per
Em (in the appropriate direction), and are rounded to the nearest
integer pixel.

</BODY></HTML>
