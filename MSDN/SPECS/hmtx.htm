<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Horizontal Metrics Table</TITLE>

<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<BODY bgcolor="#FFFFFF" link=#003399 vlink=#996699>


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H2>hmtx - Horizontal Metrics</H2>
<P>
The type longHorMetric is defined as an array where each element
has two parts: the advance width, which is of type uFWord, and
the left side bearing, which is of type FWord. Or, more formally:
<BLOCKQUOTE>
<pre><code>
typedef struct 	_longHorMetric {
	uFWord	advanceWidth;
	FWord	lsb;
}  longHorMetric;<BR>

</code></pre>
</BLOCKQUOTE>

<P>
<TABLE WIDTH=460 BGCOLOR="#F0F0F0">
<THEAD>
<TR><TH BGCOLOR="#C0C0C0">Field</TH><TH BGCOLOR="#C0C0C0">Type</TH><TH BGCOLOR="#C0C0C0">Description</TH></TR>
</THEAD>
<TBODY>
<TR><TD VALIGN=TOP>hMetrics</TD><TD VALIGN=TOP>longHorMetric
<BR><BR>
[numberOfHMetrics]</TD>
<TD VALIGN=TOP>Paired advance width and left side bearing values for each glyph. The value numOfHMetrics comes from the 'hhea' table. If the font is monospaced, only one entry need be in the array, but that entry is required. The last entry applies to all subsequent glyphs.</TD></TR>
<TR><TD VALIGN=TOP>leftSideBearing </TD><TD VALIGN=TOP>FWord[ ]</TD><TD VALIGN=TOP>Here the advanceWidth is assumed to be the same as the advanceWidth for the last entry above. The number of entries in this array is derived from numGlyphs (from 'maxp' table) minus numberOfHMetrics. This generally is used with a run of monospaced glyphs (e.g., Kanji fonts or Courier fonts). Only one run is allowed and it must be at the end. This allows a monospaced font to vary the left side bearing values for each glyph.</TD></TR>
</TABLE>&nbsp;&nbsp;<P>
<P>
For any glyph, xmax and xmin are given in
'glyf' table, lsb and aw are given in 'hmtx' table. rsb is calculated
as follows:
<pre><code>
<CENTER>rsb = aw - (lsb + xmax - xmin)</CENTER>
</code></pre>
<P>
If pp1 and pp2 are phantom points used to
control lsb and rsb, their initial position in x is calculated
as follows:
<pre><code>
<CENTER>pp1 = xmin - lsb             pp2 = pp1 + aw
</code></pre></center>

</BODY></HTML>
