<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Arithmetic and math instructions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Arithmetic and math instructions</H2>These instructions perform arithmetic on stack values. Values are treated as signed (two's complement) 26.6 fixed-point numbers (F26Dot6) and give results in the same form. There is no overflow or underflow protection for these instructions. </P>
To easily remember the order in which stack values are handled during arithmetic operations, imagine writing the stack values from left to right, starting with the bottom value. Then insert the operator between the two furthest right elements. For example:</P>
<P><img src="13940.gif"></P>
<I>subtract a,b</I> would be interpreted as (b-a):</P>
c b - a</P>
<H3><A NAME="sec0"></A>ADD</H3>ADD[ ]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x60</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>n1, n2 (F26Dot6)</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P>(n2 + n1)</P></TD></TR></TBODY></TABLE>
<BR></P>Pops n1 and n2 off the stack and pushes the sum of the two elements onto the stack.</P>
<P><img src="13941.gif"></P>
<H3><A NAME="sec1"></A>SUBtract</H3>SUB[ ]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x61</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>n1, n2 (F26Dot6)</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P>(n2 - n1): difference </P></TD></TR></TBODY></TABLE>
<BR></P>Pops n1 and n2 off the stack and pushes the difference between the two elements onto the stack.</P>
<P><img src="13942.gif"></P>
<H3><A NAME="sec2"></A>DIVide</H3>DIV[ ]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x62</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>n1: divisor (F26Dot6)</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>n2: dividend (F26Dot6)</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P><img src="EQUATE2.gif"></P></TD></TR></TBODY></TABLE>
<BR></P>Pops n1 and n2 off the stack and pushes onto the stack the quotient obtained by dividing n2 by n1. Note that this truncates rather than rounds the value.</P>
<P><img src="13943.gif"></P>
<H3><A NAME="sec3"></A>MULtiply</H3>MUL[ ]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x63</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>n1, n2: multiplier and multiplicand (F26Dot6)</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P>n1 * n2  (F26Dot6)</P></TD></TR></TBODY></TABLE>
<BR></P>Pops n1 and n2 off the stack and pushes onto the stack the product of the two elements.</P>
<P><img src="13944.gif"></P>
<H3><A NAME="sec4"></A>ABSolute value</H3>ABS[ ]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x64</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>n</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P>|n|: absolute value of n (F26Dot6)</P></TD></TR></TBODY></TABLE>
<BR></P>Pops n off the stack and pushes onto the stack the absolute value of n.</P>
<P><img src="13945.gif"></P>
<I>Example:</I></P>
<I>case 1:</I></P>
<P><img src="13946.gif"></P>
<I>case 2:</I></P>
<P><img src="13947.gif"></P>
<H3><A NAME="sec5"></A>NEGate</H3>NEG[ ] </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x65</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>n1</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P>–n1: negation of n1 (F26Dot6)</P></TD></TR></TBODY></TABLE>
<BR></P>This instruction pops n1 off the stack and pushes onto the stack the negated value of n1.</P>
<P><img src="13948.gif"></P>
NEG[ ]</P>
<P><img src="13949.gif"></P>
<H3><A NAME="sec6"></A>FLOOR</H3>FLOOR[ ] </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x66</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>n1: number whose floor is desired (F26Dot6)</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P>n : floor of n1 (F26Dot6)</P></TD></TR></TBODY></TABLE>
<BR></P>Pops n1 and returns n, the greatest integer value less than or equal to n1.</P>
<P><img src="13950.gif"></P>
<I>Example:</I></P>
FLOOR[ ]</P>
<I>case 1:</I></P>
<P><img src="13951.gif"></P>
<I>case 2:</I></P>
<P><img src="13952.gif"></P>
<I>case 3:</I></P>
<P><img src="13953.gif"></P>
<H3><A NAME="sec7"></A>CEILING</H3>CEILING[ ] </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range </P></TD><TD VALIGN="TOP"><P>0x67</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>n1: number whose ceiling is desired (F26Dot6)</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes </P></TD><TD VALIGN="TOP"><P>n: ceiling of n1 (F26Dot6)</P></TD></TR></TBODY></TABLE>
<BR></P>Pops n1 and returns n, the least integer value greater than or equal to n1. For instance, the ceiling of 15 is 15, but the ceiling of 15.3 is 16. The ceiling of  -0.8 is 0. (n is the least integer value greater than or equal to n1)</P>
<P><img src="13954.gif"></P>
<I>Example:</I></P>
CEILING[ ]</P>
<I>case 1:</I></P>
<P><img src="13955.gif"></P>
<I>case 2:</I></P>
<P><img src="13956.gif"></P>
<H3><A NAME="sec8"></A>MAXimum of top two stack elements</H3>MAX[ ]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x8B</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>e1: stack element (ULONG)</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>e2: stack element (ULONG)</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P>maximum of e1 and e2</P></TD></TR></TBODY></TABLE>
<BR></P>Pops two elements, e1 and e2, from the stack and pushes the larger of these two quantities onto the stack.</P>
<P><img src="13957.gif"></P>
<H3><A NAME="sec9"></A>MINimum of top two stack elements</H3>MIN[ ]</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="72pt" VALIGN="TOP"><COL WIDTH="370pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Code Range</P></TD><TD VALIGN="TOP"><P>0x8C</P></TD></TR><TR><TD VALIGN="TOP"><P>Pops</P></TD><TD VALIGN="TOP"><P>e1: stack element (ULONG)</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>e2: stack element (ULONG)</P></TD></TR><TR><TD VALIGN="TOP"><P>Pushes</P></TD><TD VALIGN="TOP"><P>minimum of e1 and e2</P></TD></TR></TBODY></TABLE>
<BR></P>Pops two elements, e1 and e2, from the stack and pushes the smaller of these two quantities onto the stack.</P>
<P><img src="13958.gif"></P></BODY></HTML>
