<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Controlling movement</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Controlling movement</H2>The direction in which points can move is established by the Graphics State variable freedom_vector.</P>
When a point is moved, its movement is constrained to be in a direction parallel to that of the freedom_vector. Assuming the freedom_vector is pointing in the direction of the positive <I>x</I>-axis (points east), movement in the positive <I>x</I>-direction (from west to east) will have a positive magnitude. Movement in the negative <I>x</I>-direction (from east to west) will have a negative magnitude.</P>
<H3><A NAME="sec0"></A>Moving points</H3><P><B>WARNING:  </B><I> When moving points, it is illegal for the freedom_vector and the projection_vector to be orthogonal.</I></P>
There are several instructions that move outline points. These instructions either move points relative to a reference point (the relative instructions) or move points to a specified location in the coordinate system (the absolute instructions).</P>
The following figure illustrates a relative move. The point p is moved so that it is at distance <I>d</I> from  the reference point rp.</P>
<P>Figure 2–5    A relative move</P>
<P><img src="13692.gif"></P>
The figure below illustrates an absolute move. Here the point p is moved a distance d from its current position to a new position. The distance is measured along the projection_vector. Movement is along the freedom_vector.</P>
<P>Figure 2–6    An absolute move</P>
<P><img src="13693.gif"></P>
In specifying a move, some move instructions use the outline distance (direct instructions). Other instructions specify the value of <I>d</I> only indirectly by referring to a value in the CVT or to a value on the stack (indirect instructions).</P>
In attempting to move a point you must first decide on the direction and distance. Beyond this, decide whether you want to move that point an absolute distance or relative to another point. If the move is relative be sure you know which reference point will be used by the instruction. In some cases, you may need to change the value of that reference point to the one you desire. Finally decide whether you will use the original outline distance or will refer to a distance in the CVT or the stack. </P>
By choosing to use the original outline distance you can preserve the original design distance between two points. In contrast, if you choose an indirect method of specifying a distance, that is you use the CVT, you allow that distance to be matched to some important value for that font or glyph.</P>
All of the move instructions with the sole exception of MSIRP are affected by the round_state. The instructions allow you to choose whether they should take into account the setting of the round_state variable. In effect this means that, if rounding is turned on, the distance a point is actually moved will be affected by the type of rounding that is performed.</P>
In the example below, point <I>p</I> is moved distance <I>d</I> to a new location <I>p'</I> and then rounded to the nearest grid boundary.</P>
<P>Figure 2–7     An absolute move with round_state set to round to grid</P>
<P><img src="13694.gif"></P>
</P></BODY></HTML>
