<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Points</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Points</H2>Outline points are specified by their location in the coordinate grid and by whether they are <I>on</I> or <I>off </I>curve points. Managing a point means managing its position in space and its status as an <I>on</I> or <I>off </I>curve point. The interpreter uses zones and reference points to manage the set of points that comprise the current glyph and to refer to specific points within that set.</P>
<H3><A NAME="sec0"></A>Zones</H3>Any point the font scaler interpreter references is in one of two zones, that is one of two sets of points that potentially make up a glyph description. The first of these referenced zones is zone 1 (Z1) and always contains the glyph currently being interpreted. </P>
The second, zone 0 (Z0), is used for temporary storage of point coordinates that do not correspond to any actual points in the glyph in zone 1. Zone 0 is useful when there is a need to manipulate a point that does not exist on the glyph or if you need to remember an intermediate point position. (This is the twilight zone.) </P>
The profile table establishes the maximum number of twilight points. These are numbers 0 through maxTwilightPoints -1 and are all set to the origin. These points can be moved in the same manner as any of the points in zone 1.</P>
Points in zone 0 are moved to useful positions by using the MIAP and MIRP instructions and setting gep0 to point to Z0. Frequently, it is useful to set points in Z0 to key metric positions for the font. </P>
<H3><A NAME="sec1"></A>Zone pointers</H3>Three zone pointers, gep0, gep1 and gep2 are used to reference either of zone  0 or zone 1. Initially, all three zone pointers will point to zone 1.</P>
<P>Figure 2–1   gep0 and gep1 point to zone 1 (the current glyph), gep2 points to zone 0 (the twilight zone)</P>
<P><img src="13687.gif"></P>
<H3><A NAME="sec2"></A>Reference points</H3>Zone pointers provide access to a group of points. Reference points provide access to specific points within the group. The interpreter uses three numbered reference points: rp0, rp1, and rp2. Each can be set to a number corresponding to any of the outline points in the glyph in zone 1 or any of the points in zone 0.</P>
As shown in the following figure, two different reference points can refer to the same outline point.</P>
<P>Figure 2–2   A glyph pointed to by all three reference points</P>
<P><img src="13688.gif"></P>
Collectively the zone pointers and reference points belong to the Graphics State. Their values can be altered using instructions. Many TrueType instructions rely on the graphics zone pointers and the reference points to fully specify their actions. </P>
<H3><A NAME="sec3"></A>Phantom points</H3>The font scaler will always add two "phantom points" to the end of every outline. If the entire set of contours for a glyph requires "n" points (i.e., contour points numbered from 0 to n-1), then the scaler will add points n and n+1. These points will be placed on the character baseline. Point "n" will appear at the character origin, while "n+1" will be placed at the advance width point.</P>
Both points (n and n+1) may be controlled by TrueType instructions, with corresponding effects on the sidebearings and advance width of the instructed glyph. The side bearings and advance width that are computed using these phantom points are called the device-specific widths (since they reflect the results of grid fitting the width along with the glyph to the characteristics of the device). The device-specific widths can be different from or identical to the linearly scaled widths (obtained by simple scaling operations), depending on the instructions applied to the phantom points.</P></BODY></HTML>
