<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BaseCoord Tables</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>BaseCoord Tables</H2>Within the BASE table, a BaseCoord table defines baseline and min/max extent values. Each BaseCoord table defines one X or Y value:</P>
If defined within the HorizAxis table, then the BaseCoord table contains a Y value. </P>
If defined within the VertAxis table, then the BaseCoord table contains an X value. </P>
All values are defined in design units, which typically are scaled and rounded to the nearest integer when scaling the glyphs. Values may be negative.</P>
Three formats available for BaseCoord table data define single X or Y coordinate values in design units. Two of the formats also support fine adjustments to the X or Y values based on a contour point or a Device table. </P>
<H3><A NAME="sec0"></A>BaseCoord Format 1</H3>The first BaseCoord format (BaseCoordFormat1) consists of a format identifier, followed by a single design unit coordinate that specifies the BaseCoord value. This format has the benefits of small size and simplicity, but the BaseCoord value cannot be hinted for fine adjustments at different sizes or device resolutions.</P>
Example 5 at the end of the chapter shows a sample of a BaseCoordFormat1 table.</P>
BaseCoordFormat1 table: Design units only</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>BaseCoordFormat</P></TD><TD VALIGN="TOP"><P>Format identifier</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—format = 1</P></TD></TR><TR><TD VALIGN="TOP"><P>int16</P></TD><TD VALIGN="TOP"><P>Coordinate</P></TD><TD VALIGN="TOP"><P>X or Y value, in design units</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec1"></A>BaseCoord Format 2</H3>The second BaseCoord format (BaseCoordFormat2) specifies the BaseCoord value in design units, but also supplies a glyph index and a contour point for reference. During font hinting, the contour point on the glyph outline may move. The point's final position after hinting provides the final value for rendering a given font size. </P>
<B>Note:</B> Glyph positioning operations defined in the GPOS table do not affect the point's final position.</P>
Example 6 shows a sample of a BaseCoordFormat2 table.</P>
BaseCoordFormat2 table: Design units plus contour point</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>BaseCoordFormat</P></TD><TD VALIGN="TOP"><P>Format identifier</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—format = 2</P></TD></TR><TR><TD VALIGN="TOP"><P>int16</P></TD><TD VALIGN="TOP"><P>Coordinate</P></TD><TD VALIGN="TOP"><P>X or Y value, in design units</P></TD></TR><TR><TD VALIGN="TOP"><P>GlyphID</P></TD><TD VALIGN="TOP"><P>ReferenceGlyph</P></TD><TD VALIGN="TOP"><P>GlyphID of control glyph</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>BaseCoordPoint</P></TD><TD VALIGN="TOP"><P>Index of contour point on the ReferenceGlyph</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec2"></A>BaseCoord Format 3</H3>The third BaseCoord format (BaseCoordFormat3) also specifies the BaseCoord value in design units, but it uses a Device table rather than a contour point to adjust the value. This format offers the advantage of fine-tuning the BaseCoord value for any font size and device resolution. (For more information about Device tables, see the chapter, Common Table Formats.)</P>
Example 7 at the end of this chapter shows a sample of a BaseCoordFormat3 table.</P>
BaseCoordFormat3 table: Design units plus Device table</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>BaseCoordFormat</P></TD><TD VALIGN="TOP"><P>Format identifier</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—format = 3</P></TD></TR><TR><TD VALIGN="TOP"><P>int16</P></TD><TD VALIGN="TOP"><P>Coordinate</P></TD><TD VALIGN="TOP"><P>X or Y value, in design units</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P>ð DeviceTable</P></TD><TD VALIGN="TOP"><P>Offset to Device table for X or Y value</P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
