<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lookup Type 7: Contextual Positioning Subtables</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Lookup Type 7: <BR>Contextual Positioning Subtables</H2>A Contextual Positioning (ContextPos) subtable defines the most powerful type of glyph positioning lookup. It describes glyph positioning in context so a text-processing client can adjust the position of one or more glyphs within a certain pattern of glyphs. Each subtable describes one or more "input" glyph sequences and one or more positioning operations to be performed on that sequence. </P>
ContextPos subtables can have one of three formats, which closely mirror the formats used for contextual glyph substitution. One format applies to specific glyph sequences (Format 1), one defines the context in terms of glyph classes (Format 2), and the third format defines the context in terms of sets of glyphs (Format 3).</P>
All ContextPos subtables specify positioning data in a PosLookupRecord. A description of that record follows the descriptions of the three formats available for ContextPos subtables.</P>
<H3><A NAME="sec0"></A>Context Positioning Subtable: Format 1</H3>Format 1 defines the context for a glyph positioning operation as a particular sequence of glyphs. For example, a context could be &lt;To&gt;, &lt;xyzabc&gt;, &lt;!?*#@&gt;, or any other glyph sequence. </P>
Within the context, Format 1 identifies particular glyph positions (not glyph indices) as the targets for specific adjustments. When a text-processing client locates a context in a string of text, it makes the adjustment by applying the lookup data defined for a targeted position at that location.</P>
For example, suppose that accent mark glyphs above lowercase x-height vowel glyphs must be lowered when an overhanging capital letter glyph precedes the vowel. When the client locates this context in the text, the subtable identifies the position of the accent mark and a lookup index. A lookup specifies a positioning action that lowers the accent mark over the vowel so that it does not collide with the overhanging capital.</P>
ContextPosFormat1 defines the context in two places. A Coverage table specifies the first glyph in the input sequence, and a PosRule table identifies the remaining glyphs. To describe the context used in the previous example, the Coverage table lists the glyph index of the first component of the sequence (the overhanging capital), and a PosRule table defines indices for the lowercase x-height vowel glyph and the accent mark.</P>
<B>Note:</B> The glyph order in the context sequence depends on the writing direction of the text. For text written from right to left, the right-most glyph will be first. Conversely, for text written from left to right, the left-most glyph will be first.</P>
A single ContextPosFormat1 subtable may define more than one context glyph sequence. If different context sequences begin with the same glyph, then the Coverage table should list the glyph only once because all first glyphs in the table must be unique. For example, if three contexts each start with an "s" and two start with a "t," then the Coverage table will list one "s" and one "t." </P>
For each context, a PosRule table lists all the glyphs, in order, that follow the first glyph. The table also contains an array of PosLookupRecords that specify the positioning lookup data for each glyph position (including the first glyph position) in the context.</P>
All the PosRule tables defining contexts that begin with the same first glyph are grouped together and defined in a PosRuleSet table. For example, the PosRule tables that define the three contexts that begin with an "s" are grouped in one PosRuleSet table, and the PosRule tables that define the two contexts that begin with a "t" are grouped in a second PosRuleSet table. Each unique glyph listed in the Coverage table must have a PosRuleSet table that defines all the PosRule tables for a covered glyph.</P>
To locate a context glyph sequence, the text-processing client searches the Coverage table each time it encounters a new text glyph. If the glyph is covered, the client reads the corresponding PosRuleSet table and examines each PosRule table in the set to determine whether the rest of the context defined there matches the subsequent glyphs in the text. If the context and text string match, the client finds the target glyph position, applies the lookup for that position, and completes the positioning action. </P>
A ContextPosFormat1 subtable contains a format identifier (PosFormat), an offset to a Coverage table (Coverage), a count of the number of PosRuleSets that are defined (PosRuleSetCount), and an array of offsets to the PosRuleSet tables (PosRuleSet). As mentioned, one PosRuleSet table must be defined for each glyph listed in the Coverage table. </P>
In the PosRuleSet array, the PosRuleSet tables are ordered in the Coverage Index order. The first PosRuleSet in the array applies to the first GlyphID listed in the Coverage table, the second PosRuleSet in the array applies to the second GlyphID listed in the Coverage table, and so on.</P>
ContextPosFormat1 subtable: Simple context positioning</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="245pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosFormat</P></TD><TD VALIGN="TOP"><P>Format identifier </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—format = 1</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> Coverage</P></TD><TD VALIGN="TOP"><P>Offset to Coverage table </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—from beginning of ContextPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosRuleSetCount</P></TD><TD VALIGN="TOP"><P>Number of PosRuleSet tables</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> PosRuleSet</P></TD><TD VALIGN="TOP"><P>Array of offsets to PosRuleSet tables</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[PosRuleSetCount]</P></TD><TD VALIGN="TOP"><P>—from beginning of ContextPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—ordered by Coverage Index</P></TD></TR></TBODY></TABLE>
<BR></P>A PosRuleSet table consists of an array of offsets to PosRule tables (PosRule), ordered by preference, and a count of the PosRule tables defined in the set (PosRuleCount). </P>
PosRuleSet table: All contexts beginning with the same glyph</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="245pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosRuleCount</P></TD><TD VALIGN="TOP"><P>Number of PosRule tables</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> PosRule</P></TD><TD VALIGN="TOP"><P>Array of offsets to PosRule tables</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[PosRuleCount]</P></TD><TD VALIGN="TOP"><P>—from beginning of PosRuleSet</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—ordered by preference</P></TD></TR></TBODY></TABLE>
<BR></P>A PosRule table consists of a count of the glyphs to be matched in the input context sequence (GlyphCount), including the first glyph in the sequence, and an array of glyph indices that describe the context (Input). The Coverage table specifies the index of the first glyph in the context, and the Input array begins with the second glyph in the context sequence. As a result, the first index position in the array is specified with the number one (1), not zero (0). The Input array lists the indices in the order the corresponding glyphs appear in the text. For text written from right to left, the right-most glyph will be first; conversely, for text written from left to right, the left-most glyph will be first.</P>
A PosRule table also contains a count of the positioning operations to be performed on the input glyph sequence (PosCount) and an array of PosLookupRecords (PosLookupRecord). Each record specifies a position in the input glyph sequence and a LookupList index to the positioning lookup to be applied there. The array should list records in design order, or the order the lookups should be applied to the entire glyph sequence.</P>
Example 10 at the end of this chapter demonstrates glyph kerning in context with a ContextPosFormat1 subtable.</P>
PosRule table: One simple context definition</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="120pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>GlyphCount</P></TD><TD VALIGN="TOP"><P>Number of glyphs in the Input glyph sequence</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosCount</P></TD><TD VALIGN="TOP"><P>Number of PosLookupRecords</P></TD></TR><TR><TD VALIGN="TOP"><P>GlyphID</P></TD><TD VALIGN="TOP"><P>Input</P></TD><TD VALIGN="TOP"><P>Array of input GlyphIDs </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[GlyphCount — 1]</P></TD><TD VALIGN="TOP"><P>—starting with the second glyph</P></TD></TR><TR><TD VALIGN="TOP"><P>struct</P></TD><TD VALIGN="TOP"><P>PosLookupRecord</P></TD><TD VALIGN="TOP"><P>Array of positioning lookups</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[PosCount]</P></TD><TD VALIGN="TOP"><P>—in design order</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec1"></A>Context Positioning Subtable: Format 2</H3>Format 2, more flexible than Format 1, describes class-based context positioning. For this format, a specific integer, called a class value, must be assigned to each glyph in all context glyph sequences. Contexts are then defined as sequences of class values. This subtable may define more than one context.</P>
To clarify the notion of class-based context rules, suppose that certain sequences of three glyphs need special kerning. The glyph sequences consist of an uppercase glyph that overhangs on the right side, a punctuation mark glyph, and then a quote glyph. In this case, the set of uppercase glyphs would constitute one glyph class (Class1), the set of punctuation mark glyphs would constitute a second glyph class (Class 2), and the set of quote mark glyphs would constitute a third glyph class (Class 3). The input context might be specified with a context rule (PosClassRule) that describes "the set of glyph strings that form a sequence of three glyph classes, one glyph from Class 1, followed by one glyph from Class 2, followed by one glyph from Class 3."</P>
Each ContextPosFormat2 subtable contains an offset to a class definition table (ClassDef), which defines the class values of all glyphs in the input contexts that the subtable describes. Generally, a unique ClassDef will be declared in each instance of the ContextPosFormat2 subtable that is included in a font, even though several Format 2 subtables may share ClassDef tables. Classes are exclusive sets; a glyph cannot be in more than one class at a time. The output glyphs that replace the glyphs in the context sequence do not need class values because they are specified elsewhere by GlyphID.</P>
The ContextPosFormat2 subtable also contains a format identifier (PosFormat) and defines an offset to a Coverage table (Coverage). For this format, the Coverage table lists indices for the complete set of glyphs (not glyph classes) that may appear as the first glyph of any class-based context. In other words, the Coverage table contains the list of glyph indices for all the glyphs in all classes that may be first in any of the context class sequences. For example, if the contexts begin with a Class 1 or Class 2 glyph, then the Coverage table will list the indices of all Class 1 and Class 2 glyphs. This Coverage listing is redundant because the ClassDef table also identifies input glyphs, but it accelerates the lookup process.</P>
A ContextPosFormat2 subtable also defines an array of offsets to the PosClassSet tables (PosClassSet), along with a count (including Class0) of the PosClassSet tables (PosClassSetCnt). In the array, the PosClassSet tables are ordered by ascending class value (from 0 to PosClassSetCnt - 1). </P>
A PosClassSet array contains one offset for each glyph class, including Class 0. PosClassSets are not explicitly tagged with a class value; rather, the index value of the PosClassSet in the PosClassSet array defines the class that a PosClassSet represents. </P>
For example, the first PosClassSet listed in the array contains all the PosClassRules that define contexts beginning with Class 0 glyphs, the second PosClassSet contains all PosClassRules that define contexts beginning with Class 1 glyphs, and so on. If no PosClassRules begin with a particular class (that is, if a PosClassSet contains no PosClassRules), then the offset to that particular PosClassSet in the PosClassSet array will be set to NULL.</P>
ContextPosFormat2 subtable: Class-based context glyph positioning</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="250pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosFormat</P></TD><TD VALIGN="TOP"><P>Format identifier </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—format = 2</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> Coverage</P></TD><TD VALIGN="TOP"><P>Offset to Coverage table </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—from beginning of ContextPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> ClassDef</P></TD><TD VALIGN="TOP"><P>Offset to ClassDef table </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—from beginning of ContextPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosClassSetCnt</P></TD><TD VALIGN="TOP"><P>Number of PosClassSet tables</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> PosClassSet</P></TD><TD VALIGN="TOP"><P>Array of offsets to PosClassSet tables </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[PosClassSetCnt]</P></TD><TD VALIGN="TOP"><P>—from beginning of ContextPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—ordered by class</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—may be NULL</P></TD></TR></TBODY></TABLE>
<BR></P>All the PosClassRules that define contexts beginning with the same class are grouped together and defined in a PosClassSet table. Consequently, the PosClassSet table identifies the class of a context's first component. </P>
A PosClassSet enumerates all the PosClassRules that begin with a particular glyph class. For instance, PosClassSet0 represents all the PosClassRules that describe contexts starting with Class 0 glyphs, and PosClassSet1 represents all the PosClassRules that define contexts starting with Class 1 glyphs. </P>
Each PosClassSet table consists of a count of the PosClassRules defined in the PosClassSet (PosClassRuleCnt) and an array of offsets to PosClassRule tables (PosClassRule). The PosClassRule tables are ordered by preference in the PosClassRule array of the PosClassSet.</P>
PosClassSet table: All contexts beginning with the same class</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="250pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosClassRuleCnt</P></TD><TD VALIGN="TOP"><P>Number of PosClassRule tables</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> PosClassRule</P></TD><TD VALIGN="TOP"><P>Array of offsets to PosClassRule tables</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[PosClassRuleCnt]</P></TD><TD VALIGN="TOP"><P>—from beginning of PosClassSet</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—ordered by preference</P></TD></TR></TBODY></TABLE>
<BR></P>For each context, a PosClassRule table contains a count of the glyph classes in a given context (GlyphCount), including the first class in the context sequence. A class array lists the classes, beginning with the second class, that follow the first class in the context. The first class listed indicates the second position in the context sequence. </P>
<B>Note:</B> Text order depends on the writing direction of the text. For text written from right to left, the right-most glyph will be first. Conversely, for text written from left to right, the left-most glyph will be first.</P>
The values specified in the Class array are those defined in the ClassDef table. For example, consider a context consisting of the sequence: Class 2, Class 7, Class 5, Class 0. The Class array will read: Class[0] = 7, Class[1] = 5, and Class[2] = 0. The first class in the sequence, Class 2, is defined by the index into the PosClassSet array of offsets. The total number and sequence of glyph classes listed in the Class array must match the total number and sequence of glyph classes contained in the input context.</P>
A PosClassRule also contains a count of the positioning operations to be performed on the context (PosCount) and an array of PosLookupRecords (PosLookupRecord) that supply the positioning data. For each position in the context that requires a positioning operation, a PosLookupRecord specifies a LookupList index and a position in the input glyph class sequence where the lookup is applied. The PosLookupRecord array lists PosLookupRecords in design order, or the order in which lookups are applied to the entire glyph sequence. </P>
Example 11 at the end of this chapter demonstrates a ContextPosFormat2 subtable that uses glyph classes to modify accent positions in glyph strings.</P>
PosClassRule table: One class context definition</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>GlyphCount</P></TD><TD VALIGN="TOP"><P>Number of glyphs to be matched</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosCount</P></TD><TD VALIGN="TOP"><P>Number of PosLookupRecords</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>Class</P></TD><TD VALIGN="TOP"><P>Array of classes</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[GlyphCount — 1]</P></TD><TD VALIGN="TOP"><P>—beginning with the second class </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—to be matched to the input glyph sequence</P></TD></TR><TR><TD VALIGN="TOP"><P>struct</P></TD><TD VALIGN="TOP"><P>PosLookupRecord</P></TD><TD VALIGN="TOP"><P>Array of positioning lookups</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[PosCount]</P></TD><TD VALIGN="TOP"><P>—in design order</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec2"></A>Context Positioning Subtable: Format 3</H3>Format 3, coverage-based context positioning, defines a context rule as a sequence of coverages. Each position in the sequence may specify a different Coverage table for the set of glyphs that matches the context pattern. With Format 3, the glyph sets defined in the different Coverage tables may intersect, unlike Format 2 which specifies fixed class assignments for the lookup (they cannot be changed at each position in the context sequence) and exclusive classes (a glyph cannot be in more than one class at a time).</P>
For example, consider an input context that contains an uppercase glyph (position 0), followed by any narrow uppercase glyph (position 1), and then another uppercase glyph (position 2). This context requires three Coverage tables, one for each position:</P>
In position 0, the first position, the Coverage table lists the set of all uppercase glyphs. </P>
In position 1, the second position, the Coverage table lists the set of all narrow uppercase glyphs, which is a subset of the glyphs listed in the Coverage table for position 0. </P>
In position 2, the Coverage table lists the set of all uppercase glyphs again.</P>
<B>Note:</B> Both position 0 and position 2 can use the same Coverage table.</P>
Unlike Formats 1 and 2, this format defines only one context rule at a time.<B> </B>It consists of a format identifier (PosFormat), a count of the number of glyphs in the sequence to be matched (GlyphCount), and an array of Coverage offsets that describe the input context sequence (Coverage). </P>
<B>Note</B>: The Coverage tables listed in the Coverage array must be listed in text order according to the writing direction. For text written from right to left, the right-most glyph will be first. Conversely, for text written from left to right, the left-most glyph will be first. </P>
The subtable also contains a count of the positioning operations to be performed on the input Coverage sequence (PosCount) and an array of PosLookupRecords (PosLookupRecord) in design order, or the order in which lookups are applied to the entire glyph sequence.</P>
Example 12 at the end of this chapter changes the positions of math sign glyphs in math equations with a ContextPosFormat3 subtable.</P>
ContextPosFormat3 subtable: Coverage-based context glyph positioning</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosFormat</P></TD><TD VALIGN="TOP"><P>Format identifier </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—format = 3</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>GlyphCount</P></TD><TD VALIGN="TOP"><P>Number of glyphs in the input sequence</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosCount</P></TD><TD VALIGN="TOP"><P>Number of PosLookupRecords</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> Coverage</P></TD><TD VALIGN="TOP"><P>Array of offsets to Coverage tables</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[GlyphCount]</P></TD><TD VALIGN="TOP"><P>—from beginning of ContextPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P>struct</P></TD><TD VALIGN="TOP"><P>PosLookupRecord</P></TD><TD VALIGN="TOP"><P>Array of positioning lookups</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[PosCount]</P></TD><TD VALIGN="TOP"><P>—in design order</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec3"></A>PosLookupRecord</H3>All contextual positioning subtables specify the positioning data in a PosLookupRecord. Each record contains a SequenceIndex, which indicates where the positioning operation will occur in the glyph sequence. In addition, a LookupListIndex identifies the lookup to be applied at the glyph position specified by the SequenceIndex.</P>
The order in which lookups are applied to the entire glyph sequence, called the "design order," can be significant, so PosLookupRecord data should be defined accordingly. </P>
The contextual substitution subtables defined in Examples 10, 11, and 12 show PosLookupRecords.</P>
PosLookupRecord</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>SequenceIndex</P></TD><TD VALIGN="TOP"><P>Index to input glyph sequence</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—first glyph = 0</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>LookupListIndex</P></TD><TD VALIGN="TOP"><P>Lookup to apply to that position</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—zero-based</P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
