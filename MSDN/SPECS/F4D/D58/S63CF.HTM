<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lookup Type 5: MarkToLigature Attachment Positioning Subtable</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Lookup Type 5: <BR>MarkToLigature Attachment Positioning Subtable</H2>The MarkToLigature attachment (MarkLigPos) subtable is used to position combining mark glyphs with respect to ligature base glyphs. With MarkToBase attachment, described previously, a single base glyph defines an attachment point for each class of marks. In contrast, MarkToLigature attachment describes ligature glyphs composed of several components that can each define an attachment point for each class of marks. </P>
As a result, a ligature glyph may have multiple base attachment points for one class of marks. The specific attachment point for a mark is defined by the ligature component that the subtable associates with the mark.</P>
The MarkLigPos subtable can be used to define multiple mark-to-ligature attachments. In the subtable, every mark glyph has an anchor point and is associated with a class of marks. Every ligature glyph specifies a two-dimensional array of data: each component in a ligature defines an array of anchor points, one for each class of marks. </P>
For example, assume two mark classes: all marks positioned above base glyphs (Class 0), and all marks positioned below base glyphs (Class 1). In this case, each component of a base ligature glyph may define two anchor points, one for attaching the mark glyphs listed in Class 0, and one for attaching the mark glyphs listed in Class 1. Alternatively, if the language system does not allow marks on the second component, the first ligature component may define two anchor points, one for each class of marks, and the second ligature component may define no anchor points.</P>
To position a combining mark using a MarkToLigature attachment subtable, the text-processing client must work backward from the mark to the preceding ligature glyph. To correctly access the subtables, the client must keep track of the component associated with the mark. Aligning the attachment points combines the mark and ligature.</P>
The MarkToLigature attachment subtable has one format: MarkLigPosFormat1. The subtable begins with a format identifier (PosFormat) and offsets to two Coverage tables that list all the mark glyphs (MarkCoverage) and Ligature glyphs (LigatureCoverage) referenced in the subtable.</P>
For each glyph in the MarkCoverage table, a MarkRecord specifies its class and an offset to the Anchor table that describes the mark's attachment point. A mark class is identified by a specific integer, called a class value. ClassCount records the total number of distinct mark classes defined in all MarkRecords. </P>
The MarkBasePosFormat1 subtable contains an offset, measured from the beginning of the subtable, to a MarkArray table, which contains all MarkRecords stored in an array (MarkRecord) by MarkCoverage Index. (For details about MarkArrays and MarkRecords, see the end of this chapter.)</P>
The MarkLigPosFormat1 subtable also contains an offset to a LigatureArray table (LigatureArray).</P>
MarkLigPosFormat1 subtable: MarkToLigature attachment</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="245pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>PosFormat</P></TD><TD VALIGN="TOP"><P>Format identifier </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—format = 1</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> MarkCoverage</P></TD><TD VALIGN="TOP"><P>Offset to Mark Coverage table </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—from beginning of MarkLigPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> LigatureCoverage</P></TD><TD VALIGN="TOP"><P>Offset to Ligature Coverage table </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—from beginning of MarkLigPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>ClassCount</P></TD><TD VALIGN="TOP"><P>Number of defined mark classes</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> MarkArray</P></TD><TD VALIGN="TOP"><P>Offset to MarkArray table </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—from beginning of MarkLigPos subtable</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> LigatureArray</P></TD><TD VALIGN="TOP"><P>Offset to LigatureArray table </P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—from beginning of MarkLigPos subtable</P></TD></TR></TBODY></TABLE>
<BR></P>The LigatureArray table contains a count (LigatureCount) and an array of offsets (LigatureAttach) to LigatureAttach tables. The LigatureAttach array lists the offsets to LigatureAttach tables, one for each ligature glyph listed in the LigatureCoverage table, in the same order as the LigatureCoverage Index.</P>
LigatureArray table</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="245pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>LigatureCount</P></TD><TD VALIGN="TOP"><P>Number of LigatureAttach table offsets</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> LigatureAttach</P></TD><TD VALIGN="TOP"><P>Array of offsets to LigatureAttach tables</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[LigatureCount]</P></TD><TD VALIGN="TOP"><P>—from beginning of LigatureArray table</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—ordered by LigatureCoverage Index</P></TD></TR></TBODY></TABLE>
<BR></P>Each LigatureAttach table consists of an array (ComponentRecord) and count (ComponentCount) of the component glyphs in a ligature. The array stores the ComponentRecords in the same order as the components in the ligature. The order of the records also corresponds to the writing direction of the text. For text written left to right, the first component is on the left; for text written right to left, the first component is on the right. </P>
LigatureAttach table</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="245pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>uint16</P></TD><TD VALIGN="TOP"><P>ComponentCount</P></TD><TD VALIGN="TOP"><P>Number of ComponentRecords in this ligature</P></TD></TR><TR><TD VALIGN="TOP"><P>struct</P></TD><TD VALIGN="TOP"><P>ComponentRecord</P></TD><TD VALIGN="TOP"><P>Array of Component records</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[ComponentCount]</P></TD><TD VALIGN="TOP"><P>—ordered by LookupFlag direction bit</P></TD></TR></TBODY></TABLE>
<BR></P>A ComponentRecord, one for each component in the ligature, contains an array of offsets to the Anchor tables that define all the attachment points used to attach marks to the component (LigatureAnchor). For each mark class (including Class 0) identified in the MarkArray records, an Anchor table specifies the point used to attach all the marks in a particular class to the ligature base glyph, relative to the component.</P>
In a ComponentRecord, the zero-based LigatureAnchor array lists offsets to Anchor tables by mark class. If a component does not define an attachment point for a particular class of marks, then the offset to the corresponding Anchor table will be NULL.</P>
Example 8 at the end of this chapter shows a MarkLisPosFormat1 subtable used to attach mark accents to a ligature glyph in the Arabic script.</P>
ComponentRecord</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="245pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Name</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>Offset</P></TD><TD VALIGN="TOP"><P><SPAN CLASS="Symbol">Þ</SPAN> LigatureAnchor</P></TD><TD VALIGN="TOP"><P>Array of offsets (one per class) to Anchor tables</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>[ClassCount]</P></TD><TD VALIGN="TOP"><P>—from beginning of LigatureAttach table</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—ordered by class</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—NULL if a component does not have an attachment for a class</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>—zero-based array</P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
