<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Table Organization</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Table Organization</H2>The GPOS table begins with a header that defines offsets to a ScriptList, a FeatureList, and a LookupList (see Figure 4f):</P>
The ScriptList identifies all the scripts and language systems in the font that use glyph positioning. </P>
The FeatureList defines all the glyph positioning features required to render these scripts and language systems. </P>
The LookupList contains all the lookup data needed to implement each glyph positioning feature. </P>
For a detailed discussion of ScriptLists, FeatureLists, and LookupLists, see the chapter, Common Table Formats. The following discussion summarizes how the GPOS table works.</P>
<P><img src="13301.gif"></P>
Figure 4f. High-level organization of GPOS table</P>
The GPOS table is organized so text processing clients can easily locate the features and lookups that apply to a particular script or language system. To access GPOS information, clients should use the following procedure:</P>
Locate the current script in the GPOS ScriptList table. </P>
If the language system is known, search the script for the correct LangSys table; otherwise, use the script's default language system (DefaultLangSys table). </P>
The LangSys table provides index numbers into the GPOS FeatureList table to access a required feature and a number of additional features. </P>
Inspect the FeatureTag of each feature, and select the features to apply to an input glyph string.</P>
Each feature provides an array of index numbers into the GPOS LookupList table. Lookup data is defined in one or more subtables that contain information about specific glyphs and the kinds of operations to be performed on them. </P>
Assemble all lookups from the set of chosen features, and apply the lookups in the order given in the LookupList table. </P>
A lookup uses subtables to define the specific conditions, type, and results of a positioning action used to implement a feature. All subtables in a lookup must be of the same LookupType, as listed in the LookupType Enumeration table:</P>
LookupType Enumeration table for glyph positioning</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="244pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Value</P></TD><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>1</P></TD><TD VALIGN="TOP"><P>Single adjustment</P></TD><TD VALIGN="TOP"><P>Adjust position of a single glyph</P></TD></TR><TR><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>Pair adjustment</P></TD><TD VALIGN="TOP"><P>Adjust position of a pair of glyphs</P></TD></TR><TR><TD VALIGN="TOP"><P>3</P></TD><TD VALIGN="TOP"><P>Cursive attachment</P></TD><TD VALIGN="TOP"><P>Attach cursive glyphs</P></TD></TR><TR><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>MarkToBase attachment</P></TD><TD VALIGN="TOP"><P>Attach a combining mark to a base glyph</P></TD></TR><TR><TD VALIGN="TOP"><P>5</P></TD><TD VALIGN="TOP"><P>MarkToLigature attachment</P></TD><TD VALIGN="TOP"><P>Attach a combining mark to a ligature</P></TD></TR><TR><TD VALIGN="TOP"><P>6</P></TD><TD VALIGN="TOP"><P>MarkToMark attachment</P></TD><TD VALIGN="TOP"><P>Attach a combining mark to another mark</P></TD></TR><TR><TD VALIGN="TOP"><P>7</P></TD><TD VALIGN="TOP"><P>Context positioning</P></TD><TD VALIGN="TOP"><P>Position one or more glyphs in context</P></TD></TR><TR><TD VALIGN="TOP"><P>8+</P></TD><TD VALIGN="TOP"><P>Reserved</P></TD><TD VALIGN="TOP"><P>For future use</P></TD></TR></TBODY></TABLE>
<BR></P>Each LookupType is defined by one or more subtables, whose format depends on the type of positioning operation and the resulting storage efficiency. When glyph information is best presented in more than one format, a single lookup may define more than one subtable, as long as all the subtables are of the same LookupType. For example, within a given lookup, a glyph index array format may best represent one set of target glyphs, whereas a glyph index range format may be better for another set. </P>
A series of positioning operations on the same glyph or string requires multiple lookups, one for each separate action. Each lookup is given a different array number in the LookupList table and is applied in the LookupList order.</P>
During text processing, a client applies a lookup to each glyph in the input string, starting with the first glyph, before moving to the next lookup. To apply a lookup, the client searches the subtables in the order they are defined in the lookup. If the first subtable does not contain data relevant to the glyph, the client searches the next subtable, and so on. If the client finds glyph data, it adjusts the glyph position.</P>
A lookup is finished for a glyph when the client repositions a glyph or when the client finds no relevant data in any of the subtables defined in the lookup. The client then advances to the next glyph in the glyph string and begins the lookup process again.</P>
This rest of this chapter describes the GPOS header and the subtables defined for each LookupType. Several GPOS subtables share other tables: ValueRecords, Anchor tables, and MarkArrays. For easy reference, the shared tables are described at the end of this chapter.</P></BODY></HTML>
