<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Out of Band Protocol</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Out of Band Protocol</H2>LSAPI accommodates multiple protocols by tagging the challenge with a protocol ID. Likewise, the response comes back tagged with the protocol that answered the challenge. The basic challenge/response mechanism is known by the tag LS_BASIC_PROTOCOL.</P>
There is one other mechanism that LSAPI specifies: LS_OUT_OF_BAND_PROTOCOL. The purpose is to let the license server authenticate itself to the application by means external to the LSAPI, when such means are available. For example, when LSRequest() is bound as a remote procedure call authenticated through Kerberos, there is likely to be no need for additional authentication through an LSAPI-specified mechanism. In other words, the challenge and response are null, with the server returning whether or not the license is granted through the status flag.</P>
When <I>Protocol</I> of the LS_CHALLENGE data structure is LS_OUT_OF_BAND_PROTOCOL, there is no challenge and no response.</P></BODY></HTML>
