<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Constants and Data Structures</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Constants and Data Structures</H2>This section outlines the constants and data structures used in the License Service API.</P>
<H3><A NAME="sec0"></A>Type Definitions</H3>
<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="108pt" VALIGN="TOP"><COL WIDTH="93pt" VALIGN="TOP"><COL WIDTH="216pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>C Definition</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_STATUS_CODE</P></TD><TD VALIGN="TOP"><P>UINT32</P></TD><TD VALIGN="TOP"><P>Result of a License Service API function call - a 32-bit unsigned integer value.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_CHALLENGE</P></TD><TD VALIGN="TOP"><P>structure</P></TD><TD VALIGN="TOP"><P>Data used in challenge (see <I>Challenge Mechanism</I> on page 24).</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_HANDLE</P></TD><TD VALIGN="TOP"><P>UINT32</P></TD><TD VALIGN="TOP"><P>Defines  the handle used for identifying the context of licensing API calls.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_STR</P></TD><TD VALIGN="TOP"><P>char</P></TD><TD VALIGN="TOP"><P>Defines a NULL terminated string of characters in ASCII format.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_ULONG</P></TD><TD VALIGN="TOP"><P>UINT32</P></TD><TD VALIGN="TOP"><P>Defines a 32-bit unsigned integer type.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_LONG</P></TD><TD VALIGN="TOP"><P>INT32</P></TD><TD VALIGN="TOP"><P>Defines a 32-bit signed integer type.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_VOID</P></TD><TD VALIGN="TOP"><P>void</P></TD><TD VALIGN="TOP"><P>Unspecified type usually referring to a data buffer.</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec1"></A>Supplemental Information</H3>
<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="131pt" VALIGN="TOP"><COL WIDTH="336pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Definition</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD VALIGN="TOP"><P>INT32</P></TD><TD VALIGN="TOP"><P>Defines a 32-bit  Integer for the particular platform being developed on.</P></TD></TR><TR><TD VALIGN="TOP"><P>UINT32</P></TD><TD VALIGN="TOP"><P>Defines an unsigned 32-bit Integer for the particular platform being developed on</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec2"></A>Constants</H3>
<TABLE COLS="4" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="131pt" VALIGN="TOP"><COL WIDTH="100pt" VALIGN="TOP"><COL WIDTH="75pt" VALIGN="TOP"><COL WIDTH="178pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Constant</P></TD><TD VALIGN="TOP"><P>Type</P></TD><TD VALIGN="TOP"><P>Value</P></TD><TD VALIGN="TOP"><P>Meaning</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_DEFAULT_UNITS</P></TD><TD VALIGN="TOP"><P>LS_LONG</P></TD><TD VALIGN="TOP"><P>0xFFFFFFFF</P></TD><TD VALIGN="TOP"><P>Indicates that the number of units should be determined by the license system and the associated license policy.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_ANY</P></TD><TD VALIGN="TOP"><P>LS_STR</P></TD><TD VALIGN="TOP"><P>null string</P></TD><TD VALIGN="TOP"><P>Used in LSRequest(). Indicates that all license providers should be searched for a license match.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_USE_LAST</P></TD><TD VALIGN="TOP"><P>LS_ULONG</P></TD><TD VALIGN="TOP"><P>0x0000FFFF</P></TD><TD VALIGN="TOP"><P>Used in LSGetMessage() to indicates that the last status value returned for the current process should be used as input.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_BASIC_PROTOCOL</P></TD><TD VALIGN="TOP"><P>LS_ULONG</P></TD><TD VALIGN="TOP"><P>0x000000001</P></TD><TD VALIGN="TOP"><P>Indicates the Basic Challenge protocol.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_OUT_OF_BAND<BR>_PROTOCOL</P></TD><TD VALIGN="TOP"><P>LS_ULONG</P></TD><TD VALIGN="TOP"><P>0xFFFFFFFF</P></TD><TD VALIGN="TOP"><P>Indicates an out of band challenge/response protocol.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_NULL</P></TD><TD VALIGN="TOP"><P>LS_VOID*</P></TD><TD VALIGN="TOP"><P>NULL</P></TD><TD VALIGN="TOP"><P>Indicates a NULL value for all optional pointer arguments.  LS_NULL must be used to indicate the absence of a value.</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec3"></A>Status Codes</H3>The status codes returned through the API are 32-bit unsigned values. The value is subdivided into three parts as follows:</P>
[ 31 . 30 | 29 ... 16 | 15 ... 0 ]</P>
    \ /         |           |</P>
     |          |           +-- Value (16-bit)</P>
     |          +--- Always zero</P>
     +--- Severity (00=Success, 01=Info, 10=Warning, 11=Error)</P>
</P>
The low order 16-bits indicates a value with respect to the severity (the uppermost two bits). The middle fourteen bits are always returned as 0x0000 and have no further meaning.</P>

<TABLE COLS="3" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="196pt" VALIGN="TOP"><COL WIDTH="75pt" VALIGN="TOP"><COL WIDTH="216pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Status Code Constant</P></TD><TD VALIGN="TOP"><P>Status Value</P></TD><TD VALIGN="TOP"><P>Meaning</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_SUCCESS</P></TD><TD VALIGN="TOP"><P>0x0</P></TD><TD VALIGN="TOP"><P>The function completed successfully.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_BAD_HANDLE</P></TD><TD VALIGN="TOP"><P>0xC0001001</P></TD><TD VALIGN="TOP"><P>Handle used on call did not describe a valid licensing system context.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_INSUFFICIENT_UNITS</P></TD><TD VALIGN="TOP"><P>0xC0001002</P></TD><TD VALIGN="TOP"><P>The licensing system could not locate enough available licensing resources to satisfy the request.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_SYSTEM_UNAVAILABLE</P></TD><TD VALIGN="TOP"><P>0xC0001003</P></TD><TD VALIGN="TOP"><P>No licensing system could be found with which to perform the function invoked.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_LICENSE_TERMINATED</P></TD><TD VALIGN="TOP"><P>0xC0001004</P></TD><TD VALIGN="TOP"><P>The licensing system has determined that the resources used to satisfy a previous request are no longer granted to the calling software.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_AUTHORIZATION_UNAVAILABLE</P></TD><TD VALIGN="TOP"><P>0xC0001005</P></TD><TD VALIGN="TOP"><P>The licensing system has no licensing resources that could satisfy the request.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_LICENSE_UNAVAILABLE</P></TD><TD VALIGN="TOP"><P>0xC0001006</P></TD><TD VALIGN="TOP"><P>The licensing system has licensing resources that could satisfy the request, but they are not available at the time of the request.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_RESOURCES_UNAVAILABLE</P></TD><TD VALIGN="TOP"><P>0xC0001007</P></TD><TD VALIGN="TOP"><P>Insufficient resources (such as memory) are available to complete the request.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_NETWORK_UNAVAILABLE</P></TD><TD VALIGN="TOP"><P>0xC0001008</P></TD><TD VALIGN="TOP"><P>The network is unavailable.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_TEXT_UNAVAILABLE</P></TD><TD VALIGN="TOP"><P>0x80001009</P></TD><TD VALIGN="TOP"><P>A warning occurred while looking up an error message string for the LSGetMessage() function.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_UNKNOWN_STATUS</P></TD><TD VALIGN="TOP"><P>0xC000100A</P></TD><TD VALIGN="TOP"><P>An unrecognized status code was passed into the LSGetMessage() function.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_BAD_INDEX</P></TD><TD VALIGN="TOP"><P>0xC000100B</P></TD><TD VALIGN="TOP"><P>An invalid index was specified in LSEnumProviders() or LSQuery().</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_LICENSE_EXPIRED</P></TD><TD VALIGN="TOP"><P>0x8000100C</P></TD><TD VALIGN="TOP"><P>The license associated with the current context has expired. This may be due to a time-restriction on the license.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_BUFFER_TOO_SMALL</P></TD><TD VALIGN="TOP"><P>0xC000100D</P></TD><TD VALIGN="TOP"><P>The buffer passed in LSGetMessage() is too small to accomodate the text string to be returned. Or, the challenge data structure is too small to accomodate the challenge response.</P></TD></TR><TR><TD VALIGN="TOP"><P>LS_BAD_ARG</P></TD><TD VALIGN="TOP"><P>0xC000100E</P></TD><TD VALIGN="TOP"><P>One or more of the arguments is incorrect.</P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
