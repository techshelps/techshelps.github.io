<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Environments</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Environments</H2>Although the License Service API is targeted for a number of operating system platforms, each platform has its own set of requirements which the software developer must deal with. For example, differences can be found in the language calling convention, reentrancy, the linking method, etc. This section summarizes how LSAPI is utilized by applications in each environment.</P>
If all Service Providers cannot satisfy a LSRequest(), then the handle associated with the last successful Service Provider response is returned.</P>
<H3><A NAME="sec0"></A>Dynamic Linking Environment</H3>In an operating environment which supports dynamic (run-time) linking, the LSAPI architecture allows multiple, concurrent license system service providers. Furthermore, the application program is not bound to any particular license system.</P>
It is important that the Provider Management Layer provides the arguments unmodified to the service provider.   The handle that the Provider Management Layer provides is an exception to this.  The methodology in which the Provider Management Layer enables this is implementation specific.</P>
In non-preemptive environments, care should be taken not to block the environment.</P>
<P><img src="15385.gif"></P>
The function of the license system management layer is to coordinate the interaction between licensing-enabled applications and the individual license system service providers. This layer provides no licensing services itself. Rather, it is responsible for mapping each function call to the appropriate service provider.</P>
Not every operating system supports dynamic linking. In some environments (such as DOS), support for multiple concurrent service providers might be through some other means.</P>
&lt;default error message catalog to be inserted&gt;</P>
<H3><A NAME="sec1"></A>Static Linking Environment</H3>At minimum, LSAPI provides source level compatibility across license systems. In environments which do not support dynamic linking (either natively or emulated), then the application is statically linked with a vendor-specific license module.</P>
<P><img src="15386.gif"></P>
Note that this is only one possible example of static linking and may be done differently on different platforms.</P>
<H3><A NAME="sec2"></A>Windows&reg; Applications</H3>An MS-Windows application calls the License Service API functions using the Pascal Far calling convention (similar to other Windows DLLs). The Dynamic Link Library (DLL) named LSAPIxx.DLL* is used. The LSAPIxx.LIB* file (created from LSAPIxx.DEF*) is used to describe the DLL entry points. The LSAPIxx.DLL* contains the service provider management layer, which manages the interaction between applications and license system services. Applications need only follow the DLL binding and calling conventions.</P>
<B>Note</B>  Where xx = 16 or 32; depending on platform</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Source code may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Executable may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Dynamic Linking native to operating system?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Reentrant Operations</P></TD><TD VALIGN="TOP"><P>As permitted by service provider (reentrant operation may block)</P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec3"></A>DOS Applications</H3>DOS application calls the License Service API functions using the C language calling convention. The resulting application is then compiled and statically linked with the LSAPI.LIB library. This library implements a service provider management layer to access the license system providers (which are implemented as TSRs under MS-DOS). Thus, DOS applications need not be statically linked to a specific license system at compile time.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Source code may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Executable may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Dynamic Linking native to operating system?</P></TD><TD VALIGN="TOP"><P>NO†</P></TD></TR><TR><TD VALIGN="TOP"><P>Reentrant Operations</P></TD><TD VALIGN="TOP"><P>NO</P></TD></TR></TBODY></TABLE>
<BR></P>† Run-time license system independence is provided by a library which is statically linked to the application.</P>
<H3><A NAME="sec4"></A>Apple Macintosh&reg; Applications</H3>Macintosh Applications call the License Service API functions using the Pascal calling convention.  Applications link to the LSAPI.o library, which implements a portion of the service provider management layer to access the license system providers.  Users must also install a system extension in their System Folder.  The library and system extension can be obtained from Sassafras Software.  Macintosh applications do not need to be statically linked to a specific license system at compile time; providers are loaded dynamically as they become available.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Source code may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Executable may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Dynamic Linking native to operating system?</P></TD><TD VALIGN="TOP"><P>NO</P></TD></TR><TR><TD VALIGN="TOP"><P>Reentrant Operations</P></TD><TD VALIGN="TOP"><P>as permitted by the service provider</P></TD></TR></TBODY></TABLE>
<BR></P>† Run-time license system independence may be provided by a library which is statically linked to the application.</P>
<H3><A NAME="sec5"></A>OS/2&reg; Applications</H3>This information was not available at time of publication. Contact International Business Machines's Systems Management Group in Austin, TX.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Source code may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Executable may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Dynamic Linking native to operating system?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Reentrant Operations</P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec6"></A>OpenVMS&trade; and ULTRIX&trade; Applications</H3>This information was not available at time of publication. Contact Digital Equipment Corporation via FAX at (508) 486-6100.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Source code may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Executable may be license system independent?</P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Dynamic Linking native to operating system?</P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Reentrant Operations</P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec7"></A>HP/UX&trade; and Domain/OS&trade; Applications</H3>This information was not available at time of publication. Contact Hewlett-Packard at (508) 256-6600 for further information.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Source code may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Executable may be license system independent?</P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Dynamic Linking native to operating system?</P></TD><TD VALIGN="TOP"><P></P></TD></TR></TBODY></TABLE>
<BR></P><H3><A NAME="sec8"></A>Unix&reg; Applications</H3>There are many dialects of Unix available. Contact the particular Unix vendor for further information. Additional information may be available from the license system vendors.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="270pt" VALIGN="TOP"><COL WIDTH="81pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Source code may be license system independent?</P></TD><TD VALIGN="TOP"><P>YES</P></TD></TR><TR><TD VALIGN="TOP"><P>Executable may be license system independent?</P></TD><TD VALIGN="TOP"><P>†</P></TD></TR><TR><TD VALIGN="TOP"><P>Dynamic Linking native to operating system?</P></TD><TD VALIGN="TOP"><P>†</P></TD></TR></TBODY></TABLE>
<BR></P>† Some Unix implementations may provide for run-time linking..</P></BODY></HTML>
