<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Protocols</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H2>Protocols</H2>LSAPI is designed to support multiple challenge/response protocols for license authentication. By definition of being a standard, LSAPI defines a basic challenge protocol which is supported by all LSAPI-compliant license systems. The underlying algorithm is simple and satisfies basic LSAPI security goals. Furthermore, the algorithm does not require any patented cryptographic techniques. Appendix <B>???</B> outlines the protocol</P>
<H3><A NAME="sec0"></A>Challenge Data Structure</H3>The main data structure in the challenge/response mechanism is LS_CHALLENGE. This data structure is supported by all challenge/response protocols. This structure is used for both the challenge and challenge response of LSRequest(), and LSUpdate().</P>
typedef struct {                       </P>
    LS_ULONG    Protocol;    // Specifies the protocol</P>
    LS_ULONG    Size;    // size of ChallengeData structure</P>
    LS_CHALLDATA    ChallengeData;    // challenge &amp; response</P>
} LS_CHALLENGE;</P>
</P>
</P>
Since the LS_CHALLDATA structure can vary depending on the <I>Protocol</I> selected, the structure must be a single contiguous entity in memory, not to exceed <I>Size</I> bytes. Furthermore, he structure may not contain any indirections (pointers) within it.</P>
The LS_CHALLDATA is used to pass in the challenge to the license system. In turn, the license system will return the challenge response in the structure. Therefore, the Size specified on entry must be large enough to accomodate the challenge response. If the structure is not large enough to accommodate the response, the error LS_BUFFER_TOO_SMALL is returned.</P>
Since the LS_CHALLDATA structure can vary, the LSAPI will simply pass the <I>Protocol</I>, the <I>Size</I>, followed by <I>Size</I> bytes of data to the license system. The license system, in turn, can cast the byte sequence into the appropriate data structure based upon the <I>Protocol</I> specified.</P>
<H3><A NAME="sec1"></A>Protocol IDs</H3>Every challenge/response protocol has an assigned 32-bit protocol ID. Protocols in the range of zero through 0x0000FFFF are reserved for LSAPI. 0xFFFFFFFF is also a reserved protocol ID. Contact your license system vendor for more information.</P></BODY></HTML>
