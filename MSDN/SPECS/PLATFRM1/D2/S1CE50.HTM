<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Synchronization</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H1>Synchronization</H1>  </P>
Windows NT requires the ability to atomically update memory cells.</P>
One global hardware lock is "adequate" for this, since any number of software locks can be implemented with a single hardware lock.</P>
However, it is desirable to allow multiple processors to make parallel locked references to different cells.  This can be done by some fully associative mechanism (each lock is assigned to a processor as needed), in which case only 1 lock per processor is needed.  If done by hashing, then the hash function should not include the low two bits of the address, since locks will always be aligned on a 4 byte boundary.</P>
Any cell which is ever set atomically is always set atomically, but it may be read with an ordinary read.</P>
No processor will ever assert more than one lock at a time.</P>
Windows NT requires that user mode code be able to perform atomic operations.</P>
Atomic operations are performed frequently, so locked memory references should not be hindered by long delays.</P>
For systems that use general purpose processors on I/O devices, it would make sense to have the central and the I/O processors communicate via linked lists of requests in memory.  In order for this to work, the I/O processor must participate in the locking protocol.</P>
 </P></BODY></HTML>
