<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enhancing support through the use of overlay buffers</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>Enhancing support through the use of overlay buffers</H2>  </P>
DCI clients may use overlay surfaces to compose complicated onscreen images by displaying multiple surfaces in a single window.  Overlay surfaces can be created for combination with the Primary surface or with offscreen surfaces.  For example, a DCI client might draw RGB8 data in a window through the overlay surface, then fill an offscreen surface with digital video data in YUV9 so that the RGB8 data is drawn on top of the YUV9 data.</P>
In this case, the DCI client first creates an overlay surface with <B>DCICreateOverlaySurface</B>, and writes the RGB8 data to the overlay surface.  The pixels that are to show video data are filled with the device's chroma-key color, which is returned by <B>DCICreateOverlaySurface</B>.  Next, the DCI client calls <B>DCICreateOffScreenSurface</B> and draws the video image to the offscreen surface.  Finally, the DCI client calls the offscreen surface's <B>Draw</B> callback to combine the surfaces into one onscreen image.</P>
 </P></BODY></HTML>
