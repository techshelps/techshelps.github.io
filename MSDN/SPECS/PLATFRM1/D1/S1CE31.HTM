<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Polling Method Functions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>Polling Method Functions</H3>  </P>
<B>BOOL WinWatchDidStatusChange(HWINWATCH </B><I>hWW</I><B>);</B></P>
<A NAME="PT2"></A>RETURNS</P>
Returns TRUE whenever the clipping information for a window has changed.  This function then continues to return TRUE until WinWatchGetClipList has been called.</P>
An application can call GetWindowRegionData to find out the actual visible area of the window, or call WinWatchGetClipList.  See also: WinWatchGetClipList</P>
<B>extern UINT WINAPI WinWatchGetClipList(HWINWATCH </B><I>hWW</I><B>, LPRECT </B><I>prc</I><B>, UINT </B><I>size</I><B>, LPRGNDATA </B><I>prd</I><B>);</B></P>
<A NAME="PT3"></A>RETURNS</P>
Returns the current visible region of the window being watched, intersected with the passed rectangle (rectangle is in client coordinates).  A call to this function also clears the dirty flag.</P>
Unlike GetWindowRegionData this function keeps a version of the cliplist around and only recomputes it if the visible area has changed.</P>
The rectangles that returns are in screen coordinates.</P>
<A NAME="PT4"></A>COMMENTS</P>
The DCI Client must ensure that the bounding rectangle specified in the <I>prc </I>parameter intersects the destination rectangle passed down to the DCI Provider.</P>
 </P></BODY></HTML>
