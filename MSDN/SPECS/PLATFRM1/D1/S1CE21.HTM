<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>Introduction</H2>The DCI Manager is an abstraction layer that provides a simplified interface from DCI Clients to DCI Providers.  The DCI Manager locates and loads providers, and provides entry points corresponding to each of the DCI driver messages.  </P>
The DCI Manager checks and loads DCI Providers in the following sequence: </P>
<SPAN CLASS="list"><OL><LI>The provider specified by the "DCI=" entry in the [Drivers] section of the SYSTEM.INI file</LI><LI>The display driver for DCI Provider support, and if it fails</LI><LI>Loads DCISVGA.DRV as the default DCI Provider.  </LI></OL></SPAN>This loading sequence can be controlled by a "DCIDVA=" flag in the [DrawDib] section of the WIN.INI file, as follows:</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="172pt" VALIGN="TOP"><COL WIDTH="280pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>DCIDVA FLAG</B></P></TD><TD VALIGN="TOP">DCIMAN RESPONSE</P></TD></TR></TBODY></TABLE>
<BR></P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="172pt" VALIGN="TOP"><COL WIDTH="280pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">DCIDVA=0</P></TD><TD VALIGN="TOP">Does not open any DCI Provider</P></TD></TR><TR><TD VALIGN="TOP">DCIDVA=1</P></TD><TD VALIGN="TOP">Loads provider especified by the  DCI= line only</P></TD></TR><TR><TD VALIGN="TOP">DCIDVA=2</P></TD><TD VALIGN="TOP">Looks for DCI support in the display driver only</P></TD></TR><TR><TD VALIGN="TOP">DCIDVA=4</P></TD><TD VALIGN="TOP">Loads DCISVGA only</P></TD></TR></TBODY></TABLE>
<BR></P>It is important that DCI Clients use the interface provided by the DCI Manager, rather than sending messages directly to the DCI Provider, there is no guarantee that the message interface to the provider will not change. In addition, all Win16 to Win32 "thunking" will occur inside the DCI manager, so the DCI Manager is imperative in the Windows (Chicago) environment.</P>
A DCI Client should use DCI Manager functions to open and close providers as well as to create and enumerate surfaces, but it is not necessary to close a provider to destroy a surface.  A simple call to the surface's <B>DestroySurface</B> callback function will do all cleanup necessary for a surface, and new surfaces may be created using the same DCI device context.</P>
 </P></BODY></HTML>
