<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About the Virtual Flat-Framebuffer Device</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>About the Virtual Flat-Framebuffer Device</H3>  </P>
The virtual flat-framebuffer device (VFLATD) is a nonreplaceable VxD that virtualizes the video frame-buffer for video adapters that map bytes of video memory in 64K blocks to the physical framebuffer. The VFLATD functions are called by display drivers that do not use a flat memory model and that require a framebuffer that is larger than 64K bytes in length. Early video adapters worked efficiently within the 64K frame buffer provided by Windows.  However, as resolution and color capabilities increased, the 64K limit presented unique problems. For example, if a VGA video adapter is set at a resolution of 640 by 480 pixels and uses an 8-bit per pixel format, it requires a 300K frame buffer. In order to work within the constraints of the system, it was necessary to devise a method of mapping bytes from the larger buffer required by an adapter to the smaller buffer allocated by the system. This method of mapping is known as a <B><I>bank switching</I></B><I>.</I><B><I> </I></B>Using this VxD, a Chicago display driver obtains access to a logical flat framebuffer. The size of this buffer is specified by the display driver. (The maximum allowable size is 1Mb.) </P>
VFLATD supports two protected mode functions; it does not support any services or real-mode functions. The functions are <B>Get_Ver </B>and <B>Get_Video_Base</B>. A display driver calls the <B>Get_Ver</B> function to verify that the correct version of VFLATD has been loaded. A display driver calls the <B>Get_Video_Base</B> function to register its bank-switching function and to obtain a selector identifying the logical framebuffer. The bank-switching function maps a 64K block of video data into the physical framebuffer. The function must be written using 32-bit code and must be a maximum of 100 bytes in length. When the procedure is called, EAX must identify the new bank to be swapped into the physical framebuffer. The procedure must save all registers and must not return a value. </P>
 </P>
<A NAME="PT2"></A>Reference</P>
  </P>
This section provides details about the functions that VFLATD must support. </P>
<A NAME="PT3"></A>Get_Ver</P>
  </P>
<BR></P>
<pre><code><SPAN>mov     dx, Get_Ver      ; Function number</SPAN>
<SPAN>mov     ebx, VMHandle</SPAN>
<SPAN>call    VFlatDApiProcAdr</SPAN>
<SPAN>jz      errorhandler</SPAN></code></pre>
<SPAN></SPAN></P>
  </P>
Retrieves the VFLATD version number.  Uses Flags.</P>
<SPAN CLASS="list"><UL><LI>Returns the version number in AX if successful; otherwise, sets the carry flag. </LI></UL></SPAN><P><I>VMHandle</I></P>
Handle of the virtual machine.</P>
<A NAME="PT4"></A>Get_Video_Base</P>
  </P>
<BR></P>
<pre><code><SPAN>mov     dx, Get_Video_Base  ; Function number</SPAN>
<SPAN>mov     ebx, VMHandle</SPAN>
<SPAN>push    ds</SPAN>
<SPAN>pop     es</SPAN>
<SPAN>lea     di, BankSwitchProc</SPAN>
<SPAN>movzx   edi, di</SPAN>
mov     cx, BankSwitchProcLength
call    VFlatDApiProcAdr
jz      errorhandler
mov     VideoSelector, ax
mov     VideoAddress, dx</code></pre>
</P>
  </P>
Registers a display driver's bank-switch function and retrieves a selector for a logical frame buffer.  Uses Flags.</P>
<SPAN CLASS="list"><UL><LI>Returns a selector for the logical framebuffer in AX and returns a linear address for that framebuffer in EDX; otherwise, sets the carry flag. </LI></UL></SPAN><P><I>VMHandle</I></P>
Handle of the virtual machine.</P>
<P><I>BankSwitchProc</I></P>
Address of display driver's bank-switch procedure.</P>
<P><I>BankSwitchProcLength</I></P>
Length of display driver's bank-switch procedure.</P>
The bank-switch procedure must be written using 32-bit code and must be a maximum of 100 bytes in length. When the procedure is called, EAX must identify the new bank to be swapped into the physical framebuffer. The procedure must save all registers and it must not have a <B>ret </B>instruction (since the code is copied inline).</P>
</P></BODY></HTML>
