<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2. Initiation Key</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>3.2. Initiation Key</H3>  </P>
The Plug and Play logic is quiescent on power up and must be enabled by software.</P>
The initiation key places the Plug and Play logic into configuration mode.  This is done by a predefined series of writes to the ADDRESS port.  The write sequence is decoded by on-card logic.  If the proper series of I/O writes is detected, then the Plug and Play auto-configuration ports are enabled.  </P>
The hardware check of the initiation key is implemented as a <I>linear feedback shift register</I> (LFSR).  A hardware diagram of the LFSR is shown in the Appendix B.</P>
Software generates the LFSR sequence and writes it to the ADDRESS port as a sequence of 8-bit write cycles.  The hardware compares the byte of write data with the value in the shift register at each write.  Any time the data does not match, the hardware will reset to the initial value of the LFSR.  Software should reset the LFSR to its initial value by a sequence of two write cycles of 0x00 to the ADDRESS port before the initiation key is sent.</P>
The initial value of the LFSR and the exact sequence are documented in Appendix B.</P>
 </P></BODY></HTML>
