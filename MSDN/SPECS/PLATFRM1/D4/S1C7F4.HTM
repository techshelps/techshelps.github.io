<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7. Resource Data and Dependent Functions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>7. Resource Data and Dependent Functions</H2>  </P>
Resource data is used to describe a Plug and Play card to system software. Resource information for a Plug and Play card must include a Plug and Play version number and an identifier string. Each logical device on an ISA card must specify a logical ID and a list of all the Plug and Play resources the logical device needs to use. The list of resources must completely describe the configurability of the logical device.</P>
The tagged data structures used to encode resource data are described in the previous section. This section presents several examples of how to encode card resource data.  The following general rule applies to the use of dependent functions:</P>
Dependent functions cannot be nested.  Each START DF tag identifies the beginning of a dependent function, which is simply a set of inter-dependent resource descriptors, optionally with an assigned priority, which must be allocated together.  Dependent functions are alternatives, and configuration software will select only one of the dependent functions to be allocated to the logical device.  The END DF tag simply indicates that the last of these dependent functions has been reached.  There can only be one END DF tag for each Logical Device.  No accomodation is made for 'nesting' relationships.</P>
 </P></BODY></HTML>
