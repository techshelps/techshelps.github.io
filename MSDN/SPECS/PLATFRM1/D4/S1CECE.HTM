<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.3. Plug and Play Logical Device Configuration Registers</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>A.3. Plug and Play Logical Device Configuration Registers</H3>  </P>
The resource assignments of Plug and Play cards is programmed through the address and command/data  port in the same method used for issuing commands.  The following registers define memory, I/O, interrupt and DMA resources used by Plug and Play cards.  These configuration registers are all based on the current logical device selected.  These configuration registers are all read/write so all current configuration information may be read from a card.</P>
<A NAME="PT2"></A>A.3.1. Memory Configuration Registers</P>
Table A-3 provides a description of how memory resources are programmed. If the configuration software did not allocate memory for any reason, then the memory resource registers (for example, 0x40, 0x41, 0x43, and 0x44 for descriptor 0) are written with a zero value. This disables the memory range.</P>
There are a maximum of four memory descriptors available per logical device.</P>
Memory range length registers are defined as a mask of address bits[23:8] (or [31:0] for 32-bit memory space). If a bit in the mask is set, then this indicates that memory address bit is used in a comparator to determine an address match. If a bit is clear, this indicates that memory address bit is not used in determining an address match. For example, a logical device that requests 64 KBytes of memory would have a Range Length of:</P>
  </P>
<BR></P>
<pre><code>Memory range length [23:16] = 0xFF
Memory range length [15:8] = 0x00</code></pre>
  </P>
This indicates that address bits[23:16] are used to compare for a matching address, address bits[15:8] and bits[7:0] are not used. This 64 KByte address range must be aligned on a 64 KByte or higher boundary.</P>
Memory upper limit registers are defined as being one byte greater than the memory resource assigned.  For example, a logical device that requests 64 Kbytes of memory that is assigned at a base address of 1 Mbyte would have:</P>
  </P>
<BR></P>
<pre><code>Memory base [23:16] = 0x10
Memory base [15:8] = 0x00
Memory upper limit [23:16] = 0x11
Memory upper limit [15:8] = 0x00</code></pre>
  </P>
The memory control register, 0x42 (or 0x7A for 32-bit memory), may be implemented as a read-only register in devices that do not support programmable 8/16/32 bit operation and use only one type of memory decode. Memory registers 0x43 and 0x44 (or 0x7B - 0x7E for 32-bit memory) do not need to be supported by devices that only support a fixed length memory range that is aligned on a natural boundary.</P>
Mixing 24-bit and 32-bit memory descriptors is not allowed.  For a given card, only one type of descriptor can be used.  The type of the first memory descriptor in the resource data structure will determine which set of configuration registers is used (either 0x40-0x5F, or 0x76-0xA8).</P>
Table A-3.  Memory Space Configuration</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="154pt" VALIGN="TOP"><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="256pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Name</B></P></TD><TD VALIGN="TOP"><B>Register<BR>Index</B></P></TD><TD VALIGN="TOP"><B>Definition</B></P></TD></TR><TR><TD VALIGN="TOP">Memory base address bits[23:16] descriptor 0</P></TD><TD VALIGN="TOP">0x40</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory base address bits[23:16] for memory descriptor 0.</P></TD></TR><TR><TD VALIGN="TOP">Memory base address bits[15:8] descriptor 0</P></TD><TD VALIGN="TOP">0x41</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory base address bits[15:8] for memory descriptor 0.</P></TD></TR><TR><TD VALIGN="TOP">Memory control</P></TD><TD VALIGN="TOP">0x42</P></TD><TD VALIGN="TOP">Bit[1] specifies 8/16-bit control.  This bit is set to indicate 16-bit memory, and cleared to indicate 8-bit memory.</P>
Bit[0], if cleared, indicates the next field can be used as a range length for decode (implies range length and base alignment of memory descriptor are equal).  </P>
Bit[0], if set, indicates the next field is the upper limit for the address.<BR><BR>Bit[0] is read-only.</P></TD></TR><TR><TD VALIGN="TOP">Memory upper limit address bits[23:16] or range length bits[23:16] for descriptor 0</P></TD><TD VALIGN="TOP">0x43</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory high address bits[23:16] for memory descriptor 0.  </P>
If bit[0] of memory control is 0, this is the range length. </P>
If bit[0] of memory control is 1, this is upper limit for memory address (equal to memory base address plus the range length allocated).</P></TD></TR><TR><TD VALIGN="TOP">Memory upper limit address bits[15:8] or range length bits[15:8] for descriptor 0</P></TD><TD VALIGN="TOP">0x44</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory high address bits[15:8] for memory descriptor 0, either a memory address or a range length as described above.</P></TD></TR><TR><TD VALIGN="TOP">Filler</P></TD><TD VALIGN="TOP">0x45 - 0x47</P></TD><TD VALIGN="TOP"><I>Reserved</I></P></TD></TR><TR><TD VALIGN="TOP">Memory descriptor 1</P></TD><TD VALIGN="TOP">0x48 - 0x4C</P></TD><TD VALIGN="TOP">Memory descriptor 1</P></TD></TR><TR><TD VALIGN="TOP">Filler</P></TD><TD VALIGN="TOP">0x4D - 0x4F</P></TD><TD VALIGN="TOP"><I>Reserved</I></P></TD></TR><TR><TD VALIGN="TOP">Memory descriptor 2</P></TD><TD VALIGN="TOP">0x50 - 0x54</P></TD><TD VALIGN="TOP">Memory descriptor 2</P></TD></TR><TR><TD VALIGN="TOP">Filler</P></TD><TD VALIGN="TOP">0x55 - 0x57</P></TD><TD VALIGN="TOP"><I>Reserved</I></P></TD></TR><TR><TD VALIGN="TOP">Memory descriptor 3</P></TD><TD VALIGN="TOP">0x58 - 0x5C</P></TD><TD VALIGN="TOP">Memory descriptor 3</P></TD></TR><TR><TD VALIGN="TOP">Filler</P></TD><TD VALIGN="TOP">0x5D - 0x5F</P></TD><TD VALIGN="TOP"><I>Reserved</I></P></TD></TR></TBODY></TABLE>
<BR></P>  </P>
<B>Note</B>   These registers are read/write and always reflect the current operation of all logical devices on the Plug and Play card.  If a resource is not programmable, then the configuration register bits are read-only.  Any unimplemented memory configuration registers must return 0 on reads.</P>
  </P>
 Table A-4.  32-bit Memory Space Configuration</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="154pt" VALIGN="TOP"><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="256pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Name</B></P></TD><TD VALIGN="TOP"><B>Register<BR>Index</B></P></TD><TD VALIGN="TOP"><B>Definition</B></P></TD></TR><TR><TD VALIGN="TOP">32 Bit Memory base address bits[31:24] descriptor 0</P></TD><TD VALIGN="TOP">0x76</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory base address bits[31:24] for 32 bit memory descriptor 0.</P></TD></TR><TR><TD VALIGN="TOP">32 Bit Memory base address bits[23:16] descriptor 0</P></TD><TD VALIGN="TOP">0x77</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory base address bits[23:16] for 32 bit memory descriptor 0.</P></TD></TR><TR><TD VALIGN="TOP">32 Bit Memory base address bits[15:8] descriptor 0</P></TD><TD VALIGN="TOP">0x78</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory base address bits[15:8] for 32 bit memory descriptor 0.</P></TD></TR><TR><TD VALIGN="TOP">32 Bit Memory base address bits[7:0] descriptor 0</P></TD><TD VALIGN="TOP">0x79</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory base address bits[7:0] for 32 bit memory descriptor 0.</P></TD></TR><TR><TD VALIGN="TOP">32 Bit Memory Control</P></TD><TD VALIGN="TOP">0x7A</P></TD><TD VALIGN="TOP">Bits[7:3]             <I>Reserved and must return 0 on reads</I></P>
Bits[2:1]  Memory control.  These bits indicate 8/16/32 bit memory as follows:<BR>          00     8-bit memory<BR>          01     16-bit memory<BR>          10     <I>Reserved</I> <BR>          11     32-bit memory<I> </I></P>
If bit[0] of memory control is 0, this is the range length. </P>
If bit[0] of memory control is 1, this is upper limit for memory address (equal to memory base address plus the range length allocated).</P>
Bit[0] is read-only.</P></TD></TR><TR><TD VALIGN="TOP">Memory upper limit address bits[31:24] or range length bits[31:24] for descriptor 0</P></TD><TD VALIGN="TOP">0x7B</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory high address bits[31:24] for memory descriptor 0.  </P>
If bit[0] of memory control is 0, this is the range length. </P>
If bit[0] of memory control is 1, this is upper limit for memory address (equal to memory base address plus the range length allocated).</P></TD></TR><TR><TD VALIGN="TOP">Memory upper limit address bits[23:16] or range length bits[23:16] for descriptor 0</P></TD><TD VALIGN="TOP">0x7C</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory high address bits[23:16] for memory descriptor 0, either a memory address or a range length as described above.</P></TD></TR><TR><TD VALIGN="TOP">Memory upper limit address bits[15:8] or range length bits[15:8] for descriptor 0</P></TD><TD VALIGN="TOP">0x7D</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory high address bits[15:8] for memory descriptor 0, either a memory address or a range length as described above.</P></TD></TR><TR><TD VALIGN="TOP">Memory upper limit address bits[7:0] or range length bits[7:0] for descriptor 0</P></TD><TD VALIGN="TOP">0x7E</P></TD><TD VALIGN="TOP">Read/write value indicating the selected memory high address bits[7:0] for memory descriptor 0, either a memory address or a range length as described above.</P></TD></TR><TR><TD VALIGN="TOP">Filler</P></TD><TD VALIGN="TOP">0x7F</P></TD><TD VALIGN="TOP"><I>Reserved</I></P></TD></TR><TR><TD VALIGN="TOP">32 Bit Memory descriptor 1</P></TD><TD VALIGN="TOP">0x80 - 0x88</P></TD><TD VALIGN="TOP">32 Bit Memory descriptor 1</P></TD></TR><TR><TD VALIGN="TOP">Filler</P></TD><TD VALIGN="TOP">0x89 - 0x8F</P></TD><TD VALIGN="TOP"><I>Reserved</I></P></TD></TR><TR><TD VALIGN="TOP">32 Bit Memory descriptor 2</P></TD><TD VALIGN="TOP">0x90 - 0x98</P></TD><TD VALIGN="TOP">32 Bit Memory descriptor 2</P></TD></TR><TR><TD VALIGN="TOP">Filler</P></TD><TD VALIGN="TOP">0x99 - 0x9F</P></TD><TD VALIGN="TOP"><I>Reserved</I></P></TD></TR><TR><TD VALIGN="TOP">32 Bit Memory descriptor 3</P></TD><TD VALIGN="TOP">0xA0 - 0xA8</P></TD><TD VALIGN="TOP">32 Bit Memory descriptor 3</P></TD></TR></TBODY></TABLE>
<BR></P>  </P>
<B>Note</B>   These registers are read/write and always reflect the current operation of all logical devices on the Plug and Play card.  If a resource is not programmable, then the configuration register bits are read-only. Any unimplemented 32-bit memory configuration registers must return 0 on reads.</P>
  </P>
<A NAME="PT3"></A>A.3.2. I/O Configuration Registers</P>
Configuration registers 0x60 - 0x6F are used for I/O range configuration. There are a maximum of eight I/O descriptors available per logical device.  Writing a base address of 0x0000 will disable the I/O range.</P>
Table A-5.  I/O Space Configuration</P>
  </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="154pt" VALIGN="TOP"><COL WIDTH="82pt" VALIGN="TOP"><COL WIDTH="256pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Name</B></P></TD><TD VALIGN="TOP"><B>Register<BR>Index</B></P></TD><TD VALIGN="TOP"><B>Definition</B></P></TD></TR><TR><TD VALIGN="TOP">I/O port base address bits[15:8] descriptor 0</P></TD><TD VALIGN="TOP">0x60</P></TD><TD VALIGN="TOP">Read/write value indicating the selected I/O lower limit address bits[15:8] for I/O descriptor 0. If a logical device indicates it only uses 10 bit decoding, then bits[15:10] do not need to be supported.</P></TD></TR><TR><TD VALIGN="TOP">I/O port base address bits [7:0] descriptor 0</P></TD><TD VALIGN="TOP">0x61</P></TD><TD VALIGN="TOP">Read/write value indicating the selected I/O lower limit address bits[7:0] for I/O descriptor 0.</P></TD></TR><TR><TD VALIGN="TOP">I/O port address descriptors [1-6]</P></TD><TD VALIGN="TOP">0x62 - 0x6D</P></TD><TD VALIGN="TOP">I/O base addresses for I/O descriptors 1 - 6</P></TD></TR><TR><TD VALIGN="TOP">I/O port base address bits[15:8] descriptor 7</P></TD><TD VALIGN="TOP">0x6E</P></TD><TD VALIGN="TOP">Read/write value indicating the selected I/O base address bits[15:8] for I/O descriptor 7. If a logical device indicates it only uses 10 bit decoding, then bits[15:10] do not need to be supported.</P></TD></TR><TR><TD VALIGN="TOP">I/O port base address bits[7:0] descriptor 7</P></TD><TD VALIGN="TOP">0x6F</P></TD><TD VALIGN="TOP">Read/write value indicating the selected I/O base address bits[7:0] for I/O descriptor 7.</P></TD></TR></TBODY></TABLE>
<BR></P>  </P>
<B>Note</B>   These registers are read/write and always reflect the current operation of all logical devices on the Plug and Play card.  If a resource is not programmable, then the configuration register bits are read-only.   Any unimplemented I/O configuration registers must return 0 on reads.</P>
  </P>
<A NAME="PT4"></A>A.3.3. Interrupt Configuration Registers</P>
Each logical device in a Plug and Play ISA card may use up to two interrupt requests and up to two DMA channels.  These can be selected by writing to the appropriate configuration register.</P>
Table A-6.  Interrupt Configuration</P>
  </P>

<TABLE COLS="5" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="171pt" VALIGN="TOP"><COL WIDTH="2pt" VALIGN="TOP"><COL WIDTH="78pt" VALIGN="TOP"><COL WIDTH="2pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Name</B></P></TD><TD COLSPAN="2" VALIGN="TOP"><B>Register<BR>Index</B></P></TD><TD COLSPAN="3" VALIGN="TOP"><B>Definition</B></P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">Interrupt request level select 0</P></TD><TD COLSPAN="3" VALIGN="TOP">0x70</P></TD><TD COLSPAN="3" VALIGN="TOP">Read/write value indicating selected interrupt level.  Bits[3:0] select which interrupt level is used for Interrupt 0.  One selects IRQL 1, fifteen selects IRQL fifteen. IRQL 0 is not a valid interrupt selection and represents no interrupt selection.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">Interrupt request type select 0</P></TD><TD COLSPAN="3" VALIGN="TOP">0x71</P></TD><TD COLSPAN="3" VALIGN="TOP">Read/write value indicating which type of interrupt is used for the Request Level selected above. </P>
Bit[1]  : Level,   1 = high, 0 = low<BR>Bit[0]  : Type,    1 = level, 0 = edge</P>
If a card only supports 1 type of interrupt, this register may be read-only.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">Interrupt request level select 1</P></TD><TD COLSPAN="3" VALIGN="TOP">0x72</P></TD><TD COLSPAN="3" VALIGN="TOP">Read/write value indicating selected interrupt level.  Bits[3:0] select which interrupt level is used for Interrupt 0.  One selects IRQL 1, fifteen selects IRQL fifteen. IRQL 0 is not a valid interrupt selection and represents no interrupt selection.</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP">Interrupt request type select 1</P></TD><TD COLSPAN="3" VALIGN="TOP">0x73</P></TD><TD COLSPAN="3" VALIGN="TOP">Read/write value indicating which type of interrupt is used  for the Request Level selected above. </P>
Bit[1]  : Level,   1 = high, 0 = low<BR>Bit[0]  : Type,    1 = level, 0 = edge</P></TD></TR></TBODY></TABLE>
<BR></P>  </P>
<B>Note</B>   These registers are read/write and always reflect the current operation of all logical devices on the Plug and Play card.  If a resource is not programmable, then the configuration register bits are read-only.   Any unimplemented interrupt configuration registers must return 0 on reads.</P>
  </P>
<A NAME="PT5"></A>A.3.4. DMA Configuration Registers</P>
Table A-7.  DMA Channel Configuration</P>
  </P>

<TABLE COLS="5" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="166pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="79pt" VALIGN="TOP"><COL WIDTH="1pt" VALIGN="TOP"><COL WIDTH="246pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><B>Name</B></P></TD><TD COLSPAN="3" VALIGN="TOP"><B>Register<BR>Index</B></P></TD><TD COLSPAN="3" VALIGN="TOP"><B>Definition</B></P></TD></TR><TR><TD VALIGN="TOP">DMA channel select 0</P></TD><TD COLSPAN="2" VALIGN="TOP">0x74</P></TD><TD COLSPAN="3" VALIGN="TOP">Read/write value indicating selected DMA channels.  Bits[2:0] select which DMA channel is in use for DMA 0.  Zero selects DMA channel 0, seven selects DMA channel 7. DMA channel 4, the cascade channel is used to indicate no DMA channel is active.</P></TD></TR><TR><TD VALIGN="TOP">DMA channel select 1</P></TD><TD COLSPAN="2" VALIGN="TOP">0x75</P></TD><TD COLSPAN="3" VALIGN="TOP">Read/write value indicating selected DMA channels.  Bits[2:0] select which DMA channel is in use for DMA 1.  Zero selects DMA channel 0, seven selects DMA channel seven. DMA channel 4, the cascade channel is used to indicate no DMA channel is active.</P></TD></TR></TBODY></TABLE>
<BR></P>  </P>
<B>Note</B>   These registers are read/write and always reflect the current operation of all logical devices on the Plug and Play card.  If a resource is not programmable, then the configuration register bits are read-only.  Any unimplemented DMA configuration registers must return 4 on reads.</P>
  </P>
<A NAME="PT6"></A>A.3.5. Reserved and Vendor Defined Configuration Registers</P>
Registers 0xA9 - 0xEF are reserved for future Plug and Play ISA use. Registers in the range of 0xF0 - 0xFE are vendor defined and may be used for any purpose. </P>
Table A-8.  Logical Device Configuration</P>
  </P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="166pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="76pt" VALIGN="TOP"><COL WIDTH="251pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD COLSPAN="2" VALIGN="TOP"><B>Name</B></P></TD><TD COLSPAN="2" VALIGN="TOP"><B>Register<BR>Index</B></P></TD><TD COLSPAN="2" VALIGN="TOP"><B>Definition</B></P></TD></TR><TR><TD VALIGN="TOP">Logical device configuration reserved</P></TD><TD COLSPAN="2" VALIGN="TOP">0xA9-0xEF</P></TD><TD COLSPAN="2" VALIGN="TOP"><I>Reserved</I></P></TD></TR><TR><TD VALIGN="TOP">Logical device configuration vendor defined</P></TD><TD COLSPAN="2" VALIGN="TOP">0xF0-0xFE</P></TD><TD COLSPAN="2" VALIGN="TOP"><I>Vendor defined</I></P></TD></TR></TBODY></TABLE>
<BR></P> </P></BODY></HTML>
