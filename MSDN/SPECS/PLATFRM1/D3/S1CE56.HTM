<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.1 Goals of a Plug and Play System BIOS</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>1.1 Goals of a Plug and Play System BIOS</H3>  </P>
Considering the scope of Plug and Play, the following are the goals of the Plug and Play BIOS Specification.</P>
<B>Maximize ISA compatibility</B></P>
This is the key consideration in a system BIOS.  It is considered unacceptable to change the architecture of a System BIOS to prevent the thousands of ISA cards and software programs that rely on the system BIOS for services.</P>
<B>Eliminate resource conflicts during the POST procedure</B></P>
A common problem that plagues many ISA systems today is the fact that there are a lot more devices available than there are system resources.  In this environment, devices are bound to have conflicting resources.  The system BIOS will now play a key role to help prevent these resource conflicts by not enabling devices which conflict with the primary boot devices, and relocating boot devices, if necessary, to allow a successful load of the operating system.  It is the role of the operating system to provide support for communicating irreconcilable resource conflicts to the user.</P>
<B>Support Plug and Play ISA cards</B></P>
A Plug and Play system BIOS is responsible for the isolation, enumeration, and optional configuration of Plug and Play ISA cards.  These cards, which provide information on their resource requirements and permit software to configure those resources, will allow the system BIOS to arrive at a conflict free configuration necessary to load the operating system.</P>
<B>Allow dynamic configuration of systemboard devices</B></P>
Systemboard devices have traditionally been treated as having somewhat static configurations.  It is a goal of the Plug and Play BIOS specification to provide a standard mechanism whereby systemboard devices may be configured dynamically by system software.  This will grant configuration management software a great deal of flexibility when system resources are in demand and alternate configurations are necessary.</P>
  </P>
<B>Note</B>   <I>Dynamic device configuration requires explicit device driver support.</I></P>
  </P>
<B>Provide system event notification</B></P>
The system BIOS is capable of detecting certain hardware events that could affect the system configuration.  By providing an event notification mechanism, an operating system can recognize the event and process any necessary configuration changes.</P>
<B>Hardware and Operating System independence</B></P>
The extensions to the system BIOS isolate the systemboard hardware through well defined interfaces and structures.  The system device nodes represent devices that are controlled by the system BIOS.  The operating system requires no specific knowledge of the systemboard in order to control these devices, and instead relies on the system BIOS to isolate it from the underlying hardware.</P>
 </P></BODY></HTML>
