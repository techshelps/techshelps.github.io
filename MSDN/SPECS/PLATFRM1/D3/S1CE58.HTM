<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.3 Elements of the Plug and Play BIOS architecture</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>1.3 Elements of the Plug and Play BIOS architecture</H3>  </P>
<A NAME="PT2"></A>1.3.1 Bi-modal functionality</P>
All Plug and Play BIOS Services which are accessible at runtime support a bi-modal interface.  The two modes supported are 16-bit Real Mode and 16-bit Protected Mode.  These two modes are sufficient to support a wide variety of operating environments.  Real Mode interfaces are defined in terms of the segment and offset of the service entry point.</P>
Protected Mode interfaces specify the code segment base address so that the caller can construct the descriptor from the segment base address before calling the interface from protected mode.  The offset value is the offset of the entry point.  It is assumed that the 16-Bit Protected Mode interface is sufficient for 32-Bit Protected Mode callers.  However, it is important to note that Plug and Play BIOS functions will access arguments on the stack as a 16-bit stack frame.  Therefore, the caller must ensure that the function arguments are pushed onto the stack as 16-bit values and not 32-bit values.  For function arguments that are pointers, the pointer offset and data should be contained within the first 64K bytes of the segment.  Refer to section 4.4 Plug and Play Installation Check for a complete description of the bi-modal interface.</P>
<A NAME="PT3"></A>1.3.2 OS Independence</P>
The Plug and Play BIOS services, which are accessible during normal system operation, are defined in a manner independent from the operating system.    The BIOS System Device Nodes are a compact form of a device node tailored specifically to the configuration of systemboard devices.</P>
A Plug and Play OS which complies with the general framework of the Plug and Play Architecture requires a software isolation/translation layer between the System BIOS and the OS.  </P>
The isolation/translation software performs the task of translating the generic BIOS interfaces defined in this specification into those required to support configuration management in the desired  operating environment.</P>
<A NAME="PT4"></A>1.3.3 Expandability</P>
Throughout the Plug and Play BIOS Specification care was taken to provide a mechanism for extensibility of this specification.  All significant structures and interfaces are defined with revision identifiers.  These revision identifiers provide a mechanism whereby the interfaces defined may be extended so long as the interfaces remain backward compatible to the original specification.</P>
 </P></BODY></HTML>
