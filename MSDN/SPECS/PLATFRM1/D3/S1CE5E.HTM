<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.5 POST Execution flow</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>2.5 POST Execution flow</H3>  </P>
The following steps outline a typical flow of a Plug and Play system BIOS POST.  All of the standard ISA functionality has been eliminated for clarity in understanding the Plug and Play POST enhancements.</P>
<B><I>Step 1  </I></B><B>Disable all configurable devices</B></P>
Any configurable devices known to the system BIOS should be disabled early in the POST process.</P>
<B><I>Step 2</I></B><B>  Identify all Plug and Play ISA devices</B></P>
Assign CSNs to Plug and Play ISA devices but keep devices disabled.  Also determine which devices are boot devices.</P>
<B><I>Step 3</I></B><B>  Construct an initial resource map of allocated resources</B></P>
Construct a resource map of resources that are statically allocated to devices in the system.  If the system software has explicitly specified the system resources assigned to ISA devices in the system through the <B><I>Set Statically Allocated Resource Information</I></B> function, the system BIOS will create an initial resource map based on this information.</P>
If the BIOS implementation provides support for saving the last working configuration and the system software has explicitly assigned system resources to specific devices in the system, then this information will be used to construct the resource map.  This information will also be used to configure the devices in the system.</P>
<B><I>Step 4</I></B><B>  Enable Input and Output Devices</B></P>
Select and enable the Input and Output Device. Compatibility devices in the system that are not configurable always have precedence.  For example, a standard VGA adapter would become the primary output device.  If configurable Input and Output Devices exists, then enable these devices at this time.  If Plug and Play Input and Output Devices are being selected, then initialize the option ROM, if it exists, using the Plug and Play option ROM initialization procedure (See section 3).</P>
<B><I>Step 5</I></B><B>  Perform ISA ROM scan</B></P>
The ISA ROM scan should be performed from C0000h to EFFFFh on every 2K boundary.  Plug and Play Option ROMs are disabled at this time (except input and output boot devices) and will not be included in the ROM scan.</P>
<B><I>Step 6</I></B><B>  Configure the IPL device</B></P>
If a Plug and Play device has been selected as the IPL device, then use the Plug and Play Option ROM procedure to initialize the device.  If the IPL device is known to the system BIOS, then ensure that interrupt 19h is still controlled by the system BIOS.  If not, recapture interrupt 19h and save the vector.</P>
<B><I>Step 7</I></B><B>  Enable Plug and Play ISA and other Configurable Devices</B></P>
If a static resource allocation method is used, then enable the Plug and Play ISA cards with conflict free resource assignments.  Initialize the option ROMs and pass along the defined parameters. All other configurable devices should be enabled, if possible, at this time.</P>
If a dynamic resource allocation method is used, then enable the bootable Plug and Play ISA cards with conflict free resource assignments and initialize the option ROMs.</P>
<B><I>Step 8</I></B><B>  Initiate the Interrupt 19H IPL sequence</B></P>
Start the bootstrap loader.  If the operating system fails to load and a previous ISA option ROM had control of the interrupt 19h vector, then restore the interrupt 19h vector to the ISA option ROM and re-execute the Interrupt 19h bootstrap loader.</P>
<B><I>Step 9</I></B><B>  Operating system takes over resource management</B></P>
If the loaded operating system is Plug and Play compliant, then it will take over management of the <B><I>system resources.</I></B>  It will use the runtime services of the system BIOS to determine the current allocation of these resources.  It is assumed that any unconfigured Plug and Play devices will be configured by the appropriate system software or the Plug and Play operating system.</P>
 </P></BODY></HTML>
