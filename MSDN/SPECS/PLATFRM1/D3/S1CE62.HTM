<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.4 Option ROM Initialization flow</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>3.4 Option ROM Initialization flow</H3>  </P>
The following outlines the typical steps used to initialize Option ROMs during a Plug and Play system BIOS POST: </P>
<B><I>Step 1  </I></B><B>Initialize the boot device option ROMs.</B></P>
This includes the Primary Input, Primary Output, and Initial Program Load (IPL) device option ROMs.</P>
<B><I>Step 2  </I></B><B>Initialize  ISA option ROMs by performing ISA ROM scan</B></P>
The ISA ROM scan should be performed from C0000h to EFFFFh on every 2k boundary.  Plug and Play option ROMs will not be included in the ROM scan.</P>
<B><I>Step 3</I></B><B>  Initialize option ROMs for ISA devices which have a Plug and Play option ROM.</B></P>
Typically, these devices will not provide support for dynamic configurability.  However, the resources utilized by these devices can be obtained through the <I>Static Resource Information Vector </I>as described in section 3.2.</P>
<B><I>Step 4</I></B><B>  Initialize option ROMs for Plug and Play cards which have a Plug and Play option ROM.</B></P>
<B><I>Step 5</I></B><B>  Initialize option ROMs which support the Device Driver Initialization Model (DDIM).</B></P>
Option ROMs which follow this model make the most efficient use of space consumed by option ROMs.  Refer to Appendix B for more information on the DDIM.</P>
 </P></BODY></HTML>
