<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.1 Option ROM Header</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>3.1 Option ROM Header</H3>  </P>
The Plug and Play Option ROM Header follows the format of the Generic Option ROM Header extensions described in Appendix A.  The Generic Option ROM header is a mechanism whereby the standard ISA Option ROM header may be expanded with minimal impact upon existing Option ROMs.  The pointer at offset 1Ah may point to ANY type of header.  Each header provides a link to the next header; thus, future Option ROM headers may use this same generic pointer and still coexist with the Plug and Play Option ROM header.  Each Option ROM header is identified by a unique string.  The length and checksum bytes allow the System BIOS and/or System Software to verify that the header is valid.</P>
Standard Option ROM Header:</P>
  </P>

<TABLE COLS="5" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="64pt" VALIGN="TOP"><COL WIDTH="67pt" VALIGN="TOP"><COL WIDTH="62pt" VALIGN="TOP"><COL WIDTH="183pt" VALIGN="TOP"><COL WIDTH="110pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Offset</B></P></TD><TD VALIGN="TOP"><B>Length</B></P></TD><TD VALIGN="TOP"><B>Value</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD><TD VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">0h</P></TD><TD VALIGN="TOP">2h</P></TD><TD VALIGN="TOP">AA55h</P></TD><TD VALIGN="TOP">Signature</P></TD><TD VALIGN="TOP">Standard</P></TD></TR><TR><TD VALIGN="TOP">2h</P></TD><TD VALIGN="TOP">1h</P></TD><TD VALIGN="TOP">Varies</P></TD><TD VALIGN="TOP">Option ROM Length</P></TD><TD VALIGN="TOP">Standard</P></TD></TR><TR><TD VALIGN="TOP">3h</P></TD><TD VALIGN="TOP">4h</P></TD><TD VALIGN="TOP">Varies</P></TD><TD VALIGN="TOP">Initialization Vector</P></TD><TD VALIGN="TOP">Standard</P></TD></TR><TR><TD VALIGN="TOP">7h</P></TD><TD VALIGN="TOP">13h</P></TD><TD VALIGN="TOP">Varies</P></TD><TD VALIGN="TOP">Reserved</P></TD><TD VALIGN="TOP">Standard</P></TD></TR><TR><TD VALIGN="TOP">1Ah</P></TD><TD VALIGN="TOP">2h</P></TD><TD VALIGN="TOP">Varies</P></TD><TD VALIGN="TOP">Offset to Expansion Header Structure</P></TD><TD VALIGN="TOP">New for Plug and Play</P></TD></TR></TBODY></TABLE>
<BR></P><B>Signature</B> - All ISA expansion ROMs are currently required to identify themselves with a signature WORD of AA55h at offset 0.  This signature is used by the System BIOS as well as other software to identify that an Option ROM is present at a given address.</P>
<B>Length</B> - The length of the option ROM in 512 byte increments.</P>
<B>Initialization vector</B> - The system BIOS will execute a FAR CALL to this location to initialize the Option ROM.  A Plug and Play System BIOS will identify itself to a Plug and Play Option ROM by passing a pointer to a Plug and Play Identification structure when it calls the Option ROM's initialization vector.  If the Option ROM determines that the System BIOS is a Plug and Play BIOS, the Option ROM should not hook the input, display, or IPL device vectors (INT 9h, 10h, or 13h) at this time.  Instead, the device should wait until the System BIOS calls the Boot Connection vector before it hooks any of these vectors.</P>
  </P>
<B>Note</B>   <I>A Plug and Play device should never hook INT 19h or INT 18h until its Boot Connection Vector, offset 16h of the Expansion Header Structure (section 3.2), has been called by the Plug and Play system BIOS.</I></P>
  </P>
If the Option ROM determines that it is executing under a Plug and Play system BIOS, it should return some device status parameters upon return from the initialization call.  See the section on Option ROM Initialization for further details.</P>
The field is four bytes wide even though most implementations may adhere to the custom of defining a simple three byte NEAR JMP.   The definition of the fourth byte may be OEM specific.  </P>
<B>Reserved</B> - This area is used by various vendors and contains OEM specific data and copyright strings.</P>
<B>Offset to Expansion Header</B> - This location contains a pointer to a linked list of Option ROM expansion headers.  Various Expansion Headers (regardless of their type) may be chained together and accessible via this pointer.  The offset specified in this field is the offset from the start of the option ROM header.</P>
 </P></BODY></HTML>
