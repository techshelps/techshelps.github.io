<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2 Expansion Header for Plug and Play</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>3.2 Expansion Header for Plug and Play</H3>  </P>
  </P>

<TABLE COLS="9" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="64pt" VALIGN="TOP"><COL WIDTH="75pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="75pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"><COL WIDTH="166pt" VALIGN="TOP"><COL WIDTH="62pt" VALIGN="TOP"><COL WIDTH="43pt" VALIGN="TOP"><COL WIDTH="57pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Offset</B></P></TD><TD VALIGN="TOP"><B>Length</B></P></TD><TD COLSPAN="3" VALIGN="TOP"><B>Value</B></P></TD><TD COLSPAN="3" VALIGN="TOP"><B>Description</B></P></TD><TD COLSPAN="4" VALIGN="TOP"></P></TD></TR><TR><TD VALIGN="TOP">0h</P></TD><TD COLSPAN="2" VALIGN="TOP">4 BYTES</P></TD><TD COLSPAN="2" VALIGN="TOP">$PnP<BR>(ASCII)</P></TD><TD COLSPAN="4" VALIGN="TOP">Signature</P></TD><TD COLSPAN="5" VALIGN="TOP">Generic</P></TD></TR><TR><TD VALIGN="TOP">04h</P></TD><TD COLSPAN="2" VALIGN="TOP">BYTE</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Structure Revision</P></TD><TD COLSPAN="5" VALIGN="TOP">01h</P></TD></TR><TR><TD VALIGN="TOP">05h</P></TD><TD COLSPAN="2" VALIGN="TOP">BYTE</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP"> Length (in 16 byte increments)</P></TD><TD COLSPAN="5" VALIGN="TOP">Generic</P></TD></TR><TR><TD VALIGN="TOP">06h</P></TD><TD COLSPAN="2" VALIGN="TOP">WORD</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Offset of next Header (0000h if none)</P></TD><TD COLSPAN="5" VALIGN="TOP">Generic</P></TD></TR><TR><TD VALIGN="TOP">08h</P></TD><TD COLSPAN="2" VALIGN="TOP">BYTE</P></TD><TD COLSPAN="2" VALIGN="TOP">00h</P></TD><TD COLSPAN="4" VALIGN="TOP">Reserved</P></TD><TD COLSPAN="5" VALIGN="TOP">Generic</P></TD></TR><TR><TD VALIGN="TOP">09h</P></TD><TD COLSPAN="2" VALIGN="TOP">BYTE</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Checksum</P></TD><TD COLSPAN="5" VALIGN="TOP">Generic</P></TD></TR><TR><TD VALIGN="TOP">0Ah</P></TD><TD COLSPAN="2" VALIGN="TOP">DWORD</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Device Identifier</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">0Eh</P></TD><TD COLSPAN="2" VALIGN="TOP">WORD</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Pointer to Manufacturer String (Optional)</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">10h</P></TD><TD COLSPAN="2" VALIGN="TOP">WORD</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Pointer to Product Name String (Optional)</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">12h</P></TD><TD COLSPAN="2" VALIGN="TOP">3 BYTE</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Device Type Code</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">15h</P></TD><TD COLSPAN="2" VALIGN="TOP">BYTE</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Device Indicators</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">16h</P></TD><TD COLSPAN="2" VALIGN="TOP">WORD</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Boot Connection Vector - Real/Protected mode (0000h if none)</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">18h</P></TD><TD COLSPAN="2" VALIGN="TOP">WORD</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Disconnect Vector - Real/Protected mode (0000h if none)</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">1Ah</P></TD><TD COLSPAN="2" VALIGN="TOP">WORD</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Bootstrap Entry Point - Real/Protected mode  (0000h if none)</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">1Ch</P></TD><TD COLSPAN="2" VALIGN="TOP">WORD</P></TD><TD COLSPAN="2" VALIGN="TOP">0000h</P></TD><TD COLSPAN="4" VALIGN="TOP">Reserved</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR><TR><TD VALIGN="TOP">1Eh</P></TD><TD COLSPAN="2" VALIGN="TOP">WORD</P></TD><TD COLSPAN="2" VALIGN="TOP">Varies</P></TD><TD COLSPAN="4" VALIGN="TOP">Static Resource Information Vector- Real/Protected mode (0000h if none)</P></TD><TD COLSPAN="5" VALIGN="TOP">PnP Specific</P></TD></TR></TBODY></TABLE>
<BR></P><B>Signature</B> - All Expansion Headers will contain a unique expansion header identifier.  The Plug and Play expansion header's identifier is the ASCII string "$PnP" or hex 24 50 6E 50h (Byte 0 = 24h ... Byte 3 = 50h).</P>
<B>Structure Revision</B> - This is an ordinal value that indicates the revision number of this structure only and does not imply a level of compliance with the Plug and Play BIOS version.</P>
<B>Length</B> - Length of the entire Expansion Header expressed in sixteen byte blocks.  The length count starts at the Signature field.</P>
<B>Offset of Next Header</B> - This location contains a link to the next expansion ROM header in this Option ROM.  If there are no other expansion ROM headers, then this field will have a value of 0h.  The offset specified in this field is the offset from the start of the option ROM header.</P>
<B>Reserved </B>- Reserved for Expansion</P>
<B>Checksum</B> - Each Expansion Header is checksummed individually.  This allows the software which wishes to make use of an expansion header (in this case, the system BIOS) the ability to determine if the expansion header is valid.  The method for validating the checksum is to add up all byte values in the Expansion Header, including the <I>Checksum</I> field, into an 8-bit value.  A resulting sum of zero indicates a valid checksum operation.</P>
<B>Device Identifier</B> - This field contains the Plug and Play Device ID.</P>
<B>Pointer to Manufacturer String (Optional) - </B>This location contains an offset relative to the base of the Option ROM which points to an ASCIIZ representation of the board manufacturer's name.  This field is optional and if the pointer is 0 (Null) then the Manufacturer String is not supported.</P>
<B>Pointer to Product Name String (Optional) - </B>This location contains an offset relative to the base of the Option ROM which points to an ASCIIZ representation of the product name.  This field is optional and if the pointer is 0 (Null) then the Product Name String is not supported.</P>
<B>Device Type Code</B> - This field contains general device type information that will assist the System BIOS in prioritizing the boot devices.</P>
The Device Type code is broken down into three byte fields.  The byte fields consist of a Base-Type code that indicates the general device type.  The second byte is the device Sub-Type and its definition is dependent upon the Base-Type code.  The third byte defines the specific device programming interface, IF.-Type, based on the Base-Type and Sub-Type.</P>
Refer to Appendix B for a description of Device Type Codes.</P>
<B>Device Indicators</B> - This field contains indicator bits that identify the device as being capable of being one of the three identified boot devices: Input, Output, or Initial Program Load (IPL).</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="60pt" VALIGN="TOP"><COL WIDTH="384pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Bit</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">7</P></TD><TD VALIGN="TOP">A 1 indicates that this ROM supports the Device Driver Initialization Model</P></TD></TR><TR><TD VALIGN="TOP">6</P></TD><TD VALIGN="TOP">A 1 indicates that this ROM may be Shadowed in RAM</P></TD></TR><TR><TD VALIGN="TOP">5</P></TD><TD VALIGN="TOP">A 1 indicates that this ROM is Read Cacheable</P></TD></TR><TR><TD VALIGN="TOP">4</P></TD><TD VALIGN="TOP">A 1 indicates that this option ROM is only required if this device is selected as a boot device.</P></TD></TR><TR><TD VALIGN="TOP">3</P></TD><TD VALIGN="TOP">Reserved (0)</P></TD></TR><TR><TD VALIGN="TOP">2</P></TD><TD VALIGN="TOP">A 1 in this position indicates that this device is an Initial Program Load (IPL) device.</P></TD></TR><TR><TD VALIGN="TOP">1</P></TD><TD VALIGN="TOP">A 1 in this position indicates that this device is an Input device.</P></TD></TR><TR><TD VALIGN="TOP">0</P></TD><TD VALIGN="TOP">A 1 in this position indicates that this device is a Display device.</P></TD></TR></TBODY></TABLE>
<BR></P><B>Boot Connection Vector</B> (Real/Protected mode) - This location contains an offset from the start of the option ROM header to a routine that will cause the Option ROM to hook one or more of the primary input, primary display, or Initial Program Load (IPL) device vectors (INT 9h, INT 10h, or INT 13h), depending upon the parameters passed during the call.</P>
When the system BIOS has determined that the device controlled by this Option ROM will be one of the boot devices (the Primary Input, Primary Display, or IPL device), the System ROM will execute a FAR CALL to the location pointed to by the Boot Connection Vector.   The system ROM will pass the following parameters to the options ROM's  Boot Connection Vector:</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="106pt" VALIGN="TOP"><COL WIDTH="337pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Reg On Entry</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">AX</P></TD><TD VALIGN="TOP">Provides an indication as to which vectors should be hooked by specifying the type of boot device this device has been selected as.</P>
Bit 7..3    Reserved(0)</P>
Bit 2         1=Connect as IPL (INT 13h)</P>
Bit 1         1=Connect as primary Video (INT 10h)</P>
Bit 0         1=Connect as primary Input (INT 09h)</P></TD></TR><TR><TD VALIGN="TOP">ES:DI</P></TD><TD VALIGN="TOP">Pointer to System BIOS PnP Installation Check Structure (See section 4.4)</P></TD></TR><TR><TD VALIGN="TOP">BX</P></TD><TD VALIGN="TOP">CSN for this card, ISA PnP devices only.  If not an ISA PnP device then this parameter will be set to FFFFh.</P></TD></TR><TR><TD VALIGN="TOP">DX</P></TD><TD VALIGN="TOP">Read Data Port, (ISA PnP devices only.  If no ISA PnP devices then this parameter will be set to FFFFh.</P></TD></TR></TBODY></TABLE>
<BR></P><B>Disconnect Vector</B> (Real/Protected mode) - This vector is used to perform a cleanup from an unsuccessful boot attempt on an IPL device.  The system ROM will execute a FAR CALL to this location on IPL failure.</P>
<B>Bootstrap Entry Vector</B> (Real/Protected mode) - This vector is used primarily for RPL (Remote Program Load) support.  To RPL (bootstrap), the System ROM will execute a FAR CALL to this location.  The System ROM will call the Real/Protected Mode Bootstrap Entry Vector instead of INT 19h if:</P>
<P></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="46pt" VALIGN="TOP"><COL WIDTH="38pt" VALIGN="TOP"><COL WIDTH="355pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">a)</P></TD><TD VALIGN="TOP">The device indicates that it may function as an IPL device,</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">b)</P></TD><TD VALIGN="TOP">The device indicates that it does not support the  INT 13h Block Mode interface,</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">c)</P></TD><TD VALIGN="TOP">The device has a non-null Bootstrap Entry Vector,</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">d)</P></TD><TD VALIGN="TOP">The Real/Protected Mode Boot Connection Vector is null.</P></TD></TR></TBODY></TABLE>
<BR></P>The method for supporting RPL is beyond the scope of this specification.  A separate specification should define the explicit requirements for supporting RPL devices.</P>
<B>Reserved </B>- Reserved for Expansion</P>
<B>Static Resource Information Vector</B> - This vector may be used by non-Plug and Play devices to report static resource configuration information.  Plug and Play devices should not support the Static Resource Information Vector for reporting their configuration information.  This vector should be callable both before and/or after the option ROM has been initialized.  The call interface for the Static Resource Information Vector is as follows:</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="79pt" VALIGN="TOP"><COL WIDTH="367pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">Entry:  <BR>ES:DI</P></TD><TD VALIGN="TOP">Pointer to memory buffer to hold the device's static resource configuration information.  The buffer should be a minimum of 1024 bytes.  This information should follow the System Device Node data structure, except that the <I>Device node number </I>field should always be set to 0, and the information returned should only specify the currently allocated resources <I>(Allocated resource configuration descriptor block)</I> and not the block of possible resources <I>(Possible resource configuration descriptor block)</I>.  The <I>Possible resource configuration descriptor block </I>should only contain the <I>END_TAG </I>resource descriptor to indicate that there are no alternative resource configuration settings for this device because the resource configuration for this device is static.  Refer to the <I>Plug and Play ISA Specification</I> under the section labeled <I>Plug and Play Resources </I>for more information about the resource descriptors.  This data structure has the following format:</P></TD></TR></TBODY></TABLE>
<BR></P></P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="226pt" VALIGN="TOP"><COL WIDTH="94pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Field</B></P></TD><TD VALIGN="TOP"><B>Size</B></P></TD></TR><TR><TD VALIGN="TOP">Size of the device node</P></TD><TD VALIGN="TOP">WORD</P></TD></TR><TR><TD VALIGN="TOP">Device node number/handle</P></TD><TD VALIGN="TOP">BYTE</P></TD></TR><TR><TD VALIGN="TOP">Device product identifier</P></TD><TD VALIGN="TOP">DWORD</P></TD></TR><TR><TD VALIGN="TOP">Device type code</P></TD><TD VALIGN="TOP">3 BYTES</P></TD></TR><TR><TD VALIGN="TOP">Device node attribute bit-field</P></TD><TD VALIGN="TOP">WORD</P></TD></TR><TR><TD VALIGN="TOP">Allocated resource configuration descriptor block</P></TD><TD VALIGN="TOP">VARIABLE</P></TD></TR><TR><TD VALIGN="TOP">Possible resource configuration descriptor block - should only specify the <I>END_TAG </I>resource descriptor</P></TD><TD VALIGN="TOP">2 BYTES </P></TD></TR><TR><TD VALIGN="TOP">Compatible device identifiers</P></TD><TD VALIGN="TOP">VARIABLE</P></TD></TR></TBODY></TABLE>
<BR></P></P>
Refer to section 4.2 for a complete description of the elements that make up the System Device Node data structure.</P>
For example, an existing, non-Plug and Play SCSI card vendor could choose to rev the SCSI board's Option ROM to support the Plug and Play Expansion Header.  While this card wouldn't gain any of the configuration benefits provided to full hardware Plug and Play cards, it would allow Plug and Play software to determine the devices configuration and thus ensure that Plug and Play cards will map around the static SCSI board's allocated resources.</P>
 </P></BODY></HTML>
