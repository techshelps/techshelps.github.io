<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.2 System Device Node Definition</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>4.2 System Device Node Definition</H3>  </P>
The System Device Node is the structure that represents a single embedded systemboard device.  The elements that make up this structure provide information that describe the device and the system resources that have been allocated to the device.  This includes reporting the system resources that have typically been reserved for standard PC compatible systemboard devices, such as I/O port addresses from 00h to FFh.  The information for alternative or possible resource configuration settings can be provided in the System Device Node; however, it is not required.  The various possible resource settings can also be provided in a configuration file or an image of the configuration file, in ROM, supplied by the system vendor.  This configuration file would contain the necessary configuration information not contained in the System Device Node, and can provide more information to the user about the specific devices.  If the configuration information is contained in both the System Device Node and in a configuration file, then the system resources possibilities for the device that are specified in the configuration file should take precedence over the information contained in the system device node.  The following data structure defines the required elements for the base System Device Node.  Please refer to the <I>Plug and Play ISA Specification version 1.0A</I> (Section 4.6) for the maximum resources that a device node can use.</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="226pt" VALIGN="TOP"><COL WIDTH="94pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Field</B></P></TD><TD VALIGN="TOP"><B>Size</B></P></TD></TR><TR><TD VALIGN="TOP">Size of the device node</P></TD><TD VALIGN="TOP">WORD</P></TD></TR><TR><TD VALIGN="TOP">Device node number/handle</P></TD><TD VALIGN="TOP">BYTE</P></TD></TR><TR><TD VALIGN="TOP">Device product identifier</P></TD><TD VALIGN="TOP">DWORD</P></TD></TR><TR><TD VALIGN="TOP">Device type code</P></TD><TD VALIGN="TOP">3 BYTES</P></TD></TR><TR><TD VALIGN="TOP">Device node attribute bit-field</P></TD><TD VALIGN="TOP">WORD</P></TD></TR><TR><TD VALIGN="TOP">Allocated resource configuration descriptor block</P></TD><TD VALIGN="TOP">VARIABLE</P></TD></TR><TR><TD VALIGN="TOP">Possible resource configuration descriptor block </P></TD><TD VALIGN="TOP">VARIABLE</P></TD></TR><TR><TD VALIGN="TOP">Compatible device identifiers</P></TD><TD VALIGN="TOP">VARIABLE</P></TD></TR></TBODY></TABLE>
<BR></P><B><I>Size of Device Node:</I></B></P>
This field contains the size, in bytes, of the device node.</P>
<B><I>Device node number:</I></B></P>
The node number, or handle, is a unique identifier value assigned to the node by the system BIOS and is used to access the node information through the BIOS interface.</P>
<B><I>Device product identifier:</I></B></P>
This field is an EISA ID, which is a seven character ASCII representation of the product identifier compressed into a 32-bit identifier.  The seven character ID consists of a three character manufacturer code, a three character hexadecimal product identifier, and a one character hexadecimal revision number.  For example, the third revision of the ABC device might have an uncompressed ID such as ABC1003.</P>
The manufacturer code is a 3 uppercase character code that is compressed into 3 5-bit values as follows:</P>
<SPAN CLASS="list"><OL><LI>Find hex ASCII value for each letter</LI><LI>Subtract 40h from each ASCII value</LI><LI>Retain 5 least-significant bits for each letter by discarding upper 3-bits because they are always 0.</LI><LI>Compressed code = Concatenate 0 and the 3 5-bit values for the character.</LI></OL></SPAN>The format of the compressed product identifier is as follows:</P>
  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="48pt" VALIGN="TOP"><COL WIDTH="369pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Byte</B></P></TD><TD VALIGN="TOP"><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP">0</P></TD><TD VALIGN="TOP">Bit 7:        Reserved (0)</P>
Bits 6-2:  1st character of the compressed manufacturer code</P>
Bits 1-0:  Upper 2 bits of the 2nd character of the compressed manufacturer code</P></TD></TR><TR><TD VALIGN="TOP">1</P></TD><TD VALIGN="TOP">Bits 7-5:  Lower 3 bits of the 2nd character of the compressed manufacturer code.  </P>
Bits 4-0:  3rd character of the compressed manufacturer code.</P>
                  (bit 4 is most significant)</P></TD></TR><TR><TD VALIGN="TOP">2</P></TD><TD VALIGN="TOP">Bits 7-4:  1st hexadecimal digit of the product number.  (bit 7 is most significant)</P>
Bits 3-0:  2nd hexadecimal digit of the product number. (bit 3 is most significant)</P></TD></TR><TR><TD VALIGN="TOP">3</P></TD><TD VALIGN="TOP">Bits 7-4:  3rd hexadecimal digit of the product number (bit 7 is most significant)</P>
Bits 3-0:  Hexadecimal digit for the revision number.  (bit 3 is most significant)</P></TD></TR></TBODY></TABLE>
<BR></P>Refer to the <I>Device Identifier Reference Table &amp; Device Type Code Table </I>for a list of product identifiers.  This list includes generic Plug and Play device identifiers for the standard systemboard components.  See the References section of this document.</P>
<B><I>Device type code:</I></B></P>
This field is used to specify the type or characteristics of the node in the configuration list.  There are many different kinds of controllers and devices and through the type field you can identify which kind of component this node represents.</P>
The Device Type code is broken down into three byte fields.  The first byte in the Device Type Code consists of a Base Type code which indicates the general device type.  The second byte is the device Sub-Type and its definition is dependent upon the Base Type code.  The third byte defines the specific device programming interface, IF. Type, based on the Base Class and Sub-Class.</P>
Refer to the <I>Device Identifier Reference Table &amp; Device Type Code Table</I><B><I> </I></B>for a description of Device Type Codes.</P>
<B><I>Device node attribute bit-field:</I></B></P>
The device node attributes provide additional information about the state of the device and the capabilities of the device.  This bit-field is defined as follows:</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="55pt" VALIGN="TOP"><COL WIDTH="346pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">bit 15-9:</P></TD><TD VALIGN="TOP">reserved (0)</P></TD></TR><TR><TD VALIGN="TOP">bits 8:7</P></TD><TD VALIGN="TOP">0:0=device can only be configured for next boot (static)</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">0:1=device can be configured at runtime (dynamically)</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1:0=Reserved</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1:1=device can only be configured at runtime (dynamically)</P></TD></TR><TR><TD VALIGN="TOP">bit 6:</P></TD><TD VALIGN="TOP">0=device is not a removable system device</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1=device is a removable system device</P></TD></TR><TR><TD VALIGN="TOP">bit 5:</P></TD><TD VALIGN="TOP">0=device is not a docking station device</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1=device is a docking station device</P></TD></TR><TR><TD VALIGN="TOP">bit 4:</P></TD><TD VALIGN="TOP">0=device is not capable of being primary Initial Program Load (IPL) device</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1=device is capable of being primary IPL device</P></TD></TR><TR><TD VALIGN="TOP">bit 3:</P></TD><TD VALIGN="TOP">0=device is not capable of being primary input device</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1=device is capable of being primary input device</P></TD></TR><TR><TD VALIGN="TOP">bit 2:</P></TD><TD VALIGN="TOP">0=device is not capable of being primary output device</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1=device is capable of being primary output device</P></TD></TR><TR><TD VALIGN="TOP">bit 1:</P></TD><TD VALIGN="TOP">0=device is configurable</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1=device is not configurable</P></TD></TR><TR><TD VALIGN="TOP">bit 0:</P></TD><TD VALIGN="TOP">0=device can be disabled</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">1=device cannot be disabled</P></TD></TR></TBODY></TABLE>
<BR></P>Bit 0 specifies whether the device can be disabled or not.  If the device is disabled, it is assumed that the system resources that the device was using are available for use by other devices.</P>
Bit 1 indicates that the device is configurable.  This implies that the system device node provides the resource requirements for the device in the <I>Possible resource configuration descriptor block</I>.  If the device node does not specify the resource requirements or the device does not have any alternate system resource requirements, bit 1 must be set to indicate that the device is not configurable.</P>
 Bits 2-4 identify the capability of the device being designated as a boot device.</P>
Bit 5 indicates that the device resides on a docking station or convenience base.</P>
Bit 6 indicates that the device node represents a device that is removable on the base system unit, such as a removable floppy drive.</P>
Bits 8:7 use three of the four possible states to indicate if the device node can be configured dynamically, configured statically only for next boot or configured dynamically only.  The fourth state is reserved.</P>
<B><I>Allocated resource configuration descriptor block:</I></B></P>
The allocated resource descriptor block describes the system resources allocated to this device.  The format of the data contained in this block follows the format defined in the <I>Plug and Play ISA Specification</I> under the section labeled <I>Plug and Play Resources</I>.  The resource data is provided as a series of  data structures with each of the resource data structures having a unique tag or identifier.  These are the resource descriptors which specifically describe the standard PC system resources, such as Memory, I/O addresses, IRQs, and DMA channels.</P>
<B><I>Possible resource configuration descriptor block:</I></B></P>
The alternative resource selections that a particular device can support can be obtained from the data contained in this block.  The format of the data in this block follows the same format as the allocated resource descriptor block.  Refer to the <I>Plug and Play ISA Specification </I>under the section labeled <I>Plug and Play Resources</I> for a description of the data structures that make up the resource descriptor blocks.  These are the resource descriptors which specifically describe the standard PC system resources, such as Memory, I/O addresses, IRQs, and DMA channels.</P>
The information in this block can be used by the system BIOS and/or system software for selecting a conflict free resource allocation for this device without user intervention.  The data in this block is optional.  If this information is not provided in this structure, it can optionally be provided in a configuration file for the systemboard that defines the configuration information for the embedded devices.  If the possible resource configurations are not specified in either place the device is assumed to be a static device, which means it is not configurable.  If the information is provided in this descriptor block and in a configuration file, the possible resource selections must be specified in the same order that they are described in the configuration file.  If the node does not contain the alternative resource selections then the first byte in this block will contain the <I>End Tag descriptor</I>, which is described in <I>Plug and Play ISA Specification</I>,  to indicate that there are no resources in this block.</P>
<B><I>Compatible device identifiers:</I></B></P>
The compatible device identifiers block specifies the IDs of other devices that this device is compatible with.  System software can use this information to load compatible device drivers if necessary.  The format of the data contained in this block follows the format defined in the <I>Plug and Play ISA Specification</I> under the section labeled <I>Plug and Play Resources - Compatible Device ID</I>.</P>
 </P></BODY></HTML>
