<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.1    Definitions and Conventions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>1.1    Definitions and Conventions</H2>Erase Block:</P>
<P>A physical set of storage locations on the media which must be erased together. 'Block' and 'Erase Block' are equivalent terms.</P>
Extent:</P>
<P>A single subset of data belonging to a file. A file's data is composed of an ordered chain of extents.</P>
Pointer:</P>
<P>The indirect address of an entity (control structure or extent) on the media.  In this document, pointers have two components.  The upper 16 bits are a logical block number that references the erase block having the same number in the block number sequence field  (BlockSeq) of its Block Allocation Structure (see section 2.1). The lower 16 bits of the pointer is a logical index into the variable length array of allocation structures (Alloc[]) in the Block Allocation Structure.</P>
FNULL:</P>
<P>0xFFFFFFFFh. Only used in reference to FFS media pointers.</P>
byte:</P>
<P>8-bit value; Little-endian bit-ordering.</P>
word:</P>
<P>16-bit value; Little-endian bit- and byte-ordering.</P>
dword:</P>
<P>32-bit value; Little-endian bit- and byte-ordering.</P></BODY></HTML>
