<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.3.1    Directory Entry Fields</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>2.3.1    Directory Entry Fields</H3><B>Status</B><BR>Contains information specifying the type of structure this is.  It also contains the status of the pointers in the structure and the status of the attributes, time, date, and name.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="361pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Bit</P></TD><TD VALIGN="TOP"><P>Definition</P></TD></TR><TR><TD VALIGN="TOP"><P>0</P></TD><TD VALIGN="TOP"><P>Exists<BR>1    Exists<BR>0    Deleted</P></TD></TR><TR><TD VALIGN="TOP"><P>1</P></TD><TD VALIGN="TOP"><P>ATDFields<BR>1    ATD fields are most recent<BR>0    ATD fields are superseded</P></TD></TR><TR><TD VALIGN="TOP"><P>3-2</P></TD><TD VALIGN="TOP"><P>StructType<BR>00    DirEntry structure</P></TD></TR><TR><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>FNULLBits<BR>0    PrimaryPtr valid<BR>1    PrimaryPtr is FNULL</P></TD></TR><TR><TD VALIGN="TOP"><P>5</P></TD><TD VALIGN="TOP"><P>    0    SecondaryPtr valid<BR>1    SecondaryPtr is FNULL</P></TD></TR><TR><TD VALIGN="TOP"><P>6</P></TD><TD VALIGN="TOP"><P>    0    SiblingPtr valid<BR>1    SiblingPtr is FNULL</P></TD></TR><TR><TD VALIGN="TOP"><P>15-7</P></TD><TD VALIGN="TOP"><P>Reserved<BR>Must be 1s.</P></TD></TR></TBODY></TABLE>
<BR></P><B>Exists</B><BR>Indicates whether or not the entry under consideration is a valid member of the directory hierarchy.  The bit is cleared when a directory has been deleted.  Deleted entry information should be ignored.  However, if the SiblingPtr is not FNULL, then it is still valid and is used in traversing a sibling chain.</P>
<B>ATDFields</B><BR>Indicates whether or not the Attributes/Time/Date fields in this structure are the most current for this directory.  The first valid structure in the DirEntry chain to have this bit set has valid information, all others should be ignored.  This bit only affects the validity of these fields.</P>
<B>StructType</B><BR>Indicates that this structure is a directory entry.</P>
<B>FNULLBits</B><BR>Indicate whether the corresponding pointer is to be considered to have a value of FNULL, regardless of the actual value of the pointer.  The FNULL bits are cleared only after their respective pointers are assigned values by the file system.  Therefore, the FNULL bits are the first check for validity of these pointers. These bits provide yet another fail-safe measure to guarantee file system integrity in the event of a system crash while updating these pointers.</P>
<B>SiblingPtr</B><BR>A pointer to the next sibling directory or file at the same level in the hierarchy as the present directory.  This pointer is only valid if the SecondaryPtr is FNULL (or considered to have a value of FNULL as indicated by the FNULL bits). A pointer value of FNULL, or one that is considered to have a value of FNULL as indicated by the FNULL bits, indicates the last entry in the chain.</P>
<B>PrimaryPtr</B><BR>A pointer to the present directory's children which may be other directories or files.  The PrimaryPtr is used to locate the next entry in the DirEntry chain only if PrimaryPtr is not FNULL (and not considered to have a value of FNULL as indicated by the FNULL bits) and SecondaryPtr is FNULL (or considered to have a value of FNULL as indicated by the FNULL bits).  If both PrimaryPtr and SecondaryPtr are FNULL (or considered to have values of FNULL as indicated by the FNULL bits), then the end of the chain has been reached.</P>
<B>SecondaryPtr</B><BR>A pointer to a DirEntry which supersedes the current DirEntry.  The SecondaryPtr is used to indicate that a DirEntry structure has been completely superseded.  In this case SecondaryPtr is the only pointer field  in the DirEntry structure that is valid.</P>
<B>Attribute<BR></B>Directory creation attributes in MS-DOS format.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="361pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Bit</P></TD><TD VALIGN="TOP"><P>Definition</P></TD></TR><TR><TD VALIGN="TOP"><P>0</P></TD><TD VALIGN="TOP"><P>1    READONLY file</P></TD></TR><TR><TD VALIGN="TOP"><P>1</P></TD><TD VALIGN="TOP"><P>1    HIDDEN file or directory</P></TD></TR><TR><TD VALIGN="TOP"><P>2</P></TD><TD VALIGN="TOP"><P>1    SYSTEM file or directory</P></TD></TR><TR><TD VALIGN="TOP"><P>3</P></TD><TD VALIGN="TOP"><P>1    VOLUME label</P></TD></TR><TR><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>1    DIRECTORY</P>
<P>0    FILE</P></TD></TR><TR><TD VALIGN="TOP"><P>5</P></TD><TD VALIGN="TOP"><P>1    ARCHIVE</P></TD></TR><TR><TD VALIGN="TOP"><P>7-6</P></TD><TD VALIGN="TOP"><P>Reserved</P>
<P>    Must be 0's.</P></TD></TR></TBODY></TABLE>
<BR></P><B>Time<BR></B>Directory creation time in MS-DOS format.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="361pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Bit</P></TD><TD VALIGN="TOP"><P>Definition</P></TD></TR><TR><TD VALIGN="TOP"><P>4-0</P></TD><TD VALIGN="TOP"><P>Binary number of 2 second increments  (0-29, corresponding to 0-58 seconds).</P></TD></TR><TR><TD VALIGN="TOP"><P>10-5</P></TD><TD VALIGN="TOP"><P>Binary number of minutes (0-59).</P></TD></TR><TR><TD VALIGN="TOP"><P>15-11</P></TD><TD VALIGN="TOP"><P>Binary number of hours (0-23).</P></TD></TR></TBODY></TABLE>
<BR></P>Date<BR>Directory creation date in MS-DOS format.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="361pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Bit</P></TD><TD VALIGN="TOP"><P>Definition</P></TD></TR><TR><TD VALIGN="TOP"><P>4-0</P></TD><TD VALIGN="TOP"><P>Day of month (1-31)</P></TD></TR><TR><TD VALIGN="TOP"><P>8-5</P></TD><TD VALIGN="TOP"><P>Month (1-12)</P></TD></TR><TR><TD VALIGN="TOP"><P>15-9</P></TD><TD VALIGN="TOP"><P>Year (relative to 1980)</P></TD></TR></TBODY></TABLE>
<BR></P><B>VarStuctLen<BR></B>The sum total length, in bytes, of <B>all</B> the variable length structures appended <B>after</B> the end of the members of the DirEntry structure.  This field is zero, indicating that none of these structures is present.</P>
<B>NameLen</B><BR>The length, in bytes, of the following combined directory name and extension fields.  This field is added for the purpose of adding long file names in a future version of the file system.</P>
<B>Name[8]</B><BR>Directory name in MS-DOS format. Names are left-justified and padded with blanks (20h). Valid characters, as defined by MS-DOS for the 8.3 names, are any combination of letters, digits and the following special characters:</P>
    $ %  - _  ~ ! ( ) { } ^ # &amp;</P>
FFS does not distinguish between uppercase and lowercase letters.</P>
<B>Ext[3]</B><BR>Directory extension in MS-DOS format. Names are left-justified and padded with blanks (20h). Valid characters, as defined by MS-DOS for the 8.3 names, are any combination of letters, digits and the following special characters:</P>
    $ %  - _  ~ ! ( ) { } ^ # &amp;</P>
FFS does not distinguish between uppercase and lowercase letters.</P>
<P><img src="4908.gif"></P>
<B>Figure 3</B></P>
Figure 3 depicts how each pointer type within a DirEntry is related to all valid subsequent structures.</P></BODY></HTML>
