<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.4.1    File Entry Fields</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>2.4.1    File Entry Fields</H3><B>Status</B><BR>Contains information specifying the type of structure this is.  It also contains the status of the pointers in the structure and the status of the attributes, time, date, and name.</P>

<TABLE COLS="2" BORDER="1" CELLPADDING="7"><COLGROUP><COL WIDTH="69pt" VALIGN="TOP"><COL WIDTH="361pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Bit</P></TD><TD VALIGN="TOP"><P>Definition</P></TD></TR><TR><TD VALIGN="TOP"><P>0</P></TD><TD VALIGN="TOP"><P>Exists<BR>1    Exists<BR>0    Deleted</P></TD></TR><TR><TD VALIGN="TOP"><P>1</P></TD><TD VALIGN="TOP"><P>ATDFields<BR>1    ATD fields are most recent<BR>0    ATD fields are superseded</P></TD></TR><TR><TD VALIGN="TOP"><P>3-2</P></TD><TD VALIGN="TOP"><P>StructType<BR>01    FileEntry structure</P></TD></TR><TR><TD VALIGN="TOP"><P>4</P></TD><TD VALIGN="TOP"><P>FNULLBits<BR>0    PrimaryPtr valid<BR>1    PrimaryPtr is FNULL</P></TD></TR><TR><TD VALIGN="TOP"><P>5</P></TD><TD VALIGN="TOP"><P>    0    SecondaryPtr valid<BR>1    SecondaryPtr is FNULL</P></TD></TR><TR><TD VALIGN="TOP"><P>6</P></TD><TD VALIGN="TOP"><P>    0    SiblingPtr valid<BR>1    SiblingPtr is FNULL</P></TD></TR><TR><TD VALIGN="TOP"><P>7</P></TD><TD VALIGN="TOP"><P>Reserved<BR>Must be 1.</P></TD></TR><TR><TD VALIGN="TOP"><P>15-8</P></TD><TD VALIGN="TOP"><P>CompressionID<BR>The ID of the compression algorithm to be used when compressing and/or decompressing this file.</P></TD></TR></TBODY></TABLE>
<BR></P><B>Exists</B><BR>Indicates whether or not the entry under consideration is a valid member of the file hierarchy.  The bit is cleared when a file has been deleted.  Deleted entry information should be ignored.  However, if the SiblingPtr is not FNULL, then it is still valid and is used in traversing a sibling chain.</P>
<B>ATDFields</B><BR>Indicates whether or not the Attributes/Time/Date fields in this structure are the most current for this file.  The first valid structure in the FileEntry linked list to have this bit set has valid information, all others should be ignored.  This bit only affects the validity of these fields.</P>
<B>StructType</B><BR>Indicates that this structure is a file entry.</P>
<B>FNULL bits</B><BR>Indicate whether the corresponding pointer is to be considered to have a value of FNULL, regardless of the actual value of the pointer.  The FNULL bits are cleared only after their respective pointers are assigned values by the file system. Therefore, the FNULL bits are the first check for validity of these pointers. These bits provide yet another fail-safe measure to guarantee file system integrity in the event of a system crash while updating these pointers.</P>
<B>Reserved<BR></B>Must be 1.</P>
<B>CompressionID</B><BR>A code indicating the type of compression algorithm that is to be used when reading or writing to this file. Compression IDs of 00h to 7Fh are reserved by Microsoft for future use.  Multiple CompressionIDs can be used on a given partition.</P>
<B>SiblingPtr</B><BR>A pointer to the next sibling file or directory at the same level in the hierarchy as the present file. This pointer is only valid if the SecondaryPtr is FNULL (or considered to have a value of FNULL as indicated by the FNULL bits). A pointer value of FNULL, or one that is considered to have a value of FNULL as indicated by the FNULL bits, indicates the last entry in the chain.</P>
<B>PrimaryPtr</B><BR>A pointer to the present file's first FileInfo structure.  The PrimaryPtr is used to locate the first entry in the FileInfo chain only if PrimaryPtr is not FNULL (and not considered to have a value of FNULL as indicated by the FNULL bits) and SecondaryPtr is FNULL (or considered to have a value of FNULL as indicated by the FNULL bits). If both PrimaryPtr and SecondaryPtr are FNULL (or considered to have values of FNULL as indicated by the FNULL bits), then the end of the chain has been reached.</P>
<B>SecondaryPtr</B><BR>A pointer to a FileEntry that supersedes the current FileEntry.  The SecondaryPtr is used to indicate that a FileEntry structure has been completely superseded.  In this case SecondaryPtr is the only pointer field in the FileEntry structure that is valid.</P>
<B>Attrib/Time/Date</B><BR>File creation/modification attributes, time, and date in MS-DOS format.  See previous bit field definitions.</P>
<B>VarStuctLen<BR></B>The sum total length, in bytes, of <B>all</B> the variable length structures appended <B>after</B> the end of the members of the FileEntry structure. This field must be zero, indicating that none of these structures is present.</P>
<B>NameLen</B><BR>The length, in bytes, of the following combined file name and extension fields.  This field is added for the purpose of adding long file names in a future version of the file system.</P>
<B>Name[8]</B><BR>File name in MS-DOS format. Names are left-justified and padded with blanks (20h). Valid characters, as defined by MS-DOS for the 8.3 names, are any combination of letters, digits and the following special characters:</P>
    $ %  - _  ~ ! ( ) { } ^ # &amp;</P>
FFS does not distinguish between uppercase and lowercase letters.</P>
<B>Ext[3]</B><BR>File extension in MS-DOS format. Names are left-justified and padded with blanks (20h). Valid characters, as defined by MS-DOS for the 8.3 names, are any combination of letters, digits and the following special characters:</P>
    $ %  - _  ~ ! ( ) { } ^ # &amp;</P>
FFS does not distinguish between uppercase and lowercase letters.</P>
<P><img src="4909.gif"></P>
<P>Figure 4</P>
Figure 4 depicts how each pointer type within a FileEntry is related to all valid subsequent structures.</P></BODY></HTML>
