<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.4.1. Maximal Decomposition</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H4>4.4.1. Maximal Decomposition</H4>The maximal decomposition contained in Appendix I: Unicode 1.1 Character List, p. 43 does contain some compatibility characters that are not in the compatibility zone. In general, compatibility characters are those that would not otherwise have been encoded, because they are in some sense variants of characters that have already been coded. The prime examples are the glyph variants in the compatibility zone: halfwidth characters, Arabic contextual form glyphs, and Arabic ligatures.</P>
Historically, a number of such characters were added to Unicode before there was a recognized "Compatibility Zone." Examples of these include Roman numerals, such as the <I>IV</I> "character." By the time such a zone was distinguished, it was impractical to move those characters to the zone. However, for the companies that form the Unicode consortium, it is important to be able to identify which characters are compatibility characters so that Unicode systems can treat them in a uniform way.</P>
Extreme care must be taken not to make artificial distinctions among characters. This is the reason, for example, that the IPA characters are identified with the Latin characters where possible. Users become very confused when they see an <I>Å</I> on the screen, but their search dialog does not find it—because it is <I>not</I> an <I>Å</I> (A-ring), it is an <I>Å</I> (Angstrom). Normally, many characters have different usages, such as "," for either thousands-separator (English) or decimal-separator (French). Unicode tries to avoid duplicating characters just because of specific usage in different languages.</P>
Identifying a character A as a compatibility variant of another character B implies that generally A can be remapped to B without loss of information other than formatting. Such remapping cannot always take place: many of the compatibility characters are in place just to allow systems to maintain one-to-one mappings to existing code sets. In such cases, a remapping would lose information that is felt to be important in the original set. A complete set of mappings is supplied in Appendix I: Unicode 1.1 Character List, p. 43, but implementations may choose to use a subset of these mappings in specific domains because of these issues.</P>
It is important to realize that the compatibility mappings are specific to a version of Unicode. Some changes may occur as the result of character additions in the future. For example, if new precomposed characters are added, it may result in the addition of mappings between those characters and the corresponding composed character sequences. If a new non-spacing mark is added, it may produce decompositions for precomposed characters that did not previously have decompositions.</P>
  </P>
<B>Note</B>   A large number of mappings are introduced by the very large number of additional characters in Unicode 1.1 from ISO/IEC 10646-1. Should errors be found in the mapping list in the future, errata notices will be made available through Unicode, Inc., and on the corresponding unicode.org FTP site.4</P>
  </P></BODY></HTML>
