<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Pictures</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<form name="x"><object classid="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" name="iv" width=0 height=0></object></form>
<h1><a name="pictures"></a>Pictures</h1>
<p>
An RTF file can include pictures created with other applications. These pictures can be in hexadecimal (the default) or binary format. Pictures are destinations, and begin with the \<b>pict</b> control word. The <b>\pict</b> keyword is preceded by<b> \*\shppict</b> destination control keyword as described in the following example. A picture destination has the following syntax:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=19%>&lt;pict&gt;</td>
<td width=81%>'{' <b>\pict</b> (&lt;brdr&gt;? &amp; &lt;shading&gt;? &amp; &lt;picttype&gt; &amp; &lt;pictsize&gt; &amp; &lt;metafileinfo&gt;?) &lt;data&gt; '}'</td>
</tr>
<tr valign=top>
<td width=19%>&lt;picttype&gt;</td>
<td width=81%>|<b> \emfblip</b> |<b> \pngblip</b> |<b> \jpegblip | \macpict</b> | <b><i>\pmmetafile</i></b> | <b><i>\wmetafile</i></b> | <b><i>\dibitmap</i></b> &lt;bitmapinfo&gt; | <b><i>\wbitmap </i></b>&lt;bitmapinfo&gt;</td>
</tr>
<tr valign=top>
<td width=19%>&lt;bitmapinfo&gt;</td>
<td width=81%><b><i>\wbmbitspixel</i> </b>&amp; <b><i>\wbmplanes</i></b> &amp; <b><i>\wbmwidthbytes</i></b></td>
</tr>
<tr valign=top>
<td width=19%>&lt;pictsize&gt;</td>
<td width=81%>(\<b><i>picw</i></b> &amp; <b><i>\pich</i></b>) \<i>picwgoal</i>? &amp; \<i>pichgoal</i>? <b><i>\picscalex</i></b>? &amp; <b><i>\picscaley</i></b>? &amp; <b>\picscaled</b>? &amp; <b><i>\piccropt</i></b>? &amp; <b><i>\piccropb</i></b>? &amp; <b><i>\piccropr</i></b>? &amp; <b><i>\piccropl</i></b>?</td>
</tr>
<tr valign=top>
<td width=19%>&lt;metafileinfo&gt;</td>
<td width=81%><b>\picbmp </b>&amp; <b>\<i>picbpp</i></b></td>
</tr>
<tr valign=top>
<td width=19%>&lt;data&gt;</td>
<td width=81%>(\<b><i>bin</i></b> #BDATA) | #SDATA</td>
</tr>
</table><br>
<p>
These control words are described in the following table. Some measurements in this table are in twips; a twip is one-twentieth of a point.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=17%><b>Control Word</b></td>
<td width=83%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=17%><b>\emfblip</b></td>
<td width=83%>Source of the picture is an EMF (enhanced metafile).</td>
</tr>
<tr valign=top>
<td width=17%><b>\pngblip</b></td>
<td width=83%>Source of the picture is a PNG.</td>
</tr>
<tr valign=top>
<td width=17%><b>\jpegblip</b></td>
<td width=83%>Source of the picture is a JPEG.</td>
</tr>
<tr valign=top>
<td width=17%><b>\shppict</b></td>
<td width=83%>Specifies a Word 97 picture. This is a destination control word.</td>
</tr>
<tr valign=top>
<td width=17%><b>\nonshppict</b></td>
<td width=83%>Specifies that Word 97 has written a<code> {\pict </code>destination that it will not read on input. This keyword is for compatibility with other readers.</td>
</tr>
<tr valign=top>
<td width=17%><b>\macpict</b></td>
<td width=83%>Source of the picture is QuickDraw.</td>
</tr>
<tr valign=top>
<td width=17%><b>\pmmetafile<i>N</i></b></td>
<td width=83%>Source of the picture is an OS/2 metafile. The <b><i>N</i></b> argument identifies the metafile type. The <b><i>N</i></b> values are described on page 43 of this Application Note.</td>
</tr>
<tr valign=top>
<td width=17%><b>\wmetafile<i>N</i></b></td>
<td width=83%>Source of the picture is a Windows metafile. The <b><i>N</i></b> argument identifies the metafile type (the default is 1).</td>
</tr>
<tr valign=top>
<td width=17%><b>\dibitmap<i>N</i></b></td>
<td width=83%>Source of the picture is a Windows device-independent bitmap. The <b><i>N</i></b> argument identifies the bitmap type (must equal 0).<p>
The information to be included in RTF from a Windows device-independent bitmap is the concatenation of the BITMAPINFO structure followed by the actual pixel data.</p>
</td>
</tr>
<tr valign=top>
<td width=17%><b>\wbitmap<i>N</i></b></td>
<td width=83%>Source of the picture is a Windows device-dependent bitmap. The <b><i>N</i></b> argument identifies the bitmap type (must equal 0).<p>
The information to be included in RTF from a Windows device-dependent bitmap is the result of the <b>GetBitmapBits </b>function.</p>
</td>
</tr>
</table><br>
<p>
<b>Example</b>:</p>
<pre><code>{\*\shppict {\pict \emfblip ….. }}{\nonshppict {\pict ….}}</code></pre>
<p>
For more information on the <b>GetDIBits </b>and <b>GetBitmapBits </b>functions and the structure of Windows device-independent and device-dependent bitmaps, see <i>Volume 1</i> and <i>Volume 2</i> of the <i>Programmer's Reference</i> in the Microsoft Windows 3.1 Software Development Kit.<b> </b>For best device-independence and interoperability with Microsoft products, however, use of the \<b>wbitmap</b> and \<b>dibitmap</b> control words is discouraged.<b> </b>Rather, bitmaps should be embedded within Windows metafiles and the \<b>wmetafile</b> control word used.<b> </b>For more information on embedding bitmaps within metafiles, see <i>Volume 1</i> and <i>Volume 2</i> of the <i>Programmer's Reference</i> in the Microsoft Windows 3.1 Software Development Kit.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td width=19%><b>Control word</b></td>
<td colspan=2 width=81%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td colspan=3 width=100%>Bitmap Information</td>
</tr>
<tr valign=top>
<td width=19%><b>\wbmbitspixel<i>N</i></b></td>
<td colspan=2 width=81%>Number of adjacent color bits on each plane needed to define a pixel (the default is 1).<b> </b> Possible values are 1 (monochrome), 4 (16 colors), 8 (256 colors) and 24 (<b>RGB</b>).</td>
</tr>
<tr valign=top>
<td width=19%><b>\wbmplanes<i>N</i></b></td>
<td colspan=2 width=81%>Number of bitmap color planes (must equal 1).</td>
</tr>
<tr valign=top>
<td width=19%><b>\wbmwidthbytes<i>N</i></b></td>
<td colspan=2 width=81%>Specifies the number of bytes in each raster line. This value must be an even number because the Windows graphics device interface (GDI) assumes that the bit values of a bitmap form an array of integer (two-byte) values. In other words, \<b>wbmwidthbytes</b> times 8 must be the next multiple of 16 greater than or equal to the \<b>picw</b> (bitmap width in pixels) value.</td>
</tr>
<tr valign=top>
<td colspan=3 width=100%>Picture Size, Scaling, and Cropping</td>
</tr>
<tr valign=top>
<td width=19%><b>\picw<i>N</i></b></td>
<td colspan=2 width=81%><i>xExt</i> field if the picture is a Windows metafile; picture width in pixels if the picture is a bitmap or from QuickDraw. The <b><i>N</i></b> argument is a long integer.</td>
</tr>
<tr valign=top>
<td width=19%><b>\pich<i>N</i></b></td>
<td colspan=2 width=81%><i>yExt</i> field if the picture is a Windows metafile; picture height in pixels if the picture is a bitmap or from QuickDraw. The <b><i>N</i></b> argument is a long integer.</td>
</tr>
<tr valign=top>
<td width=19%><b>\picwgoal<i>N</i></b></td>
<td colspan=2 width=81%>Desired width of the picture in twips. The <b><i>N</i></b> argument is a long integer.</td>
</tr>
<tr valign=top>
<td width=19%><b>\pichgoal<i>N</i></b></td>
<td colspan=2 width=81%>Desired height of the picture in twips. The <i><b>N</b> </i>argument is a long integer.</td>
</tr>
<tr valign=top>
<td width=19%><b>\picscalex<i>N</i></b></td>
<td colspan=2 width=81%>Horizontal scaling value. The <b><i>N</i></b> argument is a value representing a percentage (the default is 100).</td>
</tr>
<tr valign=top>
<td width=19%><b>\picscaley<i>N</i></b></td>
<td colspan=2 width=81%>Vertical scaling value. The <b><i>N</i></b> argument is a value representing a percentage (the default is 100).</td>
</tr>
<tr valign=top>
<td width=19%><b>\picscaled</b></td>
<td colspan=2 width=81%>Scales the picture to fit within the specified frame. Used only with \<b>macpict</b> pictures.</td>
</tr>
<tr valign=top>
<td width=19%><b>\picprop</b></td>
<td width=80%>Indicates there are shape properties applied to an inline picture. This is a destination control word.</td>
</tr>
<tr valign=top>
<td width=19%><b>\piccropt<i>N</i></b></td>
<td colspan=2 width=81%>Top cropping value in twips. A positive value crops toward the center of the picture; a negative value crops away from the center, adding a space border around picture (the default is 0).</td>
</tr>
<tr valign=top>
<td width=19%><b>\piccropb<i>N</i></b></td>
<td colspan=2 width=81%>Bottom cropping value in twips. A positive value crops toward the center of the picture; a negative value crops away from the center, adding a space border around picture (the default is 0).</td>
</tr>
<tr valign=top>
<td width=19%><b>\piccropl<i>N</i></b></td>
<td colspan=2 width=81%>Left cropping value in twips. A positive value crops toward the center of the picture; a negative value crops away from the center, adding a space border around picture (the default is 0).</td>
</tr>
<tr valign=top>
<td width=19%><b>\piccropr<i>N</i></b></td>
<td colspan=2 width=81%>Right cropping value in twips. A positive value crops toward the center of the picture; a negative value crops away from the center, adding a space border around picture (the default is 0).</td>
</tr>
<tr valign=top>
<td colspan=3 width=100%>Metafile Information</td>
</tr>
<tr valign=top>
<td width=19%><b>\picbmp</b></td>
<td colspan=2 width=81%>Specifies whether a metafile contains a bitmap.</td>
</tr>
<tr valign=top>
<td width=19%><b>\picbpp<i>N</i></b></td>
<td colspan=2 width=81%>Specifies the bits per pixel in a metafile bitmap. The valid range is 1–32, with 1, 4, 8, and 24 being recognized.</td>
</tr>
<tr valign=top>
<td colspan=3 width=100%>Picture Data</td>
</tr>
<tr valign=top>
<td width=19%><b>\bin<i>N</i></b></td>
<td colspan=2 width=81%>The picture is in binary format. The numeric parameter <b><i>N</i></b> is the number of bytes that follow. Unlike all other controls, this control word takes a 32-bit parameter.</td>
</tr>
<tr valign=top>
<td width=19%><b>\blipupi<i>N</i></b></td>
<td width=80%><b><i>N</i></b> represents units per inch on a picture (only certain image types need or output this)</td>
</tr>
<tr valign=top>
<td width=19%><b>\blipuid<i> </i>XXXXX</b></td>
<td width=80%>Used as: <code>{\*\blipuid <i>XXXXX</i>}</code> where <i>XXXX</i> is a 16-byte identification number for the image.</td>
</tr>
<tr valign=top>
<td width=19%><b>\bliptag<i>N</i></b></td>
<td width=80%>A mostly unique identifier for a picture, where <b><i>N </i></b>is a long integer value.</td>
</tr>
</table><br>
<p>
The \<b>wbitmap</b> control word is optional. If no other picture type is specified, the picture is assumed to be a Windows bitmap. If \<b>wmetafile</b> is specified, the <b><i>N</i></b> argument can be one of the following types.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=26%><b>Type</b></td>
<td width=74%><b><i>N</i> argument</b></td>
</tr>
<tr valign=top>
<td width=26%>MM_TEXT</td>
<td width=74%>1</td>
</tr>
<tr valign=top>
<td width=26%>MM_LOMETRIC</td>
<td width=74%>2</td>
</tr>
<tr valign=top>
<td width=26%>MM_HIMETRIC</td>
<td width=74%>3</td>
</tr>
<tr valign=top>
<td width=26%>MM_LOENGLISH</td>
<td width=74%>4</td>
</tr>
<tr valign=top>
<td width=26%>MM_HIENGLISH</td>
<td width=74%>5</td>
</tr>
<tr valign=top>
<td width=26%>MM_TWIPS</td>
<td width=74%>6</td>
</tr>
<tr valign=top>
<td width=26%>MM_ISOTROPIC</td>
<td width=74%>7</td>
</tr>
<tr valign=top>
<td width=26%>MM_ANISOTROPIC</td>
<td width=74%>8</td>
</tr>
</table><br>
<p>
For more information about these types, see volume 1 of the <i>Programmer’s Reference </i>in the Microsoft Windows 3.1 Software Development Kit.</p>
<p>
If \<b>pmmetafile</b> is specified, the <b><i>N</i></b> argument can be one of the following types.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=26%><b>Type</b></td>
<td width=74%><b><i>N</i> argument</b></td>
</tr>
<tr valign=top>
<td width=26%>PU_ARBITRARY</td>
<td width=74%>0x0004</td>
</tr>
<tr valign=top>
<td width=26%>PU_PELS</td>
<td width=74%>0x0008</td>
</tr>
<tr valign=top>
<td width=26%>PU_LOMETRIC</td>
<td width=74%>0x000C</td>
</tr>
<tr valign=top>
<td width=26%>PU_HIMETRIC</td>
<td width=74%>0x0010</td>
</tr>
<tr valign=top>
<td width=26%>PU_LOENGLISH</td>
<td width=74%>0x0014</td>
</tr>
<tr valign=top>
<td width=26%>PU_HIENGLISH</td>
<td width=74%>0x0018</td>
</tr>
<tr valign=top>
<td width=26%>PU_TWIPS</td>
<td width=74%>0x001C</td>
</tr>
</table><br>
<p>
For more information about these types, see volume 2 of the <i>OS/2 Programmer’s Reference</i>.</p>
<p>
Be careful with spaces following control words when dealing with pictures in binary format. When reading files, RTF considers the first space after a control word the delimiter and subsequent spaces part of the document text. Therefore, any extra spaces are attached to the picture, with unpredictable results.</p>
<p>
RTF writers should not use the carriage-return/linefeed (CR/LF) combination to break up pictures in binary format. If they do, the CR/LF combination is treated as literal text and considered part of the picture data.</p>
<p>
The picture in hexadecimal or binary format follows the picture-destination control words. The following example illustrates the destination format:</p>
<pre><code>{\pict\wbitmap0\picw170\pich77\wbmbitspixel1\wbmplanes1\wbmwidthbytes22
\picwgoal505
\pichgoal221
\picscalex172
\picscaley172
49f2000000000273023d1101a030
3901000a000000000273023d98
0048000200000275
02040000200010275023e000000000
273023d000002b90002b90002
b90002b90002b9
0002b90002b90002b90002b90002b90002
b92222b90002b90002b90
002b90002b9
0002b90002b90002b90002b9000</code></pre>
</BODY>
</HTML>
