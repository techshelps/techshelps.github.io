<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>List Table</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<form name="x"><object classid="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" name="iv" width=0 height=0></object></form>
<h1><a name="listtable"></a>List Table</h1>
<p>
Word 97 stores bullets and numbering information very differently from earlier versions of Word. In Word 6.0, for example, number formatting data is stored individually with each paragraph. In Word 97, however, all of the formatting information is stored in a pair of document-wide list tables which act as a style sheet, and each individual paragraph stores only an index to one of the tables, like a style index.</p>
<p>
There are two list tables in Word: the List table (destination <b>\listtable</b>), and the List Override table (destination <b>\listoverridetable).</b></p>
<p>
The first table Word stores is the List table. A List table is a list of lists (destination <b>\list</b>). Each list contains a number of list properties that pertain to the entire list, and a list of levels (destination \<b>listlevel)</b>, each of which contains properties that pertain only to that level.</p>
<h2>Top-level List Properties</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=19%><b>Control word</b></td>
<td width=81%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=19%><b>\listid<i>N</i></b></td>
<td width=81%>Each list must have a unique list ID that should be randomly generated. The value <b><i>N</i></b> is a long integer. The list ID cannot be between -1 and -5. </td>
</tr>
<tr valign=top>
<td width=19%><b>\listtemplateid<i>N</i></b></td>
<td width=81%>Each list should have a unique template ID as well, which also should be randomly generated. The template ID cannot be -1. The value <b><i>N</i></b> is a long integer. </td>
</tr>
<tr valign=top>
<td width=19%><b>\listsimple<i>N</i></b></td>
<td width=81%>1 if the list has one level; 0 if the list has nine levels</td>
</tr>
<tr valign=top>
<td width=19%><b>\listrestarthdn<i>N</i></b></td>
<td width=81%>1 if the list restarts at each section; 0 if not. Used for Word 7.0 compatibility only. </td>
</tr>
<tr valign=top>
<td width=19%><b>\listname</b></td>
<td width=81%>The argument for<b> \listname </b>is a string that is the name of this list. Names allow ListNum fields to specify the list they belong to. This is a destination control word.</td>
</tr>
</table><br>
<h2>List Levels</h2>
<p>
Each list consists of either one or nine list levels depending upon whether the <b>\listsimple </b>flag is set. Each list level contains a number of properties that specify the formatting for that level, such as the start-at value, the text string surrounding the number, its justification and indents, and so on.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=22%><b>Control word</b></td>
<td width=78%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=22%><b>\levelstartat<i>N</i></b></td>
<td width=78%><b><i>N</i></b> specifies the start-at value for the level</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelnfc<i>N</i></b></td>
<td width=78%>Specifies the number type for the level:<p>
0Arabic (1, 2, 3)</p>
<p>
1Uppercase Roman numeral (I, II, III)</p>
<p>
2Lowercase Roman numeral (i, ii, iii)</p>
<p>
3Uppercase letter (A, B, C)</p>
<p>
4Lowercase letter (a, b, c)</p>
<p>
5Ordinal number (1st, 2nd, 3rd)</p>
<p>
6Cardinal text number (One, Two Three)</p>
<p>
7Ordinal text number (First, Second, Third)</p>
<p>
22Arabic with leading zero (01, 02, 03, ..., 10, 11)</p>
<p>
23Bullet (no number at all)</p>
<p>
255No number</p>
</td>
</tr>
<tr valign=top>
<td width=22%><b>\leveljc<i>N</i></b></td>
<td width=78%>0Left justified<p>
1Center justified</p>
<p>
2Right justified</p>
</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelold<i>N</i></b></td>
<td width=78%>1 if this level was converted from Word 6.0 or 7.0, 0 if it is a native Word 97 level.</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelprev<i>N</i></b></td>
<td width=78%>1 if this level includes the text from the previous level (used for Word 7.0 compatibility only); otherwise, the value is 0 . This keyword will only be valid if the <b>\leveloldN </b>keyword is emitted.</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelprevspace<i>N</i></b></td>
<td width=78%>1 if this level includes the indentation from the previous level (used for Word 7.0 compatibility only); otherwise, the value is 0 . This keyword will only be valid if the <b>\leveloldN </b>keyword is emitted.</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelindent<i>N</i></b></td>
<td width=78%>Minimum distance from the left indent to the start of the paragraph text (used for Word 7.0 compatibility only). This keyword will only be valid if the \levelold<i>N</i> keyword is emitted.</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelspace<i>N</i></b></td>
<td width=78%>Minimum distance from the right edge of the number to the start of the paragraph text (used for Word 7.0 compatibility only). This keyword will only be valid if the <b>\levelold<i>N</i> </b>keyword is emitted.</td>
</tr>
<tr valign=top>
<td width=22%><b>\leveltext</b></td>
<td width=78%>The argument for this level should be the number format string for this level. The first character is the length of the string, and any numbers within the level should be replaced by the index of the level they represent. For example, a level three number such as “1.1.1.” would generate the following RTF: “<b>{\leveltext \’06\’00.\’01.\’02.}</b>” where the ’06 is the string length, the \’00, \’01, and \’02 are the level place holders, and the periods are the surrounding text. This is a destination control word.</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelnumbers</b></td>
<td width=78%>The argument for this destination should be a string that gives the offsets into the <b>\leveltext </b>of the level place holders. In the above example, “1.1.1.”, the <b>\levelnumbers </b>RTF should be<pre><code>{\levelnumbers \’01\’03\’05}</code></pre>
<p>
because the level place holders have indices 1, 3, and 5. This is a destination control word.</p>
</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelfollow<i>N</i></b></td>
<td width=78%>Specifies which character follows the level text:&nbsp; <p>
0Tab</p>
<p>
1Space</p>
<p>
2Nothing</p>
</td>
</tr>
<tr valign=top>
<td width=22%><b>\levellegal<i>N</i></b></td>
<td width=78%>1 if any list numbers from previous levels should be converted to arabic numbers; 0 if they should be left with the format specified by their own level’s definition.</td>
</tr>
<tr valign=top>
<td width=22%><b>\levelnorestart<i>N</i></b></td>
<td width=78%>1 if this level does not restart its count each time a number of a higher level is reached, 0 if this level does restart its count each time a number of a higher level is reached.</td>
</tr>
</table><br>
<p>
In addition to all of these properties, each list level can contain any character properties (all of which affect all text for that level) and any combination of three paragraph properties: left indents, first line left indents, and tabs—each of which must be of a special type: <b>jclisttab</b>. These paragraph properties will be automatically applied to any paragraph in the list.</p>
<h3>List Override Table</h3>
<p>
The List Override table is a list of list overrides (destination \<b>listoverride</b>). Each list override contains the <b>listid</b> of one of the lists in the List table, as well as a list of any properties it chooses to override. Each paragraph will contain a list override index (keyword <b>ls</b>) which is a 1-based index into this table. Most list overrides don’t override any properties—instead, they provide a level of indirection to a list. There are generally two types of list overrides: (1) formatting overrides, which allow a paragraph to be part of a list and are numbered along with the other members of the list, but have different formatting properties; and, (2) start-at overrides, which allow a paragraph to share the formatting properties of a list, but have a different start-at values. The first element in the document with each list override index takes the start-at value that the list override specifies as its value, while each subsequent element is assigned the number succeeding the previous element of the list.</p>
<p>
List overrides have a few top-level keywords, including a \<b>listoverridecount</b>, which contains a count of the number of levels whose format is overridden. This \<b>listoverridecount</b> should always be either 1 or 9, depending upon whether the list to be overridden is simple or multilevel. All of the actual override information is stored within a list of list override levels (destination \<b>lfolevel</b>).</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=26%><b>Control word</b></td>
<td width=74%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=26%><b>\listid<i>N</i></b></td>
<td width=74%>Should exactly match the <b>\listid</b> of one of the lists in the List table. The value <b><i>N </i></b>is a long integer.</td>
</tr>
<tr valign=top>
<td width=26%><b>\listoverridecount<i>N</i></b></td>
<td width=74%>Number of list override levels within this list override (from 0 or 9).</td>
</tr>
<tr valign=top>
<td width=26%><b>\ls</b></td>
<td width=74%>The (1-based) index of this \<b>listoverride</b> in the \<b>listoverride</b> table. This value should never be zero inside a \<b>listoverride</b>, and must be unique for all \<b>listoverrides</b> within a document. The valid values are from 1 to 2000.</td>
</tr>
</table><br>
<h3>List Override Level</h3>
<p>
Each list override level contains flags to specify whether the formatting or start-at values are being overridden for each level. If the format flag (<b>listoverrideformat</b>) is given, the <b>lfolevel</b> should also contain a list level (<b>listlevel</b>). If the start-at flag (<b>listoverridestart</b>) is given, a start-at value must be provided. If the start-at is overridden but the format is not, then a <b>levelstartat</b> should be provided in the <b>lfolevel</b> itself. If both start-at and format are overridden, put the <b>levelstartat</b> inside the <b>listlevel</b> contained in the <b>lfolevel</b>.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=25%><b>Control word</b></td>
<td width=75%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=25%><b>\listoverridestart<i>N</i></b></td>
<td width=75%>Should exactly match the <b>listID</b> of one of the lists in the List table. The value <b><i>N</i></b> is a long integer.</td>
</tr>
<tr valign=top>
<td width=25%><b>\listoverrideformat<i>N</i></b></td>
<td width=75%>Number of list override levels within this list override (should be either 1 or 9).</td>
</tr>
</table>
</BODY>
</HTML>
