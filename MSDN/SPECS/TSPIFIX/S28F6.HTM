<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.1.7.11  TSPI_phoneGetProcTable</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H1>3.1.7.11  TSPI_phoneGetProcTable</H1><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="96pt" VALIGN="TOP"><COL WIDTH="325pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Syntax</B></P></TD><TD VALIGN="TOP">BOOL<B> TSPI_phoneGetProcTable</B>(<I>dwTSPIVersion, lpPhoneProcTable</I>)<BR>This function allows the TAPI DLL to retrieve a procedure table of pointers to all the phone-related functions in the TSPI.</P></TD></TR><TR><TD VALIGN="TOP"><B>Parameters</B></P></TD><TD VALIGN="TOP">DWORD    <I>dwTSPIVersion<BR></I>Specifies the TSPI version that defines the list of entry points, parameter profiles, and syntax of functions in the procedure table.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">LPTSPI_PHONE_PROCS    <I>lpPhoneProcTable<BR></I>Specifies a far pointer to the procedure table that is to be filled in by the Service Provider with pointers to all the phone-related functions.</P></TD></TR><TR><TD VALIGN="TOP"><B>Return Value</B></P></TD><TD VALIGN="TOP">Returns <B>TRUE</B> if successful, otherwise <B>FALSE</B></P></TD></TR><TR><TD VALIGN="TOP"><B>Call States</B></P></TD><TD VALIGN="TOP">Not applicable.</P></TD></TR><TR><TD VALIGN="TOP"><B>Comments</B></P></TD><TD VALIGN="TOP">This function is typically invoked early in the initialization sequence to retrieve the phone-related entry points through which the Service Provider is accessed.  Entry points may be retrieved in this way for performance reasons; in some system environments this is much quicker than loading entry points by name.  The Service Provider must still export all of its entry points by name to support the early functions (such at <B>TSPI_phoneGetProcTable</B> itself) that must be invoked before the procedure table has been retrieved and the system environments in which entry points are always loaded by name.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">A Service Provider is allowed to limit its support to a subset of the functions defined in the TSPI specification.  However, it must fill in a valid procedure pointer for each of the functions in the procedure table.  This can be the address of a "stub" function that simply returns a "not supported" result code for unsupported functions.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">The TAPI DLL negotiates a TSPI version using <B>TSPI_phoneNegotiateTSPIVersion</B> before calling this function.  Since the device ID base has not been set this early in initialization, no device can be specified for the negotiation.  The TAPI DLL uses the special <I>dwDeviceID</I> value <B>INITIALIZE_NEGOTIATION</B> to signify that it is negotiating an "overall" interface version for the purpose of calling functions such as <B>TSPI_phoneGetProcTable</B>.</P></TD></TR><TR><TD VALIGN="TOP"><B>Comparison</B></P></TD><TD VALIGN="TOP">There is no corresponding function at the TAPI level.  All entry points at the TAPI level are strictly accessed through standard library entry point export and linkage mechanisms.</P></TD></TR><TR><TD VALIGN="TOP"><B>See Also</B></P></TD><TD VALIGN="TOP">Functions:  <B>TSPI_phoneNegotiateTSPIVersion<BR></B>Constants:  <B>INITIALIZE_NEGOTIATION</B></P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
