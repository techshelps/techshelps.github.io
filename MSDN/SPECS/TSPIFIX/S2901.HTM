<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.1.7.22  TSPI_phoneSetDeviceIDBase</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H1>3.1.7.22  TSPI_phoneSetDeviceIDBase</H1><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="96pt" VALIGN="TOP"><COL WIDTH="325pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Syntax</B></P></TD><TD VALIGN="TOP">void <B>TSPI_phoneSetDeviceIDBase</B>(<I>dwTSPIVersion, dwDeviceID</I>)<BR>This function tells the Service Provider what its lowest numbered phone device ID should be.</P></TD></TR><TR><TD VALIGN="TOP"><B>Parameters</B></P></TD><TD VALIGN="TOP">DWORD    <I>dwTSPIVersion<BR></I>Specifies the interface version under which the Service Provider and TAPI DLL operation for this function.  This version number has already been negotiated using TSPI_phoneNegotiateTSPIVersion.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">DWORD    <I>dwDeviceID<BR></I>Specifies the new base phone device ID from which the Service Provider should number its phone devices.</P></TD></TR><TR><TD VALIGN="TOP"><B>Return Value</B></P></TD><TD VALIGN="TOP">none</P></TD></TR><TR><TD VALIGN="TOP"><B>Call States</B></P></TD><TD VALIGN="TOP">Not applicable</P></TD></TR><TR><TD VALIGN="TOP"><B>Comments</B></P></TD><TD VALIGN="TOP">Under directed park, the application determines the address at which it wants to park the call. Under non directed park, the switch determines the address and provides this to the application. In either case, a parked call can be unparked by specifying this address.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">The Service Provider numbers its available phone devices contiguously starting at the  number set by this function.  For example, if the Service Provider supports 4 phones and this procedure is called with a base dwDeviceID of 5, the phones have device IDs 5 through  8  both  when  device  IDs  are  used  as "input" parameters (as in TSPI_phoneGetDevCaps) and when device IDs are used as "output" parameters (as in a returned  PHONEADDRESSCAPS  data  structure).   This  procedure may be called again, in which case device ID numbering changes for all subsequent requests.   The operation returns synchronously.  The device IDs before this procedure  is  called start at 0.  Since this procedure is called without an active   device   to   identify   the  interface  version,  it  includes  an already-negotiated  TSPI  version  number  defining the interface version at which the Service Provider is expected to operate for this function. </P></TD></TR><TR><TD VALIGN="TOP"><B>Comparison</B></P></TD><TD VALIGN="TOP">This function has no correspondence at the TAPI level, where device IDs are a zero-based range spanning all Service Providers.  This function is used to "divide up" the range of device IDs between different Service Providers.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">The responsibility for "offsetting" device IDs resides with the Service Providers rather than with the TAPI DLL to allow Service Provider designers maximum flexibility in defining extensions.  Since the Service Provider uses the same device IDs as the application level, device-specific extensions can pass device IDs back and forth to applications using consistent device ID numbering.</P></TD></TR><TR><TD VALIGN="TOP"><B>See Also</B></P></TD><TD VALIGN="TOP">none</P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
