<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.1.7.17  TSPI_phoneOpen</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H1>3.1.7.17  TSPI_phoneOpen</H1><P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="96pt" VALIGN="TOP"><COL WIDTH="325pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><B>Syntax</B></P></TD><TD VALIGN="TOP">BOOL<B> TSPI_phoneOpen</B>(dwDeviceID, htPhone, lphdPhone, dwTSPIVersion, phoneEventProc)</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">This function opens the phone device whose device ID is given, returning the Service Provider's opaque handle for the device and retaining the TAPI DLL's opaque handle for the device for use in subsequent calls to the <B>PHONEEVENT</B> procedure.</P></TD></TR><TR><TD VALIGN="TOP"><B>Parameters</B></P></TD><TD VALIGN="TOP">DWORD    dwDeviceID<BR>Identifies the phone device to be opened.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">HTAPIPHONE    htPhone<BR>Specifies the TAPI DLL's opaque handle for the phone device to be used in subsequent calls to the <B>PHONEEVENT</B> callback procedure to identify the device.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">LPHDRVPHONE    lphdPhone<BR>A far pointer to a <B>HDRVPHONE</B> where the Service Provider fills in its opaque handle for the phone device to be used by the TAPI DLL in subsequent calls to identify the device.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">DWORD    dwTSPIVersion<BR>The TSPI version negotiated through <B>TSPI_phoneNegotiateTSPIVersion</B> under which the Service Provider is willing to operate.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">PHONEEVENT    phoneEventProc<BR>A far pointer to the <B>PHONEEVENT</B> callback procedure supplied by the TAPI DLL that the Service Provider will call to report subsequent events on the phone.</P></TD></TR><TR><TD VALIGN="TOP"><B>Return Value</B></P></TD><TD VALIGN="TOP">Returns <B>TRUE</B> if the procedure is successful, otherwise <B>FALSE</B></P></TD></TR><TR><TD VALIGN="TOP"><B>Comments</B></P></TD><TD VALIGN="TOP">Opening a phone entitles the TAPI DLL to make further requests on the phone.  The phone becomes "active" in the sense that the Service Provider can report asynchronous events such as hookswitch changes or button presses.  The Service Provider reserves whatever non-sharable resources are required to manage the phone.  For example, opening a phone accessed through a comm port and modem should result in opening the comm port, making it no longer available for use by other applications.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">If the function is successful, both the TAPI DLL and the Service Provider become committed to operating under the specified interface version number for this open device.  Subsquent operations and events identified using the exchanged opaque phone handles conform to that interface version.  This commitment and the validity of the handles remain in effect until the TAPI DLL closes the phone using the <B>TSPI_phoneClose</B> operation or the Service Provider reports the <B>PHONE_CLOSE</B> event.  If the function is not successful, no such commitment is made and the handles are not valid.</P></TD></TR><TR><TD VALIGN="TOP"><B>Comparison</B></P></TD><TD VALIGN="TOP">This procedure does not correspond directly to any procedure at the TAPI level, at which the functions of enabling device-specific extensions and selecting different levels of event-reporting by means of a privilege level are included in the functionality defined by <B>phoneOpen</B>.  At the TSPI level enabling device-specific extensions is separated out into <B>TSPI_phoneNegotiateExtVersion</B>, and the Service Provider relies on the TAPI DLL to filter evnets to applications appropriately.  This procedure simply starts the "life cycle" of subsequent operations.</P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">In addition, the TAPI procedure allows for asynchronous execution while this one does not.</P></TD></TR><TR><TD VALIGN="TOP"><B>See Also</B></P></TD><TD VALIGN="TOP">Functions:  <B>TSPI_phoneClose, TSPI_phoneNegotiateTSPIVersion, PHONEEVENT</B></P></TD></TR><TR><TD VALIGN="TOP"></P></TD><TD VALIGN="TOP">Messages:  <B>PHONE_CLOSE</B></P></TD></TR></TBODY></TABLE>
<BR></P></BODY></HTML>
