<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.4.1.4  Opening and Closing Line Devices</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H3>2.4.1.4  Opening and Closing Line Devices</H3>After having performed basic initialization and possibly having retrieved device capabilities, the TAPI DLL must open the line device before it can access telephony functions on that line. When a line device has been opened successfully, the TAPI DLL is returned a handle representing the open line.</P>
TSPI_lineOpen</P>
Opens a specified line device for providing subsequent monitoring and/or control of the line.</P>
TSPI_lineClose</P>
Closes a specified opened line device.</P>
At the TAPI level, a line device can be specified to lineOpen in one of two ways: </P>
<SPAN CLASS="list"><UL><LI>A specific line device is selected by means of its line device ID. The lineOpen request will open the specified line device, possibly resulting in a TSPI_lineOpen call to the Service Provider (e.g., if the line was not already open). Applications interested in handling inbound calls will typically use specific line devices.</LI><br>
<LI>The app can specify that it wants to use any line device that has certain properties. The indication LINE_MAPPER is used instead of a specific line device ID. The properties are specified by means of the call parameters that the application intends to use. The TAPI DLL will satisfy this Open request with any available line device that supports the specified call parameters. This, of course, may fail. If successful, the caller can determine the line device ID by calling lineGetID on the handle to the open line device returned by lineOpen.</LI></UL><P>
To support LINE_MAPPER selection of lines, the Service Provider provides the function TSPI_lineConditionalMediaDetection.  This function indivisibly does two things: (1) it test for the ability of a line to support the requested call parameters and media mode, and (2) if successful, it commits the Service Provider to monitoring for the new media mode.  The TAPI DLL uses this function for different line devices to hunt for a line that meets the application's Open requirements.</P>
TSPI_lineConditionalMediaDetection</P>
Commits the Service Provider to the new media mode detection if it has the ability to support both this and the indicated call parameters.</P></BODY></HTML>
