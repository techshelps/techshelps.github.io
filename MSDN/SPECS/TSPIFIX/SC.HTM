<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.4  Calling Convention</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
</OBJECT></FORM>
<H1>1.4  Calling Convention</H1>  </P>
The Telephony SPI uses the same calling convention as Windows. This calling convention originated in Microsoft Pascal, and is, therefore, referred to as <I>the Pascal calling convention</I>. The Pascal calling convention specifies that:</P>
<SPAN CLASS="list"><UL><LI>Parameters are pushed onto the stack in the order in which they appear in the function call.</LI><LI>The code that restores the stack is part of the called function (rather than the calling function).</LI></UL></SPAN>This convention differs from that used in languages such as C. In C, parameters are pushed onto the stack in reverse order, and the calling function is responsible for restoring the stack.</P>
When developing applications in C, or in any language that does not use the Pascal calling convention, you must ensure that you use the Pascal calling convention for all Telephony API functions. In C, this requires you to declare the function with a PASCAL keyword. For example:</P>
LONG FAR PASCAL lineGetDevCaps(...)</P>
Alternatively, you may use the WINAPI macro defined in the Windows header file, as is done in the TSPI header file.  For example:</P>
LONG WINAPI lineGetDevCaps(...)</P></BODY></HTML>
