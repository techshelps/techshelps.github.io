<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.1.4  Memory Allocation</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>3.1.4  Memory Allocation</H2>  </P>
Several TSPI functions return large amounts of information to the TAPI DLL and the application calling the TAPI DLL.  The TAPI DLL and the application share the responsibility to allocate memory for this information; the Service Provider simply fills in data.  Some of the fields of these data structures are filled in by the TAPI DLL while others are filled in by the Service Provider.  The function descriptions in this chapter include tables that describe the division of responsibility between the TAPI DLL and Service Provider.  The Service Provider fills in the fields for which it is reponsibile.  It must preserve the values in fields for which the TAPI DLL is responsible.  In any case,  the Service Provider must fill in the fields it "owns" before reporting the operation complete.  Note that the filling of the data structure may be done synchronously or asynchronously.  See the description in the beginning of Chapter 5 for an explanation on how the Service Provider must deal with variable size structures.</P></BODY></HTML>
