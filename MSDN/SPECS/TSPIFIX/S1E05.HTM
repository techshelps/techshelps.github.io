<HTML><HEAD><META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252"><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.3.13  Life cycle of TSPI interactions</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">

</OBJECT></FORM>
<H2>2.3.13  Life cycle of TSPI interactions</H2>  </P>
So far, functions have been described individually.  This section describes the sequencing among different functions in the form of a "life cycle" of the order in which functions are called, together with what happens at those times.  The life cycle for phone devices is described first since it is the simplest and serves to illustrate the basic model.  A timeline for operations on phones can be described with the following illustration:</P>
<img src="LQ8B.gif"></P>
<B>The high-level life cycle of phone-related operations is shown.  Paired operations, such as Open and Close are shown using a bracketed notation.  Driver load/unload happens through the standard Device Driver procedures.  Once the Driver is loaded, the TAPI DLL can negotiate the TSPI version.  With this negotiated interface version, the phone is opened, operations are done, and the phone is eventually closed.  At any time, the TAPI DLL can negotiate regarding the version of device-specific extensions.  The SPI includes paired operations to select and cancel extension versions.  While an extension version is selected, the device operates strictly according to that device-specific extension version.</B></P></BODY></HTML>
