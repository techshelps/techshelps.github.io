<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ATL Article Overview</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_atl_article_overview"></a>ATL Article Overview</h1>
<p>
<a href="vcovrportingfromatl2.1.htm">Porting from ATL 2.1</a></p>
<p>
Articles in the Active Template Library (ATL) consist of the following:</p>
<p>
<a href="_atl_introduction_to_com_and_atl.htm">Introduction to COM and ATL</a> introduces the major concepts behind the Component Object Model (COM). This article also briefly explains what ATL is and when you should use it.</p>
<p>
<a href="_atl_creating_an_atl_project.htm">Creating an ATL Project</a> contains information on the ATL COM AppWizard and ATL Object Wizard.</p>
<p>
<a href="_atl_fundamentals_of_atl_com_objects.htm">Fundamentals of ATL COM Objects</a> discusses the relationship among various ATL classes and how those classes are implemented.</p>
<p>
<a href="vcconcompositecontrolfundamentals.htm">Composite Control Fundamentals</a> provides step-by-step instructions for creating a composite control. A composite control is a type of ActiveX control that can contain other ActiveX controls or Windows controls.</p>
<p>
<a href="vcconatlsupportfordhtmlcontrols.htm">ATL Support for DHTML Controls</a> provides step-by-step instructions for creating a DHTML control.</p>
<p>
<a href="vcconmmcsnapinwizard.htm">MMC Snap-In Wizard</a> discusses ATL support for Microsoft Management Console (MMC) Snap-In components.</p>
<p>
<a href="_atl_atl_window_classes.htm">ATL Window Classes</a> describes how to create, superclass, and subclass windows in ATL.</p>
<p>
<a href="_atl_connection_points.htm">Connection Points</a> explains what connection points are and how ATL implements them.</p>
<p>
<a href="_atl_enumerators.htm">Enumerators</a> describes the implementation and creation of enumerators in ATL.</p>
<p>
<a href="_atl_debugging_tips_for_atl_objects.htm">Debugging Tips for ATL Objects</a> tells you how to use ATL's built-in support for debugging <b>QueryInterface</b>, <b>AddRef</b>, and <b>Release</b> calls.</p>
<p>
<a href="_atl_atl_services.htm">ATL Services</a> covers the series of events that occur when a service is implemented. It also talks about some of the concepts related to developing a service.</p>
<p>
<a href="_atl_the_atl_registry_component_.28.registrar.29.htm">The ATL Registry Component (Registrar)</a> discusses ATL scripting syntax and replaceable parameters. It also explains how to set up a static link to the Registrar.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="_atl_atl_class_overview.htm">ATL Class Overview</a></p>
<p>
<a href="_atl_atl_tutorial.htm">ATL Tutorial</a></p>
</font></BODY>
</HTML>
