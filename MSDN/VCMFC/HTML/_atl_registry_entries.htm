<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registry Entries</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_registry_entries"></a>Registry Entries</h1>
<p>
DCOM introduced the concept of Application IDs (AppIDs), which group configuration options for one or more DCOM objects into a centralized location in the registry. You specify an AppID by indicating its value in the AppID named value under the object's CLSID.</p>
<p>
By default, an ATL-generated service uses its CLSID as the GUID for its AppID. Under <code>HKEY_CLASSES_ROOT\AppID</code>, you can specify DCOM-specific entries. Initially, two entries exist:
<ul type=disc>
<li>
<code>LocalService</code>, with a value equal to the name of the service. If this value exists, it is used instead of the <code>LocalServer32</code> key under the CLSID.<br><br></li>
<li>
<code>ServiceParameters</code>, with a value equal to <code>–Service</code>. This value specifies parameters that will be passed to the service when it is started. Note that these parameters are passed to the service's <b>ServiceMain</b> function, not <b>WinMain</b>.</li>
</ul>
<p>
Any DCOM service also needs to create another key under <code>HKEY_CLASSES_ROOT\AppID</code>. This key is equal to the name of the EXE and acts as a cross-reference, as it contains an AppID value pointing back to the AppID entries.</p>
</font></BODY>
</HTML>
