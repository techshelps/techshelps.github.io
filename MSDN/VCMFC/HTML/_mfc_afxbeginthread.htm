<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AfxBeginThread</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_afxbeginthread"></a>AfxBeginThread </h1>
<p>
<b>CWinThread*</b> <b>AfxBeginThread(</b> <b>AFX_THREADPROC</b> <i>pfnThreadProc</i><b>,</b> <b>LPVOID</b> <i>pParam</i><b>,</b> <b>int</b> <i>nPriority</i> <b>=</b> <b>THREAD_PRIORITY_NORMAL,</b> <b>UINT</b> <i>nStackSize</i> <b>=</b> <b>0,</b> <b>DWORD</b> <i>dwCreateFlags</i> <b>=</b> <b>0,</b> <b>LPSECURITY_ATTRIBUTES</b> <i>lpSecurityAttrs</i> <b>=</b> <b>NULL</b> <b>);</b></p>
<p>
<b>CWinThread*</b> <b>AfxBeginThread(</b> <b>CRuntimeClass*</b> <i>pThreadClass</i><b>,</b> <b>int</b> <i>nPriority</i> <b>=</b> <b>THREAD_PRIORITY_NORMAL,</b> <b>UINT</b> <i>nStackSize</i> <b>=</b> <b>0,</b> <b>DWORD</b> <i>dwCreateFlags</i> <b>=</b> <b>0,</b> <b>LPSECURITY_ATTRIBUTES</b> <i>lpSecurityAttrs</i> <b>=</b> <b>NULL</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Pointer to the newly created thread object.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pfnThreadProc</i></p>
<p class=indent>
Points to the controlling function for the worker thread. Cannot be <b>NULL</b>. This function must be declared as follows:</p>
<pre><code>UINT MyControllingFunction( LPVOID pParam );
</code></pre>
<p class=dt>
<i>pThreadClass</i></p>
<p class=indent>
The <a href="_mfc_runtime_class.htm">RUNTIME_CLASS</a> of an object derived from <a href="_mfc_cwinthread.htm">CWinThread</a>.</p>
<p class=dt>
<i>pParam</i></p>
<p class=indent>
Parameter to be passed to the controlling function as shown in the parameter to the function declaration in <i>pfnThreadProc</i>.</p>
<p class=dt>
<i>nPriority</i></p>
<p class=indent>
The desired priority of the thread. If 0, the same priority as the creating thread will be used. For a full list and description of the available priorities, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_SetThreadPriority">
</object><a href=JavaScript:alink_1.Click()>SetThreadPriority</a> in the <i>Win32 Programmer’s Reference</i>.</p>
<p class=dt>
<i>nStackSize</i></p>
<p class=indent>
Specifies the size in bytes of the stack for the new thread. If 0, the stack size defaults to the same size stack as the creating thread.</p>
<p class=dt>
<i>dwCreateFlags</i></p>
<p class=indent>
Specifies an additional flag that controls the creation of the thread. This flag can contain one of two values:
<ul type=disc>
<li>
<b>CREATE_SUSPENDED</b>&nbsp;&nbsp;&nbsp;Start the thread with a suspend count of one. The thread will not execute until <a href="_mfc_cwinthread.3a3a.resumethread.htm">ResumeThread</a> is called.<br><br></li>
<li>
<b>0</b>&nbsp;&nbsp;&nbsp;Start the thread immediately after creation.</li>
</ul>
<p class=dt>
<i>lpSecurityAttrs</i></p>
<p class=indent>
Points to a <b>SECURITY_ATTRIBUTES</b> structure that specifies the security attributes for the thread. If <b>NULL</b>, the same security attributes as the creating thread will be used. For more information on this structure, see the <i>Win32 Programmer’s Reference</i>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this function to create a new thread. The first form of <b>AfxBeginThread</b> creates a worker thread. The second form creates a user-interface thread. </p>
<p>
<b>AfxBeginThread</b> creates a new <b>CWinThread</b> object, calls its <a href="_mfc_cwinthread.3a3a.createthread.htm">CreateThread</a> function to start executing the thread, and returns a pointer to the thread. Checks are made throughout the procedure to make sure all objects are deallocated properly should any part of the creation fail. To end the thread, call <a href="_mfc_afxendthread.htm">AfxEndThread</a> from within the thread, or return from the controlling function of the worker thread.</p>
<p>
For more information on <b>AfxBeginThread</b>, see the articles <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Multithreading.3a_.Creating_Worker_Threads">
</object><a href=JavaScript:alink_2.Click()>Multithreading: Creating Worker Threads</a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Multithreading.3a_.Creating_User.2d.Interface_Threads">
</object><a href=JavaScript:alink_3.Click()>Multithreading: Creating User-Interface Threads</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_afxgetthread.htm">AfxGetThread</a></p>
</font></BODY>
</HTML>
