<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File I/O Classes</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_file_i.2f.o_classes"></a>File I/O Classes</h1>
<p>
These classes provide an interface to traditional disk files, in-memory files, Active streams, and Windows sockets. All of the classes derived from <b>CFile</b> can be used with a <b>CArchive</b> object to perform serialization.</p>
<p>
Use the following classes, particularly <b>CArchive</b> and <b>CFile</b>, if you write your own input/output processing. Normally you don’t need to derive from these classes. If you use the application framework, the default implementations of the Open and Save commands on the File menu will handle file I/O (using class <b>CArchive</b>), as long as you override your document’s <b>Serialize</b> function to supply details about how a document “serializes” its contents. For more information about the file classes and serialization, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Files_in_MFC">
</object><a href=JavaScript:alink_1.Click()>Files in MFC</a> and the article <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Serialization_.28.Object_Persistence.29">
</object><a href=JavaScript:alink_2.Click()>Serialization (Object Persistence)</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p class=dt>
<a href="_mfc_cfile.htm">CFile</a></p>
<p class=indent>
Provides a file interface to binary disk files.</p>
<p class=dt>
<a href="_mfc_cstdiofile.htm">CStdioFile</a></p>
<p class=indent>
Provides a <b>CFile</b> interface to buffered stream disk files, usually in text mode.</p>
<p class=dt>
<a href="_mfc_cmemfile.htm">CMemFile</a></p>
<p class=indent>
Provides a <b>CFile</b> interface to in-memory files.</p>
<p class=dt>
<a href="_mfc_csharedfile.htm">CSharedFile</a></p>
<p class=indent>
Provides a <b>CFile</b> interface to shared in-memory files.</p>
<p class=dt>
<a href="_mfc_colestreamfile.htm">COleStreamFile</a></p>
<p class=indent>
Uses the COM <b>IStream</b> interface to provide <b>CFile</b> access to compound files.</p>
<p class=dt>
<a href="_mfc_csocketfile.htm">CSocketFile</a></p>
<p class=indent>
Provides a <b>CFile</b> interface to a Windows Socket.</p>
<p class=label>
<b>Related Classes</b></p>
<p class=dt>
<a href="_mfc_carchive.htm">CArchive</a></p>
<p class=indent>
Cooperates with a <b>CFile</b> object to implement persistent storage for objects through serialization (see <a href="_mfc_cobject.3a3a.serialize.htm">CObject::Serialize</a>).</p>
<p class=dt>
<a href="_mfc_carchiveexception.htm">CArchiveException</a></p>
<p class=indent>
An archive exception.</p>
<p class=dt>
<a href="_mfc_cfileexception.htm">CFileException</a></p>
<p class=indent>
A file-oriented exception.</p>
<p class=dt>
<a href="_mfc_cfiledialog.htm">CFileDialog</a></p>
<p class=indent>
Provides a standard dialog box for opening or saving a file.</p>
<p class=dt>
<a href="_mfc_chtmlstream.htm">CHtmlStream</a></p>
<p class=indent>
Handles caching HTML output. Functionally similar to <b>CMemFile</b>.</p>
<p class=dt>
<a href="_mfc_crecentfilelist.htm">CRecentFileList</a></p>
<p class=indent>
Maintains the most recently used (MRU) file list.</p>
</font></BODY>
</HTML>
