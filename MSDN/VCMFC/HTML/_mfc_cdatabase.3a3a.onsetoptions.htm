<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDatabase::OnSetOptions</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdatabase.3a3a.onsetoptions"></a><sup></sup>CDatabase::OnSetOptions</h1>
<p>
<b>virtual</b> <b>void</b> <b>OnSetOptions(</b> <b>HSTMT</b> <i>hstmt</i> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>hstmt</i></p>
<p class=indent>
The ODBC statement handle for which options are being set.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The framework calls this member function when directly executing an SQL statement with the <b>ExecuteSQL</b> member function. <b>CRecordset::OnSetOptions</b> also calls this member function.</p>
<p>
<b>OnSetOptions</b> sets the login timeout value. If there have been previous calls to the <b>SetQueryTimeout</b> and member function, <b>OnSetOptions</b> reflects the current values; otherwise, it sets default values.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Prior to MFC 4.2, <b>OnSetOptions</b> also set the processing mode to either snychronous or asynchronous. Beginning with MFC 4.2, all operations are synchronous. To perform an asynchronous operation, you must make a direct call to the ODBC API function <b>SQLSetPos</b>.</p>
<p>
You do not need to override <b>OnSetOptions</b> to change the timeout value. Instead, to customize the query timeout value, call <b>SetQueryTimeout</b> before creating a recordset; <b>OnSetOptions</b> will use the new value. The values set apply to subsequent operations on all recordsets or direct SQL calls.</p>
<p>
Override <b>OnSetOptions</b> if you want to set additional options. Your override should call the base class <b>OnSetOptions</b> either before or after you call the ODBC API function <b>::SQLSetStmtOption</b>. Follow the method illustrated in the framework’s default implementation of <b>OnSetOptions</b>.</p>
<p>
<a href="_mfc_cdatabase.htm">CDatabase Overview</a>  |&nbsp; <a href="_mfc_cdatabase_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdatabase.3a3a.executesql.htm">CDatabase::ExecuteSQL</a>, <a href="_mfc_cdatabase.3a3a.setquerytimeout.htm">CDatabase::SetQueryTimeout</a>, <a href="_mfc_crecordset.3a3a.onsetoptions.htm">CRecordset::OnSetOptions</a></p>
</font></BODY>
</HTML>
