<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDaoTableDef</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdaotabledef"></a>CDaoTableDef</h1>
<p>
<img src="cdtbldef.gif" border=0></p>
<p>
A <b>CDaoTableDef</b> object represents the stored definition of a base table or an attached table. Each DAO database object maintains a collection, called TableDefs, that contains all saved DAO tabledef objects.</p>
<p>
You manipulate a table definition using a <b>CDaoTableDef</b> object. For example, you can:
<ul type=disc>
<li>
Examine the field and index structure of any local, attached, or external table in a database.<br><br></li>
<li>
Call the <b>SetConnect</b> and <b>SetSourceTableName</b> member functions for attached tables, and use the <b>RefreshLink</b> member function to update connections to attached tables.<br><br></li>
<li>
Call the <b>CanUpdate</b> member function to determine if you can edit field definitions in the table.<br><br></li>
<li>
Get or set validation conditions using the <b>GetValidationRule</b> and <b>SetValidationRule</b>, and the <b>GetValidationText</b> and <b>SetValidationText</b> member functions.<br><br></li>
<li>
Use the <b>Open</b> member function to create a table-, dynaset-, or snapshot-type <b>CDaoRecordset</b> object. </li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The DAO database classes are distinct from the MFC database classes based on Open Database Connectivity (ODBC). All DAO database class names have the “CDao” prefix. You can still access ODBC data sources with the DAO classes; the DAO classes generally offer superior capabilities because they are specific to the Microsoft Jet database engine.</p>
<p>
Use tabledef objects either to work with an existing table or to create a new table:
<ol>
<li>
In all cases, first construct a <b>CDaoTableDef</b> object, supplying the a pointer to a <a href="_mfc_cdaodatabase.htm">CDaoDatabase</a><b> </b>object to which the table belongs.<br><br></li>
<li>
Then do the following, depending on what you want:<ul type=disc>
<li>
To use an existing saved table, call the tabledef object’s <a href="_mfc_cdaotabledef.3a3a.open.htm">Open</a> member function, supplying the name of the saved table. <br><br></li>
<li>
To create a new table, call the tabledef object’s <a href="_mfc_cdaotabledef.3a3a.create.htm">Create</a> member function, supplying the name of the table. Call <a href="_mfc_cdaotabledef.3a3a.createfield.htm">CreateField</a> and <a href="_mfc_cdaotabledef.3a3a.createindex.htm">CreateIndex</a> to add fields and indexes to the table. <br><br></li>
<li>
Call <a href="_mfc_cdaotabledef.3a3a.append.htm">Append</a> to save the table by appending it to the database’s TableDefs collection. <b>Create</b> puts the tabledef into an open state, so after calling <b>Create</b> you do not call <b>Open</b>.</li>
</ul>
</li>
</ol>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;The easiest way to create saved tables is to create them and store them in your database using Microsoft Access. Then you can open and use them in your MFC code.</p>
<p>
To use the tabledef object you have opened or created, create and open a <b>CDaoRecordset</b> object, specifying the name of the tabledef with a <b>dbOpenTable</b> value in the <i>nOpenType</i> parameter. </p>
<p>
To use a tabledef object to create a <b>CDaoRecordset</b> object, you typically create or open a tabledef as described above, then construct a recordset object, passing a pointer to your tabledef object when you call <a href="_mfc_cdaorecordset.3a3a.open.htm">CDaoRecordset::Open</a>. The tabledef you pass must be in an open state. For more information, see class <a href="_mfc_cdaorecordset.htm">CDaoRecordset</a>.</p>
<p>
When you finish using a tabledef object, call its <a href="_mfc_cdaorecordset.3a3a.close.htm">Close</a> member function; then destroy the tabledef object.</p>
<p>
For more information on tabledefs, see the articles <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Tabledef">
</object><a href=JavaScript:alink_1.Click()>DAO Tabledef</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Tabledef.3a_.Using_Tabledefs">
</object><a href=JavaScript:alink_2.Click()>DAO Tabledef: Using Tabledefs</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
<b>#include &lt;afxdao.h&gt;</b></p>
<p>
<a href="_mfc_cdaotabledef_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cobject.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Samples</b>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DAOVIEW">
</object><a href=JavaScript:alink_3.Click()>MFC Sample DAOVIEW</a>  |&nbsp; <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DAOTABLE">
</object><a href=JavaScript:alink_4.Click()>MFC Sample DAOTABLE</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdaodatabase.htm">CDaoDatabase</a>, <a href="_mfc_cdaorecordset.htm">CDaoRecordset</a></p>
</font></BODY>
</HTML>
