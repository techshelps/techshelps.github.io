<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CComAutoThreadModule</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_ccomautothreadmodule"></a>CComAutoThreadModule</h1>
<p>
<b>template&lt; class </b><i>ThreadAllocator</i><b> = CComSimpleThreadAllocator &gt;<br>
class CComAutoThreadModule : public CComModule</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>ThreadAllocator</i></p>
<p class=indent>
[in] The class managing thread selection. The default value is <a href="_atl_ccomsimplethreadallocator.htm">CComSimpleThreadAllocator</a>.</p>
<p>
<b>CComAutoThreadModule</b> derives from <a href="_atl_ccommodule.htm">CComModule</a> to implement a thread-pooled, apartment-model COM server for EXEs and Windows NT services. <b>CComAutoThreadModule</b> uses <a href="_atl_ccomapartment.htm">CComApartment</a> to manage an apartment for each thread in the module.</p>
<p>
Derive your module from <b>CComAutoThreadModule</b> when you want to create objects in multiple apartments. You must also include the <a href="_atl_declare_classfactory_auto_thread.htm">DECLARE_CLASSFACTORY_AUTO_THREAD</a> macro in your object’s class definition to specify <a href="_atl_ccomclassfactoryautothread.htm">CComClassFactoryAutoThread</a> as the class factory.</p>
<p>
By default, the ATL COM AppWizard will derive your module from <b>CComModule</b>. To use <b>CComAutoThreadModule</b>, modify the class definition. For example:</p>
<pre><code>class CMyModule : 
public CComAutoThreadModule&lt;CComSimpleThreadAllocator&gt;
{
public:
 &nbsp; LONG Unlock( )
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; LONG l = CComAutoThreadModule&lt;ComSimpleThreadAllocator&gt;::Unlock( );
 &nbsp;&nbsp;&nbsp;&nbsp; if (l == 0)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PostThreadMessage(dwThreadID, WM_QUIT, 0, 0);
 &nbsp;&nbsp;&nbsp;&nbsp; return l;
 &nbsp; }

 &nbsp; DWORD dwThreadID;
};</code></pre>
<p>
For more information about the AppWizard, see the article <a href="_atl_creating_an_atl_project.htm">Creating an ATL Project</a>.</p>
<p>
<b>#include &lt;atlbase.h&gt;</b></p>
<p>
<a href="_atl_ccomautothreadmodule_class_members.htm">Class Members</a></p>
</font></BODY>
</HTML>
