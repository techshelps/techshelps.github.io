<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWnd::GetDSCCursor</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwnd.3a3a.getdsccursor"></a><sup></sup>CWnd::GetDSCCursor</h1>
<p>
<b>IUnknown *</b> <b>GetDSCCursor(</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
A pointer to a cursor that is defined by a data-source control. MFC takes care of calling <b>AddRef</b> for the pointer.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to retrieve a pointer to the underlying cursor that is defined by the DataSource, UserName, Password, and SQL properties of the data-source control. Use the returned pointer to set the ICursor property of a complex data-bound control, such as the data-bound grid control. A data-source control will not become active until the first bound control requests its cursor. This can happen either explicitly by a call to <b>GetDSCCursor</b> or implicitly by the MFC binding manager. In either case, you can force a data-source control to become active by calling <b>GetDSCCursor</b> and then calling <b>Release</b> on the returned pointer to <b>IUnknown</b>. Activation will cause the data-source control to attempt to connect to the underlying data source. The returned pointer might be used in the following context:</p>
<pre><code>BOOL CMyDlg::OnInitDialog()
{
   // Find the child controls on the dialog
   CWnd* pDSC = GetDlgItem(IDC_REMOTEDATACONTROL);
   CDBListBox* pList = (CDBListBox*)
   GetDlgItem(IDC_DBLISTBOX);

   // Tell the MFC binding manager that we are
   // binding DISPID 3 to the data-source control.
   pList-&gt;BindProperty(0x3, pDSC);

   // Tell the listbox which field to expose as its
   // bound column
   pList-&gt;SetBoundColumn(_T("CourseID"));

   // Tell the listbox which cursor and column
   // to populate its list from
   pList-&gt;SetListField(_T("CourseID"));
   IPUNKNOWN *pcursor = pDSC-&gt;GetDSCCursor();
   ...
   if (!pcursor)
   {
   // The pointer was not successfully assigned.
      return FALSE;
   }
   // The pointer was successfully assigned,
   pList-&gt;SetRowSource(pcursor);
   ...
   pcursor-&gt;Release();
   return TRUE;
}
</code></pre>
<p>
<a href="_mfc_cwnd.htm">CWnd Overview</a>  |&nbsp; <a href="_mfc_cwnd_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cwnd.3a3a.binddefaultproperty.htm">CWnd::BindDefaultProperty</a>, <a href="_mfc_cwnd.3a3a.bindproperty.htm">CWnd::BindProperty</a></p>
</font></BODY>
</HTML>
