<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWnd::SetTimer</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwnd.3a3a.settimer"></a>CWnd::SetTimer</h1>
<p>
<b>UINT</b> <b>SetTimer(</b> <b>UINT</b> <i>nIDEvent</i><b>,</b> <b>UINT</b> <i>nElapse</i><b>,</b> <b>void (CALLBACK</b> <b>EXPORT*</b> <i>lpfnTimer</i><b>)(HWND,</b> <b>UINT,</b> <b>UINT,</b> <b>DWORD)</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
The timer identifier of the new timer if the function is successful. An application passes this value to the <a href="_mfc_cwnd.3a3a.killtimer.htm">KillTimer</a> member function to kill the timer. Nonzero if successful; otherwise 0.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nIDEvent</i></p>
<p class=indent>
Specifies a nonzero timer identifier.</p>
<p class=dt>
<i>nElapse</i></p>
<p class=indent>
Specifies the time-out value, in milliseconds.</p>
<p class=dt>
<i>lpfnTimer</i></p>
<p class=indent>
Specifies the address of the application-supplied <code>TimerProc</code> callback function that processes the <b>WM_TIMER</b> messages. If this parameter is <b>NULL</b>, the <b>WM_TIMER</b> messages are placed in the application’s message queue and handled by the <b>CWnd</b> object.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Installs a system timer. A time-out value is specified, and every time a time-out occurs, the system posts a <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_WM_TIMER">
</object><a href=JavaScript:alink_1.Click()>WM_TIMER</a> message to the installing application’s message queue or passes the message to an application-defined <b>TimerProc </b>callback function. </p>
<p>
The <i>lpfnTimer</i> callback function need not be named <b>TimerProc</b>, but it must be defined as follows:</p>
<pre><code>void CALLBACK EXPORT TimerProc(
 &nbsp; HWND hWnd,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // handle of CWnd that called SetTimer
 &nbsp; UINT nMsg,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // WM_TIMER
 &nbsp; UINT nIDEvent&nbsp;&nbsp; // timer identification
 &nbsp; DWORD dwTime&nbsp;&nbsp;&nbsp; // system time
);
</code></pre>
<p>
Timers are a limited global resource; therefore it is important that an application check the value returned by the <b>SetTimer</b> member function to verify that a timer is actually available.</p>
<p>
<a href="_mfc_cwnd.htm">CWnd Overview</a>  |&nbsp; <a href="_mfc_cwnd_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_WM_TIMER">
</object><a href=JavaScript:alink_2.Click()>WM_TIMER</a>, <a href="_mfc_cwnd.3a3a.killtimer.htm">CWnd::KillTimer</a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_SetTimer">
</object><a href=JavaScript:alink_3.Click()>::SetTimer</a></p>
</font></BODY>
</HTML>
