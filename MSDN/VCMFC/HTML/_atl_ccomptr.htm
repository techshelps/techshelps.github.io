<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CComPtr</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_ccomptr"></a>CComPtr</h1>
<p>
<b>template&lt; class </b><i>T </i><b>&gt;<br>
class CComPtr</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>T</i></p>
<p class=indent>
A COM interface specifying the type of pointer to be stored.</p>
<p>
ATL uses <b>CComPtr</b> and <a href="_atl_ccomqiptr.htm">CComQIPtr</a> to manage COM interface pointers. Both classes perform automatic reference counting through calls to <b>AddRef</b> and <b>Release</b>. Overloaded operators handle pointer operations. <b>CComQIPtr</b> additionally supports automatic querying of interfaces though <b>QueryInterface</b>.</p>
<p>
The following code is from <b>CFirePropNotifyEvent::FireOnRequestEdit</b>:</p>
<pre><code>static HRESULT FireOnRequestEdit(IUnknown* pUnk, DISPID dispID)
{
 &nbsp; CComQIPtr&lt;IConnectionPointContainer, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;IID_IConnectionPointContainer&gt; pCPC(pUnk);
 &nbsp; if (!pCPC)
 &nbsp;&nbsp;&nbsp;&nbsp; return S_OK;

 &nbsp; CComPtr&lt;IConnectionPoint&gt; pCP;
 &nbsp; pCPC-&gt;FindConnectionPoint(IID_IPropertyNotifySink, &amp;pCP);
 &nbsp; if (!pCP)
 &nbsp;&nbsp;&nbsp;&nbsp; return S_OK;

 &nbsp; ...
};
</code></pre>
<p>
This example illustrates the following:
<ul type=disc>
<li>
The constructor for the <b>CComQIPtr</b> object, <code>pCPC</code>, calls <b>QueryInterface</b> on <code>pUnk</code> to obtain the <b>IConnectionPointContainer</b> pointer. The retrieved pointer is stored in <code>pCPC</code>.<br><br></li>
<li>
The function declares the <b>CComPtr</b> object, <code>pCP</code>, to hold an <b>IConnectionPoint</b> pointer.<br><br></li>
<li>
<b>IConnectionPointContainer::FindConnectionPoint</b> is called through <code>pCPC</code> to retrieve an <b>IConnectionPoint</b> pointer via <code>pCP</code>.</li>
</ul>
<p>
<b>#include &lt;atlbase.h&gt;</b></p>
<p>
<a href="_atl_ccomptr_class_members.htm">Class Members</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_atl_ccomptr.3a3a.ccomptr.htm">CComPtr::CComPtr</a>, <a href="_atl_ccomqiptr.3a3a.ccomqiptr.htm">CComQIPtr::CComQIPtr</a></p>
</font></BODY>
</HTML>
