<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Do I Support Free Threading in My Provider?</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcfaqhowdoisupportfreethreadinginmyprovider"></a>How Do I Support Free Threading in My Provider?</h1>
<p>
All of the OLE DB provider classes are thread safe and register entries are set accordingly. It is a good idea to support free threading to enhance performance in multiuser situations. To keep your provider thread safe, you must ensure that your code is blocked properly. Whenever you write or store data, you must block the access with critical sections. </p>
<p>
Each OLE DB template provider object has its own critical section. To make blocking easier, each new class you create should be a template class taking the parent class name as an argument. </p>
<p>
The following example shows how to block your code:</p>
<pre><code>template &lt;class T&gt;
class CMyObject&lt;T&gt; : public…

HRESULT MyObject::MyMethod(void)
{
   T* pT = (T*)this;      // this gets the parent class 

// You don't need to do anything if you are only reading information

// if you wish to write information, do the following
 &nbsp; pT-&gt;Lock();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // engages critical section in the object
 &nbsp; …;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // write whatever information you wish
 &nbsp; pT-&gt;Unlock();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // disengages the critical section
}
</code></pre>
<p>
For more information on how to protect critical sections with <b>Lock</b> and <b>Unlock</b>, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Multithreading.3a_.How_to_Use_the_Synchronization_Classes">
</object><a href=JavaScript:alink_1.Click()>Multithreading:How To Use the Synchronization Classes</a>.</p>
<p>
You must also ensure that any methods you override (like <b>Execute</b>) are thread safe.</p>
</font></BODY>
</HTML>
