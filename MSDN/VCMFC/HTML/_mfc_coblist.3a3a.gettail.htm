<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CObList::GetTail</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_coblist.3a3a.gettail"></a><sup></sup>CObList::GetTail  </h1>
<p>
<b>CObject*&amp;</b> <b>GetTail(</b> <b>);</b></p>
<p>
<b>CObject*</b> <b>GetTail(</b> <b>)</b> <b>const;</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
See the return value description for <a href="_mfc_coblist.3a3a.gethead.htm">GetHead</a>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Gets the <b>CObject</b> pointer that represents the tail element of this list. </p>
<p>
You must ensure that the list is not empty before calling <b>GetTail</b>. If the list is empty, then the Debug version of the Microsoft Foundation Class Library asserts. Use <a href="_mfc_coblist.3a3a.isempty.htm">IsEmpty</a> to verify that the list contains elements.</p>
<p class=label>
<b>Example</b></p>
<pre><code>CObList list;

list.AddHead( new CAge( 21 ) );
list.AddHead( new CAge( 40 ) ); // List now contains (40, 21).
ASSERT( *(CAge*) list.GetTail() == CAge( 21 ) );
</code></pre>
<p>
<a href="_mfc_coblist.htm">CObList Overview</a>  |&nbsp; <a href="_mfc_coblist_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_coblist.3a3a.addtail.htm">CObList::AddTail</a>, <a href="_mfc_coblist.3a3a.addhead.htm">CObList::AddHead</a>, <a href="_mfc_coblist.3a3a.removehead.htm">CObList::RemoveHead</a>, <a href="_mfc_coblist.3a3a.gethead.htm">CObList::GetHead</a></p>
</font></BODY>
</HTML>
