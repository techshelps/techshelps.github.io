<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CCmdTarget::OnCmdMsg</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_ccmdtarget.3a3a.oncmdmsg"></a><sup></sup>CCmdTarget::OnCmdMsg  </h1>
<p>
<b>virtual</b> <b>BOOL</b> <b>OnCmdMsg(</b> <b>UINT</b> <i>nID</i><b>,</b> <b>int</b> <i>nCode</i><b>,</b> <b>void*</b> <i>pExtra</i><b>,</b> <b>AFX_CMDHANDLERINFO*</b> <i>pHandlerInfo</i> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if the message is handled; otherwise 0.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nID</i></p>
<p class=indent>
Contains the command ID.</p>
<p class=dt>
<i>nCode</i></p>
<p class=indent>
Identifies the command notification code.</p>
<p class=dt>
<i>pExtra</i></p>
<p class=indent>
Used according to the value of <i>nCode</i>.</p>
<p class=dt>
<i>pHandlerInfo</i></p>
<p class=indent>
If not <b>NULL</b>, <b>OnCmdMsg</b> fills in the <b>pTarget</b> and <b>pmf</b> members of the <i>pHandlerInfo</i> structure instead of dispatching the command. Typically, this parameter should be <b>NULL</b>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Called by the framework to route and dispatch command messages and to handle the update of command user-interface objects. This is the main implementation routine of the framework command architecture.</p>
<p>
At run time, <b>OnCmdMsg</b> dispatches a command to other objects or handles the command itself by calling the root class <b>CCmdTarget::OnCmdMsg</b>, which does the actual message-map lookup. For a complete description of the default command routing, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Message_Handling_and_Mapping_Topics">
</object><a href=JavaScript:alink_1.Click()>Message Handling and Mapping Topics</a> in <i>Visual C++ Programmer's Guide</i>. </p>
<p>
On rare occasions, you may want to override this member function to extend the framework’s standard command routing. Refer to <a href="_mfcnotes_tn021.htm">Technical Note 21</a> for advanced details of the command-routing architecture. </p>
<p class=label>
<b>Example</b></p>
<pre><code>// This example illustrates extending the framework's standard command 
// route from the view to objects managed by the view.&nbsp; This example
// is from an object-oriented drawing application, similar to the
// DRAWCLI sample application, which draws and edits "shapes".

BOOL CMyView::OnCmdMsg(UINT nID, int nCode, void* pExtra,
 &nbsp;&nbsp;&nbsp;&nbsp; AFX_CMDHANDLERINFO* pHandlerInfo)
{
 &nbsp; // Extend the framework's command route from the view to
 &nbsp; // the application-specific CMyShape that is currently selected
 &nbsp; // in the view. m_pActiveShape is NULL if no shape object
 &nbsp; // is currently selected in the view.
 &nbsp; if ((m_pActiveShape != NULL)
 &nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; m_pActiveShape-&gt;OnCmdMsg(nID, nCode, pExtra, pHandlerInfo))
 &nbsp;&nbsp;&nbsp;&nbsp; return TRUE;

 &nbsp; // If the object(s) in the extended command route don't handle
 &nbsp; // the command, then let the base class OnCmdMsg handle it.
 &nbsp; return CView::OnCmdMsg(nID, nCode, pExtra, pHandlerInfo);
}

// The command handler for ID_SHAPE_COLOR (menu command to change
// the color of the currently selected shape) was added to
// the message map of CMyShape (note, not CMyView) using ClassWizard.&nbsp; 

// The menu item will be automatically enabled or disabled, depending 
// on whether a CMyShape is currently selected in the view, that is, 
// depending on whether CMyView::m_pActiveView is NULL.&nbsp; It is not 
// necessary to implement an ON_UPDATE_COMMAND_UI handler to enable 
// or disable the menu item.&nbsp; 

BEGIN_MESSAGE_MAP(CMyShape, CCmdTarget)
 &nbsp; //{{AFX_MSG_MAP(CMyShape)
 &nbsp; ON_COMMAND(ID_SHAPE_COLOR, OnShapeColor)
 &nbsp; //}}AFX_MSG_MAP
END_MESSAGE_MAP()
</code></pre>
<p>
<a href="_mfc_ccmdtarget.htm">CCmdTarget Overview</a>  |&nbsp; <a href="_mfc_ccmdtarget_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_ccmdui.htm">CCmdUI</a></p>
</font></BODY>
</HTML>
