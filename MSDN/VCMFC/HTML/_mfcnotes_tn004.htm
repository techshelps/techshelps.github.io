<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TN004: C++ Template Tool</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfcnotes_tn004"></a><sup></sup>TN004: C++ Template Tool</h1>
<p>
This note describes MFC template-class issues and the MFC TEMPLDEF template expansion tool.</p>
<p class=label>
<b>The Problem</b></p>
<p>
MFC uses template classes to implement the standard collection classes. Template classes are classes that can be expanded based on a type argument specified by the user. For the MFC standard collection classes, the classes in AFXCOLL.H and their implementations are already pre-expanded for you. To create your own collection classes for your own type, you can use AFXTEMPL.H which contains array, list, and map class templates using standard C++ template syntax. The TEMPLDEF tool is provided only for backward compatibility (in case you were using it to generate your own collection classes in previous versions).</p>
<p class=label>
<b>The TEMPLDEF Tool</b></p>
<p>
The TEMPLDEF tool is a template expander. TEMPLDEF uses a syntax similar to the ANSI language syntax. In order to use TEMPLDEF, you must build it first, much like any other sample. This sample is provided only for backward compatibility, since with this version of Visual C++, true C++ templates are fully supported as are the MFC template classes that use them (see <b>CList</b>, <b>CArray</b>, and <b>CMap</b> classes)</p>
<p>
A good way to get started is by examining four .CTT template classes provided with MFC (found in MFC Programming Utilities sample <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_TEMPLDEF">
</object><a href=JavaScript:alink_1.Click()>TEMPLDEF</a> subdirectory). The MKCOLL.BAT batch file gives examples of the command line syntax of the TEMPLDEF tool. The general form of the command line syntax is modeled after a C++ <b>typedef</b> of the equivalent template class. For example,</p>
<pre><code>typedef CLinkedList&lt;CMyObj&gt; CMyLinkedList;
</code></pre>
<p>
becomes</p>
<pre><code>TEMPLDEF "CLinkedList&lt;CMyObj&gt; CMyLinkedList" LINKLIST.CTT MYLIST.H MYLIST.INL MYLIST.CPP
</code></pre>
<p>
The MFC template classes are slightly more complicated than this example, taking a number of Boolean-constant template parameters that allow several slightly different variations of collections to be expanded. Please refer to the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_TEMPLDEF">
</object><a href=JavaScript:alink_2.Click()>TEMPLDEF </a> sample for more details on the TEMPLDEF program and the command line options for using the provided template classes.</p>
<p>
<a href="_mfcnotes_technical_notes_by_number.htm">Technical Notes by Number</a>  |&nbsp; <a href="_mfcnotes_technical_notes_by_category.htm">Technical Notes by Category</a></p>
</font></BODY>
</HTML>
