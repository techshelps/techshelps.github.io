<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Window</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_atl_using_a_window"></a>Using a Window</h1>
<p>
Class <a href="_atl_cwindow.htm">CWindow</a> allows you to use a window. Once you attach a window to a <b>CWindow</b> object, you can then call <b>CWindow</b> methods to manipulate the window. <b>CWindow</b> also contains an <b>HWND</b> operator to convert a <b>CWindow</b> object to an <b>HWND</b>. Thus you can pass a <b>CWindow</b> object to any function that requires a handle to a window. You can easily mix <b>CWindow</b> method calls and Win32 function calls, without creating any temporary objects.</p>
<p>
Because <b>CWindow</b> has only one data member (a window handle), it does not impose an overhead on your code. In addition, many of the <b>CWindow</b> methods simply wrap corresponding Win32 API functions. By using <b>CWindow</b>, the <b>HWND</b> member is automatically passed to the Win32 function.</p>
<p>
In addition to using <b>CWindow</b> directly, you can also derive from it to add data or code to your class. ATL itself derives three classes from <b>CWindow</b>: <a href="_atl_implementing_a_window.htm">CWindowImpl</a>, <a href="_atl_implementing_a_dialog_box.htm">CDialogImpl</a>, and <a href="_atl_using_contained_windows.htm">CContainedWindow</a>.</p>
</font></BODY>
</HTML>
