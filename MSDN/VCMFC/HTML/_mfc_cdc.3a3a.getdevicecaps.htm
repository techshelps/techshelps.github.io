<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDC::GetDeviceCaps</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdc.3a3a.getdevicecaps"></a><sup></sup>CDC::GetDeviceCaps&nbsp; </h1>
<p>
<b>int</b> <b>GetDeviceCaps(</b> <b>int</b> <i>nIndex</i> <b>)</b> <b>const;</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
The value of the requested capability if the function is successful.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nIndex</i></p>
<p class=indent>
Specifies the type of information to return. It can be any one of the following values:
<ul type=disc>
<li>
<b>DRIVERVERSION</b>&nbsp;&nbsp;&nbsp;Version number; for example, 0x100 for 1.0.<br><br></li>
<li>
<b>TECHNOLOGY</b>&nbsp;&nbsp;&nbsp;Device technology. It can be any one of the following:</li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b>Value</b></td>
<td class=label width=64%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=36%><b>DT_PLOTTER</b></td>
<td width=64%>Vector plotter</td>
</tr>
<tr valign=top>
<td width=36%><b>DT_RASDISPLAY</b></td>
<td width=64%>Raster display</td>
</tr>
<tr valign=top>
<td width=36%><b>DT_RASPRINTER</b></td>
<td width=64%>Raster printer</td>
</tr>
<tr valign=top>
<td width=36%><b>DT_RASCAMERA</b></td>
<td width=64%>Raster camera</td>
</tr>
<tr valign=top>
<td width=36%><b>DT_CHARSTREAM</b></td>
<td width=64%>Character stream</td>
</tr>
<tr valign=top>
<td width=36%><b>DT_METAFILE</b></td>
<td width=64%>Metafile</td>
</tr>
<tr valign=top>
<td width=36%><b>DT_DISPFILE</b></td>
<td width=64%>Display file</td>
</tr>
</table><br>
<ul type=disc>
<li>
<b>HORZSIZE</b>&nbsp;&nbsp;&nbsp;Width of the physical display (in millimeters).<br><br></li>
<li>
<b>VERTSIZE</b>&nbsp;&nbsp;&nbsp;Height of the physical display (in millimeters).<br><br></li>
<li>
<b>HORZRES</b>&nbsp;&nbsp;&nbsp;Width of the display (in pixels).<br><br></li>
<li>
<b>VERTRES</b>&nbsp;&nbsp;&nbsp;Height of the display (in raster lines).<br><br></li>
<li>
<b>LOGPIXELSX</b>&nbsp;&nbsp;&nbsp;Number of pixels per logical inch along the display width.<br><br></li>
<li>
<b>LOGPIXELSY</b>&nbsp;&nbsp;&nbsp;Number of pixels per logical inch along the display height.<br><br></li>
<li>
<b>BITSPIXEL</b>&nbsp;&nbsp;&nbsp;Number of adjacent color bits for each pixel.<br><br></li>
<li>
<b>PLANES</b>&nbsp;&nbsp;&nbsp;Number of color planes.<br><br></li>
<li>
<b>NUMBRUSHES</b>&nbsp;&nbsp;&nbsp;Number of device-specific brushes.<br><br></li>
<li>
<b>NUMPENS</b>&nbsp;&nbsp;&nbsp;Number of device-specific pens.<br><br></li>
<li>
<b>NUMFONTS</b>&nbsp;&nbsp;&nbsp;Number of device-specific fonts.<br><br></li>
<li>
<b>NUMCOLORS</b>&nbsp;&nbsp;&nbsp;Number of entries in the device’s color table.<br><br></li>
<li>
<b>ASPECTX</b>&nbsp;&nbsp;&nbsp;Relative width of a device pixel as used for line drawing.<br><br></li>
<li>
<b>ASPECTY</b>&nbsp;&nbsp;&nbsp;Relative height of a device pixel as used for line drawing.<br><br></li>
<li>
<b>ASPECTXY</b>&nbsp;&nbsp;&nbsp;Diagonal width of the device pixel as used for line drawing.<br><br></li>
<li>
<b>PDEVICESIZE</b>&nbsp;&nbsp;&nbsp;Size of the <b>PDEVICE</b> internal data structure.<br><br></li>
<li>
<b>CLIPCAPS</b>&nbsp;&nbsp;&nbsp;Clipping capabilities of the device. It can be one of the following: </li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b>Value</b></td>
<td class=label width=64%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=36%><b>CP_NONE</b></td>
<td width=64%>Output is not clipped.</td>
</tr>
<tr valign=top>
<td width=36%><b>CP_RECTANGLE</b></td>
<td width=64%>Output is clipped to rectangles.</td>
</tr>
<tr valign=top>
<td width=36%><b>CP_REGION</b></td>
<td width=64%>Output is clipped to regions.</td>
</tr>
</table><br>
<ul type=disc>
<li>
<b>SIZEPALETTE</b>&nbsp;&nbsp;&nbsp;Number of entries in the system palette. This index is valid only if the device driver sets the <b>RC_PALETTE</b> bit in the <b>RASTERCAPS</b> index.<br><br></li>
<li>
<b>NUMRESERVED</b>&nbsp;&nbsp;&nbsp;Number of reserved entries in the system palette. This index is valid only if the device driver sets the <b>RC_PALETTE</b> bit in the <b>RASTERCAPS</b> index.<br><br></li>
<li>
<b>COLORRES</b>&nbsp;&nbsp;&nbsp;Actual color resolution of the device in bits per pixel. This index is valid only if the device driver sets the <b>RC_PALETTE</b> bit in the <b>RASTERCAPS</b> index.<br><br></li>
<li>
<b>RASTERCAPS</b>&nbsp;&nbsp;&nbsp;Value that indicates the raster capabilities of the device. It can be a combination of the following: </li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b>Value</b></td>
<td class=label width=64%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=36%><b>RC_BANDING</b></td>
<td width=64%>Requires banding support.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_BIGFONT</b></td>
<td width=64%>Supports fonts larger than 64K.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_BITBLT</b></td>
<td width=64%>Capable of transferring bitmaps.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_BITMAP64</b></td>
<td width=64%>Supports bitmaps larger than 64K.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_DEVBITS</b></td>
<td width=64%>Supports device bitmaps.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_DI_BITMAP</b></td>
<td width=64%>Capable of supporting the <b>SetDIBits</b> and <b>GetDIBits</b> Windows functions.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_DIBTODEV</b></td>
<td width=64%>Capable of supporting the <b>SetDIBitsToDevice</b> Windows function.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_FLOODFILL</b></td>
<td width=64%>Capable of performing flood fills.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_GDI20_OUTPUT</b></td>
<td width=64%>Capable of supporting Windows version 2.0 features.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_GDI20_STATE</b></td>
<td width=64%>Includes a state block in the device context.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_NONE</b></td>
<td width=64%>Supports no raster operations.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_OP_DX_OUTPUT</b></td>
<td width=64%>Supports dev opaque and DX array.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_PALETTE</b></td>
<td width=64%>Specifies a palette-based device.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_SAVEBITMAP</b></td>
<td width=64%>Capable of saving bitmaps locally.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_SCALING</b></td>
<td width=64%>Capable of scaling.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_STRETCHBLT</b></td>
<td width=64%>Capable of performing the <b>StretchBlt</b> member function.</td>
</tr>
<tr valign=top>
<td width=36%><b>RC_STRETCHDIB</b></td>
<td width=64%>Capable of performing the <b>StretchDIBits</b> Windows function.</td>
</tr>
</table><br>
<ul type=disc>
<li>
<b>CURVECAPS</b>&nbsp;&nbsp;&nbsp;The curve capabilities of the device. It can be a combination of the following: </li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b>Value</b></td>
<td class=label width=64%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=36%><b>CC_NONE</b></td>
<td width=64%>Supports curves.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_CIRCLES</b></td>
<td width=64%>Supports circles.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_PIE</b></td>
<td width=64%>Supports pie wedges.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_CHORD</b></td>
<td width=64%>Supports chords.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_ELLIPSES</b></td>
<td width=64%>Supports ellipses.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_WIDE</b></td>
<td width=64%>Supports wide borders.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_STYLED</b></td>
<td width=64%>Supports styled borders.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_WIDESTYLED</b></td>
<td width=64%>Supports wide, styled borders.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_INTERIORS</b></td>
<td width=64%>Supports interiors.</td>
</tr>
<tr valign=top>
<td width=36%><b>CC_ROUNDRECT</b></td>
<td width=64%>Supports rectangles with rounded corners.</td>
</tr>
</table><br>
<ul type=disc>
<li>
<b>LINECAPS</b>&nbsp;&nbsp;&nbsp;Line capabilities the device supports. It can be a combination of the following: </li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b>Value</b></td>
<td class=label width=64%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=36%><b>LC_NONE</b></td>
<td width=64%>Supports no lines.</td>
</tr>
<tr valign=top>
<td width=36%><b>LC_POLYLINE</b></td>
<td width=64%>Supports polylines.</td>
</tr>
<tr valign=top>
<td width=36%><b>LC_MARKER</b></td>
<td width=64%>Supports markers.</td>
</tr>
<tr valign=top>
<td width=36%><b>LC_POLYMARKER</b></td>
<td width=64%>Supports polymarkers.</td>
</tr>
<tr valign=top>
<td width=36%><b>LC_WIDE</b></td>
<td width=64%>Supports wide lines.</td>
</tr>
<tr valign=top>
<td width=36%><b>LC_STYLED</b></td>
<td width=64%>Supports styled lines.</td>
</tr>
<tr valign=top>
<td width=36%><b>LC_WIDESTYLED</b></td>
<td width=64%>Supports wide, styled lines.</td>
</tr>
<tr valign=top>
<td width=36%><b>LC_INTERIORS</b></td>
<td width=64%>Supports interiors.</td>
</tr>
</table><br>
<ul type=disc>
<li>
<b>POLYGONALCAPS</b>&nbsp;&nbsp;&nbsp;Polygonal capabilities the device supports. It can be a combination of the following: </li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b>Value</b></td>
<td class=label width=64%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=36%><b>PC_NONE</b></td>
<td width=64%>Supports no polygons.</td>
</tr>
<tr valign=top>
<td width=36%><b>PC_POLYGON</b></td>
<td width=64%>Supports alternate fill polygons.</td>
</tr>
<tr valign=top>
<td width=36%><b>PC_RECTANGLE</b></td>
<td width=64%>Supports rectangles.</td>
</tr>
<tr valign=top>
<td width=36%><b>PC_WINDPOLYGON</b></td>
<td width=64%>Supports winding number fill polygons.</td>
</tr>
<tr valign=top>
<td width=36%><b>PC_SCANLINE</b></td>
<td width=64%>Supports scan lines.</td>
</tr>
<tr valign=top>
<td width=36%><b>PC_WIDE</b></td>
<td width=64%>Supports wide borders.</td>
</tr>
<tr valign=top>
<td width=36%><b>PC_STYLED</b></td>
<td width=64%>Supports styled borders.</td>
</tr>
<tr valign=top>
<td width=36%><b>PC_WIDESTYLED</b></td>
<td width=64%>Supports wide, styled borders.</td>
</tr>
<tr valign=top>
<td width=36%><b>PC_INTERIORS</b></td>
<td width=64%>Supports interiors.</td>
</tr>
</table><br>
<ul type=disc>
<li>
<b>TEXTCAPS</b>&nbsp;&nbsp;&nbsp;Text capabilities the device supports. It can be a combination of the following: </li>
</ul>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b>Value</b></td>
<td class=label width=64%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=36%><b>TC_OP_CHARACTER</b></td>
<td width=64%>Supports character output precision, which indicates the device can place device fonts at any pixel location. This is required for any device with device fonts.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_OP_STROKE</b></td>
<td width=64%>Supports stroke output precision, which indicates the device can omit any stroke of a device font.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_CP_STROKE</b></td>
<td width=64%>Supports stroke clip precision, which indicates the device can clip device fonts to a pixel boundary.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_CR_90</b></td>
<td width=64%>Supports 90-degree character rotation, which indicates the device can rotate characters only 90 degrees at a time.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_CR_ANY</b></td>
<td width=64%>Supports character rotation at any degree, which indicates the device can rotate device fonts through any angle.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_SF_X_YINDEP</b></td>
<td width=64%>Supports scaling independent of x and y directions, which indicates the device can scale device fonts separately in x and y directions.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_SA_DOUBLE</b></td>
<td width=64%>Supports doubled characters for scaling, which indicates the device can double the size of device fonts.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_SA_INTEGER</b></td>
<td width=64%>Supports integer multiples for scaling, which indicates the device can scale the size of device fonts in any integer multiple.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_SA_CONTIN</b></td>
<td width=64%>Supports any multiples for exact scaling, which indicates the device can scale device fonts by any amount but still preserve the x and y ratios.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_EA_DOUBLE</b></td>
<td width=64%>Supports double-weight characters, which indicates the device can make device fonts bold. If this bit is not set for printer drivers, GDI attempts to create bold device fonts by printing them twice.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_IA_ABLE</b></td>
<td width=64%>Supports italics, which indicates the device can make device fonts italic. If this bit is not set, GDI assumes italics are not available.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_UA_ABLE</b></td>
<td width=64%>Supports underlining, which indicates the device can underline device fonts. If this bit is not set, GDI creates underlines for device fonts.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_SO_ABLE</b></td>
<td width=64%>Supports strikeouts, which indicates the device can strikeout device fonts. If this bit is not set, GDI creates strikeouts for device fonts.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_RA_ABLE</b></td>
<td width=64%>Supports raster fonts, which indicates that GDI should enumerate any raster or TrueType fonts available for this device in response to a call to the <b>EnumFonts</b> or <b>EnumFontFamilies</b> Windows functions. If this bit is not set, GDI-supplied raster or TrueType fonts are not enumerated when these functions are called.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_VA_ABLE</b></td>
<td width=64%>Supports vector fonts, which indicates that GDI should enumerate any vector fonts available for this device in response to a call to the <b>EnumFonts</b> or <b>EnumFontFamilies</b> Windows functions. This is significant for vector devices only (that is, for plotters). Display drivers (which must be able to use raster fonts) and raster printer drivers always enumerate vector fonts, because GDI rasterizes vector fonts before sending them to the driver.</td>
</tr>
<tr valign=top>
<td width=36%><b>TC_RESERVED</b></td>
<td width=64%>Reserved; must be 0.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
Retrieves a wide range of device-specific information about the display device.</p>
<p>
<a href="_mfc_cdc.htm">CDC Overview</a>  |&nbsp; <a href="_mfc_cdc_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_GetDeviceCaps">
</object><a href=JavaScript:alink_1.Click()>::GetDeviceCaps</a></p>
</font></BODY>
</HTML>
