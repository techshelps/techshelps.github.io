<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWnd::OnDeadChar</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwnd.3a3a.ondeadchar"></a><sup></sup>CWnd::OnDeadChar&nbsp; </h1>
<p>
<b>afx_msg</b> <b>void</b> <b>OnDeadChar(</b> <b>UINT</b> <i>nChar</i><b>,</b> <b>UINT</b> <i>nRepCnt</i><b>,</b> <b>UINT</b> <i>nFlags</i> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nChar</i></p>
<p class=indent>
Specifies the dead-key character value.</p>
<p class=dt>
<i>nRepCnt</i></p>
<p class=indent>
Specifies the repeat count.</p>
<p class=dt>
<i>nFlags</i></p>
<p class=indent>
Specifies the scan code, key-transition code, previous key state, and context code, as shown in the following list:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=15%><b>Value</b></td>
<td class=label width=85%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=15%>0–7</td>
<td width=85%>Scan code (OEM-dependent value). Low byte of high-order word.</td>
</tr>
<tr valign=top>
<td width=15%>8</td>
<td width=85%>Extended key, such as a function key or a key on the numeric keypad (1 if it is an extended key; otherwise 0).</td>
</tr>
<tr valign=top>
<td width=15%>9–10</td>
<td width=85%>Not used.</td>
</tr>
<tr valign=top>
<td width=15%>11–12</td>
<td width=85%>Used internally by Windows.</td>
</tr>
<tr valign=top>
<td width=15%>13</td>
<td width=85%>Context code (1 if the ALT key is held down while the key is pressed; otherwise 0).</td>
</tr>
<tr valign=top>
<td width=15%>14</td>
<td width=85%>Previous key state (1 if the key is down before the call, 0 if the key is up).</td>
</tr>
<tr valign=top>
<td width=15%>15</td>
<td width=85%>Transition state (1 if the key is being released, 0 if the key is being pressed).</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
The framework calls this member function when the <a href="_mfc_cwnd.3a3a.onkeyup.htm">OnKeyUp</a> member function and the <a href="_mfc_cwnd.3a3a.onkeydown.htm">OnKeyDown</a> member functions are called. This member function can be used to specify the character value of a dead key. A dead key is a key, such as the umlaut (double-dot) character, that is combined with other characters to form a composite character. For example, the umlaut-O character consists of the dead key, umlaut, and the O key.</p>
<p>
An application typically uses <b>OnDeadChar</b> to give the user feedback about each key pressed. For example, an application can display the accent in the current character position without moving the caret. </p>
<p>
Since there is not necessarily a one-to-one correspondence between keys pressed and <b>OnDeadChar</b> calls, the information in <i>nFlags</i> is generally not useful to applications. The information in <i>nFlags</i> applies only to the most recent call to the <a href="_mfc_cwnd.3a3a.onkeyup.htm">OnKeyUp</a> member function or the <a href="_mfc_cwnd.3a3a.onkeydown.htm">OnKeyDown</a> member function that precedes the <b>OnDeadChar</b> call.</p>
<p>
For IBM Enhanced 101- and 102-key keyboards, enhanced keys are the right ALT and the right CTRL keys on the main section of the keyboard; the INS, DEL, HOME, END, PAGE UP, PAGE DOWN, and arrow keys in the clusters to the left of the numeric keypad; and the slash (/) and ENTER keys in the numeric keypad. Some other keyboards may support the extended-key bit in <i>nFlags</i>.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This member function is called by the framework to allow your application to handle a Windows message. The parameters passed to your function reflect the parameters received by the framework when the message was received. If you call the base-class implementation of this function, that implementation will use the parameters originally passed with the message and not the parameters you supply to the function.</p>
<p>
<a href="_mfc_cwnd.htm">CWnd Overview</a>  |&nbsp; <a href="_mfc_cwnd_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_WM_DEADCHAR">
</object><a href=JavaScript:alink_1.Click()>WM_DEADCHAR</a></p>
</font></BODY>
</HTML>
