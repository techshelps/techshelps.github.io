<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWindowImpl</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_cwindowimpl"></a>CWindowImpl</h1>
<p>
<b>template &lt; class </b><i>T</i><b>, class </b><i>TBase</i><b> = CWindow, class </b><i>TWinTraits</i><b> = CControlWinTraits &gt;<br>
class ATL_NO_VTABLE CWindowImpl : public CWindowImplBaseT&lt; </b><i>TBase</i><b>, </b><i>TWinTraits</i><b> &gt;</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>T</i></p>
<p class=indent>
Your class, derived from <b>CWindowImpl</b>.</p>
<p class=dt>
<i>TBase</i></p>
<p class=indent>
The base class of your new class. The default base class is <b>CWindow</b>.</p>
<p class=dt>
<i>TWinTrait</i></p>
<p class=indent>
A traits class that defines styles for your window. The default is <b>CControlWinTraits</b>.</p>
<p>
<b>CWindowImpl</b> allows you to create a new window or subclass an existing window. <b>CWindowImpl</b>’s window procedure uses a message map to direct messages to the appropriate handlers.</p>
<p>
<b>CWindowImpl::Create</b> creates a new window based on the window class information managed by <a href="_atl_cwndclassinfo.htm">CWndClassInfo</a>. <b>CWindowImpl</b> contains the <a href="_atl_declare_wnd_class.htm">DECLARE_WND_CLASS</a> macro, which means <b>CWndClassInfo</b> will register a new window class. If you want to superclass an existing window class, derive your class from <b>CWindowImpl</b> and include the <a href="_atl_declare_wnd_superclass.htm">DECLARE_WND_SUPERCLASS</a> macro. In this case, <b>CWndClassInfo</b> will register a window class that is based on an existing class but uses <b>CWindowImpl::WindowProc</b>. For example:</p>
<pre><code>class CMyWindow : CComControl&lt;CMyWindow&gt;, ...
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // CComControl derives from CWindowImpl
{
public:
 &nbsp; // 1. The NULL parameter means ATL will generate a
 &nbsp; //&nbsp;&nbsp;&nbsp; name for the superclass
 &nbsp; // 2. The "EDIT" parameter means the superclass is
 &nbsp; //&nbsp;&nbsp;&nbsp; based on the standard Windows Edit box
 &nbsp; DECLARE_WND_SUPERCLASS(NULL, "EDIT")
 &nbsp; ...
};</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Because <b>CWndClassInfo</b> manages the information for a single window class, each window created through an instance of <b>CWindowImpl</b> will be based on the same window class.</p>
<p>
<b>CWindowImpl</b> also supports window subclassing. The <b>SubclassWindow</b> method attaches an existing window to the <b>CWindowImpl</b> object and changes the window procedure to <b>CWindowImpl::WindowProc</b>. Each instance of <b>CWindowImpl</b> can subclass a different window.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;For any given <b>CWindowImpl</b> object, call either <b>Create</b> or <b>SubclassWindow</b>. You should not invoke both methods on the same object.</p>
<p>
In addition to <b>CWindowImpl</b>, ATL provides <a href="_atl_ccontainedwindow.htm">CContainedWindow</a> to create a window contained within another object.</p>
<p>
The base class destructor (~<b>CWindowImplRoot</b>) ensures that the window is gone before the object is destroyed.</p>
<p>
<b>CWindowImpl</b> derives from <b>CWindowImplBaseT</b>, which derives from <b>CWindowImplRoot</b>, which in turn derives from <b>TBase</b> and <a href="_atl_cmessagemap.htm">CMessageMap</a>.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=42%><b>For more information about</b></td>
<td class=label width=58%><b>See</b></td>
</tr>
<tr valign=top>
<td width=42%>Creating controls</td>
<td width=58%><a href="_atl_atl_tutorial.htm">ATL Tutorial</a></td>
</tr>
<tr valign=top>
<td width=42%>Using windows in ATL</td>
<td width=58%><a href="_atl_atl_window_classes.htm">ATL Window Classes</a></td>
</tr>
<tr valign=top>
<td width=42%>ATL Object Wizard</td>
<td width=58%><a href="_atl_creating_an_atl_project.htm">Creating an ATL Project</a></td>
</tr>
<tr valign=top>
<td width=42%>Windows</td>
<td width=58%><object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_Windows">
</object><a href=JavaScript:alink_1.Click()>Windows</a> and subsequent topics in the <i>Platform SDK</i></td>
</tr>
<tr valign=top>
<td width=42%>Subclassing</td>
<td width=58%><object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_Window_Procedure_Subclassing">
</object><a href=JavaScript:alink_2.Click()>Window Procedure Subclassing</a> in the <i>Platform SDK</i></td>
</tr>
<tr valign=top>
<td width=42%>Superclassing</td>
<td width=58%><object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_Window_Procedure_Superclassing">
</object><a href=JavaScript:alink_3.Click()>Window Procedure Superclassing</a> in the <i>Platform SDK</i></td>
</tr>
</table><br>
<p>
<b>#include &lt;atlwin.h&gt;</b></p>
<p>
<a href="_atl_cwindowimpl_class_members.htm">Class Members</a></p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="_atl_begin_msg_map.htm">BEGIN_MSG_MAP</a>, <a href="_atl_ccomcontrol.htm">CComControl</a></p>
</font></BODY>
</HTML>
