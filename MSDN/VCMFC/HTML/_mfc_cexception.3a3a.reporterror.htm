<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CException::ReportError</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cexception.3a3a.reporterror"></a>CException::ReportError</h1>
<p>
<b>virtual int ReportError( UINT </b><i>nType</i><b> = MB_OK, UINT </b><i>nMessageID</i><b> = 0 );</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
An <b>AfxMessageBox</b> value; otherwise 0 if there is not enough memory to display the message box. See <a href="_mfc_afxmessagebox.htm">AfxMessageBox</a> for the possible return values.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nType</i></p>
<p class=indent>
Specifies the style of the message box. Apply any combination of the <a href="_mfc_message.2d.box_styles.htm">message-box styles</a> to the box. If you don’t specify this parameter, the default is <b>MB_OK</b>.</p>
<p class=dt>
<i>nMessageID</i></p>
<p class=indent>
Specifies the resource ID (string table entry) of a message to display if the exception object does not have an error message.&nbsp; If 0, the message “No error message is available” is displayed.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to report error text in a message box to the user. </p>
<p class=label>
<b>Example</b></p>
<p>
Here is an example of the use of <b>CException::ReportError</b>.</p>
<pre><code>   CFile fileInput;
   CFileException ex;

   // try to open a file for reading.&nbsp; 
   // The file will certainly not
   // exist because there are too many explicit
   // directories in the name.

   // if the call to Open() fails, ex will be
   // initialized with exception
   // information.&nbsp; the call to ex.ReportError() will
   // display an appropriate
   // error message to the user, such as
   // "\Too\Many\Bad\Dirs.DAT contains an
   // invalid path."&nbsp; The error message text will be
   // appropriate for the
   // file name and error condition.

   if (!fileInput.Open("\\Too\\Many\\Bad\\Dirs.DAT", CFile::modeRead, &amp;ex))
   {
      ex.ReportError();
   }
   else
   {
      // the file was opened, so do whatever work
      // with fileInput we were planning...
      // :

      fileInput.Close();
   }
</code></pre>
<p>
<a href="_mfc_cexception.htm">CException Overview</a>  |&nbsp; <a href="_mfc_cexception_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_afxmessagebox.htm">AfxMessageBox</a>, <a href="_mfc_cexception.3a3a.geterrormessage.htm">CException::GetErrorMessage</a></p>
</font></BODY>
</HTML>
