<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CString::operator +</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cstring.3a3a.operator_.2b"></a><sup></sup>CString::operator +  </h1>
<p>
<b>friend</b> <b>CString</b> <b>operator</b> <b>+(</b> <b>const</b> <b>CString&amp;</b> <i>string1</i><b>,</b> <b>const</b> <b>CString&amp;</b> <i>string2</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>friend</b> <b>CString</b> <b>operator</b> <b>+(</b> <b>const</b> <b>CString&amp;</b> <i>string</i><b>,</b> <b>TCHAR</b> <i>ch</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>friend</b> <b>CString</b> <b>operator</b> <b>+(</b> <b>TCHAR</b> <i>ch</i><b>,</b> <b>const</b> <b>CString&amp;</b> <i>string</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>friend</b> <b>CString</b> <b>operator</b> <b>+(</b> <b>const</b> <b>CString&amp;</b> <i>string</i><b>,</b> <b>LPCTSTR</b> <i>lpsz</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>friend</b> <b>CString</b> <b>operator</b> <b>+(</b> <b>LPCTSTR</b> <i>lpsz</i><b>,</b> <b>const</b> <b>CString&amp;</b> <i>string</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
A <b>CString</b> object that is the temporary result of the concatenation. This return value makes it possible to combine several concatenations in the same expression.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>string</i>, <i>string1</i>, <i>string2</i></p>
<p class=indent>
<b>CString</b> objects to concatenate.</p>
<p class=dt>
<i>ch</i></p>
<p class=indent>
A character to concatenate to a string or to concatenate a string to.</p>
<p class=dt>
<i>lpsz</i></p>
<p class=indent>
A pointer to a null-terminated character string.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The + concatenation operator joins two strings and returns a <b>CString</b> object. One of the two argument strings must be a <b>CString</b> object. The other can be a character pointer or a character. You should be aware that memory exceptions may occur whenever you use the concatenation operator since new storage may be allocated to hold temporary data. </p>
<p class=label>
<b>Example</b></p>
<p>
The following example demonstrates the use of <b>CString::operator +</b>.</p>
<pre><code>// example for CString::operator +
CString s1( "abc" );
CString s2( "def" );
ASSERT( (s1 + s2 ) == "abcdef" );
CString s3;
s3 = CString( "abc" ) + "def" ; // Correct
s3 = "abc" + "def"; 
// Wrong! The first argument must be a CString.
</code></pre>
<p>
<a href="_mfc_cstring.htm">CString Overview</a>  |&nbsp; <a href="_mfc_cstring_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cstring.3a3a.operator_.2b3d.htm">CString::operator +=</a></p>
</font></BODY>
</HTML>
