<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWnd Class Members</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwnd_class_members"></a><sup></sup>CWnd Class Members</h1>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td width=33%><a href="#_mfc_initialization_cwnd">Initialization</a></td>
<td width=33%><a href="#_mfc_dialog.2d.box_item_functions_cwnd">Dialog-Box Item Functions</a></td>
<td width=34%><a href="#_mfc_initialization_message_handlers_cwnd">Initialization Message Handlers</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_window_state_functions_cwnd">Window State Functions</a></td>
<td width=33%><a href="#_mfc_data.2d.binding_functions_cwnd">Data-Binding Functions</a></td>
<td width=34%><a href="#_mfc_system_message_handlers_cwnd">System Message Handlers</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_window_size_and_position_cwnd">Window Size and Position</a></td>
<td width=33%><a href="#_mfc_menu_functions_cwnd">Menu Functions</a></td>
<td width=34%><a href="#_mfc_general_message_handlers_cwnd">General Message Handlers</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_window_access_functions_cwnd">Window Access Functions</a></td>
<td width=33%><a href="#_mfc_tool_tip_functions_cwnd">Tool Tip Functions</a></td>
<td width=34%><a href="#_mfc_control_message_handlers_cwnd">Control Message Handlers</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_update.2f.painting_functions_cwnd">Update/Painting Functions</a></td>
<td width=33%><a href="#_mfc_timer_functions_cwnd">Timer Functions</a></td>
<td width=34%><a href="#_mfc_input_message_handlers_cwnd">Input Message Handlers</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_coordinate_mapping_functions_cwnd">Coordinate Mapping Functions</a></td>
<td width=33%><a href="#_mfc_alert_functions_cwnd">Alert Functions</a></td>
<td width=34%><a href="#_mfc_nonclient.2d.area_message_handlers_cwnd">Nonclient-Area Message Handlers</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_window_text_functions_cwnd">Window Text Functions</a></td>
<td width=33%><a href="#_mfc_window_message_functions_cwnd">Window Message Functions</a></td>
<td width=34%><a href="#_mfc_mdi_message_handlers_cwnd">MDI Message Handlers</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_scrolling_functions_cwnd">Scrolling Functions</a></td>
<td width=33%><a href="#_mfc_clipboard_functions_cwnd">Clipboard Functions</a></td>
<td width=34%><a href="#_mfc_clipboard_message_handlers_cwnd">Clipboard Message Handlers</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_drag.2d.drop_functions_cwnd">Drag-Drop Functions</a></td>
<td width=33%><a href="#_mfc_ole_controls_cwnd">OLE Controls</a></td>
<td width=34%><a href="#_mfc_menu_loop_notification_cwnd">Menu Loop Notification</a></td>
</tr>
<tr valign=top>
<td width=33%><a href="#_mfc_caret_functions_cwnd">Caret Functions</a></td>
<td width=33%><a href="#_mfc_overridables_cwnd">Overridables</a></td>
<td width=34%></td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_data_members_cwnd_data"></a><b>Data Members </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.m_hwnd.htm">m_hWnd</a></td>
<td width=60%>Indicates the <b>HWND</b> attached to this <b>CWnd</b>.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_cat_constructionsldestruction"></a><b>Construction/Destruction </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.cwnd.htm">CWnd</a></td>
<td width=60%>Constructs a <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.destroywindow.htm">DestroyWindow</a></td>
<td width=60%>Destroys the attached Windows window.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_initialization_cwnd"></a><b>Initialization </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.create.htm">Create</a></td>
<td width=62%>Creates and initializes the child window associated with the <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.precreatewindow.htm">PreCreateWindow</a></td>
<td width=62%>Called before the creation of the Windows window attached to this <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.calcwindowrect.htm">CalcWindowRect</a></td>
<td width=62%>Called to calculate the window rectangle from the client rectangle.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getstyle.htm">GetStyle</a></td>
<td width=62%>Returns the current window style.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getexstyle.htm">GetExStyle</a></td>
<td width=62%>Returns the window’s extended style.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.attach.htm">Attach</a></td>
<td width=62%>Attaches a Windows handle to a <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.detach.htm">Detach</a></td>
<td width=62%>Detaches a Windows handle from a <b>CWnd</b> object and returns the handle.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.presubclasswindow.htm">PreSubclassWindow</a></td>
<td width=62%>Allows other necessary subclassing to occur before <a href="_mfc_cwnd.3a3a.subclasswindow.htm">SubclassWindow</a> is called.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.subclasswindow.htm">SubclassWindow</a></td>
<td width=62%>Attaches a window to a <b>CWnd</b> object and makes it route messages through the <b>CWnd</b>’s message map.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.unsubclasswindow.htm">UnsubclassWindow</a></td>
<td width=62%>Detaches a window from a <b>CWnd </b>object</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.fromhandle.htm">FromHandle</a></td>
<td width=62%>Returns a pointer to a <b>CWnd</b> object when given a handle to a window. If a <b>CWnd</b> object is not attached to the handle, a temporary <b>CWnd</b> object is created and attached.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.fromhandlepermanent.htm">FromHandlePermanent</a></td>
<td width=62%>Returns a pointer to a <b>CWnd</b> object when given a handle to a window. If a <b>CWnd</b> object is not attached to the handle, <b>NULL</b> is returned.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.deletetempmap.htm">DeleteTempMap</a></td>
<td width=62%>Called automatically by the <b>CWinApp</b> idle-time handler and deletes any temporary <b>CWnd</b> objects created by <b>FromHandle</b>.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getsafehwnd.htm">GetSafeHwnd</a></td>
<td width=62%>Returns <b>m_hWnd</b>, or <b>NULL</b> if the <b>this</b> pointer is <b>NULL</b>.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.createex.htm">CreateEx</a></td>
<td width=62%>Creates a Windows overlapped, pop-up, or child window and attaches it to a <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.createcontrol.htm">CreateControl</a></td>
<td width=62%>Create an OLE control that will be represented in an MFC program by a <b>CWnd</b> object.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_window_state_functions_cwnd"></a><b>Window State Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.iswindowenabled.htm">IsWindowEnabled</a></td>
<td width=62%>Determines whether the window is enabled for mouse and keyboard input.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.enablewindow.htm">EnableWindow</a></td>
<td width=62%>Enables or disables mouse and keyboard input.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getactivewindow.htm">GetActiveWindow</a></td>
<td width=62%>Retrieves the active window.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.setactivewindow.htm">SetActiveWindow</a></td>
<td width=62%>Activates the window.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getcapture.htm">GetCapture</a></td>
<td width=62%>Retrieves the <b>CWnd</b> that has the mouse capture.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.setcapture.htm">SetCapture</a></td>
<td width=62%>Causes all subsequent mouse input to be sent to the <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getfocus.htm">GetFocus</a></td>
<td width=62%>Retrieves the <b>CWnd</b> that currently has the input focus.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.setfocus.htm">SetFocus</a></td>
<td width=62%>Claims the input focus.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getdesktopwindow.htm">GetDesktopWindow</a></td>
<td width=62%>Retrieves the Windows desktop window.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getforegroundwindow.htm">GetForegroundWindow</a></td>
<td width=62%>Returns a pointer to the foreground window (the top-level window with which the user is currently working).</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.setforegroundwindow.htm">SetForegroundWindow</a></td>
<td width=62%>Puts the thread that created the window into the foreground and activates the window.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.geticon.htm">GetIcon</a></td>
<td width=62%>Retrieves the handle to an icon.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.seticon.htm">SetIcon</a></td>
<td width=62%>Sets the handle to a specific icon.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.getwindowcontexthelpid.htm">GetWindowContextHelpId</a></td>
<td width=62%>Retrieves the help context identifier.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.setwindowcontexthelpid.htm">SetWindowContextHelpId</a></td>
<td width=62%>Sets the help context identifier.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.modifystyle.htm">ModifyStyle</a></td>
<td width=62%>Modifies the current window style.</td>
</tr>
<tr valign=top>
<td width=38%><a href="_mfc_cwnd.3a3a.modifystyleex.htm">ModifyStyleEx</a></td>
<td width=62%>Modifies the window’s extended style.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_window_size_and_position_cwnd"></a><b>Window Size and Position </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getwindowplacement.htm">GetWindowPlacement</a></td>
<td width=61%>Retrieves the show state and the normal (restored), minimized, and maximized positions of a window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.setwindowplacement.htm">SetWindowPlacement</a></td>
<td width=61%>Sets the show state and the normal (restored), minimized, and maximized positions for a window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getwindowrgn.htm">GetWindowRgn</a></td>
<td width=61%>Retrieves a copy of the window region of a window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.setwindowrgn.htm">SetWindowRgn</a></td>
<td width=61%>Sets the region of a window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.isiconic.htm">IsIconic</a></td>
<td width=61%>Determines whether <b>CWnd</b> is minimized (iconic).</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.iszoomed.htm">IsZoomed</a></td>
<td width=61%>Determines whether <b>CWnd</b> is maximized.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.movewindow.htm">MoveWindow</a></td>
<td width=61%>Changes the position and dimensions of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.setwindowpos.htm">SetWindowPos</a></td>
<td width=61%>Changes the size, position, and ordering of child, pop-up, and top-level windows.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.arrangeiconicwindows.htm">ArrangeIconicWindows</a></td>
<td width=61%>Arranges all the minimized (iconic) child windows.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.bringwindowtotop.htm">BringWindowToTop</a></td>
<td width=61%>Brings <b>CWnd</b> to the top of a stack of overlapping windows.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getwindowrect.htm">GetWindowRect</a></td>
<td width=61%>Gets the screen coordinates of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getclientrect.htm">GetClientRect</a></td>
<td width=61%>Gets the dimensions of the <b>CWnd</b> client area.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_window_access_functions_cwnd"></a><b>Window Access Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.childwindowfrompoint.htm">ChildWindowFromPoint</a></td>
<td width=60%>Determines which, if any, of the child windows contains the specified point.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.findwindow.htm">FindWindow</a></td>
<td width=60%>Returns the handle of the window, which is identified by its window name and window class.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getnextwindow.htm">GetNextWindow</a></td>
<td width=60%>Returns the next (or previous) window in the window manager’s list.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getowner.htm">GetOwner</a></td>
<td width=60%>Retrieves a pointer to the owner of a <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setowner.htm">SetOwner</a></td>
<td width=60%>Changes the owner of a <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.gettopwindow.htm">GetTopWindow</a></td>
<td width=60%>Returns the first child window that belongs to the <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getwindow.htm">GetWindow</a></td>
<td width=60%>Returns the window with the specified relationship to this window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getlastactivepopup.htm">GetLastActivePopup</a></td>
<td width=60%>Determines which pop-up window owned by <b>CWnd</b> was most recently active.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.ischild.htm">IsChild</a></td>
<td width=60%>Indicates whether <b>CWnd</b> is a child window or other direct descendant of the specified window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getparent.htm">GetParent</a></td>
<td width=60%>Retrieves the parent window of <b>CWnd</b> (if any).</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getsafeowner.htm">GetSafeOwner</a></td>
<td width=60%>Retrieves the safe owner for the given window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setparent.htm">SetParent</a></td>
<td width=60%>Changes the parent window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.windowfrompoint.htm">WindowFromPoint</a></td>
<td width=60%>Identifies the window that contains the given point.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getdlgitem.htm">GetDlgItem</a></td>
<td width=60%>Retrieves the control with the specified ID from the specified dialog box.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getdlgctrlid.htm">GetDlgCtrlID</a></td>
<td width=60%>If the <b>CWnd</b> is a child window, calling this function returns its ID value.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setdlgctrlid.htm">SetDlgCtrlID</a></td>
<td width=60%>Sets the window or control ID for the window (which can be any child window, not only a control in a dialog box).</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getdescendantwindow.htm">GetDescendantWindow</a></td>
<td width=60%>Searches all descendant windows and returns the window with the specified ID.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getparentframe.htm">GetParentFrame</a></td>
<td width=60%>Retrieves the <b>CWnd</b> object’s parent frame window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.sendmessagetodescendants.htm">SendMessageToDescendants</a></td>
<td width=60%>Sends a message to all descendant windows of the window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.gettoplevelparent.htm">GetTopLevelParent</a></td>
<td width=60%>Retrieves the window’s top-level parent.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.gettoplevelowner.htm">GetTopLevelOwner</a></td>
<td width=60%>Retrieves the top-level window. </td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getparentowner.htm">GetParentOwner</a></td>
<td width=60%>Returns a pointer to a child window’s parent window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.gettoplevelframe.htm">GetTopLevelFrame</a></td>
<td width=60%>Retrieves the window’s top-level frame window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.updatedialogcontrols.htm">UpdateDialogControls</a></td>
<td width=60%>Call to update the state of dialog buttons and other controls.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.updatedata.htm">UpdateData</a></td>
<td width=60%>Initializes or retrieves data from a dialog box.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.centerwindow.htm">CenterWindow</a></td>
<td width=60%>Centers a window relative to its parent.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_update.2f.painting_functions_cwnd"></a><b>Update/Painting Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.beginpaint.htm">BeginPaint</a></td>
<td width=61%>Prepares <b>CWnd</b> for painting.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.endpaint.htm">EndPaint</a></td>
<td width=61%>Marks the end of painting.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.print.htm">Print</a></td>
<td width=61%>Draws the current window in the specified device context.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.printclient.htm">PrintClient</a></td>
<td width=61%>Draws any window in the specified device context (usually a printer device context).</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.lockwindowupdate.htm">LockWindowUpdate</a></td>
<td width=61%>Disables or reenables drawing in the given window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.unlockwindowupdate.htm">UnlockWindowUpdate</a></td>
<td width=61%>Unlocks a window that was locked with <b>CWnd::LockWindowUpdate</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getdc.htm">GetDC</a></td>
<td width=61%>Retrieves a display context for the client area.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getdcex.htm">GetDCEx</a></td>
<td width=61%>Retrieves a display context for the client area, and enables clipping while drawing.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.redrawwindow.htm">RedrawWindow</a></td>
<td width=61%>Updates the specified rectangle or region in the client area.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getwindowdc.htm">GetWindowDC</a></td>
<td width=61%>Retrieves the display context for the whole window, including the caption bar, menus, and scroll bars.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.releasedc.htm">ReleaseDC</a></td>
<td width=61%>Releases client and window device contexts, freeing them for use by other applications.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.updatewindow.htm">UpdateWindow</a></td>
<td width=61%>Updates the client area.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.setredraw.htm">SetRedraw</a></td>
<td width=61%>Allows changes in <b>CWnd</b> to be redrawn or prevents changes from being redrawn.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getupdaterect.htm">GetUpdateRect</a></td>
<td width=61%>Retrieves the coordinates of the smallest rectangle that completely encloses the <b>CWnd</b> update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.getupdatergn.htm">GetUpdateRgn</a></td>
<td width=61%>Retrieves the <b>CWnd</b> update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.invalidate.htm">Invalidate</a></td>
<td width=61%>Invalidates the entire client area.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.invalidaterect.htm">InvalidateRect</a></td>
<td width=61%>Invalidates the client area within the given rectangle by adding that rectangle to the current update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.invalidatergn.htm">InvalidateRgn</a></td>
<td width=61%>Invalidates the client area within the given region by adding that region to the current update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.validaterect.htm">ValidateRect</a></td>
<td width=61%>Validates the client area within the given rectangle by removing the rectangle from the current update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.validatergn.htm">ValidateRgn</a></td>
<td width=61%>Validates the client area within the given region by removing the region from the current update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.showwindow.htm">ShowWindow</a></td>
<td width=61%>Shows or hides the window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.iswindowvisible.htm">IsWindowVisible</a></td>
<td width=61%>Determines whether the window is visible.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.showownedpopups.htm">ShowOwnedPopups</a></td>
<td width=61%>Shows or hides all pop-up windows owned by the window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.enablescrollbar.htm">EnableScrollBar</a></td>
<td width=61%>Enables or disables one or both arrows of a scroll bar.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_coordinate_mapping_functions_cwnd"></a><b>Coordinate Mapping Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.mapwindowpoints.htm">MapWindowPoints</a></td>
<td width=61%>Converts (maps) a set of points from the coordinate space of the <b>CWnd</b> to the coordinate space of another window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.clienttoscreen.htm">ClientToScreen</a></td>
<td width=61%>Converts the client coordinates of a given point or rectangle on the display to screen coordinates.</td>
</tr>
<tr valign=top>
<td width=39%><a href="_mfc_cwnd.3a3a.screentoclient.htm">ScreenToClient</a></td>
<td width=61%>Converts the screen coordinates of a given point or rectangle on the display to client coordinates.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_window_text_functions_cwnd"></a><b>Window Text Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setwindowtext.htm">SetWindowText</a></td>
<td width=60%>Sets the window text or caption title (if it has one) to the specified text.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getwindowtext.htm">GetWindowText</a></td>
<td width=60%>Returns the window text or caption title (if it has one).</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getwindowtextlength.htm">GetWindowTextLength</a></td>
<td width=60%>Returns the length of the window’s text or caption title.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setfont.htm">SetFont</a></td>
<td width=60%>Sets the current font.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getfont.htm">GetFont</a></td>
<td width=60%>Retrieves the current font.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_scrolling_functions_cwnd"></a><b>Scrolling Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getscrollpos.htm">GetScrollPos</a></td>
<td width=60%>Retrieves the current position of a scroll box.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getscrollrange.htm">GetScrollRange</a></td>
<td width=60%>Copies the current minimum and maximum scroll-bar positions for the given scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.scrollwindow.htm">ScrollWindow</a></td>
<td width=60%>Scrolls the contents of the client area.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.scrollwindowex.htm">ScrollWindowEx</a></td>
<td width=60%>Scrolls the contents of the client area. Similar to <b>ScrollWindow</b>, with additional features.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getscrollinfo.htm">GetScrollInfo</a></td>
<td width=60%>Retrieves the information that the <b>SCROLLINFO</b> structure maintains about a scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getscrolllimit.htm">GetScrollLimit</a></td>
<td width=60%>Retrieves the limit of the scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setscrollinfo.htm">SetScrollInfo</a></td>
<td width=60%>Sets information about the scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setscrollpos.htm">SetScrollPos</a></td>
<td width=60%>Sets the current position of a scroll box and, if specified, redraws the scroll bar to reflect the new position.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setscrollrange.htm">SetScrollRange</a></td>
<td width=60%>Sets minimum and maximum position values for the given scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.showscrollbar.htm">ShowScrollBar</a></td>
<td width=60%>Displays or hides a scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.enablescrollbarctrl.htm">EnableScrollBarCtrl</a></td>
<td width=60%>Enables or disables a sibling scroll-bar control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getscrollbarctrl.htm">GetScrollBarCtrl</a></td>
<td width=60%>Returns a sibling scroll-bar control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.repositionbars.htm">RepositionBars</a></td>
<td width=60%>Repositions control bars in the client area.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_drag.2d.drop_functions_cwnd"></a><b>Drag-Drop Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.dragacceptfiles.htm">DragAcceptFiles</a></td>
<td width=60%>Indicates the window will accept dragged files.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_caret_functions_cwnd"></a><b>Caret Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.createcaret.htm">CreateCaret</a></td>
<td width=60%>Creates a new shape for the system caret and gets ownership of the caret.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.createsolidcaret.htm">CreateSolidCaret</a></td>
<td width=60%>Creates a solid block for the system caret and gets ownership of the caret.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.creategraycaret.htm">CreateGrayCaret</a></td>
<td width=60%>Creates a gray block for the system caret and gets ownership of the caret.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getcaretpos.htm">GetCaretPos</a></td>
<td width=60%>Retrieves the client coordinates of the caret’s current position.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setcaretpos.htm">SetCaretPos</a></td>
<td width=60%>Moves the caret to a specified position.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.hidecaret.htm">HideCaret</a></td>
<td width=60%>Hides the caret by removing it from the display screen.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.showcaret.htm">ShowCaret</a></td>
<td width=60%>Shows the caret on the display at the caret’s current position. Once shown, the caret begins flashing automatically.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_dialog.2d.box_item_functions_cwnd"></a><b>Dialog-Box Item Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.checkdlgbutton.htm">CheckDlgButton</a></td>
<td width=60%>Places a check mark next to or removes a check mark from a button control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.checkradiobutton.htm">CheckRadioButton</a></td>
<td width=60%>Checks the specified radio button and removes the check mark from all other radio buttons in the specified group of buttons.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getcheckedradiobutton.htm">GetCheckedRadioButton</a></td>
<td width=60%>Returns the ID of the currently checked radio button in a group of buttons.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.dlgdirlist.htm">DlgDirList</a></td>
<td width=60%>Fills a list box with a file or directory listing.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.dlgdirlistcombobox.htm">DlgDirListComboBox</a></td>
<td width=60%>Fills the list box of a combo box with a file or directory listing.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.dlgdirselect.htm">DlgDirSelect</a></td>
<td width=60%>Retrieves the current selection from a list box.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.dlgdirselectcombobox.htm">DlgDirSelectComboBox</a></td>
<td width=60%>Retrieves the current selection from the list box of a combo box.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getdlgitemint.htm">GetDlgItemInt</a></td>
<td width=60%>Translates the text of a control in the given dialog box to an integer value.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getdlgitemtext.htm">GetDlgItemText</a></td>
<td width=60%>Retrieves the caption or text associated with a control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getnextdlggroupitem.htm">GetNextDlgGroupItem</a></td>
<td width=60%>Searches for the next (or previous) control within a group of controls.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.getnextdlgtabitem.htm">GetNextDlgTabItem</a></td>
<td width=60%>Retrieves the first control with the <a href="_mfc_window_styles.htm">WS_TABSTOP</a> style that&nbsp; follows (or precedes) the specified control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.isdlgbuttonchecked.htm">IsDlgButtonChecked</a></td>
<td width=60%>Determines whether a button control is checked.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.isdialogmessage.htm">IsDialogMessage</a></td>
<td width=60%>Determines whether the given message is intended for the modeless dialog box and, if so, processes it.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.senddlgitemmessage.htm">SendDlgItemMessage</a></td>
<td width=60%>Sends a message to the specified control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setdlgitemint.htm">SetDlgItemInt</a></td>
<td width=60%>Sets the text of a control to the string that represents an integer value.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.setdlgitemtext.htm">SetDlgItemText</a></td>
<td width=60%>Sets the caption or text of a control in the specified dialog box.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.subclassdlgitem.htm">SubclassDlgItem</a></td>
<td width=60%>Attaches a Windows control to a <b>CWnd</b> object and makes it route messages through the <b>CWnd</b>’s message map.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.executedlginit.htm">ExecuteDlgInit</a></td>
<td width=60%>Initiates a dialog resource.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.runmodalloop.htm">RunModalLoop</a></td>
<td width=60%>Retrieves, translates, or dispatches messages for a window that is in modal status.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.continuemodal.htm">ContinueModal</a></td>
<td width=60%>Continues a window’s modal status.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.endmodalloop.htm">EndModalLoop</a></td>
<td width=60%>Ends a window’s modal status.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_mfc_data.2d.binding_functions_cwnd"></a>Data-Binding Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.binddefaultproperty.htm">BindDefaultProperty</a></td>
<td width=59%>Binds the calling object’s default simple bound property, as marked in the type library, to a cursor associated with a data-source control. </td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.bindproperty.htm">BindProperty</a></td>
<td width=59%>Binds a cursour-bound property on a data-bound control to a data-source control and registers that relationship with the MFC binding manager.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getdsccursor.htm">GetDSCCursor</a></td>
<td width=59%>Retrieves a pointer to the underlying cursor that is defined by the DataSource, UserName, Password, and SQL properties of a data-source control.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_menu_functions_cwnd"></a><b>Menu Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getmenu.htm">GetMenu</a></td>
<td width=59%>Retrieves a pointer to the specified menu.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.setmenu.htm">SetMenu</a></td>
<td width=59%>Sets the menu to the specified menu.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.drawmenubar.htm">DrawMenuBar</a></td>
<td width=59%>Redraws the menu bar.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getsystemmenu.htm">GetSystemMenu</a></td>
<td width=59%>Allows the application to access the Control menu for copying and modification.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.hilitemenuitem.htm">HiliteMenuItem</a></td>
<td width=59%>Highlights or removes the highlighting from a top-level (menu-bar) menu item.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_mfc_tool_tip_functions_cwnd"></a>ToolTip Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.enabletooltips.htm">EnableToolTips</a></td>
<td width=59%>Enables the tooltip control.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.canceltooltips.htm">CancelToolTips</a></td>
<td width=59%>Disables the tooltip control.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.filtertooltipmessage.htm">FilterToolTipMessage</a></td>
<td width=59%>Retrieves the title or text associated with a control in a dialog box.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.ontoolhittest.htm">OnToolHitTest</a></td>
<td width=59%>Detemines whether a point is in the bounding rectangle of the specified tool and retrieves information about the tool.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_mfc_timer_functions_cwnd"></a>Timer Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.settimer.htm">SetTimer</a></td>
<td width=59%>Installs a system timer that sends a <a href="_mfc_cwnd.3a3a.ontimer.htm">WM_TIMER</a> message when triggered.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.killtimer.htm">KillTimer</a></td>
<td width=59%>Kills a system timer.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_mfc_alert_functions_cwnd"></a>Alert Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.flashwindow.htm">FlashWindow</a></td>
<td width=59%>Flashes the window once.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.messagebox.htm">MessageBox</a></td>
<td width=59%>Creates and displays a window that contains an application-supplied message and caption.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_mfc_window_message_functions_cwnd"></a>Window Message Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getcurrentmessage.htm">GetCurrentMessage</a></td>
<td width=59%>Returns a pointer to the message this window is currently processing. Should only be called when in an <b>On</b><i>Message</i> message-handler member function.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.default.htm">Default</a></td>
<td width=59%>Calls the default window procedure, which provides default processing for any window messages that an application does not process.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.pretranslatemessage.htm">PreTranslateMessage</a></td>
<td width=59%>Used by <b>CWinApp</b> to filter window messages before they are dispatched to the <b>TranslateMessage</b> and <b>DispatchMessage</b> Windows functions.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.sendmessage.htm">SendMessage</a></td>
<td width=59%>Sends a message to the <b>CWnd</b> object and does not return until it has processed the message.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.postmessage.htm">PostMessage</a></td>
<td width=59%>Places a message in the application queue, then returns without waiting for the window to process the message.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.sendnotifymessage.htm">SendNotifyMessage</a></td>
<td width=59%>Sends the specified message to the window and returns as soon as possible, depending on whether the calling thread created the window.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_clipboard_functions_cwnd"></a><b>Clipboard Functions </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.changeclipboardchain.htm">ChangeClipboardChain</a></td>
<td width=59%>Removes <b>CWnd</b> from the chain of Clipboard viewers.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.setclipboardviewer.htm">SetClipboardViewer</a></td>
<td width=59%>Adds <b>CWnd</b> to the chain of windows that are notified whenever the contents of the Clipboard are changed.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.openclipboard.htm">OpenClipboard</a></td>
<td width=59%>Opens the Clipboard. Other applications will not be able to modify the Clipboard until the Windows <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_CloseClipboard">
</object><a href=JavaScript:alink_1.Click()>CloseClipboard</a> function is called.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getclipboardowner.htm">GetClipboardOwner</a></td>
<td width=59%>Retrieves a pointer to the current owner of the Clipboard.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getopenclipboardwindow.htm">GetOpenClipboardWindow</a></td>
<td width=59%>Retrieves a pointer to the window that currently has the Clipboard open.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getclipboardviewer.htm">GetClipboardViewer</a></td>
<td width=59%>Retrieves a pointer to the first window in the chain of Clipboard viewers.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_mfc_ole_controls_cwnd"></a>OLE Controls </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.setproperty.htm">SetProperty</a></td>
<td width=59%>Sets an OLE control property.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onambientproperty.htm">OnAmbientProperty</a></td>
<td width=59%>Implement ambient property values.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getcontrolunknown.htm">GetControlUnknown</a></td>
<td width=59%>Retrieves a pointer to an unknown OLE control.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.getproperty.htm">GetProperty</a></td>
<td width=59%>Retrieves an OLE control property.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.invokehelper.htm">InvokeHelper</a></td>
<td width=59%>Invokes an OLE control method or property.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_mfc_overridables_cwnd"></a>Overridables </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.windowproc.htm">WindowProc</a></td>
<td width=59%>Provides a window procedure for a <b>CWnd</b>. The default dispatches messages through the message map.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.defwindowproc.htm">DefWindowProc</a></td>
<td width=59%>Calls the default window procedure, which provides default processing for any window messages that an application does not process.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.postncdestroy.htm">PostNcDestroy</a></td>
<td width=59%>This virtual function is called by the default <a href="_mfc_cwnd.3a3a.onncdestroy.htm">OnNcDestroy</a> function after the window has been destroyed.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onnotify.htm">OnNotify</a></td>
<td width=59%>Called by the framework to inform a parent window an event has occurred in one of its controls or that the control needs information.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onchildnotify.htm">OnChildNotify</a></td>
<td width=59%>Called by a parent window to give a notifying control a chance to respond to a control notification.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.dodataexchange.htm">DoDataExchange</a></td>
<td width=59%>For dialog data exchange and validation. Called by <b>UpdateData</b>.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_initialization_message_handlers_cwnd"></a><b>Initialization Message Handlers </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.oninitmenu.htm">OnInitMenu</a></td>
<td width=58%>Called when a menu is about to become active.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.oninitmenupopup.htm">OnInitMenuPopup</a></td>
<td width=58%>Called when a pop-up menu is about to become active.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_system_message_handlers_cwnd"></a><b>System Message Handlers </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsyschar.htm">OnSysChar</a></td>
<td width=58%>Called when a keystroke translates to a system character.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsyscommand.htm">OnSysCommand</a></td>
<td width=58%>Called when the user selects a command from the Control menu, or when the user selects the Maximize or Minimize button.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsysdeadchar.htm">OnSysDeadChar</a></td>
<td width=58%>Called when a keystroke translates to a system dead character (such as accent characters).</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsyskeydown.htm">OnSysKeyDown</a></td>
<td width=58%>Called when the user holds down the ALT key and then presses another key.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsyskeyup.htm">OnSysKeyUp</a></td>
<td width=58%>Called when the user releases a key that was pressed while the ALT key was held down.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.oncompacting.htm">OnCompacting</a></td>
<td width=58%>Called when Windows detects that system memory is low.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.ondevmodechange.htm">OnDevModeChange</a></td>
<td width=58%>Called for all top-level windows when the user changes device-mode settings.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onfontchange.htm">OnFontChange</a></td>
<td width=58%>Called when the pool of font resources changes.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onpaletteischanging.htm">OnPaletteIsChanging</a></td>
<td width=58%>Informs other applications when an application is going to realize its logical palette.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onpalettechanged.htm">OnPaletteChanged</a></td>
<td width=58%>Called to allow windows that use a color palette to realize their logical palettes and update their client areas.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsyscolorchange.htm">OnSysColorChange</a></td>
<td width=58%>Called for all top-level windows when a change is made in the system color setting.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onwindowposchanging.htm">OnWindowPosChanging</a></td>
<td width=58%>Called when the size, position, or Z-order is about to change as a result of a call to <a href="_mfc_cwnd.3a3a.setwindowpos.htm">SetWindowPos</a> or another window-management function.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onwindowposchanged.htm">OnWindowPosChanged</a></td>
<td width=58%>Called when the size, position, or Z-order has changed as a result of a call to <a href="_mfc_cwnd.3a3a.setwindowpos.htm">SetWindowPos</a> or another window-management function.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.ondropfiles.htm">OnDropFiles</a></td>
<td width=58%>Called when the user releases the left mouse button over a window that has registered itself as the recipient of dropped files.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onspoolerstatus.htm">OnSpoolerStatus</a></td>
<td width=58%>Called from Print Manager whenever a job is added to or removed from the Print Manager queue.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.ontimechange.htm">OnTimeChange</a></td>
<td width=58%>Called for all top-level windows after the system time changes.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onwininichange.htm">OnWinIniChange</a></td>
<td width=58%>Called for all top-level windows after the Windows initialization file, WIN.INI, is changed.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_general_message_handlers_cwnd"></a><b>General Message Handlers </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.oncommand.htm">OnCommand</a></td>
<td width=58%>Called when the user selects a command.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onactivate.htm">OnActivate</a></td>
<td width=58%>Called when <b>CWnd</b> is being activated or deactivated.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onactivateapp.htm">OnActivateApp</a></td>
<td width=58%>Called when the application is about to be activated or deactivated.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.oncancelmode.htm">OnCancelMode</a></td>
<td width=58%>Called to allow <b>CWnd</b> to cancel any internal modes, such as mouse capture.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onchildactivate.htm">OnChildActivate</a></td>
<td width=58%>Called for multiple document interface (MDI) child windows whenever the size or position of <b>CWnd</b> changes or <b>CWnd</b> is activated.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onclose.htm">OnClose</a></td>
<td width=58%>Called as a signal that <b>CWnd</b> should be closed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.oncopydata.htm">OnCopyData</a></td>
<td width=58%>Copies data from one application to another.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.oncreate.htm">OnCreate</a></td>
<td width=58%>Called as a part of window creation.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onctlcolor.htm">OnCtlColor</a></td>
<td width=58%>Called if <b>CWnd</b> is the parent of a control when the control is about to be drawn.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.ondestroy.htm">OnDestroy</a></td>
<td width=58%>Called when <b>CWnd</b> is being destroyed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onenable.htm">OnEnable</a></td>
<td width=58%>Called when <b>CWnd</b> is enabled or disabled.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onendsession.htm">OnEndSession</a></td>
<td width=58%>Called when the session is ending.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onenteridle.htm">OnEnterIdle</a></td>
<td width=58%>Called to inform an application’s main window procedure that a modal dialog box or a menu is entering an idle state.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onerasebkgnd.htm">OnEraseBkgnd</a></td>
<td width=58%>Called when the window background needs erasing.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.ongetminmaxinfo.htm">OnGetMinMaxInfo</a></td>
<td width=58%>Called whenever Windows needs to know the maximized position or dimensions, or the minimum or maximum tracking size.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.oniconerasebkgnd.htm">OnIconEraseBkgnd</a></td>
<td width=58%>Called when <b>CWnd</b> is minimized (iconic) and the background of the icon must be filled before painting the icon.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onkillfocus.htm">OnKillFocus</a></td>
<td width=58%>Called immediately before <b>CWnd</b> loses the input focus.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onmenuchar.htm">OnMenuChar</a></td>
<td width=58%>Called when the user presses a menu mnemonic character that doesn’t match any of the predefined mnemonics in the current menu.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onmenuselect.htm">OnMenuSelect</a></td>
<td width=58%>Called when the user selects a menu item.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onmove.htm">OnMove</a></td>
<td width=58%>Called after the position of the <b>CWnd</b> has been changed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onmoving.htm">OnMoving</a></td>
<td width=58%>Indicates that a user is moving a <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.ondevicechange.htm">OnDeviceChange</a></td>
<td width=58%>Notifies an application or device driver of a change to the hardware configuration of a device or the computer.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onstylechanged.htm">OnStyleChanged</a></td>
<td width=58%>Indicates that the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_Win32_SetWindowLong">
</object><a href=JavaScript:alink_2.Click()>::SetWindowLong</a> Windows function has changed one or more of the window's styles.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onstylechanging.htm">OnStyleChanging</a></td>
<td width=58%>Indicates that the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_Win32_SetWindowLong">
</object><a href=JavaScript:alink_3.Click()>::SetWindowLong</a> Windows function is about to change one or more of the window's styles.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onpaint.htm">OnPaint</a></td>
<td width=58%>Called to repaint a portion of the window.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onparentnotify.htm">OnParentNotify</a></td>
<td width=58%>Called when a child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onquerydragicon.htm">OnQueryDragIcon</a></td>
<td width=58%>Called when a minimized (iconic) <b>CWnd</b> is about to be dragged by the user.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onqueryendsession.htm">OnQueryEndSession</a></td>
<td width=58%>Called when the user chooses to end the Windows session.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onquerynewpalette.htm">OnQueryNewPalette</a></td>
<td width=58%>Informs <b>CWnd</b> that it is about to receive the input focus.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onqueryopen.htm">OnQueryOpen</a></td>
<td width=58%>Called when <b>CWnd</b> is an icon and the user requests that the icon be opened.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsetfocus.htm">OnSetFocus</a></td>
<td width=58%>Called after <b>CWnd</b> gains the input focus.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onshowwindow.htm">OnShowWindow</a></td>
<td width=58%>Called when <b>CWnd</b> is to be hidden or shown.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsize.htm">OnSize</a></td>
<td width=58%>Called after the size of <b>CWnd</b> has changed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onsizing.htm">OnSizing</a></td>
<td width=58%>Indicates that the user is resizing the rectangle.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onstylechanged.htm">OnStyleChanged</a></td>
<td width=58%>Indicates that one or more of the window's styles has changed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="_mfc_cwnd.3a3a.onstylechanging.htm">OnStyleChanging</a></td>
<td width=58%>Indicates that one or more of the window's styles is about to change.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_control_message_handlers_cwnd"></a><b>Control Message Handlers </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onchartoitem.htm">OnCharToItem</a></td>
<td width=59%>Called by a child list box with the <a href="_mfc_list.2d.box_styles.htm">LBS_WANTKEYBOARDINPUT</a> style in response to a <a href="_mfc_cwnd.3a3a.onchar.htm">WM_CHAR</a> message.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.oncompareitem.htm">OnCompareItem</a></td>
<td width=59%>Called to determine the relative position of a new item in a child sorted owner-draw combo box or list box.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.ondeleteitem.htm">OnDeleteItem</a></td>
<td width=59%>Called when an owner-draw child list box or combo box is destroyed or when items are removed from the control.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.ondrawitem.htm">OnDrawItem</a></td>
<td width=59%>Called when a visual aspect of an owner-draw child button control, combo-box control, list-box control, or menu needs to be drawn.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.ondscnotify.htm">OnDSCNotify</a></td>
<td width=59%>Called in response to an event that a data-source control fires when a control to which the data-source control is bound modifies or attempts to modify the underlying cursor.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.ongetdlgcode.htm">OnGetDlgCode</a></td>
<td width=59%>Called for a control so the control can process arrow-key and TAB-key input itself.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onmeasureitem.htm">OnMeasureItem</a></td>
<td width=59%>Called for an owner-draw child combo box, list box, or menu item when the control is created. <b>CWnd</b> informs Windows of the dimensions of the control.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.sendchildnotifylastmsg.htm">SendChildNotifyLastMsg</a></td>
<td width=59%>Provides a notification message to a child window, from the parent window, so the child window can handle a task.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.reflectchildnotify.htm">ReflectChildNotify</a></td>
<td width=59%>Helper function which reflects a message to its source.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onwndmsg.htm">OnWndMsg</a></td>
<td width=59%>Indicates if a windows message was handled.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.reflectlastmsg.htm">ReflectLastMsg</a></td>
<td width=59%>Reflects the last message to the child window.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onvkeytoitem.htm">OnVKeyToItem</a></td>
<td width=59%>Called by a list box owned by <b>CWnd</b> in response to a <a href="_mfc_cwnd.3a3a.onkeydown.htm">WM_KEYDOWN</a> message.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_input_message_handlers_cwnd"></a><b>Input Message Handlers </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onchar.htm">OnChar</a></td>
<td width=59%>Called when a keystroke translates to a nonsystem character.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.ondeadchar.htm">OnDeadChar</a></td>
<td width=59%>Called when a keystroke translates to a nonsystem dead character (such as accent characters).</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onhscroll.htm">OnHScroll</a></td>
<td width=59%>Called when the user clicks the horizontal scroll bar of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onkeydown.htm">OnKeyDown</a></td>
<td width=59%>Called when a nonsystem key is pressed.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onkeyup.htm">OnKeyUp</a></td>
<td width=59%>Called when a nonsystem key is released.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onlbuttondblclk.htm">OnLButtonDblClk</a></td>
<td width=59%>Called when the user double-clicks the left mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onlbuttondown.htm">OnLButtonDown</a></td>
<td width=59%>Called when the user presses the left mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onlbuttonup.htm">OnLButtonUp</a></td>
<td width=59%>Called when the user releases the left mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onmbuttondblclk.htm">OnMButtonDblClk</a></td>
<td width=59%>Called when the user double-clicks the middle mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onmbuttondown.htm">OnMButtonDown</a></td>
<td width=59%>Called when the user presses the middle mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onmbuttonup.htm">OnMButtonUp</a></td>
<td width=59%>Called when the user releases the middle mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onmouseactivate.htm">OnMouseActivate</a></td>
<td width=59%>Called when the cursor is in an inactive window and the user presses a mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onmousemove.htm">OnMouseMove</a></td>
<td width=59%>Called when the mouse cursor moves.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onmousewheel.htm">OnMouseWheel</a></td>
<td width=59%>Called when a user rotates the mouse wheel. Uses Windows NT 4.0 message handling.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onregisteredmousewheel.htm">OnRegisteredMouseWheel</a></td>
<td width=59%>Called when a user rotates the mouse wheel. Uses Windows 95 and Windows NT 3.51 message-handling.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onrbuttondblclk.htm">OnRButtonDblClk</a></td>
<td width=59%>Called when the user double-clicks the right mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onrbuttondown.htm">OnRButtonDown</a></td>
<td width=59%>Called when the user presses the right mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onrbuttonup.htm">OnRButtonUp</a></td>
<td width=59%>Called when the user releases the right mouse button.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onsetcursor.htm">OnSetCursor</a></td>
<td width=59%>Called if mouse input is not captured and the mouse causes cursor movement within a window.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.ontimer.htm">OnTimer</a></td>
<td width=59%>Called after each interval specified in <a href="_mfc_cwnd.3a3a.settimer.htm">SetTimer</a>.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.onvscroll.htm">OnVScroll</a></td>
<td width=59%>Called when the user clicks the window’s vertical scroll bar.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_mfc_cwnd.3a3a.oncapturechanged.htm">OnCaptureChanged</a></td>
<td width=59%>Sends a message to the window that is losing the mouse capture.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_mfc_nonclient.2d.area_message_handlers_cwnd"></a>Nonclient-Area Message Handlers</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncactivate.htm">OnNcActivate</a></td>
<td width=57%>Called when the nonclient area needs to be changed to indicate an active or inactive state.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onnccalcsize.htm">OnNcCalcSize</a></td>
<td width=57%>Called when the size and position of the client area need to be calculated.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onnccreate.htm">OnNcCreate</a></td>
<td width=57%>Called prior to <a href="_mfc_cwnd.3a3a.oncreate.htm">OnCreate</a> when the nonclient area is being created.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncdestroy.htm">OnNcDestroy</a></td>
<td width=57%>Called when the nonclient area is being destroyed.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onnchittest.htm">OnNcHitTest</a></td>
<td width=57%>Called by Windows every time the mouse is moved if <b>CWnd</b> contains the cursor or has captured mouse input with <b>SetCapture</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onnclbuttondblclk.htm">OnNcLButtonDblClk</a></td>
<td width=57%>Called when the user double-clicks the left mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onnclbuttondown.htm">OnNcLButtonDown</a></td>
<td width=57%>Called when the user presses the left mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onnclbuttonup.htm">OnNcLButtonUp</a></td>
<td width=57%>Called when the user releases the left mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncmbuttondblclk.htm">OnNcMButtonDblClk</a></td>
<td width=57%>Called when the user double-clicks the middle mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncmbuttondown.htm">OnNcMButtonDown</a></td>
<td width=57%>Called when the user presses the middle mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncmbuttonup.htm">OnNcMButtonUp</a></td>
<td width=57%>Called when the user releases the middle mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncmousemove.htm">OnNcMouseMove</a></td>
<td width=57%>Called when the cursor is moved within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncpaint.htm">OnNcPaint</a></td>
<td width=57%>Called when the nonclient area needs painting.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncrbuttondblclk.htm">OnNcRButtonDblClk</a></td>
<td width=57%>Called when the user double-clicks the right mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncrbuttondown.htm">OnNcRButtonDown</a></td>
<td width=57%>Called when the user presses the right mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onncrbuttonup.htm">OnNcRButtonUp</a></td>
<td width=57%>Called when the user releases the right mouse button while the cursor is within a nonclient area of <b>CWnd</b>.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_mdi_message_handlers_cwnd"></a><b>MDI Message Handlers </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onmdiactivate.htm">OnMDIActivate</a></td>
<td width=57%>Called when an MDI child window is activated or deactivated.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_clipboard_message_handlers_cwnd"></a><b>Clipboard Message Handlers </b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onaskcbformatname.htm">OnAskCbFormatName</a></td>
<td width=57%>Called by a Clipboard viewer application when a Clipboard owner will display the Clipboard contents.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onchangecbchain.htm">OnChangeCbChain</a></td>
<td width=57%>Notifies that a specified window is being removed from the chain.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.ondestroyclipboard.htm">OnDestroyClipboard</a></td>
<td width=57%>Called when the Clipboard is emptied through a call to the Windows <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_EmptyClipboard">
</object><a href=JavaScript:alink_4.Click()>EmptyClipboard</a> function.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.ondrawclipboard.htm">OnDrawClipboard</a></td>
<td width=57%>Called when the contents of the change.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onhscrollclipboard.htm">OnHScrollClipboard</a></td>
<td width=57%>Called when a Clipboard owner should scroll the Clipboard image, invalidate the appropriate section, and update the scroll-bar values.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onpaintclipboard.htm">OnPaintClipboard</a></td>
<td width=57%>Called when the client area of the Clipboard viewer needs repainting.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onrenderallformats.htm">OnRenderAllFormats</a></td>
<td width=57%>Called when the owner application is being destroyed and needs to render all its formats.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onrenderformat.htm">OnRenderFormat</a></td>
<td width=57%>Called for the Clipboard owner when a particular format with delayed rendering needs to be rendered.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onsizeclipboard.htm">OnSizeClipboard</a></td>
<td width=57%>Called when the size of the client area of the Clipboard-viewer window has changed.</td>
</tr>
<tr valign=top>
<td width=43%><a href="_mfc_cwnd.3a3a.onvscrollclipboard.htm">OnVScrollClipboard</a></td>
<td width=57%>Called when the owner should scroll the Clipboard image, invalidate the appropriate section, and update the scroll-bar values.</td>
</tr>
</table><br>
<p class=label>
<a name="_mfc_menu_loop_notification_cwnd"></a><b>Menu Loop Notification</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.onentermenuloop.htm">OnEnterMenuLoop</a></td>
<td width=60%>Called when a menu modal loop has been entered.</td>
</tr>
<tr valign=top>
<td width=40%><a href="_mfc_cwnd.3a3a.onexitmenuloop.htm">OnExitMenuLoop</a></td>
<td width=60%>Called when a menu modal loop has been exited.</td>
</tr>
</table><br>
<p>
<a href="_mfc_cwnd.htm">CWnd Overview</a>  |&nbsp; <a href="_mfc_ccmdtarget_class_members.htm">Base Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
</font></BODY>
</HTML>
