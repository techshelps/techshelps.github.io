<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AfxLoadLibrary</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_afxloadlibrary"></a>AfxLoadLibrary</h1>
<p>
<b>HINSTANCE AFXAPI AfxLoadLibrary(</b> <b>LPCTSTR </b><i>lpszModuleName</i> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
If the function succeeds, the return value is a handle to the module. If the function fails, the return value is NULL.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>lpszModuleName</i></p>
<p class=indent>
Points to a null-terminated string that contains the name of the module (either a .DLL or .EXE file). The name specified is the filename of the module.</p>
<p class=dt>
</p>
<p class=indent>
If the string specifies a path but the file does not exist in the specified directory, the function fails. </p>
<p class=dt>
</p>
<p class=indent>
If a path is not specified and the filename extension is omitted, the default extension .DLL is appended. However, the filename string can include a trailing point character (.) to indicate that the module name has no extension. When no path is specified, the function searches for the file in the following sequence: 
<ul type=disc>
<li>
The directory from which the application loaded. <br><br></li>
<li>
The current directory.<br><br></li>
<li>
<b>Windows 95:</b> The Windows system directory. <b>Windows NT:</b> The 32-bit Windows system directory. The name of this directory is SYSTEM32.<br><br></li>
<li>
<b>Windows NT only:</b> The 16-bit Windows system directory. There is no Win32 function that obtains the path of this directory, but it is searched. The name of this directory is SYSTEM.<br><br></li>
<li>
The Windows directory. <br><br></li>
<li>
The directories that are listed in the PATH environment variable. </li>
</ul>
<p class=label>
<b>Remarks</b></p>
<p>
Use <b>AfxLoadLibrary</b> to map a DLL module. It returns a handle that can be used in <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_GetProcAddress">
</object><a href=JavaScript:alink_1.Click()>GetProcAddress</a> to get the address of a DLL function. <b>AfxLoadLibrary</b> can also be used to map other executable modules.</p>
<p>
Each process maintains a reference count for each loaded library module. This reference count is incremented each time <b>AfxLoadLibrary</b> is called and is decremented each time <b>AfxFreeLibrary</b> is called. When the reference count reaches zero, the module is unmapped from the address space of the calling process and the handle is no longer valid. </p>
<p>
Be sure to use <b>AfxLoadLibrary</b> and <b>AfxFreeLibrary</b> (instead of the Win32 functions <b>LoadLibrary</b> and <b>FreeLibrary</b>) if your application uses multiple threads. Using <b>AfxLoadLibrary</b> and <b>AfxFreeLibrary</b> insures that the startup and shutdown code that executes when the extension DLL is loaded and unloaded does not corrupt the global MFC state.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_afxfreelibrary.htm">AfxFreeLibrary</a></p>
</font></BODY>
</HTML>
