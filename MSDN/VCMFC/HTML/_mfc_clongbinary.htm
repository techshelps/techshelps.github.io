<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CLongBinary</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_clongbinary"></a><sup></sup>CLongBinary</h1>
<p>
<img src="clongbin.gif" border=0></p>
<p>
Class <b>CLongBinary</b> simplifies working with very large binary data objects (often called BLOBs, or “binary large objects”) in a database. For example, a record field in an SQL table might contain a bitmap representing a picture. A <b>CLongBinary</b> object stores such an object and keeps track of its size.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In general, it is better practice now to use <a href="_mfc_cbytearray.htm">CByteArray</a> in conjunction with the <a href="_mfc_dfx_binary.htm">DFX_Binary</a> function. You can still use <b>CLongBinary</b>, but in general <b>CByteArray</b> provides more functionality under Win32, since there is no longer the size limitation encountered with 16-bit <b>CByteArray</b>. This advice applies to programming with Data Access Objects (DAO) as well as Open Database Connectivity (ODBC).</p>
<p>
To use a <b>CLongBinary</b> object, declare a field data member of type <b>CLongBinary</b> in your recordset class. This member will be an embedded member of the recordset class and will be constructed when the recordset is constructed. After the <b>CLongBinary</b> object is constructed, the record field exchange (RFX) mechanism loads the data object from a field in the current record on the data source and stores it back to the record when the record is updated. RFX queries the data source for the size of the binary large object, allocates storage for it (via the <b>CLongBinary</b> object’s <b>m_hData</b> data member), and stores an <b>HGLOBAL</b> handle to the data in <b>m_hData</b>. RFX also stores the actual size of the data object in the <b>m_dwDataLength</b> data member. Work with the data in the object through <b>m_hData</b>, using the same techniques you would normally use to manipulate the data stored in a Windows <b>HGLOBAL</b> handle. </p>
<p>
When you destroy your recordset, the embedded <b>CLongBinary</b> object is also destroyed, and its destructor deallocates the <b>HGLOBAL</b> data handle.</p>
<p>
For more information about large objects and the use of <b>CLongBinary</b>, see the articles <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Recordset_.28.ODBC.29">
</object><a href=JavaScript:alink_1.Click()>Recordset (ODBC)</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Recordset.3a_.Working_with_Large_Data_Items_.28.ODBC.29">
</object><a href=JavaScript:alink_2.Click()>Recordset: Working with Large Data Items (ODBC)</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
<b>#include &lt;afxdb.h&gt;</b></p>
<p>
<a href="_mfc_clongbinary_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cobject.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_crecordset.htm">CRecordset</a></p>
</font></BODY>
</HTML>
