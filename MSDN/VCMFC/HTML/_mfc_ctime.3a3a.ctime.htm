<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CTime::CTime</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_ctime.3a3a.ctime"></a><sup></sup>CTime::CTime</h1>
<p>
<b>CTime(</b> <b>);</b></p>
<p>
<b>CTime(</b> <b>const</b> <b>CTime&amp;</b> <i>timeSrc</i> <b>);</b></p>
<p>
<b>CTime(</b> <b>time_t</b> <i>time</i> <b>);</b></p>
<p>
<b>CTime(</b> <b>int</b> <i>nYear</i><b>,</b> <b>int</b> <i>nMonth</i><b>,</b> <b>int</b> <i>nDay</i><b>,</b> <b>int</b> <i>nHour</i><b>,</b> <b>int</b> <i>nMin</i><b>,</b> <b>int</b> <i>nSec</i>,<b> int </b><i>nDST</i><b> = -1 );</b></p>
<p>
<b>CTime(</b> <b>WORD</b> <i>wDosDate</i><b>,</b> <b>WORD</b> <i>wDosTime</i><b>, int </b><i>nDST</i><b> = -1 );</b></p>
<p>
<b>CTime(</b> <b>const</b> <b>SYSTEMTIME&amp;</b> <i>sysTime</i><b>, int </b><i>nDST</i><b> = -1 );</b></p>
<p>
<b>CTime(</b> <b>const</b> <b>FILETIME&amp;</b> <i>fileTime</i><b>, int </b><i>nDST</i><b> = -1 );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>timeSrc</i></p>
<p class=indent>
Indicates a <b>CTime</b> object that already exists.</p>
<p class=dt>
<i>time</i></p>
<p class=indent>
Indicates a time value.</p>
<p class=dt>
<i>nYear</i>, <i>nMonth</i>, <i>nDay</i>, <i>nHour</i>, <i>nMin</i>, <i>nSec</i></p>
<p class=indent>
Indicates the date and time values to be copied into the new <b>CTime</b> object.</p>
<p class=dt>
<i>nDST</i></p>
<p class=indent>
Indicates whether daylight savings time is in effect. Can have one of three values, as follows:
<ul type=disc>
<li>
<i>nDST</i> set to 0&nbsp;&nbsp;&nbsp;Standard time is in effect.<br><br></li>
<li>
<i>nDST</i> set to a value greater than 0&nbsp;&nbsp;&nbsp;Daylight savings time is in effect.<br><br></li>
<li>
<i>nDST</i> set to a value less than 0&nbsp; The default. Automatically computes whether standard time or daylight savings time is in effect. </li>
</ul>
<p class=dt>
<i>wDosDate</i>, <i>wDosTime</i></p>
<p class=indent>
MS-DOS date and time values to be converted to a date/time value and copied into the new <b>CTime </b>object.</p>
<p class=dt>
<i>sysTime</i></p>
<p class=indent>
A <a href="_mfc_systemtime_structure.htm">SYSTEMTIME</a> structure to be converted to a date/time value and copied into the new <b>CTime</b> object.</p>
<p class=dt>
<i>fileTime</i></p>
<p class=indent>
A <a href="_mfc_filetime_structure.htm">FILETIME</a> structure to be converted to a date/time value and copied into the new <b>CTime</b> object.</p>
<p class=label>
<b>Remarks</b></p>
<p>
All these constructors create a new <b>CTime</b> object initialized with the specified absolute time, based on the current time zone. </p>
<p>
Each constructor is described below:
<ul type=disc>
<li>
<b>CTime( );</b>&nbsp;&nbsp;&nbsp;Constructs an unitialized <b>CTime</b> object. This constructor allows you to define <b>CTime</b> object arrays. You should initialize such arrays with valid times prior to use.<br><br></li>
<li>
<b>CTime( const CTime&amp; );</b>&nbsp;&nbsp;&nbsp;Constructs a <b>CTime</b> object from another <b>CTime</b> value.<br><br></li>
<li>
<b>CTime( time_t );</b>&nbsp;&nbsp;&nbsp;Constructs a <b>CTime</b> object from a <b>time_t</b> type.<br><br></li>
<li>
<b>CTime( int, int,</b> etc.<b>);</b>&nbsp;&nbsp;&nbsp;Constructs a <b>CTime</b> object from local time components with each component constrained to the following ranges:<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=24%><b>Component</b></td>
<td class=label width=76%><b>Range</b></td>
</tr>
<tr valign=top>
<td width=24%><i>nYear</i></td>
<td width=76%>1970–2038<sup>*</sup></td>
</tr>
<tr valign=top>
<td width=24%><i>nMonth</i></td>
<td width=76%>1–12</td>
</tr>
<tr valign=top>
<td width=24%><i>nDay</i></td>
<td width=76%>1–31</td>
</tr>
<tr valign=top>
<td width=24%><i>nHour</i></td>
<td width=76%>no constraint</td>
</tr>
<tr valign=top>
<td width=24%><i>nMin</i></td>
<td width=76%>no constraint</td>
</tr>
<tr valign=top>
<td width=24%><i>nSec</i></td>
<td width=76%>no constraint</td>
</tr>
</table><br>
<p class=mini>
<sup>*</sup>The upper date limit is 1/18/2038. For a wider range of dates, see <a href="_mfc_coledatetime.htm">COleDateTime</a>.
<p class=tl>
This constructor makes the appropriate conversion to UTC. The Debug version of the Microsoft Foundation Class Library asserts if one or more of the year, month, or day components is out of range. It is your responsibility to validate the arguments prior to calling.</P></li>
<li>
<b>CTime</b>( <b>WORD, WORD</b> )<b>;</b>&nbsp;&nbsp;&nbsp;Constructs a <b>CTime</b> object from the specified MS-DOS date and time values.<br><br></li>
<li>
<b>CTime</b>( <b>const SYSTEMTIME&amp;</b> )<b>;</b>&nbsp;&nbsp;&nbsp;Constructs a <b>CTime</b> object from a <b>SYSTEMTIME</b> structure.<br><br></li>
<li>
<b>CTime</b>( <b>const FILETIME&amp;</b> )<b>;</b>&nbsp;&nbsp;&nbsp;Constructs a <b>CTime</b> object from a <b>FILETIME</b> structure. You most likely will not use <b>CTime</b> <b>FILETIME</b> initialization directly. If you use a <b>CFile</b> object to manipulate a file, <b>CFile::GetStatus</b> retrieves the file time stamp for you via a <b>CTime</b> object initialized with a <b>FILETIME</b> structure.</li>
</ul>
<p>
For more information on the <b>time_t</b> data type, see the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_CRT_time">
</object><a href=JavaScript:alink_1.Click()>time</a> function in the <i>Run-Time Library Reference</i>.</p>
<p>
For more information, see the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_SYSTEMTIME_str">
</object><a href=JavaScript:alink_2.Click()>SYSTEMTIME</a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_FILETIME_str">
</object><a href=JavaScript:alink_3.Click()>FILETIME</a> structure in the <i>Win32 SDK Programmer’s Reference</i>.</p>
<p>
For more information, see the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_MS_DOS_Date_and_Time">
</object><a href=JavaScript:alink_4.Click()>MS-DOS Date and Time</a> entry in the Win32 SDK documentation.</p>
<p class=label>
<b>Example</b></p>
<pre><code>// example for CTime::CTime
time_t osBinaryTime;&nbsp; // C run-time time (defined in &lt;time.h&gt;)
time( &amp;osBinaryTime ) ;&nbsp; // Get the current time from the 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // operating system.
CTime time1; // Empty CTime. (0 is illegal time value.)
CTime time2 = time1; // Copy constructor.
CTime time3( osBinaryTime );&nbsp; // CTime from C run-time time
CTime time4( 1999, 3, 19, 22, 15, 0 ); // 10:15PM March 19, 1999
</code></pre>
<p>
<a href="_mfc_ctime.htm">CTime Overview</a>  |&nbsp; <a href="_mfc_ctime_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_ctime.3a3a.gettime.htm">CTime::GetTime</a>, <a href="_mfc_ctime.3a3a.getcurrenttime.htm">GetCurrentTime</a>, <a href="_mfc_ctime.3a3a.operator._3d.htm">operator =</a></p>
</font></BODY>
</HTML>
