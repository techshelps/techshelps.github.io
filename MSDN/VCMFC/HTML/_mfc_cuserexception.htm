<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CUserException</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cuserexception"></a>CUserException</h1>
<p>
<img src="cuserex.gif" border=0></p>
<p>
A <b>CUserException</b> is thrown to stop an end-user operation. Use <b>CUserException</b> when you want to use the throw/catch exception mechanism for application-specific exceptions. “User” in the class name can be interpreted as “my user did something exceptional that I need to handle.”</p>
<p>
A <b>CUserException</b> is usually thrown after calling the global function <b>AfxMessageBox</b> to notify the user that an operation has failed. When you write an exception handler, handle the exception specially since the user usually has already been notified of the failure. The framework throws this exception in some cases. To throw a <b>CUserException</b> yourself, alert the user and then call the global function <b>AfxThrowUserException</b>. </p>
<p>
In the example below, a function containing operations that may fail alerts the user and throws a <b>CUserException</b>. The calling function catches the exception and handles it specially:</p>
<pre><code>void DoSomeOperation( )
{
 &nbsp;&nbsp; // Processing
 &nbsp;&nbsp; // If something goes wrong...
 &nbsp;&nbsp; AfxMessageBox( "The x operation failed" );
 &nbsp;&nbsp; AfxThrowUserException( );
}

BOOL TrySomething( )
{
 &nbsp;&nbsp; TRY
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Could throw a CUserException or other exception.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DoSomeOperation( ); 
 &nbsp;&nbsp; }
 &nbsp;&nbsp; CATCH( CUserException, e )
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return FALSE;&nbsp;&nbsp;&nbsp; // User already notified.
 &nbsp;&nbsp; }
 &nbsp;&nbsp; AND_CATCH( CException, e )
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // For other exception types, notify user here.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AfxMessageBox( "Some operation failed" );
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return FALSE;
 &nbsp;&nbsp; }
 &nbsp;&nbsp; END_CATCH
 &nbsp;&nbsp; return TRUE;&nbsp;&nbsp; // No exception thrown.
}
</code></pre>
<p>
For more information on using <b>CUserException</b>, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Exceptions">
</object><a href=JavaScript:alink_1.Click()>Exceptions</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
<b>#include &lt;afxwin.h&gt;</b></p>
<p>
<a href="_mfc_cexception_class_members.htm">Base Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cexception.htm">CException</a>, <a href="_mfc_afxmessagebox.htm">AfxMessageBox</a>, <a href="_mfc_afxthrowuserexception.htm">AfxThrowUserException</a></p>
</font></BODY>
</HTML>
