<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWindow</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_cwindow"></a>CWindow</h1>
<p>
<b>class CWindow</b></p>
<p>
<b>CWindow</b> provides the base functionality for manipulating a window in ATL. Many of the <b>CWindow</b> methods simply wrap one of the Win32 API functions. For example, compare the prototypes for <b>CWindow::ShowWindow</b> and <b>::ShowWindow</b>:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>CWindow method</b></td>
<td class=label width=47%><b>Win32 function</b></td>
</tr>
<tr valign=top>
<td width=53%><b>BOOL ShowWindow( int </b><i>nCmdShow</i><b> );</b></td>
<td width=47%><b>BOOL ShowWindow( HWND </b><i>hWnd</i><b>, int </b><i>nCmdShow</i><b> );</b></td>
</tr>
</table><br>
<p>
<b>CWindow::ShowWindow</b> calls the Win32 function <b>ShowWindow</b> by passing <b>CWindow::m_hWnd</b> as the first parameter. Every <b>CWindow</b> method that directly wraps a Win32 function passes the <b>m_hWnd</b> member; therefore, much of the <b>CWindow</b> documentation will refer you to the <i>Win32 SDK</i> documentation.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Not every window-related Win32 function is wrapped by <b>CWindow</b>, and not every <b>CWindow</b> method wraps a Win32 function.</p>
<p>
<b>CWindow::m_hWnd</b> stores the <b>HWND</b> that identifies a window. An <b>HWND</b> is attached to your object when you:
<ul type=disc>
<li>
Specify an <b>HWND</b> in <b>CWindow</b>’s constructor.<br><br></li>
<li>
Call <b>CWindow::Attach</b>.<br><br></li>
<li>
Use <b>CWindow</b>’s <b>operator =</b>.<br><br></li>
<li>
Create or subclass a window using one of the following classes derived from <b>CWindow</b>:<p class=tl>
<a href="_atl_cwindowimpl.htm">CWindowImpl</a>&nbsp;&nbsp;&nbsp;Allows you to create a new window or subclass an existing window.</P><p class=tl>
<a href="_atl_ccontainedwindow.htm">CContainedWindow</a>&nbsp;&nbsp;&nbsp;Implements a window contained within another object. You can create a new window or subclass an existing window.</P><p class=tl>
<a href="_atl_cdialogimpl.htm">CDialogImpl</a>&nbsp;&nbsp;&nbsp;Allows you to create a modal or modeless dialog box.</P></li>
</ul>
<p>
For more information about windows, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_Windows">
</object><a href=JavaScript:alink_1.Click()>Windows</a> and subsequent topics in the <i>Win32 SDK</i>. For more information about using windows in ATL, see the article <a href="_atl_atl_window_classes.htm">ATL Window Classes</a>.</p>
<p>
<b>#include &lt;atlwin.h&gt;</b></p>
<p>
<a href="_atl_cwindow_class_members.htm">Class Members</a></p>
</font></BODY>
</HTML>
