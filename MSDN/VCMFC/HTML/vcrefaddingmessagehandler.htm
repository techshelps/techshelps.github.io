<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding a Message Handler</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcrefaddingmessagehandler"></a>Adding a Message Handler</h1>
<p>
You can use ClassView or the WizardBar to add a message handler (a member function that handles Windows messages) to a control, and map Windows messages to the message handler.</p>
<p>
Adding a message handler in ATL is the similar to adding a message handler to an MFC class. See <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Adding_a_Message_Handler">
</object><a href=JavaScript:alink_1.Click()>Adding a Message Handler</a> in <i>The Visual C++ Programmer's Guide</i> for more information.</p>
<p>
The following conditions apply only to adding an ATL message handler:
<ul type=disc>
<li>
The message handlers follow the same naming convention as MFC.<br><br></li>
<li>
The <b>Add Windows Message Handler</b> option is enabled only if there is a message map in the class definition. Otherwise, this option is disabled.<br><br></li>
<li>
The new message map entries are added into the main message map. The wizard does not recognize alternate message maps and chaining.</li>
</ul>
</font></BODY>
</HTML>
