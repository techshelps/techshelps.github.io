<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDynamicChain</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_cdynamicchain"></a>CDynamicChain</h1>
<p>
<b>class CDynamicChain</b></p>
<p>
<b>CDynamicChain</b> manages a collection of message maps, enabling a Windows message to be directed, at run time, to another object’s message map.</p>
<p>
To add support for dynamic chaining of message maps, do the following:
<ul type=disc>
<li>
Derive your class from <b>CDynamicChain</b>. In the message map, specify the <a href="_atl_chain_msg_map_dynamic.htm">CHAIN_MSG_MAP_DYNAMIC</a> macro to chain to another object’s default message map.<br><br></li>
<li>
Derive every class you want to chain to from <a href="_atl_cmessagemap.htm">CMessageMap</a>. <b>CMessageMap</b> allows an object to expose its message maps to other objects.<br><br></li>
<li>
Call <b>CDynamicChain::SetChainEntry</b> to identify which object and which message map you want to chain to.</li>
</ul>
<p>
For example, suppose your class is defined as follows:</p>
<pre><code>class CMyWindow : public CDynamicChain, ...
{
public:
 &nbsp; ...

 &nbsp; BEGIN_MSG_MAP(CMyWindow)
 &nbsp;&nbsp;&nbsp;&nbsp; MESSAGE_HANDLER(WM_PAINT, OnPaint)
 &nbsp;&nbsp;&nbsp;&nbsp; MESSAGE_HANDLER(WM_SETFOCUS, OnSetFocus)
 &nbsp;&nbsp;&nbsp;&nbsp; // dynamically chain to the default
 &nbsp;&nbsp;&nbsp;&nbsp; // message map in another object
 &nbsp;&nbsp;&nbsp;&nbsp; CHAIN_MSG_MAP_DYNAMIC(1313)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // '1313' identifies the object
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // and the message map that will be
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // chained to. '1313' is defined
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // through the SetChainEntry method
 &nbsp; END_MSG_MAP()

 &nbsp; LRESULT OnPaint(UINT uMsg, WPARAM wParam, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LPARAM lParam, BOOL&amp; bHandled)
 &nbsp; { ... }

 &nbsp; LRESULT OnSetFocus(UINT uMsg, WPARAM wParam, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LPARAM lParam, BOOL&amp; bHandled)
 &nbsp; { ... }

};</code></pre>
<p>
The client then calls <code>CMyWindow::SetChainEntry</code>:</p>
<pre><code>// myCtl is a CMyWindow object
myCtl.SetChainEntry(1313, &amp;chainedObj);</code></pre>
<p>
where <code>chainedObj</code> is the chained object and is an instance of a class derived from <b>CMessageMap</b>. Now, if <code>myCtl</code> receives a message that is not handled by <code>OnPaint</code> or <code>OnSetFocus</code>, the window procedure directs the message to <code>chainedObj</code>’s default message map.</p>
<p>
For more information about message map chaining, see <a href="_atl_message_maps.htm">Message Maps</a> in the article “ATL Window Classes.”</p>
<p>
<b>#include &lt;atlwin.h&gt;</b></p>
<p>
<a href="_atl_cdynamicchain_class_members.htm">Class Members</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_atl_cwindowimpl.htm">CWindowImpl</a></p>
</font></BODY>
</HTML>
