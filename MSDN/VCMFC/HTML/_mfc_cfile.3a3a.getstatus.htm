<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CFile::GetStatus</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cfile.3a3a.getstatus"></a><sup></sup>CFile::GetStatus  </h1>
<p>
<b>BOOL</b> <b>GetStatus(</b> <b>CFileStatus&amp;</b> <i>rStatus</i> <b>)</b> <b>const;</b></p>
<p>
<b>static</b> <b>BOOL</b> <b>PASCAL</b> <b>GetStatus(</b> <b>LPCTSTR</b> <i>lpszFileName</i><b>,</b> <b>CFileStatus&amp;</b> <i>rStatus</i> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
<b>TRUE</b> if the status information for the specified file is successfully obtained; otherwise, <b>FALSE</b>. </p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>rStatus</i></p>
<p class=indent>
A reference to a user-supplied <b>CFileStatus</b> structure that will receive the status information. The <b>CFileStatus</b> structure has the following fields:
<ul type=disc>
<li>
<b>CTime m_ctime</b>&nbsp;&nbsp;&nbsp;The date and time the file was created.<br><br></li>
<li>
<b>CTime m_mtime</b>&nbsp;&nbsp;&nbsp;The date and time the file was last modified.<br><br></li>
<li>
<b>CTime m_atime</b>&nbsp;&nbsp;&nbsp;The date and time the file was last accessed for reading.<br><br></li>
<li>
<b>LONG m_size</b>&nbsp;&nbsp;&nbsp;The logical size of the file in bytes, as reported by the DIR command.<br><br></li>
<li>
<b>BYTE m_attribute</b>&nbsp;&nbsp;&nbsp;The attribute byte of the file.<br><br></li>
<li>
<b>char m_szFullName[_MAX_PATH]</b>&nbsp;&nbsp;&nbsp;The absolute filename in the Windows character set.</li>
</ul>
<p class=dt>
<i>lpszFileName</i></p>
<p class=indent>
A string in the Windows character set that is the path to the desired file. The path can be relative or absolute, but cannot contain a network name.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The virtual version of <b>GetStatus</b> retrieves the status of the open file associated with this <b>CFile</b> object. It does not insert a value into the <b>m_szFullName</b> structure member.</p>
<p>
The static version gets the status of the named file and copies the filename to <b>m_szFullName</b>. This function obtains the file status from the directory entry without actually opening the file. It is useful for testing the existence and access rights of a file.</p>
<p>
The <b>m_attribute</b> is the file attribute. The Microsoft Foundation classes provide an <b>enum</b> type attribute so that you can specify attributes symbolically:</p>
<pre><code>enum Attribute {
 &nbsp; normal =&nbsp;&nbsp;&nbsp; 0x00,
 &nbsp; readOnly =&nbsp; 0x01,
 &nbsp; hidden =&nbsp;&nbsp;&nbsp; 0x02,
 &nbsp; system =&nbsp;&nbsp;&nbsp; 0x04,
 &nbsp; volume =&nbsp;&nbsp;&nbsp; 0x08,
 &nbsp; directory = 0x10,
 &nbsp; archive =&nbsp;&nbsp; 0x20
 &nbsp; };
</code></pre>
<p class=label>
<b>Example</b></p>
<pre><code>//example for CFile::GetStatus
CFileStatus status;
extern CFile cfile;
if( cfile.GetStatus( status ) )&nbsp;&nbsp;&nbsp; // virtual member function
   {
      #ifdef _DEBUG
         afxDump &lt;&lt; "File size = " &lt;&lt; status.m_size &lt;&lt; "\n";
      #endif
   }
char* pFileName = "test.dat";
if( CFile::GetStatus( pFileName, status ) )&nbsp;&nbsp; // static function
   {
      #ifdef _DEBUG
         afxDump &lt;&lt; "Full file name = " &lt;&lt; status.m_szFullName &lt;&lt; "\n";
      #endif
   }
</code></pre>
<p>
<a href="_mfc_cfile.htm">CFile Overview</a>  |&nbsp; <a href="_mfc_cfile_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cfile.3a3a.setstatus.htm">CFile::SetStatus</a>, <a href="_mfc_ctime.htm">CTime</a></p>
</font></BODY>
</HTML>
