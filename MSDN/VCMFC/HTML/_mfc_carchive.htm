<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CArchive</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_carchive"></a><sup></sup>CArchive</h1>
<p>
<b>CArchive</b> does not have a base class.</p>
<p>
The <b>CArchive</b> class allows you to save a complex network of objects in a permanent binary form (usually disk storage) that persists after those objects are deleted. Later you can load the objects from persistent storage, reconstituting them in memory. This process of making data persistent is called “serialization.”</p>
<p>
You can think of an archive object as a kind of binary stream. Like an input/output stream, an archive is associated with a file and permits the buffered writing and reading of data to and from storage. An input/output stream processes sequences of ASCII characters, but an archive processes binary object data in an efficient, nonredundant format.</p>
<p>
You must create a <a href="_mfc_cfile.htm">CFile</a> object before you can create a <b>CArchive</b> object. In addition, you must ensure that the archive’s load/store status is compatible with the file’s open mode. You are limited to one active archive per file.</p>
<p>
When you construct a <b>CArchive</b> object, you attach it to an object of class <b>CFile</b> (or a derived class) that represents an open file. You also specify whether the archive will be used for loading or storing. A <b>CArchive</b> object can process not only primitive types but also objects of <a href="_mfc_cobject.htm">CObject</a>-derived classes designed for serialization. A serializable class usually has a <b>Serialize</b> member function, and it usually uses the <a href="_mfc_declare_serial.htm">DECLARE_SERIAL</a> and <a href="_mfc_implement_serial.htm">IMPLEMENT_SERIAL</a> macros, as described under class <b>CObject</b>.</p>
<p>
The overloaded extraction (<b>&gt;&gt;</b>) and insertion (<b>&lt;&lt;</b>) operators are convenient archive programming interfaces that support both primitive types and <b>CObject</b>-derived classes.</p>
<p>
<b>CArchive</b> also supports programming with the MFC Windows Sockets classes <a href="_mfc_csocket.htm">CSocket</a> and <a href="_mfc_csocketfile.htm">CSocketFile</a>. The <a href="_mfc_carchive.3a3a.isbufferempty.htm">IsBufferEmpty</a> member function supports that usage.</p>
<p>
For more information on <b>CArchive</b>, see the articles <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Serialization_.28.Object_Persistence.29">
</object><a href=JavaScript:alink_1.Click()>Serialization (Object Persistence)</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Windows_Sockets.3a_.Using_Sockets_with_Archives">
</object><a href=JavaScript:alink_2.Click()>Windows Sockets: Using Sockets with Archives</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
<b>#include &lt;afx.h&gt;</b></p>
<p>
<a href="_mfc_carchive_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Sample</b>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_MULTIPAD">
</object><a href=JavaScript:alink_3.Click()>MFC Sample MULTIPAD</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cfile.htm">CFile</a>, <a href="_mfc_cobject.htm">CObject</a>, <a href="_mfc_csocket.htm">CSocket</a>, <a href="_mfc_csocketfile.htm">CSocketFile</a></p>
</font></BODY>
</HTML>
