<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Do I Use an Existing ADO Recordset?</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcfaqhowdoiuseexistingadorecordset"></a>How Do I Use an Existing ADO Recordset?</h1>
<p>
To mix OLE DB consumer templates and Active Data Objects, use ADO to open a recordset (corresponding to a rowset in the OLE DB consumer templates). Once you have a recordset, do the following to connect to an OLE DB rowset:
<ol>
<li>
Call <b>QueryInterface</b> for the <b>IRecordset</b> and <b>IAccessor</b> pointers.<pre><code>IRowset* lpRowset = NULL;
IAccessor* lpAccessor = NULL;
lpUnk-&gt;QueryInterface(IID_IRowset, (void**)&amp;lpRowset);
lpUnk-&gt;QueryInterface(IID_IAccessor, (void**)&amp;lpAccessor);
</code></pre>
</li>
<li>
Attach the accessor and rowset to their appropriate OLE DB consumer template classes.<pre><code>CRowset rs;
CAccessor accessor;

accessor.Attach(lpAccessor);
rs.Attach(lpRowset);
rs.SetAccessor(accessor);
</code></pre>
</li>
</ol>
</font></BODY>
</HTML>
