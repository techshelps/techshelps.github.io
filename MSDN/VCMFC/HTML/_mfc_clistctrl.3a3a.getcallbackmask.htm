<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CListCtrl::GetCallbackMask</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_clistctrl.3a3a.getcallbackmask"></a><sup></sup>CListCtrl::GetCallbackMask</h1>
<p>
<b>UINT</b> <b>GetCallbackMask(</b> <b>) const;</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
The list view control’s callback mask.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Retrieves the callback mask for a list view control.</p>
<p>
A “callback item” is a list view item for which the application — rather than the control — stores the text, icon, or both. Although a list view control can store these attributes for you, you may want to use callback items if your application already maintains some of this information. The callback mask specifies which item state bits are maintained by the application, and it applies to the whole control rather than to a specific item. The callback mask is zero by default, meaning that the control tracks all item states. If an application uses callback items or specifies a nonzero callback mask, it must be able to supply list view item attributes on demand.</p>
<p>
<a href="_mfc_clistctrl.htm">CListCtrl Overview</a>  |&nbsp; <a href="_mfc_clistctrl_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_clistctrl.3a3a.setcallbackmask.htm">CListCtrl::SetCallbackMask</a></p>
</font></BODY>
</HTML>
