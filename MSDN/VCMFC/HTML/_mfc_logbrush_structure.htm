<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LOGBRUSH Structure</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_logbrush_structure"></a><sup></sup>LOGBRUSH Structure</h1>
<p>
The <b>LOGBRUSH</b> structure has the following form:</p>
<pre><code>typedef struct tag LOGBRUSH { /* lb */
 &nbsp; UINT&nbsp;&nbsp;&nbsp;&nbsp; lbStyle;
 &nbsp; COLORREF lbColor;
 &nbsp; LONG&nbsp;&nbsp;&nbsp;&nbsp; lbHatch;
} LOGBRUSH;
</code></pre>
<p>
The <b>LOGBRUSH</b> structure defines the style, color, and pattern of a physical brush. It is used by the Windows <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_CreateBrushIndirect">
</object><a href=JavaScript:alink_1.Click()>CreateBrushIndirect</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_ExtCreatePen">
</object><a href=JavaScript:alink_2.Click()>ExtCreatePen</a> functions.</p>
<p class=label>
<b>Members</b></p>
<p class=dt>
<b>lbStyle</b></p>
<p class=indent>
Specifies the brush style. The <b>lbStyle</b> member must be one of the following styles:
<ul type=disc>
<li>
<b>BS_DIBPATTERN</b>&nbsp;&nbsp;&nbsp;A pattern brush defined by a device-independent bitmap (DIB) specification. If <b>lbStyle</b> is <b>BS_DIBPATTERN</b>, the <b>lbHatch</b> member contains a handle to a packed DIB.<br><br></li>
<li>
<b>BS_DIBPATTERNPT</b>&nbsp;&nbsp;&nbsp;A pattern brush defined by a device-independent bitmap (DIB) specification. If <b>lbStyle</b> is <b>BS_DIBPATTERNPT</b>, the <b>lbHatch</b> member contains a pointer to a packed DIB.<br><br></li>
<li>
<b>BS_HATCHED</b>&nbsp;&nbsp;&nbsp;Hatched brush.<br><br></li>
<li>
<b>BS_HOLLOW</b>&nbsp;&nbsp;&nbsp;Hollow brush.<br><br></li>
<li>
<b>BS_NULL</b>&nbsp;&nbsp;&nbsp;Same as <b>BS_HOLLOW</b>.<br><br></li>
<li>
<b>BS_PATTERN</b>&nbsp;&nbsp;&nbsp;Pattern brush defined by a memory bitmap.<br><br></li>
<li>
<b>BS_SOLID</b>&nbsp;&nbsp;&nbsp;Solid brush.</li>
</ul>
<p class=dt>
<b>lbColor</b></p>
<p class=indent>
Specifies the color in which the brush is to be drawn. If <b>lbStyle</b> is the <b>BS_HOLLOW</b> or <b>BS_PATTERN</b> style, <b>lbColor</b> is ignored. If <b>lbStyle</b> is <b>BS_DIBPATTERN</b> or <b>BS_DIBPATTERNBT</b>, the low-order word of <b>lbColor</b> specifies whether the <b>bmiColors</b> members of the <a href="_mfc_bitmapinfo_structure.htm">BITMAPINFO</a> structure contain explicit red, green, blue (RGB) values or indices into the currently realized logical palette. The <b>lbColor</b> member must be one of the following values:
<ul type=disc>
<li>
<b>DIB_PAL_COLORS</b>&nbsp;&nbsp;&nbsp;The color table consists of an array of 16-bit indices into the currently realized logical palette.<br><br></li>
<li>
<b>DIB_RGB_COLORS</b>&nbsp;&nbsp;&nbsp;The color table contains literal RGB values.</li>
</ul>
<p class=dt>
<b>lbHatch</b></p>
<p class=indent>
Specifies a hatch style. The meaning depends on the brush style defined by <b>lbStyle</b>. If <b>lbStyle</b> is <b>BS_DIBPATTERN</b>, the <b>lbHatch</b> member contains a handle to a packed DIB. If <b>lbStyle</b> is <b>BS_DIBPATTERNPT</b>, the <b>lbHatch</b> member contains a pointer to a packed DIB. If <b>lbStyle</b> is <b>BS_HATCHED</b>, the <b>lbHatch</b> member specifies the orientation of the lines used to create the hatch. It can be one of the following values:
<ul type=disc>
<li>
<b>HS_BDIAGONAL</b>&nbsp;&nbsp;&nbsp;A 45-degree upward, left-to-right hatch<br><br></li>
<li>
<b>HS_CROSS</b>&nbsp;&nbsp;&nbsp;Horizontal and vertical crosshatch<br><br></li>
<li>
<b>HS_DIAGCROSS</b>&nbsp;&nbsp;&nbsp;45-degree crosshatch<br><br></li>
<li>
<b>HS_FDIAGONAL</b>&nbsp;&nbsp;&nbsp;A 45-degree downward, left-to-right hatch<br><br></li>
<li>
<b>HS_HORIZONTAL</b>&nbsp;&nbsp;&nbsp;Horizontal hatch<br><br></li>
<li>
<b>HS_VERTICAL</b>&nbsp;&nbsp;&nbsp;Vertical hatch<p class=tl>
If <b>lbStyle</b> is <b>BS_PATTERN</b>, <b>lbHatch</b> is a handle to the bitmap that defines the pattern. If <b>lbStyle</b> is <b>BS_SOLID</b> or <b>BS_HOLLOW</b>, <b>lbHatch</b> is ignored. </P></li>
</ul>
<p class=label>
<b>Comments</b></p>
<p>
Although <b>lbColor</b> controls the foreground color of a hatch brush, the <a href="_mfc_cdc.3a3a.setbkmode.htm">CDC::SetBkMode</a> and <a href="_mfc_cdc.3a3a.setbkcolor.htm">CDC::SetBkColor</a> functions control the background color. </p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdc.3a3a.getcharabcwidths.htm">CDC::GetCharABCWidths</a></p>
</font></BODY>
</HTML>
