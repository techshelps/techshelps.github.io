<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TN007: Debugging Trace Options</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfcnotes_tn007"></a><sup></sup>TN007: Debugging Trace Options</h1>
<p>
To help debug windows programs, MFC provides a TRACE output mechanism. This will display, to a debugging output window or console, messages about the internal operation of the MFC library as well as warnings and errors if something goes wrong in your application.</p>
<p>
Turning on TRACE output is strongly recommended, since it will sometimes give you advanced warning of problems that are about to occur or give more verbose reasons why problems do occur.</p>
<p class=label>
<b>How to Turn on TRACE Output</b></p>
<p>
By default TRACE message output is disabled. In order for trace output to be seen, you must perform the following steps:
<ol>
<li>
Compile your program with the <b>_DEBUG</b> symbol defined and link with a debug version of the MFC library. Debugging and trace options are only available in the <b>_DEBUG</b> version of the library.<br><br></li>
<li>
Enable the <b>afxTraceEnabled</b> flag. There are several ways to do this, but using the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_TRACER">
</object><a href=JavaScript:alink_1.Click()>TRACER.EXE</a> utility is highly recommended.<br><br></li>
<li>
Customize the <b>afxTraceFlags</b> to the level of detail you would like to see in trace messages. Use of the TRACER.EXE utility is highly recommended.</li>
</ol>
<p class=label>
<b>Where the Output Goes</b></p>
<p>
When <b>afxTraceEnabled</b> is TRUE, then TRACE output (and default <b>afxDump</b> output) will go to the output window if present. When <b>afxTraceEnable</b> is FALSE, TRACE output and <b>afxDump</b> output will not be displayed.</p>
<p>
If a debugger is present, then TRACE output will go to the debugger's output window. If no debugger is present, then TRACE output will not be seen.</p>
<p class=label>
<b>Using TRACER.EXE</b></p>
<p>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_TRACER">
</object><a href=JavaScript:alink_2.Click()>TRACER.EXE</a> is a small MFC Programming Utilities sample program that allows you to set the options in AFX.INI. TRACER is installed in your BIN directory by the Visual C++ setup. The source code for TRACER is provided as well, so you can rebuild it and customize it as you wish.</p>
<p>
A sample AFX.INI file is provided in the MFC\SRC subdirectory. This .INI file turns on diagnostic messages and uses the standard options. You should place this AFX.INI file in your Windows directory or run the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_TRACER">
</object><a href=JavaScript:alink_3.Click()>TRACER.EXE</a> program to create a new AFX.INI file and set options in it using a dialog box.</p>
<p>
Any changes to AFX.INI will take effect in any debug MFC application launched after the changes are saved.</p>
<p>
The global integer <b>afxTraceFlags</b> is used to turn on the built-in reporting features of the MFC and to store all flags. It can be set under program control or with the debugger. The global integer <b>afxTraceFlags</b> uses each bit to select a trace reporting option.</p>
<p>
You can turn any bit on or off as desired. Try playing with them to get a flavor of the report information they generate. See the AFXWIN.H header for the numeric values of the different options.</p>
<pre><code>// example under program control
afxTraceFlags = 4 + 8;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // windows message dumping
</code></pre>
<p class=label>
<b>Ease of Reading</b></p>
<p>
For ease of reading, certain frequent messages are not reported. These include:</p>
<p>
Mouse move messages (non-client and client):
<ul type=disc>
<li>
WM_NCHITTEST<br><br></li>
<li>
WM_SETCURSOR<br><br></li>
<li>
WM_ENTERIDLE<br><br></li>
<li>
WM_CTLCOLOR</li>
</ul>
<p>
These messages are sent every time the mouse moves or during idle processing or other common dialog processing.</p>
<p>
<a href="_mfcnotes_technical_notes_by_number.htm">Technical Notes by Number</a>  |&nbsp; <a href="_mfcnotes_technical_notes_by_category.htm">Technical Notes by Category</a></p>
</font></BODY>
</HTML>
