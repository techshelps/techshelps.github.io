<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Inserting a Composite Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcconinsertingcompositecontrol"></a>Inserting a Composite Control</h1>
<p>
Another helpful wizard (ATL Object Wizard) provided by Visual C++ allows you to quickly insert an ATL object into your existing project. Access this wizard by choosing the <b>New ATL Object</b> option from the <b>Insert</b> menu or the <b>ATL Object Wizard</b> button from the <b>ATL</b> toolbar.</p>
<p>
Once the ATL Object Wizard appears, choose the <b>Controls</b> option (in the left-hand pane) and then double-click the <b>Composite Control</b> item. At this point, you need to supply some information on the properties of the composite control you are inserting. For complete details on using the ATL Object Wizard, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_atl_Adding_Objects_and_Controls">
</object><a href=JavaScript:alink_1.Click()>Adding Objects and Controls</a>.
<ul type=disc>
<li>
The first page (Names) requests information related to the implementation class: short name, .H and .CPP files, and so on. Enter a value for the short name. All other entries are generated automatically, using the short name as the basis.<br><br></li>
<li>
The second page (Attributes) presents default options related to the threading model interface and aggregation of the composite control. Accept the default options, or customize them, based on the needs of your composite control.<br><br></li>
<li>
The final page (Stock Properties) provides a list of common control properties your composite control can support. Choose any necessary properties from the left-hand list.</li>
</ul>
<p>
Once you have made your selections, click <b>OK</b>. The ATL Object Wizard then creates the necessary parts which implement your composite control. These parts include:
<ul type=disc>
<li>
A template for the dialog box that implements the composite control.<br><br></li>
<li>
A custom resource, REGISTRY, that automatically registers the composite control when invoked.<br><br></li>
<li>
A C++ class that implements the composite control.<br><br></li>
<li>
A COM interface, exposed by the composite control.<br><br></li>
<li>
An HTML test page containing the composite control.</li>
</ul>
</font></BODY>
</HTML>
