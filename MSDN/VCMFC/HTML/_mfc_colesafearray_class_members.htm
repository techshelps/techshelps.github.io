<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COleSafeArray Class Members</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_colesafearray_class_members"></a>COleSafeArray Class Members</h1>
<p class=label>
<b>Construction</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.colesafearray.htm">COleSafeArray</a></td>
<td width=68%>Constructs a <b>COleSafeArray</b> object.</td>
</tr>
</table><br>
<p class=label>
<b>Operations</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.attach.htm">Attach</a></td>
<td width=68%>Gives control of the existing <b>VARIANT</b> array to the <b>COleSafeArray</b> object. </td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.clear.htm">Clear</a></td>
<td width=68%>Frees all data in the underlying <b>VARIANT</b>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.detach.htm">Detach</a></td>
<td width=68%>Detaches the <b>VARIANT</b> array from the <b>COleSafeArray</b> object (so that the data will not be freed).</td>
</tr>
</table><br>
<p class=label>
<b>Win32 API Wrappers</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.accessdata.htm">AccessData</a></td>
<td width=68%>Retrieves a pointer to the array data.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.allocdata.htm">AllocData</a></td>
<td width=68%>Allocates memory for the array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.allocdescriptor.htm">AllocDescriptor</a></td>
<td width=68%>Allocates memory for the safe array descriptor.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.copy.htm">Copy</a></td>
<td width=68%>Creates a copy of an existing array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.create.htm">Create</a></td>
<td width=68%>Creates a safe array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.destroy.htm">Destroy</a></td>
<td width=68%>Destroys an existing array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.destroydata.htm">DestroyData</a></td>
<td width=68%>Destroys data in a safe array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.destroydescriptor.htm">DestroyDescriptor</a></td>
<td width=68%>Destroys a descriptor of a safe array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.getdim.htm">GetDim</a></td>
<td width=68%>Returns the number of dimensions in the array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.getelement.htm">GetElement</a></td>
<td width=68%>Retrieves a single element of the safe array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.getelemsize.htm">GetElemSize</a></td>
<td width=68%>Returns the size, in bytes, of one element in a safe array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.getlbound.htm">GetLBound</a></td>
<td width=68%>Returns the lower bound for any dimension of a safe array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.getubound.htm">GetUBound</a></td>
<td width=68%>Returns the upper bound for any dimension of a safe array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.lock.htm">Lock</a></td>
<td width=68%>Increments the lock count of an array and places a pointer to the array data in the array descriptor.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.ptrofindex.htm">PtrOfIndex</a></td>
<td width=68%>Returns a pointer to the indexed element.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.putelement.htm">PutElement</a></td>
<td width=68%>Assigns a single element into the array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.redim.htm">Redim</a></td>
<td width=68%>Changes the least significant (rightmost) bound of a safe array.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.unaccessdata.htm">UnaccessData</a></td>
<td width=68%>Decrements the lock count of an array and invalidates the pointer retrieved by <b>AccessData</b>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.unlock.htm">Unlock</a></td>
<td width=68%>Decrements the lock count of an array so it can be freed or resized.</td>
</tr>
</table><br>
<p class=label>
<b>One-Dimensional Array Operations</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.createonedim.htm">CreateOneDim</a></td>
<td width=68%>Creates a one-dimensional <b>COleSafeArray</b> object.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.getonedimsize.htm">GetOneDimSize</a></td>
<td width=68%>Returns the number of elements in the one-dimensional <b>COleSafeArray</b> object.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.resizeonedim.htm">ResizeOneDim</a></td>
<td width=68%>Changes the number of elements in a one-dimensional <b>COleSafeArray</b> object.</td>
</tr>
</table><br>
<p class=label>
<b>Operators</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.operator_.3d.htm">operator =</a></td>
<td width=68%>Copies values into a <b>COleSafeArray</b> object (<b>SAFEARRAY</b>, <b>VARIANT</b>, <b>COleVariant</b>, or <b>COleSafeArray</b> array).</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.operator_.3d3d.htm">operator ==</a></td>
<td width=68%>Compares two variant arrays (<b>SAFEARRAY</b>, <b>VARIANT</b>, <b>COleVariant</b>, or <b>COleSafeArray</b> arrays).</td>
</tr>
<tr valign=top>
<td width=32%><a href="vcrefcolesafearrayoperator.htm">operator &lt;&lt;</a></td>
<td width=68%>Outputs the contents of a <b>COleSafeArray</b> object to the dump context.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.operator_lpvariant.htm">operator LPVARIANT</a></td>
<td width=68%>Accesses the underlying <b>VARIANT</b> structure of the <b>COleSafeArray</b> object.</td>
</tr>
<tr valign=top>
<td width=32%><a href="_mfc_colesafearray.3a3a.operator_lpcvariant.htm">operator LPCVARIANT</a></td>
<td width=68%>Accesses the underlying <b>VARIANT</b> structure of the <b>COleSafeArray</b> object.</td>
</tr>
</table><br>
<p>
<a href="_mfc_colesafearray.htm">COleSafeArray Overview</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
</font></BODY>
</HTML>
