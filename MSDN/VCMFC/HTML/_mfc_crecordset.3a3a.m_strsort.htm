<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CRecordset::m_strSort</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_crecordset.3a3a.m_strsort"></a>CRecordset::m_strSort</h1>
<p class=label>
<b>Remarks</b></p>
<p>
After you construct the recordset object, but before you call its <b>Open</b> member function, use this data member to store a <b>CString</b> containing an SQL <b>ORDER BY</b> clause. The recordset uses this string to sort the records it selects during the <b>Open</b> or <b>Requery</b> call. You can use this feature to sort a recordset on one or more columns. The ODBC SQL syntax for an <b>ORDER BY</b> clause is</p>
<pre><code>ORDER BY sort-specification [, sort-specification]...
</code></pre>
<p>
where a sort-specification is an integer or a column name. You can also specify ascending or descending order (the order is ascending by default) by appending “ASC” or “DESC” to the column list in the sort string. The selected records are sorted first by the first column listed, then by the second, and so on. For example, you might order a “Customers” recordset by last name, then first name. The number of columns you can list depends on the data source. For more information, see the <i>ODBC SDK Programmer’s Reference.</i></p>
<p>
Note that you do not include the <b>ORDER BY</b> keyword in your string. The framework supplies it.</p>
<p>
For more information about SQL clauses, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_SQL">
</object><a href=JavaScript:alink_1.Click()>SQL</a>. For more information about sorting records, see the article <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Recordset.3a_.Sorting_Records_.28.ODBC.29">
</object><a href=JavaScript:alink_2.Click()>Recordset: Sorting Records (ODBC)</a>. Both articles are in <i>Visual C++ Programmer’s Guide</i>.</p>
<p class=label>
<b>Example</b></p>
<pre><code>// Example for CRecordset::m_strSort

CCustSet rsCustSet( NULL );

// Set the sort string
rsCustSet.m_strSort = "District, Last_Name";

// Run the sorted query
rsCustSet.Open( CRecordset::snapshot, “Customers” );
</code></pre>
<p>
<a href="_mfc_crecordset.htm">CRecordset Overview</a>  |&nbsp; <a href="_mfc_crecordset_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_crecordset.3a3a.m_strfilter.htm">CRecordset::m_strFilter</a>, <a href="_mfc_crecordset.3a3a.requery.htm">CRecordset::Requery</a></p>
</font></BODY>
</HTML>
