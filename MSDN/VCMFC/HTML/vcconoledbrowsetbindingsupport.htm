<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE DB Rowset and Binding Support</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcconoledbrowsetbindingsupport"></a>OLE DB Rowset and Binding Support</h1>
<p>
To set and retrieve data, OLE DB Templates use an accessor and a rowset through the <a href="vcrefcaccessorrowset.htm">CAccessorRowset</a> class, as shown in the following figure. This class can handle multiple accessors of different types. </p>
<p>
<img src="vc4qgb1.gif" border=0></P><h2>Accessor Types</h2>
<p>
All accessors derive from <a href="vcrefcaccessorbase.htm">CAccessorBase</a>. <b>CAccessorBase</b> provides both parameter and column binding. </p>
<p>
There are four accessor types and three rowset types, which are shown in the following figure.</p>
<p>
<img src="vc4qgb2.gif" border=0></P><ul type=disc>
<li>
<a href="vcrefcaccessor.htm">CAccessor</a>&nbsp;&nbsp;&nbsp;Use this accessor when you know the structure of the database source at design time. <b>CAccessor</b> statically binds a database record, which contains the buffer, to the data source.<br><br></li>
<li>
<a href="vcrefcdynamicaccessor.htm">CDynamicAccessor</a>&nbsp;&nbsp;&nbsp;Use this accessor when you do not know the structure of the database at design time. <b>CDynamicAccessor</b> calls <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="oledbicolumnsinfo__getcolumninfo">
</object><a href=JavaScript:alink_1.Click()>IColumnsInfo::GetColumnInfo</a> to get the database column information. It creates and manages an accessor and the buffer.<br><br></li>
<li>
<a href="vcrefcdynamicparameteraccessor.htm">CDynamicParameterAccessor</a>&nbsp;&nbsp;&nbsp;Use this accessor to handle unknown command types. When you prepare the commands, <b>CDynamicParameterAccessor</b> can get parameter information from the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="oledbicommandwithparameters">
</object><a href=JavaScript:alink_2.Click()>ICommandWithParameters</a> interface, if the provider supports <b>ICommandWithParameters</b>.<br><br></li>
<li>
<a href="vcrefcmanualaccessor.htm">CManualAccessor</a>&nbsp;&nbsp;&nbsp;With this class, you can use whatever data types you want as long as the provider can convert the type. It handles both result columns and command parameters.</li>
</ul>
<p>
The following table summarizes the four accessor types.</p>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Accessor type</b></td>
<td class=label width=13%><b>Dynamic</b></td>
<td class=label width=13%><b>Params</b></td>
<td class=label width=23%><b>Buffer</b></td>
<td class=label width=23%><b>Multiple accessors</b></td>
</tr>
<tr valign=top>
<td width=28%><b>CAccessor</b></td>
<td width=13%>No</td>
<td width=13%>Yes</td>
<td width=23%>User</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=28%><b>CDynamicAccessor</b></td>
<td width=13%>Yes</td>
<td width=13%>No</td>
<td width=23%>OLE DB Templates</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=28%><b>CDynamicParameterAccessor</b></td>
<td width=13%>Yes</td>
<td width=13%>Yes</td>
<td width=23%>OLE DB Templates</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=28%><b>CManualAccessor</b></td>
<td width=13%>Yes</td>
<td width=13%>Yes</td>
<td width=23%>User</td>
<td width=23%>No</td>
</tr>
</table><br>
<h2>Rowset Types</h2>
<p>
The OLE DB Templates support three kinds of rowsets (see the preceding figure): single rowsets (implemented by <a href="vcrefcrowset.htm">CRowset</a>), bulk rowsets (implemented by <a href="vcrefcbulkrowset.htm">CBulkRowset</a>), and array rowsets (implemented by <a href="vcrefcarrayrowset.htm">CArrayRowset</a>). Single rowsets fetch a single row handle when <b>MoveNext</b> is called. Bulk rowsets can fetch multiple row handles. Array rowsets are rowsets that can be accessed using array syntax.</p>
<p>
<a href="vcconoledbconsumertemplates.htm">Back to the OLE DB Consumer Template Architecture</a></p>
</font></BODY>
</HTML>
