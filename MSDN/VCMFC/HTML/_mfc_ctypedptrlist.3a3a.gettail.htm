<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CTypedPtrList::GetTail</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_ctypedptrlist.3a3a.gettail"></a><sup></sup>CTypedPtrList::GetTail</h1>
<p>
<i>TYPE</i><b>&amp;</b> <b>GetTail(</b> <b>);</b></p>
<p>
<i>TYPE</i> <b>GetTail(</b> <b>)</b> <b>const;</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
If the list is accessed through a pointer to a <b>const CTypedPtrList</b>, then <b>GetTail</b> returns a pointer of the type specified by the template parameter <i>TYPE</i>. This allows the function to be used only on the right side of an assignment statement and thus protects the list from modification. </p>
<p>
If the list is accessed directly or through a pointer to a <b>CTypedPtrList</b>, then <b>GetTail</b> returns a reference to a pointer of the type specified by the template parameter <i>TYPE</i>. This allows the function to be used on either side of an assignment statement and thus allows the list entries to be modified.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>TYPE</i></p>
<p class=indent>
Template parameter specifying the type of elements stored in the list.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Gets the pointer that represents the head element of this list. </p>
<p>
You must ensure that the list is not empty before calling <b>GetTail</b>. If the list is empty, then the Debug version of the Microsoft Foundation Class Library asserts. Use <a href="_mfc_coblist.3a3a.isempty.htm">IsEmpty</a> to verify that the list contains elements.</p>
<p>
<a href="_mfc_ctypedptrlist.htm">CTypedPtrList Overview</a>  |&nbsp; <a href="_mfc_ctypedptrlist_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_coblist.3a3a.isempty.htm">CPtrList::IsEmpty</a>, <a href="_mfc_coblist.3a3a.find.htm">CPtrList::Find</a>, <a href="_mfc_coblist.3a3a.gettailposition.htm">CPtrList::GetTailPosition</a>, <a href="_mfc_coblist.3a3a.getheadposition.htm">CPtrList::GetHeadPosition</a>, <a href="_mfc_ctypedptrlist.3a3a.getprev.htm">CTypedPtrList::GetPrev</a>, <a href="_mfc_ctypedptrlist.3a3a.getnext.htm">CTypedPtrList::GetNext</a>, <a href="_mfc_ctypedptrlist.3a3a.gethead.htm">CTypedPtrList::GetHead</a></p>
</font></BODY>
</HTML>
