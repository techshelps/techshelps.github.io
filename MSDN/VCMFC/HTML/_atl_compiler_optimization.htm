<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler Optimization</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_atl_compiler_optimization"></a>Compiler Optimization</h1>
<p>
ATL 2.1 has been optimized for the Visual C++ 5.0 compiler. In particular, you should be aware that many ATL classes are declared with the <code>ATL_NO_VTABLE</code> macro:</p>
<pre><code>class ATL_NO_VTABLE CComControl
{
 &nbsp; ...
};
</code></pre>
<p>
ATL defines <code>ATL_NO_VTABLE</code> as follows:</p>
<pre><code>#ifdef _ATL_DISABLE_NO_VTABLE
 &nbsp; #define ATL_NO_VTABLE
#else
 &nbsp; #define ATL_NO_VTABLE __declspec(novtable)
#endif
</code></pre>
<p>
If <code>_ATL_DISABLE_NO_VTABLE</code> is not defined, the <code>ATL_NO_VTABLE</code> macro expands to <code>declspec(novtable)</code>. When <code>declspec(novtable)</code> is used in a class declaration, it prevents the vtable pointer from being initialized in the class's constructor and destructor. The linker can thus eliminate the vtable and all the functions pointed to by the vtable, provided the most-derived class (usually <a href="_atl_ccomobject.htm">CComObject</a>, <a href="_atl_ccomaggobject.htm">CComAggObject</a>, or <a href="_atl_ccompolyobject.htm">CComPolyObject</a>) does not use <code>declspec(novtable)</code> and will thus initialize the vtable pointer correctly.</p>
<p>
By default, the ATL Object Wizard will generate new classes with the <code>ATL_NO_VTABLE</code> macro. As previously described, the <code>declspec(novtable)</code> attribute should only be used with base classes that are not directly creatable. Further, it is unsafe to call virtual functions from the constructor of any object that uses <code>declspec(novtable)</code>. You should move any such calls to the <a href="_atl_ccomobjectrootex.3a3a.finalconstruct.htm">FinalConstruct</a> method. </p>
<p>
If you are unsure whether you should use the <code>declspec(novtable)</code> attribute, you can remove the <code>ATL_NO_VTABLE</code> macro from any class definition or you globally disable it by specifying <code>#define _ATL_DISABLE_NO_VTABLE</code> in stdafx.h, before all other ATL header files are included.</p>
</font></BODY>
</HTML>
