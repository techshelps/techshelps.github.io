<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Do I Use Multiple Result Sets from One Stored Procedure?</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcfaqhowdoiusemultipleresultsetsfromonestoredprocedure"></a>How Do I Use Multiple Result Sets from One Stored Procedure?</h1>
<p>
Most stored procedures return multiple result sets. Such a stored procedure usually includes one or more select statements. The consumer needs to take this into account to handle all of the result sets. </p>
<p>
To handle multiple result sets:
<ol>
<li>
Create a <b>CCommand</b> class with <b>CMultipleResults</b> as a template argument and with the accessor of your choice. Usually, this will be a dynamic or manual accessor. If you use another type of accessor, you may not be able to determine the output columns for each rowset.<br><br></li>
<li>
Execute the stored procedure as usual and bind the columns (see <a href="vcfaqhowdoifetchdata.htm">How do I fetch data?</a>).<br><br></li>
<li>
Use the data.<br><br></li>
<li>
Call <b>GetNextResult</b> on the <b>CCommand</b> class. If another result rowset is available, <b>GetNextResult</b> returns <b>S_OK</b> and you should rebind your columns if you are using a manual accessor. If <b>GetNextResult</b> returns an error, there are no further result sets available.</li>
</ol>
</font></BODY>
</HTML>
