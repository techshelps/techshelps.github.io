<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Do I Test My Provider?</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcfaqhowdoitestmyprovider"></a>How Do I Test My Provider?</h1>
<p>
Before you release a provider, you should perform the following tests, in the order indicated. These tests will ensure that the provider functions properly for most potential users.
<ol>
<li>
Test the provider using a consumer application written with the OLE DB consumer templates. The test consumer should cover all functional areas of your provider (all code that you have added or modified). <br><br></li>
<li>
Test the provider using a consumer application written with ADO. Most developers (especially Microsoft Visual Basic and Microsoft J++ developers) use ADO for consumer applications. Again, the test consumer should cover all functional areas of your provider.<br><br></li>
<li>
Run the OLE DB conformance tests (including ADO conformance tests) to ensure that your provider meets the level 0 standard for OLE DB providers. These tests and associated documentation are included with Visual C++. These tests also help to ensure that your provider runs well when aggregated by other service providers and are especially useful if you modify or add properties. </li>
</ol>
</font></BODY>
</HTML>
