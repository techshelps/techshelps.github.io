<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWinApp::m_pszExeName</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwinapp.3a3a.m_pszexename"></a><sup></sup>CWinApp::m_pszExeName  </h1>
<p class=label>
<b>Remarks</b></p>
<p>
Contains the name of the application’s executable file without an extension. Unlike <a href="_mfc_cwinapp.3a3a.m_pszappname.htm">m_pszAppName</a>, this name cannot contain blanks. <b>m_pszExeName</b> is a public variable of type <b>const char*</b>.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you assign a value to <b>m_pszExeName</b>, it must be dynamically allocated on the heap. The <b>CWinApp</b> destructor calls <b>free</b>( ) with this pointer. You many want to use the <b>_tcsdup</b>( ) run-time library function to do the allocating. Also, free the memory associated with the current pointer before assigning a new value. For example:</p>
<pre><code>//First free the string allocated by MFC at CWinApp startup.
//The string is allocated before InitInstance is called.
free((void*)m_pszExeName);
//Change the name of the .EXE file.
//The CWinApp destructor will free the memory.
m_pszExeName=_tcsdup(_T(“d:\\somedir\\myapp”));
</code></pre>
<p>
<a href="_mfc_cwinapp.htm">CWinApp Overview</a>  |&nbsp; <a href="_mfc_cwinapp_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
</font></BODY>
</HTML>
