<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COM_INTERFACE_ENTRY Macros</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_com_interface_entry_macros"></a>COM_INTERFACE_ENTRY Macros</h1>
<p>
These macros enter an object's interfaces into its COM map so that they can be accessed by <b>QueryInterface</b>. The order of entries in the COM map is the order interfaces will be checked for a matching <b>IID</b> during <b>QueryInterface</b>.</p>
<p>
Each object that wants to expose its interfaces via <b>QueryInterface</b> must have its own COM map. The COM map starts with the macro <a href="_atl_begin_com_map.htm">BEGIN_COM_MAP</a>. Interface entries are added with one or more of the <b>COM_INTERFACE_ENTRY</b> macros, and the map is completed with the <a href="_atl_end_com_map.htm">END_COM_MAP</a> macro. For example:</p>
<pre><code>BEGIN_COM_MAP(CMyObject)
 &nbsp;&nbsp; COM_INTERFACE_ENTRY(IDispatch)
 &nbsp;&nbsp; COM_INTERFACE_ENTRY(IMyObject)
END_COM_MAP( )
</code></pre>
<p>
See the ATL <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_atl_COMMAP">
</object><a href=JavaScript:alink_1.Click()>COMMAP</a> sample for examples using the different types of COM map entry macros.</p>
<p>
Note that the first entry in the COM map must be an interface on the object containing the COM map. Thus, you cannot start your COM map entries with <b>COM_INTERFACE_ENTRY_CHAIN</b>, which causes the COM map of a different object to be searched at the point where <b>COM_INTERFACE_ENTRY_CHAIN(</b><i>COtherObject</i><b>)</b> appears in your object's COM map. If you want to search the COM map of another object first, add an interface entry for <b>IUnknown</b> to your COM map, then chain the other object's COM map. For example:</p>
<pre><code>BEGIN_COM_MAP(CThisObject)
 &nbsp; COM_INTERFACE_ENTRY(IUnknown)
 &nbsp; COM_INTERFACE_ENTRY_CHAIN(COtherObject)
END_COM_MAP( )
</code></pre>
<p class=indent>
<B><b>Caution</b></B> &nbsp; As of version 3.0, ATL uses the compiler keyword <b>__uuidof( </b><i>class</i><b> )</b> to obtain the corresponding IID for a given class. Because of changes in the <b>COM_INTERFACE_ENTRY</b> macros effective in version 3.0, now you simply include the header for the interface to use, instead of also linking to a library that defines the matching IIDs for that interface. This change can cause problems if the header was previously generated by an older version of MIDL, or if it was hand-coded and not marked appropriately. If the declaration for the interface in the header has not been marked with an associated <b>__declspec( </b><i>uuid</i><b> )</b>, then any attempt to use the <b>__uuidof</b> keyword for that interface will fail. You can revert to the older (ATL 2.x) <b>COM_INTERFACE_ENTRY</b> macros by defining <b>_ATL_NO_UUIDOF</b> in your build settings to work around any problems with this new behavior.</p>
<p>
The following are the available entry macros:</p>
<p class=label>
<b>COM Map Entry Macros</b></p>
<table border=1 cellpadding=5 cols=1 frame=below rules=rows>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry.htm">COM_INTERFACE_ENTRY</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_iid.htm">COM_INTERFACE_ENTRY_IID</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry2.htm">COM_INTERFACE_ENTRY2</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry2_iid.htm">COM_INTERFACE_ENTRY2_IID</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_func.htm">COM_INTERFACE_ENTRY_FUNC</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_func_blind.htm">COM_INTERFACE_ENTRY_FUNC_BLIND</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_tear_off.htm">COM_INTERFACE_ENTRY_TEAR_OFF</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_cached_tear_off.htm">COM_INTERFACE_ENTRY_CACHED_TEAR_OFF</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_aggregate.htm">COM_INTERFACE_ENTRY_AGGREGATE</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_aggregate_blind.htm">COM_INTERFACE_ENTRY_AGGREGATE_BLIND</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_autoaggregate.htm">COM_INTERFACE_ENTRY_AUTOAGGREGATE</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_autoaggregate_blind.htm">COM_INTERFACE_ENTRY_AUTOAGGREGATE_BLIND</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_chain.htm">COM_INTERFACE_ENTRY_CHAIN</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_break.htm">COM_INTERFACE_ENTRY_BREAK</a></td>
</tr>
<tr valign=top>
<td width=100%><a href="_atl_com_interface_entry_nointerface.htm">COM_INTERFACE_ENTRY_NOINTERFACE</a></td>
</tr>
</table><br>
<p>
<a href="_atl_atl_macros_and_global_functions.htm">ATL Macros and Global Functions</a></p>
</font></BODY>
</HTML>
