<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating an OLE DB Template Provider</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcconcreatingoledbprovider"></a>Creating an OLE DB Template Provider</h1>
<p class=label>
<b>To create an OLE DB provider using the OLE DB Templates</b>
<ol>
<li>
Use the ATL COM AppWizard and ATL Object Wizard to create the basic project files. <br><br></li>
<li>
Modify the code in the <b>Execute</b> method in C<i>MyProviderRS</i>.h. (For an example, see <a href="vchowreadingstringsintooledbprovider.htm">Reading Strings Into an OLE DB Provider</a>.) <br><br></li>
<li>
Edit the property maps in <i>MyProviderDS</i>.h, <i>MyProviderSess</i>.h, and <i>MyProviderRS</i>.h. The wizard creates property maps that contain all properties that a provider might implement. Go through the property maps and remove or comment out properties your provider does not need to support.<br><br></li>
<li>
Update the <b>PROVIDER_COLUMN_MAP</b>, which can be found in <i>MyProviderRS</i>.h. (See <a href="vchowstoringstringsinoledbprovider.htm">Storing Strings In the OLE DB Provider</a> for an example.)<br><br></li>
<li>
When you are ready to test your provider, you can test it by trying to find the provider in a provider enumeration. For examples of test code that finds a provider in an enumeration, look at the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_oledbtc_CatDB">
</object><a href=JavaScript:alink_1.Click()>CATDB</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_oledbtc_DBViewer">
</object><a href=JavaScript:alink_2.Click()>DBVIEWER</a> samples or the example in <a href="vcfaqimplementingasimpleconsumer.htm">Implementing A Simple Consumer</a>.<br><br></li>
<li>
Add any additional interfaces you desire. (See <a href="vchowaddingirowsetlocateinterface.htm">Enhancing the Simple Read-Only Provider</a> for an example.) </li>
</ol>
<p class=indent>
<b>Note</b>&nbsp;&nbsp;&nbsp;By default, the wizards generate code that is OLE DB level-0 complaint. To ensure that your application remains level-0 compliant, do not remove any of the wizard-generated interfaces from the code.</p>
<p>
To create an OLE DB provider using the OLE DB Templates, begin with the ATL COM AppWizard. </p>
<p class=label>
<b>To create an ATL project for an OLE DB provider</b>
<ol>
<li>
From the <b>File</b> menu, choose <b>New</b>. The <b>New</b> dialog box appears.<br><br></li>
<li>
On the <b>Projects</b> tab, choose <b>ATL COM AppWizard</b>.<br><br></li>
<li>
Name the project on the <b>Projects</b> tab, then click <b>OK</b>. The ATL COM AppWizard appears.<br><br></li>
<li>
In the ATL COM AppWizard, choose <b>Dynamic Link Library (DLL)</b> for <b>Server Type</b>. <br><br></li>
<li>
Click <b>Finish</b> and <b>OK</b>.</li>
</ol>
<ul type=disc>
<li>
Next, use the ATL Object Wizard.</li>
</ul>
<p class=label>
<b>To use the ATL Object Wizard for an OLE DB provider</b>
<ol>
<li>
From the <b>Insert</b> menu, choose <b>New ATL Object</b>. The ATL Object Wizard appears.<br><br></li>
<li>
In the left pane, choose <b>Data Access</b>. The <b>Provider</b> icon appears in the right pane.<br><br></li>
<li>
Select the <b>Provider</b> icon and click <b>Next</b>. The <b>OLE DB Provider</b> tab appears.<p>
<img src="vc4twc2.gif" border=0></P></li>
<li>
On the <b>OLE DB Provider</b> tab, enter a short name for your provider in the <b>Short Name</b> box (<i>MyProvider</i>, for example). The other name boxes populate according to the name you enter.<br><br></li>
<li>
Edit the other name boxes, if desired. In addition to the object and file names, you can edit the following:<ul type=disc>
<li>
<b>CoClass</b>: The name that COM uses to create the provider.<br><br></li>
<li>
<b>ProgID</b>: The programmatic identifier, a text string that can be used instead of a GUID.<br><br></li>
<li>
<b>Version</b>: Used with the ProgID and CoClass to generate a version-dependent programmatic ID.</li>
</ul>
</li>
<li>
Click <b>OK</b>.</li>
</ol>
<p>
The ATL Object Wizard generates the following files. (The exact file names depend on the choices you made on the <b>OLE DB Provider</b> tab.) </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=26%><b>File name</b></td>
<td class=label width=74%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=26%><i>MyProvider</i>RS.cpp</td>
<td width=74%>Contains the command helper <b>Execute</b> method and the provider column map.</td>
</tr>
<tr valign=top>
<td width=26%><i>MyProvider</i>DS.h</td>
<td width=74%>Implements the data source object. This header file contains the property map for data source properties. </td>
</tr>
<tr valign=top>
<td width=26%><i>MyProvider</i>RS.h</td>
<td width=74%>Implements the command and rowset objects. This header file contains the property map for rowset and command properties. </td>
</tr>
<tr valign=top>
<td width=26%><i>MyProvider</i>Sess.h</td>
<td width=74%>Implements the session object. This header file contains the property map for session properties. </td>
</tr>
<tr valign=top>
<td width=26%><i>MyProvider</i>.rgs</td>
<td width=74%>Contains the registered objects generated by the OLE DB Provider wizard.</td>
</tr>
</table><br>
<p>
<a href="vcconusingoledbprovidertemplates.htm">Back to Using the OLE DB Provider Templates</a></p>
</font></BODY>
</HTML>
