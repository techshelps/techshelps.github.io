<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CRecordset::DoFieldExchange</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_crecordset.3a3a.dofieldexchange"></a><sup></sup>CRecordset::DoFieldExchange</h1>
<p>
<b>virtual</b> <b>void</b> <b>DoFieldExchange(</b> <b>CFieldExchange*</b> <i>pFX</i> <b>);</b><br>
<b>throw(</b> <b>CDBException</b> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pFX</i></p>
<p class=indent>
A pointer to a <a href="_mfc_cfieldexchange.htm">CFieldExchange</a> object. The framework will already have set up this object to specify a context for the field exchange operation.</p>
<p class=label>
<b>Remarks</b></p>
<p>
When bulk row fetching is not implemented, the framework calls this member function to automatically exchange data between the field data members of your recordset object and the corresponding columns of the current record on the data source. <b>DoFieldExchange</b> also binds your parameter data members, if any, to parameter placeholders in the SQL statement string for the recordset’s selection. </p>
<p>
If bulk row fetching is implemented, the framework calls <a href="_mfc_crecordset.3a3a.dobulkfieldexchange.htm">DoBulkFieldExchange</a>. To implement bulk row fetching, you must specify the <b>CRecordset::useMultiRowFetch</b> option of the <i>dwOptions</i> parameter in the <a href="_mfc_crecordset.3a3a.open.htm">Open</a> member function.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;<b>DoFieldExchange</b> is available only if you are using a class derived from <b>CRecordset</b>. If you have created a recordset object directly from <b>CRecordset</b>, you must call the <a href="_mfc_crecordset.3a3a.getfieldvalue.htm">GetFieldValue</a> member function to retrieve data.</p>
<p>
The exchange of field data, called record field exchange (RFX), works in both directions: from the recordset object’s field data members to the fields of the record on the data source, and from the record on the data source to the recordset object. </p>
<p>
The only action you must normally take to implement <b>DoFieldExchange</b> for your derived recordset class is to create the class with ClassWizard and specify the names and data types of the field data members. You might also add code to what ClassWizard writes to specify parameter data members or to deal with any columns you bind dynamically. For more information, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Recordset.3a_.Dynamically_Binding_Data_Columns_.28.ODBC.29">
</object><a href=JavaScript:alink_1.Click()>Recordset: Dynamically Binding Data Columns (ODBC)</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
When you declare your derived recordset class with ClassWizard, the wizard writes an override of <b>DoFieldExchange</b> for you, which resembles the following example:</p>
<pre><code>void CCustSet::DoFieldExchange(CFieldExchange* pFX)
{
 &nbsp; //{{AFX_FIELD_MAP(CCustSet)
 &nbsp; pFX-&gt;SetFieldType(CFieldExchange::outputColumn);
 &nbsp; RFX_Text(pFX, "Name", m_strName);
 &nbsp; RFX_Int(pFX, "Age", m_wAge);
 &nbsp; //}}AFX_FIELD_MAP
}
</code></pre>
<p>
For more information about the RFX functions, see the topic <a href="_mfc_record_field_exchange_functions.htm">Record Field Exchange Functions</a>.</p>
<p>
For further examples and details about <b>DoFieldExchange</b>, see the article <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Record_Field_Exchange.3a_.How_RFX_Works">
</object><a href=JavaScript:alink_2.Click()>Record Field Exchange: How RFX Works</a>. For general information about RFX, see the article <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Record_Field_Exchange_.28.RFX.29">
</object><a href=JavaScript:alink_3.Click()>Record Field Exchange</a>. Both articles are in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
<a href="_mfc_crecordset.htm">CRecordset Overview</a>  |&nbsp; <a href="_mfc_crecordset_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_crecordset.3a3a.m_nfields.htm">CRecordset::m_nFields</a>, <a href="_mfc_crecordset.3a3a.m_nparams.htm">CRecordset::m_nParams</a>, <a href="_mfc_crecordset.3a3a.dobulkfieldexchange.htm">CRecordset::DoBulkFieldExchange</a>, <a href="_mfc_crecordset.3a3a.getfieldvalue.htm">CRecordset::GetFieldValue</a>, <a href="_mfc_cfieldexchange.htm">CFieldExchange</a>, <a href="_mfc_record_field_exchange_functions.htm">Record Field Exchange Functions</a></p>
</font></BODY>
</HTML>
