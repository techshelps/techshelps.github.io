<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CException</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cexception"></a>CException</h1>
<p>
<img src="cexcept.gif" border=0></p>
<p>
<b>CException</b> is the base class for all exceptions in the Microsoft Foundation Class Library. The derived classes and their descriptions are listed below:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=37%><a href="_mfc_cmemoryexception.htm">CMemoryException</a></td>
<td width=63%>Out-of-memory exception</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_cnotsupportedexception.htm">CNotSupportedException</a></td>
<td width=63%>Request for an unsupported operation</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_carchiveexception.htm">CArchiveException</a></td>
<td width=63%>Archive-specific exception</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_cfileexception.htm">CFileException</a></td>
<td width=63%>File-specific exception</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_cresourceexception.htm">CResourceException</a></td>
<td width=63%>Windows resource not found or not createable</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_coleexception.htm">COleException</a></td>
<td width=63%>OLE exception</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_cdbexception.htm">CDBException</a></td>
<td width=63%>Database exception&nbsp; (that is, exception conditions arising for MFC database classes&nbsp; based on Open Database Connectivity)</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_coledispatchexception.htm">COleDispatchException</a></td>
<td width=63%>OLE dispatch (automation) exception</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_cuserexception.htm">CUserException</a></td>
<td width=63%>Exception that indicates that a resource could not be found</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_cdaoexception.htm">CDaoException</a></td>
<td width=63%>Data access object exception (that is, exception conditions arising for DAO classes)</td>
</tr>
<tr valign=top>
<td width=37%><a href="_mfc_cinternetexception.htm">CInternetException</a></td>
<td width=63%>Internet exception (that is, exception conditions arising for Internet classes). </td>
</tr>
</table><br>
<p>
These exceptions are intended to be used with the <a href="_mfc_throw.htm">THROW</a>, <a href="_mfc_throw_last.htm">THROW_LAST</a>, <a href="_mfc_try.htm">TRY</a>, <a href="_mfc_catch.htm">CATCH</a>, <a href="_mfc_and_catch.htm">AND_CATCH</a>, and <a href="_mfc_end_catch.htm">END_CATCH</a> macros. For more information on exceptions, see <a href="_mfc_exception_processing.htm">Exception Processing</a>, or see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Exceptions">
</object><a href=JavaScript:alink_1.Click()>Exceptions</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
To catch a specific exception, use the appropriate derived class. To catch all types of exceptions, use <b>CException</b>, and then use <a href="_mfc_cobject.3a3a.iskindof.htm">CObject::IsKindOf</a> to differentiate among <b>CException</b>-derived classes. Note that <b>CObject::IsKindOf</b> works only for classes declared with the <a href="_mfc_implement_dynamic.htm">IMPLEMENT_DYNAMIC</a> macro, in order to take advantage of dynamic type checking. Any <b>CException</b>-derived class that you create should use the <b>IMPLEMENT_DYNAMIC</b> macro, too.</p>
<p>
You can report details about exceptions to the user by calling <a href="_mfc_cexception.3a3a.geterrormessage.htm">GetErrorMessage</a> or <a href="_mfc_cexception.3a3a.reporterror.htm">ReportError</a>, two member functions that work with any of <b>CException</b>’s derived classes.</p>
<p>
If an exception is caught by one of the macros, the <b>CException</b> object is deleted automatically; do not delete it yourself. If an exception is caught by using a <b>catch</b> keyword, it is not automatically deleted. See the article <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Exceptions">
</object><a href=JavaScript:alink_2.Click()>Exceptions</a> in <i>Visual C++ Programmer's Guide</i> for more information about when to delete an exeption object.</p>
<p>
<b>CException</b> is an abstract base class. You cannot create <b>CException</b> objects; you must create objects of derived classes. If you need to create your own <b>CException</b> type, use one of the derived classes listed above as a model. Make sure that your derived class also uses <b>IMPLEMENT_DYNAMIC</b>.</p>
<p>
<b>#include &lt;afx.h&gt;</b></p>
<p>
<a href="_mfc_cexception_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cobject.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Sample</b>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_TEAR">
</object><a href=JavaScript:alink_3.Click()>MFC Sample TEAR</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_exception_processing.htm">Exception Processing</a></p>
</font></BODY>
</HTML>
