<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ATL Macros and Global Functions</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_atl_macros_and_global_functions"></a>ATL Macros and Global Functions</h1>
<p>
The ATL macros and global functions offer functionality in the following categories:</p>
<p>
<a href="#_atl_aggregation_and_class_factory_macros">Aggregation and Class Factory Macros</a><br>
<a href="#vcrefcategorymacros">Category Macros</a><br>
<a href="#_atl_com_map_macros_and_global_functions">COM Map Macros and Global Functions</a><br>
<a href="#_atl_composite_control_macros_and_global_functions">Composite Control Macros and Global Functions</a><br>
<a href="#_atl_connection_point_macros_and_global_functions">Connection Point Macros and Global Functions</a><br>
<a href="#_atl_debugging_and_error_reporting_macros_and_global_functions">Debugging and Error Reporting Macros and Global Functions</a><br>
<a href="#_atl_device_context_global_functions">Device Context Global Functions</a><br>
<a href="#_atl_event_handling_global_functions">Event Handling Global Functions</a><br>
<a href="#_atl_marshaling_global_functions">Marshaling Global Functions</a><br>
<a href="#_atl_message_map_macros">Message Map Macros</a><br>
<a href="#_atl_snapin_macros">Snap-In Macros</a><br>
<a href="#_atl_object_map_macros">Object Map Macros</a><br>
<a href="#_atl_pixel.2f.himetric_conversion_global_functions">Pixel/HIMETRIC Conversion Global Functions</a><br>
<a href="#_atl_property_map_macros">Property Map Macros</a><br>
<a href="#_atl_registry_macros">Registry Macros</a><br>
<a href="#_atl_service_map_macros">Service Map Macros</a><br>
<a href="#_atl_stock_property_macros">Stock Property Macros</a><br>
<a href="#_atl_string_conversion_macros_table">String Conversion Macros</a><br>
<a href="#_atl_window_class_macros">Window Class Macros</a><br>
<a href="#_atl_windows_messages">Windows Messages</a></p>
<p class=label>
<b><a name="_atl_aggregation_and_class_factory_macros"></a>Aggregation and Class Factory Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_declare_aggregatable.htm">DECLARE_AGGREGATABLE</a></td>
<td width=52%>Declares that your object can be aggregated (the default).</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_classfactory.htm">DECLARE_CLASSFACTORY</a></td>
<td width=52%>Declares the class factory to be <a href="_atl_ccomclassfactory.htm">CComClassFactory</a>, the ATL default class factory.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_classfactory_ex.htm">DECLARE_CLASSFACTORY_EX</a></td>
<td width=52%>Declares your class factory object to be the class factory.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_classfactory2.htm">DECLARE_CLASSFACTORY2</a></td>
<td width=52%>Declares <a href="_atl_ccomclassfactory2.htm">CComClassFactory2</a> to be the class factory.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_classfactory_auto_thread.htm">DECLARE_CLASSFACTORY_AUTO_THREAD</a></td>
<td width=52%>Declares <a href="_atl_ccomclassfactoryautothread.htm">CComClassFactoryAutoThread</a> to be the class factory.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_classfactory_singleton.htm">DECLARE_CLASSFACTORY_SINGLETON</a></td>
<td width=52%>Declares <a href="_atl_ccomclassfactorysingleton.htm">CComClassFactorySingleton</a> to be the class factory.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_get_controlling_unknown.htm">DECLARE_GET_CONTROLLING_UNKNOWN</a></td>
<td width=52%>Declares a virtual <b>GetControllingUnknown</b> function.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_not_aggregatable.htm">DECLARE_NOT_AGGREGATABLE</a></td>
<td width=52%>Declares that your object cannot be aggregated.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_only_aggregatable.htm">DECLARE_ONLY_AGGREGATABLE</a></td>
<td width=52%>Declares that your object must be aggregated.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_poly_aggregatable.htm">DECLARE_POLY_AGGREGATABLE</a></td>
<td width=52%>Checks the value of the outer unknown and declares your object aggregatable or not aggregatable, as appropriate.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_protect_final_construct.htm">DECLARE_PROTECT_FINAL_CONSTRUCT</a></td>
<td width=52%>Protects the outer object from deletion during construction of an inner object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefdeclare_view_status.htm">DECLARE_VIEW_STATUS</a></td>
<td width=52%>Specifies the <b>VIEWSTATUS</b> flags to the container.</td>
</tr>
</table><br>
<p class=label>
<b><a name="vcrefcategorymacros"></a>Category Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="vcrefbegin_category_map.htm">BEGIN_CATEGORY_MAP</a></td>
<td width=52%>Marks the beginning of the category map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefend_category_map.htm">END_CATEGORY_MAP</a></td>
<td width=52%>Marks the end of the category map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefimplemented_category.htm">IMPLEMENTED_CATEGORY</a></td>
<td width=52%>Indicates categories that are implemented by the COM object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefrequired_category.htm">REQUIRED_CATEGORY</a></td>
<td width=52%>Indicates categories that are required of the container by the COM object.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_com_map_macros_and_global_functions"></a>COM Map Macros and Global Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_atlinternalqueryinterface.htm">AtlInternalQueryInterface</a></td>
<td width=52%>Delegates to the <b>IUnknown</b> of a nonaggregated object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_begin_com_map.htm">BEGIN_COM_MAP</a></td>
<td width=52%>Marks the beginning of the COM interface map entries.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_com_interface_entry_macros.htm">COM_INTERFACE_ENTRY</a></td>
<td width=52%>Enters interfaces into the COM interface map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_end_com_map.htm">END_COM_MAP</a></td>
<td width=52%>Marks the end of the COM interface map entries.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefinlineisequaliunknown.htm">InlineIsEqualIUnknown</a></td>
<td width=52%>Generates efficient code for <b>IUnknown</b>.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_composite_control_macros_and_global_functions"></a>Composite Control Macros and Global Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=33%><a href="vcrefatlaxdialogbox.htm">AtlAxDialogBox</a></td>
<td width=67%>Creates a modal dialog box from a dialog template provided by the user. The dialog may contain ActiveX controls.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefatlaxcreatedialog.htm">AtlAxCreateDialog</a></td>
<td width=67%>Creates a modeless dialog box from a dialog template provided by the user. The resulting dialog box can contain ActiveX controls.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefatlaxcreatecontrol.htm">AtlAxCreateControl</a></td>
<td width=67%>Creates an ActiveX control, initializes it, and hosts it in the specified window.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefatlaxcreatecontrolex.htm">AtlAxCreateControlEx</a></td>
<td width=67%>Creates an ActiveX control, initializes it, and hosts it in the specified window.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefatlaxattachcontrol.htm">AtlAxAttachControl</a></td>
<td width=67%>Attaches a previously created control to the specified window.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefatlaxgethost.htm">AtlAxGetHost</a></td>
<td width=67%>Used to obtain a direct interface pointer to the container for a specified window (if any), given its handle.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefatlaxgetcontrol.htm">AtlAxGetControl</a></td>
<td width=67%>Used to obtain a direct interface pointer to the control contained inside a specified window (if any), given its handle.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefatlsetchildsite.htm">AtlSetChildSite</a></td>
<td width=67%>Initializes the <b>IUnknown</b> of the child site.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefatlaxwininit.htm">AtlAxWinInit</a></td>
<td width=67%>Initializes the hosting code for AxWin objects.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefbegin_sink_map.htm">BEGIN_SINK_MAP</a></td>
<td width=67%>Marks the beginning of the event sink map for the composite control.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefend_sink_map.htm">END_SINK_MAP</a></td>
<td width=67%>Marks the end of the event sink map for the composite control.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefsink_entry.htm">SINK_ENTRY</a></td>
<td width=67%>Entry to the event sink map.</td>
</tr>
<tr valign=top>
<td width=33%><a href="vcrefsink_entry_ex.htm">SINK_ENTRY_EX</a></td>
<td width=67%>Entry to the event sink map with an additional parameter.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_connection_point_macros_and_global_functions"></a>Connection Point Macros and Global Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_atladvise.htm">AtlAdvise</a></td>
<td width=52%>Creates a connection between an object's connection point and a client's sink. </td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_atlunadvise.htm">AtlUnadvise</a></td>
<td width=52%>Terminates the connection established through <b>AtlAdvise</b>.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefatladvisesinkmap.htm">AtlAdviseSinkMap</a></td>
<td width=52%>Advises or unadvises entries in an event sink map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_begin_connection_point_map.htm">BEGIN_CONNECTION_POINT_MAP</a></td>
<td width=52%>Marks the beginning of the connection point map entries.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_connection_point_entry.htm">CONNECTION_POINT_ENTRY</a></td>
<td width=52%>Enters connection points into the map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_end_connection_point_map.htm">END_CONNECTION_POINT_MAP</a></td>
<td width=52%>Marks the end of the connection point map entries.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_snapin_macros"></a>Snap-In Object Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="vcrefbegin_extension_snapin_nodeinfo_map.htm">BEGIN_EXTENSION_SNAPIN_NODEINFO_MAP</a></td>
<td width=52%>Marks the beginning of the snap-in extension data class map for a Snap-In object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefbegin_snapintoolbarid_map.htm">BEGIN_SNAPINTOOLBARID_MAP</a></td>
<td width=52%>Marks the beginning of the toolbar map for a Snap-In object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefend_extension_snapin_nodeinfo_map.htm">END_EXTENSION_SNAPIN_NODEINFO_MAP</a></td>
<td width=52%>Marks the end of the snap-in extension data class map for a Snap-In object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefend_snapintoolbarid_map.htm">END_SNAPINTOOLBARID_MAP</a></td>
<td width=52%>Marks the end of the toolbar map for a Snap-In object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefextension_snapin_dataclass.htm">EXTENSION_SNAPIN_DATACLASS</a></td>
<td width=52%>Creates a data member for the data class of the snap-in extension.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefextension_snapin_nodeinfo_entry.htm">EXTENSION_SNAPIN_NODEINFO_ENTRY</a></td>
<td width=52%>Enters a snap-in extension data class into the snap-in extension data class map of the Snap-In object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefsnapinmenuid.htm">SNAPINMENUID</a></td>
<td width=52%>Declares the ID of the context menu used by the Snap-In object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefsnapintoolbarid_entry.htm">SNAPINTOOLBARID_ENTRY</a></td>
<td width=52%>Enters a toolbar into the toolbar map of the Snap-In object.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_debugging_and_error_reporting_macros_and_global_functions"></a>Debugging and Error Reporting Macros and Global Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_atlreporterror.htm">AtlReportError</a></td>
<td width=52%>Sets up <b>IErrorInfo</b> to provide error details to a client.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_atltrace_func.htm">AtlTrace</a></td>
<td width=52%>Global function that sends a formatted message and/or variable values to the dump device.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_atltrace.htm">ATLTRACE</a></td>
<td width=52%>Sends a formatted message and/or variable values to the dump device.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_atltracenotimpl.htm">ATLTRACENOTIMPL</a></td>
<td width=52%>Sends a message to the dump device that the specified function is not implemented.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefatltraceflags.htm">atlTraceFlags</a></td>
<td width=52%>Identifies the flags used in <a href="vcrefatltrace2.htm">ATLTRACE2</a>.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefatltrace2.htm">ATLTRACE2</a></td>
<td width=52%>Reports warnings to an output device, such as the debugger window, according to the indicated flags and levels.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_device_context_global_functions"></a>Device Context Global Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_atlcreatetargetdc.htm">AtlCreateTargetDC</a></td>
<td width=52%>Creates a device context.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_event_handling_global_functions"></a>Event Handling Global Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_atlwaitwithmessageloop.htm">AtlWaitWithMessageLoop</a></td>
<td width=52%>Waits for an object to be signaled, meanwhile dispatching window messages as needed.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_marshaling_global_functions"></a>Marshaling Global Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_atlfreemarshalstream.htm">AtlFreeMarshalStream</a></td>
<td width=52%>Releases the marshal data and the <b>IStream</b> pointer.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_atlmarshalptrinproc.htm">AtlMarshalPtrInProc</a></td>
<td width=52%>Creates a new stream object and marshals the specified interface pointer.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_atlunmarshalptr.htm">AtlUnmarshalPtr</a></td>
<td width=52%>Converts a stream's marshaling data into an interface pointer.</td>
</tr>
</table><br>
<p class=label>
<a name="_atl_message_map_macros"></a><b>Message Map Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_begin_msg_map.htm">BEGIN_MSG_MAP</a></td>
<td width=52%>Marks the beginning of the default message map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_alt_msg_map.htm">ALT_MSG_MAP</a></td>
<td width=52%>Marks the beginning of an alternate message map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefdeclare_empty_msg_map.htm">DECLARE_EMPTY_MSG_MAP</a></td>
<td width=52%>Implements an empty message map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_message_handler.htm">MESSAGE_HANDLER</a></td>
<td width=52%>Maps a Windows message to a handler function.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_message_range_handler.htm">MESSAGE_RANGE_HANDLER</a></td>
<td width=52%>Maps a contiguous range of Windows messages to a handler function.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_command_handler.htm">COMMAND_HANDLER</a></td>
<td width=52%>Maps a <b>WM_COMMAND</b> message to a handler function, based on the notification code and the identifier of the menu item, control, or accelerator.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_command_id_handler.htm">COMMAND_ID_HANDLER</a></td>
<td width=52%>Maps a <b>WM_COMMAND</b> message to a handler function, based on the identifier of the menu item, control, or accelerator.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_command_code_handler.htm">COMMAND_CODE_HANDLER</a></td>
<td width=52%>Maps a <b>WM_COMMAND</b> message to a handler function, based on the notification code.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_command_range_handler.htm">COMMAND_RANGE_HANDLER</a></td>
<td width=52%>Maps a contiguous range of <b>WM_COMMAND</b> messages to a handler function.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_notify_handler.htm">NOTIFY_HANDLER</a></td>
<td width=52%>Maps a <b>WM_NOTIFY</b> message to a handler function, based on the notification code and the control identifier.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_notify_id_handler.htm">NOTIFY_ID_HANDLER</a></td>
<td width=52%>Maps a <b>WM_NOTIFY</b> message to a handler function, based on the control identifier.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_notify_code_handler.htm">NOTIFY_CODE_HANDLER</a></td>
<td width=52%>Maps a <b>WM_NOTIFY</b> message to a handler function, based on the notification code.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_notify_range_handler.htm">NOTIFY_RANGE_HANDLER</a></td>
<td width=52%>Maps a contiguous range of <b>WM_NOTIFY</b> messages to a handler function.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefreflect_notifications.htm">REFLECT_NOTIFICATIONS</a></td>
<td width=52%>Reflects notification messages back to the window that sent them.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefdefault_reflection_handler.htm">DEFAULT_REFLECTION_HANDLER</a></td>
<td width=52%>Provides a default handler for reflected messages that are not handled otherwise.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_chain_msg_map.htm">CHAIN_MSG_MAP</a></td>
<td width=52%>Chains to the default message map in the base class.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_chain_msg_map_member.htm">CHAIN_MSG_MAP_MEMBER</a></td>
<td width=52%>Chains to the default message map in a data member of the class.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_chain_msg_map_alt.htm">CHAIN_MSG_MAP_ALT</a></td>
<td width=52%>Chains to an alternate message map in the base class.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_chain_msg_map_alt_member.htm">CHAIN_MSG_MAP_ALT_MEMBER</a></td>
<td width=52%>Chains to an alternate message map in a data member of the class.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_chain_msg_map_dynamic.htm">CHAIN_MSG_MAP_DYNAMIC</a></td>
<td width=52%>Chains to the message map in another class at run time.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_end_msg_map.htm">END_MSG_MAP</a></td>
<td width=52%>Marks the end of a message map.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_object_map_macros"></a>Object Map Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_begin_object_map.htm">BEGIN_OBJECT_MAP</a></td>
<td width=52%>Marks the beginning of the ATL object map and initializes the array of object descriptions.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_object_entry.htm">OBJECT_ENTRY</a></td>
<td width=52%>Enters an ATL object into the object map, updates the registry, and creates an instance of the object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefobject_entry_non_createable.htm">OBJECT_ENTRY_NON_CREATEABLE</a></td>
<td width=52%>Allows you to specify that the object should be registered and initialized, but it should not be createable via <b>CoCreateInstance</b>.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_end_object_map.htm">END_OBJECT_MAP</a></td>
<td width=52%>Marks the end of the ATL object map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_object_description.htm">DECLARE_OBJECT_DESCRIPTION</a></td>
<td width=52%>Allows you to specify a class object's text description, which will be entered into the object map.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_pixel.2f.himetric_conversion_global_functions"></a>Pixel/HIMETRIC Conversion Global Functions</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_atlhimetrictopixel.htm">AtlHiMetricToPixel</a></td>
<td width=52%>Converts HIMETRIC units (each unit is 0.01 millimeter) to pixels.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_atlpixeltohimetric.htm">AtlPixelToHiMetric</a></td>
<td width=52%>Converts pixels to HIMETRIC units (each unit is 0.01 millimeter). </td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_property_map_macros"></a>Property Map Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="vcrefbegin_prop_map.htm">BEGIN_PROP_MAP</a></td>
<td width=52%>Marks the beginning of the ATL property map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefprop_data_entry.htm">PROP_DATA_ENTRY</a></td>
<td width=52%>Indicates the extent, or dimensions, of an ActiveX control.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_prop_entry.htm">PROP_ENTRY</a></td>
<td width=52%>Enters a property description, property DISPID, and property page CLSID into the property map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_prop_entry_ex.htm">PROP_ENTRY_EX</a></td>
<td width=52%>Enters a property description, property DISPID, property page CLSID, and <b>IDispatch</b> IID into the property map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_prop_page.htm">PROP_PAGE</a></td>
<td width=52%>Enters a property page CLSID into the property map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefend_prop_map.htm">END_PROP_MAP</a></td>
<td width=52%>Marks the end of the ATL property map.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_registry_macros"></a>Registry Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_declare_no_registry.htm">DECLARE_NO_REGISTRY</a></td>
<td width=52%>Avoids default ATL registration.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_registry.htm">DECLARE_REGISTRY</a></td>
<td width=52%>Enters or removes the main object's entry in the system registry.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_registry_resource.htm">DECLARE_REGISTRY_RESOURCE</a></td>
<td width=52%>Finds the named resource and runs the registry script within it.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_registry_resourceid.htm">DECLARE_REGISTRY_RESOURCEID</a></td>
<td width=52%>Finds the resource identified by an ID number and runs the registry script within it.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_service_map_macros"></a>Service Map Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="vcrefbegin_service_map.htm">BEGIN_SERVICE_MAP</a></td>
<td width=52%>Marks the beginning of an ATL service map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefend_service_map.htm">END_SERVICE_MAP</a></td>
<td width=52%>Marks the end of an ATL service map.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefservice_entry.htm">SERVICE_ENTRY</a></td>
<td width=52%>Indicates that the object supports a specific service ID.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefservice_entry_chain.htm">SERVICE_ENTRY_CHAIN</a></td>
<td width=52%>Instructs <a href="vcrefiserviceproviderimplqueryservice.htm">IServiceProviderImpl::QueryService</a> to chain to the specified object.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_stock_property_macros"></a>Stock Property Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_implement_bool_stockprop.htm">IMPLEMENT_BOOL_STOCKPROP</a></td>
<td width=52%>Implements a boolean stock property for an ATL object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_implement_bstr_stockprop.htm">IMPLEMENT_BSTR_STOCKPROP</a></td>
<td width=52%>Implements a text stock property for an ATL object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_implement_stockprop.htm">IMPLEMENT_STOCKPROP</a></td>
<td width=52%>Implements a stock property for an ATL object.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_string_conversion_macros_table"></a>String Conversion Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_string_conversion_macros.htm">String Conversion Macros</a></td>
<td width=52%>Set of macros that convert between string types.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_devmode_and_textmetric_string_conversion_macros.htm">DEVMODE and TEXTMETRIC String Conversion Macros</a></td>
<td width=52%>Set of macros that convert the strings within <b>DEVMODE</b> and <b>TEXTMETRIC</b> structures.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_window_class_macros"></a>Window Class Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="_atl_declare_wnd_class.htm">DECLARE_WND_CLASS</a></td>
<td width=52%>Allows you to specify the name of a new window class.</td>
</tr>
<tr valign=top>
<td width=48%><a href="_atl_declare_wnd_superclass.htm">DECLARE_WND_SUPERCLASS</a></td>
<td width=52%>Allows you to specify the name of an existing window class on which a new window class will be based.</td>
</tr>
<tr valign=top>
<td width=48%><a href="vcrefdeclare_wnd_class_ex.htm">DECLARE_WND_CLASS_EX</a></td>
<td width=52%>Allows you to specify the parameters of a class.</td>
</tr>
</table><br>
<p class=label>
<b><a name="_atl_windows_messages"></a>Window Class Macros</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=48%><a href="vcrefwm_forwardmsg.htm">WM_FORWARDMSG</a></td>
<td width=52%>Use to forward a message received by a window to another window for processing.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
