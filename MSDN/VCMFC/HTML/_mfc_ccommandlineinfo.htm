<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CCommandLineInfo</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_ccommandlineinfo"></a><sup></sup>CCommandLineInfo</h1>
<p>
<img src="ccomline.gif" border=0></p>
<p>
The <b>CCommandLineInfo</b> class aids in parsing the command line at application startup.</p>
<p>
An MFC application will typically create a local instance of this class in the <a href="_mfc_cwinapp.3a3a.initinstance.htm">InitInstance</a> function of its application object. This object is then passed to <a href="_mfc_cwinapp.3a3a.parsecommandline.htm">CWinApp::ParseCommandLine</a>, which repeatedly calls <a href="_mfc_ccommandlineinfo.3a3a.parseparam.htm">ParseParam</a> to fill the <b>CCommandLineInfo</b> object. The <b>CCommandLineInfo</b> object is then passed to <a href="_mfc_cwinapp.3a3a.processshellcommand.htm">CWinApp::ProcessShellCommand</a> to handle the command-line arguments and flags.</p>
<p>
You can use this object to encapsulate the following command-line options and parameters:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=46%><b>Command-line argument</b></td>
<td class=label width=54%><b>Command executed</b></td>
</tr>
<tr valign=top>
<td width=46%><i>app</i></td>
<td width=54%>New file.</td>
</tr>
<tr valign=top>
<td width=46%><i>app</i> filename</td>
<td width=54%>Open file.</td>
</tr>
<tr valign=top>
<td width=46%><i>app</i> <b>/p</b> filename</td>
<td width=54%>Print file to default printer.</td>
</tr>
<tr valign=top>
<td width=46%><i>app</i> <b>/pt</b> filename printer driver port</td>
<td width=54%>Print file to the specified printer.</td>
</tr>
<tr valign=top>
<td width=46%><i>app</i> <b>/dde</b></td>
<td width=54%>Start up and await DDE command.</td>
</tr>
<tr valign=top>
<td width=46%><i>app</i> <b>/Automation</b></td>
<td width=54%>Start up as an OLE automation server.</td>
</tr>
<tr valign=top>
<td width=46%><i>app</i> <b>/Embedding</b></td>
<td width=54%>Start up to edit an embedded OLE item.</td>
</tr>
</table><br>
<p>
Derive a new class from <b>CCommandLineInfo</b> to handle other flags and parameter values. Override <a href="_mfc_ccommandlineinfo.3a3a.parseparam.htm">ParseParam</a> to handle the new flags.</p>
<p>
<b>#include &lt;afxwin.h&gt;</b></p>
<p>
<a href="_mfc_ccommandlineinfo_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cobject.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cwinapp.3a3a.parsecommandline.htm">CWinApp::ParseCommandLine</a>, <a href="_mfc_cwinapp.3a3a.processshellcommand.htm">CWinApp::ProcessShellCommand</a></p>
</font></BODY>
</HTML>
