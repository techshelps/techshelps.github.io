<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CComCachedTearOffObject</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_ccomcachedtearoffobject"></a>CComCachedTearOffObject</h1>
<p>
<b>template</b> <b>&lt;class</b> <i>contained</i><b>&gt;<br>
class</b> <b>CComCachedTearOffObject</b> : <b>public</b> <b>IUnknown</b>, <b>public</b> <b>CComObjectRootEx&lt; </b><i>contained</i><b>::_ThreadModel::ThreadModelNoCS &gt;</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>contained</i></p>
<p class=indent>
Your tear-off class, derived from <b>CComTearOffObjectBase</b> and the interfaces you want your tear-off object to support.</p>
<p>
<b>CComCachedTearOffObject</b> implements <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_com_IUnknown">
</object><a href=JavaScript:alink_1.Click()>IUnknown</a> for a tear-off interface. This class differs from <b>CComTearOffObject</b> in that <b>CComCachedTearOffObject</b> has its own <b>IUnknown</b>, separate from the owner object's <b>IUnknown</b> (the owner is the object for which the tear-off is being created). <b>CComCachedTearOffObject</b> maintains its own reference count on its <b>IUnknown</b> and deletes itself once its reference count is 0. Note, however, that querying for any of its tear-off interfaces increments the reference count of the owner object's <b>IUnknown</b>.</p>
<p>
If the <b>CComCachedTearOffObject</b> object implementing the tear-off is already instantiated, and the tear-off interface is queried for again, the same <b>CComCachedTearOffObject</b> object is reused. In contrast, if a tear-off interface implemented by a <b>CComTearOffObject</b> is again queried for through the owner object, another <b>CComTearOffObject</b> will be instantiated. </p>
<p>
The owner class must implement <b>FinalRelease</b> and call <b>Release</b> on the cached <b>IUnknown</b> for the <b>CComCachedTearOffObject</b>, which will decrement its reference count. This will cause <b>CComCachedTearOffObject</b>'s <b>FinalRelease</b> to be called and delete the tear-off.</p>
<p>
<b>#include &lt;atlcom.h&gt;</b></p>
<p>
<a href="_atl_ccomcachedtearoffobject_class_members.htm">Class Members</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_atl_ccomtearoffobject.htm">CComTearOffObject</a>, <a href="_atl_ccomobjectrootex.htm">CComObjectRootEx</a></p>
</font></BODY>
</HTML>
