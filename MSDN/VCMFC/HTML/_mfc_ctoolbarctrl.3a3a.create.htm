<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CToolBarCtrl::Create</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_ctoolbarctrl.3a3a.create"></a>CToolBarCtrl::Create</h1>
<p>
<b>BOOL</b> <b>Create(</b> <b>DWORD</b> <i>dwStyle</i><b>,</b> <b>const</b> <b>RECT&amp;</b> <i>rect</i><b>,</b> <b>CWnd*</b> <i>pParentWnd</i><b>,</b> <b>UINT</b> <i>nID</i> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if successful; otherwise zero.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>dwStyle</i></p>
<p class=indent>
Specifies the toolbar control’s style. Toolbars must always have the <b>WS_CHILD</b> style. In addition, you can specify any combination of toolbar styles and window styles as described under Remarks.</p>
<p class=dt>
<i>rect</i></p>
<p class=indent>
Optionally specifies the toolbar control’s size and position. It can be either a <a href="_mfc_crect.htm">CRect</a> object or a <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_RECT_str">
</object><a href=JavaScript:alink_1.Click()>RECT</a> structure.</p>
<p class=dt>
<i>pParentWnd</i></p>
<p class=indent>
Specifies the toolbar control’s parent window. It must not be <b>NULL</b>.</p>
<p class=dt>
<i>nID</i></p>
<p class=indent>
Specifies the toolbar control’s ID.</p>
<p class=label>
<b>Remarks</b></p>
<p>
You construct a <b>CToolBarCtrl</b> in two steps. First call the constructor, then call <b>Create</b>, which creates the toolbar control and attaches it to the <b>CToolBarCtrl</b> object.</p>
<p>
The toolbar control automatically sets the size and position of the toolbar window. The height is based on the height of the buttons in the toolbar. The width is the same as the width of the parent window’s client area. The <b>CCS_TOP</b> and <b>CCS_BOTTOM</b> styles determine whether the toolbar is positioned along the top or bottom of the client area. By default, a toolbar has the <b>CCS_TOP</b> style.</p>
<p>
Apply the following <a href="_mfc_window_styles.htm">window styles</a> to a toolbar control. 
<ul type=disc>
<li>
<b>WS_CHILD</b>&nbsp;&nbsp;&nbsp;Always<br><br></li>
<li>
<b>WS_VISIBLE</b>&nbsp;&nbsp;&nbsp;Usually<br><br></li>
<li>
<b>WS_DISABLED</b>&nbsp;&nbsp;&nbsp;Rarely</li>
</ul>
<p>
Next, you may want to apply one or more of the common control styles:
<ul type=disc>
<li>
<b>CCS_ADJUSTABLE</b>&nbsp;&nbsp;&nbsp;Allows toolbars to be customized by the user. If this style is used, the toolbar’s owner window must handle the customization notification messages sent by the toolbar, as described in <a href="_mfc_ctoolbarctrl.3a_.handling_customization_notifications.htm">CToolBarCtrl: Handling Customization Notifications</a>. <br><br></li>
<li>
<b>CCS_BOTTOM</b>&nbsp;&nbsp;&nbsp;Causes the control to position itself at the bottom of the parent window’s client area and sets the width to be the same as the parent window’s width.<br><br></li>
<li>
<b>CCS_NODIVIDER</b>&nbsp;&nbsp;&nbsp;Prevents a two-pixel highlight from being drawn at the top of the control. <br><br></li>
<li>
<b>CCS_NOHILITE</b>&nbsp;&nbsp;&nbsp;Prevents a one-pixel highlight from being drawn at the top of the control.<br><br></li>
<li>
<b>CCS_NOMOVEY</b>&nbsp;&nbsp;&nbsp;Causes the control to resize and move itself horizontally, but not vertically, in response to a <b>WM_SIZE</b> message. If the <b>CCS_NORESIZE</b> style is used, this style does not apply.<br><br></li>
<li>
<b>CCS_NOPARENTALIGN</b>&nbsp;&nbsp;&nbsp;Prevents the control from automatically moving to the top or bottom of the parent window. Instead, the control keeps its position within the parent window despite changes to the size of the parent window. If the <b>CCS_TOP</b> or <b>CCS_BOTTOM</b> style is also used, the height is adjusted to the default, but the position and width remain unchanged. <br><br></li>
<li>
<b>CCS_NORESIZE</b>&nbsp;&nbsp;&nbsp;Prevents the control from using the default width and height when setting its initial size or a new size. Instead, the control uses the width and height specified in the request for creation or sizing. <br><br></li>
<li>
<b>CCS_TOP</b>&nbsp;&nbsp;&nbsp;Causes the control to position itself at the top of the parent window’s client area and sets the width to be the same as the parent window’s width. Toolbars have this style by default. </li>
</ul>
<p>
Finally, apply a combination of toolbar styles to either the control or the buttons themselves. The styles are described in the topic <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_toolbar_control_and_button_styles">
</object><a href=JavaScript:alink_2.Click()>Toolbar Control and Button Styles</a> in the <i>Platform SDK</i>.</p>
<p>
<a href="_mfc_ctoolbarctrl.htm">CToolBarCtrl Overview</a>  |&nbsp; <a href="_mfc_ctoolbarctrl_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_ctoolbarctrl.3a3a.ctoolbarctrl.htm">CToolBarCtrl::CToolBarCtrl</a>, <a href="_mfc_ctoolbarctrl.3a3a.setbuttonstructsize.htm">CToolBarCtrl::SetButtonStructSize</a></p>
</font></BODY>
</HTML>
