<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDaoDatabase</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdaodatabase"></a>CDaoDatabase</h1>
<p>
<img src="cddb.gif" border=0></p>
<p>
A <b>CDaoDatabase</b> object represents a connection to a database through which you can operate on the data. For information about the database formats supported, see the <a href="_mfc_cdaoworkspace.3a3a.getname.htm">GetName</a> member function. You can have one or more <b>CDaoDatabase</b> objects active at a time in a given “workspace,” represented by a <a href="_mfc_cdaoworkspace.htm">CDaoWorkspace</a><b> </b>object. The workspace maintains a collection of open database objects, called the Databases collection. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The MFC DAO database classes are distinct from the MFC database classes based on ODBC. All DAO database class names have the “CDao” prefix. Class <b>CDaoDatabase</b> supplies an interface similar to that of the ODBC class <a href="_mfc_cdatabase.htm">CDatabase</a>. The main difference is that <b>CDatabase</b> accesses the DBMS through Open Database Connectivity (ODBC) and an ODBC driver for that DBMS. <b>CDaoDatabase</b> accesses data through a Data Access Object (DAO) based on the Microsoft Jet database engine. In general, the MFC classes based on DAO are more capable than the MFC classes based on ODBC; the DAO-based classes can access data, including through ODBC drivers, via their own database engine. The DAO-based classes also support Data Definition Language (DDL) operations, such as adding tables via the classes, without having to call DAO directly.</p>
<p class=label>
<b>Usage</b></p>
<p>
You can create database objects implicitly, when you create recordset objects. But you can also create database objects explicitly. To use an existing database explicitly with <b>CDaoDatabase</b>, do either of the following:
<ul type=disc>
<li>
Construct a <b>CDaoDatabase</b> object, passing a pointer to an open <a href="_mfc_cdaoworkspace.htm">CDaoWorkspace</a><b> </b>object.<br><br></li>
<li>
Or construct a <b>CDaoDatabase</b> object without specifying the workspace (MFC creates a temporary workspace object). </li>
</ul>
<p>
To create a new Microsoft Jet (.MDB) database, construct a <b>CDaoDatabase</b> object and call its <a href="_mfc_cdaodatabase.3a3a.create.htm">Create</a> member function. Do <i>not</i> call <b>Open</b> after <b>Create</b>.</p>
<p>
To open an existing database, construct a <b>CDaoDatabase</b> object and call its <a href="_mfc_cdaodatabase.3a3a.open.htm">Open</a> member function.</p>
<p>
Any of these techniques appends the DAO database object to the workspace’s Databases collection and opens a connection to the data. When you then construct <a href="_mfc_cdaorecordset.htm">CDaoRecordset</a>, <a href="_mfc_cdaotabledef.htm">CDaoTableDef</a>, or <a href="_mfc_cdaoquerydef.htm">CDaoQueryDef</a><b> </b>objects for operating on the connected database, pass the constructors for these objects a pointer to your <b>CDaoDatabase</b> object. When you finish using the connection, call the <a href="_mfc_cdaodatabase.3a3a.close.htm">Close</a> member function and destroy the <b>CDaoDatabase</b> object. <b>Close</b> closes any recordsets you have not closed previously.</p>
<p class=label>
<b>Transactions</b></p>
<p>
Database transaction processing is supplied at the workspace level — see the <a href="_mfc_cdaoworkspace.3a3a.begintrans.htm">BeginTrans</a>, <a href="_mfc_cdaoworkspace.3a3a.committrans.htm">CommitTrans</a>, and <a href="_mfc_cdaoworkspace.3a3a.rollback.htm">Rollback</a> member functions of class <b>CDaoWorkspace</b>. For more information, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Workspace.3a_.Managing_Transactions">
</object><a href=JavaScript:alink_1.Click()>DAO Workspace: Managing Transactions</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p class=label>
<b>ODBC Connections</b></p>
<p>
The recommended way to work with ODBC data sources is to attach external tables to a Microsoft Jet (.MDB) database. For more information, see the article <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_External.3a_.Working_with_External_Data_Sources">
</object><a href=JavaScript:alink_2.Click()>DAO External: Working with External Data Sources</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p class=label>
<b>Collections</b></p>
<p>
Each database maintains its own collections of tabledef, querydef, recordset, and relation objects. Class <b>CDaoDatabase</b> supplies member functions for manipulating these objects.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The objects are stored in DAO, not in the MFC database object. MFC supplies classes for tabledef, querydef, and recordset objects but not for relation objects.</p>
<p>
For more information about <b>CDaoDatabase</b>, see the article <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Database">
</object><a href=JavaScript:alink_3.Click()>DAO Database</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
<B><b>#include &lt;afxdao.h&gt;</b></B></p>
<p>
<a href="_mfc_cdaodatabase_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cobject.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Samples</b>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DAOVIEW">
</object><a href=JavaScript:alink_4.Click()>MFC Sample DAOVIEW</a>  |&nbsp; <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DAOTABLE">
</object><a href=JavaScript:alink_5.Click()>MFC Sample DAOTABLE</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdaoworkspace.htm">CDaoWorkspace</a>, <a href="_mfc_cdaorecordset.htm">CDaoRecordset</a>, <a href="_mfc_cdaotabledef.htm">CDaoTableDef</a>, <a href="_mfc_cdaoquerydef.htm">CDaoQueryDef</a>, <a href="_mfc_cdatabase.htm">CDatabase</a>, <a href="_mfc_cdaoexception.htm">CDaoException</a></p>
</font></BODY>
</HTML>
