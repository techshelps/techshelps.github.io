<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Can I Receive Notifications?</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcrefhowcanireceivenotifications"></a>How Can I Receive Notifications?</h1>
<p>
OLE DB provides interfaces for receiving notifications when events occur. These are described in the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="oledbnotifications">
</object><a href=JavaScript:alink_1.Click()>Notifications</a> chapter of the <i>OLE DB Programmer’s Reference</i>. Setup of these events uses the standard COM connection-point mechanism. For example, an ATL object that wants to retrieve events through <b>IRowsetNotify</b> implements the <b>IRowsetNotify</b> interface by adding <b>IRowsetNotify</b> to the class-derived list and exposing it through a <b>COM_INTERFACE_ENTRY</b> macro.</p>
<p>
<b>IRowsetNotify</b> has three methods, which can be called at various times. If you want to respond to only one of these methods, you can use the <b>IRowsetNotifyImpl</b> class, which returns <b>E_NOTIMPL</b> for the methods you are not interested in.</p>
<p>
When you create the rowset, you must tell the provider that you want the returned rowset object to support <b>IConnectionPointContainer</b>, which is needed to set up the notification.</p>
<p>
The following code shows how to open the rowset from an ATL object, then use the <b>AtlAdvise</b> function to set up the notification sink. <b>AtlAdvise</b> returns a cookie that will be used when you call <b>AtlUnadvise</b>.</p>
<pre><code>CDBPropSet propset(DBPROPSET_ROWSET);
propset.AddProperty(DBPROP_IConnectionPointContainer, true);

product.Open(session, _T("Products"), &amp;propset);

AtlAdvise(product.m_spRowset, GetUnknown(), IID_IRowsetNotify, &amp;m_dwCookie); </code></pre>
</font></BODY>
</HTML>
