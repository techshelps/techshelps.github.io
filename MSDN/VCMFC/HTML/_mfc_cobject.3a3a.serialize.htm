<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CObject::Serialize</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cobject.3a3a.serialize"></a><sup></sup>CObject::Serialize  </h1>
<p>
<b>virtual</b> <b>void</b> <b>Serialize(</b> <b>CArchive&amp;</b> <i>ar</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b><br>
<b>throw(</b> <b>CArchiveException</b> <b>);</b><br>
<b>throw(</b> <b>CFileException</b> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>ar</i></p>
<p class=indent>
A <b>CArchive</b> object to serialize to or from.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Reads or writes this object from or to an archive. </p>
<p>
You must override <b>Serialize</b> for each class that you intend to serialize. The overridden <b>Serialize</b> must first call the <b>Serialize</b> function of its base class. </p>
<p>
You must also use the <a href="_mfc_declare_serial.htm">DECLARE_SERIAL</a> macro in your class declaration, and you must use the <a href="_mfc_implement_serial.htm">IMPLEMENT_SERIAL</a> macro in the implementation.</p>
<p>
Use <a href="_mfc_carchive.3a3a.isloading.htm">CArchive::IsLoading</a> or <a href="_mfc_carchive.3a3a.isstoring.htm">CArchive::IsStoring</a> to determine whether the archive is loading or storing. </p>
<p>
<b>Serialize</b> is called by <a href="_mfc_carchive.3a3a.readobject.htm">CArchive::ReadObject</a> and <a href="_mfc_carchive.3a3a.writeobject.htm">CArchive::WriteObject</a>. These functions are associated with the <b>CArchive</b> insertion operator (<b>&lt;&lt;</b>) and extraction operator (<b>&gt;&gt;</b>). </p>
<p>
For serialization examples, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Serialization_.28.Object_Persistence.29">
</object><a href=JavaScript:alink_1.Click()>Serialization (Object Persistence)</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p class=label>
<b>Example</b></p>
<p>
See <a href="_mfc_coblist.3a3a.coblist.htm">CObList::CObList</a> for a listing of the <code>CAge</code> class used in all <b>CObject</b> examples.</p>
<pre><code>// example for CObject::Serialize
void CAge::Serialize( CArchive&amp; ar )
 {
 CObject::Serialize( ar );
 &nbsp;&nbsp;&nbsp; if( ar.IsStoring() )
 &nbsp;&nbsp;&nbsp; ar &lt;&lt; m_years;
 &nbsp;&nbsp;&nbsp; else
 &nbsp;&nbsp;&nbsp; ar &gt;&gt; m_years;
 }
</code></pre>
<p>
<a href="_mfc_cobject.htm">CObject Overview</a>  |&nbsp; <a href="_mfc_cobject_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
</font></BODY>
</HTML>
