<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COleClientItem</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_coleclientitem"></a>COleClientItem</h1>
<p>
<img src="coclient.gif" border=0></p>
<p>
The <b>COleClientItem</b> class defines the container interface to OLE items. An OLE item represents data, created and maintained by a server application, which can be “seamlessly” incorporated into a document so that it appears to the user to be a single document. The result is a “compound document” made up of the OLE item and a containing document.</p>
<p>
An OLE item can be either embedded or linked. If it is embedded, its data is stored as part of the compound document. If it is linked, its data is stored as part of a separate file created by the server application, and only a link to that file is stored in the compound document. All OLE items contain information specifying the server application that should be called to edit them.</p>
<p>
<b>COleClientItem</b> defines several overridable functions that are called in response to requests from the server application; these overridables usually act as notifications. This allows the server application to inform the container of changes the user makes when editing the OLE item, or to retrieve information needed during editing.</p>
<p>
<b>COleClientItem</b> can be used with either the <a href="_mfc_coledocument.htm">COleDocument</a>, <a href="_mfc_colelinkingdoc.htm">COleLinkingDoc</a>, or <a href="_mfc_coleserverdoc.htm">COleServerDoc</a> class. To use <b>COleClientItem</b>, derive a class from it and implement the <a href="_mfc_coleclientitem.3a3a.onchange.htm">OnChange</a> member function, which defines how the container responds to changes made to the item. To support in-place activation, override the <a href="_mfc_coleclientitem.3a3a.ongetitemposition.htm">OnGetItemPosition</a> member function. This function provides information about the displayed position of the OLE item.</p>
<p>
For more information about using the container interface, see the articles <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Containers.3a_.Implementing_a_Container">
</object><a href=JavaScript:alink_1.Click()>Containers: Implementing a Container</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Activation">
</object><a href=JavaScript:alink_2.Click()>Activation</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The OLE documentation refers to embedded and linked items as “objects” and refers to types of items as “classes.” This reference uses the term “item” to distinguish the OLE entity from the corresponding C++ object and the term “type” to distinguish the OLE category from the C++ class.</p>
<p>
<b>#include &lt;afxole.h&gt;</b></p>
<p>
<a href="_mfc_coleclientitem_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cdocitem.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Samples</b>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_MFCBIND">
</object><a href=JavaScript:alink_3.Click()>MFC Sample MFCBIND</a>  |&nbsp; <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_OCLIENT">
</object><a href=JavaScript:alink_4.Click()>MFC Sample OCLIENT</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_coleserveritem.htm">COleServerItem</a></p>
</font></BODY>
</HTML>
