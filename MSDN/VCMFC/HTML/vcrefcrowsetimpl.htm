<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CRowsetImpl</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcrefcrowsetimpl"></a>CRowsetImpl</h1>
<p>
<b>template &lt;class </b><i>T</i><b>, class </b><i>Storage</i><b>, class </b><i>PropClass</i><b>, class </b><i>ArrayType</i><b> = CSimpleArray&lt;Storage&gt;&gt; class CRowsetImpl </b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>T</i></p>
<p class=indent>
The user’s class that derives from <b>CRowsetImpl</b>.</p>
<p class=dt>
<i>Storage</i></p>
<p class=indent>
The user record class. </p>
<p class=dt>
<i>PropClass</i></p>
<p class=indent>
The class that contains properties for the rowset; typically the command.</p>
<p class=dt>
<i>ArrayType</i></p>
<p class=indent>
The class that will act as storage for the rowset’s data. This parameter defaults to <b>CSimpleArray</b>, but it can be any class that supports the required functionality. See the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vcsmpATLMTODynamicallyAcquiresColumnDefinitions">
</object><a href=JavaScript:alink_1.Click()>ATLMTO</a> sample for an example of changing the default array parameter.</p>
<p>
<b>CRowsetImpl</b> provides a standard OLE DB rowset implementation without requiring multiple inheritance of many implementation interfaces. <b>CRowsetImpl</b> provides overrides in the form of static upcasts. The methods control the manner in which a given rowset will validate command text. You can create your own <b>CRowsetImpl</b>-style class by making your implementation interfaces multiple-inherited. See the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vcsmpMyProvASimpleReadOnlyProvider">
</object><a href=JavaScript:alink_2.Click()>MyProv</a> sample for an example of this technique. The only method for which you must provide implementation is <b>Execute</b>. Depending on what type of rowset you are creating, the creator methods will expect different signatures for <b>Execute</b>. For example, if you are using a <b>CRowsetImpl</b>-derived class to implement a schema rowset, the <b>Execute</b> method will have the following signature:</p>
<pre><code>HRESULT Execute(LONG* pcRows, ULONG cRestrictions, const VARIANT* rgRestrictions)&nbsp; 
</code></pre>
<p>
If you are creating a&nbsp; <b>CRowsetImpl</b>-derived class to implement a command or session’s rowset, the <b>Execute</b> method will have the following signature:</p>
<pre><code>HRESULT Execute(LONG* pcRows, DBPARAMS* pParams)&nbsp; 
</code></pre>
<p>
To implement any of the <b>CRowsetImpl</b>-derived <b>Execute</b> methods, you must populate your internal data buffers (<a href="vcrefcrowsetimplm_rgrowdata.htm">m_rgRowData</a>). </p>
<p>
<b>#include &lt; atldb.h &gt;</b></p>
<p>
<a href="vcrefcrowsetimplclassmembers.htm">CRowsetImpl Class Members</a></p>
</font></BODY>
</HTML>
