<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CObList::RemoveTail</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_coblist.3a3a.removetail"></a><sup></sup>CObList::RemoveTail  </h1>
<p>
<b>CObject*</b> <b>RemoveTail(</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
A pointer to the object that was at the tail of the list.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Removes the element from the tail of the list and returns a pointer to it. </p>
<p>
You must ensure that the list is not empty before calling <b>RemoveTail</b>. If the list is empty, then the Debug version of the Microsoft Foundation Class Library asserts. Use <a href="_mfc_coblist.3a3a.isempty.htm">IsEmpty</a> to verify that the list contains elements.</p>
<p class=label>
<b>Example</b></p>
<pre><code>CObList list;
CAge* pa1;
CAge* pa2;

list.AddHead( pa1 = new CAge( 21 ) );
list.AddHead( pa2 = new CAge( 40 ) ); // List now contains (40, 21).
ASSERT( *(CAge*) list.RemoveTail() == CAge( 21 ) );&nbsp; // Old tail
ASSERT( *(CAge*) list.GetTail() == CAge( 40 ) );&nbsp; // New tail
delete pa1;
delete pa2; // Clean up memory.
</code></pre>
<p>
<a href="_mfc_coblist.htm">CObList Overview</a>  |&nbsp; <a href="_mfc_coblist_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_coblist.3a3a.gettail.htm">CObList::GetTail</a>, <a href="_mfc_coblist.3a3a.addtail.htm">CObList::AddTail</a></p>
</font></BODY>
</HTML>
