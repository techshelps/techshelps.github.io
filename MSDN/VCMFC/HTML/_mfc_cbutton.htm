<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CButton</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cbutton"></a>CButton</h1>
<p>
<img src="cbutton.gif" border=0></p>
<p>
The <b>CButton</b> class provides the functionality of Windows button controls. A button control is a small, rectangular child window that can be clicked on and off. Buttons can be used alone or in groups and can either be labeled or appear without text. A button typically changes appearance when the user clicks it. </p>
<p>
Typical buttons are the check box, radio button, and pushbutton. A <b>CButton</b> object can become any of these, according to the <a href="_mfc_button_styles.htm">button style</a> specified at its initialization by the <a href="_mfc_cbutton.3a3a.create.htm">Create</a> member function. </p>
<p>
In addition, the <a href="_mfc_cbitmapbutton.htm">CBitmapButton</a> class derived from <b>CButton</b> supports creation of button controls labeled with bitmap images instead of text. A <b>CBitmapButton</b> can have separate bitmaps for a button's up, down, focused, and disabled states.</p>
<p>
You can create a button control either from a dialog template or directly in your code. In both cases, first call the constructor <b>CButton</b> to construct the <b>CButton</b> object; then call the <b>Create</b> member function to create the Windows button control and attach it to the <b>CButton</b> object. </p>
<p>
Construction can be a one-step process in a class derived from <b>CButton</b>. Write a constructor for the derived class and call <b>Create</b> from within the constructor.</p>
<p>
If you want to handle Windows notification messages sent by a button control to its parent (usually a class derived from <a href="_mfc_cdialog.htm">CDialog</a>), add a message-map entry and message-handler member function to the parent class for each message.</p>
<p>
Each message-map entry takes the following form:</p>
<p>
<b>ON_</b>Notification<b>(</b> <i>id</i>, <i>memberFxn</i> <b>)</b></p>
<p>
where <i>id</i> specifies the child window ID of the control sending the notification and <i>memberFxn</i> is the name of the parent member function you have written to handle the notification.</p>
<p>
The parent’s function prototype is as follows:</p>
<p>
<b>afx_msg</b> <b>void</b> <i>memberFxn</i><b>( );</b></p>
<p>
Potential message-map entries are as follows:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=39%><b>Map entry</b></td>
<td class=label width=61%><b>Sent to parent when...</b></td>
</tr>
<tr valign=top>
<td width=39%><b>ON_BN_CLICKED</b></td>
<td width=61%>The user clicks a button.</td>
</tr>
<tr valign=top>
<td width=39%><b>ON_BN_DOUBLECLICKED</b></td>
<td width=61%>The user double-clicks a button.</td>
</tr>
</table><br>
<p>
If you create a <b>CButton</b> object from a dialog resource, the <b>CButton</b> object is automatically destroyed when the user closes the dialog box.</p>
<p>
If you create a <b>CButton</b> object within a window, you may need to destroy it. If you create the <b>CButton</b> object on the heap by using the <b>new</b> function, you must call <b>delete</b> on the object to destroy it when the user closes the Windows button control. If you create the <b>CButton</b> object on the stack, or it is embedded in the parent dialog object, it is destroyed automatically.</p>
<p>
<b>#include &lt;afxwin.h&gt;</b></p>
<p>
<a href="_mfc_cbutton_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cwnd.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cwnd.htm">CWnd</a>, <a href="_mfc_ccombobox.htm">CComboBox</a>, <a href="_mfc_cedit.htm">CEdit</a>, <a href="_mfc_clistbox.htm">CListBox</a>, <a href="_mfc_cscrollbar.htm">CScrollBar</a>, <a href="_mfc_cstatic.htm">CStatic</a>, <a href="_mfc_cbitmapbutton.htm">CBitmapButton</a>, <a href="_mfc_cdialog.htm">CDialog</a></p>
</font></BODY>
</HTML>
