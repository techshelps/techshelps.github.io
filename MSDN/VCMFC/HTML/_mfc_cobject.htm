<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CObject</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cobject"></a><sup></sup>CObject</h1>
<p>
<b>CObject</b> is the principal base class for the Microsoft Foundation Class Library. It serves as the root not only for library classes such as <b>CFile</b> and <b>CObList</b>, but also for the classes that you write. <b>CObject</b> provides basic services, including
<ul type=disc>
<li>
Serialization support<br><br></li>
<li>
Run-time class information<br><br></li>
<li>
Object diagnostic output<br><br></li>
<li>
Compatibility with collection classes</li>
</ul>
<p>
Note that <b>CObject</b> does not support multiple inheritance. Your derived classes can have only one <b>CObject</b> base class, and that <b>CObject</b> must be leftmost in the hierarchy. It is permissible, however, to have structures and non-<b>CObject</b>-derived classes in right-hand multiple-inheritance branches.</p>
<p>
You will realize major benefits from <b>CObject</b> derivation if you use some of the optional macros in your class implementation and declarations. </p>
<p>
The first-level macros, <a href="_mfc_declare_dynamic.htm">DECLARE_DYNAMIC</a> and <a href="_mfc_implement_dynamic.htm">IMPLEMENT_DYNAMIC</a>, permit run-time access to the class name and its position in the hierarchy. This, in turn, allows meaningful diagnostic dumping. </p>
<p>
The second-level macros, <a href="_mfc_declare_serial.htm">DECLARE_SERIAL</a> and <a href="_mfc_implement_serial.htm">IMPLEMENT_SERIAL</a>, include all the functionality of the first-level macros, and they enable an object to be “serialized” to and from an “archive.”</p>
<p>
For information about deriving Microsoft Foundation classes and C++ classes in general and using <b>CObject</b>, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_CObject_Class_Topics">
</object><a href=JavaScript:alink_1.Click()>CObject Class Topics</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Serialization_.28.Object_Persistence.29">
</object><a href=JavaScript:alink_2.Click()>Serialization (Object Persistence)</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
<b>#include &lt;afx.h&gt;</b></p>
<p>
<a href="_mfc_cobject_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a> </p>
</font></BODY>
</HTML>
