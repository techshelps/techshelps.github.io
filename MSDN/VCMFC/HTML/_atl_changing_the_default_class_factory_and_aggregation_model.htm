<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changing the Default Class Factory and Aggregation Model</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_changing_the_default_class_factory_and_aggregation_model"></a>Changing the Default Class Factory and Aggregation Model</h1>
<p>
ATL uses <a href="_atl_ccomcoclass.htm">CComCoClass</a> to define the default class factory and aggregation model for your object. <b>CComCoClass</b> specifies the following two macros:
<ul type=disc>
<li>
<a href="_atl_declare_classfactory.htm">DECLARE_CLASSFACTORY</a>&nbsp;&nbsp;&nbsp;Declares the class factory to be <a href="_atl_ccomclassfactory.htm">CComClassFactory</a>.<br><br></li>
<li>
<a href="_atl_declare_aggregatable.htm">DECLARE_AGGREGATABLE</a>&nbsp;&nbsp;&nbsp;Declares that your object can be aggregated.</li>
</ul>
<p>
You can override either of these defaults by specifying another macro in your class definition. For example, to use <a href="_atl_ccomclassfactory2.htm">CComClassFactory2</a> instead of <b>CComClassFactory</b>, specify the <a href="_atl_declare_classfactory2.htm">DECLARE_CLASSFACTORY2</a> macro:</p>
<pre><code>class CMyClass : ..., 
 &nbsp; public CComCoClass&lt;CMyClass, &amp;CLSID_CMyClass&gt;
{
public:
 &nbsp; DECLARE_CLASSFACTORY2(CMyLicense)

 &nbsp; ...
};
</code></pre>
<p>
Two other macros that define a class factory include <a href="_atl_declare_classfactory_auto_thread.htm">DECLARE_CLASSFACTORY_AUTO_THREAD</a> and <a href="_atl_declare_classfactory_singleton.htm">DECLARE_CLASSFACTORY_SINGLETON</a>.</p>
<p>
ATL also uses the <b>typedef</b> mechanism to implement default behavior. For example, the <b>DECLARE_AGGREGATABLE</b> macro uses <b>typedef</b> to define a type called <b>_CreatorClass</b>, which is then reference throughout ATL. Note that in a derived class, a <b>typedef</b> using the same name as the base class's <b>typedef</b> results in ATL using your definition and overriding the default behavior.</p>
</font></BODY>
</HTML>
