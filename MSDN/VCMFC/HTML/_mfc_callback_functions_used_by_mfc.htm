<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Callback Functions Used by MFC</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_callback_functions_used_by_mfc"></a><sup></sup>Callback Functions Used by MFC</h1>
<p>
Three callback functions appear in the Microsoft Foundation Class Library. A description of callback functions that are passed to <a href="_mfc_cdc.3a3a.enumobjects.htm">CDC::EnumObjects</a>, <a href="_mfc_cdc.3a3a.graystring.htm">CDC::GrayString</a>, and <a href="_mfc_cdc.3a3a.setabortproc.htm">CDC::SetAbortProc</a> follows this topic. For the general usage of the callback functions, see the Remarks section of these member functions. Note that all callback functions must trap MFC exceptions before returning to Windows, since exceptions cannot be thrown across callback boundaries. For more information about exceptions, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Exceptions">
</object><a href=JavaScript:alink_1.Click()>Exceptions</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
</font></BODY>
</HTML>
