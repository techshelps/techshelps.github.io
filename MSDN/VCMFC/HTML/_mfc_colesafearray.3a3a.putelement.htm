<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COleSafeArray::PutElement</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_colesafearray.3a3a.putelement"></a><sup></sup>COleSafeArray::PutElement</h1>
<p>
<b>void</b> <b>PutElement(</b> <b>long*</b> <i>rgIndices</i><b>,</b> <b>LPVOID</b> <i>pvData</i> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>rgIndices</i></p>
<p class=indent>
Pointer to an array of indexes for each dimension of the array. </p>
<p class=dt>
<i>pvData</i></p>
<p class=indent>
Pointer to the data to assign to the array. <b>VT_DISPATCH</b>, <b>VT_UNKNOWN</b>, and <b>VT_BSTR</b> variant types are pointers and do not require another level of indirection.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this function to assign a single element into the array. This function automatically calls the Windows functions <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_SafeArrayLock">
</object><a href=JavaScript:alink_1.Click()>SafeArrayLock</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_SafeArrayUnlock">
</object><a href=JavaScript:alink_2.Click()>SafeArrayUnlock</a> before and after assigning the element. If the data element is a string, object, or variant, the function copies it correctly, and if the existing element is a string, object, or variant, it is cleared correctly.</p>
<p>
Note that you can have multiple locks on an array, so you can put elements into an array while the array is locked by other operations.</p>
<p>
On error, the function throws a <a href="_mfc_cmemoryexception.htm">CMemoryException</a> or <a href="_mfc_coleexception.htm">COleException</a>.</p>
<p>
<a href="_mfc_colesafearray.htm">COleSafeArray Overview</a>  |&nbsp; <a href="_mfc_colesafearray_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_colesafearray.3a3a.getelement.htm">COleSafeArray::GetElement</a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_SafeArrayPutElement">
</object><a href=JavaScript:alink_3.Click()>SafeArrayPutElement</a></p>
</font></BODY>
</HTML>
