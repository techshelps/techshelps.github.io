<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CTypedPtrList</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_ctypedptrlist"></a>CTypedPtrList</h1>
<p>
<img src="ctypptrl.gif" border=0></p>
<p>
<b>template&lt;</b> <b>class</b> <i>BASE_CLASS</i><b>,</b> <b>class</b> <i>TYPE</i> <b>&gt;</b><br>
<b>class</b> <b>CTypedPtrList</b> <b>:</b> <b>public</b> <i>BASE_CLASS</i></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>BASE_CLASS</i></p>
<p class=indent>
Base class of the typed pointer list class; must be a pointer list class (<b>CObList</b> or <b>CPtrList</b>).</p>
<p class=dt>
<i>TYPE</i></p>
<p class=indent>
Type of the elements stored in the base-class list.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>CTypedPtrList</b> class provides a type-safe “wrapper” for objects of class <b>CPtrList</b>. When you use <b>CTypedPtrList</b> rather than <b>CObList</b> or <b>CPtrList</b>, the C++ type-checking facility helps eliminate errors caused by mismatched pointer types.</p>
<p>
In addition, the <b>CTypedPtrList</b> wrapper performs much of the casting that would be required if you used <b>CObList</b> or <b>CPtrList</b>.</p>
<p>
Because all <b>CTypedPtrList</b> functions are inline, use of this template does not significantly affect the size or speed of your code.</p>
<p>
Lists derived from <b>CObList</b> can be serialized, but those derived from <b>CPtrList</b> cannot.</p>
<p>
When a <b>CTypedPtrList</b> object is deleted, or when its elements are removed, only the pointers are removed, not the entities they reference.</p>
<p>
For more information on using <b>CTypedPtrList</b>, see the articles <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Collections">
</object><a href=JavaScript:alink_1.Click()>Collections</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Collections.3a_.Template.2d.Based_Classes">
</object><a href=JavaScript:alink_2.Click()>Collections: Template-Based Classes</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
<b>#include &lt;afxtempl.h&gt;</b></p>
<p>
<a href="_mfc_ctypedptrlist_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Sample</b>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_COLLECT">
</object><a href=JavaScript:alink_3.Click()>MFC Sample COLLECT</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cptrlist.htm">CPtrList</a>, <a href="_mfc_coblist.htm">CObList</a></p>
</font></BODY>
</HTML>
