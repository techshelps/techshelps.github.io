<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AfxTermExtensionModule</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_afxtermextensionmodule"></a><sup></sup>AfxTermExtensionModule</h1>
<p>
<b>void</b> <b>AFXAPI</b> <b>AfxTermExtensionModule(</b> <b>AFX_EXTENSION_MODULE&amp;</b> <i>state</i><b>,</b> <b>BOOL</b> <i>bAll </i> <b>=</b> <b>FALSE</b> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>state</i></p>
<p class=indent>
A reference to the <a href="_mfc_afx_extension_module_structure.htm">AFX_EXTENSION_MODULE</a> structure that contains the state of extension DLL module. </p>
<p>
<i>bAll</i>&nbsp;&nbsp;&nbsp;If <b>TRUE</b>, cleanup all extension DLL modules. Otherwise, cleanup only the current DLL module.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this function to allow MFC to cleanup the extension DLL when each process detaches from the DLL (which happens when the process exits, or when the DLL is unloaded as a result of a <b>AfxFreeLibrary</b> call). <b>AfxTermExtensionModule</b> will delete any local storage attached to the module and remove any entries from the message map cache. For example:</p>
<pre><code>static AFX_EXTENSION_MODULE extensionDLL;
extern "C" int APIENTRY 
DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID)
{
 &nbsp; if (dwReason == DLL_PROCESS_ATTACH)
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; // Extension DLL one-time initialization 
 &nbsp;&nbsp;&nbsp;&nbsp; if (!AfxInitExtensionModule( extensionDLL, hInstance))
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;
 &nbsp;&nbsp;&nbsp;&nbsp; // TODO: perform other initialization tasks here
 &nbsp; }
 &nbsp; else if (dwReason == DLL_PROCESS_DETACH)
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; // Extension DLL per-process termination
 &nbsp;&nbsp;&nbsp;&nbsp; AfxTermExtensionModule(extensionDLL);
 &nbsp;&nbsp;&nbsp; // TODO: perform other cleanup tasks here
 &nbsp; }
 &nbsp; return 1;&nbsp;&nbsp; // ok
}
</code></pre>
<p>
If your application loads and frees extension DLLs dynamically, be sure to call <b>AfxTermExtensionModule</b>. Since most extension DLLs are not dynamically loaded (usually, they are linked via their import libraries), the call to <b>AfxTermExtensionModule</b> is usually not necessary. </p>
<p>
MFC extension DLLs need to call <a href="_mfc_afxinitextensionmodule.htm">AfxInitExtensionModule</a> in their <b>DllMain</b>. If the DLL will be exporting <a href="_mfc_cruntimeclass.htm">CRuntimeClass</a> objects or has its own custom resources, you also need to create a <b>CDynLinkLibrary</b> object in <b>DllMain</b>.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_afxinitextensionmodule.htm">AfxInitExtensionModule</a></p>
</font></BODY>
</HTML>
