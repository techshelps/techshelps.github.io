<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDaoRecordView::CDaoRecordView</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdaorecordview.3a3a.cdaorecordview"></a>CDaoRecordView::CDaoRecordView</h1>
<p>
<b>CDaoRecordView( LPCSTR</b> <i>lpszTemplateName</i><b> );</b></p>
<p>
<b>CDaoRecordView( UINT </b><i>nIDTemplate</i><b> );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>lpszTemplateName</i></p>
<p class=indent>
Contains a null-terminated string that is the name of a dialog template resource.</p>
<p class=dt>
<i>nIDTemplate</i></p>
<p class=indent>
Contains the ID number of a dialog template resource.</p>
<p class=label>
<b>Remarks</b></p>
<p>
When you create an object of a type derived from <b>CDaoRecordView</b>, call either form of the constructor to initialize the view object and identify the dialog resource on which the view is based. You can either identify the resource by name (pass a string as the argument to the constructor) or by its ID (pass an unsigned integer as the argument). Using a resource ID is recommended.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Your derived class must supply its own constructor. In the constructor of your derived class, call the constructor <b>CDaoRecordView::CDaoRecordView</b> with the resource name or ID as an argument.</p>
<p>
<b>CDaoRecordView::OnInitialUpdate</b> calls <b>CWnd::UpdateData</b>, which calls <b>CWnd::DoDataExchange</b>. This initial call to <b>DoDataExchange</b> connects <b>CDaoRecordView</b> controls (indirectly) to <b>CDaoRecordset</b> field data members created by ClassWizard. These data members cannot be used until after you call the base class <b>CFormView::OnInitialUpdate</b> member function.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you use ClassWizard, the wizard defines an <b>enum</b> value <code>CDaoRecordView::IDD</code> and specifies it in the member initialization list for the constructor where you see <code>IDD_MYFORM</code>. </p>
<pre><code>CMyRecordView::CMyRecordView()

   : CDaoRecordView( IDD_MYFORM )
{
   //{{AFX_DATA_INIT( CMyRecordView )
      // NOTE: the ClassWizard will add member initialization here
   //}}AFX_DATA_INIT
   // Other construction code, such as data initialization
}
</code></pre>
<p>
<a href="_mfc_cdaorecordview.htm">CDaoRecordView Overview</a>  |&nbsp; <a href="_mfc_cdaorecordview_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cwnd.3a3a.updatedata.htm">CWnd::UpdateData</a>, <a href="_mfc_cwnd.3a3a.dodataexchange.htm">CWnd::DoDataExchange</a></p>
</font></BODY>
</HTML>
