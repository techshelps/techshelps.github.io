<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AfxInitExtensionModule</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_afxinitextensionmodule"></a>AfxInitExtensionModule</h1>
<p>
<b>BOOL</b> <b>AFXAPI</b> <b>AfxInitExtensionModule(</b> <b>AFX_EXTENSION_MODULE&amp;</b> <i>state</i><b>,</b> <b>HMODULE</b> <i>hModule</i> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
<b>TRUE</b> if the extension DLL is successfully initialized; otherwise, <b>FALSE</b>.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>state</i></p>
<p class=indent>
A reference to the <a href="_mfc_afx_extension_module_structure.htm">AFX_EXTENSION_MODULE</a> structure that will contain the state of extension DLL module after the initialization. The state includes a copy of the runtime class objects that have been initialized by the extension DLL as part of normal static object construction executed before <b>DllMain</b> is entered.</p>
<p class=dt>
<i>hModule</i></p>
<p class=indent>
A handle of the extension DLL module. </p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this function in an extension DLL's <b>DllMain</b> to initialize the DLL. For example:</p>
<pre><code>static AFX_EXTENSION_MODULE extensionDLL;
extern "C" int APIENTRY
DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID)
{
 &nbsp; if (dwReason == DLL_PROCESS_ATTACH)
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; // Extension DLL one-time initialization
 &nbsp;&nbsp;&nbsp;&nbsp; if (!AfxInitExtensionModule(extensionDLL, hInstance))
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;
...
</code></pre>
<p>
<b>AfxInitExtensionModule</b> makes a copy of the DLL's <b>HMODULE</b> and captures the DLL's runtime-classes (<b>CRuntimeClass</b> structures) as well as its object factories (<b>COleObjectFactory</b> objects) for use later when the <b>CDynLinkLibrary</b> object is created. </p>
<p>
MFC extension DLLs need to do two things in their <b>DllMain</b> function:
<ul type=disc>
<li>
Call <a href="#_mfc_afxinitextensionmodule">AfxInitExtensionModule</a> and check the return value.<br><br></li>
<li>
Create a <b>CDynLinkLibrary</b> object if the DLL will be exporting <a href="_mfc_cruntimeclass.htm">CRuntimeClass</a> objects or has its own custom resources.</li>
</ul>
<p>
You can call <b>AfxTermExtensionModule</b> to clean up the extension DLL when each process detaches from the extension DLL (which happens when the process exits, or when the DLL is unloaded as a result of an <b>AfxFreeLibrary</b> call). </p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_afxtermextensionmodule.htm">AfxTermExtensionModule</a></p>
</font></BODY>
</HTML>
