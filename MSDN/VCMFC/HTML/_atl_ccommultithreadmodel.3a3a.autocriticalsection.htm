<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CComMultiThreadModel::AutoCriticalSection</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_ccommultithreadmodel.3a3a.autocriticalsection"></a>CComMultiThreadModel::AutoCriticalSection</h1>
<p>
<b>typedef CComAutoCriticalSection AutoCriticalSection;</b></p>
<p class=label>
<b>Remarks</b></p>
<p>
When using <b>CComMultiThreadModel</b>, the <b>typedef</b> name <b>AutoCriticalSection</b> references class <a href="_atl_ccomautocriticalsection.htm">CComAutoCriticalSection</a>, which provides methods for obtaining and releasing ownership of a critical section object.</p>
<p>
<a href="_atl_ccomsinglethreadmodel.htm">CComSingleThreadModel</a> and <a href="_atl_ccommultithreadmodelnocs.htm">CComMultiThreadModelNoCS</a> also contain definitions for <b>AutoCriticalSection</b>. The following table shows the relationship between the threading model class and the critical section class reference by <b>AutoCriticalSection</b>:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=44%><b>Class defined in</b></td>
<td class=label width=56%><b>Class referenced</b></td>
</tr>
<tr valign=top>
<td width=44%><b>CComMultiThreadModel</b></td>
<td width=56%><b>CComCriticalSection</b></td>
</tr>
<tr valign=top>
<td width=44%><b>CComSingleThreadModel</b></td>
<td width=56%><b>CComFakeCriticalSection</b></td>
</tr>
<tr valign=top>
<td width=44%><b>CComMultiThreadModelNoCS</b></td>
<td width=56%><b>CComFakeCriticalSection</b></td>
</tr>
</table><br>
<p>
In addition to <b>AutoCriticalSection</b>, you can use the <b>typedef</b> name <a href="_atl_ccommultithreadmodel.3a3a.criticalsection.htm">CriticalSection</a>. You should not specify <b>AutoCriticalSection</b> in global objects or static class members if you want to eliminate the CRT startup code.</p>
<p class=label>
<b>Example</b></p>
<p>
The following code is taken from <a href="_atl_ccomobjectrootex.htm">CComObjectRootEx</a>.</p>
<pre><code>template&lt; class ThreadModel &gt;
class CComObjectRootEx : public CComObjectRootBase
{
public:
 &nbsp; typedef ThreadModel _ThreadModel;
 &nbsp; typedef _ThreadModel::AutoCriticalSection _CritSec;

 &nbsp; ULONG InternalAddRef( )
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; ...
 &nbsp;&nbsp;&nbsp;&nbsp; return _ThreadModel::Increment(&amp;m_dwRef);
 &nbsp; }
 &nbsp; ...
 &nbsp; void Lock( ) { m_critsec.Lock( ); }
 &nbsp; ...

private:
 &nbsp; _CritSec m_critsec;

};
</code></pre>
<p>
The following tables show the results of the <b>InternalAddRef</b> and <b>Lock</b> methods, depending on the <b>ThreadModel</b> template parameter and the threading model used by the application:</p>
<p class=label>
<b>ThreadModel = CComObjectThreadModel</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td width=24%></td>
<td width=41%><b>Single</b> or <b>Apartment</b></td>
<td width=35%><b>Free</b></td>
</tr>
<tr valign=top>
<td width=24%><b>InternalAddRef</b></td>
<td width=41%>The increment is not thread-safe. </td>
<td width=35%>The increment is thread-safe. </td>
</tr>
<tr valign=top>
<td width=24%><b>Lock</b></td>
<td width=41%>Does nothing; there is no critical section to lock.</td>
<td width=35%>The critical section is locked.</td>
</tr>
</table><br>
<p class=label>
<b>ThreadModel = CComObjectThreadModel::ThreadModelNoCS</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td width=24%></td>
<td width=41%><b>Single</b> or <b>Apartment</b></td>
<td width=35%><b>Free</b></td>
</tr>
<tr valign=top>
<td width=24%><b>InternalAddRef</b></td>
<td width=41%>The increment is not thread-safe.</td>
<td width=35%>The increment is thread-safe.</td>
</tr>
<tr valign=top>
<td width=24%><b>Lock</b></td>
<td width=41%>Does nothing; there is no critical section to lock.</td>
<td width=35%>Does nothing; there is no critical section to lock.</td>
</tr>
</table><br>
<p>
<a href="_atl_ccommultithreadmodel.htm">CComMultiThreadModel Overview</a>  |&nbsp; <a href="_atl_ccommultithreadmodel_class_members.htm">Class Members</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_atl_ccomobjectthreadmodel.htm">CComObjectThreadModel</a>, <a href="_atl_ccomglobalsthreadmodel.htm">CComGlobalsThreadModel</a>, <a href="_atl_ccommultithreadmodel.3a3a.threadmodelnocs.htm">CComMultiThreadModel::ThreadModelNoCS</a></p>
</font></BODY>
</HTML>
