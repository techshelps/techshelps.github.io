<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing a Simple Consumer</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcfaqimplementingasimpleconsumer"></a>Implementing a Simple Consumer</h1>
<p>
To construct this consumer, you must create an MFC AppWizard application with the following options:
<ul type=disc>
<li>
In the <b>Project Name</b> box, name the project <code>TestProv</code>.<br><br></li>
<li>
In the <b>Step 1</b> dialog box, select <b>Dialog-based</b>.<br><br></li>
<li>
In the <b>Step 2</b> dialog box, select <b>Automation</b>.</li>
</ul>
<p>
Selecting <b>Automation</b> means you do not have to add a <b>CoIntialize</b> call in <b>CTestProvApp::InitInstance</b>.</p>
<p>
After creating the dialog-based MFC application, you must:
<ul type=disc>
<li>
<a href="vchoweditingtestconsumerresourcefile.htm">Edit the dialog resource</a>.<br><br></li>
<li>
<a href="vchoweditingtestprovdlg.h.htm">Edit the user record</a>.<br><br></li>
<li>
<a href="vchowaddingrunbuttonhandler.htm">Add a handler for the Run button</a>.</li>
</ul>
<p>
<a href="vchowimplementinganoledbtemplateconsumer.htm">Back to Implementing an OLE DB Template Consumer</a></p>
</font></BODY>
</HTML>
