<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing an OLE DB Template Provider</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vchowimplementingoledbtemplateprovider"></a>Implementing an OLE DB Template Provider</h1>
<p>
Once you have created an OLE DB provider using the ATL COM AppWizard and ATL Object Wizard, you can add commands, transactions, and other optional objects you want to support.</p>
<p>
The extended example in this article shows how to edit the wizard-created files to create a simple provider. The example is presented in two parts:
<ul type=disc>
<li>
The first part shows how to <a href="vchowimplementingsimpleread-onlyprovider.htm">create a simple read-only provider</a> that reads a pair of strings.<br><br></li>
<li>
The second part shows how to <a href="vchowaddingirowsetlocateinterface.htm">enhance the simple read-only provider</a> by adding the <code>IRowsetLocate</code> interface.</li>
</ul>
<p>
You can find the finished code for the enhanced simple provider in the sample <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vcsmpMyProvASimpleReadOnlyProvider">
</object><a href=JavaScript:alink_1.Click()>MyProv: A Simple Read-Only Provider</a>.</p>
</font></BODY>
</HTML>
