<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDaoQueryDef::CDaoQueryDef</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdaoquerydef.3a3a.cdaoquerydef"></a>CDaoQueryDef::CDaoQueryDef</h1>
<p>
<b>CDaoQueryDef( CDaoDatabase* </b><i>pDatabase</i><b> );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pDatabase</i></p>
<p class=indent>
A pointer to an open <a href="_mfc_cdaodatabase.htm">CDaoDatabase</a> object.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Constructs a <b>CDaoQueryDef </b>object. The object can represent an existing querydef stored in the database’s QueryDefs collection, a new query to be stored in the collection, or a temporary query, not to be stored. Your next step depends on the type of querydef:
<ul type=disc>
<li>
If the object represents an existing querydef, call the object’s <a href="_mfc_cdaoquerydef.3a3a.open.htm">Open</a> member function to initialize it. <br><br></li>
<li>
If the object represents a new querydef to be saved, call the object’s <a href="_mfc_cdaoquerydef.3a3a.create.htm">Create</a> member function. This adds the object to the database’s QueryDefs collection. Then call <b>CDaoQueryDef</b> member functions to set the object’s attributes. Finally, call <a href="_mfc_cdaoquerydef.3a3a.append.htm">Append</a>.<br><br></li>
<li>
If the object represents a temporary querydef (not to be saved in the database), call <b>Create</b>, passing an empty string for the query’s name. After calling <b>Create</b>, initialize the querydef by directly setting its attributes. Do not call <b>Append</b>.</li>
</ul>
<p>
To set the attributes of the querydef, you can use the <a href="_mfc_cdaoquerydef.3a3a.setname.htm">SetName</a>, <a href="_mfc_cdaoquerydef.3a3a.setsql.htm">SetSQL</a>, <a href="_mfc_cdaoquerydef.3a3a.setconnect.htm">SetConnect</a>, <a href="_mfc_cdaoquerydef.3a3a.setodbctimeout.htm">SetODBCTimeout</a>, and <a href="_mfc_cdaoquerydef.3a3a.setreturnsrecords.htm">SetReturnsRecords</a> member functions. </p>
<p>
When you finish with the querydef object, call its <a href="_mfc_cdaoquerydef.3a3a.close.htm">Close</a> member function. If you have a pointer to the querydef, use the <b>delete</b> operator to destroy the C++ object.</p>
<p>
For information about querydefs, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Querydef">
</object><a href=JavaScript:alink_1.Click()>DAO Querydef</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
<a href="_mfc_cdaoquerydef.htm">CDaoQueryDef Overview</a>  |&nbsp; <a href="_mfc_cdaoquerydef_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdaoquerydef.3a3a.getconnect.htm">CDaoQueryDef::GetConnect</a>, <a href="_mfc_cdaoquerydef.3a3a.getdatecreated.htm">CDaoQueryDef::GetDateCreated</a>, <a href="_mfc_cdaoquerydef.3a3a.getdatelastupdated.htm">CDaoQueryDef::GetDateLastUpdated</a>, <a href="_mfc_cdaoquerydef.3a3a.getname.htm">CDaoQueryDef::GetName</a>, <a href="_mfc_cdaoquerydef.3a3a.getodbctimeout.htm">CDaoQueryDef::GetODBCTimeout</a>, <a href="_mfc_cdaoquerydef.3a3a.getreturnsrecords.htm">CDaoQueryDef::GetReturnsRecords</a>, <a href="_mfc_cdaoquerydef.3a3a.getsql.htm">CDaoQueryDef::GetSQL</a></p>
</font></BODY>
</HTML>
