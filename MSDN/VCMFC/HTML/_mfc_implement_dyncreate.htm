<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMPLEMENT_DYNCREATE</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_implement_dyncreate"></a><sup></sup>IMPLEMENT_DYNCREATE</h1>
<p>
<b>IMPLEMENT_DYNCREATE(</b> <i>class_name,</i> <i>base_class_name</i> <b>)</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>class_name</i></p>
<p class=indent>
The actual name of the class (not enclosed in quotation marks).</p>
<p class=dt>
<i>base_class_name</i></p>
<p class=indent>
The actual name of the base class (not enclosed in quotation marks).</p>
<p class=label>
<b>Remarks</b></p>
<p>
Use the <b>IMPLEMENT_DYNCREATE</b> macro with the <b>DECLARE_DYNCREATE</b> macro to enable objects of <b>CObject</b>-derived classes to be created dynamically at run time. The framework uses this ability to create new objects dynamically, for example, when it reads an object from disk during serialization. Add the <b>IMPLEMENT_DYNCREATE</b> macro in the class implementation file. For more information, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_CObject_Class_Topics">
</object><a href=JavaScript:alink_1.Click()>CObject Class Topics</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
If you use the <b>DECLARE_DYNCREATE</b> and <b>IMPLEMENT_DYNCREATE</b> macros, you can then use the <b>RUNTIME_CLASS</b> macro and the <b>CObject::IsKindOf</b> member function to determine the class of your objects at run time. </p>
<p>
If <b>DECLARE_DYNCREATE</b> is included in the class declaration, then <b>IMPLEMENT_DYNCREATE</b> must be included in the class implementation.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_declare_dyncreate.htm">DECLARE_DYNCREATE</a>, <a href="_mfc_runtime_class.htm">RUNTIME_CLASS</a>, <a href="_mfc_cobject.3a3a.iskindof.htm">CObject::IsKindOf</a></p>
</font></BODY>
</HTML>
