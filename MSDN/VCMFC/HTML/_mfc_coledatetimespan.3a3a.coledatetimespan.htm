<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COleDateTimeSpan::COleDateTimeSpan</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_coledatetimespan.3a3a.coledatetimespan"></a>COleDateTimeSpan::COleDateTimeSpan</h1>
<p>
<b>COleDateTimeSpan( );</b></p>
<p>
<b>COleDateTimeSpan( const COleDateTimeSpan&amp; </b><i>dateSpanSrc</i><b> );</b></p>
<p>
<b>COleDateTimeSpan( double </b><i>dblSpanSrc</i><b> );</b></p>
<p>
<b>COleDateTimeSpan( long </b><i>lDays</i><b>, int </b><i>nHours</i><b>, int </b><i>nMins</i><b>, int </b><i>nSecs</i><b> );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>dateSpanSrc</i></p>
<p class=indent>
An existing <b>COleDateTimeSpan</b> object to be copied into the new <b>COleDateTimeSpan</b> object.</p>
<p class=dt>
<i>dblSpanSrc</i></p>
<p class=indent>
The number of days to be copied into the new <b>COleDateTimeSpan</b> object.</p>
<p class=dt>
<i>lDays</i>, <i>nHours</i>, <i>nMins</i>, <i>nSecs</i></p>
<p class=indent>
Indicate the day and time values to be copied into the new <b>COleDateTimeSpan</b> object.</p>
<p class=label>
<b>Remarks</b></p>
<p>
All of these constructors create new <b>COleDateTimeSpan</b> objects initialized to the specified value. A brief description of each of these constructors follows:
<ul type=disc>
<li>
<b>COleDateTimeSpan(</b> <b>)</b>&nbsp;&nbsp;&nbsp;Constructs a <b>COleDateTimeSpan</b> object initialized to 0.<br><br></li>
<li>
<b>COleDateTimeSpan(</b> <i>dateSpanSrc</i><b> )</b>&nbsp;&nbsp;&nbsp;Constructs a <b>COleDateTimeSpan</b> object from an existing <b>COleDateTimeSpan</b> object.<br><br></li>
<li>
<b>COleDateTimeSpan(</b> <i>dblSpanSrc</i><b> )</b>&nbsp;&nbsp;&nbsp;Constructs a <b>COleDateTimeSpan</b> object from a floating-point value.<br><br></li>
<li>
<b>COleDateTimeSpan(</b> <i>lDays</i><b>, </b><i>nHours</i><b>, </b><i>nMins</i><b>, </b><i>nSecs</i> <b>)</b>&nbsp;&nbsp;&nbsp;Constructs a <b>COleDateTimeSpan</b> object initialized to the specified numerical values.</li>
</ul>
<p>
The status of the new <b>COleDateTimeSpan</b> object is set to valid.</p>
<p>
For more information about the bounds for <b>COleDateTimeSpan</b> values, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Date_and_Time.3a_.Automation_Support">
</object><a href=JavaScript:alink_1.Click()>Date and Time: Automation Support</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p class=label>
<b>Example</b></p>
<pre><code>COleDateTimeSpan spanOne( 2.75 );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 2 days and 18 hours
COleDateTimeSpan spanTwo( 2, 18, 0, 0 );&nbsp;&nbsp; // 2 days and 18 hours
COleDateTimeSpan spanThree( 3, -6, 0, 0 ); // 2 days and 18 hours
</code></pre>
<p>
<a href="_mfc_coledatetimespan.htm">COleDateTimeSpan Overview</a>  |&nbsp; <a href="_mfc_coledatetimespan_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_coledatetimespan.3a3a.operator_.3d.htm">COleDateTimeSpan::operator =</a>, <a href="_mfc_coledatetimespan.3a3a.getstatus.htm">COleDateTimeSpan::GetStatus</a>, <a href="_mfc_coledatetimespan.3a3a.m_span.htm">COleDateTimeSpan::m_span</a>, <a href="_mfc_coledatetimespan.3a3a.m_status.htm">COleDateTimeSpan::m_status</a></p>
</font></BODY>
</HTML>
