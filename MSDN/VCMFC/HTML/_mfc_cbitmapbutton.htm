<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CBitmapButton</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cbitmapbutton"></a>CBitmapButton</h1>
<p>
<img src="cbitmapb.gif" border=0></p>
<p>
Use the <b>CBitmapButton</b> class to create pushbutton controls labeled with bitmapped images instead of text. <b>CBitmapButton</b> objects contain up to four bitmaps, which contain images for the different states a button can assume: up (or normal), down (or selected), focused, and disabled. Only the first bitmap is required; the others are optional.</p>
<p>
Bitmap-button images include the border around the image as well as the image itself. The border typically plays a part in showing the state of the button. For example, the bitmap for the focused state usually is like the one for the up state but with a dashed rectangle inset from the border or a thick solid line at the border. The bitmap for the disabled state usually resembles the one for the up state but has lower contrast (like a dimmed or grayed menu selection).</p>
<p>
These bitmaps can be of any size, but all are treated as if they were the same size as the bitmap for the up state.</p>
<p>
Various applications demand different combinations of bitmap images:</p>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows>
<tr valign=top>
<td class=label width=16%><b>Up</b></td>
<td class=label width=17%><b>Down</b></td>
<td class=label width=17%><b>Focused</b></td>
<td class=label width=17%><b>Disabled</b></td>
<td class=label width=33%><b>Application</b></td>
</tr>
<tr valign=top>
<td width=16%>&times;</td>
<td width=17%></td>
<td width=17%></td>
<td width=17%></td>
<td width=33%>Bitmap</td>
</tr>
<tr valign=top>
<td width=16%>&times;</td>
<td width=17%>&times;</td>
<td width=17%></td>
<td width=17%></td>
<td width=33%>Button without <b>WS_TABSTOP</b> style</td>
</tr>
<tr valign=top>
<td width=16%>&times;</td>
<td width=17%>&times;</td>
<td width=17%>&times;</td>
<td width=17%>&times;</td>
<td width=33%>Dialog button with all states</td>
</tr>
<tr valign=top>
<td width=16%>&times;</td>
<td width=17%>&times;</td>
<td width=17%>&times;</td>
<td width=17%></td>
<td width=33%>Dialog button with <b>WS_TABSTOP</b> style</td>
</tr>
</table><br>
<p>
When creating a bitmap-button control, set the <b>BS_OWNERDRAW</b> style to specify that the button is owner-drawn.&nbsp; This causes Windows to send the <b>WM_MEASUREITEM</b> and <b>WM_DRAWITEM</b> messages for the button; the framework handles these messages and manages the appearance of the button for you.</p>
<p>
To create a bitmap-button control in a window’s client area, follow these steps:
<ol>
<li>
Create one to four bitmap images for the button.<br><br></li>
<li>
Construct the <a href="_mfc_cbitmapbutton.3a3a.cbitmapbutton.htm">CBitmapButton</a> object.<br><br></li>
<li>
Call the <a href="_mfc_cbutton.3a3a.create.htm">Create</a> function to create the Windows button control and attach it to the <b>CBitmapButton</b> object.<br><br></li>
<li>
Call the <a href="_mfc_cbitmapbutton.3a3a.loadbitmaps.htm">LoadBitmaps</a> member function to load the bitmap resources after the bitmap button is constructed.</li>
</ol>
<p>
To include a bitmap-button control in a dialog box, follow these steps:
<ol start=5>
<li>
Create one to four bitmap images for the button.<br><br></li>
<li>
Create a dialog template with an owner-draw button positioned where you want the bitmap button. The size of the button in the template does not matter.<br><br></li>
<li>
Set the button’s caption to a value such as “MYIMAGE” and define a symbol for the button such as IDC_MYIMAGE.<br><br></li>
<li>
In your application’s resource script, give each of the images created for the button an ID constructed by appending one of the letters “U,” “D,” “F,” or “X” (for up, down, focused, and disabled) to the string used for the button caption in step 3. For the button caption “MYIMAGE,” for example, the IDs would be “MYIMAGEU,” “MYIMAGED,” “MYIMAGEF,” and “MYIMAGEX.” You <b>must</b> specify the ID of your bitmaps within double quotes. Otherwise the resource editor will assign an integer to the resource and MFC will fail when loading the image.<br><br></li>
<li>
In your application’s dialog class (derived from <b>CDialog</b>), add a <b>CBitmapButton</b> member object.<br><br></li>
<li>
In the <b>CDialog</b> object’s <a href="_mfc_cdialog.3a3a.oninitdialog.htm">OnInitDialog</a> routine, call the <b>CBitmapButton</b> object’s <a href="_mfc_cbitmapbutton.3a3a.autoload.htm">AutoLoad</a> function, using as parameters the button’s control ID and the <b>CDialog</b> object’s <b>this</b> pointer.</li>
</ol>
<p>
If you want to handle Windows notification messages, such as <b>BN_CLICKED</b>, sent by a bitmap-button control to its parent (usually a class derived from <b>CDialog)</b>, add to the <b>CDialog</b>-derived object a message-map entry and message-handler member function for each message. The notifications sent by a <b>CBitmapButton</b> object are the same as those sent by a <a href="_mfc_cbutton.htm">CButton</a> object.</p>
<p>
The class <a href="_mfc_ctoolbar.htm">CToolBar</a> takes a different approach to bitmap buttons. </p>
<p>
For more information on <b>CBitmapButton</b>, see<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Control_Topics">
</object><a href=JavaScript:alink_1.Click()> Control Topics</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
<b>#include &lt;afxext.h&gt;</b></p>
<p>
<a href="_mfc_cbitmapbutton_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cbutton.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Sample</b>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_CTRLTEST">
</object><a href=JavaScript:alink_2.Click()>MFC Sample CTRLTEST</a></p>
</font></BODY>
</HTML>
