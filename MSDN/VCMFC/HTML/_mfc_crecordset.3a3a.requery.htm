<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CRecordset::Requery</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_crecordset.3a3a.requery"></a><sup></sup>CRecordset::Requery</h1>
<p>
<b>virtual</b> <b>BOOL</b> <b>Requery(</b> <b>);</b><br>
<b>throw(</b> <b>CDBException</b>, <b>CMemoryException</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if the recordset was successfully rebuilt; otherwise 0.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to rebuild (refresh) a recordset. If any records are returned, the first record becomes the current record.</p>
<p>
In order for the recordset to reflect the additions and deletions that you or other users are making to the data source, you must rebuild the recordset by calling <b>Requery</b>. If the recordset is a dynaset, it automatically reflects updates that you or other users make to its existing records (but not additions). If the recordset is a snapshot, you must call <b>Requery</b> to reflect edits by other users as well as additions and deletions.</p>
<p>
For either a dynaset or a snapshot, call <b>Requery</b> any time you want to rebuild the recordset using a new filter or sort, or new parameter values. Set the new filter or sort property by assigning new values to <b>m_strFilter</b> and <b>m_strSort</b> before calling <b>Requery</b>. Set new parameters by assigning new values to parameter data members before calling <b>Requery</b>. If the filter and sort strings are unchanged, you can reuse the query, which improves performance.</p>
<p>
If the attempt to rebuild the recordset fails, the recordset is closed. Before you call <b>Requery</b>, you can determine whether the recordset can be requeried by calling the <b>CanRestart</b> member function. <b>CanRestart</b> does not guarantee that <b>Requery</b> will succeed. </p>
<p class=indent>
<B><b>Caution</b></B>&nbsp;&nbsp;&nbsp;Call <b>Requery</b> only after you have called <a href="_mfc_crecordset.3a3a.open.htm">Open</a>.</p>
<p class=label>
<b>Example</b></p>
<p>
This example rebuilds a recordset to apply a different sort order.</p>
<pre><code>// Example for CRecordset::Requery

CCustSet rsCustSet( NULL );

// Open the recordset
rsCustSet.Open( );

// Use the recordset ...

// Set the sort order and Requery the recordset
rsCustSet.m_strSort = "District, Last_Name";
if( !rsCustSet.CanRestart( ) )
 &nbsp; return;&nbsp;&nbsp;&nbsp; // Unable to requery

if( !rsCustSet.Requery( ) )
 &nbsp; // Requery failed, so take action
</code></pre>
<p>
<a href="_mfc_crecordset.htm">CRecordset Overview</a>  |&nbsp; <a href="_mfc_crecordset_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_crecordset.3a3a.canrestart.htm">CRecordset::CanRestart</a>, <a href="_mfc_crecordset.3a3a.m_strfilter.htm">CRecordset::m_strFilter</a>, <a href="_mfc_crecordset.3a3a.m_strsort.htm">CRecordset::m_strSort</a></p>
</font></BODY>
</HTML>
