<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CSplitterWnd::DoScroll</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_csplitterwnd.3a3a.doscroll"></a>CSplitterWnd::DoScroll</h1>
<p>
<b>virtual BOOL DoScroll( CView* </b><i>pViewFrom</i><b>, UINT </b><i>nScrollCode</i><b>, BOOL </b><i>bDoScroll</i><b> = TRUE );</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if synchronized scrolling occurs; otherwise 0. </p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pViewFrom</i></p>
<p class=indent>
A pointer to the view from which the scrolling message originates.</p>
<p class=dt>
<i>nScrollCode</i></p>
<p class=indent>
A scroll-bar code that indicates the user's scrolling request. This parameter is composed of two parts: a low-order byte, which determines the type of scrolling occurring horizontally, and a high-order byte, which determines the type of scrolling occurring vertically:
<ul type=disc>
<li>
<b>SB_BOTTOM</b>&nbsp;&nbsp;&nbsp; Scrolls to bottom.<br><br></li>
<li>
<b>SB_LINEDOWN</b>&nbsp;&nbsp;&nbsp; Scrolls one line down.<br><br></li>
<li>
<b>SB_LINEUP</b>&nbsp;&nbsp;&nbsp; Scrolls one line up.<br><br></li>
<li>
<b>SB_PAGEDOWN</b>&nbsp;&nbsp;&nbsp; Scrolls one page down.<br><br></li>
<li>
<b>SB_PAGEUP</b>&nbsp;&nbsp;&nbsp; Scrolls one page up.<br><br></li>
<li>
<b>SB_TOP</b>&nbsp;&nbsp;&nbsp; Scrolls to top.</li>
</ul>
<p class=dt>
<i>bDoScroll</i></p>
<p class=indent>
Determines whether the specified scrolling action occurs. If <i>bDoScroll</i> is <b>TRUE</b> (that is, if a child window exists, and if the split windows have a scroll range), then the specified scrolling action can take place; if <i>bDoScroll</i> is <b>FALSE</b> (that is, if no child window exists, or the split views have no scroll range), then scrolling does not occur.</p>
<p class=label>
<b>Remarks</b></p>
<p>
This member function is called by the framework to perform synchronized scrolling of split windows when the view receives a scroll message.</p>
<p>
Override to require an action by the user before synchronized scrolling is allowed.</p>
<p>
<a href="_mfc_csplitterwnd.htm">CSplitterWnd Overview</a>  |&nbsp; <a href="_mfc_csplitterwnd_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_csplitterwnd.3a3a.doscrollby.htm">CSplitterWnd::DoScrollBy</a>, <a href="_mfc_cview.3a3a.onscroll.htm">CView::OnScroll</a></p>
</font></BODY>
</HTML>
