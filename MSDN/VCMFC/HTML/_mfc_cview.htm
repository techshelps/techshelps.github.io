<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CView</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cview"></a>CView</h1>
<p>
<img src="cview.gif" border=0></p>
<p>
The <b>CView</b> class provides the basic functionality for user-defined view classes. A view is attached to a document and acts as an intermediary between the document and the user: the view renders an image of the document on the screen or printer and interprets user input as operations upon the document. </p>
<p>
A view is a child of a frame window. More than one view can share a frame window, as in the case of a splitter window. The relationship between a view class, a frame window class, and a document class is established by a <b>CDocTemplate</b> object. When the user opens a new window or splits an existing one, the framework constructs a new view and attaches it to the document. </p>
<p>
A view can be attached to only one document, but a document can have multiple views attached to it at once — for example, if the document is displayed in a splitter window or in multiple child windows in a multiple document interface (MDI) application. Your application can support different types of views for a given document type; for example, a word-processing program might provide both a complete text view of a document and an outline view that shows only the section headings. These different types of views can be placed in separate frame windows or in separate panes of a single frame window if you use a splitter window.</p>
<p>
A view may be responsible for handling several different types of input, such as keyboard input, mouse input or input via drag-and-drop, as well as commands from menus, toolbars, or scroll bars. A view receives commands forwarded by its frame window. If the view does not handle a given command, it forwards the command to its associated document. Like all command targets, a view handles messages via a message map.</p>
<p>
The view is responsible for displaying and modifying the document’s data but not for storing it. The document provides the view with the necessary details about its data. You can let the view access the document’s data members directly, or you can provide member functions in the document class for the view class to call.</p>
<p>
When a document’s data changes, the view responsible for the changes typically calls the <a href="_mfc_cdocument.3a3a.updateallviews.htm">CDocument::UpdateAllViews</a> function for the document, which notifies all the other views by calling the <b>OnUpdate</b> member function for each. The default implementation of <b>OnUpdate</b> invalidates the view’s entire client area. You can override it to invalidate only those regions of the client area that map to the modified portions of the document.</p>
<p>
To use <b>CView</b>, derive a class from it and implement the <b>OnDraw</b> member function to perform screen display. You can also use <b>OnDraw</b> to perform printing and print preview. The framework handles the print loop for printing and previewing your document.</p>
<p>
A view handles scroll-bar messages with the <a href="_mfc_cwnd.3a3a.onhscroll.htm">CWnd::OnHScroll</a> and <a href="_mfc_cwnd.3a3a.onvscroll.htm">CWnd::OnVScroll</a> member functions. You can implement scroll-bar message handling in these functions, or you can use the <b>CView</b> derived class <a href="_mfc_cscrollview.htm">CScrollView</a> to handle scrolling for you.</p>
<p>
Besides <b>CScrollView</b>, the Microsoft Foundation Class Library provides nine other classes derived from <b>CView</b>:
<ul type=disc>
<li>
<a href="_mfc_cctrlview.htm">CCtrlView</a>, a view that allows usage of document - view architecture with tree, list, and rich edit controls.<br><br></li>
<li>
<a href="_mfc_cdaorecordview.htm">CDaoRecordView</a>, a view that displays database records in dialog-box controls.<br><br></li>
<li>
<a href="_mfc_ceditview.htm">CEditView</a>, a view that provides a simple multiline text editor. You can use a <b>CEditView</b> object as a control in a dialog box as well as a view on a document.<br><br></li>
<li>
<a href="_mfc_cformview.htm">CFormView</a>, a scrollable view that contains dialog-box controls and is based on a dialog template resource.<br><br></li>
<li>
<a href="_mfc_clistview.htm">CListView</a>, a view that allows usage of document - view architecture with list controls.<br><br></li>
<li>
<a href="_mfc_crecordview.htm">CRecordView</a>, a view that displays database records in dialog-box controls.<br><br></li>
<li>
<a href="_mfc_cricheditview.htm">CRichEditView</a>, a view that allows usage of document - view architecture with rich edit controls.<br><br></li>
<li>
<a href="_mfc_cscrollview.htm">CScrollView</a>, a view that automatically provides scrolling support.<br><br></li>
<li>
<a href="_mfc_ctreeview.htm">CTreeView</a>, a view that allows usage of document - view architecture with tree controls.</li>
</ul>
<p>
The <b>CView</b> class also has a derived implementation class named <b>CPreviewView</b>, which is used by the framework to perform print previewing. This class provides support for the features unique to the print-preview window, such as a toolbar, single- or double-page preview, and zooming, that is, enlarging the previewed image. You don’t need to call or override any of <b>CPreviewView</b>’s member functions unless you want to implement your own interface for print preview&nbsp; (for example, if you want to support editing in print preview mode). For more information on using <b>CView</b>, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Document.2f.View_Architecture_Topics">
</object><a href=JavaScript:alink_1.Click()>Document/View Architecture Topics</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Printing">
</object><a href=JavaScript:alink_2.Click()>Printing</a> in <i>Visual C++ Programmer’s Guide</i>. In addition, see <a href="_mfcnotes_tn030.htm">Technical Note 30</a> for more details on customizing print preview. </p>
<p>
<b>#include &lt;afxwin.h&gt;</b></p>
<p>
<a href="_mfc_cview_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cwnd.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Samples</b>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_HELLO">
</object><a href=JavaScript:alink_3.Click()>MFC Sample HELLO</a>  |&nbsp; <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_MDIBIND">
</object><a href=JavaScript:alink_4.Click()>MFC Sample MDIBIND</a>  |&nbsp; <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_MDIDOCVW">
</object><a href=JavaScript:alink_5.Click()>MFC Sample MDIDOCVW</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cwnd.htm">CWnd</a>, <a href="_mfc_cframewnd.htm">CFrameWnd</a>, <a href="_mfc_csplitterwnd.htm">CSplitterWnd</a>, <a href="_mfc_cdc.htm">CDC</a>, <a href="_mfc_cdoctemplate.htm">CDocTemplate</a>, <a href="_mfc_cdocument.htm">CDocument</a></p>
</font></BODY>
</HTML>
