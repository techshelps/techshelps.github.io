<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COleControl::FireEvent</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_colecontrol.3a3a.fireevent"></a><sup></sup>COleControl::FireEvent</h1>
<p>
<b>void</b> <b>FireEvent(</b> <b>DISPID</b> <i>dispid</i><b>,</b> <b>BYTE</b> <b>FAR*</b> <i>pbParams</i><b>,</b> <b>...</b> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>dispid</i></p>
<p class=indent>
The dispatch ID of the event to be fired.</p>
<p class=dt>
<i>pbParams</i></p>
<p class=indent>
A descriptor for the event’s parameter types.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this function, with any number of optional arguments, to fire a user-defined event from your control. Usually this function should not be called directly. Instead you will call the event-firing functions generated by ClassWizard in the event map section of your control’s class declaration.</p>
<p>
The <i>pbParams</i> argument is a space-separated list of <b>VTS_</b>. One or more of these values, separated by spaces (not commas), specifies the function’s parameter list. Possible values are as follows:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=34%><b>Symbol</b></td>
<td class=label width=66%><b>Parameter Type</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_COLOR</b></td>
<td width=66%><b>OLE_COLOR</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_FONT</b></td>
<td width=66%><b>IFontDisp*</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_HANDLE</b></td>
<td width=66%><b>HWND</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_PICTURE</b></td>
<td width=66%><b>IPictureDisp*</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_OPTEXCLUSIVE</b></td>
<td width=66%><b>OLE_OPTEXCLUSIVE*</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_TRISTATE</b></td>
<td width=66%><b>OLE_TRISTATE</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_XPOS_HIMETRIC</b></td>
<td width=66%><b>OLE_XPOS_HIMETRIC</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_YPOS_HIMETRIC</b></td>
<td width=66%><b>OLE_YPOS_HIMETRIC</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_XPOS_PIXELS</b></td>
<td width=66%><b>OLE_XPOS_PIXELS</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_YPOS_PIXELS</b></td>
<td width=66%><b>OLE_YPOS_PIXELS</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_XSIZE_PIXELS</b></td>
<td width=66%><b>OLE_XSIZE_PIXELS</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_YSIZE_PIXELS</b></td>
<td width=66%><b>OLE_XSIZE_PIXELS</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_XSIZE_HIMETRIC</b></td>
<td width=66%><b>OLE_XSIZE_HIMETRIC</b></td>
</tr>
<tr valign=top>
<td width=34%><b>VTS_YSIZE_HIMETRIC</b></td>
<td width=66%><b>OLE_XSIZE_HIMETRIC</b></td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Additional variant constants have been defined for all variant types, with the exception of <b>VTS_FONT</b> and <b>VTS_PICTURE</b>, that provide a pointer to the variant data constant. These constants are named using the <b>VTS_P</b><i>constantname</i> convention. For example, <b>VTS_PCOLOR</b> is a pointer to a <b>VTS_COLOR</b> constant.</p>
<p>
<a href="_mfc_colecontrol.htm">COleControl Overview</a>  |&nbsp; <a href="_mfc_colecontrol_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
</font></BODY>
</HTML>
