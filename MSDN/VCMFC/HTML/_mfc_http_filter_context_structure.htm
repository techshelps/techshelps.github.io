<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HTTP_FILTER_CONTEXT Structure</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_http_filter_context_structure"></a>HTTP_FILTER_CONTEXT Structure</h1>
<p>
The <b>HTTP_FILTER_CONTEXT</b> structure has the following form:</p>
<pre><code>typedef struct _HTTP_FILTER_CONTEXT
{

DWORD&nbsp;&nbsp;&nbsp; cbSize;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //IN
DWORD&nbsp;&nbsp;&nbsp; Revision;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //IN
PVOID&nbsp;&nbsp;&nbsp; ServerContext;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //IN
DWORD&nbsp;&nbsp;&nbsp; ulReserved;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //IN
BOOL&nbsp;&nbsp;&nbsp;&nbsp; fIsSecurePort;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //IN
PVOID&nbsp;&nbsp;&nbsp; pFilterContext;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //IN/OUT

BOOL&nbsp;&nbsp;&nbsp; (WINAPI * GetServerVariable) (&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; struct _HTTP_FILTER_CONTEXT *&nbsp;&nbsp;&nbsp; pfc,
 &nbsp;&nbsp; LPSTR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lpszVariableName,
 &nbsp;&nbsp; LPVOID&nbsp;&nbsp;&nbsp;&nbsp; lpvBuffer,
 &nbsp;&nbsp; LPDWORD&nbsp;&nbsp;&nbsp; lpdwSize
 &nbsp;&nbsp; );&nbsp;&nbsp;&nbsp; 

BOOL&nbsp;&nbsp;&nbsp; (WINAPI * AddResponseHeaders) (&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; struct _HTTP_FILTER_CONTEXT *&nbsp;&nbsp;&nbsp; pfc,
 &nbsp;&nbsp; LPSTR&nbsp;&nbsp;&nbsp; lpszHeaders,
 &nbsp;&nbsp; DWORD&nbsp;&nbsp;&nbsp; dwReserved
 &nbsp;&nbsp; );&nbsp;&nbsp;&nbsp;&nbsp; 

BOOL&nbsp;&nbsp;&nbsp; (WINAPI * WriteClient)&nbsp; (&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; struct _HTTP_FILTER_CONTEXT *&nbsp;&nbsp;&nbsp; pfc,
 &nbsp;&nbsp; LPVOID&nbsp;&nbsp;&nbsp;&nbsp; Buffer,
 &nbsp;&nbsp; LPDWORD&nbsp;&nbsp;&nbsp; lpdwBytes,
 &nbsp;&nbsp; DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dwReserved
 &nbsp;&nbsp; );&nbsp;&nbsp;&nbsp;&nbsp; 

VOID *&nbsp;&nbsp;&nbsp;&nbsp; (WINAPI * AllocMem) (&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; struct _HTTP_FILTER_CONTEXT *&nbsp;&nbsp;&nbsp; pfc,
 &nbsp;&nbsp; DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cbSize,
 &nbsp;&nbsp; DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dwReserved
 &nbsp;&nbsp; );&nbsp;&nbsp;&nbsp; 

BOOL&nbsp;&nbsp;&nbsp; (WINAPI * ServerSupportFunction) (&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; struct _HTTP_FILTER_CONTEXT *&nbsp;&nbsp;&nbsp; pfc,
 &nbsp;&nbsp; enum SF_REQ_TYPE&nbsp;&nbsp;&nbsp; sfReq,
 &nbsp;&nbsp; PVOID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pData,
 &nbsp;&nbsp; DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ul1,
 &nbsp;&nbsp; DWORD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ul2
 &nbsp;&nbsp; );&nbsp;&nbsp;&nbsp;&nbsp; 

} HTTP_FILTER_CONTEXT, *PHTTP_FILTER_CONTEXT;
 
</code></pre>
<p>
The references to IN or IN/OUT above indicate whether the member applies to messages to the filter (IN) or both to and from the filter (IN/OUT). </p>
<p class=label>
<b>Members</b></p>
<p class=dt>
<b>cbSize</b></p>
<p class=indent>
Size of this structure, in bytes.</p>
<p class=dt>
<b>Revision</b></p>
<p class=indent>
&nbsp;Revision level of this structure. Less than or equal to the version of the&nbsp; <b>HTTP_FILTER_REVISION</b>.</p>
<p class=dt>
<b>ServerContext</b></p>
<p class=indent>
Reserved for server use.</p>
<p class=dt>
<b>ulReserved</b></p>
<p class=indent>
Reserved for server use.</p>
<p class=dt>
<b>fIsSecurePort</b></p>
<p class=indent>
<b>TRUE</b> indicates that this event is occurring over a secure port.</p>
<p class=dt>
<b>pFilterContext</b></p>
<p class=indent>
A pointer to be used by the filter for any context information that the filter wants to associate with this request. Any memory associated with this request can be safely freed during the <b>SF_NOTIFY_END_OF_NET_SESSION</b> notification.</p>
<p class=dt>
<b>GetServerVariable</b></p>
<p class=indent>
Pointer to a function to retrieve information about the server and this connection.&nbsp; See <a href="_mfc_chttpservercontext.3a3a.getservervariable.htm">CHttpServerContext::GetServerVariable</a> for details. <b>GetServerVariable</b> takes the following parameters:
<ul type=disc>
<li>
<i>pfc</i>&nbsp;&nbsp;&nbsp;Pointer to a filter context passed to <a href="_mfc_chttpfilter.3a3a.httpfilterproc.htm">CHttpFilter::HttpFilterProc</a>.<br><br></li>
<li>
<i>lpszVariableName</i>&nbsp;&nbsp;&nbsp;Server variable to retrieve.<br><br></li>
<li>
<i>lpvBuffer</i>&nbsp;&nbsp;&nbsp;Buffer to store value of variable.<br><br></li>
<li>
<i>lpdwSize</i>&nbsp;&nbsp;&nbsp;Size of buffer <i>lpvBuffer</i>.</li>
</ul>
<p class=dt>
<b>AddResponseHeaders</b></p>
<p class=indent>
Pointer to a function that adds a header to the HTTP response. See the description of <b>HSE_REQ_SEND_RESPONSE_HEADER</b> at <a href="_mfc_chttpservercontext.3a3a.serversupportfunction.htm">CHttpServerContext::ServerSupportFunction</a> for details. <b>AddResponseHeaders</b> takes the following parameters:
<ul type=disc>
<li>
<i>pfc</i>&nbsp;&nbsp;&nbsp;Pointer to a filter context passed to <b>CHttpFilter::HttpFilterProc</b>.<br><br></li>
<li>
<i>lpszHeaders</i>&nbsp;&nbsp;&nbsp;Pointer string containing headers to add.<br><br></li>
<li>
<i>dwReserved</i>&nbsp;&nbsp;&nbsp;Reserved for future use. Must be 0.</li>
</ul>
<p class=dt>
<b>WriteClient</b></p>
<p class=indent>
Pointer to a function that sends raw data back to the client. See <a href="_mfc_chttpfiltercontext.3a3a.writeclient.htm">CHttpFilterContext::WriteClient</a> for details. <b>WriteClient</b> takes the following parameters:
<ul type=disc>
<li>
<i>pfc</i>&nbsp;&nbsp;&nbsp;Pointer passed to <b>CHttpFilter::HttpFilterProc</b>.<br><br></li>
<li>
<i>Buffer</i>&nbsp;&nbsp;&nbsp;Buffer containing data to send to the client.<br><br></li>
<li>
<i>lpdwBytes</i>&nbsp;&nbsp;&nbsp;Size of the buffer pointed to by <i>Buffer</i>.<br><br></li>
<li>
<i>dwReserved</i>&nbsp;&nbsp;&nbsp;Reserved for future use.</li>
</ul>
<p class=dt>
<b>AllocMem</b></p>
<p class=indent>
Pointer to a function used to allocate memory. Any memory allocated with this function will automatically be freed when the request is completed. <b>AllocMem</b> takes the following parameters:
<ul type=disc>
<li>
<i>pfc</i>&nbsp;&nbsp;&nbsp;Pointer passed to <b>CHttpFilter::HttpFilterProc</b>.<br><br></li>
<li>
<i>cbSize</i>&nbsp;&nbsp;&nbsp;Size of the buffer to allocate.<br><br></li>
<li>
<i>dwReserved</i>&nbsp;&nbsp;&nbsp;Reserved for future use.</li>
</ul>
<p class=dt>
<b>ServerSupportFunction</b></p>
<p class=indent>
Pointer to a function used to extend the ISAPI filter APIs. Parameters, listed below, are specific to the ISA used.
<ul type=disc>
<li>
<i>pfc</i>&nbsp;&nbsp;&nbsp;Pointer to a function used to extend the ISAPI filter APIs.<br><br></li>
<li>
<i>sfReq</i>&nbsp;&nbsp;&nbsp;Server function notification. Possible values:<p class=tl>
<b>SF_REQ_SEND_RESPONSE_HEADER</b>&nbsp;&nbsp;&nbsp;Sends a complete HTTP server response header including the status, server version, message time and MIME version.&nbsp; Server extensions should append other information at the end, such as Content-type, Content-length, and so forth, followed by an extra '\r\n'.</P><p class=tl>
<b>SF_REQ_ADD_HEADERS_ON_DENIAL</b>&nbsp;&nbsp;&nbsp;If the server denies the HTTP request, add the specified headers to the server error response. This allows an authentication filter to advertise its services without filtering every request. Generally the headers will be WWW-Authenticate headers with custom authentication schemes, but no restriction is placed on what headers may be specified.</P><p class=tl>
<b>SF_REQ_SET_NEXT_READ_SIZE</b>&nbsp;&nbsp;&nbsp;Only used by raw data filters that return <b>SF_STATUS_READ_NEXT</b>.</P></li>
<li>
<i>pData</i>&nbsp;&nbsp;&nbsp;Pointer to a string. Specific to the ISA. See the table under the <b>Comments</b> section for the appropriate values for each <b>sfReq</b> value.<br><br></li>
<li>
<i>ul1, ul2</i>&nbsp;&nbsp;&nbsp;Specific to the ISA. See the table under the <b>Comments</b> section for the appropriate values for each <b>sfReq</b> value.</li>
</ul>
<p class=label>
<b>Comments</b></p>
<p>
Below are the corresponding possible values for the <b>ServerSupportFunction</b> parameters:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=46%><b><i>sfReq</i></b></td>
<td class=label width=30%><b><i>pData</i></b></td>
<td class=label width=24%><b><i>ul1, ul2</i></b></td>
</tr>
<tr valign=top>
<td width=46%><b>SF_REQ_SEND_RESPONSE_HEADER</b></td>
<td width=30%>Zero-terminated string pointing to optional status string (i.e., "401 Access Denied") or NULL for the default response of "200 OK".</td>
<td width=24%>Zero-terminated string pointing to optional data to be appended and set with the header. If NULL, the header will be terminated with an empty line.</td>
</tr>
<tr valign=top>
<td width=46%><b>SF_REQ_ADD_HEADERS_ON_DENIAL</b></td>
<td width=30%>Zero-terminated string pointing to one or more header lines with terminating '\r\n'.</td>
<td width=24%></td>
</tr>
<tr valign=top>
<td width=46%><b>SF_REQ_SET_NEXT_READ_SIZE</b></td>
<td width=30%></td>
<td width=24%>Size in bytes for the next read.</td>
</tr>
</table><br>
<p>
<b>See Also</b>  <a href="_mfc_chttpfilter.3a3a.httpfilterproc.htm">CHttpFilter::HttpFilterProc</a>, <a href="_mfc_chttpfilter.3a3a.onlog.htm">CHttpFilter::OnLog</a>, <a href="_mfc_chttpservercontext.htm">CHttpServerContext</a>, <a href="_mfc_chttpservercontext.3a3a.getservervariable.htm">CHttpServerContext::GetServerVariable</a>, <a href="_mfc_chttpservercontext.3a3a.serversupportfunction.htm">CHttpServerContext::ServerSupportFunction</a>, <a href="_mfc_chttpservercontext.3a3a.writeclient.htm">CHttpServerContext::WriteClient</a></p>
</font></BODY>
</HTML>
