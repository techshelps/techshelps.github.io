<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CSocket::CancelBlockingCall</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_csocket.3a3a.cancelblockingcall"></a><sup></sup>CSocket::CancelBlockingCall</h1>
<p>
<b>void</b> <b>CancelBlockingCall(</b> <b>)</b>;</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to cancel a blocking call currently in progress. This function cancels any outstanding blocking operation for this socket. The original blocking call will terminate as soon as possible with the error <b>WSAEINTR</b>. </p>
<p>
In the case of a blocking <b>Connect</b> operation, the Windows Sockets implementation will terminate the blocking call as soon as possible, but it may not be possible for the socket resources to be released until the connection has completed (and then been reset) or timed out. This is likely to be noticeable only if the application immediately tries to open a new socket (if no sockets are available), or to connect to the same peer. </p>
<p>
Canceling any operation other than <b>Accept</b> can leave the socket in an indeterminate state. If an application cancels a blocking operation on a socket, the only operation that the application can depend on being able to perform on the socket is a call to <b>Close</b>, although other operations may work on some Windows Sockets implementations. If you desire maximum portability for your application, you must be careful not to depend on performing operations after a cancel.</p>
<p>
For more information, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Windows_Sockets.3a_.Using_Sockets_with_Archives">
</object><a href=JavaScript:alink_1.Click()>Windows Sockets: Using Sockets with Archives</a> and related articles in <i>Visual C++ Programmer’s Guide</i>. Also see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_Windows_Sockets_Programming_Considerations_2">
</object><a href=JavaScript:alink_2.Click()>Windows Sockets Programming Considerations</a> in the Win32 SDK documentation.</p>
<p>
<a href="_mfc_csocket.htm">CSocket Overview</a>  |&nbsp; <a href="_mfc_csocket_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_casyncsocket.3a3a.accept.htm">CAsyncSocket::Accept</a>, <a href="_mfc_casyncsocket.3a3a.close.htm">CAsyncSocket::Close</a>, <a href="_mfc_casyncsocket.3a3a.connect.htm">CAsyncSocket::Connect</a>, <a href="_mfc_csocket.3a3a.isblocking.htm">CSocket::IsBlocking</a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_WSASetBlockingHook_2">
</object><a href=JavaScript:alink_3.Click()>::WSASetBlockingHook</a></p>
</font></BODY>
</HTML>
