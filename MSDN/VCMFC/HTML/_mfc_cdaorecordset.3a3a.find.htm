<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDaoRecordset::Find</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdaorecordset.3a3a.find"></a>CDaoRecordset::Find</h1>
<p>
<b>virtual BOOL Find( long </b><i>lFindType</i><b>, LPCTSTR</b> <i>lpszFilter</i> <b>);</b><br>
<b>throw( CDaoException, CMemoryException );</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if matching records are found, otherwise 0.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>lFindType</i></p>
<p class=indent>
A value indicating the type of Find operation desired. The possible values are:
<ul type=disc>
<li>
<b>AFX_DAO_NEXT</b>&nbsp;&nbsp;&nbsp;Find the next location of a matching string.<br><br></li>
<li>
<b>AFX_DAO_PREV</b>&nbsp;&nbsp;&nbsp;Find the previous location of a matching string.<br><br></li>
<li>
<b>AFX_DAO_FIRST</b>&nbsp;&nbsp;&nbsp;Find the first location of a matching string.<br><br></li>
<li>
<b>AFX_DAO_LAST</b>&nbsp;&nbsp;&nbsp;Find the last location of a matching string.</li>
</ul>
<p class=dt>
<i>lpszFilter</i></p>
<p class=indent>
A string expression (like the <b>WHERE</b> clause in an SQL statement without the word <b>WHERE</b>) used to locate the record. For example:</p>
<pre><code>Find(AFX_DAO_FIRST, "colRecID = 7")
Find(AFX_DAO_NEXT, "customerName = 'Jones'")
</code></pre>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to locate a particular string in a dynaset- or snapshot-type recordset using a comparison operator. You can find the first, next, previous, or last instance of the string. <b>Find</b> is a virtual function, so you can override it and add your own implementation. The <b>FindFirst</b>, <b>FindLast</b>, <b>FindNext</b>, and <b>FindPrev</b> member functions call the <b>Find</b> member function, so you can use <b>Find</b> to control the behavior of all Find operations.</p>
<p>
To locate a record in a table-type recordset, call the <a href="_mfc_cdaorecordset.3a3a.seek.htm">Seek</a> member function.</p>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;The smaller the set of records you have, the more effective <b>Find</b> will be. In general, and especally with ODBC data, it is better to create a new query that retrieves just the records you want.</p>
<p>
For more information about finding records, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Recordset.3a_.Recordset_Navigation">
</object><a href=JavaScript:alink_1.Click()>DAO Recordset: Recordset Navigation</a> in <i>Visual C++ Programmer's Guide</i>. For related information, see the topic "FindFirst, FindLast, FindNext, FindPrevious Methods" in DAO Help.</p>
<p>
<a href="_mfc_cdaorecordset.htm">CDaoRecordset Overview</a>  |&nbsp; <a href="_mfc_cdaorecordset_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdaorecordset.3a3a.findfirst.htm">CDaoRecordset::FindFirst</a>, <a href="_mfc_cdaorecordset.3a3a.findlast.htm">CDaoRecordset::FindLast</a>, <a href="_mfc_cdaorecordset.3a3a.findnext.htm">CDaoRecordset::FindNext</a>, <a href="_mfc_cdaorecordset.3a3a.findprev.htm">CDaoRecordset::FindPrev</a></p>
</font></BODY>
</HTML>
