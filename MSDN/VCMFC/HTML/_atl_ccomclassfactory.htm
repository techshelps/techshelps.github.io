<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CComClassFactory</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_ccomclassfactory"></a>CComClassFactory</h1>
<p>
<b>class CComClassFactory : public IClassFactory, <br>
public CComObjectRootEx&lt; CComGlobalsThreadModel &gt;</b></p>
<p>
<b>CComClassFactory</b> implements the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_com_IClassFactory">
</object><a href=JavaScript:alink_1.Click()>IClassFactory</a> interface, which contains methods for creating an object of a particular CLSID, as well as locking the class factory in memory to allow new objects to be created more quickly. <b>IClassFactory</b> must be implemented for every class that you register in the system registry and to which you assign a CLSID. </p>
<p>
ATL objects normally acquire a class factory by deriving from <a href="_atl_ccomcoclass.htm">CComCoClass</a>. This class includes the macro <a href="_atl_declare_classfactory.htm">DECLARE_CLASSFACTORY</a>, which declares <b>CComClassFactory</b> as the default class factory. To<i> </i>override this default, specify one of the <b>DECLARE_CLASSFACTORY</b><i>XXX</i> macros in your class definition. For example, the <a href="_atl_declare_classfactory_ex.htm">DECLARE_CLASSFACTORY_EX</a> macro uses the specified class for the class factory:</p>
<pre><code>class CMyClass : ..., public CComCoClass&lt; ... &gt;
{
public:
 &nbsp; DECLARE_CLASSFACTORY_EX(CMyClassFactory)

 &nbsp; ...
};
</code></pre>
<p>
The above class definition specifies that <b>CMyClassFactory</b> will be used as the object's default class factory. <b>CMyClassFactory</b> must derive from <b>CComClassFactory</b> and override <b>CreateInstance</b>.</p>
<p>
ATL provides three other macros that declare a class factory:
<ul type=disc>
<li>
<a href="_atl_declare_classfactory2.htm">DECLARE_CLASSFACTORY2</a>&nbsp;&nbsp;&nbsp;Uses <a href="_atl_ccomclassfactory2.htm">CComClassFactory2</a>, which controls creation through a license.<br><br></li>
<li>
<a href="_atl_declare_classfactory_auto_thread.htm">DECLARE_CLASSFACTORY_AUTO_THREAD</a>&nbsp;&nbsp;&nbsp;Uses <a href="_atl_ccomclassfactoryautothread.htm">CComClassFactoryAutoThread</a>, which creates objects in multiple apartments.<br><br></li>
<li>
<a href="_atl_declare_classfactory_singleton.htm">DECLARE_CLASSFACTORY_SINGLETON</a>&nbsp;&nbsp;&nbsp;Uses <a href="_atl_ccomclassfactorysingleton.htm">CComClassFactorySingleton</a>, which constructs a single <a href="_atl_ccomobjectglobal.htm">CComObjectGlobal</a> object.</li>
</ul>
<p>
<b>#include &lt;atlcom.h&gt;</b></p>
<p>
<a href="_atl_ccomclassfactory_class_members.htm">Class Members</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_atl_ccomobjectrootex.htm">CComObjectRootEx</a>, <a href="_atl_ccomglobalsthreadmodel.htm">CComGlobalsThreadModel</a></p>
</font></BODY>
</HTML>
