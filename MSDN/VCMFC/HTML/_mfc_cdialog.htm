<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDialog</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdialog"></a><sup></sup>CDialog</h1>
<p>
<img src="cdialog.gif" border=0></p>
<p>
The <b>CDialog</b> class is the base class used for displaying dialog boxes on the screen. Dialog boxes are of two types: modal and modeless. A modal dialog box must be closed by the user before the application continues. A modeless dialog box allows the user to display the dialog box and return to another task without canceling or removing the dialog box.</p>
<p>
A <b>CDialog</b> object is a combination of a dialog template and a <b>CDialog</b>-derived class. Use the dialog editor to create the dialog template and store it in a resource, then use ClassWizard to create a class derived from <b>CDialog</b>. </p>
<p>
A dialog box, like any other window, receives messages from Windows. In a dialog box, you are particularly interested in handling notification messages from the dialog box’s controls since that is how the user interacts with your dialog box. ClassWizard browses through the potential messages generated by each control in your dialog box, and you can select which messages you wish to handle. ClassWizard then adds the appropriate message-map entries and message-handler member functions to the new class for you. You only need to write application-specific code in the handler member functions.</p>
<p>
If you prefer, you can always write message-map entries and member functions yourself instead of using ClassWizard.</p>
<p>
In all but the most trivial dialog box, you add member variables to your derived dialog class to store data entered in the dialog box’s controls by the user or to display data for the user. ClassWizard browses through those controls in your dialog box that can be mapped to data and prompts you to create a member variable for each control. At the same time, you choose a variable type and permissible range of values for each variable. ClassWizard adds the member variables to your derived dialog class. </p>
<p>
ClassWizard then writes a data map to automatically handle the exchange of data between the member variables and the dialog box’s controls. The data map provides functions that initialize the controls in the dialog box with the proper values, retrieve the data, and validate the data.</p>
<p>
To create a modal dialog box, construct an object on the stack using the constructor for your derived dialog class and then call <b>DoModal</b> to create the dialog window and its controls. If you wish to create a modeless dialog, call <b>Create</b> in the constructor of your dialog class.</p>
<p>
You can also create a template in memory by using a <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_DLGTEMPLATE_str">
</object><a href=JavaScript:alink_1.Click()>DLGTEMPLATE</a> data structure as described in the Win32 SDK documentation. After you construct a <b>CDialog</b> object, call <a href="_mfc_cdialog.3a3a.createindirect.htm">CreateIndirect</a> to create a modeless dialog box, or call <a href="_mfc_cdialog.3a3a.initmodalindirect.htm">InitModalIndirect</a> and <a href="_mfc_cdialog.3a3a.domodal.htm">DoModal</a> to create a modal dialog box.</p>
<p>
ClassWizard writes the exchange and validation data map in an override of <b>CWnd::DoDataExchange</b> that ClassWizard adds to your new dialog class. See the <a href="_mfc_cwnd.3a3a.dodataexchange.htm">DoDataExchange</a> member function in <b>CWnd</b> for more on the exchange and validation functionality.</p>
<p>
Both the programmer and the framework call <b>DoDataExchange</b> indirectly through a call to <a href="_mfc_cwnd.3a3a.updatedata.htm">CWnd::UpdateData</a>.</p>
<p>
The framework calls <b>UpdateData</b> when the user clicks the OK button to close a modal dialog box. (The data is not retrieved if the Cancel button is clicked.) The default implementation of <a href="_mfc_cdialog.3a3a.oninitdialog.htm">OnInitDialog</a> also calls <b>UpdateData</b> to set the initial values of the controls. You typically override <b>OnInitDialog</b> to further initialize controls. <b>OnInitDialog</b> is called after all the dialog controls are created and just before the dialog box is displayed.</p>
<p>
You can call <b>CWnd::UpdateData</b> at any time during the execution of a modal or modeless dialog box.</p>
<p>
If you develop a dialog box by hand, you add the necessary member variables to the derived dialog-box class yourself, and you add member functions to set or get these values.</p>
<p>
For more on ClassWizard, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="classwiz">
</object><a href=JavaScript:alink_2.Click()>Using ClassWizard</a> in the <i>Visual C++ Programmer's Guide</i>.</p>
<p>
Call <a href="_mfc_cwinapp.3a3a.setdialogbkcolor.htm">CWinApp::SetDialogBkColor</a> to set the background color for dialog boxes in your application.</p>
<p>
A modal dialog box closes automatically when the user presses the OK or Cancel buttons or when your code calls the <b>EndDialog</b> member function.</p>
<p>
When you implement a modeless dialog box, always override the <b>OnCancel</b> member function and call <b>DestroyWindow</b> from within it. Don’t call the base class <b>CDialog::OnCancel</b>, because it calls <b>EndDialog</b>, which will make the dialog box invisible but will not destroy it. You should also override <b>PostNcDestroy</b> for modeless dialog boxes in order to delete <b>this</b>, since modeless dialog boxes are usually allocated with <b>new</b>. Modal dialog boxes are usually constructed on the frame and do not need <b>PostNcDestroy</b> cleanup.</p>
<p>
For more information on <b>CDialog</b>, see the article <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Dialog_Box_Topics">
</object><a href=JavaScript:alink_3.Click()>Dialog Box Topics</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
<b>#include &lt;afxwin.h&gt;</b></p>
<p>
<a href="_mfc_cdialog_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cwnd.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Samples</b>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DBFETCH">
</object><a href=JavaScript:alink_4.Click()>MFC Sample DBFETCH</a>  |&nbsp; <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DLGCBR32">
</object><a href=JavaScript:alink_5.Click()>MFC Sample DLGCBR32</a>  |&nbsp; <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DLGTEMPL">
</object><a href=JavaScript:alink_6.Click()>MFC Sample DLGTEMPL</a>  |&nbsp; <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_EXTBIND">
</object><a href=JavaScript:alink_7.Click()>MFC Sample EXTBIND</a>  |&nbsp; <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_FTPTREE">
</object><a href=JavaScript:alink_8.Click()>MFC Sample FTPTREE</a>  |&nbsp; <object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_HELLO">
</object><a href=JavaScript:alink_9.Click()>MFC Sample HELLO</a>  |&nbsp; <object id=alink_10 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_MDIBIND">
</object><a href=JavaScript:alink_10.Click()>MFC Sample MDIBIND</a>  |&nbsp; <object id=alink_11 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_VCTERM">
</object><a href=JavaScript:alink_11.Click()>MFC Sample VCTERM</a> </p>
</font></BODY>
</HTML>
