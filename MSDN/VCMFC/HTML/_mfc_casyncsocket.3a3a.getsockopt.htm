<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CAsyncSocket::GetSockOpt</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_casyncsocket.3a3a.getsockopt"></a><sup></sup>CAsyncSocket::GetSockOpt</h1>
<p>
<b>BOOL</b> <b>GetSockOpt(</b> <b>int</b> <i>nOptionName</i><b>,</b> <b>void*</b> <i>lpOptionValue</i><b>,</b> <b>int*</b> <i>lpOptionLen</i><b>,</b> <b>int</b> <i>nLevel</i> <b>=</b> <b>SOL_SOCKET</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if the function is successful; otherwise 0, and a specific error code can be retrieved by calling <a href="_mfc_casyncsocket.3a3a.getlasterror.htm">GetLastError</a>. If an option was never set with <b>SetSockOpt</b>, then <b>GetSockOpt</b> returns the default value for the option. The following errors apply to this member function:
<ul type=disc>
<li>
<b>WSANOTINITIALISED</b>&nbsp;&nbsp;&nbsp;A successful <a href="_mfc_afxsocketinit.htm">AfxSocketInit</a> must occur before using this API.<br><br></li>
<li>
<b>WSAENETDOWN</b>&nbsp;&nbsp;&nbsp;The Windows Sockets implementation detected that the network subsystem failed.<br><br></li>
<li>
<b>WSAEFAULT</b>&nbsp;&nbsp;&nbsp;The <i>lpOptionLen</i> argument was invalid.<br><br></li>
<li>
<b>WSAEINPROGRESS</b>&nbsp;&nbsp;&nbsp;A blocking Windows Sockets operation is in progress.<br><br></li>
<li>
<b>WSAENOPROTOOPT</b>&nbsp;&nbsp;&nbsp;The option is unknown or unsupported. In particular, <b>SO_BROADCAST</b> is not supported on sockets of type <b>SOCK_STREAM</b>, while <b>SO_ACCEPTCONN</b>, <b>SO_DONTLINGER</b>, <b>SO_KEEPALIVE</b>, <b>SO_LINGER</b>, and <b>SO_OOBINLINE</b> are not supported on sockets of type <b>SOCK_DGRAM</b>.<br><br></li>
<li>
<b>WSAENOTSOCK</b>&nbsp;&nbsp;&nbsp;The descriptor is not a socket.</li>
</ul>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nOptionName</i></p>
<p class=indent>
The socket option for which the value is to be retrieved.</p>
<p class=dt>
<i>lpOptionValue</i></p>
<p class=indent>
A pointer to the buffer in which the value for the requested option is to be returned. The value associated with the selected option is returned in the buffer <i>lpOptionValue</i>. The integer pointed to by <i>lpOptionLen</i> should originally contain the size of this buffer in bytes; and on return, it will be set to the size of the value returned. For <b>SO_LINGER</b>, this will be the size of a <b>LINGER</b> structure; for all other options it will be the size of a <b>BOOL</b> or an <b>int</b>, depending on the option. See the list of options and their sizes in the Remarks section. </p>
<p class=dt>
<i>lpOptionLen</i></p>
<p class=indent>
A pointer to the size of the <i>lpOptionValue</i> buffer in bytes.</p>
<p class=dt>
<i>nLevel</i></p>
<p class=indent>
The level at which the option is defined; the only supported levels are <b>SOL_SOCKET</b> and <b>IPPROTO_TCP</b>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to retrieve a socket option. <b>GetSockOpt</b> retrieves the current value for a socket option associated with a socket of any type, in any state, and stores the result in <i>lpOptionValue</i>. Options affect socket operations, such as the routing of packets, out-of-band data transfer, and so on.</p>
<p>
The following options are supported for <b>GetSockOpt</b>. The Type identifies the type of data addressed by <i>lpOptionValue</i>. The <b>TCP_NODELAY</b> option uses level <b>IPPROTO_TCP</b>; all other options use level <b>SOL_SOCKET</b>.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Value</b></td>
<td class=label width=22%><b>Type</b></td>
<td class=label width=47%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=31%><b>SO_ACCEPTCONN</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>Socket is listening.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_BROADCAST</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>Socket is configured for the transmission of broadcast messages.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_DEBUG</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>Debugging is enabled. </td>
</tr>
<tr valign=top>
<td width=31%><b>SO_DONTLINGER</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>If true, the <b>SO_LINGER</b> option is disabled.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_DONTROUTE</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>Routing is disabled.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_ERROR</b></td>
<td width=22%><b>int</b></td>
<td width=47%>Retrieve error status and clear.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_KEEPALIVE</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>Keep-alives are being sent.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_LINGER</b></td>
<td width=22%><b>struct LINGER</b></td>
<td width=47%>Returns the current linger options.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_OOBINLINE</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>Out-of-band data is being received in the normal data stream.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_RCVBUF</b></td>
<td width=22%><b>int</b></td>
<td width=47%>Buffer size for receives.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_REUSEADDR</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>The socket can be bound to an address which is already in use.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_SNDBUF</b></td>
<td width=22%><b>int</b></td>
<td width=47%>Buffer size for sends.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_TYPE</b></td>
<td width=22%><b>int</b></td>
<td width=47%>The type of the socket (for example, <b>SOCK_STREAM</b>).</td>
</tr>
<tr valign=top>
<td width=31%><b>TCP_NODELAY</b></td>
<td width=22%><b>BOOL</b></td>
<td width=47%>Disables the Nagle algorithm for send coalescing.</td>
</tr>
</table><br>
<p>
Berkeley Software Distribution (BSD) options not supported for <b>GetSockOpt</b> are:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Value</b></td>
<td class=label width=22%><b>Type</b></td>
<td class=label width=47%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=31%><b>SO_RCVLOWAT</b></td>
<td width=22%><b>int</b></td>
<td width=47%>Receive low water mark.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_RCVTIMEO</b></td>
<td width=22%><b>int</b></td>
<td width=47%>Receive timeout.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_SNDLOWAT</b></td>
<td width=22%><b>int</b></td>
<td width=47%>Send low water mark.</td>
</tr>
<tr valign=top>
<td width=31%><b>SO_SNDTIMEO</b></td>
<td width=22%><b>int</b></td>
<td width=47%>Send timeout.</td>
</tr>
<tr valign=top>
<td width=31%><b>IP_OPTIONS</b></td>
<td width=22%></td>
<td width=47%>Get options in IP header.</td>
</tr>
<tr valign=top>
<td width=31%><b>TCP_MAXSEG</b></td>
<td width=22%><b>int</b></td>
<td width=47%>Get TCP maximum segment size.</td>
</tr>
</table><br>
<p>
Calling <b>GetSockOpt</b> with an unsupported option will result in an error code of <b>WSAENOPROTOOPT</b> being returned from <b>GetLastError</b>.</p>
<p>
<a href="_mfc_casyncsocket.htm">CAsyncSocket Overview</a>  |&nbsp; <a href="_mfc_casyncsocket_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_casyncsocket.3a3a.setsockopt.htm">CAsyncSocket::SetSockOpt</a></p>
</font></BODY>
</HTML>
