<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CString</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cstring"></a>CString</h1>
<p>
<b>CString</b> does not have a base class.</p>
<p>
A <b>CString</b> object consists of a variable-length sequence of characters. <b>CString</b> provides functions and operators using a syntax similar to that of Basic. Concatenation and comparison operators, together with simplified memory management, make <b>CString</b> objects easier to use than ordinary character arrays. </p>
<p>
<b>CString</b> is based on the <b>TCHAR</b> data type. If the symbol <b>_UNICODE</b> is defined for your program, <b>TCHAR</b> is defined as type <b>wchar_t</b>, a 16-bit character type; otherwise, it is defined as <b>char</b>, the normal 8-bit character type. Under Unicode, then, <b>CString</b> objects are composed of 16-bit characters. Without Unicode, they are composed of 8-bit <b>char</b> type.</p>
<p>
When not using <b>_UNICODE</b>, <b>CString </b>is enabled for multibyte character sets (MBCS, also known as double-byte character sets, DBCS). Note that for MBCS strings, <b>CString</b> still counts, returns, and manipulates strings based on 8-bit characters, and your application must interpret MBCS lead and trail bytes itself.</p>
<p>
<b>CString</b> objects also have the following characteristics:
<ul type=disc>
<li>
<b>CString</b> objects can grow as a result of concatenation operations.<br><br></li>
<li>
<b>CString</b> objects follow “value semantics.” Think of a <b>CString</b> object as an actual string, not as a pointer to a string. <br><br></li>
<li>
You can freely substitute <b>CString</b> objects for <b>const char*</b> and <b>LPCTSTR</b> function arguments.<br><br></li>
<li>
A conversion operator gives direct access to the string’s characters as a read-only array of characters (a C-style string).</li>
</ul>
<p class=indent>
<B><b>Tip</b></B>&nbsp;&nbsp;&nbsp;Where possible, allocate <b>CString</b> objects on the frame rather than on the heap. This saves memory and simplifies parameter passing.</p>
<p>
<b>CString</b> assists you in conserving memory space by allowing two strings sharing the same value also to share the same buffer space.&nbsp; However, if you attempt to change the contents of the buffer directly (not using MFC), you can alter both strings unintentionally. <b>CString</b> provides two member functions, <a href="_mfc_cstring.3a3a.lockbuffer.htm">CString::LockBuffer</a> and <a href="_mfc_cstring.3a3a.unlockbuffer.htm">CString::UnlockBuffer</a>, to help you protect your data.&nbsp; When you call <b>LockBuffer</b>, you create a copy of a string, then set the reference count to -1, which "locks" the buffer. While the buffer is locked, no other string can reference the data in that string, and the locked string will not reference another string. By locking the string in the buffer, you ensure that the string’s exclusive hold on the data will remain intact. When you have finished with the data, call <b>UnlockBuffer</b> to reset the reference count to 1.</p>
<p>
For more information, see the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Strings_in_MFC">
</object><a href=JavaScript:alink_1.Click()>Strings in MFC</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Strings.3a_.Unicode_and_Multibyte_Character_Set_.28.MBCS.29_.Support">
</object><a href=JavaScript:alink_2.Click()>Strings: Unicode and Multibyte Character Set (MBCS) Support</a> articles in <i>Visual C++ Programmer’s Guide</i> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_CRT_String_Manipulation">
</object><a href=JavaScript:alink_3.Click()>String Manipulation Routines</a> in the <i>Run-Time Library Reference</i>.</p>
<p>
<b>#include &lt;afx.h&gt;</b></p>
<p>
<a href="_mfc_cstring_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Sample</b>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_HELLO">
</object><a href=JavaScript:alink_4.Click()>MFC Sample HELLO</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;In <i>Visual C++ Programmer’s Guide</i>: <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Strings.3a_.Basic_CString_Operations">
</object><a href=JavaScript:alink_5.Click()>Strings: Basic CString Operations</a>, <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Strings.3a_.CString_Semantics">
</object><a href=JavaScript:alink_6.Click()>Strings: CString Semantics</a>, <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Strings.3a_.CString_Operations_Relating_to_C.2d.Style_Strings">
</object><a href=JavaScript:alink_7.Click()>Strings: CString Operations Relating to C-Style Strings</a>, <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Strings.3a_.CString_Exception_Cleanup">
</object><a href=JavaScript:alink_8.Click()>Strings: CString Exception Cleanup</a>, <object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Strings.3a_.CString_Argument_Passing">
</object><a href=JavaScript:alink_9.Click()>Strings: CString Argument Passing</a></p>
</font></BODY>
</HTML>
