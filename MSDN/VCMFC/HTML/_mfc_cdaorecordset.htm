<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDaoRecordset</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdaorecordset"></a>CDaoRecordset</h1>
<p>
<img src="cdrecset.gif" border=0></p>
<p>
A <b>CDaoRecordset</b> object represents a set of records selected from a data source. Known as “recordsets,” <b>CDaoRecordset</b> objects are available in the following three forms:
<ul type=disc>
<li>
Table-type recordsets represent a base table that you can use to examine, add, change, or delete records from a single database table.<br><br></li>
<li>
Dynaset-type recordsets are the result of a query that can have updatable records. These recordsets are a set of records that you can use to examine, add, change, or delete records from an underlying database table or tables. Dynaset-type recordsets can contain fields from one or more tables in a database.<br><br></li>
<li>
Snapshot-type recordsets are a static copy of a set of records that you can use to find data or generate reports. These recordsets can contain fields from one or more tables in a database but cannot be updated.</li>
</ul>
<p>
Each form of recordset represents a set of records fixed at the time the recordset is opened. When you scroll to a record in a table-type recordset or a dynaset-type recordset, it reflects changes made to the record after the recordset is opened, either by other users or by other recordsets in your application. (A snapshot-type recordset cannot be updated.) You can use <b>CDaoRecordset</b> directly or derive an application-specific recordset class from <b>CDaoRecordset</b>. You can then:
<ul type=disc>
<li>
Scroll through the records.<br><br></li>
<li>
Set an index and quickly look for records using <a href="_mfc_cdaorecordset.3a3a.seek.htm">Seek</a> (table-type recordsets only).<br><br></li>
<li>
Find records based on a string comparison: "&lt;", "&lt;=", "=", "&gt;=", or "&gt;" (dynaset-type and snapshot-type recordsets).<br><br></li>
<li>
Update the records and specify a locking mode (except snapshot-type recordsets).<br><br></li>
<li>
Filter the recordset to constrain which records it selects from those available on the data source.<br><br></li>
<li>
Sort the recordset.<br><br></li>
<li>
Parameterize the recordset to customize its selection with information not known until run time.</li>
</ul>
<p>
Class <b>CDaoRecordset</b> supplies an interface similar to that of class <b>CRecordset</b>. The main difference is that class <b>CDaoRecordset</b> accesses data through a Data Access Object (DAO) based on OLE. Class <b>CRecordset</b> accesses the DBMS through Open Database Connectivity (ODBC) and an ODBC driver for that DBMS. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The DAO database classes are distinct from the MFC database classes based on Open Database Connectivity (ODBC). All DAO database class names have the “CDao” prefix. You can still access ODBC data sources with the DAO classes; the DAO classes generally offer superior capabilities because they are specific to the Microsoft Jet database engine.</p>
<p>
You can either use <b>CDaoRecordset</b> directly or derive a class from <b>CDaoRecordset</b>. To use a recordset class in either case, open a database and construct a recordset object, passing the constructor a pointer to your <b>CDaoDatabase</b> object. You can also construct a <b>CDaoRecordset</b> object and let MFC create a temporary <b>CDaoDatabase</b> object for you. Then call the recordset’s <a href="_mfc_cdaorecordset.3a3a.open.htm">Open</a> member function, specifying whether the object is a table-type recordset, a dynaset-type recordset, or a snapshot-type recordset. Calling <b>Open</b> selects data from the database and retrieves the first record.</p>
<p>
Use the object’s member functions and data members to scroll through the records and operate on them. The operations available depend on whether the object is a table-type recordset, a dynaset-type recordset, or a snapshot-type recordset, and whether it is updatable or read-only — this depends on the capability of the database or Open Database Connectivity (ODBC) data source. To refresh records that may have been changed or added since the <b>Open</b> call, call the object’s <a href="_mfc_cdaorecordset.3a3a.requery.htm">Requery</a> member function. Call the object’s <b>Close</b> member function and destroy the object when you finish with it.</p>
<p>
<b>CDaoRecordset</b> uses DAO record field exchange (DFX) to support reading and updating of record fields through type-safe C++ members of your <b>CDaoRecordset</b> or <b>CDaoRecordset</b>-derived class. You can also implement dynamic binding of columns in a database without using the DFX mechanism using <a href="_mfc_cdaorecordset.3a3a.getfieldvalue.htm">GetFieldValue</a> and <a href="_mfc_cdaorecordset.3a3a.setfieldvalue.htm">SetFieldValue</a>. </p>
<p>
For more information about recordsets, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Recordset.3a_.Architecture">
</object><a href=JavaScript:alink_1.Click()>DAO: Recordset Architecture</a><b> </b>in <i>Visual C++ Programmer's Guide</i>. For related information, see the topic "Recordset Object" in DAO Help.</p>
<p>
<b>#include &lt;afxdao.h&gt;</b></p>
<p>
<a href="_mfc_cdaorecordset_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cobject.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>Samples</b>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DAOVIEW">
</object><a href=JavaScript:alink_2.Click()>MFC Sample DAOVIEW</a>  |&nbsp; <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vcsmpDBVLIST">
</object><a href=JavaScript:alink_3.Click()>MFC Sample DBVLIST</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdaotabledef.htm">CDaoTableDef</a>, <a href="_mfc_cdaoworkspace.htm">CDaoWorkspace</a>, <a href="_mfc_cdaodatabase.htm">CDaoDatabase</a>, <a href="_mfc_cdaoquerydef.htm">CDaoQueryDef</a></p>
</font></BODY>
</HTML>
