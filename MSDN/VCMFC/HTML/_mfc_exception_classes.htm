<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exception Classes</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_exception_classes"></a>Exception Classes</h1>
<p>
The class library provides an exception-handling mechanism based on class <b>CException</b>. The application framework uses exceptions in its code; you can also use them in yours. For more information, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Exceptions">
</object><a href=JavaScript:alink_1.Click()>Exceptions</a> in <i>Visual C++ Programmer's Guide</i>. You can derive your own exception types from <b>CException</b>.</p>
<p>
MFC provides an exception class from which you can derive your own exception as well as exception classes for all of the exceptions it supports.</p>
<p class=dt>
<a href="_mfc_cexception.htm">CException</a></p>
<p class=indent>
The base class for exceptions.</p>
<p class=dt>
<a href="_mfc_carchiveexception.htm">CArchiveException</a></p>
<p class=indent>
An archive exception.</p>
<p class=dt>
<a href="_mfc_cdaoexception.htm">CDaoException</a></p>
<p class=indent>
An exception resulting from a failure in a DAO database operation.</p>
<p class=dt>
<a href="_mfc_cdbexception.htm">CDBException</a></p>
<p class=indent>
An exception resulting from a failure in ODBC database processing.</p>
<p class=dt>
<a href="_mfc_cfileexception.htm">CFileException</a></p>
<p class=indent>
A file-oriented exception.</p>
<p class=dt>
<a href="_mfc_cmemoryexception.htm">CMemoryException</a></p>
<p class=indent>
An out-of-memory exception.</p>
<p class=dt>
<a href="_mfc_cnotsupportedexception.htm">CNotSupportedException</a></p>
<p class=indent>
An exception resulting from using an unsupported feature.</p>
<p class=dt>
<a href="_mfc_coleexception.htm">COleException</a></p>
<p class=indent>
An exception resulting from a failure in OLE processing. This class is used by both containers and servers.</p>
<p class=dt>
<a href="_mfc_coledispatchexception.htm">COleDispatchException</a></p>
<p class=indent>
An exception resulting from an error during automation. Automation exceptions are thrown by automation servers and caught by automation clients.</p>
<p class=dt>
<a href="_mfc_cresourceexception.htm">CResourceException</a></p>
<p class=indent>
An exception resulting from a failure to load a Windows resource.</p>
<p class=dt>
<a href="_mfc_cuserexception.htm">CUserException</a></p>
<p class=indent>
An exception used to stop a user-initiated operation. Typically the user has been notified of the problem before this exception is thrown.</p>
</font></BODY>
</HTML>
