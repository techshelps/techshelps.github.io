<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AfxDumpStack</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcrefafxdumpstack"></a>AfxDumpStack</h1>
<p>
<b>void AFXAPI AfxDumpStack(DWORD </b><i>dwTarget</i><b> = AFX_STACK_DUMP_TARGET_DEFAULT);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>dwTarget</i></p>
<p class=indent>
Indicates the target of the dump output. Possible values, which can be combined using the bitwise-OR (<b>|</b>) operator, are as follows:
<ul type=disc>
<li>
<b>AFX_STACK_DUMP_TARGET_TRACE</b>&nbsp;&nbsp;&nbsp;Sends output via the <a href="_mfc_trace.htm">TRACE</a> macro. The <b>TRACE</b> macro generates output in debug builds only; it generates no output in release builds. Also, <b>TRACE</b> can be redirected to other targets besides the debugger. <br><br></li>
<li>
<b>AFX_STACK_DUMP_TARGET_DEFAULT</b>&nbsp;&nbsp;&nbsp;Sends dump output to the default target. For a debug build, output goes to the <b>TRACE</b> macro. In a release build, output goes to the Clipboard.<br><br></li>
<li>
<b>AFX_STACK_DUMP_TARGET_CLIPBOARD</b>&nbsp;&nbsp;&nbsp;Sends output to the Clipboard only. The data is placed on the Clipboard as plain text using the <b>CF_TEXT</b> Clipboard format.<br><br></li>
<li>
<b>AFX_STACK_DUMP_TARGET_BOTH</b>&nbsp;&nbsp;&nbsp;Sends output to the Clipboard and to the <b>TRACE</b> macro, simultaneously.<br><br></li>
<li>
<b>AFX_STACK_DUMP_TARGET_ODS</b>&nbsp;&nbsp;&nbsp;Sends output directly to the debugger via the Win32 function <b>OutputDebugString()</b>. This option will generate debugger output in both debug and release builds when a debugger is attached to the process. <b>AFX_STACK_DUMP_TARGET_ODS</b> always reaches the debugger (if it is attached) and cannot be redirected.</li>
</ul>
<p class=label>
<b>Remarks</b></p>
<p>
This global function can be used to generate an image of the current stack. The example below reflects a single line of the output generated from calling <b>AfxDumpStack</b> from a button handler in an MFC dialog applicaton:</p>
<pre><code>=== begin AfxDumpStack output ===
…
BFF928E0: WINDOWS\SYSTEM\KERNEL32.DLL! UTUnRegister + 2492 bytes

=== end AfxDumpStack() output ===
</code></pre>
<p>
The following table describes the above line of output:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>Output</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><code>BFF928E0:</code></td>
<td width=50%>The return address of the last function call.</td>
</tr>
<tr valign=top>
<td width=50%><code>WINDOWS\SYSTEM\KERNEL32.DLL!</code></td>
<td width=50%>The full path name of the module that contains the function call.</td>
</tr>
<tr valign=top>
<td width=50%><code>UTUnRegister</code></td>
<td width=50%>The function prototype called.</td>
</tr>
<tr valign=top>
<td width=50%><code>+ 2492 bytes</code></td>
<td width=50%>The offset in bytes from the address of the function prototype (in this case, <code>UTUnRegister</code>) to the return address (in this case, <code>BFF928E0</code>).</td>
</tr>
</table><br>
<p>
<b>AfxDumpStack</b> is available in debug and nondebug versions of the MFC libraries; however, the function is always linked statically, even when your executable file uses MFC in a shared DLL. In shared-library implementations, the function is found in the MFCS42.LIB library (and its variants).</p>
<p>
To use this function successfully:
<ul type=disc>
<li>
The file IMAGEHLP.DLL must be on your path. If you do not have this DLL, the function will display an error message. IMAGEHLP.DLL is a redistributable DLL that ships with the Win32 SDK, and with Windows. Look for it in C:\[windows]\system[32]. See <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_pe_image_helper_imagehlp_">
</object><a href=JavaScript:alink_1.Click()>Portable Executable File Manipulation</a> for an introduction to the function set provided by IMAGEHLP.<br><br></li>
<li>
The modules that have frames on the stack must include debugging information. If they do not contain debugging information, the function will still generate a stack trace, but the trace will be less detailed.</li>
</ul>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_afxdump_variable.htm">afxDump</a></p>
</font></BODY>
</HTML>
