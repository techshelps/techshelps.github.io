<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Relationship to the C-Language API</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_relationship_to_the_c.2d.language_api"></a>Relationship to the C-Language API</h1>
<p>
The single characteristic that sets the Microsoft Foundation Class Library apart from other class libraries for Windows is the very close mapping to the Windows API written in the C language. Further, you can generally mix calls to the class library freely with direct calls to the Windows API. This direct access does not, however, imply that the classes are a complete replacement for that API. Developers must still occasionally make direct calls to some Windows functions — <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_Win32_SetCursor">
</object><a href=JavaScript:alink_1.Click()>SetCursor</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_Win32_GetSystemMetrics">
</object><a href=JavaScript:alink_2.Click()>GetSystemMetrics</a>, for example. A Windows function is wrapped by a class member function only when there is a clear advantage to doing so.</p>
<p>
Because you sometimes need to make native Windows function calls, you should have access to the C-language Windows API documentation. This documentation is included with Microsoft Visual C++<sup>™</sup>. Two useful books are <i>Advanced Windows</i>, by Jeffrey Richter, and <i>Programming Windows 95</i>, by Charles Petzold. Both are published by Microsoft Press<sup>®</sup>. Many of those books’ examples can be easily converted to the Microsoft Foundation classes. For examples and additional information about programming with the Microsoft Foundation Class Library, see <i>Inside Visual C++</i> by David J. Kruglinski, also published by Microsoft Press.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;For an overview of how the Microsoft Foundation Class Library framework operates, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Using_the_Classes_to_Write_Applications_for_Windows">
</object><a href=JavaScript:alink_3.Click()>Using the Classes to Write Applications for Windows</a> in <i>Visual C++ Programmer's Guide</i>. The overview material is no longer located in the <i>Class Library Reference</i>.</p>
</font></BODY>
</HTML>
