<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RFX_Text</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_rfx_text"></a><sup></sup>RFX_Text</h1>
<p>
<b>void</b> <b>RFX_Text(</b> <b>CFieldExchange*</b> <i>pFX</i><b>,</b> <b>const</b> <b>char*</b> <i>szName</i><b>,</b> <b>CString&amp;</b> <i>value</i><b>,</b> <b>int</b> <i>nMaxLength</i> <b>=</b> <b>255,</b> <b>int</b> <i>nColumnType</i> <b>=</b> <b>SQL_VARCHAR, short </b><i>nScale</i> <b>= 0</b> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pFX</i></p>
<p class=indent>
A pointer to an object of class <b>CFieldExchange</b>. This object contains information to define the context for each call of the function. For more information about the operations a <b>CFieldExchange</b> object can specify, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Record_Field_Exchange.3a_.How_RFX_Works">
</object><a href=JavaScript:alink_1.Click()>Record Field Exchange: How RFX Works</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p class=dt>
<i>szName</i></p>
<p class=indent>
The name of a data column.</p>
<p class=dt>
<i>value</i></p>
<p class=indent>
The value stored in the indicated data member — the value to be transferred. For a transfer from recordset to data source, the value, of type <b>CString</b>, is taken from the specified data member. For a transfer from data source to recordset, the value is stored in the specified data member.</p>
<p class=dt>
<i>nMaxLength</i></p>
<p class=indent>
The maximum allowed length of the string or array being transferred. The default value of <i>nMaxLength</i> is 255. Legal values are 1 to <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="integer constants">
</object><a href=JavaScript:alink_2.Click()>INT_MAX</a>. The framework allocates this amount of space for the data. For best performance, pass a value large enough to accommodate the largest data item you expect.</p>
<p class=dt>
<i>nColumnType</i></p>
<p class=indent>
Used mainly for parameters. An integer indicating the data type of the parameter. The type is an ODBC data type of the form <b>SQL_XXX</b>. </p>
<p class=dt>
<i>nScale</i></p>
<p class=indent>
Specifies the scale for values of ODBC type <b>SQL_DECIMAL</b> or <b>SQL_NUMERIC</b>. <i>nScale</i> is only useful when setting parameter values. For more information, see the topic "Precision, Scale, Length, and Display Size" in Appendix D of the <i>ODBC SDK Programmer's Reference</i>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>RFX_Text</b> function transfers <b>CString</b> data between the field data members of a <b>CRecordset</b> object and columns of a record on the data source of ODBC type <b>SQL_LONGVARCHAR</b>, <b>SQL_CHAR</b>, <b>SQL_VARCHAR</b>, <b>SQL_DECIMAL</b>, or <b>SQL_NUMERIC</b>. Data in the data source of all of these types is mapped to and from <b>CString</b> in the recordset.</p>
<p class=label>
<b>Example</b></p>
<p>
This example shows several calls to <b>RFX_Text</b>. Notice also the two calls to <b>CFieldExchange::SetFieldType</b>. ClassWizard normally writes the second call to <b>SetFieldType</b> and its associated RFX calls. You must write the first call and its RFX call. It is recommended that you put any parameter items before the “//{{AFX_FIELD_MAP” comment. You must put parameters outside the comments.</p>
<pre><code>//Example for RFX_Text
void CSections::DoFieldExchange(CFieldExchange* pFX)
{
   pFX-&gt;SetFieldType(CFieldExchange::inputParam);
   RFX_Text(pFX, "Name", m_strNameParam);

   //{{AFX_FIELD_MAP(CSections)
   pFX-&gt;SetFieldType(CFieldExchange::outputColumn);
   RFX_Text(pFX, "CourseID", m_strCourseID);
   RFX_Text(pFX, "InstructorID", m_strInstructorID);
   RFX_Int(pFX, "RoomNo", m_nRoomNo);
   RFX_Text(pFX, "Schedule", m_strSchedule);
   RFX_Int(pFX, "SectionNo", m_nSectionNo);
   RFX_Single(pFX, "LabFee", m_flLabFee);
   //}}AFX_FIELD_MAP
}
</code></pre>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_rfx_bool.htm">RFX_Bool</a>, <a href="_mfc_rfx_long.htm">RFX_Long</a>, <a href="_mfc_rfx_int.htm">RFX_Int</a>, <a href="_mfc_rfx_single.htm">RFX_Single</a>, <a href="_mfc_rfx_double.htm">RFX_Double</a>, <a href="_mfc_rfx_date.htm">RFX_Date</a>, <a href="_mfc_rfx_byte.htm">RFX_Byte</a>, <a href="_mfc_rfx_binary.htm">RFX_Binary</a>, <a href="_mfc_rfx_longbinary.htm">RFX_LongBinary</a>, <a href="_mfc_cfieldexchange.3a3a.setfieldtype.htm">CFieldExchange::SetFieldType</a></p>
</font></BODY>
</HTML>
