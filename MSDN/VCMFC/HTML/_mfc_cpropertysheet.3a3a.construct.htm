<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CPropertySheet::Construct</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cpropertysheet.3a3a.construct"></a>CPropertySheet::Construct</h1>
<p>
<b>void Construct( UINT </b><i>nIDCaption</i><b>, CWnd* </b><i>pParentWnd</i><b> = NULL, UINT </b><i>iSelectPage</i><b> = 0 );</b></p>
<p>
<b>void Construct( LPCTSTR </b><i>pszCaption</i><b>, CWnd* </b><i>pParentWnd</i><b> = NULL, UINT </b><i>iSelectPage</i><b> = 0 );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nIDCaption</i></p>
<p class=indent>
ID of the caption to be used for the property sheet.</p>
<p class=dt>
<i>pParentWnd</i></p>
<p class=indent>
Pointer to the parent window of the property sheet. If <b>NULL</b>, the parent window will be the main window of the application.</p>
<p class=dt>
<i>iSelectPage</i></p>
<p class=indent>
The index of the page that will initially be on top. Default is the first page added to the sheet.</p>
<p class=dt>
<i>pszCaption</i></p>
<p class=indent>
Pointer to a string containing the caption to be used for the property sheet. Cannot be <b>NULL</b>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to construct a <b>CPropertySheet</b> object. Call this member function if one of the class constructors has not already been called. For example, call <b>Construct</b> when you declare or allocate arrays of <b>CPropertySheet</b> objects. In the case of&nbsp; arrays, you must call <b>Construct</b> for each member in the array.</p>
<p>
To display the property sheet, call <a href="_mfc_cpropertysheet.3a3a.domodal.htm">DoModal</a> or <a href="_mfc_cpropertysheet.3a3a.create.htm">Create</a>. The string contained in the first parameter will be placed in the caption bar for the property sheet.</p>
<p class=label>
<b>Example</b></p>
<p>
The following example demonstrates under what circumstances you would call <b>Construct</b>.</p>
<pre><code>int i;
CPropertySheet&nbsp;&nbsp; grpropsheet[4];
CPropertySheet&nbsp;&nbsp; someSheet;&nbsp;&nbsp; // no need to call Construct for this one

UINT rgID[4] = {IDD_SHEET1, IDD_SHEET2, IDD_SHEET3, IDD_SHEET4};

for (i = 0; i &lt; 4; i++)
 &nbsp;&nbsp; grpropsheet[i].Construct(rgID[i]);
</code></pre>
<p>
<a href="_mfc_cpropertysheet.htm">CPropertySheet Overview</a>  |&nbsp; <a href="_mfc_cpropertysheet_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cpropertysheet.3a3a.cpropertysheet.htm">CPropertySheet::CPropertySheet</a>, <a href="_mfc_cpropertysheet.3a3a.domodal.htm">CPropertySheet::DoModal</a>, <a href="_mfc_cpropertysheet.3a3a.create.htm">CPropertySheet::Create</a></p>
</font></BODY>
</HTML>
