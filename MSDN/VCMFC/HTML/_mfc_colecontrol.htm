<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COleControl</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_colecontrol"></a>COleControl</h1>
<p>
<img src="colectrl.gif" border=0></p>
<p>
The <b>COleControl</b> class is a powerful base class for developing OLE controls. Derived from <b>CWnd</b>, this class inherits all the functionality of a Windows window object plus additional functionality specific to OLE, such as event firing and the ability to support methods and properties.</p>
<p>
OLE controls can be inserted into OLE container applications and communicate with the container by using a two-way system of event firing and exposing methods and properties to the container. Note that standard OLE containers only support the basic functionality of an OLE control. They are unable to support extended features of an OLE control. Event firing occurs when events are sent to the container as a result of certain actions taking place in the control. In turn, the container communicates with the control by using an exposed set of methods and properties analogous to the member functions and data members of a C++ class. This approach allows the developer to control the appearance of the control and notify the container when certain actions occur.</p>
<h2>Windowless Controls</h2>
<p>
OLE controls can be used in-place active without a window. Windowless controls have significant advantages:
<ul type=disc>
<li>
Windowless controls can be transparent and non-rectangular<br><br></li>
<li>
Windowless controls reduce instance size and creation time of the object</li>
</ul>
<p>
Controls do not need a window. Services that a window offers can easily be provided via a single shared window (usually the container’s) and a bit of dispatching code. Having a window is mostly an unnecessary complication on the object.</p>
<p>
When windowless activation is used, the container (which does have a window) is responsible for providing services that would otherwise have been provided by the control’s own window. For example, if your control needs to query the keyboard focus, query the mouse capture, or obtain a device context, these operations are managed by the container. The <b>COleControl</b> <a href="_mfc_colecontrol_class_members.htm#_mfc_windowless_operations_colecontrol">windowless-operation member functions</a> invoke these operations on the container. </p>
<p>
When windowless activation is enabled, the container delegates input messages to the control’s <b>IOleInPlaceObjectWindowless</b> interface (an extension of <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_com_IOleInPlaceObject">
</object><a href=JavaScript:alink_1.Click()>IOleInPlaceObject</a> for windowless support). <b>COleControl</b>’s implementation of this interface will dispatch these messages through your control’s message map, after adjusting the mouse coordinates appropriately. You can process these messages like ordinary window messages, by adding the corresponding entries to the message map.</p>
<p>
In a windowless control, you should always use the <b>COleControl</b> member functions instead of the corresponding <b>CWnd</b> member functions or their related Windows API functions.</p>
<p>
OLE control objects can also create a window only when they become active, but the amount of work needed for the inactive-active transition goes up and the speed of the transition goes down. There are cases when this is a problem: as an example, consider a grid of text boxes. When cursoring up and down through the column, each control must be in-place activated and then deactivated. The speed of the inactive/active transition will directly affect the scrolling speed.</p>
<p>
For more information on developing an OLE control framework, see the articles <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_ActiveX_Controls">
</object><a href=JavaScript:alink_2.Click()>ActiveX Controls</a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="ActiveX ControlWizard">
</object><a href=JavaScript:alink_3.Click()>Create a Program with the ActiveX ControlWizard</a> in <i>Visual C++ Programmer's Guide</i>. For more information on adding functionality beyond the basic framework, see <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Circle sample start">
</object><a href=JavaScript:alink_4.Click()>Building an ActiveX Control</a> (the Circle tutorial) in <i>Visual C++ Tutorials</i>. For information on optimizing OLE controls, including windowless and flicker-free controls, see <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_ActiveX_Controls.3a_.Optimization">
</object><a href=JavaScript:alink_5.Click()>ActiveX Controls: Optimization</a> in <i>Visual C++ Programmer's Guide</i>. </p>
<p>
<b>#include &lt;afxctl.h&gt;</b></p>
<p>
<a href="_mfc_colecontrol_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cwnd.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a> </p>
<p>
<b>Samples</b>&nbsp;&nbsp;&nbsp;<object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_CIRC">
</object><a href=JavaScript:alink_6.Click()>MFC Sample CIRC3</a>  |&nbsp; <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_DRAWPIC">
</object><a href=JavaScript:alink_7.Click()>MFC Sample DRAWPIC</a>  |&nbsp; <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_mfc_TESTHELP">
</object><a href=JavaScript:alink_8.Click()>MFC Sample TESTHELP</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_colepropertypage.htm">COlePropertyPage</a>, <a href="_mfc_cfontholder.htm">CFontHolder</a>, <a href="_mfc_cpictureholder.htm">CPictureHolder</a></p>
</font></BODY>
</HTML>
