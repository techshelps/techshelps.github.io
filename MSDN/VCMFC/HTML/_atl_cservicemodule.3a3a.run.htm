<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CServiceModule::Run</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_cservicemodule.3a3a.run"></a>CServiceModule::Run</h1>
<p>
After being called, <b>Run</b> first stores the service's thread ID. The service will use this ID to close itself by sending a <b>WM_QUIT</b> message using the Win32 API function, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_PostThreadMessage">
</object><a href=JavaScript:alink_1.Click()>PostThreadMessage</a>.</p>
<p>
<b>Run</b> then calls the Win32 API function, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_com_CoInitializeEx">
</object><a href=JavaScript:alink_2.Click()>CoInitializeEx</a>. By default, <b>Run</b> passes the <b>COINIT_MULTITHREADED</b> flag to the function. This flag indicates that the program is to be a free-threaded server.</p>
<p>
Now you can specify security using <b>CSecurityDescriptor</b>. This class greatly simplifies the task of setting up and making changes to the discretionary access-control list (DACL) — a list of access-control entries (ACEs), where each ACE defines access to a Win32 object.</p>
<p>
By default, the ATL COM AppWizard generates a call to the <b>InitializeFromThreadToken</b> member function of <b>CSecurityDescriptor</b>. This initializes the object's security descriptor to a null DACL, which means that any user has access to your object.</p>
<p>
The easiest way to change user access is with the <b>Deny</b> and <b>Allow</b> member functions of <b>CSecurityDescriptor</b>. These functions add an ACE to the existing DACL. However, <b>Deny</b> always takes priority since <b>Deny</b> adds the ACE to the beginning of the DACL, while <b>Allow</b> adds it to the end. Both <b>Deny</b> and <b>Allow</b> pass the user name as the first parameter and the access rights (typically, <b>COM_RIGHTS_EXECUTE</b>) as the second.</p>
<p>
Recall that the null DACL created by <b>InitializeFromThreadToken</b> grants all users access to the COM object. However, as soon as you call <b>Allow</b> to add an ACE, only that specified user will have access. The following code shows a call to <b>Allow</b>:</p>
<pre><code>CSecurityDescriptor sd;
sd.InitializeFromThreadToken( );

if (bAllowOneUser)
{
 &nbsp; sd.Allow("MYDOMAIN\\myuser", COM_RIGHTS_EXECUTE);
}
CoInitializeSecurity(sd, -1, NULL, NULL,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RPC_C_AUTHN_LEVEL_PKT,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RPC_C_IMP_LEVEL_IMPERSONATE,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NULL, EOAC_NONE, NULL);
</code></pre>
<p>
If the variable, <code>bAllowOneUser</code>, is <b>TRUE</b>, then only the one specified user has access because only that user's ACE is in the DACL. If <code>bAllowOneUser</code> is <b>FALSE</b>, then all users have access because the DACL is null.</p>
<p>
If you do not want the service to specify its own security, remove the call to the Win32 API function, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_com_CoInitializeSecurity">
</object><a href=JavaScript:alink_3.Click()>CoInitializeSecurity</a>, and COM will then determine the security settings from the registry. A convenient way to configure registry settings is with the <a href="_atl_dcomcnfg.htm">DCOMCNFG</a> utility discussed later in this article.</p>
<p>
Once security is specified, the object is registered with COM so that new clients can connect to the program. Finally, the program tells the SCM that it is running and the program enters a message loop. The program remains running until it posts a quit message upon service shutdown.</p>
<p>
For more information about Windows NT security, see the MSDN article, "Windows NT Security in Theory and Practice."</p>
</font></BODY>
</HTML>
