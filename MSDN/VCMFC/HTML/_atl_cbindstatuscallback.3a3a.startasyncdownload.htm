<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CBindStatusCallback::StartAsyncDownload</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_cbindstatuscallback.3a3a.startasyncdownload"></a>CBindStatusCallback::StartAsyncDownload</h1>
<p>
<b>HRESULT StartAsyncDownload( </b><i>T</i><b>* </b><i>pT</i>, <b>ATL_PDATAAVAILABLE </b><i>pFunc</i>, <b>BSTR </b><i>bstrURL</i>, <b>BOOL </b><i>bRelative</i> = <b>FALSE</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
One of the standard <b>HRESULT</b> values.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pT</i></p>
<p class=indent>
[in] A pointer to the object requesting the asynchronous data transfer. The <b>CBindStatusCallback</b> object is templatized on this object's class.</p>
<p class=dt>
<i>pFunc</i></p>
<p class=indent>
[in] A pointer to the function that receives the data being read. The function is a member of your object's class of type <i>T</i>. See <b>Remarks</b> for syntax and an example.</p>
<p class=dt>
<i>bstrURL</i></p>
<p class=indent>
[in] The URL to obtain data from. Can be any valid URL or file name. Cannot be <b>NULL</b>. For example:</p>
<p class=tl>
<code>CComBSTR mybstr =_T("http://somesite/data.htm")</code></P><p class=dt>
<i>pUnkContainer</i></p>
<p class=indent>
[in] The <b>IUnknown</b> of the container. <b>NULL</b> by default.</p>
<p class=dt>
<i>bRelative</i></p>
<p class=indent>
[in] A flag indicating whether the URL is relative or absolute. <b>FALSE</b> by default, meaning the URL is absolute.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Starts downloading data asynchronously from the specified URL. Every time data is available it is sent to the object through <b>OnDataAvailable</b>. <b>OnDataAvailable</b> reads the data and calls the function pointed to by <i>pFunc</i> (for example, to store the data or print it to the screen).</p>
<p>
The function pointed to by <i>pFunc</i> is a member of your object's class and has the following syntax:</p>
<p>
<b>void Function_Name( CBindStatusCallback&lt;</b><i>T</i><b>&gt;* </b><i>pbsc</i>, <b>BYTE* </b><i>pBytes</i>, <b>DWORD </b><i>dwSize</i> <b>);</b></p>
<p>
In the following example (taken from the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_sample_atl_ASYNC">
</object><a href=JavaScript:alink_1.Click()>ASYNC</a> sample), the function <code>OnData</code> writes the received data into a text box:</p>
<pre><code>void OnData(CBindStatusCallback&lt;CATLAsync&gt;* pbsc, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BYTE* pBytes, DWORD dwSize)
{
 &nbsp; m_bstrText.Append= (LPCSTR)pBytes;
 &nbsp; if (::IsWindow(m_EditCtrl.m_hWnd))
 &nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp; USES_CONVERSION;
 &nbsp;&nbsp;&nbsp;&nbsp; ::SendMessage(m_EditCtrl.m_hWnd, WM_SETTEXT, 0, 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (LPARAM)OLE2CT((BSTR)m_bstrText));
 &nbsp; }
}
</code></pre>
<p>
<a href="_atl_cbindstatuscallback.htm">CBindStatusCallback Overview</a>  |&nbsp; <a href="_atl_cbindstatuscallback_class_members.htm">Class Members</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_atl_cbindstatuscallback.3a3a.ondataavailable.htm">CBindStatusCallback::OnDataAvailable</a> </p>
</font></BODY>
</HTML>
