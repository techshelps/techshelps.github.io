<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CArchive::ReadClass</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_carchive.3a3a.readclass"></a>CArchive::ReadClass</h1>
<p>
<b>CRuntimeClass* ReadClass( const CRuntimeClass* </b><i>pClassRefRequested</i><b> = NULL, UINT* </b><i>pSchema</i> <b>=</b> <b>NULL, DWORD* </b><i>obTag</i><b> = NULL );<br>
Throw CArchiveException;<br>
Throw CNotSupportedException;</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
A pointer to the <a href="_mfc_cruntimeclass.htm">CRuntimeClass</a> structure.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pClassRefRequested</i></p>
<p class=indent>
A pointer to the <a href="_mfc_cruntimeclass.htm">CRuntimeClass</a> structure that corresponds to the class reference requested. Can be <b>NULL</b>.</p>
<p class=dt>
<i>pSchema</i></p>
<p class=indent>
A pointer to a schema of the run-time class previously stored.</p>
<p class=dt>
<i>obTag</i></p>
<p class=indent>
A number that refers to an object’s unique tag. Used internally by the implementation of <a href="_mfc_carchive.3a3a.readobject.htm">ReadObject</a>. Exposed for advanced programming only; <i>obTag</i> normally should be <b>NULL</b>. </p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to read a reference to a class previously stored with <a href="_mfc_carchive.3a3a.writeclass.htm">WriteClass</a>.</p>
<p>
If <i>pClassRefRequested</i> is not <b>NULL</b>, <b>ReadClass</b> verifies that the archived class information is compatible with your runtime class. If it is not compatible, <b>ReadClass</b> will throw a <a href="_mfc_carchiveexception.htm">CArchiveException</a>. </p>
<p>
Your runtime class must use <a href="_mfc_declare_serial.htm">DECLARE_SERIAL</a> and <a href="_mfc_implement_serial.htm">IMPLEMENT_SERIAL</a>; otherwise, <b>ReadClass</b> will throw a <a href="_mfc_cnotsupportedexception.htm">CNotSupportedException</a>.</p>
<p>
If <i>pSchema</i> is <b>NULL</b>, the schema of the stored class can be retrieved by calling <a href="_mfc_carchive.3a3a.getobjectschema.htm">CArchive::GetObjectSchema</a>; otherwise, <b>*</b><i>pSchema</i> will contain the schema of the run-time class that was previously stored.&nbsp; </p>
<p>
You can use <a href="_mfc_carchive.3a3a.serializeclass.htm">SerializeClass</a><b> </b>instead of <b>ReadClass</b>, which handles both reading and writing of the class reference.</p>
<p>
<a href="_mfc_carchive.htm">CArchive Overview</a>  |&nbsp; <a href="_mfc_carchive_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_carchive.3a3a.writeclass.htm">CArchive::WriteClass</a>, <a href="_mfc_carchive.3a3a.getobjectschema.htm">CArchive::GetObjectSchema</a>, <a href="_mfc_carchive.3a3a.setobjectschema.htm">CArchive::SetObjectSchema</a>, <a href="_mfc_carchiveexception.htm">CArchiveException</a>, <a href="_mfc_cnotsupportedexception.htm">CNotSupportedException</a>, <a href="_mfc_carchive.3a3a.serializeclass.htm">CArchive::SerializeClass</a></p>
</font></BODY>
</HTML>
