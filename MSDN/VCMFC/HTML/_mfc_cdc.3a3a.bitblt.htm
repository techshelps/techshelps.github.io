<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDC::BitBlt</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdc.3a3a.bitblt"></a><sup></sup>CDC::BitBlt&nbsp; </h1>
<p>
<b>BOOL</b> <b>BitBlt(</b> <b>int</b> <i>x</i><b>,</b> <b>int</b> <i>y</i><b>,</b> <b>int</b> <i>nWidth</i><b>,</b> <b>int</b> <i>nHeight</i><b>,</b> <b>CDC*</b> <i>pSrcDC</i><b>,</b> <b>int</b> <i>xSrc</i><b>,</b> <b>int</b> <i>ySrc</i><b>,</b> <b>DWORD</b> <i>dwRop</i> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if the function is successful; otherwise 0.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>x</i></p>
<p class=indent>
Specifies the logical x-coordinate of the upper-left corner of the destination rectangle.</p>
<p class=dt>
<i>y</i></p>
<p class=indent>
Specifies the logical y-coordinate of the upper-left corner of the destination rectangle.</p>
<p class=dt>
<i>nWidth</i></p>
<p class=indent>
Specifies the width (in logical units) of the destination rectangle and source bitmap.</p>
<p class=dt>
<i>nHeight</i></p>
<p class=indent>
Specifies the height (in logical units) of the destination rectangle and source bitmap.</p>
<p class=dt>
<i>pSrcDC</i></p>
<p class=indent>
Pointer to a <b>CDC</b> object that identifies the device context from which the bitmap will be copied. It must be <b>NULL</b> if <i>dwRop</i> specifies a raster operation that does not include a source.</p>
<p class=dt>
<i>xSrc</i></p>
<p class=indent>
Specifies the logical x-coordinate of the upper-left corner of the source bitmap.</p>
<p class=dt>
<i>ySrc</i></p>
<p class=indent>
Specifies the logical y-coordinate of the upper-left corner of the source bitmap.</p>
<p class=dt>
<i>dwRop</i></p>
<p class=indent>
Specifies the raster operation to be performed. Raster-operation codes define how the GDI combines colors in output operations that involve a current brush, a possible source bitmap, and a destination bitmap. The following lists raster-operation codes for <i>dwRop</i> and their descriptions:
<ul type=disc>
<li>
<b>BLACKNESS</b>&nbsp;&nbsp;&nbsp;Turns all output black.<br><br></li>
<li>
<b>DSTINVERT</b>&nbsp;&nbsp;&nbsp;Inverts the destination bitmap.<br><br></li>
<li>
<b>MERGECOPY</b>&nbsp;&nbsp;&nbsp;Combines the pattern and the source bitmap using the Boolean AND operator.<br><br></li>
<li>
<b>MERGEPAINT</b>&nbsp;&nbsp;&nbsp;Combines the inverted source bitmap with the destination bitmap using the Boolean OR operator.<br><br></li>
<li>
<b>NOTSRCCOPY</b>&nbsp;&nbsp;&nbsp;Copies the inverted source bitmap to the destination.<br><br></li>
<li>
<b>NOTSRCERASE</b>&nbsp;&nbsp;&nbsp;Inverts the result of combining the destination and source bitmaps using the Boolean OR operator.<br><br></li>
<li>
<b>PATCOPY</b>&nbsp;&nbsp;&nbsp;Copies the pattern to the destination bitmap.<br><br></li>
<li>
<b>PATINVERT</b>&nbsp;&nbsp;&nbsp;Combines the destination bitmap with the pattern using the Boolean XOR operator.<br><br></li>
<li>
<b>PATPAINT</b>&nbsp;&nbsp;&nbsp;Combines the inverted source bitmap with the pattern using the Boolean OR operator. Combines the result of this operation with the destination bitmap using the Boolean OR operator.<br><br></li>
<li>
<b>SRCAND</b>&nbsp;&nbsp;&nbsp;Combines pixels of the destination and source bitmaps using the Boolean AND operator.<br><br></li>
<li>
<b>SRCCOPY</b>&nbsp;&nbsp;&nbsp;Copies the source bitmap to the destination bitmap.<br><br></li>
<li>
<b>SRCERASE</b>&nbsp;&nbsp;&nbsp;Inverts the desination bitmap and combines the result with the source bitmap using the Boolean AND operator.<br><br></li>
<li>
<b>SRCINVERT</b>&nbsp;&nbsp;&nbsp;Combines pixels of the destination and source bitmaps using the Boolean XOR operator.<br><br></li>
<li>
<b>SRCPAINT</b>&nbsp;&nbsp;&nbsp;Combines pixels of the destination and source bitmaps using the Boolean OR operator.<br><br></li>
<li>
<b>WHITENESS</b>&nbsp;&nbsp;&nbsp;Turns all output white.</li>
</ul>
<p>
For a complete list of raster-operation codes, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_raster_operation_codes">
</object><a href=JavaScript:alink_1.Click()>About Raster Operation Codes</a> in the Appendices section of the <i>Win32 SDK Programmer’s Reference</i>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Copies a bitmap from the source device context to this current device context. </p>
<p>
The application can align the windows or client areas on byte boundaries to ensure that the <b>BitBlt</b> operations occur on byte-aligned rectangles. (Set the <b>CS_BYTEALIGNWINDOW</b> or <b>CS_BYTEALIGNCLIENT</b> flags when you register the window classes.) </p>
<p>
<b>BitBlt</b> operations on byte-aligned rectangles are considerably faster than <b>BitBlt</b> operations on rectangles that are not byte aligned. If you want to specify class styles such as byte-alignment for your own device context, you will have to register a window class rather than relying on the Microsoft Foundation classes to do it for you. Use the global function <a href="_mfc_afxregisterwndclass.htm">AfxRegisterWndClass</a>.</p>
<p>
GDI transforms <i>nWidth</i> and <i>nHeight</i>, once by using the destination device context, and once by using the source device context. If the resulting extents do not match, GDI uses the Windows <b>StretchBlt</b> function to compress or stretch the source bitmap as necessary.</p>
<p>
If destination, source, and pattern bitmaps do not have the same color format, the <b>BitBlt</b> function converts the source and pattern bitmaps to match the destination. The foreground and background colors of the destination bitmap are used in the conversion. </p>
<p>
When the <b>BitBlt</b> function converts a monochrome bitmap to color, it sets white bits (1) to the background color and black bits (0) to the foreground color. The foreground and background colors of the destination device context are used. To convert color to monochrome, <b>BitBlt</b> sets pixels that match the background color to white and sets all other pixels to black. <b>BitBlt</b> uses the foreground and background colors of the color device context to convert from color to monochrome.</p>
<p>
Note that not all device contexts support <b>BitBlt</b>. To check whether a given device context does support <b>BitBlt</b>, use the <b>GetDeviceCaps</b> member function and specify the <b>RASTERCAPS</b> index.</p>
<p>
<a href="_mfc_cdc.htm">CDC Overview</a>  |&nbsp; <a href="_mfc_cdc_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdc.3a3a.getdevicecaps.htm">CDC::GetDeviceCaps</a>, <a href="_mfc_cdc.3a3a.patblt.htm">CDC::PatBlt</a>, <a href="_mfc_cdc.3a3a.settextcolor.htm">CDC::SetTextColor</a>, <a href="_mfc_cdc.3a3a.stretchblt.htm">CDC::StretchBlt</a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_StretchDIBits">
</object><a href=JavaScript:alink_2.Click()>::StretchDIBits</a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_BitBlt">
</object><a href=JavaScript:alink_3.Click()>::BitBlt</a></p>
</font></BODY>
</HTML>
