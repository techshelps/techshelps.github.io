<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDockState</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdockstate"></a>CDockState</h1>
<p>
<img src="cdockst.gif" border=0></p>
<p>
<b>CDockState</b> is a serialized <b>CObject</b> class that loads, unloads, or clears the state of one or more docking control bars in persistent memory (a file). The dock state includes the size and position of the bar and whether or not it is docked. When retrieving the stored dock state, <b>CDockState</b> checks the bar's position and, if the bar is not visible with the current screen settings, <b>CDockState</b> scales the bar's position so that it is visible. The main purpose of <b>CDockState</b> is to hold the entire state of a number of control bars and to allow that state to be saved and loaded either to the registry, the application's .INI file, or in binary form as part of a <b>CArchive</b> object's contents. </p>
<p>
The bar can be any dockable control bar, including a toolbar, status bar, or dialog bar. <b>CDockState</b> objects are written and read to or from a file via a <b>CArchive</b> object. </p>
<p>
<a href="_mfc_cframewnd.3a3a.getdockstate.htm">CFrameWnd::GetDockState</a> retrieves the state information of all the frame window's <b>CControlBar</b> objects and puts it into the <b>CDockState</b> object. You can then write the contents of the <b>CDockState</b> object to storage with <a href="_mfc_cobject.3a3a.serialize.htm">Serialize</a> or <a href="_mfc_cdockstate.3a3a.savestate.htm">CDockState::SaveState</a>. If you later want to restore the state of the control bars in the frame window, you can load the state with <b>Serialize</b> or <a href="_mfc_cdockstate.3a3a.loadstate.htm">CDockState::LoadState</a>, then use <a href="_mfc_cframewnd.3a3a.setdockstate.htm">CFrameWnd::SetDockState</a> to apply the saved state to the frame window's control bars.</p>
<p>
For more information on docking control bars, see the articles <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Control_Bar_Topics">
</object><a href=JavaScript:alink_1.Click()>Control Bar Topics</a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Toolbars.3a_.Docking_and_Floating">
</object><a href=JavaScript:alink_2.Click()>Toolbars: Docking and Floating</a>, and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Frame_Window_Topics">
</object><a href=JavaScript:alink_3.Click()>Frame Window Topics</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
<b>#include &lt;afxadv.h&gt;</b></p>
<p>
<a href="_mfc_cdockstate_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cobject.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
</font></BODY>
</HTML>
