<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CArchive::GetObjectSchema</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_carchive.3a3a.getobjectschema"></a><sup></sup>CArchive::GetObjectSchema</h1>
<p>
<b>UINT</b> <b>GetObjectSchema(</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
During deserialization, the version of the object being read.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this function from the <b>Serialize</b> function to determine the version of the object that is currently being deserialized. Calling this function is only valid when the <b>CArchive</b> object is being loaded (<a href="_mfc_carchive.3a3a.isloading.htm">CArchive::IsLoading</a> returns nonzero). It should be the first call in the <b>Serialize</b> function and called only once. A return value of (<b>UINT</b>)–1 indicates that the version number is unknown).</p>
<p>
A <b>CObject</b>-derived class may use <b>VERSIONABLE_SCHEMA</b> combined (using bitwise <b>OR</b>) with the schema version itself (in the <b>IMPLEMENT_SERIAL</b> macro) to create a “versionable object,” that is, an object whose <b>Serialize</b> member function can read multiple versions. The default framework functionality (without <b>VERSIONABLE_SCHEMA</b>) is to throw an exception when the version is mismatched.</p>
<p class=label>
<b>Example</b></p>
<pre><code>IMPLEMENT_SERIAL(CMyObject, CObject, VERSIONABLE_SCHEMA|1)

void CMyObject::Serialize(CArchive&amp; ar) 
{
   if (ar.IsLoading())
   {
      int nVersion = ar.GetObjectSchema();

      switch(nVersion)
      {
      case 0:
         // read in previous version of 
         // this object
         break;
      case 1:
         // read in current version of
         // this object
         break;
      default:
         // report unknown version of 
         // this object
         break;
      }
   }
   else
   {
      // Normal storing code goes here
   }
}</code></pre>
<p>
<a href="_mfc_carchive.htm">CArchive Overview</a>  |&nbsp; <a href="_mfc_carchive_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cobject.3a3a.serialize.htm">CObject::Serialize</a>, <a href="_mfc_cobject.3a3a.isserializable.htm">CObject::IsSerializable</a>, <a href="_mfc_implement_serial.htm">IMPLEMENT_SERIAL</a>, <a href="_mfc_declare_serial.htm">DECLARE_SERIAL</a>, <a href="_mfc_carchive.3a3a.isloading.htm">CArchive::IsLoading</a></p>
</font></BODY>
</HTML>
