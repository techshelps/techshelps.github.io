<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Modifying the Inheritance of RMyProviderRowset</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vchowmodifyinginheritanceofcmyproviderrowset"></a>Modifying the Inheritance of RMyProviderRowset</h1>
<p>
To add the <code>IRowsetLocate</code> interface to the simple read-only provider example, modify the inheritance of <code>RMyProviderRowset</code>. Initially, <code>RMyProviderRowset</code> inherits from <b>CRowsetImpl</b>. You need to modify it to inherit from <b>CRowsetBaseImpl</b>. To do this, create a new class, <code>CMyRowsetImpl</code>, in MyProviderRS.h:</p>
<pre><code>////////////////////////////////////////////////////////////////////////
// MyProviderRS.h

template &lt;class T, class Storage, class CreatorClass, class ArrayType = CSimpleArray&lt;Storage&gt; &gt;
class CMyRowsetImpl:
   public CRowsetBaseImpl&lt;T, Storage, CreatorClass, ArrayType&gt;,
   public IRowsetLocateImpl&lt;T&gt;
{
   typedef CRowsetBaseImpl&lt; T, Storage, CreatorClass, ArrayType&gt; _RowsetBaseClass;

BEGIN_COM_MAP(CMyRowsetImpl)
   COM_INTERFACE_ENTRY_IID(IID_IRowsetLocate, IRowset)
   COM_INTERFACE_ENTRY(IRowset)
   COM_INTERFACE_ENTRY_CHAIN(_RowsetBaseClass)
END_COM_MAP()
};
</code></pre>
<p>
Now, create a COM interface map that tells <code>CMyRowsetImpl</code> to call <b>QueryInterface </b>for both the <b>IRowset</b> and <code>IRowsetLocate</code><b> </b>interfaces.</p>
<pre><code>////////////////////////////////////////////////////////////////////////
// MyProviderRS.h

BEGIN_COM_MAP(CMyRowsetImpl)
   COM_INTERFACE_ENTRY_IID(IID_IRowsetLocate, IRowset)
   COM_INTERFACE_ENTRY(IRowset)
END_COM_MAP()
</code></pre>
<p>
To get all of the implementation for the other rowset classes, link the <code>CMyRowsetImpl</code> class back to the <b>CRowsetBaseImpl</b> class defined by the OLE DB Templates. To do this, use a <b>COM_INTERFACE_ENTRY_CHAIN</b> macro, as shown in the following code. The <b>COM_INTERFACE_ENTRY_CHAIN</b> macro tells OLE DB Templates to scan the COM map in <b>CRowsetBaseImpl</b> in response to a <b>QueryInterface</b> call.</p>
<pre><code>////////////////////////////////////////////////////////////////////////
// MyProviderRS.h

BEGIN_COM_MAP(CMyRowsetImpl)
   COM_INTERFACE_ENTRY_IID(IID_IRowsetLocate, IRowset)
   COM_INTERFACE_ENTRY(IRowset)
   COM_INTERFACE_ENTRY_CHAIN(_RowsetBaseClass)
END_COM_MAP()
</code></pre>
<p>
Finally, link <code>RAgentRowset</code> to <code>CMyRowsetBaseImpl</code> by modifying <code>RAgentRowset</code> to inherit from <code>CMyRowsetImpl</code>, as shown here:</p>
<pre><code>class RAgentRowset : public CMyRowsetImpl&lt;RAgentRowset, CAgentMan, CMyProviderCommand&gt;
</code></pre>
<p>
<code>RAgentRowset</code> can now use the <code>IRowsetLocate</code> interface while taking advantage of the rest of the implementation for the rowset class.</p>
<p>
When this is done, you are ready to <a href="vchowimplementingirowsetlocateimpl.htm">implement IRowsetLocateImpl</a>.</p>
</font></BODY>
</HTML>
