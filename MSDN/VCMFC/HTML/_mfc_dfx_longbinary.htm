<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DFX_LongBinary</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_dfx_longbinary"></a>DFX_LongBinary</h1>
<p>
<b>void</b> <b>AFXAPI</b> <b>DFX_LongBinary(</b> <b>CDaoFieldExchange*</b> <i>pFX</i><b>,</b> <b>LPCTSTR</b> <i>szName</i><b>,</b> <b>CLongBinary&amp;</b> <i>value</i><b>,</b> <b>DWORD </b><i>dwPreAllocLength</i> <b>= AFX_DAO_LONGBINARY_DEFAULT_SIZE, DWORD</b> <i>dwBindOptions</i> <b>= 0</b> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pFX</i></p>
<p class=indent>
A pointer to an object of class <a href="_mfc_cdaofieldexchange.htm">CDaoFieldExchange</a>. This object contains information to define the context for each call of the function. For more information about the operations a <b>CDaoFieldExchange</b> object can specify, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Record_Field_Exchange.3a_.How_DFX_Works">
</object><a href=JavaScript:alink_1.Click()>DAO Record Field Exchange: How DFX Works</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p class=dt>
<i>szName</i></p>
<p class=indent>
The name of a data column.</p>
<p class=dt>
<i>value</i></p>
<p class=indent>
The value stored in the indicated data member — the value to be transferred. For a transfer from recordset to data source, the value, of type <a href="_mfc_clongbinary.htm">CLongBinary</a>, is taken from the specified data member. For a transfer from data source to recordset, the value is stored in the specified data member.</p>
<p class=dt>
<i>nPreAllocSize</i></p>
<p class=indent>
The framework preallocates this amount of memory. If your data is larger, the framework will allocated more space as needed. For better performance, set this size to a value large enough to prevent reallocations.</p>
<p class=dt>
<i>dwBindOptions</i></p>
<p class=indent>
An option that lets you take advantage of MFC’s double buffering mechanism for detecting recordset fields that have changed. The default, <b>AFX_DISABLE_FIELD_CACHE</b>, does not use double buffering. The other possible value is <b>AFX_DAO_ENABLE_FIELD_CACHE</b>. Uses double buffering, and you do not have to do extra work to mark fields dirty or Null. For performance and memory reasons, avoid this value unless your binary data is relatively small.</p>
<p class=tl>
These options are explained further in the article <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Recordset.3a_.Binding_Records_Dynamically">
</object><a href=JavaScript:alink_2.Click()>DAO Recordset: Binding Records Dynamically</a> in <i>Visual C++ Programmer's Guide</i>.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can control whether data is double buffered by default by setting <a href="_mfc_cdaorecordset.3a3a.m_bcheckcachefordirtyfields.htm">CDaoRecordset::m_bCheckCacheForDirtyFields</a>.</p><p class=label>
<b>Remarks</b></p>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;It is recommended that you use <a href="_mfc_dfx_binary.htm">DFX_Binary</a> instead of this function. <b>DFX_LongBinary</b> is provided for compatibility with the MFC ODBC classes.</p>
<p>
The <b>DFX_LongBinary</b> function transfers binary large object (BLOB) data using class <b>CLongBinary</b> between the field data members of a <a href="_mfc_cdaorecordset.htm">CDaoRecordset</a> object and the columns of a record on the data source. Data is mapped between type <b>DAO_BYTES</b> in DAO and type <a href="_mfc_clongbinary.htm">CLongBinary</a> in the recordset.</p>
<p class=label>
<b>Example</b></p>
<p>
See <a href="_mfc_dfx_text.htm">DFX_Text</a>.</p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_dfx_text.htm">DFX_Text</a>, <a href="_mfc_dfx_bool.htm">DFX_Bool</a>, <a href="_mfc_dfx_currency.htm">DFX_Currency</a>, <a href="_mfc_dfx_long.htm">DFX_Long</a>, <a href="_mfc_dfx_short.htm">DFX_Short</a>, <a href="_mfc_dfx_single.htm">DFX_Single</a>, <a href="_mfc_dfx_double.htm">DFX_Double</a>, <a href="_mfc_dfx_datetime.htm">DFX_DateTime</a>, <a href="_mfc_dfx_byte.htm">DFX_Byte</a>, <a href="_mfc_cdaofieldexchange.3a3a.setfieldtype.htm">CDaoFieldExchange::SetFieldType</a>, <a href="_mfc_clongbinary.htm">CLongBinary</a></p>
</font></BODY>
</HTML>
