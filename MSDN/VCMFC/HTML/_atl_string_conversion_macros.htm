<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>String Conversion Macros</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_string_conversion_macros"></a>String Conversion Macros</h1>
<p>
The string conversion macros discussed here are valid for both ATL and MFC. For more information on MFC string conversion, see <a href="_mfcnotes_tn059.htm">TN059: Using MFC MBCS/Unicode Conversion Macros</a> and <a href="_mfc_mfc_macros_and_globals.htm">MFC Macros and Globals</a>.</p>
<p>
The syntax of the string-conversion macros is:</p>
<p>
<b>MACRONAME( </b><i>string_address </i><b>)</b></p>
<p>
For example:</p>
<p>
<b>A2W(</b><i>lpa</i><b>)</b></p>
<p>
In the macro names, the source string type is on the left (for example, <b>A</b>) and the destination string type is on the right (for example, <b>W</b>). <b>A</b> stands for <b>LPSTR</b>, <b>OLE</b> stands for <b>LPOLESTR</b>, <b>T</b> stands for <b>LPTSTR</b>, and <b>W</b> stands for <b>LPWSTR</b>.</p>
<p>
Thus, <b>A2W</b> converts an <b>LPSTR</b> to an <b>LPWSTR</b>, <b>OLE2T</b> converts an <b>LPOLESTR</b> to an <b>LPTSTR</b>, and so on.</p>
<p>
The destination string is created using _<b>alloca</b>, except when the destination type is <b>BSTR</b>. Using _<b>alloca</b> allocates memory off the stack, so that when your function returns, it is automatically cleaned up.</p>
<p>
If there is a <b>C</b> in the macro name, the macro converts to a <b>const</b> string. For example, <b>W2CA</b> converts an <b>LPWSTR</b> to an <b>LPCSTR</b>.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When using an ATL string conversion macro, specify the <b>USES_CONVERSION</b> macro at the beginning of your function in order to avoid compiler errors. For example:</p>
<pre><code>void func( LPSTR lpsz )
{
 &nbsp; USES_CONVERSION;
 &nbsp; ...
 &nbsp; LPWSTR x = A2W(lpsz)
 &nbsp; // Do something with x
 &nbsp; ...
}
</code></pre>
<p>
The behavior of the ATL string conversion macros depends on the compiler directive in effect, if any. If the source and destination types are the same, no conversion takes place. Compiler directives change <b>T</b> and <b>OLE</b> as follows:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=44%><b>Compiler directive in effect</b></td>
<td class=label width=33%><b>T becomes</b></td>
<td class=label width=23%><b>OLE becomes</b></td>
</tr>
<tr valign=top>
<td width=44%>none</td>
<td width=33%><b>A</b></td>
<td width=23%><b>W</b></td>
</tr>
<tr valign=top>
<td width=44%><b>_UNICODE</b></td>
<td width=33%><b>W</b></td>
<td width=23%><b>W</b></td>
</tr>
<tr valign=top>
<td width=44%><b>OLE2ANSI</b></td>
<td width=33%><b>A</b></td>
<td width=23%><b>A</b></td>
</tr>
<tr valign=top>
<td width=44%><b>_UNICODE</b> and <b>OLE2ANSI</b></td>
<td width=33%><b>W</b></td>
<td width=23%><b>A</b></td>
</tr>
</table><br>
<p>
The following table lists the ATL string conversion macros.</p>
<p class=label>
<b>ATL String Conversion Macros</b></p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td width=25%><b>A2BSTR</b></td>
<td width=25%><b>OLE2A</b></td>
<td width=25%><b>T2A</b></td>
<td width=25%><b>W2A</b></td>
</tr>
<tr valign=top>
<td width=25%><b>A2COLE</b></td>
<td width=25%><b>OLE2BSTR</b></td>
<td width=25%><b>T2BSTR</b></td>
<td width=25%><b>W2BSTR</b></td>
</tr>
<tr valign=top>
<td width=25%><b>A2CT</b></td>
<td width=25%><b>OLE2CA</b></td>
<td width=25%><b>T2CA</b></td>
<td width=25%><b>W2CA</b></td>
</tr>
<tr valign=top>
<td width=25%><b>A2CW</b></td>
<td width=25%><b>OLE2CT</b></td>
<td width=25%><b>T2COLE</b></td>
<td width=25%><b>W2COLE</b></td>
</tr>
<tr valign=top>
<td width=25%><b>A2OLE</b></td>
<td width=25%><b>OLE2CW</b></td>
<td width=25%><b>T2CW</b></td>
<td width=25%><b>W2CT</b></td>
</tr>
<tr valign=top>
<td width=25%><b>A2T</b></td>
<td width=25%><b>OLE2T</b></td>
<td width=25%><b>T2OLE</b></td>
<td width=25%><b>W2OLE</b></td>
</tr>
<tr valign=top>
<td width=25%><b>A2W</b></td>
<td width=25%><b>OLE2W</b></td>
<td width=25%><b>T2W</b></td>
<td width=25%><b>W2T</b></td>
</tr>
</table><br>
<p>
<a href="_atl_atl_macros_and_global_functions.htm">ATL Macros and Global Functions</a></p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="_atl_devmode_and_textmetric_string_conversion_macros.htm">DEVMODE and TEXTMETRIC String Conversion Macros</a></p>
</font></BODY>
</HTML>
