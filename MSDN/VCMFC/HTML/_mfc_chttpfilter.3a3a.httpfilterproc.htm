<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CHttpFilter::HttpFilterProc</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_chttpfilter.3a3a.httpfilterproc"></a>CHttpFilter::HttpFilterProc</h1>
<p>
<b>virtual DWORD HttpFilterProc( PHTTP_FILTER_CONTEXT </b><i>pfc</i><b>, DWORD </b><i>NotificationType</i><b>, LPVOID </b><i>pvNotification</i><b> );</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Indicates how the application handled the event. Indicated by a <i>dwFlags</i> value; see <a href="_mfc_chttpfilter.3a3a.getfilterversion.htm">GetFilterVersion</a> <b>Remarks</b> for a list of these values.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pfc</i></p>
<p class=indent>
A pointer to an <a href="_mfc_http_filter_context_structure.htm">HTTP_FILTER_CONTEXT</a> structure. The <b>HTTP_FILTER_CONTEXT</b> structure pointed to by this parameter contains context information. The <i>pfc</i> structure member can be used by the filter to associate any context information with the HTTP request. The <b>SF_NOTIFY_END_OF_NET_SESSION</b> notification can be used to release any such context information.</p>
<p class=dt>
<i>NotificationType</i></p>
<p class=indent>
Indicates the type of event being processed. Valid types are listed in <a href="_mfc_chttpfilter.3a3a.getfilterversion.htm">GetFilterVersion</a>.</p>
<p class=dt>
<i>pvNotification</i></p>
<p class=indent>
A notification-specific structure.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=41%><b>Notification Type</b></td>
<td class=label width=35%><b><i>pvNotification </i>points to</b></td>
<td class=label width=24%><b>MFC Calls</b></td>
</tr>
<tr valign=top>
<td width=41%><b>SF_NOTIFY_READ_RAW_DATA</b></td>
<td width=35%><a href="_mfc_http_filter_raw_data_structure.htm">HTTP_FILTER_RAW_DATA</a></td>
<td width=24%><a href="_mfc_chttpfilter.3a3a.onreadrawdata.htm">OnReadRawData</a></td>
</tr>
<tr valign=top>
<td width=41%><b>SF_NOTIFY_SEND_RAW_DATA</b></td>
<td width=35%><a href="_mfc_http_filter_raw_data_structure.htm">HTTP_FILTER_RAW_DATA</a></td>
<td width=24%><a href="_mfc_chttpfilter.3a3a.onsendrawdata.htm">OnSendRawData</a></td>
</tr>
<tr valign=top>
<td width=41%><b>SF_NOTIFY_PREPROC_HEADERS</b></td>
<td width=35%><a href="_mfc_http_filter_preproc_headers_structure.htm">HTTP_FILTER_PREPROC_HEADERS</a></td>
<td width=24%><a href="_mfc_chttpfilter.3a3a.onpreprocheaders.htm">OnPreprocHeaders</a></td>
</tr>
<tr valign=top>
<td width=41%><b>SF_NOTIFY_AUTHENTICATION</b></td>
<td width=35%><a href="_mfc_http_filter_authent_structure.htm">HTTP_FILTER_AUTHENT</a></td>
<td width=24%><a href="_mfc_chttpfilter.3a3a.onauthentication.htm">OnAuthentication</a></td>
</tr>
<tr valign=top>
<td width=41%><b>SF_NOTIFY_URL_MAP</b></td>
<td width=35%><a href="_mfc_http_filter_url_map_structure.htm">HTTP_FILTER_URL_MAP</a></td>
<td width=24%><a href="_mfc_chttpfilter.3a3a.onurlmap.htm">OnUrlMap</a></td>
</tr>
<tr valign=top>
<td width=41%><b>SF_NOTIFY_LOG</b></td>
<td width=35%><a href="_mfc_http_filter_log_structure.htm">HTTP_FILTER_LOG</a></td>
<td width=24%><a href="_mfc_chttpfilter.3a3a.onlog.htm">OnLog</a></td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
This member function is called by the framework to process data every time it passes through the filter. <b>HttpFilterProc</b> will call the appropriate <b>CHttpFilter</b> member functions, depending on the notification types given. For example, <b>HttpFilterProc</b> will call <a href="_mfc_chttpfilter.3a3a.onpreprocheaders.htm">OnPreprocHeaders</a> if the notification type is <b>SF_NOTIFY_PREPROC_HEADERS</b>.</p>
<p>
<b>HttpFilterProc</b> is where the core work of the ISAPI filter applications is done. The various structures pointed to by <i>pvNotification</i> (listed in the table above) contain data and function pointers specific to these operations. See the structure details for more information about how data is processed by <b>HttpFilterProc</b>. </p>
<p>
You can override the individual handlers (listed in the third column, above) to change the way data in their associated structures is processed.</p>
<p>
<a href="_mfc_chttpfilter.htm">CHttpFilter Overview</a>  |&nbsp; <a href="_mfc_chttpfilter_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_http_filter_context_structure.htm">HTTP_FILTER_CONTEXT</a>, <a href="_mfc_http_filter_authent_structure.htm">HTTP_FILTER_AUTHENT</a>, <a href="_mfc_http_filter_preproc_headers_structure.htm">HTTP_FILTER_PREPROC_HEADERS</a>, <a href="_mfc_http_filter_raw_data_structure.htm">HTTP_FILTER_RAW_DATA</a>, <a href="_mfc_http_filter_url_map_structure.htm">HTTP_FILTER_URL_MAP</a>, <a href="_mfc_http_filter_log_structure.htm">HTTP_FILTER_LOG</a></p>
</font></BODY>
</HTML>
