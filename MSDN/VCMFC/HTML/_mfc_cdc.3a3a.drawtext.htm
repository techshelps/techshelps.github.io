<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDC::DrawText</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdc.3a3a.drawtext"></a><sup></sup>CDC::DrawText&nbsp; </h1>
<p>
<b>virtual</b> <b>int</b> <b>DrawText(</b> <b>LPCTSTR</b> <i>lpszString</i><b>,</b> <b>int</b> <i>nCount</i><b>,</b> <b>LPRECT</b> <i>lpRect</i><b>,</b> <b>UINT</b> <i>nFormat</i> <b>);</b></p>
<p>
<b>int DrawText( const CString&amp; </b><i>str</i><b>, LPRECT </b><i>lpRect</i><b>, UINT </b><i>nFormat</i><b> );</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
The height of the text if the function is successful.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>lpszString</i></p>
<p class=indent>
Points to the string to be drawn. If <i>nCount</i> is –1, the string must be null-terminated.</p>
<p class=dt>
<i>nCount</i></p>
<p class=indent>
Specifies the number of chars in the string. If <i>nCount</i> is –1, then <i>lpszString</i> is assumed to be a long pointer to a null-terminated string and <b>DrawText</b> computes the character count automatically.</p>
<p class=dt>
<i>lpRect</i></p>
<p class=indent>
Points to a <a href="_mfc_rect_structure.htm">RECT</a> structure or <a href="_mfc_crect.htm">CRect</a> object that contains the rectangle (in logical coordinates) in which the text is to be formatted.</p>
<p class=dt>
<i>str</i></p>
<p class=indent>
&nbsp;A <a href="_mfc_cstring.htm">CString</a> object that contains the specified characters to be drawn.</p>
<p class=dt>
<i>nFormat</i></p>
<p class=indent>
Specifies the method of formatting the text. It can be any combination of the following values (combine using the bitwise OR operator):
<ul type=disc>
<li>
<b>DT_BOTTOM</b>&nbsp;&nbsp;&nbsp;Specifies bottom-justified text. This value must be combined with <b>DT_SINGLELINE</b>.<br><br></li>
<li>
<b>DT_CALCRECT</b>&nbsp;&nbsp;&nbsp;Determines the width and height of the rectangle. If there are multiple lines of text, <b>DrawText</b> will use the width of the rectangle pointed to by <i>lpRect</i> and extend the base of the rectangle to bound the last line of text. If there is only one line of text, <b>DrawText</b> will modify the right side of the rectangle so that it bounds the last character in the line. In either case, <b>DrawText</b> returns the height of the formatted text, but does not draw the text.<br><br></li>
<li>
<b>DT_CENTER</b>&nbsp;&nbsp;&nbsp;Centers text horizontally.<br><br></li>
<li>
<b>DT_END_ELLIPSIS</b> or <b>DT_PATH_ELLIPSIS&nbsp;&nbsp;&nbsp;</b>Replaces part of the given string with ellipses, if necessary, so that the result fits in the specified rectangle. The given string is not modified unless the <b>DT_MODIFYSTRING</b> flag is specified.<p class=tl>
You can specify <b>DT_END_ELLIPSIS</b> to replace characters at the end of the string, or <b>DT_PATH_ELLIPSIS</b> to replace characters in the middle of the string. If the string contains backslash (\) characters, <b>DT_PATH_ELLIPSIS</b> preserves as much as possible of the text after the last backslash.</P></li>
<li>
<b>DT_EXPANDTABS</b>&nbsp;&nbsp;&nbsp;Expands tab characters. The default number of characters per tab is eight.<br><br></li>
<li>
<b>DT_EXTERNALLEADING</b>&nbsp;&nbsp;&nbsp;Includes the font’s external leading in the line height. Normally, external leading is not included in the height of a line of text.<br><br></li>
<li>
<b>DT_LEFT</b>&nbsp;&nbsp;&nbsp;Aligns text flush-left.<br><br></li>
<li>
<b>DT_MODIFYSTRING&nbsp;&nbsp;&nbsp;</b>Modifies the given string to match the displayed text. This flag has no effect unless the <b>DT_END_ELLIPSIS</b> or <b>DT_PATH_ELLIPSIS</b> flag is specified.<p class=atl>
<B><b>Note</b></B>  Some <i>uFormat</i> flag combinations can cause the passed string to be modified. Using <b>DT_MODIFYSTRING</b> with either <b>DT_END_ELLIPSIS</b> or <b>DT_PATH_ELLIPSIS</b> may cause the string to be modified, causing an assertion in the <b>CString</b> override.</p><p class=atl>
</p></li>
<li>
<b>DT_NOCLIP</b>&nbsp;&nbsp;&nbsp;Draws without clipping. <b>DrawText</b> is somewhat faster when <b>DT_NOCLIP</b> is used.<br><br></li>
<li>
<b>DT_NOPREFIX</b>&nbsp;&nbsp;&nbsp;Turns off processing of prefix characters. Normally, <b>DrawText</b> interprets the ampersand (<b>&amp;</b>) mnemonic-prefix character as a directive to underscore the character that follows, and the two-ampersand (<b>&amp;&amp;</b>) mnemonic-prefix characters as a directive to print a single ampersand. By specifying <b>DT_NOPREFIX</b>, this processing is turned off.<br><br></li>
<li>
<b>DT_PATH_ELLIPSIS&nbsp;&nbsp;&nbsp;</b><br><br></li>
<li>
<b>DT_RIGHT</b>&nbsp;&nbsp;&nbsp;Aligns text flush-right.<br><br></li>
<li>
<b>DT_SINGLELINE</b>&nbsp;&nbsp;&nbsp;Specifies single line only. Carriage returns and linefeeds do not break the line.<br><br></li>
<li>
<b>DT_TABSTOP</b>&nbsp;&nbsp;&nbsp;Sets tab stops. The high-order byte of <i>nFormat</i> is the number of characters for each tab. The default number of characters per tab is eight.<br><br></li>
<li>
<b>DT_TOP</b>&nbsp;&nbsp;&nbsp;Specifies top-justified text (single line only).<br><br></li>
<li>
<b>DT_VCENTER</b>&nbsp;&nbsp;&nbsp;Specifies vertically centered text (single line only).<br><br></li>
<li>
<b>DT_WORDBREAK</b>&nbsp;&nbsp;&nbsp;Specifies word-breaking. Lines are automatically broken between words if a word would extend past the edge of the rectangle specified by <i>lpRect</i>. A carriage return–linefeed sequence will also break the line.</li>
</ul>
<p class=indent>
<B><b>Note&nbsp; </b></B>The values <b>DT_CALCRECT</b>, <b>DT_EXTERNALLEADING</b>, <b>DT_INTERNAL</b>, <b>DT_NOCLIP</b>, and <b>DT_NOPREFIX</b> cannot be used with the <b>DT_TABSTOP</b> value.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to format text in the given rectangle. It formats text by expanding tabs into appropriate spaces, aligning text to the left, right, or center of the given rectangle, and breaking text into lines that fit within the given rectangle. The type of formatting is specified by <i>nFormat</i>. </p>
<p>
This member function uses the device context’s selected font, text color, and background color to draw the text. Unless the <b>DT_NOCLIP</b> format is used, <b>DrawText</b> clips the text so that the text does not appear outside the given rectangle. All formatting is assumed to have multiple lines unless the <b>DT_SINGLELINE</b> format is given. </p>
<p>
If the selected font is too large for the specified rectangle, the <b>DrawText</b> member function does not attempt to substitute a smaller font.</p>
<p>
If the <b>DT_CALCRECT</b> flag is specified, the rectangle specified by <i>lpRect</i> will be updated to reflect the width and height needed to draw the text.</p>
<p>
If the <b>TA_UPDATECP</b> text-alignment flag has been set (see <a href="_mfc_cdc.3a3a.settextalign.htm">CDC::SetTextAlign</a>), <b>DrawText</b> will display text starting at the current position, rather than at the left of the given rectangle. <b>DrawText</b> will not wrap text when the <b>TA_UPDATECP</b> flag has been set (that is, the <b>DT_WORDBREAK</b> flag will have no effect).</p>
<p>
The text color may be set by <a href="_mfc_cdc.3a3a.settextcolor.htm">CDC::SetTextColor</a>.</p>
<p>
<a href="_mfc_cdc.htm">CDC Overview</a>  |&nbsp; <a href="_mfc_cdc_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdc.3a3a.settextcolor.htm">CDC::SetTextColor</a>, <a href="_mfc_cdc.3a3a.exttextout.htm">CDC::ExtTextOut</a>, <a href="_mfc_cdc.3a3a.tabbedtextout.htm">CDC::TabbedTextOut</a>, <a href="_mfc_cdc.3a3a.textout.htm">CDC::TextOut</a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_DrawText">
</object><a href=JavaScript:alink_1.Click()>::DrawText</a>, <a href="_mfc_rect_structure.htm">RECT</a>, <a href="_mfc_cdc.3a3a.settextalign.htm">CDC::SetTextAlign</a></p>
</font></BODY>
</HTML>
