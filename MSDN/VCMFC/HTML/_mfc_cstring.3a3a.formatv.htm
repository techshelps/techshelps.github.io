<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CString::FormatV</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cstring.3a3a.formatv"></a>CString::FormatV</h1>
<p>
<b>void FormatV( LPCTSTR </b><i>lpszFormat</i><b>, va_list </b><i>argList</i><b> );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>lpszFormat</i></p>
<p class=indent>
A format-control string.</p>
<p class=dt>
<i>argList</i></p>
<p class=indent>
A list of arguments to be passed.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to write a formatted string and a variable list of arguments to a <b>CString</b> object in the same way that <b>vsprintf</b> formats data into a C-style character array. This function formats and stores a series of characters and values in the <b>CString</b>. The string and arguments are converted and output according to the corresponding format specification in <i>lpszFormat</i>. </p>
<p>
The call will fail if the string object itself is offered as a parameter to <b>FormatV</b>. For example, the following code:</p>
<pre><code>CString str = "Some Data";
str.FormatV("%s%d", str, 123);&nbsp;&nbsp; // Attention: str is also used in the parameter list.
</code></pre>
<p>
will cause unpredictable results.</p>
<p>
For more information, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_CRT_vsprintf.2c_.vswprintf">
</object><a href=JavaScript:alink_1.Click()>vsprintf</a> in the <i>Run-Time Library Reference</i>.</p>
<p class=label>
<b>Example</b></p>
<pre><code>//Using CString::FormatV(), you can write functions like the following:

void WriteLogEntry(CStdioFile&amp; refFile, LPCTSTR pstrFormat, ...)
{
 &nbsp; CTime timeWrite;
 &nbsp; timeWrite = CTime::GetCurrentTime();

 &nbsp; // write the time out
 &nbsp; CString str = timeWrite.Format("%d %b %y %H:%M:%S - ");
 &nbsp; refFile.Write(str, str.GetLength());

 &nbsp; // format and write the data we were given
 &nbsp; va_list args;
 &nbsp; va_start(args, pstrFormat);
 &nbsp; str.FormatV(pstrFormat, args);
 &nbsp; refFile.Write(str, str.GetLength());

 &nbsp; // put a newline
 &nbsp; refFile.Write("\n", 1);
 &nbsp; return;
}
</code></pre>
<p>
You can call the above function with any number of parameters, for example:</p>
<pre><code>&nbsp;&nbsp;&nbsp;WriteLogEntry(fileLog, "Program started");
 &nbsp; WriteLogEntry(fileLog, "Processed %d bytes", 91341);
 &nbsp; WriteLogEntry(fileLog, "%d error(s) found in %d line(s)", 10, 1351);
 &nbsp; WriteLogEntry(fileLog, "Program completed");
</code></pre>
<p>
which would add output&nbsp; to your fileLog file similar to the following:</p>
<pre><code>&nbsp;&nbsp;&nbsp;17 Apr 97 12:34:53 - Program started
 &nbsp; 17 Apr 97 12:34:59 - Processed 91341 bytes
 &nbsp; 17 Apr 97 12:35:22 - 10 error(s) found in 1351 line(s)
 &nbsp; 17 Apr 97 12:35:23 - Program completed
</code></pre>
<p>
<a href="_mfc_cstring.htm">CString Overview</a>  |&nbsp; <a href="_mfc_cstring_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cstring.3a3a.format.htm">CString::Format</a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_crt_va_arg.2c_.va_end.2c_.va_start">
</object><a href=JavaScript:alink_2.Click()>va_start</a></p>
</font></BODY>
</HTML>
