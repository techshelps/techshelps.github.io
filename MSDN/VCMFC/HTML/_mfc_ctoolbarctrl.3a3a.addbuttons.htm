<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CToolBarCtrl::AddButtons</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_ctoolbarctrl.3a3a.addbuttons"></a>CToolBarCtrl::AddButtons</h1>
<p>
<b>BOOL</b> <b>AddButtons(</b> <b>int</b> <i>nNumButtons</i><b>,</b> <b>LPTBBUTTON</b> <i>lpButtons</i> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if successful; otherwise zero.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nNumButtons</i></p>
<p class=indent>
Number of buttons to add.</p>
<p class=dt>
<i>lpButtons</i></p>
<p class=indent>
Address of an array of <b>TBBUTTON</b> structures that contains information about the buttons to add. There must be the same number of elements in the array as buttons specified by <i>nNumButtons</i>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this function to add one or more buttons to a toolbar control.</p>
<p>
The <i>lpButtons</i> pointer points to an array of <b>TBBUTTON</b> structures. Each <b>TBBUTTON</b> structure associates the button being added with the button’s style, image and/or string, command ID, state, and user-defined data:</p>
<pre><code>typedef struct _TBBUTTON {
int iBitmap;// zero-based index of button image
int idCommand;&nbsp; // command to be sent when button pressed
BYTE fsState;&nbsp;&nbsp; // button state--see below
BYTE fsStyle;&nbsp;&nbsp; // button style--see below
DWORD dwData;&nbsp;&nbsp; // application-defined value
int iString;// zero-based index of button label string
} TBBUTTON;
</code></pre>
<p>
The members are as follows:</p>
<p class=dt>
<b>iBitmap</b></p>
<p class=indent>
Zero-based index of button image. <b>NULL</b> if no image for this button.</p>
<p class=dt>
<b>idCommand</b></p>
<p class=indent>
Command identifier associated with the button. This identifier is sent in a <b>WM_COMMAND</b> message when the button is chosen. If the <b>fsStyle</b> member has the <b>TBSTYLE_SEP</b> value, this member must be zero.</p>
<p class=dt>
<b>fsState</b></p>
<p class=indent>
Button state flags. It can be a combination of the values listed below:
<ul type=disc>
<li>
<b>TBSTATE_CHECKED</b>&nbsp;&nbsp;&nbsp;The button has the <b>TBSTYLE_CHECKED</b> style and is being pressed. <br><br></li>
<li>
<b>TBSTATE_ENABLED</b>&nbsp;&nbsp;&nbsp;The button accepts user input. A button that does not have this state does not accept user input and is grayed.<br><br></li>
<li>
<b>TBSTATE_HIDDEN</b>&nbsp;&nbsp;&nbsp;The button is not visible and cannot receive user input.<br><br></li>
<li>
<b>TBSTATE_INDETERMINATE</b>&nbsp;&nbsp;&nbsp;The button is grayed.<br><br></li>
<li>
<b>TBSTATE_PRESSED</b>&nbsp;&nbsp;&nbsp;The button is being pressed.<br><br></li>
<li>
<b>TBSTATE_WRAP</b>&nbsp;&nbsp;&nbsp;A line break follows the button. The button must also have the <b>TBSTATE_ENABLED</b> state.</li>
</ul>
<p class=dt>
<b>fsStyle</b></p>
<p class=indent>
Button style. It can be a combination of the values listed below:
<ul type=disc>
<li>
<b>TBSTYLE_BUTTON</b>&nbsp;&nbsp;&nbsp;Creates a standard push button. <br><br></li>
<li>
<b>TBSTYLE_CHECK</b>&nbsp;&nbsp;&nbsp;Creates a button that toggles between the pressed and unpressed states each time the user clicks it. The button has a different background color when it is in the pressed state.&nbsp; <br><br></li>
<li>
<b>TBSTYLE_CHECKGROUP</b>&nbsp;&nbsp;&nbsp;Creates a check button that stays pressed until another button in the group is pressed.<br><br></li>
<li>
<b>TBSTYLE_GROUP</b>&nbsp;&nbsp;&nbsp;Creates a button that stays pressed until another button in the group is pressed.<br><br></li>
<li>
<b>TBSTYLE_SEP</b>&nbsp;&nbsp;&nbsp;Creates a separator, providing a small gap between button groups. A button that has this style does not receive user input.</li>
</ul>
<p class=dt>
<b>dwData</b></p>
<p class=indent>
User-defined data.</p>
<p class=dt>
<b>iString</b></p>
<p class=indent>
Zero-based index of the string to use as the button’s label. <b>NULL</b> if there is no string for this button.</p>
<p>
The image and/or string whose index you provide must have previously been added to the toolbar control’s list using <a href="_mfc_ctoolbarctrl.3a3a.addbitmap.htm">AddBitmap</a>, <a href="_mfc_ctoolbarctrl.3a3a.addstring.htm">AddString</a>, and/or <a href="_mfc_ctoolbarctrl.3a3a.addstrings.htm">AddStrings</a>.</p>
<p>
<a href="_mfc_ctoolbarctrl.htm">CToolBarCtrl Overview</a>  |&nbsp; <a href="_mfc_ctoolbarctrl_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_ctoolbarctrl.3a3a.insertbutton.htm">CToolBarCtrl::InsertButton</a>, <a href="_mfc_ctoolbarctrl.3a3a.deletebutton.htm">CToolBarCtrl::DeleteButton</a>, <a href="_mfc_ctoolbarctrl.3a3a.addbitmap.htm">CToolBarCtrl::AddBitmap</a>, <a href="_mfc_ctoolbarctrl.3a3a.addstring.htm">CToolBarCtrl::AddString</a>, <a href="_mfc_ctoolbarctrl.3a3a.addstrings.htm">CToolBarCtrl::AddStrings</a></p>
</font></BODY>
</HTML>
