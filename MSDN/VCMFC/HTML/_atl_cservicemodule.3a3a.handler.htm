<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CServiceModule::Handler</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_atl_cservicemodule.3a3a.handler"></a>CServiceModule::Handler</h1>
<p>
<b>CServiceModule::Handler</b> is the routine that the SCM calls to retrieve the status of the service and give it various instructions (such as stopping or pausing). The SCM passes an operation code to <b>Handler</b> to indicate what the service should do. A default ATL-generated service only handles the stop instruction. If the SCM passes the stop instruction, the service tells the SCM that the program is about to stop. The service then calls <b>PostThreadMessage</b> to post a quit message to itself. This terminates the message loop and the service will ultimately close.</p>
<p>
To handle more instructions, you need to change the <b>dwControlsAccepted</b> data member initialized in the <b>CServiceModule::Init</b> function. This data member tells the SCM which buttons to enable when the service is selected in the Services Control Panel application.</p>
</font></BODY>
</HTML>
