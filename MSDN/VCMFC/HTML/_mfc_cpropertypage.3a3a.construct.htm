<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CPropertyPage::Construct</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cpropertypage.3a3a.construct"></a>CPropertyPage::Construct</h1>
<p>
<b>void Construct( UINT </b><i>nIDTemplate</i><b>, UINT </b><i>nIDCaption</i><b> = 0 );</b></p>
<p>
<b>void Construct( LPCTSTR </b><i>lpszTemplateName</i><b>, UINT </b><i>nIDCaption</i><b> = 0 );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nIDTemplate</i></p>
<p class=indent>
ID of the template used for this page.</p>
<p class=dt>
<i>nIDCaption</i></p>
<p class=indent>
ID of the name to be placed in the tab for this page. If 0, the name will be taken from the dialog template for this page.</p>
<p class=dt>
<i>lpszTemplateName</i></p>
<p class=indent>
Contains a null-terminated string that is the name of a template resource.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to construct a <b>CPropertyPage</b> object. The object is displayed after all of the following conditions are met:
<ul type=disc>
<li>
The page has been added to a property sheet using <a href="_mfc_cpropertysheet.3a3a.addpage.htm">CPropertySheet::AddPage</a>.<br><br></li>
<li>
The property sheet’s <a href="_mfc_cpropertysheet.3a3a.domodal.htm">DoModal</a> or <a href="_mfc_cpropertysheet.3a3a.create.htm">Create</a> function has been called.<br><br></li>
<li>
The user has selected (tabbed to) this page.</li>
</ul>
<p>
Call <b>Construct </b>if one of the other class constructors has not been called. The <b>Construct</b> member function is flexible because you can leave the parameter statement blank and then specify multiple parameters and construction at any point in your code. </p>
<p>
You must use <b>Construct</b> when you work with arrays, and you must call <b>Construct </b>for each member of the array so that the data members are assigned proper values. </p>
<p>
<a href="_mfc_cpropertypage.htm">CPropertyPage Overview</a>  |&nbsp; <a href="_mfc_cpropertypage_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cpropertypage.3a3a.cpropertypage.htm">CPropertyPage::CPropertyPage</a>, <a href="_mfc_cpropertysheet.3a3a.domodal.htm">CPropertySheet::DoModal</a>, <a href="_mfc_cpropertysheet.3a3a.addpage.htm">CPropertySheet::AddPage</a></p>
</font></BODY>
</HTML>
