<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Porting from ATL 2.1</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcovrportingfromatl2.1"></a>Porting from ATL 2.1</h1>
<h3>IObjectSafetyImpl</h3>
<p>
In ATL 2.1, the <a href="_atl_iobjectsafetyimpl.htm">IObjectSafetyImpl</a> class marked the control as being safe for scripting. For security reasons, this default has been removed, so you must explicitly specify your safety options using the second template parameters. You must now expose this class using <a href="_atl_com_interface_entry.htm">COM_INTERFACE_ENTRY</a> rather than <a href="_atl_com_interface_entry_impl.htm">COM_INTERFACE_ENTRY_IMPL</a>.</p>
<h3>_ATL_NO_UUIDOF</h3>
<p>
ATL 3.0 uses the compiler keyword <b>__uuidof( </b><i>class</i><b> )</b> to obtain the corresponding IID for a given class. Because of changes in the <a href="_atl_com_interface_entry_macros.htm">COM_INTERFACE_ENTRY macros</a>, now you simply include the header for the interface to use, instead of also linking to a library that defines the matching IIDs for that interface. This change can cause problems if the header was previously generated by an old version of MIDL, or if it was hand-coded and not marked appropriately. </p>
<p>
If the declaration for the interface in the header has not been marked with an associated <b>__declspec(uuid)</b>, then any attempt to use the <b>__uuidof()</b> keyword for that interface will fail. You can revert to the old style (ATL 2.x) <b>COM_INTERFACE_ENTRY</b> macros by defining <b>_ATL_NO_UUIDOF</b> in your build settings to work around any problems with this new behavior.</p>
<h3>New _ATL_DEBUG_INTERFACES</h3>
<p>
In addition to <b>_ATL_DEBUG_QI</b> and <b>_ATL_DEBUG_REFCOUNT</b>, present in ATL 2.x, there is the new <b>_ATL_DEBUG_INTERFACES</b>, which will trace to the debug console any interface leaks that are detected when <code>_Module.Term</code> is called (when the server shuts down).</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="_atl_debugging_tips_for_atl_objects.htm">Debugging Tips for ATL Objects</a></p>
<h3>Obsolete Macros</h3>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=41%><b>Macro</b></td>
<td class=label width=59%><b>Comment</b></td>
</tr>
<tr valign=top>
<td width=41%><a href="_atl_com_interface_entry_impl.htm">COM_INTERFACE_ENTRY_IMPL</a></td>
<td width=59%>Obsolete. Replace with <a href="_atl_com_interface_entry.htm">COM_INTERFACE_ENTRY</a>.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_atl_com_interface_entry_impl_iid.htm">COM_INTERFACE_ENTRY_IMPL_IID</a></td>
<td width=59%>Obsolete. Replace with <a href="_atl_com_interface_entry_iid.htm">COM_INTERFACE_ENTRY_IID</a>.</td>
</tr>
<tr valign=top>
<td width=41%><b>CHAIN_MSG_MAP_ALT_DYNAMIC</b></td>
<td width=59%>Obsolete and deleted.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_atl_begin_property_map.htm">BEGIN_PROPERTY_MAP</a></td>
<td width=59%>Obsolete. Use the new property map macro, <a href="vcrefbegin_prop_map.htm">BEGIN_PROP_MAP</a>, as described in <a href="vcovrnewmapsmapentriesdeclares.htm">New Macros</a>.</td>
</tr>
<tr valign=top>
<td width=41%><a href="_atl_end_property_map.htm">END_PROPERTY_MAP</a></td>
<td width=59%>Obsolete. Use the new property map macro, <a href="vcrefend_prop_map.htm">END_PROP_MAP</a>, as described in <a href="vcovrnewmapsmapentriesdeclares.htm">New Macros</a>.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
