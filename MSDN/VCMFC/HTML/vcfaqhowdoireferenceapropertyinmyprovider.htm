<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Do I Reference a Property in My Provider?</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcfaqhowdoireferenceapropertyinmyprovider"></a>How Do I Reference a Property in My Provider?</h1>
<p>
Find the property group and property ID for the property you want. (See <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="oledbole_db_properties">
</object><a href=JavaScript:alink_1.Click()>OLE DB Properties</a> in the <i>OLE DB Programmer's Reference</i>.)</p>
<p>
The following example assumes you are trying to get a property from the rowset. The code for using the session or command is similar, but uses a different interface.</p>
<p>
Create a <a href="vcrefcdbpropset.htm">CDBPropset</a> object using the property group as the parameter to the constructor. For example:</p>
<pre><code>CDBPropSet propset(DBPROPSET_ROWSET);
</code></pre>
<p>
Call <a href="vcrefcdbpropsetaddproperty.htm">AddProperty</a>, passing it the Property ID and a value to be assigned to the property. The type of the value depends on the property you are using.</p>
<pre><code>CDBPropSet propset(DBPROPSET_ROWSET);
propset.AddProperty(DBPROP_IRowsetChange, true);
propset.AddProperty(DBPROP_UPDATABILITY,
DBPROPVAL_UP_INSERT | DBPROPVAL_UP_CHANGE | DBPROPVAL_UP_DELETE);
</code></pre>
<p>
Use the data member <code>m_spUnkSite</code> to get the pointer to the object that created your object.</p>
<pre><code>CAgentRowset&lt;CMyProviderCommand&gt;* pRowset = (CAgentRowset&lt;CMyProviderCommand&gt;*) pThis;

CComQIPtr&lt;IRowsetInfo, &amp;IID_IRowsetInfo&gt; spRowsetProps = pRowset;
</code></pre>
<p>
Use the <b>IRowset</b> interface to call <b>GetProperties</b>. Pass the property set as a parameter. Here's the final code:</p>
<pre><code>CAgentRowset&lt;CMyProviderCommand&gt;* pRowset = (CAgentRowset&lt;CMyProviderCommand&gt;*) pThis;

CComQIPtr&lt;IRowsetInfo, &amp;IID_IRowsetInfo&gt; spRowsetProps = pRowset;

set.AddPropertyID(DBPROP_BOOKMARKS);
DBPROPSET* pPropSet = NULL;
ULONG ulPropSet = 0;
HRESULT hr;

if (spRowsetProps)
   hr = spRowsetProps-&gt;GetProperties(1, &amp;set, &amp;ulPropSet, &amp;pPropSet);

if (pPropSet)
{
   CComVariant var = pPropSet-&gt;rgProperties[0].vValue;
   CoTaskMemFree(pPropSet-&gt;rgProperties);
   CoTaskMemFree(pPropSet);

   if (SUCCEEDED(hr) &amp;&amp; (var.boolVal == VARIANT_TRUE))
   {
      …
   }
}
</code></pre>
</font></BODY>
</HTML>
