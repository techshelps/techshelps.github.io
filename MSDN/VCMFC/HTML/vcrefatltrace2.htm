<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ATLTRACE2</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcrefatltrace2"></a>ATLTRACE2</h1>
<p>
<b>ATLTRACE2( DWORD </b><i>category</i><b>, UINT </b><i>level</i><b>, LPCSTR </b><i>lpszFormat</i><b>, ... )</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>category</i></p>
<p class=indent>
[in] The <a href="vcrefatltraceflags.htm">atlTraceFlags</a> to indicate the type of event or method on which to report. See <b>Remarks</b> for a list of categories.</p>
<p class=dt>
<i>level</i></p>
<p class=indent>
[in] The level of tracing to report. Must be less than or equal to the value you set for <b>ATL_TRACE_LEVEL</b> to appear. For example, if you set <i>level</i> to 4 and <b>ATL_TRACE_LEVEL</b> to 0, you will see no warnings. See <b>Remarks</b> for more information about <b>ATL_TRACE_LEVEL</b>.</p>
<p class=dt>
<i>lpszFormat</i></p>
<p class=indent>
[in] The formatted string to send to the dump device.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Use <b>ATLTRACE2</b> for debugging purposes. <b>ATLTRACE2</b> provides messages about how events and methods happen.&nbsp; <b>ATLTRACE2</b> reports warnings and errors that occur as you debug the program. <b>ATLTRACE2 </b>sends a formatted string, <i>lpszFormat</i>, to a dump device, usually the debugger output window or a file.</p>
<p>
The first parameter for <b>ATLTRACE2</b>, <i>category</i>, lists the trace flags to set. These flags correspond to the types of methods for which you want to report. The table below lists the valid trace flags you can use for the <i>category</i> parameter.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Category</b></td>
<td class=label width=65%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceUser</b></td>
<td width=65%>Application-defined. The value indicates the level of warnings to report.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceGeneral</b></td>
<td width=65%>Reports on all ATL applications. The default.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceCOM</b></td>
<td width=65%>Reports on COM methods. </td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceQI</b></td>
<td width=65%>Reports on QueryInterface calls.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceRegistrar</b></td>
<td width=65%>Reports on the registration of objects.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceRefcount</b></td>
<td width=65%>Reports on changing reference count.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceWindowing</b></td>
<td width=65%>Reports on windows methods, for example reports an invalid message map ID.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceControls</b></td>
<td width=65%>Reports on controls, for example reports when a control or its window is destroyed.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceHosting</b></td>
<td width=65%>Reports hosting messages, for example, when a client in a container is activated.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceDBClient</b></td>
<td width=65%>Reports on OLE DB Consumer Template; for example when a call to GetData fails, the output can contain the <b>HRESULT</b>.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceDBProvider</b></td>
<td width=65%>Reports on OLE DB Provider Template, for example reports if the creation of a column failed.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceSnapin</b></td>
<td width=65%>Reports for MMC SnapIn application.</td>
</tr>
<tr valign=top>
<td width=35%><b>atlTraceNotImpl</b></td>
<td width=65%>Reports that the indicated function is not implemented.</td>
</tr>
</table><br>
<p class=label>
<b>Example</b></p>
<pre><code>// example for ATLTRACE2
int i = 1;
ATLTRACE2( atlTraceGeneral, 4, "Integer = %d\n", i );
// Output: 'Integer = 1'
</code></pre>
<p>
You can filter for specific categories and levels at the project level by setting the two global functions described below. To specify such filtering in the preprocessor definitions, insert the global functions into Stdafx.h before the <code>#include &lt;atlbase.h&gt;</code> statement. </p>
<p>
Alternately, you can set the filter in the preprocessor directives in the <b>Project</b> <b>Settings</b> dialog box. Click the <b>C/C++</b> tab, and then insert the global into the <b>Preprocessor definitions</b> edit box. </p>
<p>
To set the categories and levels, use the following global functions:</p>
<p class=dt>
<b>ATL_TRACE_CATEGORY 0xFFFFFFFF</b></p>
<p class=indent>
Sets the trace category for which to filter. The default, <b>0xFFFFFFFF</b> reports all categories. To filter for a specific category or set of categories, replace <b>0xFFFFFFFF</b> with the category names you want to trace. You can use the bitwise OR (<b>|</b>) operator to filter for more than one category. For example, by setting <b>ATL_TRACE_CATEGORY (atlTraceControls | atlTraceWindowing)</b>, you will see only <b>ATLTRACE2</b> warnings for controls and windowing.</p>
<p class=dt>
<b>ATL_TRACE_LEVEL</b> <b>0</b></p>
<p class=indent>
Sets the trace level for which to filter. Can be 0, 1, 2, 3, or 4. The default, 0, reports only the most serious problems. Replace 0 with the level of reporting you want to see. For example, by specifying 4, you will see all levels of warnings and informational messages.</p>
<p>
<a href="_atl_atl_macros_and_global_functions.htm">ATL Macros and Global Functions</a></p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="_atl_atltrace.htm">ATLTRACE</a>, <a href="vcrefatltraceflags.htm">atlTraceFlags</a> </p>
</font></BODY>
</HTML>
