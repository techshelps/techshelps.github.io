<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWinApp::EnableShellOpen</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwinapp.3a3a.enableshellopen"></a><sup></sup>CWinApp::EnableShellOpen  </h1>
<p>
<b>void EnableShellOpen(</b> <b>);</b></p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this function, typically from your <b>InitInstance</b> override, to enable your application’s users to open data files when they double-click the files from within the Windows File Manager. Call the <b>RegisterShellFileTypes</b> member function in conjunction with this function, or provide a .REG file with your application for manual registration of document types.</p>
<p class=label>
<b>Example</b></p>
<pre><code>BOOL CMyApp::InitInstance()
{
 &nbsp; // ...

 &nbsp; CMultiDocTemplate* pDocTemplate;
 &nbsp; pDocTemplate = new CMultiDocTemplate(
 &nbsp;&nbsp;&nbsp;&nbsp; IDR_MYTYPE,
 &nbsp;&nbsp;&nbsp;&nbsp; RUNTIME_CLASS(CMyDoc),
 &nbsp;&nbsp;&nbsp;&nbsp; RUNTIME_CLASS(CMDIChildWnd),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // standard MDI child frame
 &nbsp;&nbsp;&nbsp;&nbsp; RUNTIME_CLASS(CMyView));
 &nbsp; AddDocTemplate(pDocTemplate);

 &nbsp; // Create main MDI Frame window.
 &nbsp; CMainFrame* pMainFrame = new CMainFrame;
 &nbsp; if (!pMainFrame-&gt;LoadFrame(IDR_MAINFRAME))
 &nbsp;&nbsp;&nbsp;&nbsp; return FALSE;
 &nbsp; // Save the pointer to the main frame window.&nbsp; This is the
 &nbsp; // only way the framework will have knowledge of what the
 &nbsp; // main frame window is.
 &nbsp; m_pMainWnd = pMainFrame;

 &nbsp; // enable file manager drag/drop and DDE Execute open
 &nbsp; EnableShellOpen();
 &nbsp; RegisterShellFileTypes();
 &nbsp; // ...

 &nbsp; // Show the&nbsp;&nbsp; main window using the nCmdShow parameter
 &nbsp; // passed to the application when it was first launched.
 &nbsp; pMainFrame-&gt;ShowWindow(m_nCmdShow);
 &nbsp; pMainFrame-&gt;UpdateWindow();
  
 &nbsp; // ...
}
</code></pre>
<p>
<a href="_mfc_cwinapp.htm">CWinApp Overview</a>  |&nbsp; <a href="_mfc_cwinapp_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cwinapp.3a3a.onddecommand.htm">CWinApp::OnDDECommand</a>, <a href="_mfc_cwinapp.3a3a.registershellfiletypes.htm">CWinApp::RegisterShellFileTypes</a></p>
</font></BODY>
</HTML>
