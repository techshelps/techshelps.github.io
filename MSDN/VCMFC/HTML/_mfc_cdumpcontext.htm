<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDumpContext</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdumpcontext"></a>CDumpContext</h1>
<p>
<b>CDumpContext</b> does not have a base class.</p>
<p>
The <b>CDumpContext</b> class supports stream-oriented diagnostic output in the form of human-readable text. You can use <a href="_mfc_afxdump_variable.htm">afxDump</a>, a predeclared <b>CDumpContext</b> object, for most of your dumping. The <b>afxDump</b> object is available only in the Debug version of the Microsoft Foundation Class Library. </p>
<p>
Several of the <a href="_mfc_diagnostic_services.htm">memory diagnostic functions</a> use <b>afxDump</b> for their output. </p>
<p>
Under the Windows environment, the output from the predefined <b>afxDump</b> object, conceptually similar to the <b>cerr</b> stream, is routed to the debugger via the Windows function <b>OutputDebugString</b>.</p>
<p>
The <b>CDumpContext</b> class has an overloaded insertion (<b>&lt;&lt;</b>) operator for <b>CObject</b> pointers that dumps the object’s data. If you need a custom dump format for a derived object, override <a href="_mfc_cobject.3a3a.dump.htm">CObject::Dump</a>. Most Microsoft Foundation classes implement an overridden <b>Dump</b> member function.</p>
<p>
Classes that are not derived from <b>CObject</b>, such as <b>CString</b>, <b>CTime</b>, and <b>CTimeSpan</b>, have their own overloaded <b>CDumpContext</b> insertion operators, as do often-used structures such as <b>CFileStatus</b>, <b>CPoint</b>, and <b>CRect</b>.</p>
<p>
If you use the <a href="_mfc_implement_dynamic.htm">IMPLEMENT_DYNAMIC</a> or <a href="_mfc_implement_serial.htm">IMPLEMENT_SERIAL</a> macro in the implementation of your class, then <b>CObject::Dump</b> will print the name of your <b>CObject</b>-derived class. Otherwise, it will print <code>CObject</code>.</p>
<p>
The <b>CDumpContext</b> class is available with both the Debug and Release versions of the library, but the <b>Dump</b> member function is defined only in the Debug version. Use <b>#ifdef _DEBUG</b> / <b>#endif</b> statements to bracket your diagnostic code, including your custom <b>Dump</b> member functions.</p>
<p>
Before you create your own <b>CDumpContext</b> object, you must create a <b>CFile</b> object that serves as the dump destination.</p>
<p>
For more information on <b>CDumpContext</b>, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="mfcdebug">
</object><a href=JavaScript:alink_1.Click()>MFC Debugging Support</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p>
<b>#define _DEBUG</b></p>
<p>
<b>#include &lt;afx.h&gt;</b></p>
<p>
<a href="_mfc_cdumpcontext_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cfile.htm">CFile</a>, <a href="_mfc_cobject.htm">CObject</a></p>
</font></BODY>
</HTML>
