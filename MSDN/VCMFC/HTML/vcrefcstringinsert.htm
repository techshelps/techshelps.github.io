<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CString::Insert</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="vcrefcstringinsert"></a>CString::Insert</h1>
<p>
<b>int Insert( int </b><i>nIndex</i><b>, TCHAR </b><i>ch</i><b> )</b><br>
<b>throw( CMemoryException );</b></p>
<p>
<b>int Insert( int </b><i>nIndex</i><b>, LPCTSTR </b><i>pstr</i><b> )<br>
throw( CMemoryException );</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
The length of the changed string. </p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nIndex</i></p>
<p class=indent>
The index of the character before which the insertion will take place.</p>
<p class=dt>
<i>ch</i></p>
<p class=indent>
The character to be inserted.</p>
<p class=dt>
<i>pstr</i></p>
<p class=indent>
A pointer to the substring to be inserted.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to insert a single character or a substring at the given index within the string. The <i>nIndex</i> parameter identifies the first character that will be moved to make room for the character or substring. If <i>nIndex</i> is zero, the insertion will occur before the entire string. If <i>nIndex</i> is higher than the length of the string, the function will concatenate the present string and the new material provided by either <i>ch</i> or <i>pstr</i>.</p>
<p class=label>
<b>Example</b></p>
<pre><code>//The following example demonstrates the use of CString::Insert.
   CString str("HockeyBest");
   int n = str.Insert(6, "is ");
   ASSERT(n == str.GetLength());
   printf("1: %s\n", (LPCTSTR) str);

   n = str.Insert(6, ' ');
   ASSERT(n == str.GetLength());
   printf("2: %s\n", (LPCTSTR) str);

   n = str.Insert(555, '!');
   ASSERT(n == str.GetLength());
   printf("3: %s\n", (LPCTSTR) str);

//this code generates these lines of output:

1: Hockeyis Best
2: Hockey is Best
3: Hockey is Best!
</code></pre>
<p>
<a href="_mfc_cstring.htm">CString Overview</a>  |&nbsp; <a href="_mfc_cstring_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="vcrefcstringdelete.htm">CString::Delete</a>, <a href="_mfc_cstring.3a3a.operator_.2b.htm">CString::operator +</a></p>
</font></BODY>
</HTML>
