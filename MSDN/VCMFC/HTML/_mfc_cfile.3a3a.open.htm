<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CFile::Open</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cfile.3a3a.open"></a><sup></sup>CFile::Open  </h1>
<p>
<b>virtual</b> <b>BOOL</b> <b>Open(</b> <b>LPCTSTR</b> <i>lpszFileName</i><b>,</b> <b>UINT</b> <i>nOpenFlags</i><b>,</b> <b>CFileException*</b> <i>pError</i> <b>=</b> <b>NULL</b> <b>);</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if the open was successful; otherwise 0. The <i>pError</i> parameter is meaningful only if 0 is returned.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>lpszFileName</i></p>
<p class=indent>
A string that is the path to the desired file. The path can be relative, absolute, or a network name (UNC).</p>
<p class=dt>
<i>nOpenFlags</i></p>
<p class=indent>
A <b>UINT</b> that defines the file’s sharing and access mode. It specifies the action to take when opening the file. You can combine options by using the bitwise-OR ( <b>|</b> ) operator. One access permission and one share option are required; the <b>modeCreate</b> and <b>modeNoInherit</b> modes are optional. See the <a href="_mfc_cfile.3a3a.cfile.htm">CFile</a> constructor for a list of mode options.</p>
<p class=dt>
<i>pError</i></p>
<p class=indent>
A pointer to an existing file-exception object that will receive the status of a failed operation.</p>
<p class=label>
<b>Remarks</b></p>
<p>
<b>Open</b> is designed for use with the default <b>CFile</b> constructor. The two functions form a “safe” method for opening a file where a failure is a normal, expected condition. </p>
<p>
While the <b>CFile</b> constructor will throw an exception in an error condition, <b>Open</b> will return <b>FALSE</b> for error conditions. <b>Open</b> can still initialize a <a href="_mfc_cfileexception.htm">CFileException</a> object to describe the error, however. If you don’t supply the <i>pError</i> parameter, or if you pass <b>NULL</b> for <i>pError</i>, <b>Open</b> will return <b>FALSE</b> and not throw a <b>CFileException</b>. If you pass a pointer to an existing <b>CFileException</b>, and <b>Open</b> encounters an error, the function will fill it with information describing that error. In neither case will <b>Open</b> throw an exception.</p>
<p>
The following table describes the possible results of <b>Open</b>.</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=21%><b><i>pError</i></b></td>
<td class=label width=27%><b>Error encountered?</b></td>
<td class=label width=24%><b>Return value</b></td>
<td class=label width=28%><b>CFileException content</b></td>
</tr>
<tr valign=top>
<td width=21%><b>NULL</b></td>
<td width=27%>No</td>
<td width=24%><b>TRUE</b></td>
<td width=28%>n/a</td>
</tr>
<tr valign=top>
<td width=21%>ptr to <b>CFileException</b></td>
<td width=27%>No</td>
<td width=24%><b>TRUE</b></td>
<td width=28%>unchanged</td>
</tr>
<tr valign=top>
<td width=21%><b>NULL</b></td>
<td width=27%>Yes</td>
<td width=24%><b>FALSE</b></td>
<td width=28%>n/a</td>
</tr>
<tr valign=top>
<td width=21%>ptr to <b>CFileException</b></td>
<td width=27%>Yes</td>
<td width=24%><b>FALSE</b></td>
<td width=28%>initialized to describe error</td>
</tr>
</table><br>
<p class=label>
<b>Example</b></p>
<pre><code>//example for CFile::Open
CFile f;
CFileException e;
char* pFileName = "test.dat";
if( !f.Open( pFileName, CFile::modeCreate | CFile::modeWrite, &amp;e ) )
   {
#ifdef _DEBUG
   afxDump &lt;&lt; "File could not be opened " &lt;&lt; e.m_cause &lt;&lt; "\n";
#endif
   }
</code></pre>
<p>
<a href="_mfc_cfile.htm">CFile Overview</a>  |&nbsp; <a href="_mfc_cfile_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cfile.3a3a.cfile.htm">CFile::CFile</a>, <a href="_mfc_cfile.3a3a.close.htm">CFile::Close</a></p>
</font></BODY>
</HTML>
