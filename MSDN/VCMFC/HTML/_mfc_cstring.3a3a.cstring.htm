<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CString::CString</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cstring.3a3a.cstring"></a><sup></sup>CString::CString</h1>
<p>
<b>CString(</b> <b>);</b></p>
<p>
<b>CString(</b> <b>const</b> <b>CString&amp;</b> <i>stringSrc</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>CString(</b> <b>TCHAR</b> <i>ch</i><b>,</b> <b>int</b> <i>nRepeat</i> <b>=</b> <b>1</b> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>CString(</b> <b>LPCTSTR</b> <i>lpch</i><b>,</b> <b>int</b> <i>nLength</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>CString(</b> <b>const</b> <b>unsigned</b> <b>char*</b> <i>psz</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>CString(</b> <b>LPCWSTR</b> <i>lpsz</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>CString(</b> <b>LPCSTR</b> <i>lpsz</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>stringSrc</i></p>
<p class=indent>
An existing <b>CString</b> object to be copied into this <b>CString</b> object.</p>
<p class=dt>
<i>ch</i></p>
<p class=indent>
A single character to be repeated <i>nRepeat</i> times.</p>
<p class=dt>
<i>nRepeat</i></p>
<p class=indent>
The repeat count for <i>ch</i>.</p>
<p class=dt>
<i>lpch</i></p>
<p class=indent>
A pointer to an array of characters of length <i>nLength</i>, not null-terminated.</p>
<p class=dt>
<i>nLength</i></p>
<p class=indent>
A count of the number of characters in <i>pch</i>.</p>
<p class=dt>
<i>psz</i></p>
<p class=indent>
A null-terminated string to be copied into this <b>CString </b>object.</p>
<p class=dt>
<i>lpsz</i></p>
<p class=indent>
A null-terminated string to be copied into this <b>CString</b> object.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Each of these constructors initializes a new <b>CString</b> object with the specified data.</p>
<p>
Because the constructors copy the input data into new allocated storage, you should be aware that memory exceptions may result. Note that some of these constructors act as conversion functions. This allows you to substitute, for example, an <b>LPTSTR</b> where a <b>CString</b> object is expected.</p>
<p>
Several forms of the constructor have special purposes: 
<ul type=disc>
<li>
<b>CString( LPCSTR</b> <i>lpsz</i> <b>)</b>&nbsp;&nbsp;&nbsp;Constructs a Unicode <b>CString</b> from an ANSI string. You can also use this constructor to load a string resource as shown in the example below.<br><br></li>
<li>
<b>CString( LPCWSTR</b> <i>lpsz</i> <b>)</b>&nbsp;&nbsp;&nbsp;Constructs a <b>CString</b> from a Unicode string.<br><br></li>
<li>
<b>CString( const unsigned char*</b> <i>psz</i> <b>)</b>&nbsp;&nbsp;&nbsp;Allows you to construct a <b>CString</b> from a pointer to <b>unsigned char</b>. </li>
</ul>
<p>
For more information, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Strings.3a_.CString_Exception_Cleanup">
</object><a href=JavaScript:alink_1.Click()>Strings: CString Exception Cleanup</a> in <i>Visual C++ Programmer’s Guide</i></p>
<p class=label>
<b>Example</b></p>
<p>
The following example demonstrates the use of <b>CString::CString</b>.</p>
<pre><code>// example for CString::CString
CString s1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Empty string
CString s2( "cat" );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // From a C string literal
CString s3 = s2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Copy constructor
CString s4( s2 + " " + s3 );&nbsp;&nbsp; // From a string expression

CString s5( 'x' );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // s5 = "x"
CString s6( 'x', 6 );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // s6 = "xxxxxx"

CString s7((LPCSTR)ID_FILE_NEW); // s7 = "Create a new document"

CString city = "Philadelphia"; // NOT the assignment operator
</code></pre>
<p>
<a href="_mfc_cstring.htm">CString Overview</a>  |&nbsp; <a href="_mfc_cstring_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cstring.3a3a.operator_.3d.htm">CString::operator =</a></p>
</font></BODY>
</HTML>
