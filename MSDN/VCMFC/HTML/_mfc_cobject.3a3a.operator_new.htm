<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CObject::operator new</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cobject.3a3a.operator_new"></a><sup></sup>CObject::operator new  </h1>
<p>
<b>void*</b> <b>operator</b> <b>new(</b> <b>size_t</b> <i>nSize</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p>
<b>void*</b> <b>operator</b> <b>new(</b> <b>size_t</b> <i>nSize</i><b>,</b> <b>LPCSTR</b> <i>lpszFileName</i><b>,</b> <b>int</b> <i>nLine</i> <b>);</b><br>
<b>throw(</b> <b>CMemoryException</b> <b>);</b></p>
<p class=label>
<b>Remarks</b></p>
<p>
For the Release version of the library, operator <b>new</b> performs an optimal memory allocation in a manner similar to <b>malloc</b>. In the Debug version, operator <b>new</b> participates in an allocation-monitoring scheme designed to detect memory leaks. </p>
<p>
If you use the code line</p>
<pre><code>#define new DEBUG_NEW
</code></pre>
<p>
before any of your implementations in a .CPP file, then the second version of <b>new</b> will be used, storing the filename and line number in the allocated block for later reporting. You do not have to worry about supplying the extra parameters; a macro takes care of that for you. </p>
<p>
Even if you do not use <b>DEBUG_NEW</b> in Debug mode, you still get leak detection, but without the source-file line-number reporting described above.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you override this operator, you must also override <b>delete</b>. Do not use the standard library <b>_new_handler</b> function. </p>
<p>
<a href="_mfc_cobject.htm">CObject Overview</a>  |&nbsp; <a href="_mfc_cobject_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cobject.3a3a.operator_delete.htm">CObject::operator delete</a></p>
</font></BODY>
</HTML>
