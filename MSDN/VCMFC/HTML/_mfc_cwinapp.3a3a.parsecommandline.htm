<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWinApp::ParseCommandLine</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwinapp.3a3a.parsecommandline"></a>CWinApp::ParseCommandLine</h1>
<p>
<b>void ParseCommandLine( CCommandLineInfo&amp;</b> <i>rCmdInfo</i><b> );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>rCmdInfo</i></p>
<p class=indent>
A reference to a <a href="_mfc_ccommandlineinfo.htm">CCommandLineInfo</a><b> </b>object.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to parse the command line and send the parameters, one at a time, to&nbsp; <a href="_mfc_ccommandlineinfo.3a3a.parseparam.htm">CCommandLineInfo::ParseParam</a>.</p>
<p>
When you start a new MFC project using AppWizard, AppWizard will create a local instance of <b>CCommandLineInfo</b>, and then call <b>ProcessShellCommand</b> and <b>ParseCommandLine</b> in the <a href="_mfc_cwinapp.3a3a.initinstance.htm">InitInstance</a> member function. A command line follows the route described below:
<ol>
<li>
After being created in <b>InitInstance</b>, the <b>CCommandLineInfo</b> object is passed to <b>ParseCommandLine</b>.<br><br></li>
<li>
<b>ParseCommandLine</b> then calls <b>CCommandLineInfo::ParseParam</b> repeatedly, once for each parameter. <br><br></li>
<li>
<b>ParseParam</b> fills the <b>CCommandLineInfo</b> object, which is then passed to <a href="_mfc_cwinapp.3a3a.processshellcommand.htm">ProcessShellCommand</a>.<br><br></li>
<li>
<b>ProcessShellCommand</b> handles the command-line arguments and flags.</li>
</ol>
<p>
Note that you can call <b>ParseCommandLine</b> directly as needed. </p>
<p>
For a description of the command-line flags, see <a href="_mfc_ccommandlineinfo.3a3a.m_nshellcommand.htm">CCommandLineInfo::m_nShellCommand</a>.</p>
<p>
<a href="_mfc_cwinapp.htm">CWinApp Overview</a>  |&nbsp; <a href="_mfc_cwinapp_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_ccommandlineinfo.htm">CCommandLineInfo</a>, <a href="_mfc_cwinapp.3a3a.initinstance.htm">CWinApp::InitInstance</a>, <a href="_mfc_ccommandlineinfo.3a3a.parseparam.htm">CCommandLineInfo::ParseParam</a>, <a href="_mfc_cwinapp.3a3a.processshellcommand.htm">CWinApp::ProcessShellCommand</a>, <a href="_mfc_ccommandlineinfo.3a3a.m_nshellcommand.htm">CCommandLineInfo::m_nShellCommand</a></p>
</font></BODY>
</HTML>
