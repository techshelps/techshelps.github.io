<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AfxCheckError</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_afxcheckerror"></a>AfxCheckError</h1>
<p>
<b>void AFXAPI AfxCheckError( SCODE </b><i>sc</i><b> );<br>
throw CMemoryException*</b><br>
<b>throw COleException*</b></p>
<p class=label>
<b>Remarks</b></p>
<p>
This function tests the passed <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mapi1book_C_TYPE_SCODE">
</object><a href=JavaScript:alink_1.Click()>SCODE</a> to see if it is an error. If it is an error, the function throws an exception. If the passed <b>SCODE</b> is <b>E_OUTOFMEMORY</b>, the function throws a <a href="_mfc_cmemoryexception.htm">CMemoryException</a> by calling <a href="_mfc_afxthrowmemoryexception.htm">AfxThrowMemoryException</a>.&nbsp; Otherwise, the function throws a <a href="_mfc_coleexception.htm">COleException</a> by calling <a href="_mfc_afxthrowoleexception.htm">AfxThrowOleException</a>.</p>
<p>
This function can be used to check the return values of calls to OLE functions in your application. By testing the return value with this function in your application, you can properly react to error conditions with a minimal amount of code.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This function has the same effect in debug and non-debug builds.</p>
<p class=label>
<b>Example</b></p>
<pre><code>LPDISPATCH pDisp = NULL;
AfxCheckError(CoCreateInstance(CLSID,
 NULL, CLSCTX_LOCAL_SERVER, IID_IDispatch,
 (LPVOID) &amp;pDisp));
// if there was an error, an exception has already been thrown
// we can start using the returned pointer
COleDispatchDriver disp(pDisp);
// and so on...
</code></pre>
</font></BODY>
</HTML>
