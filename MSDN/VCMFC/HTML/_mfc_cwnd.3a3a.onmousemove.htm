<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWnd::OnMouseMove</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwnd.3a3a.onmousemove"></a><sup></sup>CWnd::OnMouseMove&nbsp; </h1>
<p>
<b>afx_msg</b> <b>void</b> <b>OnMouseMove(</b> <b>UINT</b> <i>nFlags</i><b>,</b> <b>CPoint</b> <i>point</i> <b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>nFlags</i></p>
<p class=indent>
Indicates whether various virtual keys are down. This parameter can be any combination of the following values:
<ul type=disc>
<li>
<b>MK_CONTROL</b>&nbsp;&nbsp;&nbsp;Set if the CTRL key is down.<br><br></li>
<li>
<b>MK_LBUTTON</b>&nbsp;&nbsp;&nbsp;Set if the left mouse button is down.<br><br></li>
<li>
<b>MK_MBUTTON</b>&nbsp;&nbsp;&nbsp;Set if the middle mouse button is down.<br><br></li>
<li>
<b>MK_RBUTTON</b>&nbsp;&nbsp;&nbsp;Set if the right mouse button is down.<br><br></li>
<li>
<b>MK_SHIFT</b>&nbsp;&nbsp;&nbsp;Set if the SHIFT key is down.</li>
</ul>
<p class=dt>
<i>point</i></p>
<p class=indent>
Specifies the x- and y-coordinate of the cursor. These coordinates are always relative to the upper-left corner of the window.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The framework calls this member function when the mouse cursor moves. If the mouse is not captured, the <b>WM_MOUSEMOVE</b> message is received by the <b>CWnd</b> object beneath the mouse cursor; otherwise, the message goes to the window that has captured the mouse.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This member function is called by the framework to allow your application to handle a Windows message. The parameters passed to your function reflect the parameters received by the framework when the message was received. If you call the base-class implementation of this function, that implementation will use the parameters originally passed with the message and not the parameters you supply to the function.</p>
<p>
<a href="_mfc_cwnd.htm">CWnd Overview</a>  |&nbsp; <a href="_mfc_cwnd_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cwnd.3a3a.setcapture.htm">CWnd::SetCapture</a>, <a href="_mfc_cwnd.3a3a.onnchittest.htm">CWnd::OnNCHitTest</a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_WM_MOUSEMOVE">
</object><a href=JavaScript:alink_1.Click()>WM_MOUSEMOVE</a></p>
</font></BODY>
</HTML>
