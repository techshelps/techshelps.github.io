<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Event Sink Maps</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_event_sink_maps"></a>Event Sink Maps</h1>
<p>
When an embedded OLE control fires an event, the control's container receives the event using a mechanism, called an "event sink map," supplied by MFC. This event sink map designates handler functions for each specific event, as well as parameters of those events. For more information on event sink maps, see the article <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_ActiveX_Control_Containers">
</object><a href=JavaScript:alink_1.Click()>ActiveX Control Containers</a> in <i>Visual C++ Programmer's Guide</i>.</p>
<p class=label>
<b>Event Sink Maps</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=35%><a href="_mfc_begin_eventsink_map.htm">BEGIN_EVENTSINK_MAP</a></td>
<td width=65%>Starts the definition of an event sink map.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_mfc_declare_eventsink_map.htm">DECLARE_EVENTSINK_MAP</a></td>
<td width=65%>Declares an event sink map.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_mfc_end_eventsink_map.htm">END_EVENTSINK_MAP</a></td>
<td width=65%>Ends the definition of an event sink map.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_mfc_on_event.htm">ON_EVENT</a></td>
<td width=65%>Defines an event handler for a specific event.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_mfc_on_event_range.htm">ON_EVENT_RANGE</a></td>
<td width=65%>Defines an event handler for a specific event fired from a set of OLE controls.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_mfc_on_event_reflect.htm">ON_EVENT_REFLECT</a></td>
<td width=65%>Receives events fired by the control before they are handled by the control's container.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_mfc_on_propnotify.htm">ON_PROPNOTIFY</a></td>
<td width=65%>Defines a handler for handling property notifications from an OLE control.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_mfc_on_propnotify_range.htm">ON_PROPNOTIFY_RANGE</a></td>
<td width=65%>Defines a handler for handling property notifications from a set of OLE controls.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_mfc_on_propnotify_reflect.htm">ON_PROPNOTIFY_REFLECT</a></td>
<td width=65%>Receives property notifications sent by the control before they are handled by the control's container.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
