<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CException::GetErrorMessage</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cexception.3a3a.geterrormessage"></a>CException::GetErrorMessage</h1>
<p>
<b>virtual BOOL GetErrorMessage( LPTSTR </b><i>lpszError</i><b>, UINT </b><i>nMaxError</i><b>, PUINT </b><i>pnHelpContext</i><b> = NULL );</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
Nonzero if the function is successful; otherwise 0 if no error message text is available.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>lpszError</i></p>
<p class=indent>
A pointer to a buffer that will receive an error message.</p>
<p class=dt>
<i>nMaxError</i></p>
<p class=indent>
The maximum number of characters the buffer can hold, including the <b>NULL</b> terminator.</p>
<p class=dt>
<i>pnHelpContext</i></p>
<p class=indent>
The address of a <b>UINT</b> that will receive the help context ID. If <b>NULL</b>, no ID will be returned.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to provide text about an error that has occurred. For example, call <b>GetErrorMessage</b> to retrieve a string describing the error which caused MFC to throw a <b>CFileException</b> when writing to a <a href="_mfc_cfile.htm">CFile</a> object.</p>
<p class=indent>
<B><b>Note</b></B>  <b>GetErrorMessage</b> will not copy more than <i>nMaxError -1</i> characters to the buffer, and it will always add a trailing null to end the string.&nbsp; If the buffer is too small, the error message may be truncated.</p>
<p class=label>
<b>Example</b></p>
<p>
Here is an example of the use of <b>CException::GetErrorMessage</b>.</p>
<pre><code>   CFile fileInput;
   CFileException ex;

   // try to open a file for reading.
   // The file will certainly not
   // exist because there are too many explicit
   // directories in the name.

   // if the call to Open() fails, ex will be
   // initialized with exception
   // information.&nbsp; the call to ex.GetErrorMessage()
   // will retrieve an appropriate message describing
   // the error, and we'll add our own text
   // to make sure the user is perfectly sure what
   // went wrong.
   
   if (!fileInput.Open("\\Too\\Many\\Bad\\Dirs.DAT", CFile::modeRead, &amp;ex))
   {
      TCHAR   szCause[255];
      CString strFormatted;

      ex.GetErrorMessage(szCause, 255);

      // (in real life, it's probably more
      // appropriate to read this from
      //&nbsp; a string resource so it would be easy to
      // localize)

      strFormatted = _T("The data file could not be opened because of this error: ");
      strFormatted += szCause;

      AfxMessageBox(strFormatted);
   }
   else
   {
      // the file was opened, so do whatever work
      // with fileInput
      // we were planning...
      // :

      fileInput.Close();
   }
</code></pre>
<p>
<a href="_mfc_cexception.htm">CException Overview</a>  |&nbsp; <a href="_mfc_cexception_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cexception.3a3a.reporterror.htm">CException::ReportError</a></p>
</font></BODY>
</HTML>
