<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDaoTableDef::CreateField</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cdaotabledef.3a3a.createfield"></a>CDaoTableDef::CreateField</h1>
<p>
<b>void CreateField( LPCTSTR </b><i>lpszName</i><b>, short </b><i>nType,</i><b> long </b><i>lSize</i><b>,</b> <b>long</b> <i>lAttributes</i> <b>= 0</b> <b>);<br>
throw( CDaoException, CMemoryException );</b></p>
<p>
<b>void CreateField( CDaoFieldInfo&amp; </b><i>fieldinfo</i> <b>);<br>
throw( CDaoException, CMemoryException );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>lpszName</i></p>
<p class=indent>
A pointer to a string expression specifying the name of this field.</p>
<p class=dt>
<i>nType</i></p>
<p class=indent>
A value indicating the data type of the field. The setting can be one of these values:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>Type</b></td>
<td class=label width=20%><b>Size (bytes)</b></td>
<td class=label width=55%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=25%><b>dbBoolean</b></td>
<td width=20%>1 byte</td>
<td width=55%>BOOL</td>
</tr>
<tr valign=top>
<td width=25%><b>dbByte</b></td>
<td width=20%>1</td>
<td width=55%>BYTE</td>
</tr>
<tr valign=top>
<td width=25%><b>dbInteger</b></td>
<td width=20%>2</td>
<td width=55%>int</td>
</tr>
<tr valign=top>
<td width=25%><b>dbLong</b></td>
<td width=20%>4</td>
<td width=55%>long</td>
</tr>
<tr valign=top>
<td width=25%><b>dbCurrency</b></td>
<td width=20%>8</td>
<td width=55%>Currency (<a href="_mfc_colecurrency.htm">COleCurrency</a>)</td>
</tr>
<tr valign=top>
<td width=25%><b>dbSingle</b></td>
<td width=20%>4</td>
<td width=55%>float</td>
</tr>
<tr valign=top>
<td width=25%><b>dbDouble</b></td>
<td width=20%>8</td>
<td width=55%>double</td>
</tr>
<tr valign=top>
<td width=25%><b>dbDate</b></td>
<td width=20%>8</td>
<td width=55%>Date/Time (<a href="_mfc_coledatetime.htm">COleDateTime</a>)</td>
</tr>
<tr valign=top>
<td width=25%><b>dbText</b></td>
<td width=20%>1 – 255</td>
<td width=55%>Text (<a href="_mfc_cstring.htm">CString</a>) </td>
</tr>
<tr valign=top>
<td width=25%><b>dbLongBinary</b></td>
<td width=20%>0</td>
<td width=55%>Long Binary (OLE Object), <a href="_mfc_clongbinary.htm">CLongBinary</a> or <a href="_mfc_cbytearray.htm">CByteArray</a></td>
</tr>
<tr valign=top>
<td width=25%><b>dbMemo</b></td>
<td width=20%>0</td>
<td width=55%>Memo (<a href="_mfc_cstring.htm">CString</a>)</td>
</tr>
</table><br>
<p class=dt>
<i>lSize</i></p>
<p class=indent>
A value that indicates the maximum size, in bytes, of a field that contains text, or the fixed size of a field that contains text or numeric values. The <i>lSize</i> parameter is ignored for all but text fields. </p>
<p class=dt>
<i>lAttributes</i></p>
<p class=indent>
A value corresponding to characteristics of the field and that can be combined using a bitwise-OR.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Constant</b></td>
<td class=label width=69%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=31%><b>dbFixedField</b></td>
<td width=69%>The field size is fixed (default for Numeric fields).</td>
</tr>
<tr valign=top>
<td width=31%><b>dbVariableField</b></td>
<td width=69%>The field size is variable (Text fields only).</td>
</tr>
<tr valign=top>
<td width=31%><b>dbAutoIncrField</b></td>
<td width=69%>The field value for new records is automatically incremented to a unique long integer that cannot be changed. Only supported for Microsoft Jet database tables.</td>
</tr>
<tr valign=top>
<td width=31%><b>dbUpdatableField</b></td>
<td width=69%>The field value can be changed.</td>
</tr>
<tr valign=top>
<td width=31%><b>dbDescending</b></td>
<td width=69%>The field is sorted in descending (Z – A or 100 – 0) order (applies only to a Field object in a Fields collection of an Index object). If you omit this constant, the field is sorted in ascending (A – Z or 0 – 100) order (default).</td>
</tr>
</table><br>
<p class=dt>
<i>fieldinfo</i></p>
<p class=indent>
A reference to a <a href="_mfc_cdaofieldinfo_structure.htm">CDaoFieldInfo</a> structure.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Call this member function to add a field to the table. A <b>DAOField</b> (OLE) object is created and appended to the Fields collection of the <b>DAOTableDef</b> (OLE) object. Besides its use for examining object properties, you can also use <b>CDaoFieldInfo</b> to construct an input parameter for creating new fields in a tabledef. The first version of <b>CreateField</b> is simpler to use, but if you want finer control, you can use the second version of <b>CreateField</b>, which takes a <b>CDaoFieldInfo</b> parameter. </p>
<p>
If you use the version of <b>CreateField</b> that takes a <b>CDaoFieldInfo</b> parameter, you must carefully set each of the following members of the <b>CDaoFieldInfo</b> structure:
<ul type=disc>
<li>
<b>m_strName</b><br><br></li>
<li>
<b>m_nType</b><br><br></li>
<li>
<b>m_lSize</b><br><br></li>
<li>
<b>m_lAttributes</b><br><br></li>
<li>
<b>m_bAllowZeroLength</b></li>
</ul>
<p>
The remaining members of <b>CDaoFieldInfo</b> should be set to <b>0</b>, <b>FALSE</b>, or an empty string, as appropriate for the member, or a <b>CDaoException</b> may occur.</p>
<p>
For more information on tabledefs, see the articles <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Tabledef">
</object><a href=JavaScript:alink_1.Click()>DAO Tabledef</a> and <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_DAO_Tabledef.3a_.Using_Tabledefs">
</object><a href=JavaScript:alink_2.Click()>DAO Tabledef: Using Tabledefs</a> in <i>Visual C++ Programmer's Guide</i>. For related information, see the topic "CreateField Method" in DAO Help.</p>
<p>
<a href="_mfc_cdaotabledef.htm">CDaoTableDef Overview</a>  |&nbsp; <a href="_mfc_cdaotabledef_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_mfc_cdaotabledef.3a3a.deletefield.htm">CDaoTableDef::DeleteField</a>, <a href="_mfc_cdaotabledef.3a3a.createindex.htm">CDaoTableDef::CreateIndex</a>, <a href="_mfc_cdaotabledef.3a3a.deleteindex.htm">CDaoTableDef::DeleteIndex</a></p>
</font></BODY>
</HTML>
