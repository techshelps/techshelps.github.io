<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CMetaFileDC</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cmetafiledc"></a><sup></sup>CMetaFileDC</h1>
<p>
<img src="cmetafdc.gif" border=0></p>
<p>
A Windows metafile contains a sequence of graphics device interface (GDI) commands that you can replay to create a desired image or text.</p>
<p>
To implement a Windows metafile, first create a <b>CMetaFileDC</b> object. Invoke the <b>CMetaFileDC</b> constructor, then call the <a href="_mfc_cmetafiledc.3a3a.create.htm">Create</a> member function, which creates a Windows metafile device context and attaches it to the <b>CMetaFileDC</b> object.</p>
<p>
Next send the <b>CMetaFileDC</b> object the sequence of <b>CDC</b> GDI commands that you intend for it to replay. Only those GDI commands that create output, such as <b>MoveTo</b> and <b>LineTo</b>, can be used.</p>
<p>
After you have sent the desired commands to the metafile, call the <b>Close</b> member function, which closes the metafile device contexts and returns a metafile handle. Then dispose of the <b>CMetaFileDC</b> object.</p>
<p>
<a href="_mfc_cdc.3a3a.playmetafile.htm">CDC::PlayMetaFile</a> can then use the metafile handle to play the metafile repeatedly. The metafile can also be manipulated by Windows functions such as <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_CopyMetaFile">
</object><a href=JavaScript:alink_1.Click()>CopyMetaFile</a>, which copies a metafile to disk.</p>
<p>
When the metafile is no longer needed, delete it from memory with the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_WIN32_DeleteMetaFile">
</object><a href=JavaScript:alink_2.Click()>DeleteMetaFile</a> Windows function.</p>
<p>
You can also implement the <b>CMetaFileDC</b> object so that it can handle both output calls and attribute GDI calls such as <b>GetTextExtent</b>. Such a metafile is more flexible and can more easily reuse general GDI code, which often consists of a mix of output and attribute calls. The <b>CMetaFileDC</b> class inherits two device contexts, <b>m_hDC</b> and <b>m_hAttribDC</b>, from <b>CDC</b>. The <b>m_hDC</b> device context handles all <a href="_mfc_cdc.htm">CDC</a> GDI output calls and the <b>m_hAttribDC</b> device context handles all <b>CDC</b> GDI attribute calls. Normally, these two device contexts refer to the same device. In the case of <b>CMetaFileDC</b>, the attribute DC is set to <b>NULL</b> by default. </p>
<p>
Create a second device context that points to the screen, a printer, or device other than a metafile, then call the <b>SetAttribDC</b> member function to associate the new device context with <b>m_hAttribDC</b>. GDI calls for information will now be directed to the new <b>m_hAttribDC</b>. Output GDI calls will go to <b>m_hDC</b>, which represents the metafile.</p>
<p>
For more information on <b>CMetaFileDC</b>, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Device_Contexts">
</object><a href=JavaScript:alink_3.Click()>Device Contexts</a> in <i>Visual C++ Programmer’s Guide</i>.</p>
<p>
<b>#include &lt;afxext.h&gt;</b></p>
<p>
<a href="_mfc_cmetafiledc_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_cdc.htm">Base Class</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
</font></BODY>
</HTML>
