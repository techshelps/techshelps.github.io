<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWinApp::m_hInstance</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_mfc_cwinapp.3a3a.m_hinstance"></a><sup></sup>CWinApp::m_hInstance  </h1>
<p class=label>
<b>Remarks</b></p>
<p>
Corresponds to the <i>hInstance</i> parameter passed by Windows to <b>WinMain</b>. The <b>m_hInstance</b> data member is a handle to the current instance of the application running under Windows. This is returned by the global function <a href="_mfc_afxgetinstancehandle.htm">AfxGetInstanceHandle</a>. <b>m_hInstance</b> is a public variable of type <b>HINSTANCE</b>.</p>
<p class=label>
<b>Example</b></p>
<pre><code>&nbsp;&nbsp;&nbsp;// Typically you do not need to pass the application's hInstance
 &nbsp; // to Windows APIs directly because there are equivalent MFC
 &nbsp; // member functions that pass the hInstance for you.&nbsp; The following
 &nbsp; // example is not typical:

 &nbsp; HCURSOR hCursor;
 &nbsp; hCursor = ::LoadCursor(AfxGetApp()-&gt;m_hInstance, 
 &nbsp;&nbsp;&nbsp;&nbsp; MAKEINTRESOURCE(IDC_MYCURSOR));

 &nbsp; // A more direct way to get the application's hInstance is to
 &nbsp; // call AfxGetInstanceHandle:
 &nbsp; hCursor = ::LoadCursor(AfxGetInstanceHandle(), 
 &nbsp;&nbsp;&nbsp;&nbsp; MAKEINTRESOURCE(IDC_MYCURSOR));

 &nbsp; // If you need the hInstance to load a resource, it is better
 &nbsp; // to call AfxGetResourceHandle instead of AfxGetInstanceHandle:
 &nbsp; hCursor = ::LoadCursor(AfxGetResourceHandle(), 
 &nbsp;&nbsp;&nbsp;&nbsp; MAKEINTRESOURCE(IDC_MYCURSOR));

 &nbsp; // A better way to load the cursor resource is to call
 &nbsp; // CWinApp::LoadCursor
 &nbsp; hCursor = AfxGetApp()-&gt;LoadCursor(IDC_MYCURSOR);


</code></pre>
<p>
<a href="_mfc_cwinapp.htm">CWinApp Overview</a>  |&nbsp; <a href="_mfc_cwinapp_class_members.htm">Class Members</a>  |&nbsp; <a href="_mfc_hierarchy_chart.htm">Hierarchy Chart</a></p>
</font></BODY>
</HTML>
