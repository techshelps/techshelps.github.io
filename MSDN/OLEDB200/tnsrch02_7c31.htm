<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Flattening Algorithm</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="flatteningalgorithm"></a>Flattening Algorithm</h1>
<p>
OLE DB for OLAP defines the following algorithm for flattening a dataset:
<ol>
<li>
The components of each tuple on the COLUMNS axis are concatenated together with a period (.) separator to yield compound names. Each component consists of a unique name. Call this set of names X. <br><br></li>
<li>
For every non-X axis dimension D<sub>i</sub>:<p class=tl>
a. Let <i>k </i>be the lowermost level on the axis from this dimension.</P><p class=tl>
b. Let Li be the set of unique names of levels above (and including) k up to (but not including) the root level. If D<sub>i</sub> has multiple members at the root level, add the unique name of the root level to L<sub>i</sub>. L<sub>i</sub> must contain unique names.</P><p class=tl>
c. Case:</P><p class=tl>
i. If there is a DIMENSION PROPERTIES clause in the MDX statement that created the dataset, then let P<sub>i</sub> be the list of properties specified in this clause, enclosed in <b>[&nbsp;]</b> (thus, if DIMENSION PROPERTIES MEMBER_UNIQUE_NAME is specified, the P<sub>i</sub> value contains the string "[MEMBER_UNIQUE_NAME]").</P><p class=tl>
ii. Otherwise, let P<sub>i</sub> contain the string "[MEMBER_CAPTION]".</P><p class=tl>
For each element <i>l</i> of L<sub>i</sub>, and each element <i>p</i> of P<sub>i</sub>, concatenate <i>l</i> and <i>p</i> together, separated by a period (<b>.</b>). Let C<sub>i</sub> be the resulting set of compound names.</P></li>
<li>
Let C represent the union of all C<sub>i</sub> values obtained in step 2.<br><br></li>
<li>
The flattened dataset has the following columns:<p class=tl>
a. Each name in C is a column.</P><p class=tl>
b. The levels from the highest numbered axis come first, followed by lower numbered axes.</P><p class=tl>
c. Within the levels of each axis, the levels of the outermost dimension come first.</P><p class=tl>
d. Within the levels of each dimension, the lower numbered levels (that is, levels at a higher degree of aggregation) come first, followed by higher numbered levels (that is, levels with a lower degree of aggregation).</P></li>
<li>
Among the properties for a given level, the order is as specified in the DIMENSION PROPERTIES clause.<br><br></li>
<li>
If there is no DIMENSION PROPERTIES clause, then the column name is just the unique name of the level (see step 2 — C<sub>i</sub> is the same as L<sub>i</sub>). The CAPTION property is returned as the value of this column.</li>
</ol>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>The main idea behind a flattened rowset is that it is a quick and easy method for rowset-based consumers to display multidimensional data. Therefore, the default (without the DIMENSION PROPERTIES clause) is to return the display caption.
<ol start=7>
<li>
Each name in X is a column.<p class=tl>
a. These columns appear after the columns from L.</P><p class=tl>
b. Within X, the columns are in tuple order.</P><p class=tl>
c. The names in X are always the unique names, regardless of whether the DIMENSION PROPERTIES clause exists or not. Consequently, any properties specified in this clause are ignored.</P></li>
<li>
If a dimension has a single member at the root level, and that member appears on an axis, then this is represented in the flattened rowset by a row that has a NULL in every column that corresponds to a level below it.</li>
</ol>
</font></BODY>
</HTML>
