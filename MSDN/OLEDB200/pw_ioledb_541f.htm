<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supported OLE DB Interfaces</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbpwk_supp_interfaces"></a><sup></sup>Supported OLE DB Interfaces</h1>
<p>
Following are the OLE DB interfaces supported by the Microsoft OLE DB Simple Provider Toolkit. Because the Toolkit provides support for redistributable components, you may want to include this information along with the providers you build.</p>
<h1>Data Source Object</h1>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=42%><b>Interface</b></td>
<td class=label width=58%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=42%><b>IConnectionPointContainer</b></td>
<td width=58%>When implemented on an object, makes the object connectable and expresses the existence of outgoing interfaces on the object. Through this interface a client can either locate a specific connection point for one IID or enumerate the connection points that exist. (Note that this is an OLE, not an OLE DB, interface. For more information, refer to the <i>OLE 2 Programmer's Reference.</i>)</td>
</tr>
<tr valign=top>
<td width=42%><b>IDBAsynchStatus</b></td>
<td width=58%>Polls for status or cancels the asynchronous operation on the object being initialized, generated, or populated.</td>
</tr>
<tr valign=top>
<td width=42%><b>IDBCreateSession</b></td>
<td width=58%>Used by consumers to create a new session on a data source object.</td>
</tr>
<tr valign=top>
<td width=42%><b>IDBInitialize</b></td>
<td width=58%>Initializes a data source object or enumerator.</td>
</tr>
<tr valign=top>
<td width=42%><b>IDBProperties</b></td>
<td width=58%>Sets and gets the values of properties on the data source object or enumerator, and gets all information about all properties supported by the provider.</td>
</tr>
<tr valign=top>
<td width=42%><b>IPersist</b></td>
<td width=58%>An interface that is implemented by object applications and used by container applications to get the CLSID associated with an object.</td>
</tr>
<tr valign=top>
<td width=42%><b>ISupportErrorInfo</b></td>
<td width=58%>Indicates whether a specific interface can return Automation and OLE DB error objects.</td>
</tr>
</table><br>
<h1>Session Object</h1>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Interface</b></td>
<td class=label width=50%><b>Description and Notes</b></td>
</tr>
<tr valign=top>
<td width=50%><b>IOpenRowset</b></td>
<td width=50%>Enables consumers to open and work directly with individual tables or indexes in a data source.<p>
When using <b>IOpenRowset::OpenRowset</b> against an OLE DB provider written with the OLE DB Simple Provider Toolkit, you can only issue <b>OpenRowset</b> once for each OSP. The second call will fail with a status code of E_FAIL.</p>
</td>
</tr>
<tr valign=top>
<td width=50%><b>IGetDataSource</b></td>
<td width=50%>Mandatory interface on the session for obtaining a data source object.</td>
</tr>
<tr valign=top>
<td width=50%><b>ISessionProperties</b></td>
<td width=50%>Performs row updates, deletes, and inserts.</td>
</tr>
<tr valign=top>
<td width=50%><b>ISupportErrorInfo</b></td>
<td width=50%>Indicates whether a specific interface can return Automation and OLE DB error objects.</td>
</tr>
</table><br>
<h1>Rowset Object</h1>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=39%><b>Interface</b></td>
<td class=label width=61%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=39%><b>IAccessor</b></td>
<td width=61%>Provides methods for accessor management.</td>
</tr>
<tr valign=top>
<td width=39%><b>IColumnsInfo</b></td>
<td width=61%>Exposes information about columns of a Rowset or prepared command.</td>
</tr>
<tr valign=top>
<td width=39%><b>IConnectionPointContainer</b></td>
<td width=61%>When implemented on an object, makes the object connectable and expresses the existence of outgoing interfaces on the object. Through this interface a client can either locate a specific connection point for one IID or enumerate the connection points that exist. (Note that this is an OLE, not an OLE DB, interface. For more information, refer to the <i>OLE 2 Programmer's Reference.</i>)</td>
</tr>
<tr valign=top>
<td width=39%><b>IConvertType</b></td>
<td width=61%>Provides information about the availability of type conversions on a command or Rowset.</td>
</tr>
<tr valign=top>
<td width=39%><b>IDBAsynchStatus</b></td>
<td width=61%>Polls for status or cancels the asynchronous operation on the object being initialized, generated, or populated.</td>
</tr>
<tr valign=top>
<td width=39%><b>IRowset</b></td>
<td width=61%>Provides methods for fetching rows sequentially, getting the data from those rows, and managing the rows.</td>
</tr>
<tr valign=top>
<td width=39%><b>IRowsetChange</b></td>
<td width=61%>Performs row updates, deletes, and inserts.</td>
</tr>
<tr valign=top>
<td width=39%><b>IRowsetFind</b></td>
<td width=61%>Allows consumers to find a row within the Rowset matching a specified value.</td>
</tr>
<tr valign=top>
<td width=39%><b>IRowsetIdentity</b></td>
<td width=61%>Indicates that row instance identity is implemented on the Rowset and enables testing for row identity.</td>
</tr>
<tr valign=top>
<td width=39%><b>IRowsetInfo</b></td>
<td width=61%>Provides information about a Rowset.</td>
</tr>
<tr valign=top>
<td width=39%><b>IRowsetLocate</b></td>
<td width=61%>Fetches arbitrary rows of a Rowset.</td>
</tr>
<tr valign=top>
<td width=39%><b>IRowsetScroll</b></td>
<td width=61%>Enables consumers to fetch rows at approximate positions in the Rowset.</td>
</tr>
<tr valign=top>
<td width=39%><b>ISupportErrorInfo</b></td>
<td width=61%>Indicates whether a specific interface can return Automation and OLE DB error objects.</td>
</tr>
</table><br>
<h1>Notification Interfaces for Rowset Object</h1>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Interface</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>IDBAsynchNotify</b></td>
<td width=50%>The callback interface that a consumer must support in order to be notified of the progress of asynchronous operations such as initializing a datasource, or opening or populating a Rowset.</td>
</tr>
<tr valign=top>
<td width=50%><b>IRowsetNotify</b></td>
<td width=50%>The callback interface that a consumer must support to connect to local notifications provided by a Rowset.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
