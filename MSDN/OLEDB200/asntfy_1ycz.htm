<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDBAsynchNotify::OnProgress</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbidbasynchnotify__onprogress"></a>IDBAsynchNotify::OnProgress</h1>
<p>
<b>OnProgress</b> returns the progress of an asynchronous method call. This method makes no logical change to the state of the object.</p>
<pre><code>HRESULT OnProgress (
   HCHAPTER   hChapter,
   ULONG      ulOperation,
   ULONG      ulProgress,
   ULONG      ulProgressMax,
   ULONG      ulAsynchPhase,
   LPOLESTR   pwszStatusText);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>hChapter <br>
</i>[in]<br>
The chapter handle. If the object calling this method is not a rowset, or the operation does not apply to chapters, this is DB_NULL_HCHAPTER.</p>
<p class=indent>
</p>
<p class=dt>
<i>ulOperation <br>
</i>[in]<br>
The operation about which status is being returned. One of the following:</p>
<p class=dt>
</p>
<p class=indent>
DBASYNCHOP_OPEN<br>
The information applies to the asynchronous opening or population of a rowset, or the asynchronous initialization of a data source. </p>
<p class=dt>
</p>
<p class=dt>
<i>ulProgress <br>
</i>[in] <br>
Current progress of the asynchronous execution relative to the expected maximum indicated in the <i>ulProgressMax</i> parameter. </p>
<p class=indent>
</p>
<p class=dt>
<i>ulProgressMax</i></p>
<p class=indent>
[in]<i><br>
</i>The expected maximum value of the <i>ulProgress</i> parameter for the duration of calls to <b>IDBAsynchStatus::OnProgress</b> for this phase. This value may change across calls to this method. </p>
<p class=dt>
</p>
<p class=indent>
<i>ulAsynchPhase</i> <br>
[in]<i><br>
</i>Additional information regarding the progress of the asynchronous operation. Valid values include:</p>
<p class=dt>
</p>
<p class=indent>
DBASYNCHPHASE_CANCELED<br>
A consumer has requested that the operation be canceled by calling <b>IDBAsynchStatus::Abort</b>. The listener can attempt to deny the cancellation by returning S_FALSE from the notification. If no listeners deny the cancellation, the provider will call <b>IDBAsynchNotify::OnStop</b> for all registered listeners with an <i>hrStatus</i> of DB_E_CANCELED.</p>
<p class=dt>
</p>
<p class=indent>
DBASYNCHPHASE_INITIALIZATION<br>
The object is in an initialization phase. The arguments <i>ulProgress</i> and <i>ulProgressMax</i> indicate an estimated ratio of completion. The object is not yet fully materialized. Attempting to call any other interfaces may fail, and the full set of interfaces may not be available on the object.</p>
<p class=indent>
If the asynchronous operation is a result of calling <b>ICommand::Execute</b> for a command that updates, deletes, or inserts rows, and <i>cParamSets</i> is greater than 1, <i>ulProgress</i> and <i>ulProgressMax</i> may indicate the progress for a single set of parameters or for the full array of parameter sets. </p>
<p class=dt>
</p>
<p class=indent>
DBASYNCHPHASE_POPULATION<br>
The object is in a population phase. Although the rowset is fully initializedand the full range of interfaces are available on the object, there may be additional rows not yet populated into the rowset.&nbsp; </p>
<p>
While <i>ulProgress</i> and <i>ulProgressMax</i> can be based on the number of rows populated, they are generally based on the time or effort required to populate the rowset. A caller would therefore be better using this information as a rough guide to how long the process might take, not the eventual row count.</p>
<p class=indent>
This phase is returned only during population of a rowset. It is never returned in the initialization of a data source or by the execution of a command that updates, deletes, or inserts rows.</p>
<p class=dt>
</p>
<p class=indent>
DBASYNCHPHASE_COMPLETE<br>
All asynchronous processing of the object has completed. If the asynchronous operation was a result of calling <b>ICommand::Execute</b> for a command that updates, deletes, or inserts rows, <i>ulProgress</i> and <i>ulProgressMax</i> are equal to the total number of rows affected by the command. If <i>cParamSets</i> is greater than 1, this is the total number of rows affected by all of the sets of parameters specified in the execution.</p>
<p class=dt>
</p>
<p class=dt>
<i>pwszStatusText</i></p>
<p class=indent>
[in]<br>
Textual information indicating additional information about the asynchronous operation, or NULL if no status text is available.</p>
<p class=tl>
The provider owns the memory for <i>pwszStatusText</i>. The consumer can copy the text to its own memory, but must not attempt to free <i>pwszStatusText</i>, nor to reference it once it has returned from <b>IDBAsynchNotify::OnProgress</b>.</P><p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
S_FALSE<br>
The <i>ulAsynchPhase</i> was DBASYNCHPHASE_CANCELED, and the cancellation of the asynchronous operation was vetoed by the consumer. </p>
<p class=dt>
The listener wants to cancel the asynchronous operation. The provider calls each listener's <b>IDBAsynchNotify::OnProgress</b> with a <i>ulAsynchPhase</i> of DBASYNCHPHASE_CANCELED. If none of the listeners deny the cancellation by returning S_FALSE to that notification, the asynchronous operation is canceled and <b>IDBAsynchNotify::OnStop</b> is called for each listener with an <i>hrStatus</i> of DB_E_CANCELED.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_UNWANTEDPHASE<br>
The consumer is not interested in receiving this phase. The provider can optimize by making no further calls with this phase.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_UNWANTEDOPERATION<br>
The consumer is not interested in receiving notifications for this operation. The provider can optimize by making no further calls to this method with this operation for this listener. Notifications for other operations are unaffected.</p>
<p class=dt>
</p>
<p class=indent>
E_NOTIMPL<br>
The consumer is not interested in receiving this notification. The provider can optimize by making no further calls to this method for this listener. Notifications for other methods are unaffected.</p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A consumer-specific error occurred.</p>
<p class=label>
<b>Comments</b></p>
<p>
The provider calls this method repeatedly to indicate the current progress of the asynchronous operation, typically at reasonable intervals during a lengthy operation.</p>
<p>
The consumer can use the progress notification to provide progress information to the end user from the <i>ulProgress</i>, <i>ulProgressMax</i>, and <i>pwszStatusText</i> parameters, or to make programmatic decisions based on the <i>ulAsynchPhase</i> parameter.</p>
<p>
Consumers should be prepared to handle unknown values of <i>ulOperation</i> by returning S_OK or DB_S_UNWANTEDOPERATION, and unknown values of <i>ulAsynchPhase</i> by returning S_OK or DB_S_UNWANTEDPHASE.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="command_9zhh.htm">ICommand::Execute</a>, <a href="asstat_3s4z.htm">IDBAsynchStatus::GetStatus</a>, <a href="dbschr_7p9w.htm">IDBSchemaRowset::GetRowset</a>, <a href="opnrst_7c50.htm">IOpenRowset::OpenRowset</a>, <a href="dbenum_6i7o.htm">ISourcesRowset::GetSourcesRowset</a></p>
</font></BODY>
</HTML>
