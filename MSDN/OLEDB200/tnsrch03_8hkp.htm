<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Join Compatibility</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="joincompatibility"></a>Join Compatibility</h1>
<p>
As previously discussed in chapter 2, the FROM clause is used to specify the name of the source cube. Some providers may support joining cubes that share common dimensions. These providers can specify a comma-delimited list of cubes to be joined in the FROM clause.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;It is not necessary to specify the relationship between cubes in order to perform a join because joining is always by common dimensions (dimensions with the same name).</p>
<p>
The semantics of joining by common dimensions, called a <i>natural join</i>, are as follows:
<ol>
<li>
Two cubes are said to have <i>common dimensions </i>if and only if the dimensions have the same DIMENSION_UNIQUE_NAME. For more information, see “Multiple Hypercubes vs. True Multicubes” in Chapter 2.<br><br></li>
<li>
Let the notation X(A, B, C) indicate a cube X which is composed of dimensions A, B, and C. <br><br></li>
<li>
Let X(A, B, C) and Y(C, D, E) be two cubes with the common dimension C.<br><br></li>
<li>
If X.C and Y.C do not have an identical set of members, then X and Y cannot be joined.<br><br></li>
<li>
Assuming X.C and Y.C have an identical set of members: The natural join of X and Y results in a cube XY(A, B, C, D, E) such that the dataset<pre><code>SELECT XY.A ON COLUMNS, XY.B ON ROWS, XY.C ON PAGES 
WHERE (D.ALL, E.ALL)
</code></pre>
<p class=tl>
is the same as the cube X(A, B, C).</P><p class=tl>
The dataset</P><pre><code>SELECT XY.C ON COLUMNS, XY.D ON ROWS, XY.E ON PAGES 
WHERE (A.ALL, B.ALL)
</code></pre>
<p class=tl>
is the same as the cube Y(C, D, E).</P></li>
<li>
The natural join operation associates and commutes (except for the dimension order).</li>
</ol>
<p>
Even though the above rules defined semantics for cubes with three dimensions each and one dimension common, the generalization to other cases is straightforward.</p>
<p>
The method of joining cubes described here is similar to a NATURAL JOIN in a relational database system. Vendors can extend the language to support other types of joins.</p>
</font></BODY>
</HTML>
