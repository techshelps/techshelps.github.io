<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Delimited Identifiers Returned from the Provider</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="delimitedidentifiersreturnedfromprovider"></a>Delimited Identifiers Returned from the Provider</h1>
<p>
This discussion so far has been about the need for quoting identifiers when the consumer <i>inputs</i> a query string or schema rowset restriction. This section will discuss when and why a provider <i>returns</i><b> </b>delimited identifiers.</p>
<p>
Consumers frequently use the information returned from schema rowsets to formulate a query. For example, the consumer user interface may allow a user to select a set of displayed members and drop them onto an axis of a dataset. When displaying the members, MEMBER_CAPTION is used. The act of dropping the set of members onto an axis triggers a routine in the consumer that formulates an axis specification. Here, it will use the MEMBER_UNIQUE_NAME column from the MEMBERS rowset. As mentioned in the section “Name Space and Unique Names,” one possible way a provider can generate a unique name is by constructing it out of various component names, with the period (<b>.</b>) as the separator between these component names. Such providers should make sure that each component is delimited; otherwise, the query may have trouble parsing.</p>
<p>
An example will make this clearer. There is a city called New Albany in New Jersey, USA, and also one in Nova Scotia, Canada. If the provider returned the MEMBER_UNIQUE_NAME column of the MEMBERS rowset for these two members without quoting, the returned values will be <b>USA.New Jersey.New Albany</b> and <b>Canada.Nova Scotia.New Albany</b>, respectively. The consumer can put delimit characters around the entire name — <b>[USA.New Jersey.New Albany]</b> and <b>[Canada.Nova Scotia.New Albany]</b>. However, the provider will be unable to find out the individual components that form the unique name because it is unclear whether the period (<b>.</b>) acts as a separator or is a part of the name. To get around these problems, the provider should return the MEMBER_UNIQUE_NAME column with each component delimited — <b>[USA].[New Jersey].[New Albany]</b> and <b>[Canada].[Nova Scotia].[New Albany]</b>.</p>
<p>
A provider that constructs a unique name out of component names should return component-delimited identifiers (that is, each component of a compound identifier is delimited) in the following places:
<ul type=disc>
<li>
All _UNIQUE_NAME columns of a schema rowset.<br><br></li>
<li>
The MEMBER_UNIQUE_NAME column in the axis rowset.<br><br></li>
<li>
All column names in the flattened dataset.<br><br></li>
<li>
Column values of any columns that correspond to the MEMBER_UNIQUE_NAME property in a flattened dataset.</li>
</ul>
<p>
Note that providers are not required to construct unique names by using the “path” to a member (or any other schema object). The provider is free to construct the unique name in any way. Applications should treat a unique name as an opaque string with no structure. For more information, see the section “Name Space and Unique Names” in this chapter.</p>
</font></BODY>
</HTML>
