<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exposing Data Through OLE DB</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbpwk_oledb"></a><sup></sup>Exposing Data Through OLE DB</h1>
<p>
OLE DB is a strategic Microsoft technology that allows uniform data access to diverse data sources through a library of powerful data manipulation interfaces. OLE DB provides:
<ul type=disc>
<li>
The ability to expose all types of data through a set of standard interfaces. <br><br></li>
<li>
Seamless integration between consumer applications and controls, data providers, and diverse sources of data (including DBMS data). <br><br></li>
<li>
Plug-and-play usage of service providers, such as query processors and cursor engines. Query processors that understand OLE DB can be "bolted onto" the data access environment, and serve multiple consumer applications and data providers.</li>
</ul>
<p>
The Microsoft OLE DB Simple Provider Toolkit allows developers to use these core OLE DB functionalities with simple data sources, without spending the time needed to build an entire OLE DB provider from scratch. By using the Toolkit, you not only enable OLE DB functionality and save time in the process, but also build a foundation for implementing data access strategies at a higher level.</p>
</font></BODY>
</HTML>
