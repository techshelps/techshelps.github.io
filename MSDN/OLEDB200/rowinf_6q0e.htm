<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRowsetInfo::GetSpecification</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbirowsetinfo__getspecification"></a>IRowsetInfo::GetSpecification</h1>
<p>
Returns an interface pointer on the object (command or session) that created this rowset.</p>
<pre><code>HRESULT GetSpecification (
   REFIID       riid,
   IUnknown **   ppSpecification);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>riid</i></p>
<p class=indent>
[in]<br>
The IID of the interface on which to return a pointer.</p>
<p class=dt>
<i>ppSpecification</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return the interface pointer. If the provider does not have an object that created the rowset, it sets *<i>ppSpecification</i> to a null pointer and returns S_FALSE. If <b>GetSpecification</b> fails, it must attempt to set *<i>ppSpecification</i> to a null pointer.</p>
<p class=dt>
</p>
<p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
S_FALSE<br>
The provider does not have an object that created the rowset.</p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
E_INVALIDARG<br>
<i>ppSpecification</i> was a null pointer.</p>
<p class=dt>
</p>
<p class=indent>
E_NOINTERFACE<br>
The object that created this rowset did not support the interface specified in <i>riid</i>.</p>
<p class=dt>
</p>
<p class=indent>
E_UNEXPECTED<br>
<b>ITransaction::Commit</b> or <b>ITransaction::Abort</b> was called and the object is in a zombie state.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_NOTREENTRANT<br>
The provider called a method from <b>IRowsetNotify</b> in the consumer that had not yet returned, and the provider does not support reentrancy in this method.</p>
<p class=dt>
</p>
<p class=label>
<b>Comments</b></p>
<p>
This method makes no logical change to the state of the current rowset.</p>
<p>
<b>GetSpecification</b> returns an interface pointer on the object that created the rowset. If the rowset was created by <b>ICommand::Execute</b>, this object is a command. If the rowset was created by <b>IOpenRowset::OpenRowset</b>, this object is a session.</p>
<p>
If the object is not a command, then it must specify the contents of the rowset. That is, it must expose interfaces that can be used to modify the contents of the rowset before the rowset is created, or be used to gain additional information about the rowset. If the object cannot expose such interfaces, <b>GetSpecification</b> should return a null pointer in *<i>ppSpecification</i>. In a simple provider, such as a provider that creates a rowset over a fixed set of data, there might not be an object that created the rowset; in this case, <b>GetSpecification</b> returns a null pointer in *<i>ppSpecification</i>.</p>
<p class=label>
</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="command_66cu.htm">ICommand::GetDBSession</a>, <a href="getdso_9mw5.htm">IGetDataSource::GetDataSource</a></p>
</font></BODY>
</HTML>
