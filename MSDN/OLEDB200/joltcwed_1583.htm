<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initialization Properties</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="initializationproperties"></a>Initialization Properties</h1>
<p>
The DBPROPSET_DBINIT property set contains the following properties. All of these properties are in the INITIALIZATION property group.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=632>
<tr valign=top>
<td class=label width=49%><b>Property ID (Properties not supported in DBPROPSET_DBINIT)</b></td>
<td class=label width=51%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_AUTH_CACHE_AUTHINFO</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description : Cache Authorization</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the data source object or enumerator is allowed to cache sensitive authentication information, such as a password, in an internal cache.<br><br></li>
<li>
VARIANT_FALSE , which indicates that the data source object or enumerator is not allowed to cache sensitive authentication information.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_AUTH_ENCRYPT_PASSWORD</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Encrypt Password</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the consumer requires that the password be sent to the data source or enumerator in an encrypted form. This property uses cryptographic techniques, and as such specifies a stronger form of masking than DBPROP_AUTH_MASKPASSWORD.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the password can be sent without encryption.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_AUTH_INTEGRATED</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: Not supported</p>
<p>
Description: Integrated Security</p>
<p>
Specifies a string that contains the name of the authentication service used by the server. This is used to identify a user using an identity provided by an authentication domain. If the BSTR is a null pointer, this property is used and no other DBPROP_AUTH* properties are needed. If provided, their values are ignored.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_AUTH_MASK_PASSWORD</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Mask Password</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the consumer requires that the password be sent to the data source or enumerator in a masked form.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the password can be sent in an unmasked form.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_AUTH_PASSWORD</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R/W</p>
<p>
Description: Password</p>
<p>
Specifies the password to be used when connecting to the data source or enumerator. When the value of this property is retrieved with <b>IDBProperties::GetProperties</b>, the provider might return a mask, such as “******”, or an empty string, instead of the actual password. Note that the password is still set internally and is used when <b>IDBInitialize::Initialize</b> is called.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_AUTH_PERSIST_ENCRYPTED</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Persist Encrypted</p>
<p>
Sepcifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the consumer requires the data source object to persist sensitive authentication information, such as a password, in encrypted form.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the data source object can persist sensitive authentication information without encryption.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_AUTH_PERSIST_SENSITIVE_AUTHINFO</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Persist Security Info</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the data source object is allowed to persist sensitive authentication information, such as a password, along with other authentication information.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the data source object cannot persist sensitive authentication information.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_AUTH_USERID</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R/W</p>
<p>
Description: User ID</p>
<p>
Specifies the user ID to be used when connecting to the data source or enumerator.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_ASYNCH</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R/W</p>
<p>
Description: Asynchronous Processing</p>
<p>
Specifies a bitmask that indicates the asynchronous processing performed on the rowset, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_ASYNCH_INITIALIZE, which indicats that <b>IDBInitialize::Initialize</b> returns immediately, but the actual initialization of the data source is done asynchronously. The data source behaves as an uninitialized data source prior to completing the initialization process, except that any call to <b>IDBInitialize</b> returns E_UNEXPECTED.</li>
</ul>
<p>
If no bits are set (the default), <b>IDBInitialize::Initialize</b> does not return until the data source is completely initialized. </p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_CONNECT</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: Not Supported</p>
<p>
Description: Connect</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_DATASOURCE</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R/W</p>
<p>
Description: Data Source</p>
<p>
Specifies the name of the database or enumerator to which to connect.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_HWND</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R/W</p>
<p>
Description: Window Handle</p>
<p>
Specifies the window handle to be used if the data source object or enumerator needs to prompt for additional information.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_IMPERSONATION_LEVEL</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: Not Supported</p>
<p>
Description: Impersonation Level</p>
<p>
Specifies the level of impersonation that the server is allowed to use when impersonating the client. This property applies only to non–Remote Procedure Call (RPC) network connections. Remote Procedure Call provides similar impersonation levels. The values of this property correspond directly to the levels of impersonation that can be specified for authenticated RPC connections, but can be applied to connections other than authenticated RPC. </p>
<p>
Specifies values as one of:
<ul type=disc>
<li>
DB_IMP_LEVEL_ANONYMOUS, which indicates that the client is anonymous to the server. The server process cannot obtain identification information about the client and cannot impersonate the client.<br><br></li>
<li>
DB_IMP_LEVEL_IDENTIFY, which indicates that the server can obtain the client’s identity. The server can impersonate the client for ACL checking but cannot access system objects as the client.<br><br></li>
<li>
DB_IMP_LEVEL_IMPERSONATE, which indicates that the server process can impersonate the client’s security context while acting on behalf of the client. This information is obtained when the connection is established, not on every call.<br><br></li>
<li>
DB_IMP_LEVEL_DELEGATE, which indicates that the process can impersonate the client’s security context while acting on behalf of the client. The server process can also make outgoing calls to other servers while acting on behalf of the client.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_LCID</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R/W</p>
<p>
Description: Locale Identifier</p>
<p>
The locale ID (LCID) of preference for the consumer. Consumers specify the LCID at initialization. This provides a method by which the server can determine the consumer’s LCID of choice . This property does not guarantee that all text returned to the consumer will be translated according to the LCID.</p>
<p>
Providers may wish to set <i>dwOptions</i> in the DBPROP structure for this property to DBPROPOPTIONS_SETIFCHEAP.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_LOCATION</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: Not Supported</p>
<p>
Description: Location</p>
<p>
Specifies the location of the data source or enumerator to which to connect. Typically, this will be a server name.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_MODE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R/W</p>
<p>
Description: Mode</p>
<p>
Specifies a bitmask that indicates access permissions, that is, zero or more of:
<ul type=disc>
<li>
DB_MODE_READ, which indicates Read only.<br><br></li>
<li>
DB_MODE_WRITE, which indicates Write-only.<br><br></li>
<li>
DB_MODE_READWRITE, which indicates read/write (DB_MODE_READ | DB_MODE_WRITE).<br><br></li>
<li>
DB_MODE_SHARE_DENY_READ, which prevents others from opening in read mode.<br><br></li>
<li>
DB_MODE_SHARE_DENY_WRITE, which prevents others from opening in write mode.<br><br></li>
<li>
DB_MODE_SHARE_EXCLUSIVE, which prevents others from opening in read/write mode (DB_MODE_SHARE_DENY_READ | DB_MODE_SHARE_DENY_WRITE).<br><br></li>
<li>
DB_MODE_SHARE_DENY_NONE, which indicates that neither read nor write access can be denied to others.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_PROMPT</td>
<td width=51%>Type: VT_I2<p>
Typical R/W: R Only</p>
<p>
Description: Prompt</p>
<p>
Specifies whether to prompt the user during initialization, that is:
<ul type=disc>
<li>
DBPROMPT_PROMPT, which indiates that the user is always prompted for initialization information.<br><br></li>
<li>
DBPROMPT_COMPLETE, which prompts the user only if more information is needed.<br><br></li>
<li>
DBPROMPT_COMPLETEREQUIRED, which prompts the user only if more information is needed. Does not allow the user to enter optional information.<br><br></li>
<li>
DBPROMPT_NOPROMPT, which does not prompt the user.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_PROTECTION_LEVEL</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: Not Supported</p>
<p>
Description: Protection Level</p>
<p>
Specifies the level of protection for data sent between client and server. This property applies only to non–Remote Procedure Call (RPC) network connections. RPC provides similar protection levels. The values of this property correspond directly to the levels of protection that can be specified for authenticated RPC connections, but can be applied to connections other than authenticated RPC.</p>
<p>
Specifies values as one of:
<ul type=disc>
<li>
DB_PROT_LEVEL_NONE, which performs no authentication of data sent to server.<br><br></li>
<li>
DB_PROT_LEVEL_CONNECT, which authenticates only when the client establishes the connection with the server.<br><br></li>
<li>
DB_PROT_LEVEL_CALL, which authenticates the source of the data at the beginning of each request from the client to the server.<br><br></li>
<li>
DB_PROT_LEVEL_PKT, which authenticates that all data received is from the client.<br><br></li>
<li>
DB_PROT_LEVEL_PKT_INTEGRITY, which authenticates that all data received is from the client and that it has not been changed in transit.<br><br></li>
<li>
DB_PROT_LEVEL_PKT_PRIVACY, which authenticates that all data received is from the client, that is, has not been changed in transit, and protects the privacy of the data by encrypting it.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_PROVIDERSTRING</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R/W</p>
<p>
Description: Extended Properties</p>
<p>
Specifies a string that contains provider-specific, extended connection information. Use of this property implies that the consumer knows how this string will be interpreted and used by the provider. Consumers should use this property only for provider-specific connection information that cannot be explicitly described through the property mechanism.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_INIT_TIMEOUT</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: Not Supported</p>
<p>
Description: Connect Timeout</p>
<p>
Specifies the amount of time (in seconds) to wait for initialization to complete.</p>
</td>
</tr>
</table><br>
</font></BODY>
</HTML>
