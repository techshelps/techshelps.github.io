<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Getting the Command Object from a Dataset</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="gettingcommandobjectfromdataset"></a>Getting the Command Object from a Dataset</h1>
<p>
In OLE DB, the recurring theme is that there is a method on an object that returns an interface on the object that created it. For example, the method <b>IGetDataSource::GetDatasource </b>is a method on the session object that returns an interface pointer on the data source object that created it.</p>
<p>
Accordingly, the dataset object needs a method that returns an interface on the command object that created it. This method is <b>IMDDataset::GetSpecification</b>. The word “specification” here means the object that contains the dataset specification; that is, the command object.</p>
</font></BODY>
</HTML>
