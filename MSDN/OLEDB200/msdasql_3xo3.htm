<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initialization Properties and .dsn Files</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="odbcproviderinitialization_properties_and_kag_files"></a><sup></sup>Initialization Properties and .dsn Files</h1>
<h1>Initialization Properties</h1>
<p>
When the consumer calls <b>IDBInitialize::Initialize</b>, the ODBC Provider calls the ODBC functions <b>SQLSetConnectAtt</b>, to set various connection options, and <b>SQLDriverConnect</b>, to connect to an ODBC data source. The values passed to <b>SQLSetConnectAtt</b> and <b>SQLDriverConnect</b> come from the initialization properties set by the consumer.</p>
<p>
When the data source object is first created, the value of each initialization property is set to VT_EMPTY. If the consumer then calls <b>IPeristFile::Load</b> to load a .dsn file, the ODBC Provider reads the values of the properties stored in the .dsn file and sets initialization properties accordingly. When the consumer calls <b>Initialize</b>, it can pass values for initialization properties; these overwrite the values read from the .dsn file. When the consumer calls <b>IDBInitialize::Uninitialize</b>, the value of each initialization property is set back to VT_EMPTY.</p>
<h1>.dsn Files</h1>
<p>
The consumer stores the initialization properties used to connect to a particular ODBC data source in a .dsn file. The consumer can then reload the values from a .dsn file at a later time and reconnect to the same data source. The format of a .dsn file is the same as that of an .ini file; the ODBC Provider reads and writes information from it with <b>SQLWriteFileDSN</b> and <b>SQLReadFileDSN</b>.</p>
<p>
To save properties in a .dsn file, the consumer calls <b>IPersistFile::Save</b> on the data source object. To load properties from a .dsn file, the consumer calls <b>IPersistFile::Load</b> on an uninitialized data source object.</p>
<p>
You can also use a .dsn file to create a moniker to obtain a data source object. The consumer calls <b>CreateFileMoniker</b> with the path to the .dsn file. This creates a moniker which can then be bound with <b>BindMoniker</b>, thus creating an uninitialized data source object.</p>
<h1>Initialization Properties Used</h1>
<p>
The following table lists each initialization property the ODBC Provider uses, the corresponding keyword used in the .dsn file, and how it is used. Any properties not listed are not used by the ODBC Provider.<br>
</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=28%><b>Property</b></td>
<td class=label width=32%><b>.dsn file keyword</b></td>
<td class=label width=40%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_AUTH_<br>
PASSWORD</td>
<td width=32%>AUTH_PASSWORD</td>
<td width=40%>Passed as the value of the PWD keyword in <b>SQLDriverConnect</b>.</td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_AUTH_<br>
USERID</td>
<td width=32%>AUTH_USERID</td>
<td width=40%>Passed as the value of the UID keyword in <b>SQLDriverConnect</b>.</td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_INIT_<br>
DATASOURCE</td>
<td width=32%>INIT_DATASOURCE</td>
<td width=40%>Passed as the value of the DSN keyword in <b>SQLDriverConnect</b>.</td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_INIT_<br>
HWND</td>
<td width=32%>INIT_HWND</td>
<td width=40%>Passed as the value of the <i>hwnd</i> argument in <b>SQLDriverConnect</b>.</td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_INIT_<br>
LOCATION</td>
<td width=32%>INIT_LOCATION</td>
<td width=40%>Passed as the value of the Server keyword in <b>SQLDriverConnect</b> (Microsoft SQL Server driver only).</td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_INIT_<br>
MODE</td>
<td width=32%>INIT_MODE</td>
<td width=40%>Passed to <b>SQLSetConnectAtt</b> as the value of the SQL_ACCESS_MODE connection option. Only DB_MODE_READ and DB_MODE_READWRITE are supported.</td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_INIT_<br>
PROMPT</td>
<td width=32%>INIT_PROMPT</td>
<td width=40%>Passed as the value of the <i>fDriverCompletion</i> parameter in <b>SQLDriverConnect</b>.</td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_INIT_<br>
PROVIDERSTRING</td>
<td width=32%> INIT_<br>
PROVIDERSTRING</td>
<td width=40%>Passed as the complete ODBC connection string (identical to the <i>szConnStr</i> argument in <b>SQLDriverConnect</b>).</td>
</tr>
<tr valign=top>
<td width=28%>DBPROP_INIT_<br>
TIMEOUT</td>
<td width=32%>INIT_TIMEOUT</td>
<td width=40%>Passed to <b>SQLSetConnectAtt</b> as the value of the SQL_ATTR_LOGIN_TIMEOUT connection option.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
