<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDBSchemaRowset::GetRowset</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbidbschemarowset__getrowset"></a>IDBSchemaRowset::GetRowset</h1>
<p>
Returns a schema rowset.</p>
<pre><code>HRESULT GetRowset (
   IUnknown *         punkOuter,
   REFGUID            rguidSchema,
   ULONG            cRestrictions,
   const VARIANT      rgRestrictions[],
   REFIID               riid,
   ULONG            cPropertySets,
   DBPROPSET      rgPropertySets[],
   IUnknown **         ppRowset);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pUnkOuter</i></p>
<p class=indent>
[in]<br>
A pointer to the controlling <b>IUnknown</b> interface if the rowset is being created as part of an aggregate. If the <b>IDBSchemaRowset</b> interface is not being aggregated, it is a null pointer.</p>
<p class=dt>
<i>rguidSchema</i></p>
<p class=indent>
[in]<br>
A GUID identifying the schema rowset. For more information, see the "Comments" section and <a href="dbschr_7ltg.htm">IDBSchemaRowset</a>.</p>
<p class=dt>
<i>cRestrictions</i></p>
<p class=indent>
[in]<br>
The count of restriction values.</p>
<p class=dt>
<i>rgRestrictions</i></p>
<p class=indent>
[in]<br>
An array of restriction values. These are applied in order to the restriction columns. That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on. For more information, see the "Comments" section.</p>
<p class=dt>
<i>riid</i></p>
<p class=indent>
[in]<br>
The IID of the requested rowset interface. This interface is conceptually added to the list of required interfaces on the resulting rowset, and the method fails (E_NOINTERFACE) if that interface cannot be supported on the resulting rowset.</p>
<p class=dt>
<i>cPropertySets</i></p>
<p class=indent>
[in]<br>
The number of DBPROPSET structures in <i>rgPropertySets</i>. If this is 0, the provider ignores <i>rgPropertySets</i>.</p>
<p class=dt>
<i>rgPropertySets</i></p>
<p class=indent>
[in/out]<br>
An array of DBPROPSET structures containing properties and values to be set. The properties specified in these structures must belong to the Rowset property group. If the same property is specified more than once in <i>rgPropertySets</i>, then it is provider-specific which value is used. If <i>cPropertySets</i> is 0, this argument is ignored.</p>
<p class=tl>
For information about the properties in the Rowset property group that are defined by OLE DB, see "<a href="appcpr_8u7n.htm#oledbrowset_properties">Rowset Properties</a>" in Appendix C. For information about the DBPROPSET and DBPROP structures, see "<a href="ch11pr_5pb9.htm">DBPROPSET Structure</a>" and "<a href="ch11pr_3xt1.htm">DBPROP Structure</a>" in Chapter 11.</P><p class=dt>
<i>ppRowset</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return the requested interface pointer on the schema rowset. This rowset is read-only. If no applicable schema information exists, an empty rowset is returned.<br>
</p>
<p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded. In all DBPROP structures passed to the method, <i>dwStatus</i> is set to DBPROPSTATUS_OK.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_ASYNCHRONOUS<br>
The method has initiated asynchronous creation of the rowset. The consumer can call <b>IDBAsynchStatus</b> to poll for status or <b>IConnectionPointContainer</b> to obtain the IID_IDBAsynchNotify connection point. Attempting to call any other interfaces may fail and the full set of interfaces may not be available on the object until asynchronous initialization of the rowset has completed.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_ERRORSOCCURRED<br>
The rowset was opened but one or more properties—for which the <i>dwOptions</i> element of the DBPROP structure was DBPROPOPTIONS_OPTIONAL—were not set. The consumer checks <i>dwStatus</i> in the DBPROP structures to determine which properties were not set. The method can fail to set properties for a number of reasons:
<ul type=disc>
<li>
The property was not supported by the provider.<br><br></li>
<li>
The property was not in the Rowset property group.<br><br></li>
<li>
The property set was not supported by the provider.<br><br></li>
<li>
It was not possible to set the property.<br><br></li>
<li>
The <i>colid</i> in the DBPROP structure was invalid.<br><br></li>
<li>
The data type in <i>vValue</i> in the DBPROP structure was not the data type of the property or was not VT_EMPTY.<br><br></li>
<li>
The value in <i>vValue</i> in the DBPROP structure was invalid.<br><br></li>
<li>
The property's value conflicted with an existing property.<br><br></li>
<li>
A property was specified to be applied to all columns, but could not be applied to one or more columns.</li>
</ul>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
E_INVALIDARG<br>
<i>rguidSchema</i> was invalid.</p>
<p class=tl>
<i>rguidSchema</i> specified a schema rowset that was not supported by the provider.</P><p class=tl>
<i>cRestrictions</i> was greater than the number of restriction columns for the schema rowset specified in <i>rguidSchema</i>.</P><p class=tl>
In one or more restriction values specified in <i>rgRestrictions</i>, the <i>vt</i> element of the VARIANT was the incorrect type.</P><p class=tl>
<i>cRestrictions</i> was greater than zero and <i>rgRestrictions</i> was a null pointer.</P><p class=tl>
In an element of <i>rgRestrictions</i>, the <i>vt</i> element of the VARIANT was not VT_EMPTY and the provider did not support the corresponding restriction.</P><p class=tl>
<i>ppRowset</i> was a null pointer.</P><p class=tl>
In an element of <i>rgPropertySets</i>, <i>cProperties</i> was not 0 and <i>rgProperties</i> was a null pointer.</P><p class=tl>
<i>cPropertySets</i> was greater than zero and <i>rgPropertySets</i> was a null pointer.</P><p class=dt>
</p>
<p class=indent>
E_NOINTERFACE<br>
The schema rowset did not support the interface specified in <i>riid</i>.</p>
<p class=dt>
</p>
<p class=indent>
E_OUTOFMEMORY<br>
The provider was unable to allocate sufficient memory in which to create the rowset.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_ABORTLIMITREACHED<br>
The method failed because a resource limit has been reached. For example, a query used to implement the method timed out. No rowset is returned.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_ERRORSOCCURRED<br>
No rowset was returned because one or more properties—for which the <i>dwOptions</i> element of the DBPROP structure was DBPROPOPTIONS_REQUIRED or an invalid value—were not set. The consumer checks <i>dwStatus</i> in the DBPROP structures to determine which properties were not set. None of the satisfiable properties are remembered. The method can fail to set properties for any of the reasons specified in DB_S_ERRORSOCCURRED, except the reason that states that it was not possible to set the property.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_NOAGGREGATION<br>
<i>pUnkOuter</i> was not a null pointer and the rowset being created does not support aggregation.</p>
<p class=indent>
<i>pUnkOuter</i> was non-null and <i>riid</i> was not IID_Unknown.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_NOTSUPPORTED<br>
The provider does not support restrictions on one or more of the columns in the corresponding schema.</p>
<p class=dt>
</p>
<p class=indent>
DB_SEC_E_PERMISSIONDENIED<br>
The consumer did not have sufficient permission to create the schema rowset.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_OBJECTOPEN<br>
The provider would have to open a new connection to support the operation and DBPROP_MULTIPLECONNECTIONS is set to VARIANT_FALSE.</p>
<p class=dt>
</p>
<p class=label>
<b>Comments</b></p>
<p>
<b>GetRowset</b> allows the consumer to specify restrictions that limit the set of rows returned by the schema rowset, but does not define the format for such restrictions. The restriction array contains single values that are compared for equality to the corresponding value in the schema rowset. Only rows that exactly match the restriction value in the corresponding column are returned in the rowset. Pattern matching is not supported.</p>
<p>
When preparing an array of restriction values, consumers are not required to specify values for all of the restriction columns on a rowset. Any columns for which no restriction values are specified are not restricted.</p>
<p>
There are two ways for a consumer to explicitly specify that there is no restriction value for a column. First, the consumer cannot specify a restriction value for the column. For example, if there are three restriction columns, the consumer passes only two restriction values; these apply to the first two restriction columns and no value is specified for the third restriction column.</p>
<p>
Second, the consumer can set the <i>vt</i> element of the VARIANT specified for the column to VT_EMPTY, even if the provider does not support restrictions on the column. For example, suppose there are three restriction columns, the provider supports restrictions on the first and third columns, and the consumer wants to restrict values on these two columns. The consumer passes three restriction values. The first and third values are the desired restrictions and the second value is a VARIANT with a <i>vt</i> element of VT_EMPTY.</p>
<p>
If the <i>vt</i> element of the VARIANT specified for a restriction column is VT_NULL, this means that the column must be NULL to satisfy the restriction. This is equivalent to the <b>IS NULL</b> predicate in SQL. If the <i>vt</i> element of the VARIANT specified for a restriction column is VT_BSTR and the <i>bstrVal</i> element is set to a null pointer, this means that the column must contain an empty string to satisfy the restriction.<br>
</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="dbschr_9r5f.htm">IDBSchemaRowset::GetSchemas</a></p>
</font></BODY>
</HTML>
