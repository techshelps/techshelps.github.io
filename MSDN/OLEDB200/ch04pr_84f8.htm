<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Rowset with a Command</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbcreating_a_rowset_with_a_command"></a>Creating a Rowset with a Command</h1>
<p>
Providers that implement their own query or data definition language can offer their consumers additional functionality by using a command. This process involves three steps:
<ol>
<li>
The consumer creates a session. For more information, see "<a href="ch02pr_9ugj.htm">Sessions</a>" in Chapter 2.<br><br></li>
<li>
The consumer calls <b>IDBCreateCommand::CreateCommand</b> on the session to get a command. The command holds a text command. The consumer then fills in the text command, thereby stating what data to return in the rowset. The text command can be expressed in SQL and augmented by properties that request various functional services upon the resulting rowset. For more information about properties, see "<a href="ch04pr_02ib.htm">Setting Rowset Properties</a>" later in this chapter.<br><br></li>
<li>
The user calls <b>ICommand::Execute</b> on the command. <b>Execute</b> returns a rowset. See the following figure.<br><br></li>
</ol>
<p class=label>
<b>Getting a rowset from a session through a command</b></p>
<p>
<img src="ch0402.gif" border=0></p>
</font></BODY>
</HTML>
