<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview of Creating a Complex Bound Control</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="overviewofcreatingcomplexboundcontrol"></a>Overview of Creating a Complex Bound Control</h1>
<p>
There are two types of data-bound ActiveX controls: simple and complex.</p>
<p>
A complex bound control is exemplified by a list or grid control, which can display or manipulate more than one row or column of data from a data source. Complex bound controls give you more ways to retrieve and search data through the use of OLE DB interfaces.</p>
<p>
Complex bound controls have a data-source bound property. However, some controls can have both a data-source bound property and simple bound properties. For example, the <b>DBList</b> control in Visual Basic 5.0 has a data-source bound property (<b>RowSource</b>) and a simple bound property (<b>BoundText</b>). <b>DBList</b> was designed to use a data-source bound property to display a list of data and a simple bound property to update data.</p>
<p>
Complex bound controls access data differently than simple bound controls. A complex control uses OLE DB data-binding interfaces (<b>IDataSource</b> and <b>IRowPosition</b>) to gain access to a rowset, then consumes data by using OLE DB interfaces. </p>
</font></BODY>
</HTML>
