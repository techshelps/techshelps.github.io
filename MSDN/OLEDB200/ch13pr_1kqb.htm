<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Return Codes</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbreturn_codes"></a>Return Codes</h1>
<p>
Each method returns a code, known as the <i>return code</i>, that indicates the overall success or failure of the method. These return codes are of type HRESULT. Program logic is usually based on return codes. There are two classes of return codes: <i>success and warning </i>codes, and <i>error</i> codes.</p>
<p>
Success and warning codes begin with S_ or DB_S_ and indicate that the method successfully completed. If the return code is other than S_OK or S_FALSE, it is likely that an error occurred from which the method was able to recover. For example, <b>IRowset::GetNextRows</b> returns DB_S_ENDOFROWSET when it is unable to return the requested number of rows due to reaching the end of the rowset or chapter. If a single warning condition occurs, the method returns the code for that condition; if multiple warning conditions occur, the method describes the hierarchy of warning return codes—that is, which warning code should be returned when given a choice between multiple warning return codes.</p>
<p>
Error codes begin with E_ or DB_E_ and indicate that the method failed completely and was unable to do any useful work. For example, <b>GetNextRows</b> returns E_INVALIDARG when the pointer in which it is to return a pointer to an array of row handles (<i>prghRows</i>) is null. One exception is that some of the methods that return DB_E_ERRORSOCCURRED allocate memory in which to return additional information about these errors. Consumers must free this memory. For information about which methods allocate memory in this case, see the methods that return DB_E_ERRORSOCCURRED. Although error codes can indicate run-time errors such as running out of memory, they usually indicate programming errors. If multiple errors occur, which code is returned is provider-specific. If both errors and warnings occur, the method fails and returns an error code.</p>
<p>
All methods can return S_OK, E_FAIL, and E_OUTOFMEMORY. The reference sections list S_OK and E_FAIL for all methods. In most cases, E_OUTOFMEMORY is listed only for those methods which allocate memory that is returned to the consumer. The reason for listing E_OUTOFMEMORY in these sections is to remind consumer programmers that they can call the method successfully by requesting fewer returned values, such as fewer rows from <b>GetNextRows</b>.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp; </b></B>Methods that return DB_S_ERRORSOCCURRED return this error only when one or more errors occur. Consumers should be aware that some providers incorrectly return DB_S_ERRORSOCCURRED when no errors but one or more warnings occur.</p>
</font></BODY>
</HTML>
