<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual J++: Information and Guidelines</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbpwk_vjstuff"></a><sup></sup>Visual J++: Information and Guidelines</h1>
<p>
Here is a brief outline of the steps needed to build the OSP component in Visual J++:
<ul type=disc>
<li>
Create a Java application.<br><br></li>
<li>
Implement <a href="pw_id_6xid.htm">IDataSource</a> on the Java application.<br><br></li>
<li>
Implement the methods for <a href="pw_osp_90s2.htm">OLEDBSimpleProvider</a> with the object (at least once).</li>
</ul>
<h4>Registration</h4>
<p>
In Visual J++, you create your own ProgID for the <a href="pw_toverview_4fxz.htm#oledbpwk_odooverview">OSP Data Object</a>. Then use javareg to register the OSP Data Object. You need to use the ProgID you created for the OSP Data Object when registering the provider.</p>
<h4>Programming Notes</h4>
<ul type=disc>
<li>
In Visual J++ implementations, use <a href="pw_id_6xid.htm">IDataSource</a> and its methods (such as <b>GetDataMember</b>) to expose the correct OSP implementation to the <a href="pw_toverview_4fxz.htm#oledbpwk_oledbmappinglayer">Simple Provider DLL</a> (MSDAOSP.DLL). <br><br></li>
<li>
When coding data source notifications in Visual J++, use the <a href="pw_msdso_42b6.htm">addDataSourceListener</a> and <a href="pw_msdso_42b6.htm">removeDataSourceListener</a> methods with <b>IDataSource </b>to add and remove <b>DataSource</b> listeners.<br><br></li>
<li>
jactivex is available in the Microsoft SDK for Java 2.0, and is now included with Visual J++.</li>
</ul>
<p>
<code></code></p>
</font></BODY>
</HTML>
