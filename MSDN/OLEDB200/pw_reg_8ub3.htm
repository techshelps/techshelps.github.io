<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering Providers</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbpwk_reg_intro"></a><sup></sup>Registering Providers</h1>
<p>
The OLE DB Simple Provider Toolkit includes a registration template (RegisterProvider.reg) that you fill in before registering the OLE DB provider. The template lets you build a .REG file that allows the OLE DB Simple Provider DLL (MSDAOSP.DLL) to recognize the OSP Data Object, which must be registered separately using regsvr32.exe. <a href="pw_reg_77j9.htm">Using the RegisterProvider.reg file</a> contains all the information you need to know about how to complete the template and import those settings into the Windows<sup>®</sup> registry.</p>
<p>
There are two suggested methods for registering an OLE DB provider built with the Toolkit. Click on either for a listing of the registry entries for each.
<ul type=disc>
<li>
<a href="pw_reg_8e93.htm">Full registration</a>. When you register the provider with this method, the provider is recognized and functions most like any OLE DB provider on a computer.<br><br></li>
<li>
<a href="pw_reg_6nxj.htm">Registration without an OSP entry</a>. When you register the provider using this method, you register it without a special entry for the OSP Data Object. </li>
</ul>
</font></BODY>
</HTML>
