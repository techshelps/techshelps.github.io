<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRowsetNotify::OnRowChange</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbirowsetnotify__onrowchange"></a>IRowsetNotify::OnRowChange</h1>
<p>
Notifies the consumer of the first change to a row, or any change that affects the entire row.</p>
<pre><code>HRESULT OnRowChange (
   IRowset*            pRowset,
   ULONG            cRows,
   const HROW         rghRows[],
   DBREASON         eReason,
   DBEVENTPHASE   ePhase,
   BOOL               fCantDeny);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pRowset</i></p>
<p class=indent>
[in]<br>
A pointer to the rowset, because the consumer may be receiving notifications from multiple rowsets and this identifies which one is calling.</p>
<p class=dt>
<i>cRows</i></p>
<p class=indent>
[in]<br>
The count of row handles in <i>rghRows</i>.</p>
<p class=dt>
<i>rghRows</i></p>
<p class=indent>
[in]<br>
An array of handles of rows that are changing. This array belongs to the caller (rowset) and must not be freed or used beyond the duration of the method call.</p>
<p class=tl>
After this method returns, the reference count of these rows will be unchanged unless the consumer explicitly changes them. This is different from other methods that return rows to the consumer, in which the provider explicitly increments the reference counts. Therefore, if the consumer wants to guarantee that these row handles are valid after this method returns, it must call <b>IRowset::AddRefRows</b> for these rows while it is processing this method.</P><p class=dt>
<i>eReason</i></p>
<p class=indent>
[in]<br>
The reason of the event that caused this change. If this value is not recognized by the method, the method returns S_OK or DB_S_UNWANTEDREASON.</p>
<p class=dt>
<i>ePhase</i></p>
<p class=indent>
[in]<br>
The phase of this notification.</p>
<p class=dt>
<i>fCantDeny</i></p>
<p class=indent>
[in]<br>
When this flag is set to TRUE, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</p>
<p class=dt>
</p>
<p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
S_FALSE<br>
The event/phase is vetoed by reason of logical objection or a failure to be able to implement, as permitted for the phase.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_UNWANTEDPHASE<br>
The consumer is not interested in receiving this phase for this reason. The provider can optimize by making no further calls with this reason and phase. The phases for other reasons are unaffected.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_UNWANTEDREASON<br>
The consumer is not interested in receiving any phases for this reason. The provider can optimize by making no further calls with this reason.</p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A consumer-specific error occurred. Unless the consumer also returns S_FALSE, the provider continues the operation.</p>
<p class=dt>
</p>
<p class=label>
<b>Comments</b></p>
<p>
Possible reasons are any of the DBREASON_ROW_* reasons.</p>
<p>
Phases occur as documented for the DBREASON enumeration. Prior values remain in the row up to and including the DBEVENTPHASE_ABOUTTODO phase. The new value is visible with the DBEVENTPHASE_SYNCHAFTER or later phases.</p>
<p>
When a DBREASON_ROW_ACTIVATE notification is triggered, the array of row handles passed to <b>OnRowChange</b> is exactly the order in which the rows were fetched.</p>
<p>
Unless the consumer returns S_FALSE, the provider continues the operation. This is true even if the consumer returns E_FAIL or any other error code.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="rownfy_9smd.htm">IRowsetNotify::OnFieldChange</a>, <a href="rownfy_5rmt.htm">IRowsetNotify::OnRowsetChange</a></p>
</font></BODY>
</HTML>
