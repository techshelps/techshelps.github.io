<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limitations of Storage Objects</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledblimitations_of_storage_objects"></a>Limitations of Storage Objects</h1>
<p>
Storage objects are subject to the following limitations. Whether these limitations always exist is provider specific.
<ul type=disc>
<li>
<b>Number of storage objects</b>—Some providers can support only one open storage object at a time, while others can support multiple open storage objects. If the provider supports only one open storage object at a time, any method that attempts to open a second storage object returns a status of DBSTATUS_E_CANTCREATE for the column or parameter, regardless of whether the objects are constructed over the same column, different columns in the same row, or different rows. A consumer determines whether a provider supports one or many storage objects by calling <b>IDBProperties::GetProperties</b> for the DBPROP_MULTIPLESTORAGEOBJECTS property.<br><br></li>
<li>
<b>Exclusionary behavior of storage objects</b>—Because of the way storage objects are implemented by some providers, using a storage object might prevent the use of other methods on the rowset. That is, after a storage object is created and before it is released, methods other than those on the storage object might return E_UNEXPECTED. A consumer determines whether storage objects might prevent other methods by calling <b>IDBProperties::GetProperties</b> in the DBPROP_BLOCKINGSTORAGEOBJECTS property.<br><br></li>
<li>
<b>Length of storage object must be known</b>—Some providers need to know the number of bytes of BLOB data that will be sent before any of the data is sent. This is usually related to a similar requirement in the underlying DBMS. For more information, see "<a href="ch07pr_2wdv.htm">Getting and Setting BLOB Data with Storage Objects</a>" later in this chapter.</li>
</ul>
</font></BODY>
</HTML>
