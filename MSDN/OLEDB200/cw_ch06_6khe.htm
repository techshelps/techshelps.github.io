<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDataSource::getDataMember</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="idatasourcegetdatamember"></a>IDataSource::getDataMember</h1>
<p>
Returns a data access object (such as a row position) for a given data member.</p>
<pre><code>HRESULT getDataMember(
DataMember   bstrDM
REFIID   riid
IUnknown   ** ppunk);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>bstrDM </i>[in]</p>
<p class=indent>
A string that describes the data member that represents one or more sets of data supported by the data source.</p>
<p class=dt>
<i>riid</i> [in]</p>
<p class=indent>
The interface identifier of the specified data access object.</p>
<p class=dt>
<i>ppunk</i> [out]</p>
<p class=indent>
The pointer of the returned interface.</p>
<p class=dt>
</p>
<p class=label>
<b>Return Code</b></p>
<p class=dt>
S_OK</p>
<p class=indent>
The method succeeded.</p>
<p class=dt>
E_FAIL</p>
<p class=indent>
A provider-specific error occurred.</p>
<p class=dt>
E_NOINTERFACE</p>
<p class=indent>
Does not support the specified data access object.</p>
<p class=dt>
</p>
<p class=label>
<b>Comments</b></p>
<p>
If the data access object is not available, then Null should be returned for the <b>IUnknown</b>. If the data member string is invalid, then an error should be returned indicating its problem (using <b>ISupportErrorInfo</b> if necessary). The default data member is specified by either a zero-length string or a Null string (they are equivalent). The caller can specify which type of data access object it is interested in by specifying an IID of the main data access interface for the object—for example, IID_IRowPosition, IID_ISimpleTabularData, IID_IRowset, IID_ICursor, IID_IVBDSC, and so forth. If the data source does not support the desired data access object, it returns E_NOINTERFACE. This allows the consumer to try multiple interfaces in order of preference. When asked for IID_IUnknown, the data source should return the data access object that is natural for it.</p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>The return value from <b>GetDataMember</b> is always an <b>IUnknown</b> pointer, regardless of the specified IID. The caller of the method must query for the appropriate interface. That is, the IID parameter does not specify which interface, but rather which data access object type to return.</p>
</font></BODY>
</HTML>
