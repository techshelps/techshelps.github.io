<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMDRangeRowset::
GetRangeRowset</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="imdrangerowsetgetrangerowset"></a>IMDRangeRowset::<br>
GetRangeRowset</h1>
<p>
Returns the range rowset for the desired set of cells in the dataset.</p>
<pre><code>HRESULT GetRangeRowset(
   IUnknown*         pUnkOuter,
   ULONG               ulStartCell,
   ULONG               ulEndCell,
   REFIID            riid,
   ULONG               cPropertySets,
   DBPROPSET         rgPropertySets,
   IUnknown**         ppRowset);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pUnkOuter</i>[in]</p>
<p class=indent>
A pointer to the controlling <b>IUnknown</b> if the range rowset is being created as part of an aggregate.</p>
<p class=dt>
<i>ulStartCell</i>[in]</p>
<p class=indent>
The cell ordinal of the first cell in the range.</p>
<p class=dt>
<i>ulEndCell</i>[in]</p>
<p class=indent>
The cell ordinal of the last cell in the range.</p>
<p class=dt>
<i>riid</i>[in]</p>
<p class=indent>
The IID of the requested rowset interface.</p>
<p class=dt>
<i>cPropertySets</i>[in]</p>
<p class=indent>
The number of DBPROPSET structures in <i>rgPropertySets</i>. If this is zero, the provider ignores <i>rgPropertySets</i>.</p>
<p class=dt>
<i>rgPropertySets</i>[in/out]</p>
<p class=indent>
An array of DBPROPSET structures, containing properties and values to be set. The properties specified in these structures must belong to the ROWSET property group. If the same property is specified more than once in <i>rgPropertySets</i>, then the value to be used is provider-specific.</p>
<p class=dt>
<i>ppRowset</i>[out]</p>
<p class=indent>
A pointer to memory in which to return the requested interface pointer on the range rowset.</p>
<p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded. The status of all columns (cell properties) for all rows (cells) bound by the accessor is set to DBSTATUS_S_OK, DBSTATUS_S_ISNULL, or DBSTATUS_S_TRUNCATED.</p>
<p class=indent>
DB_S_ERRORSOCCURRED<br>
The rowset was opened but one or more properties — for which the <i>dwOptions</i> element of the DBPROP structure was DBPROPOPTIONS_SETIFCHEAP — were not set. The consumer checks <i>dwStatus</i> in the DBPROP structures to determine which properties were not set. The method can fail to set properties for a number of reasons, including:
<ul type=disc>
<li>
The property was not supported by the provider.<br><br></li>
<li>
The property was not in the ROWSET property group.<br><br></li>
<li>
The property set was not supported by the provider.<br><br></li>
<li>
It was not cheap to set the property.<br><br></li>
<li>
<i>colid</i> in the DBPROP structure was invalid.<br><br></li>
<li>
The value of <i>dwOptions</i> in the DBPROP structure was invalid.<br><br></li>
<li>
The data type in <i>vValue</i> in the DBPROP structure was not the property data type of the property or was not VT_EMPTY.<br><br></li>
<li>
The value in <i>vValue</i> in the DBPROP structure was invalid.<br><br></li>
<li>
The property’s value conflicted with an existing property.<br><br></li>
<li>
A property was specified to be applied to all columns, but could not be applied to one or more columns.</li>
</ul>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=indent>
E_INVALIDARG<br>
<i>ulStartCell</i> or <i>ulEndCell</i> is invalid.</p>
<p class=tl>
<i>ppRowset</i> was a null pointer.</P><p class=tl>
<i>cPropertySets</i> was greater than zero and <i>rgPropertySets</i> was a null pointer.</P><p class=tl>
In an element of <i>rgPropertySets</i>, <i>cProperties</i> was not zero and <i>rgProperties</i> was a null pointer.</P><p class=tl>
E_NOINTERFACE<br>
The range rowset did not support the interface specified in <i>riid</i>.</P><p class=indent>
DB_E_ERRORSOCCURRED<br>
No rowset was returned because one or more properties — for which the <i>dwOptions</i> element of the DBPROP structure was DBPROPOPTIONS_REQUIRED — were not set. The consumer checks <i>dwStatus</i> in the DBPROP structures to determine which properties were not set. None of the properties are remembered. The method can fail to set properties for any of the reasons specified in DB_S_ERRORSOCCURRED except for the reason that states that it was not cheap to set the property.</p>
<p class=indent>
MD_E_INVALIDCELLRANGE<br>
<i>ulStartCell</i> was greater than <i>ulEndCell</i> and <i>ulEndCell</i> was not zero.</p>
<p class=tl>
<i>ulStartCell</i>, <i>ulEndCell</i>, or both specified a cell ordinal that was not in the dataset.</P><p class=label>
<b>Comments</b></p>
<p>
This method allows the retrieval of a range rowset based on a slice of the dataset. The consumer identifies the desired slice by specifying the <i>ulStartCell</i> and <i>ulEndCell</i> parameters. The <i>ulStartCell</i> parameter is the upper left corner of the slice and <i>ulEndCell</i> is the lower right corner of the slice. The slice of the dataset identified by these parameters is the same as that described for <b>IMDDataset::GetCellData</b>.</p>
<p>
The range rowset contains one row for each cell in the slice. The first column of the this rowset is always CELL_ORDINAL. Subsequent columns are those that are selected in the creation of the dataset. If the provider supports cell updatability, then one or more columns of the range rowset can be updated. Typically, this includes the VALUE column. </p>
<p>
For more information, see “Updating Cell Data” in Chapter 2.</p>
</font></BODY>
</HTML>
