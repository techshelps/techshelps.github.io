<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISessionProperties::GetProperties</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbisessionproperties__getproperties"></a>ISessionProperties::GetProperties</h1>
<p>
Returns the list of properties in the Session property group that are currently set on the session.</p>
<pre><code>HRESULT GetProperties (
   ULONG                  cPropertyIDSets,
   const DBPROPIDSET   rgPropertyIDSets[],
   ULONG *                  pcPropertySets,
   DBPROPSET **         prgPropertySets);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>cPropertyIDSets</i></p>
<p class=indent>
[in]<br>
The number of DBPROPIDSET structures in <i>rgPropertyIDSets</i>.</p>
<p class=tl>
If <i>cPropertySets</i> is zero, the provider ignores <i>rgPropertyIDSets</i> and returns the values of all properties in the Session property group for which values have been set or defaults exist. It does not return the values of properties in the Session property group for which values have not been set and no defaults exist.</P><p class=tl>
If <i>cPropertyIDSets</i> is not zero, the provider returns the values of the requested properties. If a property is not supported, the returned value of <i>dwStatus</i> in the returned DBPROP structure for that property is DBPROPSTATUS_NOTSUPPORTED and the value of <i>dwOptions</i> is undefined.</P><p class=dt>
<i>rgPropertyIDSets</i></p>
<p class=indent>
[in]<br>
An array of <i>cPropertyIDSets</i> DBPROPIDSET structures. The properties specified in these structures must belong to the Session property group. The provider returns the values of information about the properties specified in these structures. If <i>cPropertyIDSets</i> is zero, then this parameter is ignored.</p>
<p class=tl>
For information about the properties in the Session property group that are defined by OLE DB, see "<a href="appcpr_8u7n.htm#oledbsession_properties">Session Properties</a>" in Appendix C. For information about the DBPROPIDSET structure, see "<a href="ch11pr_3gbp.htm">DBPROPIDSET Structure</a>" in Chapter 11.</P><p class=dt>
<i>pcPropertySets</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return the number of DBPROPSET structures returned in *<i>prgPropertySets</i>. If <i>cPropertyIDSets</i> is zero, *<i>pcPropertySets</i> is the total number of property sets for which the provider supports at least one property in the Session property group. If <i>cPropertyIDSets</i> is greater than zero, *<i>pcPropertySets</i> is set to <i>cPropertyIDSets</i>. If an error other than DB_E_ERRORSOCCURRED occurs, *<i>pcPropertySets</i> is set to zero.</p>
<p class=dt>
<i>prgPropertySets</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return an array of DBPROPSET structures. If <i>cPropertyIDSets</i> is zero, then one structure is returned for each property set that contains at least one property belonging to the Session property group. If <i>cPropertyIDSets</i> is not zero, then one structure is returned for each property set specified in <i>rgPropertyIDSets</i>.</p>
<p class=tl>
If <i>cPropertyIDSets</i> is not zero, the DBPROPSET structures in *<i>prgPropertySets</i> are returned in the same order as the DBPROPIDSET structures in <i>rgPropertyIDSets</i>; that is, for corresponding elements of each array, the <i>guidPropertySet</i> elements are the same. If <i>cPropertyIDs</i>, in an element of <i>rgPropertyIDSets</i>, is not zero, the DBPROP structures in the corresponding element of *<i>prgPropertySets</i> are returned in the same order as the DBPROPID values in <i>rgPropertyIDs</i>; that is, for corresponding elements of each array, the property IDs are the same.</P><p class=tl>
The provider allocates memory for the structures and returns the address to this memory; the consumer releases this memory with <b>IMalloc::Free</b> when it no longer needs the structures. Before calling <b>IMalloc::Free</b> for *<i>prgPropertySets</i>, the consumer should call <b>IMalloc::Free</b> for the <i>rgProperties</i> element within each element of *<i>prgPropertySets</i>. If *<i>pcPropertySets</i> is zero on output or if an error other than DB_E_ERRORSOCCURRED occurs, the provider does not allocate any memory and ensures that *<i>prgPropertySets</i> is a null pointer on output.</P><p class=tl>
For information about the DBPROPSET and DBPROP structures, see "<a href="ch11pr_5pb9.htm">DBPROPSET Structure</a>" and "<a href="ch11pr_3xt1.htm">DBPROP Structure</a>" in Chapter 11.</P><p class=tl>
</P><p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded. In all DBPROP structures returned by the method, <i>dwStatus</i> is set to DBPROPSTATUS_OK.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_ERRORSOCCURRED<br>
No value was returned for one or more properties. The consumer checks <i>dwStatus</i> in the DBPROP structure to determine the properties for which values were not returned. <b>GetProperties</b> can fail to return properties for a number of reasons, including:
<ul type=disc>
<li>
The property was not supported by the provider.<br><br></li>
<li>
The property was not in the Session property group.<br><br></li>
<li>
The property set was not supported by the provider. If <i>cPropertyIDs</i> in the DBPROPIDSET structure for the property set was zero, the provider cannot set <i>dwStatus</i> in the DBPROP structure because it does not know the IDs of any properties in the property set. Instead, it sets <i>cProperties</i> to zero in the DBPROPSET structure returned for the property set.</li>
</ul>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
E_INVALIDARG<br>
<i>cPropertyIDSets</i> was not equal to zero and <i>rgPropertyIDSets</i> was a null pointer.</p>
<p class=tl>
<i>pcPropertySets</i> or <i>prgPropertySets</i> was a null pointer.</P><p class=tl>
In an element of <i>rgPropertyIDSets</i>, <i>cPropertyIDs</i> was not zero and <i>rgPropertyIDs</i> was a null pointer.</P><p class=dt>
</p>
<p class=indent>
E_OUTOFMEMORY<br>
The provider was unable to allocate sufficient memory in which to return the DBPROPSET or DBPROP structures.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_ERRORSOCCURRED<br>
Values were not returned for any properties. The provider allocates memory for *<i>prgPropertySets</i> and the consumer checks <i>dwStatus</i> in the DBPROP structures to determine why properties were not returned. The consumer frees this memory when it no longer needs the information.</p>
<p class=dt>
</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="dbprop_3ffz.htm">IDBProperties::GetPropertyInfo</a>, <a href="sesprop_5z5f.htm">ISessionProperties::SetProperties</a></p>
</font></BODY>
</HTML>
