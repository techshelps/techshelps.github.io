<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Notifications</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbnotifications"></a>Overview of Notifications</h1>
<p>
Notifications permit an application to be aware of changes to its data. Frequently, numerous consumers require access and/or updating ability to the same data. It is therefore necessary for these consumers to know when changes occur. In OLE DB, notifications are sent by the provider when significant changes occur to row or rowset state. This chapter explains when notifications are sent, as well as how to nest and group them. It also discusses ways to screen out unwanted events or phases, enhancing the consumer’s knowledge of the data's state. To illustrate a method issuing notifications, states and state transitions in providers and consumers are diagrammed. </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=603>
<tr valign=top>
<td class=label width=50%><b>For more information on</b></td>
<td class=label width=50%><b>Go to</b></td>
</tr>
<tr valign=top>
<td width=50%>Consumers and providers</td>
<td width=50%>“<a href="ch01pr_9lgz.htm">Consumers and Providers</a>” in Chapter 1, “Overview of OLE DB”</td>
</tr>
<tr valign=top>
<td width=50%>When notifications are sent</td>
<td width=50%>“<a href="ch09pr_5g50.htm">When Notifications Are Sent</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Nested notifications</td>
<td width=50%>“<a href="ch09pr_5g50.htm">When Notifications Are Sent</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Grouped notifications</td>
<td width=50%>“<a href="ch09pr_5g50.htm">When Notifications Are Sent</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>States and state transitions in providers</td>
<td width=50%>“<a href="ch09pr_8jcj.htm">States and State Transitions in Providers</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>States and state transitions in consumers</td>
<td width=50%>“<a href="ch09pr_9jeb.htm">States and State Transitions in Consumers</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Threading and notifications</td>
<td width=50%>"<a href="ch14pr_2c8j.htm">Threading and Notifications</a>" in Chapter 14, "Programming Considerations"</td>
</tr>
</table><br>
<p>
Consumers may need to be aware of changes other consumers make to a shared rowset. For example, suppose multiple consumers share a rowset and some of these consumers update the rowset directly by using <b>IRowsetChange</b> or <b>IRowsetUpdate</b>. The nonupdating consumers may want to be notified of changes made by updating consumers to be able to refresh their local state.</p>
<p>
To be notified of such changes, which are called <i>endogenous changes</i>, consumers implement <b>IRowsetNotify</b> and register it on a connection point with the provider. Providers call the methods in this interface to notify the consumers of changes made by other consumers of the same rowset.</p>
</font></BODY>
</HTML>
