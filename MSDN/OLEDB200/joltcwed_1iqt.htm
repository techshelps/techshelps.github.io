<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRowsetUpdate:IRowsetChange</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="irowsetupdateirowsetchange"></a>IRowsetUpdate:IRowsetChange</h1>
<p>
<b>IRowsetUpdate</b> enables consumers to delay the transmission of changes made with <b>IRowsetChange</b> to the data source. This interface also enables consumers to undo changes before transmission.</p>
<p>
If <b>IRowsetUpdate</b> is exposed on the rowset, then changes made through <b>IRowsetChange</b> are buffered in the rowset and not transmitted to the data source until <b>IRowsetUpdate::Update</b> is called. This is known as delayed update mode. If <b>IRowsetUpdate </b>is not exposed on the rowset, then changes made through <b>IRowsetChange</b> are immediately transmitted to the data source. This is known as immediate update mode. </p>
<p>
The consumer calls the methods in <b>IRowsetChange</b> to update, delete, and insert rows. The rowset buffers these changes. When the consumer is ready to transmit these changes to the data source, it calls <b>Update</b>. Before calling <b>Update</b>, the consumer can back out any changes with <b>Undo</b>.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Method</b><u> </u></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>GetOriginalData</b></td>
<td width=50%>Gets the data most recently fetched from or transmitted to the data source. Does not get values based on pending changes.</td>
</tr>
<tr valign=top>
<td width=50%><b>GetPendingRows</b></td>
<td width=50%>Returns a list of rows with pending changes.</td>
</tr>
<tr valign=top>
<td width=50%><b>GetRowStatus</b></td>
<td width=50%>Returns the status of rows.</td>
</tr>
<tr valign=top>
<td width=50%><b>Undo</b></td>
<td width=50%>Undoes any changes made to a row since it was last fetched or since Update was called for it.</td>
</tr>
<tr valign=top>
<td width=50%><b>Update</b></td>
<td width=50%>Transmits any changes made to a row since it was last fetched or since Update was called for it.</td>
</tr>
</table><br>
<h3>IRowsetUpdate::GetOriginalData</h3>
<p>
Gets the data most recently fetched from or transmitted to the data source. Does not get values based on pending changes. For information on how this interface is implemented, see the <i>OLE DB Programmer’s Reference</i>.</p>
<h3>IRowsetUpdate::GetPendingRows</h3>
<p>
Returns a list of rows with pending changes. For information on how this interface is implemented, see the <i>OLE DB Programmer’s Reference</i>.</p>
<h3>IRowsetUpdate::GetRowStatus</h3>
<p>
Returns the status of rows. For information on how this interface is implemented, see the <i>OLE DB Programmer’s Reference</i>.</p>
<h3>IRowsetUpdate::Undo</h3>
<p>
Undoes any changes made to a row since it was last fetched or <b>Update</b> was called for it. For information on how this interface is implemented, see the <i>OLE DB Programmer’s Reference</i>.</p>
<h3>IRowsetUpdate::Update</h3>
<p>
Transmits any changes made to a row since it was last fetched or <b>Update</b> was called for it. For information on how this interface is implemented, see the <i>OLE DB Programmer’s Reference</i>.</p>
</font></BODY>
</HTML>
