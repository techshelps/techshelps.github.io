<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Getting and Setting Data</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbgetting_and_setting_data"></a>Overview of Getting and Setting Data</h1>
<p>
This chapter discusses how data is transferred between the consumer and provider. A <i>consumer</i> is any piece of system or application code that consumes an OLE DB interface. This includes OLE DB components themselves. A <i>provider</i> is any software component that exposes an OLE DB interface. The three parts of data—<i>value</i>, <i>length</i> of the value, and its <i>status</i>—are discussed. A<i>ccessors</i>, which are a collection of information that describes how data is stored in the consumer's buffer, are presented, along with a special type called the reference accessor. Defined another way, an accessor is a collection of <i>bindings</i>: Each binding associates a single column or parameter to the consumer's buffer. Bindings and their structures as exposed by DBBINDING are discussed. Obviously an important aspect of data transfer for the consumer is memory management. This, along with procedures for data transfer, completes the topic of “Getting and Setting Data.”</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=603>
<tr valign=top>
<td class=label width=50%><b>For more information on</b></td>
<td class=label width=50%><b>Go to</b></td>
</tr>
<tr valign=top>
<td width=50%>Consumers and providers</td>
<td width=50%>“<a href="ch01pr_9lgz.htm">Consumers and Providers</a>” in Chapter 1, “Overview of OLE DB”</td>
</tr>
<tr valign=top>
<td width=50%>OLE DB components</td>
<td width=50%>“<a href="ch01pr_26b7.htm">OLE DB Components</a>” in Chapter 1, “Overview of OLE DB”</td>
</tr>
<tr valign=top>
<td width=50%>Parts of data</td>
<td width=50%>“<a href="ch06pr_2mib.htm">Data Parts</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Status of a data value</td>
<td width=50%>“<a href="ch06pr_5q9f.htm">Status</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Accessors</td>
<td width=50%>“<a href="ch06pr_74kz.htm">Accessors</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Reference accessors</td>
<td width=50%>“<a href="ch06pr_39mb.htm">Reference Accessors</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Bindings and their structures</td>
<td width=50%>“<a href="ch06pr_03zn.htm">Bindings</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Memory management in data transfer</td>
<td width=50%>“<a href="ch06pr_7bp0.htm">Memory Management</a>” in this chapter</td>
</tr>
<tr valign=top>
<td width=50%>Data transfer procedures</td>
<td width=50%>“<a href="ch06pr_9ayb.htm">Data Transfer Procedures</a>” in this chapter</td>
</tr>
</table><br>
<p>
<i>Data</i> refers collectively to parameter data and rowset data. <i>Parameter data</i> is the data used for parameters in commands. For example, in the text command <b>SELECT * FROM MyTable WHERE Name = ?</b>, the question mark represents a parameter and the consumer sends data for this parameter to the provider when it executes the command. <i>Rowset data</i> is the data returned in a rowset, such as the rowset generated by executing the previous command, and key column values passed to an index rowset when setting the index range or seeking for a key value.</p>
<p>
Data is stored in both the consumer and the provider. The consumer stores data in a buffer. A <i>binding</i> associates, or <i>binds</i>, a single column or parameter to the consumer's buffer, and a group of bindings is gathered together in an <i>accessor</i>. When transferring data, the handle to the accessor and the pointer to the buffer are passed to the provider. In the provider, data is stored in a provider-specific way. For example, it may be placed in a structure, such as the rowset's copy of a row, or passed directly through to the data source.</p>
<p>
The provider actually transfers the data from consumer to provider and provider to consumer. <i>Getting</i> data is defined as transferring data from the provider to the consumer, as when getting rowset data with <b>IRowset::GetData</b> or getting output parameter data with <b>ICommand::Execute</b>. <i>Setting</i> data is defined as transferring data from the consumer to the provider, as when setting rowset data with <b>IRowsetChange::SetData</b>, key values with <b>IRowsetIndex::SetRange</b>, or input parameter data with <b>Execute</b>.</p>
</font></BODY>
</HTML>
