<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transaction Retention</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbtransaction_retention"></a>Transaction Retention</h1>
<p>
Committing or aborting the transaction with the <i>fRetaining</i> flag in <b>ITransaction::Commit</b> or <b>ITransaction::Abort</b> set to TRUE commits or aborts and implicitly starts a new unit of work. If the <i>fRetaining</i> flag is set to FALSE, the transaction is committed or aborted with no new unit of work created—any new work done on the session is outside the scope of a transaction. This is sometimes referred to as auto-commit or implicit mode. Attempting to explicitly commit or abort a transaction when there is no outstanding transaction returns an error.</p>
<p>
Commands are always fully functional after a retaining commit or abort. The command also remains active in the case of a nonretaining commit or abort, but the prepared state may be lost.</p>
</font></BODY>
</HTML>
