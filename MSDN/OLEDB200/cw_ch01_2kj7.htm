<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling Notifications</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="handlingnotifications"></a>Handling Notifications</h1>
<p>
Three interfaces provide notifications to their consumers: <b>IDataSource</b>, <b>IRowPosition</b>, and <b>IRowset</b>.</p>
<h1>IDataSource and IDataSourceListener</h1>
<p>
A consumer implements <b>IDataSourceListener</b> to get notifications from an <b>IDataSource</b> object. <b>IDataSourceListener</b> is simple to implement because it is not a COM object and therefore does not require reference counting. A consumer calls <b>IDataSource::AddDataSourceListener</b> to add itself to the notification list, and <b>IDataSource::RemoveDataSourceListener</b> to remove itself from the notification list.</p>
<p>
Refer to the <b>IDataSource</b> specification for more detail.</p>
<h1>IRowPosition and IRowPositionChange</h1>
<p>
A consumer implements <b>IRowPositionChange</b> when it wants to know when the current row position is being changed. <b>IRowPositionChange</b> is a COM interface and therefore requires reference counting. A consumer needs to use <b>QueryInterface</b> on the <b>IRowPosition</b> object for its <b>IConnectionPointContainer</b> interface to add or remove its implementation of <b>IRowPositionChange</b> from the notification chain.</p>
<p>
To facilitate the use of <b>IConnectionPointContainer</b>, consumers may choose to use the routines and classes implemented in Advcon.cpp and Advcon.h. See the Advise Connections section in Appendix B for more details.</p>
<h1>IRowset and IRowsetNotify</h1>
<p>
A consumer implements <b>IRowsetNotify</b> to receive notifications from the rowset. A consumer needs to use <b>QueryInterface</b> on the <b>IRowset</b> object for its <b>IConnectionPointContainer</b> interface to add or remove its implementation of <b>IRowsetNotify</b> from the notification chain. Again, using the Advise Connections helpers will greatly simplify this process.</p>
<p>
For more information about this topic, see the <i>OLE DB Programmer’s Reference,</i> Chapter 9, “Notifications.”</p>
</font></BODY>
</HTML>
