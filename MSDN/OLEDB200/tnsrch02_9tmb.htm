<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Measures on the COLUMNS Axis</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="usingmeasuresoncolumnsaxis"></a>Using Measures on the COLUMNS Axis</h1>
<p>
In the special case of a dataset consisting of only the Measures dimension along the x-axis, the resulting flattened view is typical of the way in which atomic OLAP data is commonly stored in a relational database. This table of granular data is called a <i>fact table</i>. The combination of a fact table and a set of related dimension tables make up a <i>star schema </i>configuration.</p>
<p>
For example, consider the MDX statement below (unqualified names are assumed to be unique):</p>
<pre><code>SELECT 
 &nbsp; {Sales, Cost} ON COLUMNS,
 &nbsp; CROSSJOIN({USA, Asia}, {Qtr1, Qtr2, Qtr3, Qtr4}} ON ROWS
FROM SalesCube
WHERE ([1991], Computers)
</code></pre>
<p>
This produces the dataset below:</p>
<p>
<img src="te_ch0209.gif" border=0></p>
<p>
This yields the flattened rowset:</p>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows width=552>
<tr valign=top>
<td class=label width=21%><b>[Continents].<br>
[MEMBER_<br>
CAPTION]</b></td>
<td class=label width=20%><b>[Countries].<br>
[MEMBER_<br>
CAPTION]</b></td>
<td class=label width=19%><b>[Quarters].<br>
[MEMBER_<br>
CAPTION]</b></td>
<td class=label width=20%><b><br>
[Measures].<br>
[Cost]</b></td>
<td class=label width=20%><b><br>
[Measures].<br>
[Sales]</b></td>
</tr>
<tr valign=top>
<td width=21%>North America</td>
<td width=20%>USA</td>
<td width=19%>Qtr1</td>
<td width=20%>123</td>
<td width=20%>456</td>
</tr>
<tr valign=top>
<td width=21%>North America</td>
<td width=20%>USA</td>
<td width=19%>Qtr2</td>
<td width=20%>789</td>
<td width=20%>1011</td>
</tr>
<tr valign=top>
<td width=21%>North America</td>
<td width=20%>USA</td>
<td width=19%>Qtr3</td>
<td width=20%>1213</td>
<td width=20%>1415</td>
</tr>
<tr valign=top>
<td width=21%>North America</td>
<td width=20%>USA</td>
<td width=19%>Qtr4</td>
<td width=20%>1617</td>
<td width=20%>1819</td>
</tr>
<tr valign=top>
<td width=21%>Asia</td>
<td width=20%>NULL</td>
<td width=19%>Qtr1</td>
<td width=20%>2021</td>
<td width=20%>2223</td>
</tr>
<tr valign=top>
<td width=21%>Asia</td>
<td width=20%>NULL</td>
<td width=19%>Qtr2</td>
<td width=20%>2425</td>
<td width=20%>2627</td>
</tr>
<tr valign=top>
<td width=21%>Asia</td>
<td width=20%>NULL</td>
<td width=19%>Qtr3</td>
<td width=20%>2829</td>
<td width=20%>3031</td>
</tr>
<tr valign=top>
<td width=21%>Asia</td>
<td width=20%>NULL</td>
<td width=19%>Qtr4</td>
<td width=20%>3233</td>
<td width=20%>3435</td>
</tr>
</table><br>
<p>
This representation is intuitive and corresponds to the way such data is usually displayed in a tabular view.</p>
<p>
This example also illustrates step 2 of the algorithm given in “Flattening Algorithm”: If the DIMENSION PROPERTIES clause is not specified, then it is equivalent to specifying DIMENSION PROPERTIES MEMBER_CAPTION.</p>
</font></BODY>
</HTML>
