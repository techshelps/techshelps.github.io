<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Establishing Cube Context</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="establishingcubecontext"></a>Establishing Cube Context</h1>
<p>
In the expression template shown in the section “Parts of an MDX Statement,” the <b>FROM</b> <i>cube_specification</i> clause specifies the cubes to query. The cube specification is just the name of the cube. If multiple cubes are involved, then it is the comma-separated list of those cube names.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The ability to query across more than one cube is not part of core level MDX language. In other words, a provider need not support cross-cube queries in order to be compliant with OLE DB for OLAP. Applications can check the property MDPROP_JOINCUBES in the DBPROPSET_DATASOURCEINFO property group to find out if a provider supports this functionality.</p>
<p>
For SalesCube, the FROM clause looks like this:</p>
<pre><code>FROM SalesCube
</code></pre>
</font></BODY>
</HTML>
