<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Macros Used with Property Pages</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="macrosusedwithpropertypages"></a>Macros Used with Property Pages</h1>
<p>
The following error macros are used in conjunction with property pages. They act on errors returned by control properties and methods, and assume that the control has thrown an exception before returning the error code. The exception information is used to compose the error message that is displayed to the user. </p>
<p>
Controls do not throw exceptions for the E_OUTOFMEMORY error code, so the error message for this code is defined by the IDS_ERR_OUTOFMEMORY string resource. Error codes returned without exceptions are displayed with the generic error message defined by the IDS_ERR_FORMAT string resource.</p>
<p>
The INVALID_ENTRY_* macros use the string resource defined by the IDS_ERR_INVALIDENTRY string ID to format the error message. </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=45%><b>Macro</b></td>
<td class=label width=55%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=45%>ERROR_ON_FAILURE(hr)</td>
<td width=55%>Test whether <i>hr</i> is an error code; if so, display the error. Execution continues to the next statement.</td>
</tr>
<tr valign=top>
<td width=45%>IF_SUCCEEDED(hr)</td>
<td width=55%>Test whether <i>hr</i> is an error code; if so, display the error. Otherwise, execute the statement block.</td>
</tr>
<tr valign=top>
<td width=45%>ON_ERROR_RETURN(hr, ret)</td>
<td width=55%>Test whether <i>hr</i> is an error code; if so, display the error and return <i>ret</i>. Otherwise, continue executing the next statement.</td>
</tr>
<tr valign=top>
<td width=45%>ON_ERROR_GOTO(hr, label)</td>
<td width=55%>Test whether <i>hr</i> is an error code; if so, display the error and goto <i>label</i>. Otherwise, continue executing the next statement.</td>
</tr>
<tr valign=top>
<td width=45%>ON_ERROR_EDIT_GOTO(hr, id, label)</td>
<td width=55%>Test whether <i>hr</i> is an error code; if so, display the error, set focus to the edit control identified by <i>id</i>, and goto <i>label</i>. Otherwise, continue executing the next statement.</td>
</tr>
<tr valign=top>
<td width=45%>ON_ERROR_EDIT_RETURN(hr, id, ret)</td>
<td width=55%>Test whether <i>hr</i> is an error code; if so, display the error, set focus to the edit control identified by <i>id</i>, and return <i>ret</i>. Otherwise, continue executing the next statement.</td>
</tr>
<tr valign=top>
<td width=45%>ON_INVALID_ENTRY_RETURN(f, id, ret)</td>
<td width=55%>If <i>f</i> is TRUE, then continue executing the next statement. Otherwise, display an invalid entry error message box, set focus to the edit control identified by <i>id</i>, and return <i>ret</i>. The control prior to the edit control must be a static text control because its text is used in the error message to identify the invalid property.</td>
</tr>
<tr valign=top>
<td width=45%>ON_INVALID_ENTRY_GOTO(f, id, label)</td>
<td width=55%>If <i>f</i> is TRUE, then continue executing the next statement. Otherwise, display an invalid entry error message box, set focus to the edit control identified by <i>id</i>, and goto <i>label</i>. The control prior to the edit control must be a static text control because its text is used in the error message to identify the invalid property.</td>
</tr>
</table><br>
<h1></h1>
</font></BODY>
</HTML>
