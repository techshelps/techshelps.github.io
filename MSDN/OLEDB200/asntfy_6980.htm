<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDBAsynchNotify::OnStop</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbidbasynchnotify__onstop"></a>IDBAsynchNotify::OnStop</h1>
<p>
<b>OnStop</b> is called by the provider to indicate that asynchronous processing has stopped.</p>
<pre><code>HRESULT OnStop (
   HCHAPTER   hChapter,
   ULONG      ulOperation,
   HRESULT      hrStatus,
   LPOLESTR   pwszStatusText);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>hChapter<br>
</i>[in]</p>
<p class=indent>
The chapter for which the operation has stopped. If the object calling this method is not a rowset, or the operation does not apply to chapters, this is DB_NULL_HCHAPTER.</p>
<p class=dt>
<i>ulOperation <br>
</i>[in]<br>
The operation that has stopped. One of the following:</p>
<p class=dt>
</p>
<p class=indent>
DBASYNCHOP_OPEN<br>
The completion information applies to the asynchronous opening or population of a rowset, or the asynchronous initialization of a data source.</p>
<p class=dt>
<i>hrStatus</i></p>
<p class=indent>
[in]<i><br>
</i>Status code indicating the completion result of the asynchronous operation. This may be one of the following status codes, or some result specific to the asynchronous operation being executed:</p>
<p class=dt>
</p>
<p class=indent>
S_OK<br>
The asynchronous operation completed successfully.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_CANCELED<br>
The asynchronous operation was canceled.</p>
<p class=dt>
</p>
<p class=indent>
E_OUTOFMEMORY<br>
The provider ran out of memory attempting to execute the asynchronous operation. </p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
The asynchronous operation failed for a provider-specific reason. <br>
</p>
<p class=dt>
<i>pwszStatusText</i></p>
<p class=indent>
[in]<i><br>
</i>Additional information about the error, or the resource associated with the error. If no additional information is available, this string is empty.</p>
<p class=tl>
The provider owns the memory for <i>pwszStatusText</i>. The consumer can copy the text to its own memory, but must not attempt to free <i>pwszStatusText</i>, nor to reference it once it has returned from <b>IDBAsynchNotify::OnStop</b>.</P><p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_UNWANTEDOPERATION<br>
The consumer is not interested in receiving notifications for this operation. The provider can optimize by making no further calls to this method with this operation for this listener. Notifications for other operations are unaffected.</p>
<p class=indent>
E_NOTIMPL<br>
The consumer is not interested in receiving this notification. The provider can optimize by making no further calls to this method for this listener. Notifications for other methods are unaffected.</p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A consumer-specific error occurred.</p>
<p class=label>
<b>Comments</b></p>
<p>
This method is called once per operation, when all asynchronous phases for that operation have completed. <b>OnStop</b> is always called, whether the asynchronous operation succeeded, failed, or was aborted by the consumer.</p>
<p>
For operations that complete successfully, OnProgress is always called prior to OnStop with ulProgress equal to ulProgressMax. The only exception is if the listener has explicitly requested not to receive further OnProgress notifications by returning E_NOTIMPL or DB_S_UNWANTEDOPERATION, and the provider has optimized by not making additional calls to OnProgress.</p>
<p>
Consumers should be prepared to handle new values of ulOperation by returning S_OK or DB_S_UNWANTEDOPERATION.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="command_9zhh.htm">ICommand::Execute</a>, <a href="asstat_9htg.htm">IDBAsynchStatus::Abort</a>, <a href="asstat_3s4z.htm">IDBAsynchStatus::GetStatus</a>, <a href="dbinit_5r39.htm">IDBInitialize::Initialize</a>, <a href="dbschr_7p9w.htm">IDBSchemaRowset::GetRowset</a>, <a href="opnrst_7c50.htm">IOpenRowset::OpenRowset</a>, <a href="dbenum_6i7o.htm">ISourcesRowset::GetSourcesRowset</a></p>
</font></BODY>
</HTML>
