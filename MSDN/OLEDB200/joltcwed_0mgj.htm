<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Source Information Properties</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="datasourceinformationproperties"></a>Data Source Information Properties</h1>
<p>
The DBPROPSET_DATASOURCEINFO property set contains the following properties. All of these properties are in the DATA SOURCE INFORMATION property group. These properties are read-only in this provider and constitute a set of static information about the provider and data source.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=632>
<tr valign=top>
<td class=label width=49%><b>Property ID </b></td>
<td class=label width=51%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_ACTIVESESSIONS</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R Only</p>
<p>
Description: Active Sessions</p>
<p>
Specifies the maximum number of sessions that can exist at the same time. If this property is set to zero, there is no limit.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_ASYNCTXNABORT</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R only</p>
<p>
Description: Asynchronous Abort</p>
<p>
Specifies whether asynchronous abortion of transactions is allowed.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROPSET_ASYNCTXNCOMMIT</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R only</p>
<p>
Description: Asynchronous Commit</p>
<p>
Specifies whether asynchronous commitment of transactions is allowed.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROPSET_BYREFACCESSORS</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Pass By Ref Accessors</p>
<p>
Specifies whether the provider supports the DBACCESSOR_PASSBYREF flag in <b>IAccessor::CreateAccessor</b>. This applies to both row and parameter accessors. </p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_CATALOGLOCATION</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R Only</p>
<p>
Description: Catalog Location</p>
<p>
Specifies the position in a text command of a catalog name in a qualified table name, that is:
<ul type=disc>
<li>
DBPROPVAL_CL_START, which indicates the catalog name is at the start of the fully qualified table name.<br><br></li>
<li>
DBPROPVAL_CL_END – The catalog name is at the end of the fully qualified name.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_CATALOGTERM</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: Catalog Term</p>
<p>
Specifies the name that the data source uses for a catalog, for example, “catalog,” “database,” or “directory.”. This is used to build user interfaces.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROPSET_CATALOGUSAGE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R Only</p>
<p>
Description: Catalog Usage</p>
<p>
A bitmask specifying how catalog names can be used in text commands, that is, zero or more of the following:
<ul type=disc>
<li>
DBPROPVAL_CU_DML_STATEMENTS, which indicates that catalog names are supported in all Data Manipulation Language statements.<br><br></li>
<li>
DBPROPVAL_CU_TABLE_DEFINITION, which indicates that catalog names are supported in all table definition statements.<br><br></li>
<li>
DBPROPVAL_CU_INDEX_DEFINITIONS, which indicates that catalog names are supported in all index definition statements.<br><br></li>
<li>
DBPROPVAL_CU_PRIVILEGE_DEFINITION, which indicates that catalog names are supported in all privilege definition statements.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROPSET_COLUMNDEFINITION</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R Only</p>
<p>
Description: Column Definition</p>
<p>
A bitmask defining the valid clauses for the definition of a column, that is:
<ul type=disc>
<li>
DBRPOPVAL_CD_NOTNULL, which indicates that columns can be created non-nullable.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_CONCATNULLBEHAVIOR</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Null ConcatenationBehavior</p>
<p>
Specifies how the data source handles concatenation of null valued and non-null valued character data type columns, that is:
<ul type=disc>
<li>
DBPROPVAL_CB_NULLwhich indicates that the result is null valued.<br><br></li>
<li>
DBPROPVAL_CB_NON_NULL, which indicates that the result is the concatenation of the non-null – valued column or columns.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBRPOP_DATASOURCENAME </td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: Data Source Name</p>
<p>
The name of the data source. This can be used during the connection process.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_DATASOURCEREADONLY</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Read-Only Data Source</p>
<p>
This can be:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the data source is read-only.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the data source is updatable.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_DBMSNAME</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: DBMS Name</p>
<p>
Specifices the name of the product accessed by the provider. </p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_DBMSVER</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: DBMS Version</p>
<p>
Specifies the version of the product accessed by the provider. </p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_DSOTHREADMODEL</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Data Source Object Threading Model</p>
<p>
Specifies the threading model of the data source object, that is, one or more of:
<ul type=disc>
<li>
DBPROPVAL_RT_FREETHREAD<br><br></li>
<li>
DBPROPVAL_RT_APTMTTHREAD<br><br></li>
<li>
DBPROPVAL_RT_SINGLETHREAD</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_GROUPBY</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Group By Support</p>
<p>
Specifies the relationship between the columns in a GROUP BY clause and the nonaggregated columns on a select list, that is:
<ul type=disc>
<li>
DBPROPVAL_GB_EQUALS_SELECT, which indicates that the GROUP BY clause must contain all nonaggregated columns on the select list.<br><br></li>
<li>
DBPROPVAL_GB_CONTAINS_SELECTwhich indicates that the GROUP BY clause must contain all nonaggregated columns in the select list. It can also contain columns that are not on the select list.<br><br></li>
<li>
DBPROPVAL_GB_NO_RELATION, which indicates that the columns in the GROUP BY clause and on the select list are not related. The meaning of nongrouped, nonaggregated columns on the select list is data source–dependent. </li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_HETEROGENEOUSTABLES</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R Only</p>
<p>
Description: Heterogeneous Table Support</p>
<p>
Specifies a bitmask that indicates whether the provider can join tables from different catalogs or providers, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_HT_DIFFERENT_CATALOGS<br><br></li>
<li>
DBPROPVAL_HT_DIFFERENT_PROVIDERS</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_IDENTIFIERCASE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Identifier Case Sensitivity</p>
<p>
Specifies how identifiers respond to case, that is:
<ul type=disc>
<li>
DBPROPVAL_IC_UPPER, which indicates that identifiers in SQL are case insensitive and are stored in uppercase in system catalog.<br><br></li>
<li>
DBPROPVAL_IC_LOWER, which indicates that identifiers in SQL are case insensitive and are stored in lowercase in system catalog.<br><br></li>
<li>
DBPROPVAL_IC_SENSITIVE, which indicates that identifiers in SQL are case sensitive and are stored in mixed case in system catalog.<br><br></li>
<li>
DBPROPVAL_IC_MIXED, which indicates that identifiers in SQL are case insensitive and are stored in mixed case in system catalog.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MAXINDEXSIZE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R Only</p>
<p>
Description: Maximum Index Size</p>
<p>
Specifies the maximum number of bytes allowed in the combined columns of an index. If there is no limit specified or if the limit is unknown, this value defaults to zero.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MAXOPENCHAPTERS</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Maximum Open Chapters</p>
<p>
Specifies the maximum number of chapters that can be open at any time.</p>
<p>
If a chapter must be released before a new chapter can be opened, set this value to one. If the provider does not support chapters, set this value to zero.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MAXROWSIZE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Maximum Row Size</p>
<p>
Specifies the maximum length of a single row in a table. If there is no specified limit or the limit is unknown, this value is zero.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MAXROWSIZEINCLUDESBLOB</td>
<td width=51%>Type:&nbsp; VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Maximum Row Size Includes BLOB</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the maximum row size returned for the DBPROP_MAXROWSIZE property includes the length of all BLOB data.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the maximum row size returned for the DBPROP_MAXROWSIZE property does not include the length of all BLOB data.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MAXTABLESINSELECT</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R Only</p>
<p>
Description: Maximum Tables in SELECT</p>
<p>
Specifies the maximum number of tables allowed in the FROM clause of a SELECT statement. If there is no specified limit or the limit is unknown, this value is zero.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MULTIPLEPARAMSETS</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Multiple Parameter Sets</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the provider supports multiple parameter sets.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the provider does not support multiple parameter sets.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MULTIPLERESULTS</td>
<td width=51%>Type:&nbsp; VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Multiple Results</p>
<p>
Specifies a bitmask that indicates whether the provider supports multiple result objects and what restrictions it places on these objects, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_MR_SUPPORTED, which indicates that the provider supports multiple result objects.<br><br></li>
<li>
DBPROPVAL_MR_CONCURRENT, which indicates that more than one rowset created by the same multiple results object can exist concurrently.</li>
</ul>
<p>
If this bitmask is not set, the consumer must release the current rowset before calling <b>IMultipleResults::GetResult</b> to get the next result.</p>
<p>
If multiple results objects are not supported, DBPROPVAL_MR_NOTSUPPORTED is returned. </p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MULTIPLESTORAGEOBJECTS</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R Only</p>
<p>
Description: Multiple Storage Objects</p>
<p>
Specifies values as either of: 
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the provider supports multiple open storage objects at the same time.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the provider supports only one open storage object at a time. Any method that attempts to open a second storage object returns a status of DBSTATUS_E_CANTCREATE for the column on which it attempted to open the second storage object, regardless of the rows or columns in which the objects are constructed.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_MULTIPLEUPDATE</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R only</p>
<p>
Description: Multiple Table Update</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the provider can update rowsets derived from multiple tables.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the provider cannot update rowsets derived from multiple tables.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_NULLCOLLATION</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: NULL Collation Order</p>
<p>
Specifies position of null values on a sorted list, that is:
<ul type=disc>
<li>
DBPROPVAL_NC_END, which indicates that null values are sorted at the end of the list, regardless of the sort order.<br><br></li>
<li>
DBPROPVAL_NC_HIGH, which indicates that null values are sorted at the high end of the list.<br><br></li>
<li>
DBPROPVAL_NC_LOW, which indicates that null values are sorted at the low end of the list.<br><br></li>
<li>
DBPROPVAL_NC_START, which indicates that null values are sorted at the start of the list, regardless of the sort order.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_OLEOBJECTS</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: OLE Object Support</p>
<p>
Specifies a bitmask that indicates the ways in which the provider supports access to BLOBs and OLE objects stored in columns, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_OO_BLOB, which indicates that the provider supports access to BLOBs as structured objects. The consumer determines what interfaces are supported through DBPROP_STRUCTUREDSTORAGE.<br><br></li>
<li>
DBPROPVAL_OO_IPERSIST, which indicates that the provider supports access to OLE objects through <b>IPersistStream</b>, <b>IPersistStreamInit</b>, or <b>IPersistStorage</b>.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_ORDERBYCOLUMNSINSELECT</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R Only</p>
<p>
Description: Order By Columns In Select List</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that columns in an ORDER BY clause must be on the select list.<br><br></li>
<li>
VARIANT_FALSE, which indicates that columns in an ORDER BY clause are not required to be on the select list.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_OUTPUTPARAMETERAVAILABILITY</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Output Parameter Availability</p>
<p>
Specifies the time at which output parameter values become available, that is:
<ul type=disc>
<li>
DBPROPVAL_OA_NOTSUPPORTED, which indicates that output parameters are not supported.<br><br></li>
<li>
DBPROPVAL_OA_ATEXECUTE, which indicates that output parameter data is available immediately after <b>ICommand::Execute</b> returns.<br><br></li>
<li>
DBPROPVAL_OA_ATROWRELEASE, which indicates that, if a command returns a single result that is a rowset, output parameter data is available when the release of this rowset is complete. If a command returns multiple results, output parameter data is available as soon as either <b>IMultipleResults::GetResult</b> returns DB_S_NORESULT, or the release of the multiple results object is complete. Before the output parameter data is available, the consumer’s bound memory is in an indeterminate state. </li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_PERSISTIDTYPE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Persistent ID Type</p>
<p>
Specifies an integer that indicates the type of DBID that the provider uses when persisting DBIDs for tables, indexes, and columns. This is usually the type of DBID that the provider considers to be the most permanent under schema changes and physical data reorganizations. </p>
<p>
The value is one of:
<ul type=disc>
<li>
DBPROPVAL_PT_GUID_NAME<br><br></li>
<li>
DBPROPVAL_PT_GUID_PROPID<br><br></li>
<li>
DBPROPVAL_PT_NAME<br><br></li>
<li>
DBRPOPVAL_PT_GUID</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_PREPAREABORTBEHAVIOR</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Prepare Abort Behavior</p>
<p>
Specifies how aborting a transaction affects prepared commands, that is:
<ul type=disc>
<li>
DBPROPVAL_CB_DELETE, which indicates that aborting a transaction deletes prepared commands. The application must reprepare commands before executing them.<br><br></li>
<li>
DBPROPVAL_DB_PRESERVE, which indicates that aborting a transaction preserves prepared commands. The application can execute commands without repreparing them.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_PROCEDURETERM</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: Procedure Term</p>
<p>
Specifies a character string with the data source vendor’s name for a procedure, for example, “database procedure,” “stored procedure,” or “procedure.” This is used to build user interfaces.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_PROVIDERNAME</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: Provider Name</p>
<p>
Specifies the file name of the provider. </p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_PROVIDEROLEDBVER</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: OLE DB Version</p>
<p>
Returns the version of OLE DB supported by the provider. The version is returned in the format ##.## ####, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version. The provider can append a description of the provider.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_QUOTEDIDENTIFIERCASE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Quoted Identifier Sensitivity</p>
<p>
Specifies how quoted identifiers treat case, that is:
<ul type=disc>
<li>
DBPROPVAL_IC_UPPER, which indicates that identifiers quoted in SQL are case insensitive and are stored in uppercase in system catalog.<br><br></li>
<li>
DBPROPVAL_IC_LOWER, which indicates that identifiers quoted in SQL are case insensitive and are stored in lowercase in system catalog.<br><br></li>
<li>
DBPROPVAL_IC_SENSITIVE, which indicates that identifiers quoted in SQL are case sensitive and are stored in mixed case in system catalog<br><br></li>
<li>
DBPROPVAL_IC_MIXED, which indicates that identifiers quoted in SQL are case insensitive and are stored in mixed case in system catalog.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_ROWSETCONVERSIONCOMMAND</td>
<td width=51%>Type: VT_BOOL<p>
Typical R/W: R only</p>
<p>
Description: Rowset Conversions On Command</p>
<p>
Specifies values as either of:
<ul type=disc>
<li>
VARIANT_TRUE, which indicates that callers to <b>IConvertType::CanConvert</b> can inquire ona command about conversions supported on rowsets generated by the command.<br><br></li>
<li>
VARIANT_FALSE, which indicates that callers can inquire on a command only about conversions supported by the command.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_SCHEMATERM</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: Schema Term</p>
<p>
Specifies the name the data source uses for a schema, for example, “schema” or “owner.”. This is used to build user interfaces.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_SCHEMAUSAGE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Schema Usage</p>
<p>
Specifies a bitmask that indicates how schema names can be used in text commands, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_SU_DML_STATEMENTS, which indicates that schema names are supported in all Data Manipulation Language statements.<br><br></li>
<li>
DBPROPVAL_SU_TABLE_DEFINITION, which indicates that schema names are supported in all table definition statements.<br><br></li>
<li>
DBPROPVAL_SU_INDEX_DEFINITION, which indicates that schema names are supported in all index definition statements.<br><br></li>
<li>
DBPROPVAL_SU_PRIVILEGE_DEFINITION, which indicates that schema names are supported in all privilege definition statements.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_SQLSUPPORT</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: SQL Support</p>
<p>
Specifies a bitmask that indicates the level of support for SQL, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_SQL_NONE, which indicates that SQL is not supported.</li>
</ul>
<p>
The following levels correspond to the levels of SQL conformance defined in ODBC version 2.5. These levels are cumulative; that is, if the provider supports one level, it also supports all lower levels.
<ul type=disc>
<li>
DBPROPVAL_SQL_ODBC_MINIMUM<br><br></li>
<li>
DBPROPVAL_SQL_ODBC_CORE <br><br></li>
<li>
DBPROPVAL_SQL_ODBC_EXTENDED</li>
</ul>
<p>
The following levels correspond to the levels in ANSI SQL 92. These levels are cumulative; that is, if the provider supports one level, it also supports all lower levels.
<ul type=disc>
<li>
DBPROPVAL_SQL_ANSI92_ENTRY <br><br></li>
<li>
DBPROPVAL_SQL_FIPS_TRANSITIONAL<br><br></li>
<li>
DBPROPVAL_SQL_ANSI92_INTERMEDIATE<br><br></li>
<li>
DBPROPVAL_SQL_ANSI92_FULL<br><br></li>
<li>
DBPROPVAL_SQL_ANSI89_IEF, which indicates that the provider supports the ANSI 89 Integrity Enhancement Facility.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_STRUCTUREDSTORAGE</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Structured Storage</p>
<p>
Specifies a bitmask that indicates which interfaces on a storage object are supported by the rowset, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_SS_ISEQUENTIALSTREAM<br><br></li>
<li>
DBPROPVAL_SS_ISTREAM<br><br></li>
<li>
DBPROPVAL_SS_ISTORAGE<br><br></li>
<li>
DBPROPVAL_SS_ILOCKBYTES</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_SUBQUERIES</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Subquery Support</p>
<p>
Specifies a bitmask that indicates the predicates in text commands that support subqueries, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_SQ_CORRELATED SUBQUERIES<br><br></li>
<li>
DBPROPVAL_SQ_COMPARISON<br><br></li>
<li>
DBPROPVAL_SQ_EXISTS<br><br></li>
<li>
DBPROPVAL_SQ_IN<br><br></li>
<li>
DBPROPVAL_SQ_QUANTIFIED</li>
</ul>
<p>
The DBPROPVAL_SQ_CORRELATED SUBQUERIES bit indicates that all predicates that support subqueries support correlated subqueries.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_SUPPORTEDTXNDDL</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Transaction DDL</p>
<p>
Specifies whether Data Definition Language (DDL) statements are supported in transactions, that is:
<ul type=disc>
<li>
DBPROPVAL_TC_NONE, which indicates that transactions are not supported.<br><br></li>
<li>
DBPROPVAL_TC_DML, which indicates that transactions can only contain Data Manipulation Language (DML) statements. DDL statements within a transaction cause an error.<br><br></li>
<li>
DBPROPVAL_TC_DDL_COMMIT, which indicates that transactions can only contain DML statements. DDL statements within a transaction cause the transaction to be committed.<br><br></li>
<li>
DBPROPVAL_TC_DDL_IGNORE, which indicates that transactions can only contain DML statements. DDL statements within a transaction are ignored.<br><br></li>
<li>
DBPROPVAL_TC_ALL, which indicates that transactions can contain DDL and DML statements in any order.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_SUPPORTEDTXNISOLEVELS</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Isolation Levels</p>
<p>
Specifies a bitmask that indicates the supported transaction isolation levels, that is, zero of more of:
<ul type=disc>
<li>
DBPROPVAL_TI_CHAOS<br><br></li>
<li>
DBPROPVAL_TI_READUNCOMMITTED<br><br></li>
<li>
DBPROPVAL_TI_BROWSE<br><br></li>
<li>
DBPROPVAL_TI_CURSORSTABILITY<br><br></li>
<li>
DBPROPVAL_TI_READCOMMITTED<br><br></li>
<li>
DBPROPVAL_TI_REPEATABLEREAD<br><br></li>
<li>
DBPROPVAL_TI_SERIALIZABLE<br><br></li>
<li>
DBPROPVAL_TI_ISOLATED</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROPVAL_SUPPORTEDTXNISORETAIN</td>
<td width=51%>Type: VT_I4<p>
Typical R/W: R only</p>
<p>
Description: Isolation Retention</p>
<p>
Specifies a bitmask that indicates the supported transaction isolation retention levels, that is, zero or more of:
<ul type=disc>
<li>
DBPROPVAL_TR_COMMIT_DC, which indicates that the transaction preserves its isolation across a retaining commit.<br><br></li>
<li>
DBPROPVAL_TR_COMMIT_NO, which indicates that the transaction cannot preserve its isolation across a retaining commit.<br><br></li>
<li>
DBPROPVAL_TR_ABORT_DC, which indicates that the transaction may either preserve or dispose of its isolation across a retaining abort.<br><br></li>
<li>
DBPROPVAL_TR_ABORT, which indicates that the transaction preserves its isolation across a retaining abort.<br><br></li>
<li>
DBPROPVAL_TR_ABORT_NO, which indicates that the transaction cannot preserve its isolation across a retaining abort.<br><br></li>
<li>
DBPROPVAL_TR_DONTCARE, which indicates that the transaction can preserve or dispose of its isolation across a retaining commit or abort. This is the default.<br><br></li>
<li>
DBPROPVAL_TR_BOTH, which indicates that the transaction preserves its isolation across both a retaining commit and a retaining abort.<br><br></li>
<li>
DBPROPVAL_TR_NONE, which indicates that the transaction cannot preserve its isolation across either a retaining commit or abort.<br><br></li>
<li>
DBPROPVAL_TR_OPTIMISTIC, which indicates that optimistic concurrency control is to be used. If DBPROPVAL_TR_OPTIMISTIC is specified, whatever isolation technology is in place in this transaction (such as locking) must not affect the ability of other transactions to make changes to the data and resources that have been manipulated by this transaction. That is, optimistic control is to be used for all data in the transaction.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=49%>DBPROP_TABLETERM</td>
<td width=51%>Type: VT_BSTR<p>
Typical R/W: R only</p>
<p>
Description: Table Term</p>
<p>
Specifies the name the data source uses for a table.</p>
</td>
</tr>
</table><br>
</font></BODY>
</HTML>
