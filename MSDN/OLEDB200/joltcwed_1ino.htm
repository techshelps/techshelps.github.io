<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INDEXES Rowset</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="indexesrowset"></a>INDEXES Rowset</h1>
<p>
The INDEXES rowset identifies the indexes defined in the catalog that are owned by a given user.</p>
<p>
The INDEXES rowset contains the following columns:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=632>
<tr valign=top>
<td class=label width=30%><b>Column name</b></td>
<td class=label width=24%><b>Type indicator</b></td>
<td class=label width=46%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=30%>TABLE_CATALOG</td>
<td width=24%>DBTYPE_WSTR</td>
<td width=46%>Catalog name. NULL if the provider does not support catalogs.</td>
</tr>
<tr valign=top>
<td width=30%>TABLE_SCHEMA</td>
<td width=24%>DBTYPE_WSTR</td>
<td width=46%>Unqualified schema name. NULL if the provider does not support schemas.</td>
</tr>
<tr valign=top>
<td width=30%>TABLE_NAME</td>
<td width=24%>DBTYPE_WSTR</td>
<td width=46%>Table name.</td>
</tr>
<tr valign=top>
<td width=30%>INDEX_CATALOG</td>
<td width=24%>DBTYPE_WSTR</td>
<td width=46%>Catalog name. NULL if the provider does not support catalogs.</td>
</tr>
<tr valign=top>
<td width=30%>INDEX_SCHEMA</td>
<td width=24%>DBTYPE_WSTR</td>
<td width=46%>Unqualified schema name. NULL if the provider does not support schemas.</td>
</tr>
<tr valign=top>
<td width=30%>INDEX_NAME</td>
<td width=24%>DBTYPE_WSTR</td>
<td width=46%>Index name.</td>
</tr>
<tr valign=top>
<td width=30%>PRIMARY_KEY</td>
<td width=24%>DBTYPE_BOOL</td>
<td width=46%>Whether the index represents the primary key on the table. NULL if this is not known.</td>
</tr>
<tr valign=top>
<td width=30%>UNIQUE</td>
<td width=24%>DBTYPE_BOOL</td>
<td width=46%>Specifies whether index keys must be unique, that is:<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the index keys must be unique.<br><br></li>
<li>
VARIANT_FALSE, which indicates that duplicate keys are allowed.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=30%>CLUSTERED</td>
<td width=24%>DBTYPE_BOOL</td>
<td width=46%>Specifies whether an index is clustered, that is:<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the leaf nodes of the index contain full rows, not bookmarks. This is a way to represent a table clustered by key value.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the leaf nodes of the index contain bookmarks of the base table rows whose key value matches the key value of the index entry.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=30%>TYPE</td>
<td width=24%>DBTYPE_UI2</td>
<td width=46%>Specifies the type of the index, that is:<ul type=disc>
<li>
DBPROPVAL_IT_BTREE, which indicates that the index is a B+-tree.<br><br></li>
<li>
DBPROPVAL_IT_HASH, which indicates that the index is a hash file using, for example, linear or extensible hashing.<br><br></li>
<li>
DBPROPVAL_IT_CONTENT, which indicates that the index is a content index.<br><br></li>
<li>
DBPROPVAL_IT_OTHER, which indicates that the index is some other type of index.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=30%>FILL_FACTOR</td>
<td width=24%>DBTYPE_I4</td>
<td width=46%>For a B+-tree index, this property represents the storage use factor of page nodes during the creation of the index. The value is an integer from 1 to 100 representing the percentage of use of an index node. For a linear hash index, this property represents the storage use of the entire hash structure (the ratio of used area to total allocated area) before a file structure expansion occurs.</td>
</tr>
<tr valign=top>
<td width=30%>INITIAL_SIZE</td>
<td width=24%>DBTYPE_I4</td>
<td width=46%>Specifies whether null keys are allowed, that is:<ul type=disc>
<li>
DBPROPVAL_IN_DISALLOWNULL, which indicates that the index does not allow entries where the key columns are NULL. If the consumer attempts to insert an index entry with a NULL key, then the provider returns an error.<br><br></li>
<li>
DBPROPVAL_IN_IGNORENULL, which indicates that the index does not insert entries containing NULL keys. If the consumer attempts to insert an index entry with a NULL key, then the provider ignores that entry and no error code is returned.<br><br></li>
<li>
DBPROPVAL_IN_IGNOREANYNULL, which indicates that the index does not insert entries where some column key has a NULL value. For an index, that has a multicolumn search key, if the consumer inserts an index entry with NULL value in some column of the search key, then the provider ignores that entry and no error code is returned.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=30%>SORT_BOOKMARKS</td>
<td width=24%>DBTYPE_BOOL</td>
<td width=46%>Specifies how the index treats repeated keys, that is:<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the index sorts repeated keys by bookmark.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the index does not sort repeated keys by bookmark.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=30%>AUTO_UPDATE</td>
<td width=24%>DBTYPE_BOOL</td>
<td width=46%>Specifies whether the index is maintained automatically when changes are made to the corresponding base table, that is:<ul type=disc>
<li>
VARIANT_TRUE, which indicates that the index is automatically maintained.<br><br></li>
<li>
VARIANT_FALSE, which indicates that the index must be maintained by the consumer through explicit calls to <b>IRowsetChange</b>. It is the consumer’s responsibility to ensure that consistency of the index is a result of updates to the associated base table.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=30%>NULL_COLLATION</td>
<td width=24%>DBTYPE_I4</td>
<td width=46%>Specifies how NULLs are collated in the index, that is, one of:<ul type=disc>
<li>
DBPROPVAL_NC_END, which indicates that NULLs are collated at the end of the list, regardless of the collation order.<br><br></li>
<li>
DBPROPVAL_NC_START, which indicates that NULLs are collated at the start of the list, regardless of the collation order.<br><br></li>
<li>
DBPROPVAL_NC_HIGH, which indicates that NULLs are collated at the high end of the list.<br><br></li>
<li>
DBPROPVAL_NC_LOW, which indicates that NULLs are collated at the low end of the list.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=30%>ORDINAL_POSITION</td>
<td width=24%>DBTYPE_UI4</td>
<td width=46%>Ordinal position of the column in the index, starting with one.</td>
</tr>
<tr valign=top>
<td width=30%>COLUMN_NAME</td>
<td width=24%>DBTYPE_WSTR</td>
<td width=46%>Column name. The column, together with the COLUMN_GUID and COLUMN_PROPID columns, forms the column ID. One or more of these columns will be NULL depending on which elements of the DBID structure the provider uses.</td>
</tr>
<tr valign=top>
<td width=30%>COLUMN_GUID</td>
<td width=24%>DBTYPE_GUID</td>
<td width=46%>Column GUID.</td>
</tr>
<tr valign=top>
<td width=30%>COLUMN_PROPID</td>
<td width=24%>DBTYPE_UI4</td>
<td width=46%>Column property ID.</td>
</tr>
<tr valign=top>
<td width=30%>COLLATION</td>
<td width=24%>DBTYPE_I2</td>
<td width=46%>Specifies values as one of:<ul type=disc>
<li>
CB_COLLATION_ASC, which indicates that the sort sequence for the column is ascending.<br><br></li>
<li>
DB_COLLATION_DESC, which indicates that the sort sequence for the column is descending.<br><br></li>
<li>
NULL, which indicates that a column sort sequence is not supported.</li>
</ul>
</td>
</tr>
<tr valign=top>
<td width=30%>CARDINALITY</td>
<td width=24%>DBTYPE_I4</td>
<td width=46%>Number of unique values in the index.</td>
</tr>
<tr valign=top>
<td width=30%>PAGES</td>
<td width=24%>DBTYPE_I4</td>
<td width=46%>Number of pages used to store the index.</td>
</tr>
<tr valign=top>
<td width=30%>FILTER_CONDITION</td>
<td width=24%>DBTYPE_WSTR</td>
<td width=46%>The <b>WHERE</b> clause identifying the filtering restriction.</td>
</tr>
</table><br>
<p>
<b>Default Sort Order</b>: UNIQUE_TYPE, INDEX_CATALOG, INDEX_SCHEMA, INDEX_NAME, ORDINAL_POSITION. </p>
</font></BODY>
</HTML>
