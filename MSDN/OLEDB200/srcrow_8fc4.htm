<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISourcesRowset::GetSourcesRowset Method</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbisourcesrowset__getsourcesrowset_method"></a>ISourcesRowset::GetSourcesRowset</h1>
<p>
Returns a rowset of the data sources and enumerators visible from the current enumerator.</p>
<pre><code>HRESULT GetSourcesRowset(
   IUnknown         pUnkOuter,
   REFIID            riid,
   ULONG         cPropertySets,
   DBPROPSET   rgPropertySets[],
   IUnknown **      ppSourcesRowset);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pUnkOuter</i></p>
<p class=indent>
A pointer to the controlling <b>IUnknown</b> interface if the sources rowset is being created as part of an aggregate. If the rowset is not part of an aggregate, this must be set to a null pointer.</p>
<p class=dt>
<i>riid</i></p>
<p class=indent>
The IID of the interface on which to return a pointer. This interface is conceptually added to the list of required interfaces on the resulting rowset, and the method fails (E_NOINTERFACE) if that interface cannot be supported on the resulting rowset.</p>
<p class=dt>
<i>cPropertySets</i></p>
<p class=indent>
[in]<br>
The number of DBPROPSET structures in <i>rgPropertySets</i>. If this is zero, the provider ignores <i>rgPropertySets</i>.</p>
<p class=dt>
<i>rgPropertySets</i></p>
<p class=indent>
[in/out]<br>
An array of DBPROPSET structures containing properties and values to be set. The properties specified in these structures must belong to the Rowset property group. If the same property is specified more than once in <i>rgPropertySets</i>, then it is provider-specific which value is used. If <i>cPropertySets</i> is 0, this argument is ignored.</p>
<p class=tl>
For information about the properties in the Rowset property group that are defined by OLE DB, see "<a href="appcpr_8u7n.htm#oledbrowset_properties">Rowset Properties</a>" in Appendix C. For information about the DBPROPSET and DBPROP structures, see "<a href="ch11pr_5pb9.htm">DBPROPSET Structure</a>" and "<a href="ch11pr_3xt1.htm">DBPROP Structure</a>" in Chapter 11.</P><p class=dt>
<i>ppSourcesRowset</i><br>
A pointer to memory in which to return the requested interface pointer on the rowset. If an error occurs, the returned pointer is null.</p>
<p class=dt>
</p>
<p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded. In all DBPROP structures passed to the method, <i>dwStatus</i> is set to DBPROPSTATUS_OK.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_ERRORSOCCURRED<br>
The rowset was opened but one or more properties—for which the <i>dwOptions</i> element of the DBPROP structure was DBPROPOPTIONS_OPTIONAL—were not set. The consumer checks <i>dwStatus</i> in the DBPROP structures to determine which properties were not set. The method can fail to set properties for a number of reasons, including:
<ul type=disc>
<li>
The property was not supported by the provider.<br><br></li>
<li>
The property was not in the Rowset property group.<br><br></li>
<li>
The property set was not supported by the provider.<br><br></li>
<li>
It was not possible to set the property.<br><br></li>
<li>
The<i> colid</i> in the DBPROP structure was invalid.<br><br></li>
<li>
The data type in <i>vValue</i> in the DBPROP structure was not the data type of the property or was not VT_EMPTY.<br><br></li>
<li>
The value in <i>vValue</i> in the DBPROP structure was invalid.<br><br></li>
<li>
The property's value conflicted with an existing property.<br><br></li>
<li>
A property was specified to be applied to all columns, but could not be applied to one or more columns.</li>
</ul>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
E_INVALIDARG<br>
<i>ppSourcesRowset</i> was a null pointer.</p>
<p class=tl>
<i>cPropertySets</i> was not 0 and <i>rgPropertySets</i> was a null pointer.</P><p class=tl>
In an element of <i>rgPropertySets</i>, <i>cProperties</i> was not 0 and <i>rgProperties</i> was a null pointer.</P><p class=dt>
</p>
<p class=indent>
E_NOINTERFACE<br>
The rowset did not support the interface specified in <i>riid</i>.</p>
<p class=dt>
</p>
<p class=indent>
E_OUTOFMEMORY<br>
The provider did not have enough memory to create the Rowset object.</p>
<p class=dt>
</p>
<p class=indent>
E_UNEXPECTED<br>
The Enumerator object was in an uninitialized state.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_ABORTLIMITREACHED<br>
The method failed because a resource limit has been reached. For example, a query used to implement the method timed out. No rowset is returned.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_ERRORSOCCURRED<br>
No rowset was returned because one or more properties—for which the <i>dwOptions</i> element of the DBPROP structure was DBPROPOPTIONS_REQUIRED or an invalid value—were not set. The consumer checks <i>dwStatus</i> in the DBPROP structures to determine which properties were not set. None of the satisfiable properties are remembered. The method can fail to set properties for any of the reasons specified in DB_S_ERRORSOCCURRED, except the reason that states that it was not possible to set the property.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_NOAGGREGATION<br>
<i>pUnkOuter</i> was not a null pointer and the rowset did not support aggregation.</p>
<p class=indent>
<i>pUnkOuter</i> was non-null and <i>riid</i> was not IID_Unknown.</p>
<p class=dt>
</p>
<p class=label>
<b>Comments</b></p>
<p>
<b>GetSourcesRowset</b> returns the following rowset. The rowset is read-only. The columns are returned in the order shown.<br>
</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=32%><b>Column name</b></td>
<td class=label width=21%><b>Type indicator</b></td>
<td class=label width=47%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=32%>SOURCES_NAME</td>
<td width=21%>DBTYPE_WSTR</td>
<td width=47%>The name of the data source or enumerator.</td>
</tr>
<tr valign=top>
<td width=32%>SOURCES_PARSENAME</td>
<td width=21%>DBTYPE_WSTR</td>
<td width=47%>String to pass to <b>IParseDisplayName</b> to obtain a moniker for the data source or enumerator.</td>
</tr>
<tr valign=top>
<td width=32%>SOURCES_DESCRIPTION</td>
<td width=21%>DBTYPE_WSTR</td>
<td width=47%>The description of the data source or enumerator.</td>
</tr>
<tr valign=top>
<td width=32%>SOURCES_TYPE</td>
<td width=21%>DBTYPE_UI2</td>
<td width=47%>Whether the row describes a data source or an enumerator:<ul type=disc>
<li>
DBSOURCETYPE_DATASOURCE<br><br></li>
<li>
DBSOURCETYPE_ENUMERATOR</li>
</ul>
<p>
If a single piece of code is capable of being used both as a data source and as an enumerator, it is listed in the rowset twice, once in each role.</p>
</td>
</tr>
<tr valign=top>
<td width=32%>SOURCES_ISPARENT</td>
<td width=21%>DBTYPE_BOOL</td>
<td width=47%>If the row describes an enumerator, SOURCES_ISPARENT is VARIANT_TRUE if the enumerator is the parent enumerator; that is, the enumerator whose enumeration contains the enumerator on which <b>ISourcesRowset::GetSourcesRowset</b> was just called. This allows the consumer to go backward through the enumeration. Whether an enumerator is able to enumerate its parent is provider-specific. Otherwise, SOURCES_ISPARENT is VARIANT_FALSE.<p>
If the row describes a data source, SOURCES_ISPARENT is ignored by the consumer.</p>
</td>
</tr>
</table><br>
<p class=label>
<b>See Also</b></p>
<p>
<a href="dbprop_3ffz.htm">IDBProperties::GetPropertyInfo</a></p>
</font></BODY>
</HTML>
