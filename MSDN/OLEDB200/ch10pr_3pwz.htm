<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Type Indicators in Providers</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbusing_type_indicators_in_providers"></a>Using Type Indicators in Providers</h1>
<p>
A provider begins by selecting a subset of types—as represented by type indicators—it wants to support. The provider maps its underlying data types to these types and advertises them through the PROVIDER_TYPES schema rowset. The underlying data types are unimportant to the consumer. What is important is that the provider guarantees that it can always safely transfer data in the type represented by the indicator it advertises for a column or parameter. For examples of how various providers might map underlying data types to OLE DB data types, see the following sections.</p>
<p>
Providers are not required to support all OLE DB data types, nor are they required to support all possible conversions among them. For information about what conversions a provider is required to support, see "<a href="ch10pr_5wry.htm">Data Type Conversion</a>."</p>
<p>
Although one goal of OLE DB is to provide a unified type system, there are two exceptions to this goal:
<ul type=disc>
<li>
It does not standardize type names as used in text commands. The TYPE_NAME column in the PROVIDER_TYPES schema rowset contains the type name consumers should use when executing Data Definition Language (DDL) commands. This saves providers from having to parse such commands before passing them to the data source.<br><br></li>
<li>
It exposes data source&nbsp;–&nbsp;specific type names for parameters in text commands. For more information, see <a href="cmdprm_7fjj.htm">ICommandWithParameters::SetParameterInfo</a>.</li>
</ul>
<p>
In future versions of OLE DB, consumers and providers will be able to define their own data types through the DBTYPE_UDT (user-defined data type) type indicator.</p>
</font></BODY>
</HTML>
