<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Glossary</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbglossary"></a>Glossary</h1>
<p>
<b>A</b></p>
<p>
<b>Abort </b>To return the values changed by a transaction to their original state.</p>
<p>
<b>Accessor </b>A collection of information that describes how data is stored in the consumer's buffer. The provider uses this information to determine how to transfer data to and from this buffer. <i>See also</i> reference accessor.</p>
<p>
<b>Accessor handle </b>A handle that identifies an accessor.</p>
<p>
<b>Auto-commit mode </b>A transaction commit mode in which all actions taken in a transaction are committed immediately after they are performed.</p>
<p>
<b>B</b></p>
<p>
<b>Binary large object (BLOB) </b>Any binary or character data over a certain number of bytes, such as 255. Typically much longer. Such data is generally sent to and retrieved from the data source in parts. Also known as <i>long data</i>.</p>
<p>
<b>Binding </b>As a verb, the act of associating a column in a rowset or a parameter in a text command with a consumer variable. As a noun, the association or the DBBINDING structure that describes the association.</p>
<p>
<b>Bookmark </b>A value that identifies a row in a rowset. Bookmarks are saved by the consumer and used later in the life of the rowset to retrieve a particular row.</p>
<p>
<b>BSTR </b>A pointer to a null-terminated character string in which the string length is stored with the string.</p>
<p>
<b>B-tree </b>A tree structure for storing database indexes.</p>
<p>
<b>Buffer </b>A piece of memory used to pass information, usually data, between the consumer and provider.</p>
<p>
<b>C</b></p>
<p>
<b>Catalog </b>A database object that contains one or more schemas.</p>
<p>
<b>Change </b>To update, delete, or insert a row of data.</p>
<p>
<b>Class ID </b>A globally unique identifier (GUID) associated with an OLE class object. If a class object will be used to create more than one instance of an object, the associated server application should register its CLSID in the system registry so that clients can locate and load the executable code associated with the object(s). Every OLE server or container that allows linking to its embedded objects must register a CLSID for each supported object definition.</p>
<p>
<b>Client/server </b>A database access strategy in which one or more clients access data through a server. The clients generally implement the user interface while the server controls database access.</p>
<p>
<b>Column </b>The container for a single item of information in a row. Also known as <i>field</i>.</p>
<p>
<b>Column ID </b>A structure used to identify a column, primarily in a command where there are no stable ordinals or column names.</p>
<p>
<b>COM object </b>An object that conforms to the OLE Component Object Model (COM). A COM object is an instance of an object definition, which specifies the object's data and one or more implementations of interfaces on the object. Clients interact with a COM object only through its interfaces. <i>See also</i> Component Object Model and interface.</p>
<p>
<b>Command </b>An OLE DB object that encapsulates a command.</p>
<p>
<b>Command text </b>The text command associated with a command object. Although it is not required to be, this is usually an SQL statement.</p>
<p>
<b>Commit </b>To make the changes in a transaction permanent.</p>
<p>
<b>Component </b>An object that encapsulates both data and code, and provides a well-specified set of publicly available services.</p>
<p>
<b>Component Object Model (COM) </b>The OLE object-oriented programming model that defines how objects interact within a single process or between processes. In COM, clients have access to an object through interfaces implemented on the object. <i>See also </i>interface.</p>
<p>
<b>Concurrency </b>The ability of more than one transaction to access the same data at the same time.</p>
<p>
<b>Consumer </b>Software that calls OLE DB methods and interfaces.</p>
<p>
<b>Container </b>A file containing linked or embedded objects.</p>
<p>
<b>Convert </b>To change data from one type to another, such as from an integer to a string.</p>
<p>
<b>Coordinated transaction </b>A transaction composed of multiple, subordinate transactions. All of the subordinate transactions must succeed for the coordinated transaction to succeed. Also known as a <i>distributed transaction</i>.</p>
<p>
<b>CoType </b>A way to define a group of COM objects, such as rowsets or commands, that have similar characteristics. All COM objects that belong to a particular CoType must expose the mandatory interfaces in that CoType. In addition, they can expose the optional interfaces in the CoType and any interfaces not in the CoType.</p>
<p>
<b>D</b></p>
<p>
<b>Data </b>The data for a parameter in a text command or a column in a row.</p>
<p>
<b>Data Definition Language (DDL) </b>Those text commands that define, as opposed to manipulate, data. For example, the SQL statements <b>CREATE TABLE</b>, <b>CREATE INDEX</b>, <b>GRANT</b>, and <b>REVOKE</b>.</p>
<p>
<b>Data Manipulation Language (DML) </b>Those text commands that manipulate, as opposed to define, data. For example, the SQL statements <b>INSERT</b>, <b>UPDATE</b>, <b>DELETE</b>, and <b>SELECT</b>.</p>
<p>
<b>Data part </b>Data has three parts: the data value, the length of the data value, and the status of the data value.</p>
<p>
<b>Data provider </b>A provider that directly exposes data, as opposed to a service component.</p>
<p>
<b>Data source </b>The data the user wants to access, such as the data in a database, file, or array. This is distinct from a data source object.</p>
<p>
<b>Data source object </b>An OLE DB object that connects to a data source. This is distinct from the data source.</p>
<p>
<b>Data type </b>The type of a piece of data. <i>See also</i> type indicator.</p>
<p>
<b>Database </b>A discrete collection of data in a DBMS. Also a DBMS.</p>
<p>
<b>Database Management System (DBMS) </b>A layer of software between the physical database and the user. The DBMS manages all access to the database. An OLE DB provider can be built directly on top of a DBMS or as a layer between the DBMS and the consumer.</p>
<p>
<b>Deferred column </b>A column for which the data is not instantiated in the rowset until the consumer actually attempts to access that data.</p>
<p>
<b>Delayed update mode </b>An update mode in which changes made through <b>IRowsetChange</b> are cached in the rowset and transmitted to the data source only when <b>IRowsetUpdate::Update</b> is called. <i>See also</i> immediate update mode.</p>
<p>
<b>Delete </b>To remove an existing row of data from the data source.</p>
<p>
<b>Distributed transaction </b><i>See</i> coordinated transaction.</p>
<p>
<b>Dynamic error </b>An error message that cannot be predicted because it is not provider specific.<b>Dynamic error ID </b>An identifier that is used by a lookup service and is associated with an error object.</p>
<p>
<b>E</b></p>
<p>
<b>Empty string </b>A zero-length string. <i>See also</i> null pointer and NULL value.</p>
<p>
<b>Endogenous change </b>A change to data originating from a process other than your own.</p>
<p>
<b>Enumerator </b>An OLE DB object that searches for data sources and other enumerators. <i>See also</i> root enumerator.</p>
<p>
<b>Error </b>A condition in which a fatal error occurred. Also used to refer to any error, regardless of whether it is fatal.</p>
<p>
<b>Error code </b>A class of&nbsp; return code, of the type HRESULT, that begins with E_ or DB_E_ and indicates that the method failed completely and was unable to do any useful work.</p>
<p>
<b>Error lookup service </b>A method used by a provider to handle and interpret OLE DB error objects.</p>
<p>
<b>Error object </b>An object that contains detailed information about an error. <i>See also</i> OLE Automation error object and OLE DB error object.</p>
<p>
<b>Event </b>An action taken by a provider, such as changing a column value or deleting a row, of which the provider notifies the consumer.</p>
<p>
<b>Execution plan </b>A plan generated by a query engine to execute a command. Equivalent to executable code compiled from a third-generation language such as C.</p>
<p>
<b>F</b></p>
<p>
<b>Fetch </b>To retrieve one or more rows from the data source and instantiate them in a rowset.</p>
<p>
<b>Field </b><i>See</i> column.</p>
<p>
<b>Fixed-length data type </b>A data type that is always stored in the same number of bytes, such as a two-byte integer. <i>See also</i> variable-length data type.</p>
<p>
<b>Foreign key </b>A column or columns in a table that match the primary key in another table.</p>
<p>
<b>G</b></p>
<p>
<b>Getting data </b>Transferring data from the provider to the consumer, as in getting column or output parameter data.</p>
<p>
<b>Globally Unique Identifier (GUID) </b>A 16-byte value that uniquely identifies something, usually the software that implements one or more COM objects or an interface on one of those objects. Also known as a <i>UUID (Universally Unique Identifier)</i>.</p>
<p>
<b>H</b></p>
<p>
<b>Handle </b>A value that uniquely identifies something such as a row or an accessor. Handles are meaningful only to the software that creates and uses them, but are passed by other software to identify things.</p>
<p>
<b>HRESULT </b>An opaque result handle defined to be zero for a successful return from a function and nonzero if error or status information is returned.</p>
<p>
<b>I</b></p>
<p>
<b>Interface Identifier (IID) </b>A globally unique identifier (GUID) associated with an interface. Some functions take IIDs as parameters to allow the caller to specify which interface pointer should be returned.</p>
<p>
<b>Immediate update mode </b>An update mode in which changes made through <b>IRowsetChange</b> are immediately transmitted to the data source. <i>See also</i> delayed update mode.</p>
<p>
<b>Index rowset </b>A rowset built over an index. Each row in an index rowset contains a bookmark that points to a row in a rowset built over the corresponding table.</p>
<p>
<b>Initialize </b>To change the state of an enumerator or data source object so it can be used to access data. For example, initializing a data source object might require the provider to open a data file or connect to a database.</p>
<p>
<b>Input parameter </b>A parameter in a text command for which the consumer supplies a value to the provider.</p>
<p>
<b>Input/output parameter </b>A parameter in a text command for which the consumer supplies a value to the provider and the provider returns a value to the consumer.</p>
<p>
<b>Insert </b>To add a new row of data to the data source.</p>
<p>
<b>Instantiate </b>To create an instance of a COM object.</p>
<p>
<b>Interface </b>A group of semantically related functions that provide access to a COM object. Each OLE interface defines a contract that allows objects to interact according to the Component Object Model (COM). Although OLE provides many interface implementations, most interfaces can also be implemented by developers designing OLE applications. <i>See also </i>Component Object Model and COM object.</p>
<p>
<b>IPersist* object </b>An OLE object that supports <b>IPersistStream</b>, <b>IPersistStreamInit</b>, or <b>IPersistStorage</b>.</p>
<p>
<b>Isolation level </b><i>See</i> transaction isolation level.</p>
<p>
<b>J</b></p>
<p>
<b>Join </b>An operation in a relational database that links the rows in two or more tables by matching values in specified columns.</p>
<p>
<b>K</b></p>
<p>
<b>Key </b>A column or columns whose values identify a row. <i>See also</i> primary key and foreign key.</p>
<p>
<b>Key value bookmark </b>A bookmark that uses a unique key to identify a row. <i>See also</i> numeric bookmark.</p>
<p>
<b>L</b></p>
<p>
<b>Length </b>The length of a data value. <i>See also</i> data part, value, and status.</p>
<p>
<b>Listener </b>A consumer that has requested that a provider send it notifications of various events.</p>
<p>
<b>Long data </b><i>See</i> BLOB.</p>
<p>
<b>M</b></p>
<p>
<b>Manual-commit mode </b>A transaction commit mode in which transactions must be explicitly committed or aborted by calling <b>ITransaction::Commit</b> or <b>ITransaction::Abort</b>.</p>
<p>
<b>Maximum precision </b>The maximum number of base 10 digits that can be stored in a particular data type. <i>See also</i> precision.</p>
<p>
<b>Metadata </b>Data that describes a parameter in a text command or a column in a rowset. For example, the data type, length, and updatability of a column.</p>
<p>
<b>Method </b>A function in an interface.</p>
<p>
<b>Moniker </b>A name for a specific object instance.</p>
<p>
<b>Multiple results object </b>An OLE DB object created by executing a command and through which multiple results (rowsets or row counts) can be retrieved.</p>
<p>
<b>N</b></p>
<p>
<b>Next fetch position </b>The position of the next row that will be fetched by a call to <b>IRowset::GetNextRows</b>.</p>
<p>
<b>Notification </b>A call from a provider to a consumer, in which the provider notifies the consumer that a particular event is occurring.</p>
<p>
<b>Notification sink </b>An actual object that implements the notification interface.</p>
<p>
<b>Null pointer </b>A pointer with a value of zero. It is an error to dereference a null pointer. <i>See also</i> empty string and NULL value.</p>
<p>
<b>NULL value </b>Having no explicitly assigned value. In particular, a NULL value is different from a zero or a blank. <i>See also</i> empty string and null pointer.</p>
<p>
<b>Numeric bookmark </b>A bookmark that uses a unique number to identify a row. <i>See also</i> key value bookmark.</p>
<p>
<b>O</b></p>
<p>
<b>Object </b>In OLE, a programming structure encapsulating both data and functionality that are defined and allocated as a single unit and for which the only public access is through the programming structure's interfaces. A COM object must support, at a minimum, the <b>IUnknown</b> interface, which maintains the object's existence while it is being used and provides access to the object's other interfaces. <i>See also</i> Component Object Model and interface.</p>
<p>
<b>OLE </b>Microsoft's object-based technology for sharing information and services across process and machine boundaries.</p>
<p>
<b>OLE Automation error object </b>An error object that conforms to the standards specified for such objects by OLE Automation. <i>See also</i> OLE DB error object.</p>
<p>
<b>OLE DB </b>A set of interfaces that expose data from a variety of data sources using COM.</p>
<p>
<b>OLE DB error object </b>An error object used by OLE DB objects to return an error. OLE DB error objects are an extension of Automation error objects.</p>
<p>
<b>OLE DB object </b>A COM object defined by OLE DB. The COM objects defined by OLE DB are enumerators, data source objects, sessions, commands, rowsets, multiple results objects, OLE DB error objects, transaction objects, and transaction options objects.</p>
<p>
<b>OLE DB Software Development Kit (SDK) </b>A collection of redistributable software, header files, tools, sample code, and documentation to be used by developers of OLE DB consumers and providers.</p>
<p>
<b>OLE object </b>In OLE DB, a COM object that is stored in a column. In OLE, a COM object.</p>
<p>
<b>Optimistic concurrency </b>A strategy to increase concurrency in which rows are not locked. Instead, before they are updated or deleted, a rowset checks to see if they have been changed since they were last read. If so, the update or delete fails. <i>See also</i> pessimistic concurrency.</p>
<p>
<b>Ordinary bookmark </b>A bookmark whose value is defined by the provider. <i>See also</i> standard bookmark.</p>
<p>
<b>Output parameter </b>A parameter in a text command for which the provider returns a value to the consumer.</p>
<p>
<b>P</b></p>
<p>
<b>Parallel processing </b>A method of processing that can run only on a computer that contains two or more processors running simultaneously.</p>
<p>
<b>Parameter </b>A variable in a text command. A parameter can be an input, input/output, or output parameter.</p>
<p>
<b>Pending change </b>A change that has been cached in a rowset and not yet transmitted to the data source. <i>See also</i> delayed update mode and immediate update mode.</p>
<p>
<b>Persist </b>To save the current state of a COM object, such as to a file. Currently, only data source objects can be persisted.</p>
<p>
<b>Pessimistic concurrency </b>A strategy for implementing serializability in which rows are locked so that other transactions cannot change them. <i>See also</i> optimistic concurrency.</p>
<p>
<b>Phase </b>A step in a sequence of notifications caused by a single event. The sequence of notifications is similar to the phases in a two-phase commit protocol.</p>
<p>
<b>Precision </b>The number of base 10 digits in a number. <i>See also</i> maximum precision.</p>
<p>
<b>Prepare </b>To compile a command. An execution plan is created by preparing a command.</p>
<p>
<b>Preserved rowset </b>A rowset in which all previously defined functionality is retained after a commit or abort.</p>
<p>
<b>Primary key </b>A column or columns that uniquely identifies a row in a table.</p>
<p>
<b>Procedure </b>A group of one or more precompiled commands (generally SQL statements) that are stored as a named object in a database.</p>
<p>
<b>Property </b>Attributes of an OLE DB object. For example, the maximum number of rows in a rowset that can be active at one time.</p>
<p>
<b>Property group </b>The set of all properties that apply to a particular OLE DB object.</p>
<p>
<b>Property set </b>A property is identified by a GUID and an integer (the property ID). A property set is the set of all properties that share the same GUID.</p>
<p>
<b>Provider </b>Software that implements OLE DB methods and interfaces.</p>
<p>
<b>Q</b></p>
<p>
<b>Query </b>A text command. Sometimes used to mean a text command that creates a rowset.</p>
<p>
<b>R</b></p>
<p>
<b>Reason </b>The specific event that occurred, such as changing a row value or deleting a row.</p>
<p>
<b>Record </b><i>See</i> row.</p>
<p>
<b>Reference counting </b>Keeping a count of each interface pointer held on an object to ensure that the object is not destroyed before all references to it are released. In OLE DB, rows and accessors are also reference counted.</p>
<p>
<b>Reference accessor </b>An accessor that enables a consumer to get rowset data directly from the provider's buffer. Support for reference accessors is optional.</p>
<p>
<b>Release </b>To decrease the reference count on a row, accessor, or COM object. When the reference count reaches zero, the provider generally releases the resources used by the row, accessor, or COM object.</p>
<p>
<b>Result </b>A row count or rowset created by executing a command. <i>See also</i> multiple results object.</p>
<p>
<b>Resynchronize </b>To update the data in a rowset with the data in the data source that is visible to the current transaction according to its isolation level.</p>
<p>
<b>Return code </b>The value returned by an OLE DB method.</p>
<p>
<b>Root enumerator </b>An enumerator shipped in the OLE DB SDK that enumerates the data sources and enumerators listed in the registry. <i>See also</i> enumerator.</p>
<p>
<b>Row </b>A set of related columns that describe a specific entity. Also known as a <i>record</i>.</p>
<p>
<b>Row handle </b>A handle used to identify a row.</p>
<p>
<b>Rowset </b>An OLE DB object that contains a set of rows, each of which has columns of data.</p>
<p>
<b>S</b></p>
<p>
<b>Scale </b>The number of digits in a number that are to the right of the decimal point.</p>
<p>
<b>Schema </b>A database object that contains one or more tables, often created by a single user.</p>
<p>
<b>Schema rowset </b>A predefined rowset that provides information about the structure of a database.</p>
<p>
<b>Self bookmark </b>A bookmark, stored in column 0 of a row, that is used to return to that row.</p>
<p>
<b>Serializability </b>Whether two transactions executing simultaneously produce a result that is the same as the serial (or sequential) execution of those transactions. Serializable transactions are required to maintain database integrity.</p>
<p>
<b>Service component </b>A provider that does not directly expose data, but instead provides a service, such as query processing. Used in conjunction with data providers.</p>
<p>
<b>Session </b>An OLE DB object that serves as the context for a transaction.</p>
<p>
<b>Setting data </b>Transferring data from the consumer to the provider, as in setting column or input parameter data.</p>
<p>
<b>SQL </b>Structured Query Language. A language used by relational databases to query, update, and manage data. Text commands often use SQL.</p>
<p>
<b>Standard bookmark </b>A bookmark whose value is defined by OLE DB. <i>See also</i> ordinary bookmark.</p>
<p>
<b>Static error </b>An error (text) that is stored by a specific provider lookup service, and most commomly tied to a single data store.</p>
<p>
<b>Status </b>The status of a data value. <i>See also</i> data part, value, and length.</p>
<p>
<b>Storage interface </b>An interface used to access data in a storage object: <b>ISequentialStream</b>, <b>IStream</b>, <b>IStorage</b>, or <b>ILockBytes</b>.</p>
<p>
<b>Storage object </b>A COM object that implements a storage interface. Storage objects are used to access BLOB data and OLE objects stored in a column.</p>
<p>
<b>Success </b>A condition in which no errors occurred.</p>
<p>
<b>Success code </b>A class of&nbsp; return code, of the type HRESULT, that begins with S_ or DB_S_ and indicates success of the method.</p>
<p>
<b>T</b></p>
<p>
<b>Table </b>A collection of rows in the data source.</p>
<p>
<b>Text command </b>A text string, usually an SQL statement, that defines a command.</p>
<p>
<b>Transaction </b>An atomic unit of work. The work in a transaction must be completed as a whole; if any part of the transaction fails, the entire transaction fails.</p>
<p>
<b>Transaction isolation </b>The act of isolating one transaction from the effects of all other transactions.</p>
<p>
<b>Transaction isolation level </b>A measure of how well a transaction is isolated.</p>
<p>
<b>Transaction object </b>An OLE DB object used to support transactions.</p>
<p>
<b>Transaction options object </b>An OLE DB object used to define various options for a transaction.</p>
<p>
<b>Transfer </b>To move data between the consumer's and provider's buffers. The provider, not the consumer, transfers data. <i>See also</i> getting data and setting data.</p>
<p>
<b>Transmit </b>To send changes made through <b>IRowsetChange</b> to the data source. <i>See also</i> delayed update mode and immediate update mode.</p>
<p>
<b>Transmitted change </b>A change that has been sent to the data source. <i>See also</i> pending change.</p>
<p>
<b>Truncate </b>To discard one or more bytes of variable-length data or non-significant digits of numeric data. Truncation results in a warning condition when getting data and an error condition when setting data.</p>
<p>
<b>Type indicator </b>An integer value passed to or returned from an OLE DB method to indicate the data type of a consumer variable, a parameter, or a column.</p>
<p>
<b>U</b></p>
<p>
<b>Uninitialize </b>To change the state of an enumerator or data source object so it cannot be used to access data. For example, uninitializing a data source object might require the provider to close a data file or disconnect from a database.</p>
<p>
<b>Unprepare </b>To discard the current execution plan.</p>
<p>
<b>Update </b>To change an existing row of data in the data source. Also, to transmit pending changes to the data source.</p>
<p>
<b>User </b>The end user, which is a generally a person, as opposed to the consumer, which is a piece of software.</p>
<p>
<b>V</b></p>
<p>
<b>Value </b>A data value. <i>See also</i> data part, length, and status.</p>
<p>
<b>Variable-length data type </b>A data type for which the length of the data can vary, such as a string. <i>See also</i> fixed-length data type.</p>
<p>
<b>Visibility </b>Whether data values can be detected by a rowset. Refers both to the visibility of data in a data source and data cached in a rowset.</p>
<p>
<b>W</b></p>
<p>
<b>Warning </b>A condition in which a nonfatal error occurred. </p>
<p>
<b>Warning code</b> A class of&nbsp; return code, of the type HRESULT, that begins with S_ or DB_S_ and indicates success of the method but with a warning.</p>
<p>
<b>Z</b></p>
<p>
<b>Zombie </b>A state in which the only valid consumer action on a COM object is generally to release that object.</p>
</font></BODY>
</HTML>
