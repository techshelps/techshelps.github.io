<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting Local Transactions</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledboraclesupporting_local_transactions"></a>Supporting Local Transactions</h1>
<p>
A session delimits transaction scope for an Oracle Provider local transaction. When, at consumer direction, this provider submits a request to a connected Oracle server, the request constitutes a unit of work for the provider. Local transactions always wrap one or more units of work on a single Oracle Provider session.</p>
<p>
Using the default Oracle Provider autocommit mode, a single unit of work is treated as the scope of a local transaction. No more than one unit ever participates in the local transaction. Upon successful completion of a work unit, the work is committed. On failure, any work begun is rolled back and the error is reported to the consumer.</p>
<p>
The consumer can direct more precise control over local transaction scope by using <a href="txnloc_6kha.htm">ITransactionLocal</a>. When a consumer session initiates a transaction, all session work units between the transaction start point and the eventual <b>Commit</b> or <b>Abort</b> are treated as an atomic unit. The OLE DB Provider for Oracle implicitly begins a transaction when directed to do so by the consumer. If the consumer requests retention, the session reverts to autocommit mode.</p>
<p>
The OLE DB Provider for Oracle supports <b>ITransactionLocal::StartTransaction</b> parameters as follows.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=50%><b>Parameter</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><i>isoLevel</i></td>
<td width=50%>In local transactions, this provider supports ISOLATIONLEVEL_READCOMMITTED, ISOLATIONLEVEL_REPEATABLEREAD, ISOLATIONLEVEL_ISOLATED, and the synonyms ISOLATIONLEVEL_CURSORSTABILITY and ISOLATIONLEVEL_SERIALIZABLE.</td>
</tr>
<tr valign=top>
<td width=50%><i>isoFlags</i></td>
<td width=50%>This provider returns an error for any value other than zero.</td>
</tr>
<tr valign=top>
<td width=50%><i>pOtherOptions</i></td>
<td width=50%>If not NULL, the provider requests the options object from the interface. The provider returns XACT_E_<br>
NOTIMEOUT if the options object’s ulTimeout member is not zero. The provider ignores the value of the szDescription member.</td>
</tr>
<tr valign=top>
<td width=50%><i>pulTransactionLevel</i></td>
<td width=50%>If not NULL, the provider returns the nested level of the transaction, which is always 1 at this point (because nested transactions are not supported).</td>
</tr>
</table><br>
<p>
For local transactions, the OLE DB Provider for Oracle implements <a href="trans_53as.htm">ITransaction::Abort</a> parameters as follows.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=50%><b>Parameter</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><i>pboidReason</i></td>
<td width=50%>Ignored if set. Can safely be NULL.</td>
</tr>
<tr valign=top>
<td width=50%><i>FRetaining</i></td>
<td width=50%>When TRUE, a new transaction is implicitly begun for the session. The transaction must be committed or aborted by the consumer.<br>
<br>
When FALSE, this provider reverts to autocommit mode for the session.</td>
</tr>
<tr valign=top>
<td width=50%><i>FAsync</i></td>
<td width=50%>Asynchronous abort is not supported by this provider. This provider returns XACT_E_NOTSUPPORTED if the value is not FALSE.</td>
</tr>
</table><br>
<p>
For local transactions, the OLE DB Provider for Oracle implements <a href="trans_6xbo.htm">ITransaction::Commit</a> parameters as follows.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=50%><b>Parameter</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><i>fRetaining</i></td>
<td width=50%>When TRUE, a new transaction is implicitly begun for the session. The transaction must be committed or aborted by the consumer.<br>
<br>
When FALSE, this provider reverts to autocommit mode for the session.</td>
</tr>
<tr valign=top>
<td width=50%><i>GrfTC</i></td>
<td width=50%>Asynchronous and phase-one returns are not supported by this provider. The provider returns XACT_E_<br>
NOTSUPPORTED for any value other than XACTTC_SYNC.</td>
</tr>
<tr valign=top>
<td width=50%><i>GrfRM</i></td>
<td width=50%>Must be 0.</td>
</tr>
</table><br>
<p>
The OLE DB Provider for Oracle rowsets on the session are preserved on a local commit or abort operation based on the values of the rowset properties DBPROP_ABORTPRESERVE and DBPROP_COMMITPRESERVE. By default, these properties are both VARIANT_TRUE and all the provider's rowsets on the session are retained following an abort or commit operation.</p>
<p>
The OLE DB Provider for Oracle does not implement the <b>ITransactionObject</b> interface. A consumer attempt to retrieve a reference on the interface returns E_NOINTERFACE.</p>
</font></BODY>
</HTML>
