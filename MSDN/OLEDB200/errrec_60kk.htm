<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IErrorRecords::AddErrorRecord</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbierrorrecords__adderrorrecord"></a>IErrorRecords::AddErrorRecord</h1>
<p>
Adds a record to an OLE DB error object.</p>
<pre><code>HRESULT AddErrorRecord (
   ERRORINFO *      pErrorInfo,
   DWORD            dwLookupID,
   DISPPARAMS *   pdispparams,
   IUnknown *         punkCustomError,
   DWORD            dwDynamicErrorID);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pErrorInfo</i></p>
<p class=indent>
[in]<br>
A pointer to an ERRORINFO structure containing information about the error. This structure is allocated and freed by the consumer. For more information, see "<a href="ch13pr_6a5v.htm">Error Records</a>" in Chapter 13.</p>
<p class=dt>
<i>dwLookupID</i></p>
<p class=indent>
[in]<br>
The value used by the provider's error lookup service in conjunction with the return code to identify the error description, Help file, and context ID for an error. This can be a provider-specific value, such as the <i>dwMinor</i> element of *<i>pErrorInfo</i>. It can also be a special value, IDENTIFIER_SDK_ERROR, that tells the implementation of <b>IErrorInfo</b> that is shipped with the OLE DB SDK to ignore the provider's lookup service and use the description supplied in the OLE DB SDK error resource DLL.</p>
<pre><code>const DWORD IDENTIFIER_SDK_MASK&nbsp; = 0xF000000;
const DWORD IDENTIFIER_SDK_ERROR = 0x1000000;
</code></pre>
<p class=dt>
<i>pdispparams</i></p>
<p class=indent>
[in]<br>
A pointer to the parameters for the error. This is a null pointer if there are no error parameters. The error parameters are inserted into the error text by the error lookup service. This structure is allocated and freed by the consumer. For more information, see "Error Parameters" in "<a href="ch13pr_6a5v.htm">Error Records</a>" in Chapter 13.</p>
<p class=dt>
<i>punkCustomError</i></p>
<p class=indent>
[in]<br>
An interface pointer to the custom error object. This is a null pointer if there is no custom object for the error. For more information, see "<a href="ch13pr_90qb.htm">OLE DB Error Objects</a>" in Chapter 13.</p>
<p class=dt>
<i>dwDynamicErrorID</i></p>
<p class=indent>
[in]<br>
If the error lookup service uses static errors—that is, error information that is hard-coded in the lookup service—<i>dwDynamicErrorID</i> is zero.</p>
<p class=tl>
If the error lookup service uses dynamic errors—that is, error information that is created at run time—<i>dwDynamicErrorID</i> is the ID of the error record. This ID is used to release the error information when the OLE DB error object is released. Although it is not required, it is more efficient for all error records in a single OLE DB error object to have the same dynamic error ID.</P><p class=tl>
For more information, see "<a href="ch13pr_529f.htm">Error Lookup Services</a>" in Chapter 13.</P><p class=tl>
</P><p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
E_INVALIDARG<br>
<i>pErrorInfo</i> was a null pointer.</p>
<p class=dt>
</p>
<p class=indent>
E_OUTOFMEMORY<br>
The OLE DB error object was unable to allocate sufficient memory with which to add a new record.</p>
<p class=dt>
</p>
<p class=label>
<b>Comments</b></p>
<p>
This method should be used only by providers; there are no reasons for consumers to use it.</p>
<p>
Records are added to the top of the list. That is, the number of the newly added record is record 0 and the number of all other records is increased by 1.</p>
<p>
<b>AddErrorRecord</b> adds a reference count on the custom error object. After adding a custom error object to a record in an OLE DB error object, the provider must call <b>Release</b> on all interface pointers it holds on that custom error object. This transfers ownership of the custom error object to the OLE DB error object. When it is released, the OLE DB error object will release all custom error objects.<br>
</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="errrec_0gkv.htm">IErrorRecords::GetBasicErrorInfo</a>, <a href="errrec_3hh0.htm">IErrorRecords::GetCustomErrorObject</a>, <a href="errrec_5303.htm">IErrorRecords::GetErrorParameters</a></p>
</font></BODY>
</HTML>
