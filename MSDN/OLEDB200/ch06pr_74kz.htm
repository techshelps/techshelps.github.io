<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessors</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbaccessors"></a>Accessors</h1>
<p>
An <i>accessor</i> is a collection of information that describes how data is stored in the consumer's buffer. For example, it contains the type of each piece of data, the offset in the buffer at which it is stored, the scale and precision used by data stored in a DB_NUMERIC structure, and so on. When the consumer calls a method that transfers data, such as <b>IRowset::GetData</b> or <b>ICommand::Execute</b>, it passes the handle to an accessor and a pointer to a buffer. The provider uses this accessor to determine how to transfer the data contained in the buffer.</p>
<p>
An accessor is identified by its handle.</p>
<pre><code>typedef ULONG HACCESSOR;
# define DB_INVALID_HACCESSOR 0x00
</code></pre>
<p>
DB_INVALID_HACCESSOR is an accessor handle value that is always invalid.</p>
</font></BODY>
</HTML>
