<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAlterTable::AlterColumn</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbialtertable__altercolumn"></a>IAlterTable::AlterColumn</h1>
<p>
<b>AlterColumn</b> alters the column ID and/or properties associated with a column in a table.</p>
<pre><code>HRESULT AlterColumn(
   DBID *   pTableID,
   DBID *   pColumnID,
   DBCOLUMNDESCFLAGS   ColumnDescFlags,
   DBCOLUMNDESC*      pColumnDesc);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>pTableID</i></p>
<p class=indent>
[in]<br>
The DBID of the base table containing the column to alter.</p>
<p class=dt>
<i>pColumnID</i></p>
<p class=indent>
[in]<br>
The current DBID of the column to alter.</p>
<p class=dt>
<i>ColumnDescFlags</i></p>
<p class=indent>
[in]<br>
Values as described in the enumeration <b>DBCOLUMNDESCFLAGS</b>. These bits define which&nbsp; portions of the <b>DBCOLUMNDESC</b> structure defined in <i>pColumnDesc</i> should be used when altering the column. A provider returns values it supports in the DBPROP_ALTERCOLUMN property. For more information about this field, please see the Comments section.</p>
<p class=dt>
</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=51%><b>Flag</b></td>
<td class=label width=49%><b>Associated Portion of DBCOLUMNDESC</b></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_TYPENAME</td>
<td width=49%><i>pwszTypeName</i></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_ITYPEINFO</td>
<td width=49%><i>ITypeInfo *</i></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_PROPERTIES</td>
<td width=49%><i>rgPropertySets</i> AND <i>cPropertySets</i></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_CLSID</td>
<td width=49%><i>pclsid</i></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_COLSIZE</td>
<td width=49%><i>ulColumnSize</i></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_DBCID</td>
<td width=49%><i>dbcid</i></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_WTYPE</td>
<td width=49%><i>wType</i></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_PRECISION</td>
<td width=49%><i>bPrecision</i></td>
</tr>
<tr valign=top>
<td width=51%>DBCOLUMNDESCFLAG_SCALE</td>
<td width=49%><i>bScale</i></td>
</tr>
</table><br>
<p class=dt>
<i>pColumnDesc</i></p>
<p class=indent>
[in]<br>
A pointer to a <b>DBCOLUMNDESC </b>structure defining new values for the columns. Only the values defined in <i>ColumnDescFlags</i> are used—the provider ignores other fields in the structure. For a description of the <b>DBCOLUMNDESC</b> structure, please refer to <b>ITableDefinition::CreateTable</b>.</p>
<p class=label>
<b>Return Code</b></p>
<p class=dt>
S_OK</p>
<p class=indent>
The method succeeded.</p>
<p class=dt>
E_FAIL</p>
<p class=indent>
A provider-specific error occurred.</p>
<p class=dt>
E_INVALIDARG</p>
<p class=indent>
<i>pTableID</i> or <i>pColumnID</i> was a null pointer.</p>
<p class=indent>
<i>pColumnDesc</i> was a null pointer.</p>
<p class=dt>
DB_E_NOCOLUMN</p>
<p class=indent>
The column specified in *<i>pColumnID</i> does not exist in the specified table.</p>
<p class=dt>
DB_E_NOTABLE</p>
<p class=indent>
The specified table does not exist in the current data source.</p>
<p class=dt>
DB_E_DUPLICATECOLUMNID</p>
<p class=indent>
The <i>ColumnDescFlags</i> structure indicated that the <i>dbcid</i> portion of the <i>pColumnDesc </i>argument should be used, and the column ID specified in <i>dbcid</i> was the same as an existing column ID.</p>
<p class=dt>
DB_SEC_E_PERMISSIONDENIED</p>
<p class=indent>
The consumer did not have sufficient permission to alter the columns of this table.</p>
<p class=dt>
DB_E_TABLEINUSE</p>
<p class=indent>
The specified table was in use and the provider could not alter the column while the table was open.</p>
<p class=dt>
DB_E_NOTSUPPORTED</p>
<p class=indent>
<i>ColumnDescFlags</i> was an invalid value. Providers return valid values in the property DBPROP_ALTERCOLUMN.</p>
<p class=label>
<b>Comments</b></p>
<p>
<b>AlterColumn</b> applies the new properties and column ID to the existing column. The altered column preserves all properties associated with the existing column that are not explicitly changed by properties specified in <i>*prgProperties</i>. If <i>pNewColumnID</i> is null, or the same as <i>pColumnID</i>, then the column name is unchanged. If <i>cPropertySets</i> is zero, then no properties are changed. If <i>pNewColumnID</i> is null, or the same as <i>pColumnID</i>, and <i>cPropertySets</i> is zero, then the method makes no change to the state of the table and returns S_OK.</p>
<p>
Providers may also return any of the return codes listed in <b>ITableDefinition::CreateTable</b> or <b>ITableDefinition::AddColumn</b> associated with errors in the <b>DBCOLUMNDESC</b> structure (for example, DB_E_BADCOLUMNID). However, the provider should not evaluate portions of the structure that are not explicitly listed in the <i>ColumnDescFlags</i> parameter.</p>
<p>
Calls to <b>AlterColumn</b> should be atomic. Failure should leave the column in the same state as before the call to the method.</p>
</font></BODY>
</HTML>
