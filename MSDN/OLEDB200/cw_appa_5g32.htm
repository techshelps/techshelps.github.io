<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Localization</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="localization"></a>Localization</h1>
<p>
The ActiveX controls framework has some support for robust localization of your control—most notably, property pages and any other resources you want to localize.</p>
<p>
The scheme is as follows: The resources for the default language (typically English) are in the main in-process server's resources. Then, for each additional language supported, a satellite DLL contains the resources for that language. The name for this satellite DLL is generated by taking the base name for the DLL from a string resource in the main in-process server file, and then adding on a three-letter language code as generated by the function <b>GetLocaleInfo</b> with the LCTYPE <b>LOCALE_SABBREVLANGNAME</b>.</p>
<p>
The code first looks for the specific language that is set up in the global variable <i>g_lcidLocale</i>. This should be initialized by all servers. For ActiveX controls and property pages, get this from the host. For Automation servers, you can set this up some other way, often by using the system language. If the satellite DLL for the specific language is not found, the framework looks for the primary language ID with <b>SUBLANG_DEFAULT</b>. If that satellite is not found, a handle to the default resources is returned.</p>
<p>
Fully localized type libraries are not supported; most hosts ignore these and just use the default.</p>
<h1>Setting up for Localization</h1>
<p>
If you want to support satellite localization in your in-process server, then you need to set up some variables.</p>
<p>
First, set to True the variable <i>g_fSatelliteLocalization </i>in your in-process server file. This instructs all further code paths to use satellite localization.</p>
<p>
At some point, set up the <i>g_lcidLocale</i> variable, as described in the previous section.&nbsp; For ActiveX controls, you can use <b>GetAmbientProperty</b> and ask for <b>AMBIENT_DISPID_LOCALE</b>. For property pages, a method on the <b>IPropertyPageSite</b> interface lets you obtain the locale identifier; for Automation objects, you are required to set this up yourself, typically by obtaining the system locale identifier.</p>
<p>
Whenever you want to load a resource, make sure you use <b>GetResourceHandle</b> to get the instance handle for the localized resources. This generates the appropriate file name for the satellite DLL and attempts to load it. The satellite DLL contains all the localized resources you may want to use.&nbsp; </p>
</font></BODY>
</HTML>
