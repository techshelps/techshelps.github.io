<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INSERT INTO Statement</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="insertintostatement"></a>INSERT INTO Statement</h1>
<p>
The INSERT INTO statement binds a logical cube to an existing relational view and populates this cube with dimension members and data.</p>
<h2>BNF</h2>
<p>
&lt;<i>insert-statement</i>&gt; <b>::= INSERT INTO </b>&lt;<i>target-clause</i>&gt; &lt;<i>property-list</i>&gt; <br>
 &nbsp; [&lt;<i>options-clause</i>&gt;] &lt;<i>source-clause</i>&gt;</p>
<p>
&lt;<i>target-clause</i>&gt; <b>::= </b>&lt;<i>cube-name</i>&gt; &lt;<i>open-paren</i>&gt; &lt;<i>target-element-list</i>&gt; <br>
 &nbsp; &lt;<i>close-paren</i>&gt;</p>
<p>
&lt;<i>target-element-list</i>&gt;<b> ::= </b>&lt;<i>target-element</i>&gt;[<b>, </b>&lt;<i>target-element-list</i>&gt;]</p>
<p>
&lt;<i>target-element</i>&gt;<b> ::= </b>[&lt;<i>dim-name</i>&gt;<b>.</b>[&lt;<i>hierarchy-name</i>&gt;<b>.</b>]]&lt;<i>level-name</i>&gt; <br>
 &nbsp; | &lt;<i>time-dim-name</i>&gt;<br>
 &nbsp; | [<b>Measures.</b>]&lt;<i>measure-name</i>&gt;<br>
 &nbsp; | <b>SKIPONECOLUMN</b></p>
<p>
&lt;<i>property-list</i>&gt; <b>::= </b>&lt;<i>property</i>&gt;[<b>, </b>&lt;<i>property-list</i>&gt;]</p>
<p>
&lt;<i>property</i>&gt;<b> ::= </b>&lt;<i>property-name</i>&gt; | &lt;<i>property-name</i>&gt; <b>= </b>&lt;<i>value</i>&gt;</p>
<p>
&lt;<i>source-clause</i>&gt; <b>::= SELECT </b>&lt;<i>columns-list</i>&gt;<br>
 &nbsp; <b>FROM </b>&lt;<i>tables-list</i>&gt;<br>
 &nbsp; [ <b>WHERE </b>&lt;<i>where-clause</i>&gt; ]<br>
 &nbsp; | <b>DirectlyFromCachedRowset </b>&lt;<i>hex-number</i>&gt;</p>
<p>
&lt;<i>options-clause</i>&gt;<b> ::= OPTIONS </b>&lt;<i>options-list</i>&gt; </p>
<p>
&lt;<i>options-list</i>&gt; <b>::= </b>&lt;<i>option</i>&gt;[<b>, </b>&lt;<i>options-list</i>&gt;]</p>
<p>
&lt;<i>option</i>&gt;<b> ::= </b>&lt;<i>defer-options</i>&gt; | &lt; <i>analysis-options</i>&gt;</p>
<p>
&lt;<i>defer-options</i>&gt;<b> ::= DEFER_DATA </b>| <b>ATTEMPT_DEFER</b></p>
<p>
&lt;<i>analysis-options</i>&gt;<b> ::= PASSTHROUGH </b>| <b>ATTEMPT_ANALYSIS</b></p>
<p>
&lt;<i>columns-list</i>&gt;<b> ::= </b>&lt;<i>column-expression</i>&gt; [<b>, </b>&lt; <i>columns-list</i>&gt; ]</p>
<p>
&lt;<i>column-expression</i>&gt;<b> ::= </b>&lt;<i>column-expression-name</i>&gt;</p>
<p>
&lt;<i>column-expression-name</i>&gt; <b>::= </b>&lt;<i>column-name</i>&gt; [<b>AS </b>&lt;<i>alias-name</i>&gt;]<br>
 &nbsp; | &lt;<i>alias name</i>&gt; &lt;<i>column-name</i>&gt;</p>
<p>
&lt;<i>column-name</i>&gt; <b>::= </b>&lt;<i>table-name</i>&gt;<b>.</b>&lt;<i>column-name</i>&gt;<br>
 &nbsp; | &lt;<i>column-function</i>&gt; | &lt;<i>ODBC scalar function</i>&gt; | &lt;<i>braced-expression</i>&gt;</p>
<p>
&lt;<i>column function</i>&gt; <b>::= </b>&lt;<i>identifier</i>&gt;(…)</p>
<p>
&lt;<i>ODBC scalar function</i>&gt; <b>::= </b>{<b>fn</b>&lt;<i>column-function</i>&gt;}</p>
<p>
&lt;<i>braced-expression</i>&gt; <b>::= </b>(…)</p>
<p>
&lt;<i>tables list</i>&gt; <b>::= </b>&lt;<i>table_expression</i>&gt; [<b>, </b>&lt;<i>table_list</i>&gt;]</p>
<p>
&lt;<i>table_expression</i>&gt; <b>::= </b>&lt;<i>table-name</i>&gt; [ [<b>AS</b>] &lt;<i>table-alias</i>&gt;]</p>
<p>
&lt;<i>table-alias</i>&gt; <b>::= </b>&lt;<i>identifier</i>&gt;</p>
<p>
&lt;<i>table_name</i>&gt; <b>::= </b>&lt;<i>identifier</i>&gt;</p>
<p>
&lt;<i>where clause</i>&gt; <b>::= </b>&lt;<i>where-condition</i>&gt; [<b>AND </b>&lt;<i>where-clause</i>&gt;]</p>
<p>
&lt;<i>where condition</i>&gt; <b>::= </b>&lt;<i>join-constraint</i>&gt; | &lt;<i>application constraint</i>&gt;</p>
<p>
&lt;<i>join-constraint</i>&gt; <b>::= </b>&lt;<i>column-name</i>&gt;<b> = </b>&lt;<i>column-name</i>&gt;<br>
 &nbsp; | &lt;<i>open-paren</i>&gt;&lt;<i>column-name</i>&gt; <b>= </b>&lt;<i>column-name</i>&gt;&lt;<i>close-paren</i>&gt;</p>
<p>
&lt;<i>application-constraint</i>&gt; <b>::= </b>(…)<br>
 &nbsp; | <b>NOT </b>(…)</p>
<p>
&nbsp;&nbsp;&nbsp;| (…) <b>OR </b>(…)</p>
<p>
&lt;<i>identifier</i>&gt; <b>::= </b>&lt;<i>letter</i>&gt;{&lt;<i>letter</i>&gt;|&lt;<i>digit</i>&gt;|&lt;<i>underline</i>&gt;|&lt;<i>dollar</i>&gt;|&lt;<i>sharp</i>&gt;}…</p>
<h2>Examples</h2>
<h3>Example 1</h3>
<pre><code>INSERT INTO MyCube (Year, Month, [Product Group], [Product Name], Country, Sales, Cost)
OPTIONS DEFER_DATA
SELECT MyTable.Year, MyTable.Month, MyTable.ProdGroup, MyTable.ProdName, MyTable.Country, MyTable.Sales, MyTable.Cost
FROM MyTable
WHERE MyTable.SalesRep = "Amir" and MyTable.CustomerGroup = "Industry"
</code></pre>
<h3>Example 2</h3>
<pre><code>INSERT INTO MyCube (Year, Month, [Product Group], [Product Name], Country, Sales, Cost)
OPTIONS PASSTHROUGH SELECT MyTable.Year, MyTable.Month, MyTable.ProdGroup, MyTable.ProdName, MyTable.Country, MyTable.Sales, MyTable.Cost
FROM MyTable
WHERE MyTable.SalesRep = "Amir" and MyTable.CustomerGroup = "Industry"
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The PASSTHROUGH key word specifies that the following SELECT statement is to be passed directly to the database engine with no parsing by Microsoft<sup>®</sup> PivotTable<sup>®</sup> Service.</p>
<h3>Example 3</h3>
<pre><code>INSERT INTO MyCube (Year, Month, [Product Group], [Product Name], Country, Sales, Cost)
DIRECTLYFROMCACHEDROWSET 0x00001284
</code></pre>
<p>
Note: The DIRECTLYFROMCACHEDROWSET keyword directs data to be read from the address in memory identified in quotes immediately after the keyword. It is the responsibility of the client to specify the correct address in memory. At runtime, the number is assumed to be the in-process address of an IUnknown pointer to an OLEDB rowset.</p>
<h2>INSERT INTO Notes</h2>
<ul type=disc>
<li>
Each level and each measure in a cube is derived from a column in the select statement.<br><br></li>
<li>
When using an INSERT INTO statement, the columns specified in the associated SELECT statement are bound to the elements of the INSERT INTO statement in the order specified and in a one-to-one relationship. If a column is specified in the SELECT statement that does not have a related element in the INSERT INTO statement, the keyword SKIPONECOLUMN may be used in the INSERT INTO statement as a placeholder for the unused column. SKIPONECOLUMN may be used more than once.<br><br></li>
<li>
Names of elements in an INSERT INTO are level and measures names, sometimes qualified with dimension name or the word MEASURES to avoid ambiguity.<br><br></li>
<li>
Automatically generated time dimensions must be specified as TYPE TIME in a CREATE CUBE statement, and each level of the dimension must specify TYPE &lt;level-type&gt;.<br><br></li>
<li>
The Where clause can have both application and join constraints. The Parser will parse only join constraints and will use the join constraint to find a path from all tables to the fact table and to the dimension tables. The Application constraint is used only to specify constraints on tables, and is passed to the query without modifications.<br><br></li>
<li>
Expressions between parentheses are considered to be application constraints. For example, if the expression Sales.Product_ID = Products.Product_ID AND Sales.Customer_ID = Customers.Customer_ID is enclosed in parentheses, it will be treated as an application constraint and will not be used as a join constraint. It is the responsibility of the client to ensure that parentheses are used only around application constraints, such as (Product.Price &lt; 100 AND Product.Category = 1).</li>
</ul>
<h2>Passthrough and Advanced Query Processing</h2>
<p>
The PASSTHROUGH option causes the SELECT query to be passed directly to the source database without modification or delay by Microsoft<sup>®</sup> PivotTable<sup>®</sup> Service. If PASSTHROUGH is not specified, Microsoft PivotTable Service parses the query and formulates an equivalent query that uses knowledge of data and index structures and is often more efficient than the specified query.</p>
<p>
The DEFER_DATA option causes the query to be parsed locally and executed only when necessary to retrieve data to satisfy a user request. The ATTEMPT_DEFER option causes Microsoft PivotTable Service to attempt to parse the query and defer data loading if successful, or, if the query cannot be parsed, to process the specified query immediately as if the PASSTHROUGH had been specified. The ATTEMPT_ANALYSIS option causes Microsoft PivotTable Service to attempt to parse the query and formulate an equivalent query (process in the MOLAP mode), or, if the query can't be parsed, to process the specified query immediately as if the PASSTHROUGH had been specified.</p>
<h3>Passthrough Compatibility Matrix</h3>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows width=546>
<tr valign=top>
<td class=label width=17%></td>
<td class=label width=18%><b>Parse</b></td>
<td class=label width=15%><b>None</b></td>
<td class=label width=21%><b>PassThrough</b></td>
<td class=label width=29%><b>Attempt_Analysis</b></td>
</tr>
<tr valign=top>
<td class=label width=17%><b>None</b></td>
<td class=label width=18%><b>Succeeded</b></td>
<td width=15%>MOLAP</td>
<td width=21%>MOLAP(PT)</td>
<td width=29%>Molap</td>
</tr>
<tr valign=top>
<td class=label width=17%></td>
<td class=label width=18%><b>Failed</b></td>
<td width=15%>Error</td>
<td width=21%>N/A</td>
<td width=29%>MOLAP(PT)</td>
</tr>
<tr valign=top>
<td class=label width=17%><b>DEFER_<br>
DATA</b></td>
<td class=label width=18%><b>Succeeded</b></td>
<td width=15%>ROLAP</td>
<td width=21%>Error</td>
<td width=29%>ROLAP</td>
</tr>
<tr valign=top>
<td class=label width=17%></td>
<td class=label width=18%><b>Failed</b></td>
<td width=15%>Error</td>
<td width=21%>N/A</td>
<td width=29%>Error</td>
</tr>
<tr valign=top>
<td class=label width=17%><b>ATTEMPT_<br>
DEFER</b></td>
<td class=label width=18%><b>Succeeded</b></td>
<td width=15%>ROLAP</td>
<td width=21%>MOLAP(PT)</td>
<td width=29%>ROLAP</td>
</tr>
<tr valign=top>
<td class=label width=17%></td>
<td class=label width=18%><b>Failed</b></td>
<td width=15%>MOLAP(PT)</td>
<td width=21%>N/A</td>
<td width=29%>MOLAP(PT)</td>
</tr>
</table><br>
</font></BODY>
</HTML>
