<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface Mapping Reference</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="interfacemappingreference"></a>Interface Mapping Reference</h1>
<p>
Use the following table to inventory the <b>ICursor</b> interfaces you are using and match them with their OLE DB equivalents. It’s important to learn as much as possible about these equivalents. See the <i>OLE DB Programmer’s Reference </i>and Chapter 5 of this document for interface details. This should help you make a better estimate of the amount of work you have to do.</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=21%><b>Cursor interface</b></td>
<td class=label width=24%><b>OLE DB interface</b></td>
<td class=label width=25%><b>When to use</b></td>
<td class=label width=30%><b>Comments</b></td>
</tr>
<tr valign=top>
<td width=21%><b>IBoundObjectSite</b></td>
<td width=24%><b>IDataSource</b></td>
<td width=25%>To retrieve the data source.</td>
<td width=30%>The control must call <b>QueryInterface</b> on its client site for <b>IBoundObjectSite</b>. <b>IDataSource</b> is set for the control using its <b>DataSource</b> property.</td>
</tr>
<tr valign=top>
<td width=21%><b>IBoundObject</b></td>
<td width=24%><b>IDataSourceListener</b></td>
<td width=25%>To be notified of global changes in the data source.</td>
<td width=30%><b>IBoundObject</b> is a COM interface by the control for which containers call <b>QueryInterface</b>. <b>IDataSourceListener</b> is a simple callback interface implemented by the control, which it adds to the data source using <b>IDataSource::addDataSourceListener</b>.</td>
</tr>
<tr valign=top>
<td width=21%><b>ICursor</b></td>
<td width=24%><b>IRowset</b></td>
<td width=25%>To consume data.</td>
<td width=30%><b>ICursor</b>-based consumers use the base interface<b> ICursor</b> to do sequential fetches. OLE DB consumers use the base interface<b> IRowset</b> to do sequential row fetches. Both interfaces are the starting point on which their respective consumers call <b>QueryInterface</b> for more specialized data access interfaces.</td>
</tr>
<tr valign=top>
<td width=21%><b>ICursorMove</b> and <b>ICursorScroll</b></td>
<td width=24%><b>IRowsetLocate</b></td>
<td width=25%>To arbitrarily fetch rows.</td>
<td width=30%><b>ICursorMove </b>is used to fetch rows. <b>ICursorScroll</b> extends <b>ICursorMove</b> to support approximate positions and row count for scroll bar interfaces. <b>IRowsetLocate</b> provides this functionality in one interface.</td>
</tr>
<tr valign=top>
<td width=21%><b>ICursorFind</b></td>
<td width=24%><b>IRowsetFind</b></td>
<td width=25%>To perform searches for rows based on a simple filter.</td>
<td width=30%><b>ICursorFind</b> supports multiple column filters. <b>IRowsetFind</b> searches a single column.</td>
</tr>
<tr valign=top>
<td width=21%><b>ICursorUpdateARow</b></td>
<td width=24%><b>IRowsetChange</b> and <b>IRowsetUpdate</b></td>
<td width=25%>To make changes to a row or a single column.</td>
<td width=30%><b>ICursorUpdateARow</b> acts only on the current row. <b>IRowsetChange</b> acts on a specified row. <b>IRowsetUpdate</b> is available when changes to a rowset can be undone, or committed at a later time.</td>
</tr>
<tr valign=top>
<td width=21%><b>IEntryID</b></td>
<td width=24%>None</td>
<td width=25%>To access large column data or OLE objects.</td>
<td width=30%>See the <i>OLE DB Programmer's Reference</i>, Chapter 7, “BLOBs and OLE Objects” for details.</td>
</tr>
<tr valign=top>
<td width=21%><b>INotifyDBEvents</b></td>
<td width=24%><b>IRowPositionChange</b> and <b>IRowsetNotify</b></td>
<td width=25%>To receive notifications about row currency changes and changes in row states.</td>
<td width=30%>Use <b>IRowPositionChange</b> for notifications about row currency changes. Use <b>IRowsetNotify</b> for changes to the rowset or individual row states.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
