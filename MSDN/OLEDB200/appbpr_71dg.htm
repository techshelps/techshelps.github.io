<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INDEXES Rowset</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbindexes_rowset"></a>INDEXES Rowset</h1>
<p>
The INDEXES rowset identifies the indexes defined in the catalog that are owned by a given user.</p>
<p>
The INDEXES rowset contains the following columns</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=31%><b>Column name</b></td>
<td class=label width=22%><b>Type indicator</b></td>
<td class=label width=47%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=31%>TABLE_CATALOG</td>
<td width=22%>DBTYPE_WSTR</td>
<td width=47%>Catalog name. NULL if the provider does not support catalogs.</td>
</tr>
<tr valign=top>
<td width=31%>TABLE_SCHEMA</td>
<td width=22%>DBTYPE_WSTR</td>
<td width=47%>Unqualified schema name. NULL if the provider does not support schemas.</td>
</tr>
<tr valign=top>
<td width=31%>TABLE_NAME</td>
<td width=22%>DBTYPE_WSTR</td>
<td width=47%>Table name.</td>
</tr>
<tr valign=top>
<td width=31%>INDEX_CATALOG</td>
<td width=22%>DBTYPE_WSTR</td>
<td width=47%>Catalog name. NULL if the provider does not support catalogs.</td>
</tr>
<tr valign=top>
<td width=31%>INDEX_SCHEMA</td>
<td width=22%>DBTYPE_WSTR</td>
<td width=47%>Unqualified schema name. NULL if the provider does not support schemas.</td>
</tr>
<tr valign=top>
<td width=31%>INDEX_NAME</td>
<td width=22%>DBTYPE_WSTR</td>
<td width=47%>Index name.</td>
</tr>
<tr valign=top>
<td width=31%>PRIMARY_KEY</td>
<td width=22%>DBTYPE_BOOL</td>
<td width=47%>Whether the index represents the primary key on the table. NULL if this is not known.</td>
</tr>
<tr valign=top>
<td width=31%>UNIQUE</td>
<td width=22%>DBTYPE_BOOL</td>
<td width=47%>Whether index keys must be unique. One of the following:<p>
VARIANT_TRUE—The index keys must be unique.</p>
<p>
VARIANT_FALSE—Duplicate keys are allowed.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>CLUSTERED</td>
<td width=22%>DBTYPE_BOOL</td>
<td width=47%>Whether an index is clustered. One of the following:<p>
VARIANT_TRUE—The leaf nodes of the index contain full rows, not bookmarks. This is a way to represent a table clustered by key value.</p>
<p>
VARIANT_FALSE—The leaf nodes of the index contain bookmarks of the base table rows whose key value matches the key value of the index entry.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>INTEGRATED</td>
<td width=22%>DBTYPE_BOOL</td>
<td width=47%>Whether the index is integrated (all base table columns are available from the index). One of the following:<p>
VARIANT_TRUE—The index is integrated. For clustered indexes, this value must always be VARIANT_TRUE.</p>
<p>
VARIANT_FALSE—The index is not integrated.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>TYPE</td>
<td width=22%>DBTYPE_UI2</td>
<td width=47%>The type of the index. One of the following:<p>
DBPROPVAL_IT_BTREE—The index is a B+-tree.</p>
<p>
DBPROPVAL_IT_HASH—The index is a hash file using, for example, linear or extensible hashing.</p>
<p>
DBPROPVAL_IT_CONTENT—The index is a content index.</p>
<p>
DBPROPVAL_IT_OTHER—The index is some other type of index.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>FILL_FACTOR</td>
<td width=22%>DBTYPE_I4</td>
<td width=47%>For a B+-tree index, this property represents the storage utilization factor of page nodes during the creation of the index. The value is an integer from 1 to 100 representing the percentage of use of an index node. For a linear hash index, this property represents the storage utilization of the entire hash structure (the ratio of used area to total allocated area) before a file structure expansion occurs.</td>
</tr>
<tr valign=top>
<td width=31%>INITIAL_SIZE</td>
<td width=22%>DBTYPE_I4</td>
<td width=47%>The total amount of bytes allocated to this structure at creation time.</td>
</tr>
<tr valign=top>
<td width=31%>NULLS</td>
<td width=22%>DBTYPE_I4</td>
<td width=47%>Whether null keys are allowed. One of the following:<p>
DBPROPVAL_IN_DISALLOWNULL—The index does not allow entries where the key columns are NULL. If the consumer attempts to insert an index entry with a NULL key, then the provider returns an error.</p>
<p>
DBPROPVAL_IN_IGNORENULL—The index does not insert entries containing NULL keys. If the consumer attempts to insert an index entry with a NULL key, then the provider ignores that entry and no error code is returned.</p>
<p>
DBPROPVAL_IN_IGNOREANYNULL—The index does not insert entries where some column key has a NULL value. For an index having a multi-column search key, if the consumer inserts an index entry with NULL value in some column of the search key, then the provider ignores that entry and no error code is returned.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>SORT_BOOKMARKS</td>
<td width=22%>DBTYPE_BOOL</td>
<td width=47%>How the index treats repeated keys. One of the following:<p>
VARIANT_TRUE—The index sorts repeated keys by bookmark.</p>
<p>
VARIANT_FALSE—The index does not sort repeated keys by bookmark.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>AUTO_UPDATE</td>
<td width=22%>DBTYPE_BOOL</td>
<td width=47%>Whether the index is maintained automatically when changes are made to the corresponding base table. One of the following:<p>
VARIANT_TRUE—The index is automatically maintained.</p>
<p>
VARIANT_FALSE—The index must be maintained by the consumer through explicit calls to <b>IRowsetChange</b>. Ensuring consistency of the index as a result of updates to the associated base table is the responsibility of the consumer.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>NULL_COLLATION</td>
<td width=22%>DBTYPE_I4</td>
<td width=47%>How NULLs are collated in the index. One of the following:<p>
DBPROPVAL_NC_END—NULLs are collated at the end of the list, regardless of the collation order.</p>
<p>
DBPROPVAL_NC_START—NULLs are collated at the start of the list, regardless of the collation order.</p>
<p>
DBPROPVAL_NC_HIGH—NULLs are collated at the high end of the list.</p>
<p>
DBPROPVAL_NC_LOW—NULLs are collated at the low end of the list.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>ORDINAL_POSITION</td>
<td width=22%>DBTYPE_UI4</td>
<td width=47%>Ordinal position of the column in the index, starting with one.</td>
</tr>
<tr valign=top>
<td width=31%>COLUMN_NAME</td>
<td width=22%>DBTYPE_WSTR</td>
<td width=47%>Column name. This column, together with the COLUMN_GUID and COLUMN_PROPID columns, forms the column ID. One or more of these columns will be NULL depending on which elements of the DBID structure the provider uses.</td>
</tr>
<tr valign=top>
<td width=31%>COLUMN_GUID</td>
<td width=22%>DBTYPE_GUID</td>
<td width=47%>Column GUID.</td>
</tr>
<tr valign=top>
<td width=31%>COLUMN_PROPID</td>
<td width=22%>DBTYPE_UI4</td>
<td width=47%>Column property ID.</td>
</tr>
<tr valign=top>
<td width=31%>COLLATION</td>
<td width=22%>DBTYPE_I2</td>
<td width=47%>One of the following:<p>
DB_COLLATION_ASC—The sort sequence for the column is ascending.</p>
<p>
DB_COLLATION_DESC—The sort sequence for the column is descending.</p>
<p>
NULL—A column sort sequence is not supported.</p>
</td>
</tr>
<tr valign=top>
<td width=31%>CARDINALITY</td>
<td width=22%>DBTYPE_UI8</td>
<td width=47%>Number of unique values in the index.</td>
</tr>
<tr valign=top>
<td width=31%>PAGES</td>
<td width=22%>DBTYPE_I4</td>
<td width=47%>Number of pages used to store the index.</td>
</tr>
<tr valign=top>
<td width=31%>FILTER_CONDITION</td>
<td width=22%>DBTYPE_WSTR</td>
<td width=47%>The <b>WHERE</b> clause identifying the filtering restriction.</td>
</tr>
<tr valign=top>
<td width=31%>INTEGRATED</td>
<td width=22%>DBTYPE_BOOL</td>
<td width=47%>Whether the index is integrated. That is, all base table columns are available from the index. One of the following:<p>
VARIANT_TRUE—The index is integrated. For clustered indexes this value must always be VARIANT_TRUE.</p>
<p>
VARIANT_FALSE—The index is not integrated.</p>
<p>
This column is not returned by 1.x providers.</p>
</td>
</tr>
</table><br>
<p>
<b>Default Sort Order:</b> UNIQUE, TYPE, INDEX_CATALOG, INDEX_SCHEMA, INDEX_NAME, ORDINAL_POSITION</p>
</font></BODY>
</HTML>
