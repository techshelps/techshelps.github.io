<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Bindings</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbbindings"></a>Bindings</h1>
<p>
An accessor is a collection of <i>bindings</i>. Each binding associates, or <i>binds</i>, a single column or parameter to the consumer's buffer. You can bind columns and output parameters more than once in a single accessor, but input parameters only once in a single accessor. It is usually a consumer programming error to bind a column more than once in a single accessor and then use that accessor to set the value of the column, such as with <b>IRowsetChange::SetData</b>.</p>
<p>
Each binding contains information about the consumer's buffer. The most notable information is the ordinal of the column or parameter to which the binding applies, what is bound (the data value, its length, and its status), the offsets in the buffer to each of these parts, and the length and type of the data value as it exists in the consumer's buffer. For more information, see "<a href="ch06pr_2mib.htm">Data Parts</a>," earlier in this chapter, and "<a href="ch06pr_7q2b.htm">DBBINDING Structures</a>" later in this chapter.</p>
<p>
For example, the following figure shows a consumer's buffer containing 10 bytes for a string, two unused bytes to properly align the string's status and length values, four bytes for the string's status, four bytes for the string's length, two unused bytes to properly align the integer's status value, two bytes for a two-byte integer, and four bytes for the integer's status. It also shows the main binding information used to bind the string to column 1 and the integer to column 2.</p>
<p class=label>
<b>Main binding information as shown in a consumer’s buffer</b></p>
<p>
<img src="ch0602.gif" border=0></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=31%><b>Element</b></td>
<td class=label width=39%><b>String binding</b></td>
<td class=label width=30%><b>Integer binding</b></td>
</tr>
<tr valign=top>
<td width=31%>Ordinal</td>
<td width=39%>1</td>
<td width=30%>2</td>
</tr>
<tr valign=top>
<td width=31%>Bound parts</td>
<td width=39%>DBPART_VALUE |<br>
DBPART_LENGTH |<br>
DBPART_STATUS</td>
<td width=30%>DBPART_VALUE |<br>
DBPART_STATUS</td>
</tr>
<tr valign=top>
<td width=31%>Offset to data value</td>
<td width=39%>0</td>
<td width=30%>22</td>
</tr>
<tr valign=top>
<td width=31%>Offset to status</td>
<td width=39%>12</td>
<td width=30%>24</td>
</tr>
<tr valign=top>
<td width=31%>Offset to length</td>
<td width=39%>16</td>
<td width=30%>N/A</td>
</tr>
<tr valign=top>
<td width=31%>Data type</td>
<td width=39%>DBTYPE_STR</td>
<td width=30%>DBTYPE_I2</td>
</tr>
<tr valign=top>
<td width=31%>Buffer length</td>
<td width=39%>10</td>
<td width=30%>2</td>
</tr>
</table><br>
<p>
When getting data, the provider uses the information in each binding to determine where and how to retrieve data from the consumer's buffer. When setting data, the provider uses the information in each binding to determine where and how to return data in the consumer's buffer.</p>
</font></BODY>
</HTML>
