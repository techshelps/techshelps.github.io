<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registration Without a .REG File</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbpwk_noospreg"></a><sup></sup>Registration Without a .reg File</h1>
<p>
You can register a provider without a special entry for the OSP Data Object. In this case, you do not use the RegisterProvider.reg template file supplied with the OLE DB Simple Provider Toolkit.</p>
<p>
If you choose this method of registration, you need consumer code to instantiate the provider. The provider must be instantiated with <b>CoCreateInstance</b>, using the GUID of the MSDAOSP.DLL. At run time, the ProgID of the OSP Data Object must be handed off to direct the DLL to the correct OSP object through the DBPROP_INIT_DATASOURCE property.</p>
<h4>Registration Steps </h4>
<p>
Perform the following steps to register a provider without using the RegisterProvider.reg file:
<ol start=5>
<li>
Register the Simple Provider DLL (MSDAOSP.DLL) with regsvr32.exe.<br><br></li>
<li>
Register the OSP object. (For Visual C++ and Visual J++ users only; Visual Basic users will omit this step because that environment automatically registers the DLL.) <ul type=disc>
<li>
If you are using Visual C++ and have compiled and linked your OSP object (the DLL containing the OSP implementations and data source object), register it using regsvr32.exe.<br><br></li>
<li>
If you are using Visual J++, register the Java class code for the OSP object using javareg.</li>
</ul>
</li>
</ol>
<h4>Windows Registry Entries</h4>
<p>
Following are the entries that are written to the Windows registry after performing steps 1 and 2 in the previous section.</p>
<p>
The first group of registry entries, shown below, consists of entries listed under the CLSID subkey that are generated by running regsvr32.exe on MSDAOSP.DLL (step 1).</p>
<p>
<b>HKEY_CLASSES_ROOT</b><br>
<b>CLSID</b><br>
{CLSID of MSDAOSP.DLL}<br>
<b>InprocServer32</b><br>
(Default) = "C:\PROGRAMFILES\COMMON FILES\<br>
SYSTEM\OLE DB\MSDAOSP.DLL”<br>
<b>OLE DB Provider</b><br>
(Default) = " Microsoft OLE DB Simple Provider”<br>
<b>ProgID</b><br>
(Default) = "MSDAOSP.1”<br>
<b>VersionIndependentProgID</b><br>
(Default) = "MSDAOSP”</p>
<p>
The second group of registry entries, shown below, consists of entries listed under the CLSID subkey that are generated by running regsvr32.exe on the provider DLL (step 2).</p>
<p>
<b>HKEY_CLASSES_ROOT</b><br>
<b>CLSID</b><br>
{CLSID of OSP Data Object }<br>
<b>InprocServer32</b><br>
(Default) = "Path of OSP Data Object DLL”<br>
Threading Model = “Both”<br>
<b>ProgID</b><br>
(Default) = "ProgID specified for the OSP Data Object”<br>
<b>VersionIndependentProgID</b><br>
(Default) = "Version independent ProgID for this provider”</p>
</font></BODY>
</HTML>
