<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPersist* Objects, Rowset Update Semantics, and ITransaction</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbipersist_objects_rowset_update_semantics_and_itransaction"></a>IPersist* Objects, Rowset Update Semantics, and ITransaction</h1>
<p>
IPersist* objects provide yet another layer between the object and the data on the data source. Data stored in an <b>IPersist*</b> object is not exposed to its underlying storage object—and hence, to other transactions—until it is persisted with <b>IPersist*</b>. After the data is persisted, the storage object to which it was persisted controls when it is available to the rowset and to other transactions. For more information, see "<a href="ch07pr_5z1v.htm">Storage Objects and Rowset Update Semantics</a>" and "<a href="ch07pr_3gc3.htm">Storage Objects and Transactions</a>" earlier in this chapter.</p>
<p>
The methods on <b>ITransaction</b> can indirectly affect <b>IPersist*</b> objects; for example, committing or aborting a transaction might send into a zombie state the storage object associated with the <b>IPersist*</b> object. For more information, see "<a href="ch07pr_3gc3.htm">Storage Objects and Transactions</a>" earlier in this chapter.</p>
</font></BODY>
</HTML>
