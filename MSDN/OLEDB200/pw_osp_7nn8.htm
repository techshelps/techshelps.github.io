<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLEDBSimpleProvider::getVariant</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbpwk_ospgetvariant"></a><sup></sup>OLEDBSimpleProvider::getVariant</h1>
<p>
Retrieves the value of the cell at the indicated row and column into the pre-allocated variant supplied in <i>pVar</i>.</p>
<p>
<b>getVariant</b> uses the following enumeration:</p>
<p>
<b>typedef enum OSPFORMAT {</b><br>
<b>OSPFORMAT_RAW = 0,</b><br>
<b>OSPFORMAT_DEFAULT = 0,</b><br>
<b>OSPFORMAT_FORMATTED = 1,</b><br>
<b>OSPFORMAT_HTML = 2,</b><br>
};</p>
<p>
where</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=41%><b>Value</b></td>
<td class=label width=59%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=41%>OSPFORMAT_RAW<br>
OSPFORMAT_DEFAULT</td>
<td width=59%>Underlying column type should be used to set or get the value (the default).</td>
</tr>
<tr valign=top>
<td width=41%>OSPFORMAT_FORMATTED</td>
<td width=59%>Underlying column type should be converted to a string, and the string returned as a BSTR within the variant. It is mandatory for OSP developers to support the <i>fFormatted</i> argument of <b>getVariant</b> with this value.</td>
</tr>
<tr valign=top>
<td width=41%>OSPFORMAT_HTML</td>
<td width=59%>Underlying column type should be converted to an HTML string.</td>
</tr>
</table><br>
<p>
<b>HRESULT getVariant (</b><br>
<b>LONG</b><i>iRow</i><b>,</b><br>
<b>LONG</b><i>iColumn</i><b>,</b><br>
<b>OSPFORMAT</b><i>fFormatted</i><b>,</b></p>
<p>
<b>VARIANT</b><i>*pVar</i><b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>iRow</i></p>
<p class=indent>
[in]<br>
Position of the specified row.</p>
<p class=dt>
<i>iColumn</i></p>
<p class=indent>
[in]<br>
Position of the specified column.</p>
<p class=dt>
<i>fFormatted</i></p>
<p class=indent>
[in]<br>
Enumerated value that determines the format in which to return the cell value's underlying column type (see previous table and Notes). </p>
<p class=dt>
<i>pVar</i></p>
<p class=indent>
[out]<br>
Based on the value specified in the <i>pVar</i> parameter, <i>pVar</i> will contain either:
<ul type=disc>
<li>
A value in the underlying type of the column.<br><br></li>
<li>
A string corresponding to the underlying type of the column.<br><br></li>
<li>
An HTML fragment corresponding to the underlying type of the column.</li>
</ul>
<p class=label>
<b>Return Codes</b></p>
<p class=dt>
</p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=label>
<b>Notes</b>
<ul type=disc>
<li>
<b>getVariant</b> does not support references.<br><br></li>
<li>
For the <i>fFormatted</i> argument, it is mandatory for OSP developers to support <b>getVariant</b> with a value of OSPFORMAT_FORMATTED. The OSP implementation is responsible for type conversion, and in the case of Boolean values, the correctly formatted string must be either "True" or "False".<br><br></li>
<li>
When OSPFORMAT_HTML is requested, the provider may, at its option, return a plain string (for example, unadorned with HTML tags).<br><br></li>
<li>
 A data value of NULL is indicated by returning either:<ol>
<li>
S_OK and a Variant of type VT_NULL, or<br><br></li>
<li>
S_FALSE and pVar will be ignored</li>
</ol>
<p class=tl>
for any of the fFormatted types.</P></li>
<li>
Do not use a value of -1 as an argument with the <i>iRow</i> and <i>iColumn</i> arguments of <b>getVariant</b>. You must retrieve table cells individually; they cannot be retrieved a row or column at a time.</li>
</ul>
</font></BODY>
</HTML>
