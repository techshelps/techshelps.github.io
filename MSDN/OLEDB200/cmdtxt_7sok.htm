<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICommandText::SetCommandText</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbicommandtext__setcommandtext"></a>ICommandText::SetCommandText</h1>
<p>
Sets the command text, replacing the existing command text.</p>
<pre><code>HRESULT SetCommandText (
   REFGUID         rguidDialect,
   LPCOLESTR   pwszCommand);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>rguidDialect</i></p>
<p class=indent>
[in]<br>
A GUID that specifies the syntax and general rules for the provider to use in parsing the command text. For a complete description of dialects, see <a href="cmdtxt_3c38.htm">GetCommandText</a>.</p>
<p class=dt>
<i>pwszCommand</i></p>
<p class=indent>
[in]<br>
A pointer to the text of the command.</p>
<p class=tl>
If *<i>pwszCommand</i> is an empty string ("") or <i>pwszCommand</i> is a null pointer, the current command text is cleared and the command is put in an unprepared state. Any properties that have been set on the command are unaffected; that is, they retain their current values. Methods that require a command, such as <b>ICommand::Execute</b>, <b>ICommandPrepare::Prepare</b>, or <b>IColumnsInfo::GetColumnsInfo</b>, will return DB_E_NOCOMMAND until a new command text is set.</P><p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_DIALECTNOTSUPPORTED<br>
The provider did not support the dialect specified in <i>rguidDialect</i>.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_OBJECTOPEN<br>
A rowset was open on the command.</p>
<p class=label>
<b>Comments</b></p>
<p>
A command object contains a single text command, usually an SQL statement. The new command text is copied into the command object; thus, the consumer can delete the original text without affecting the command object. All meaningful error checking, such as syntax checking and parsing, is deferred until <b>ICommandPrepare::Prepare</b> or <b>ICommand::Execute</b> is called. <b>SetCommandText</b> only verifies that the command text can be copied into the command object's space.</p>
<p>
If the text of a prepared or unprepared command is overwritten with new command text, by calling <b>SetCommandText</b>, the command object is left in an unprepared state.</p>
<p>
<b>SetCommandText</b> does not alter the value of any properties. That is, <b>ICommandProperties::GetProperties</b> returns the same value for a property regardless of whether it is called before or after <b>SetCommandText</b> and whether <b>SetCommandText</b> succeeded or failed. Furthermore, setting the command text does not reset parameter information set through <b>SetParameterInfo</b>.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="command_9zhh.htm">ICommand::Execute</a>, <a href="cmdprep_4lph.htm">ICommandPrepare::Prepare</a>, <a href="cmdtxt_3c38.htm">ICommandText::GetCommandText</a>, <a href="cmdprm_7fjj.htm">ICommandWithParameters::SetParameterInfo</a></p>
</font></BODY>
</HTML>
