<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRowsetScroll::GetApproximatePosition</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbirowsetscroll__getapproximateposition"></a>IRowsetScroll::GetApproximatePosition</h1>
<p>
Gets the approximate position of a row corresponding to a specified bookmark.</p>
<pre><code>HRESULT GetApproximatePosition (
   HCHAPTER      hChapter,
   ULONG         cbBookmark,
   const BYTE *      pBookmark,
   ULONG *         pulPosition,
   ULONG *         pcRows);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>hChapter</i></p>
<p class=indent>
[in]<br>
The chapter handle. For nonchaptered rowsets, <i>hChapter</i> is ignored.</p>
<p class=dt>
<i>cbBookmark</i></p>
<p class=indent>
[in]<br>
The length in bytes of the bookmark. If this is zero, then <i>pBookmark</i> is ignored, *<i>pcRows</i> is set to the count of rows, and no position is returned in *<i>pulPosition</i>.</p>
<p class=dt>
<i>pBookmark</i></p>
<p class=indent>
[in]<br>
A pointer to a bookmark that identifies the row of which to find the position. This can be a pointer to DBBMK_FIRST or DBBMK_LAST. The consumer is not required to have permission to read the row.</p>
<p class=dt>
<i>pulPosition</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return the position of the row identified by the bookmark. The returned number is one-based; that is, the first row in the rowset is 1 and the last row is equal to *<i>pcRows</i>. If *<i>pcRows</i> is zero, the provider sets *<i>pulPosition</i> to zero also, regardless of the bookmark that was passed. If <i>pulPosition</i> is a null pointer, no position is returned. In case of error, *<i>pulPosition</i> is not changed.</p>
<p class=dt>
<i>pcRows</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return the total number of rows. This number is zero if there are no rows. If <i>pcRows</i> is a null pointer, no count of rows is returned. In case of error, *<i>pcRows</i> is not changed.</p>
<p class=dt>
</p>
<p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
E_INVALIDARG<br>
<i>cbBookmark</i> was not zero and <i>pBookmark</i> was a null pointer.</p>
<p class=dt>
</p>
<p class=indent>
E_UNEXPECTED<br>
<b>ITransaction::Commit</b> or <b>ITransaction::Abort</b> was called and the object is in a zombie state.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_BADBOOKMARK<br>
<i>*pBookmark</i> was invalid, incorrectly formed, or DBBMK_INVALID.</p>
<p class=tl>
*<i>pBookmark</i> did not match any of the rows in the rowset. This includes the case when the row corresponding to the bookmark was deleted, and DBPROP_BOOKMARKSKIPPED was either VARIANT_FALSE or the provider is a 1.x provider that does not support getting the approximate position of a deleted row.</P><p class=atl>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Consumers should only attempt to use bookmarks that they have received from the provider. The provider is guaranteed only to handle bookmarks it gives out in a predictable manner. Attempting to use a random value as a bookmark is undefined; the provider may return DB_E_BADBOOKMARK, may return an unexpected row, or may terminate abnormally.</p><p class=dt>
</p>
<p class=indent>
DB_E_BADCHAPTER<br>
The rowset was chaptered and <i>hChapter</i> was invalid.</p>
<p class=tl>
The rowset was single-chaptered, and the specified chapter was not the currently open chapter. The consumer must use the currently open chapter or release the currently open chapter before specifying a new chapter.</P><p class=dt>
</p>
<p class=indent>
DB_E_NOTREENTRANT<br>
The provider called a method from <b>IRowsetNotify</b> in the consumer that had not yet returned, and the provider does not support reentrancy in this method.</p>
<p class=dt>
</p>
<p class=label>
<b>Comments</b></p>
<p>
This method makes no logical change to the state of the object.</p>
<p>
There is no guarantee that the row position will be accurate. The provider is expected to choose the fastest possible estimation technique that is not completely in error. *<i>pcRows</i> must be greater than or equal to *<i>pulPosition</i>. The ratio is intended to be useful for scrolling and similar noncritical uses.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="rowscr_8vu7.htm">IRowsetScroll::GetRowsAtRatio</a></p>
</font></BODY>
</HTML>
