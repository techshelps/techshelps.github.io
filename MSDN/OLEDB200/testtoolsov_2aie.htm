<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE DB Test Tools Overview</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><sup><a name="testtoolsov"></a></sup>OLE DB SDK Test Tools Overview</h1>
<p>
Testing components are provided to help you develop OLE DB consumers and providers. These components are not redistributable and must be used solely for developing OLE DB consumers and providers.</p>
<h2>Interface Test Tool (ITest)</h2>
<p>
The Interface Test Tool is a COM interface testing environment that enables you to exercise and explore OLE DB providers through an ad hoc mechanism and to record the results of these actions. ITest works with any OLE DB provider that is registered on your system and can create and manage OLE DB data source objects, sessions, commands, and rowsets.</p>
<h2>ITest Spy Tool</h2>
<p>
The ITest Spy tool enables you to record calls executed by an OLE DB consumer. Spy records all information about each OLE DB call, including the input parameters supplied, the output parameters returned, and any return codes or messages.</p>
<p class=indent>
To use the OLE DB Spy facility, HookOle must be installed. The HookOle files are in the hookole subdirectory of the MSDA SDK.</p>
<p class=indent>
<B><b>Important&nbsp;&nbsp;&nbsp;</b></B>If HookOle is already installed on your computer you <i>must</i> remove it before installing the version contained in the DA SDK.I If you do not have a previous version of HookOle on your computer, skip these steps and begin the installation process with the section "To install HookOle:" later in this topic.</p>
<p class=indent>
</p>
<p class=label>
<b>To remove/unregister a previous version of HookOle</b>
<ol>
<li>
Click <b>Start</b>, point to <b>Settings</b>, and click <b>Control Panel</b>. Double-click the Add/Remove Programs icon. <br><br></li>
<li>
Click the <b>Install/Uninstall</b> tab. Find HookOle in the list of programs and select it.<br><br></li>
<li>
Click the <b>Add/Remove</b> button. Follow the instructions to remove HookOle.</li>
</ol>
<p>
If for any reason this fails, manually rename the ole32.dll file to some other name and then rename the ole32r.dll to ole32.dll. This removes HookOle from the operating system.</p>
<p class=label>
<b>To install HookOle</b>
<ol>
<li>
Run HookOle setup from the \hookole directory within the DA SDK directory.<br><br></li>
<li>
Restart your computer. HookOle registration is not complete until your computer is restarted.</li>
</ol>
<p class=indent>
<B><b>Important&nbsp;&nbsp;&nbsp;</b></B>If you reinstall Windows 95 or Windows NT on your computer, you will have to reinstall HookOle.</p>
<p class=indent>
</p>
<p>
The ITest executable files are found in the BIN/OLEDB subdirectory. The following files are components of ITest.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=34%><b>File name</b></td>
<td class=label width=66%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=34%>ITNode.dll</td>
<td width=66%>Object node support</td>
</tr>
<tr valign=top>
<td width=34%>ITEST.EXE</td>
<td width=66%>Interface test application (Interface Test Tool environment shell)</td>
</tr>
<tr valign=top>
<td width=34%>ITESTSPY.EXE</td>
<td width=66%>ITest Spy application</td>
</tr>
<tr valign=top>
<td width=34%>ITCallWindow.DLL</td>
<td width=66%>Interface test call window</td>
</tr>
<tr valign=top>
<td width=34%>oledbADL.DLL</td>
<td width=66%>OLE DB operations library</td>
</tr>
<tr valign=top>
<td width=34%>ITADL.DLL</td>
<td width=66%>Base class for API definitions</td>
</tr>
<tr valign=top>
<td width=34%>oledbRowsetWindow.DLL</td>
<td width=66%>Interface Test rowset window shell</td>
</tr>
<tr valign=top>
<td width=34%>ITAIS.dll</td>
<td width=66%>General execution services</td>
</tr>
</table><br>
<h2>Local Test Manager (LTM)</h2>
<p>
The Local Test Manager (LTM) is an easy-to-use tool that provides a single point of control for automated testing of OLE DB providers. Once you have created your test modules byusing the OLE DB Test Editor to help generate a .cpp file, you can use LTM to select and run a test module and its cases, variations, and providers on a single local computer. For more information on using LTM for conformance testing see "<a href="mk:@MSITStore:wp200.chm::/conftesting in ole db_6zsg.htm">Conformance Testing in OLE DB 2.0</a>" technical article. </p>
<h2>OLE DB Test Editor</h2>
<p>
The Microsoft OLE DB Test Editor enters the automated test framework code in a .cpp file for use with Local Test Manager. The framework code represents a module with tests and variations that will be run. </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=27%><b>File name</b></td>
<td class=label width=73%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=27%>TestWizard.EXE</td>
<td width=73%>A wizard that assists test designers in creating and modifying tests.</td>
</tr>
<tr valign=top>
<td width=27%>LTM.EXE</td>
<td width=73%>The main Local Test Module component. This component runs automated tests.</td>
</tr>
</table><br>
<h2>QuikTest Test Module</h2>
<p>
The QuikTest module provides a broad range of test coverage. This coverage produces a useful overview of provider functionality but does not test OLE DB providers thoroughly. For information about how to build and run the QuikTest module, see "<a href="#unsupportedsampletestmodules">Unsupported Sample Test Modules</a>" in this topic.</p>
<p>
To run the QuikTest, you must specify initialization information for the provider you select. To specify this information, click in the Init String in the <b>Tools/Options </b>dialog box under the <b>Providers</b> tab in LTM.</p>
<p>
For data sources that do not require a password, the Init String should have the following format:</p>
<pre><code><b>NAME=</b><i>Value</i><b>;USERID=</b><i>Value</i><b>;</b> 
</code></pre>
<p>
For example, to run against the ODBC Provider using the Microsoft Jet OLE_DB_NWind_Jet ODBC data source installed with this SDK, specify the following Init String for a provider:</p>
<pre><code>NAME=OLE_DB_NWind_Jet;USERID=admin; 
</code></pre>
<p>
For data sources that require a password, the Init String should have the following format:</p>
<pre><code>NAME=<i>Value</i>;USERID=<i> Value</i>;PASSWORD=<i>Value</i>;
</code></pre>
<p>
For example, to run against the ODBC Provider using a SQL Server data source that requires a password, specify an Init String similar to the following:</p>
<pre><code>NAME=MySQLServerDSN;USERID=SSUser;PASSWORD=SSPwd;
</code></pre>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=27%><b>File name</b></td>
<td class=label width=73%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=27%>QUIKTEST.DLL</td>
<td width=73%>QuikTest module</td>
</tr>
</table><br>

<h2><a name="unsupportedsampletestmodules"></a>Unsupported Sample Test Modules</h2>
<p>
The MSDA SDK includes some sample test modules in the \conformance\tests directory. Each test module is named with an abbreviated form of the interface it tests. These tests, provided in source code form, can be compiled and run through the Local Test Manager. These test modules are offered only as examples of test code and are not supported in any way. You may not make any claims of conformance based on these tests, nor may you redistribute them in whole or in part.</p>
<p>
Before you can build any of the OLE DB tests except for QuikTest, you must first build the Private Library (privlib.dll), which is used by these tests. </p>
<p class=label>
<b>To build the Private Library in Microsoft Developer Studio</b>
<ol>
<li>
Open the workspace of the Private Library makefile. This is in \msdasdk\conformance\tools\PrivLib.<br><br></li>
<li>
From the <b>Tools</b> menu, choose <b>Options</b>, then click the <b>Directories</b> tab. Add the following directories for include files:<p class=tl>
\msdasdk\conformance\include<br>
\msdasdk\conformance\tests\proposed\OLEDBTests\include</P><p class=tl>
and the following directories for library files:</P><p class=tl>
\msdasdk\conformance\lib<br>
\msdasdk\lib</P></li>
<li>
Build the Private Library (PrivLib.dll) using the default target.<br><br></li>
<li>
Copy privlib.dll from \msdasdk\conformance\tools\PrivLib\x86_debug to \msdasdk\bin.</li>
</ol>
<p class=label>
</p>
<p class=label>
<b>To build the OLE DB tests, including QuikTest, in Microsoft Developer Studio</b>
<ol>
<li>
Open the workspace of the makefile for the test you want to build. The makefiles are found in \msdasdk\conformance\tests\unsupported\tests and in \msdasdk\conformance\tests\proposed\OLEDBTests.<br><br></li>
<li>
From the <b>Tools</b> menu, choose <b>Options</b>, then click the <b>Directories</b> tab. Add the following directory for include files:<p class=tl>
\msdasdk\conformance\include</P><p class=tl>
Note that you still need the include and library directories you added when you built the Private Library.</P></li>
<li>
Build the test module using the default target.<br><br></li>
</ol>
<p class=label>
<b>To run the OLE DB tests, including QuikTest</b>
<ol>
<li>
Update your environment path. In the Control Panel, double-click the System icon. Click the <b>Environment</b> tab. In the <b>System Variables</b> list, select the Path variable. In the <b>Value</b> box, type &lt;install directory&gt;\bin at the end of the value, separating it from the previous directory by a semicolon.<br><br></li>
<li>
Following the instructions in the Local Test Module Help file, register, install, and run the test. The initialization information to be used is explained in the "QuikTest Test Module" section, earlier in this topic.</li>
</ol>
</font></BODY>
</HTML>
