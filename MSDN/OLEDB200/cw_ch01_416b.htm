<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview of Consuming Rowsets</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dasdkoverview_of_consuming_rowsets"></a>Overview of Consuming Rowsets</h1>
<p>
Rowsets are the central objects that enable all OLE DB data providers to expose data in tabular form. Conceptually, a rowset is a set of rows in which each row has columns of data. Base table providers (for example, databases) present their data in the form of rowsets. Query processors present query results in the form of rowsets. This makes it possible to layer components that consume or produce data through the same object. </p>
<p>
For more information about rowsets, see the <i>OLE DB Programmer’s Reference</i>, Chapter 4, “Rowsets.”</p>
<p>
The following table lists some required interfaces and optional interfaces that can be implemented for a particular rowset.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=34%><b>Interface</b></td>
<td class=label width=19%><b>Required</b></td>
<td class=label width=47%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=34%><b>IAccessor</b></td>
<td width=19%>Yes</td>
<td width=47%>Defines how columns are read and written when rows are accessed.</td>
</tr>
<tr valign=top>
<td width=34%><b>IColumnsInfo</b></td>
<td width=19%>Yes</td>
<td width=47%>Exposes the most commonly used metadata about columns within a rowset.</td>
</tr>
<tr valign=top>
<td width=34%><b>IConvertType</b></td>
<td width=19%>Yes</td>
<td width=47%>Gives information about the availability of type conversions.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowset</b> (from which all others are accessed using <b>IUnknown::QueryInterface</b>)</td>
<td width=19%>Yes</td>
<td width=47%>Provides methods for fetching rows sequentially, getting the data from those rows, and managing rows.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowsetInfo</b></td>
<td width=19%>Yes</td>
<td width=47%>Provides information about a rowset.</td>
</tr>
<tr valign=top>
<td width=34%><b>IColumnsRowset</b></td>
<td width=19%>No</td>
<td width=47%>Supplies complete information about columns in a rowset.</td>
</tr>
<tr valign=top>
<td width=34%><b>IConnectionPointContainer</b></td>
<td width=19%>No</td>
<td width=47%>Establishes connection points for connectable objects.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowsetChange</b></td>
<td width=19%>No</td>
<td width=47%>Updates the values of columns in existing rows, deletes existing rows, and inserts new rows.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowsetFind</b></td>
<td width=19%>Yes</td>
<td width=47%>Allows consumers to find a row within the rowset matching a specified value. This interface is always implemented in a provider or common service component.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowsetIdentity</b></td>
<td width=19%>No</td>
<td width=47%>Indicates that row-instance identity is implemented on the rowset and enables testing for row identity.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowsetLocate</b></td>
<td width=19%>No</td>
<td width=47%>Fetches arbitrary rows of a rowset. A rowset that does not implement this interface is a sequential rowset.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowsetResynch</b></td>
<td width=19%>No</td>
<td width=47%>Retrieves the values for rows that are currently visible to the transaction.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowsetScroll</b></td>
<td width=19%>No</td>
<td width=47%>Enables consumers to fetch rows at approximate positions in the rowset.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowsetUpdate</b></td>
<td width=19%>No</td>
<td width=47%>Enables consumers to delay commitment to changes made.</td>
</tr>
<tr valign=top>
<td width=34%><b>ISupportErrorInfo</b></td>
<td width=19%>No</td>
<td width=47%>Indicates whether an interface supports error-handling interfaces.</td>
</tr>
</table><br>
<p>
In addition to the interfaces listed above, there are also service interfaces. These service interfaces, which are particular to OLE DB data binding, are listed in the following table. <br>
</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=595>
<tr valign=top>
<td class=label width=34%><b>Interface</b></td>
<td width=66%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=34%><b>IDataSource</b></td>
<td width=66%>Provides consumers with access to multiple rowsets.</td>
</tr>
<tr valign=top>
<td width=34%><b>IRowPosition</b></td>
<td width=66%>Allows multiple components to share the concept of a current row over a rowset.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
