<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICommandText</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="icommandtext"></a>ICommandText</h1>
<p>
This section describes Jet-specific implementation of the <b>ICommandText</b> interfaces. This includes <b>ICommandText::GetCommandText</b> and <b>ICommandText::SetCommandText</b>.</p>
<p>
A command object can have only one text command. When the command text is specified through <b>SetCommandText</b>, it replaces the existing command text.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Method</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>GetCommandText</b></td>
<td width=50%>Returns the text command set by the last call to <b>SetCommandText</b>.</td>
</tr>
<tr valign=top>
<td width=50%><b>SetCommandText</b></td>
<td width=50%>Sets the command text, replacing the existing command text.</td>
</tr>
</table><br>
<h3>ICommandText::GetCommandText</h3>
<p>
Returns the text command set by the last call to <b>SetCommandText</b>. For information on how this interface is implemented, see the <i>OLE DB Programmer’s Reference</i>.</p>
<h3>ICommandText::SetCommandText</h3>
<p>
Sets the command text, replacing the existing command text. For information on how this interface is implemented, see the <i>OLE DB Programmer’s Reference</i>.</p>
<p>
<b>SetCommandText</b> does not alter the value of any properties. That is, <b>ICommandProperties::GetProperties</b> returns the same value for a property regardless of whether it is called before or after <b>SetCommandText</b> and whether <b>SetCommandText</b> succeeded or failed. </p>
<p>
Jet supports a maximum of 64,000 bytes in an SQL string. </p>
</font></BODY>
</HTML>
