<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Asynchronous Data Source Initialization</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbasynchronous_data_source_initialization"></a>Asynchronous Data Source Initialization</h1>
<p>
Consumers wishing to initialize a data source asynchronously set the DBPROPVAL_ASYNCH_INITIALIZE bit in the DBPROP_INIT_ASYNCH property prior to calling <b>IDBInitialize::Initialize</b>. When this property is set, the provider returns immediately from the call to <b>Initialize</b> with either S_OK if the operation has completed immediately, or DB_S_ASYNCHRONOUS if the initialization will continue asynchronously. Consumers can call <b>IDBAsynchStatus::GetStatus</b> to get the status of the initialization, or can register for progress notifications by passing the consumer's <b>IDBAsynchNotify</b> interface to the data source's connection point. The consumer must explicitly request Asynchronous Data Source Initialization. Otherwise, <b>IDBInitialize::Initialize</b> does not return until the data source is completely initialized.</p>
</font></BODY>
</HTML>
