<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRowsetIndex</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbirowsetindex"></a>IRowsetIndex</h1>
<p>
<b>IRowsetIndex</b> is the primary interface for exposing index functionality in OLE DB. For a complete description of indexes, see Chapter 8, "<a href="ch08pr_8koj.htm">Indexes</a>" and Chapter 16, "<a href="ch16pr_7rn7.htm">Integrated Indexes</a>."</p>
<h1>When to Implement</h1>
<p>
The <b>IRowsetIndex</b> interface is implemented by providers to expose the functionality of a file access method such as a B+-tree, or linear hash. For integrated indexes, <b>IRowsetIndex</b> is exposed on the base table rowset; otherwise, it is exposed on the index rowset.</p>
<p>
A provider may also support other rowset interfaces on indexes, such as <b>IRowsetScroll</b>.</p>
<h1>When to Call</h1>
<p>
The methods in <b>IRowsetIndex</b> are used to define a range of index entries to be read, to position at an index entry within the range, to fetch the index entry, and to access the contents of the index entry.</p>
<p>
The following table shows how to perform various index operations.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=32%><b>Operation</b></td>
<td class=label width=68%><b>Comments</b></td>
</tr>
<tr valign=top>
<td width=32%>Open an index</td>
<td width=68%>To get a handle to an <b>IRowsetIndex</b> object, the consumer calls <b>IOpenRowset::OpenRowset</b>, passing it the DBID of the index. The method returns a pointer to an index rowset.</td>
</tr>
<tr valign=top>
<td width=32%>Close an index</td>
<td width=68%>An index is closed by releasing all references to the index rowset.</td>
</tr>
<tr valign=top>
<td width=32%>Insert an index entry</td>
<td width=68%>New key entries are inserted into an index by using <b>IRowsetChange</b>.</td>
</tr>
<tr valign=top>
<td width=32%>Delete an index entry</td>
<td width=68%>Key entries are deleted from an index by using <b>IRowsetChange</b>.</td>
</tr>
<tr valign=top>
<td width=32%>Update an index entry</td>
<td width=68%>Key entries are updated in an index by first deleting the old index entry and then inserting a new index entry.</td>
</tr>
<tr valign=top>
<td width=32%>Traverse the index</td>
<td width=68%>To traverse an index, a user calls methods on <b>IRowset</b>. For more information, see "<a href="ch08pr_562b.htm">Using Index Rowsets</a>" in Chapter 8.</td>
</tr>
</table><br>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=32%><b>Method</b></td>
<td class=label width=68%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=32%><a href="rowidx_9g8f.htm">GetIndexInfo</a></td>
<td width=68%>Returns information about the index rowset capabilities.</td>
</tr>
<tr valign=top>
<td width=32%><a href="rowidx_646j.htm">Seek</a></td>
<td width=68%>Allows direct positioning at a key value within the current range.</td>
</tr>
<tr valign=top>
<td width=32%><a href="rowidx_7v6t.htm">SetRange</a></td>
<td width=68%>Restricts the set of row entries visible through calls to <b>IRowset::GetNextRows</b> and <b>IRowsetIndex::Seek</b>.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
