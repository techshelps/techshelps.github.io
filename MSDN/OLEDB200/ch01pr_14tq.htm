<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Authorization</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbauthorization"></a>Authorization</h1>
<p>
Authorization, or access control, is concerned with the enforcement of the privileges defined among users, groups, roles, services, and so on. In most cases, authorization is enforced internally by the provider. The consumer only gets return codes from method invocations, which determine whether the call was successful or a permission violation occurred. OLE DB, defines the return code DB_SEC_E_PERMISSIONDENIED and status codes such as DBSTATUS_E_PERMISSIONDENIED and DBROWSTATUS_E_ PERMISSIONDENIED for this purpose. </p>
<p class=label>
<b>Future Direction</b></p>
<p>
Future versions of OLE DB will take advantage of a set of security interfaces defined by Distributed COM to control the security of RPC calls between proxies and stubs, the launching of objects, and the impersonation of clients by servers.</p>
</font></BODY>
</HTML>
