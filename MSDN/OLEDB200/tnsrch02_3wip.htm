<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Browsing Metadata</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="browsingmetadata"></a>Browsing Metadata</h1>
<p>
Multidimensional schema rowsets can be browsed by the <b>IDBSchemaRowset</b> interface. Consumers can get information about the available cubes, dimensions, hierarchies, levels, members, and member properties. Because <b>IDBSchemaRowset</b> is an interface on the session object, the consumer needs to have a session object before it can browse for metadata.</p>
<p>
OLE DB for OLAP defines schema rowsets for the following metadata objects:
<ul type=disc>
<li>
Catalogs<br><br></li>
<li>
Schemas<br><br></li>
<li>
Cubes<br><br></li>
<li>
Measures<br><br></li>
<li>
Dimensions<br><br></li>
<li>
Hierarchies<br><br></li>
<li>
Levels<br><br></li>
<li>
Properties (for each dimension level)<br><br></li>
<li>
Members</li>
</ul>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>OLE DB for OLAP rowsets for Catalog and schema are the same as for OLE DB.</p>
<p>
Each schema rowset is identified by a GUID. <b>IDBSchemaRowset::GetRowset</b> takes this GUID as an argument and returns the requested schema rowset.</p>
<p>
A schema rowset for a given metadata object has one row for every instance of that object present in the schema. For example, if there are five cubes available in the schema, then the CUBES rowset has five rows. Each column of a schema rowset gives one piece of information about that object. For example, the CUBES rowset has the following 11 columns, each of which gives a different piece of information about the cube:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=32%><b>Column name</b></td>
<td class=label width=68%><b>Information conveyed about the cube</b></td>
</tr>
<tr valign=top>
<td width=32%>CATALOG_NAME</td>
<td width=68%>Name of the catalog to which this cube belongs. </td>
</tr>
<tr valign=top>
<td width=32%>SCHEMA_NAME</td>
<td width=68%>Name of the schema to which this cube belongs. </td>
</tr>
<tr valign=top>
<td width=32%>CUBE_NAME</td>
<td width=68%>Name of the cube.</td>
</tr>
<tr valign=top>
<td width=32%>CUBE_TYPE</td>
<td width=68%>Indicates either a regular cube or a “virtual” cube. </td>
</tr>
<tr valign=top>
<td width=32%>CUBE_GUID</td>
<td width=68%>Cube GUID.</td>
</tr>
<tr valign=top>
<td width=32%>CREATED_ON</td>
<td width=68%>Date and time of cube creation. </td>
</tr>
<tr valign=top>
<td width=32%>LAST_SCHEMA_UPDATE</td>
<td width=68%>Date and time of last schema update. </td>
</tr>
<tr valign=top>
<td width=32%>SCHEMA_UPDATED_BY</td>
<td width=68%>User ID of the person doing the last schema update.</td>
</tr>
<tr valign=top>
<td width=32%>LAST_DATA_UPDATE</td>
<td width=68%>Date and time of last data update. </td>
</tr>
<tr valign=top>
<td width=32%>DATA_UPDATED_BY</td>
<td width=68%>User ID of the person doing the last data update. </td>
</tr>
<tr valign=top>
<td width=32%>DESCRIPTION</td>
<td width=68%>A meaningful description of the cube. </td>
</tr>
</table><br>
<p>
Often it is not desirable to retrieve information about all instances of a metadata object. For example, an application typically needs the dimensions belonging to a single cube, rather than all the dimensions available in the schema. Thusm there must be a way to restrict a schema rowset based on certain conditions.</p>
<p>
OLE DB defines a generic method to accomplish this, called <i>restrictions</i>. Each schema rowset has a defined set of restrictions. The restrictions are typically conditions on one of the columns of a schema rowset. For example, the DIMENSIONS rowset can be restricted by the CATALOG_NAME, SCHEMA_NAME, CUBE_NAME, DIMENSION_NAME, and DIMENSION_UNIQUE_NAME properties. One of the arguments to <b>IDBSchemaRowset::GetRowset</b> is an array of restrictions. This array has as many elements as the number of restrictions on the particular schema object. For example, the number of restrictions on the DIMENSIONS schema rowset is five. To restrict&nbsp; the DIMENSIONS rowset to only contain dimensions belonging to a particular cube, the application puts the cube name into element number three of the restrictions array.</p>
<p>
For more information on restrictions in OLE DB, see the <i>OLE DB Programmer’s Reference</i>. For more information on restrictions in OLE DB for OLAP schema rowsets, see “Session Object” in Chapter 4 of this document.</p>
</font></BODY>
</HTML>
