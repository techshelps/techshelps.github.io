<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Refreshing Row Values</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbrefreshing_row_values"></a>Refreshing Row Values</h1>
<p>
Once a row handle is retrieved from the provider, the nondeferred columns of that row are cached such that multiple calls to <b>GetData</b> return the same cached values. <b>IRowsetRefresh</b> gives the consumer a way to retrieve the data in the data source that is visible to the current transaction according to its isolation level corresponding to a set of row handles. This data is referred to as "visible data."</p>
<p>
In order to retrieve the visible data for a row, the consumer calls <b>IRowsetRefresh::GetLastVisibleData</b>. To update the copy of a row in the rowset with the currently visible data, the consumer calls <b>IRowsetRefresh::RefreshVisibleData</b> with <i>fOverwrite</i> set to TRUE.</p>
<p>
For performance reasons, visible data may itself be cached by the provider. The consumer calls <b>IRowsetRefresh::RefreshVisibleData</b> in order to refresh the provider's visible data cache. For deferred columns and for providers that do not keep a local cache of visible data, <b>RefreshVisibleData</b> with <i>fOverwrite</i> set to FALSE has no effect. However, consumers wanting to work with general providers should always call <b>RefreshVisibleData</b> before calling <b>GetLastVisibleData</b> for any nondeferred columns in order to be sure they are getting the latest data values from the data source.</p>
<p>
Although the ability to obtain visible data is related to the DBPROP_OWNUPDATEDELETE, DBPROP_OWNINSERT, DBPROP_OTHERUPDATEDELETE, and DBPROP_OTHERINSERT properties, it is independent of them. In other words, the value of these properties can be VARIANT_FALSE and the rowset can still expose <b>IRowsetRefresh</b>. However, because of implementation difficulties, many rowsets do not expose <b>IRowsetRefresh</b> unless the values of the DBPROP_OWNUPDATEDELETE and DBPROP_OTHERUPDATEDELETE properties are VARIANT_TRUE.</p>
</font></BODY>
</HTML>
