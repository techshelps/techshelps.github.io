<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sessions</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbsessions"></a>Sessions</h1>
<p>
A session makes it possible to create a command and a rowset, and to create or modify tables and indexes. It is a basic part of the OLE DB connection model. The primary function is to define a transaction: that mechanism used to identify persistent units of work within an application.</p>
<p>
Sessions:</p>
<pre><code>CoType TSession {
   [mandatory] interface IGetDataSource;
   [mandatory] interface IOpenRowset;
   [mandatory] interface ISessionProperties;
   [optional]&nbsp; interface IDBCreateCommand;
   [optional]&nbsp; interface IDBSchemaRowset;
   [optional]&nbsp; interface IIndexDefinition;
   [optional]&nbsp; interface ISupportErrorInfo;
   [optional]&nbsp; interface ITableDefinition;
   [optional]&nbsp; interface ITransaction;
   [optional]&nbsp; interface ITransactionJoin;
   [optional]&nbsp; interface ITransactionLocal;
   [optional]&nbsp; interface ITransactionObject;
}
</code></pre>
<p>
If the session supports <b>ITransactionLocal</b>, the consumer can call <b>ITransactionLocal::StartTransaction</b> to start an explicit transaction. The session is then said to be in <i>manual commit mode</i> and any work done in the session must be explicitly committed or aborted. If <b>ITransactionLocal</b> is not supported or if the consumer does not call <b>StartTransaction</b>, the session is said to be in <i>autocommit mode</i> and any work done in the session is automatically committed; it cannot be aborted. For more information about transactions, see Chapter 12, "<a href="ch12pr_0fzn.htm">Transactions</a>."</p>
<p>
To create a session, a consumer calls <b>IDBCreateSession::CreateSession</b> in the data source object. A single data source object can support multiple sessions and, therefore, multiple transactions. From a session, the consumer can do the following:
<ul type=disc>
<li>
Create a command by calling <b>IDBCreateCommand::CreateCommand</b>. A single session can support multiple commands. Some providers do not support commands.<br><br></li>
<li>
Create a rowset by calling <b>IOpenRowset::OpenRowset</b>. This is equivalent to creating a rowset over a single table and is supported by all providers.<br><br></li>
<li>
Create or modify tables and indexes with <b>ITableDefinition</b> and <b>IIndexDefinition</b>. Although providers are not required to support these interfaces, any provider built over a data source that supports creating and modifying tables and indexes should support them. For simple providers, such as a provider built over an array of data, <b>ITableDefinition</b> might be the only way to create or modify tables.<br><br></li>
</ul>
</font></BODY>
</HTML>
