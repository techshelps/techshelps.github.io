<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating BLOB Columns</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbcreating_blob_columns"></a>Creating BLOB Columns</h1>
<p>
To create a BLOB column in a table, the consumer either uses a text command or calls <b>CreateTable</b> or <b>AddColumn</b> in <b>ITableDefinition</b>. In either case, it passes the maximum length in bytes (for binary data) or characters (for character data) of the BLOB column to the provider. Whether the column will best be accessed as in-memory data or as a storage object depends on the value of the IS_LONG column in the PROVIDER_TYPES schema rowset for the data type. The value in this column determines the setting of the DBCOLUMNFLAGS_ISLONG flag returned by <b>IColumnsInfo::GetColumnInfo</b>. For more information, see "<a href="ch07pr_47dt.htm">Accessing BLOB Data</a>" earlier in this chapter.</p>
</font></BODY>
</HTML>
