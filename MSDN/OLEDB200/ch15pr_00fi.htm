<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Asynchronous Rowset Population</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbasynchronous_rowset_population"></a>Asynchronous Rowset Population</h1>
<p>
Consumers wishing to asynchronously populate a rowset set the DBPROPVAL_ASYNCH_SEQUENTIAL or DBPROPVAL_ASYNCH_RANDOM bits of the DBPROP_ROWSET_ASYNCH property prior to opening the rowset.</p>
<p>
During the DBASYNCHPHASE_POPULATION phase, even though the rows are not fully <i>populated</i>, the rowset itself is fully <i>initialized</i>; that is, all interfaces supported by the rowset are available and fully functional (although the set of rows returned may be restricted).</p>
<p>
An <i>asynchronously populated</i> rowset is distinct from a <i>lazily populated</i> rowset. A lazily populated rowset may return a rowset prior to completely populating the rows, but prevents additional method calls, if necessary, in order to return the requested rows. Thus, a lazily populated rowset appears as a synchronously populated rowset to the consumer. In contrast, an asynchronously populated rowset returns from a request to retrieve rows immediately with as many of the requested rows as are available at the moment. If fewer than the requested number of rows are available at the time of the call, the method returns DB_S_ENDOFROWSET even though additional rows may appear later. The consumer must request notifications or call <b>IDBAsynchStatus</b> in order to determine when population is complete. Unless the consumer explicitly requests asynchronous population, the provider must behave as if the rowset is fully populated upon creation. Requesting rows blocks additional calls until the requested number of hRows are obtained or the end of the rowset is reached.</p>
<p>
Asynchronously populated rowsets may be <i>sequentially asynchronously populated</i>, if rows are always appended to the end of the rowset, or <i>randomly asynchronously populated</i> if new rows may be inserted randomly within the rowset.</p>
<p>
Sequentially asynchronously populated rowsets call <b>IDBAsynchNotify::OnProgress</b> to signal the addition of new rows to the end of the rowset as a result of asynchronous population. Randomly asynchronously populated rowsets call <b>IRowsetNotify::OnRowChange</b> with DBREASON_ROW_ASYNCHINSERT to signal the addition of new rows as a result of asynchronous population.</p>
</font></BODY>
</HTML>
