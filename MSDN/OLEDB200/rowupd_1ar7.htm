<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRowsetUpdate::GetRowStatus</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbirowsetupdate__getrowstatus"></a>IRowsetUpdate::GetRowStatus</h1>
<p>
Returns the status of rows.</p>
<pre><code>HRESULT GetRowStatus(
   HCHAPTER               hChapter,
   ULONG                  cRows,
   const HROW               rghRows[],
   DBPENDINGSTATUS   rgPendingStatus[]);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>hChapter</i></p>
<p class=indent>
[in]<br>
The chapter handle. For nonchaptered rowsets, <i>hChapter</i> is ignored.</p>
<p class=dt>
<i>cRows</i></p>
<p class=indent>
[in]<br>
The count of elements in <i>rghRows</i> and <i>rgPendingStatus</i>. If this value is zero , <b>GetRowStatus</b> ignores <i>rghRows</i> and <i>rgPendingStatus</i> and does not return any status.</p>
<p class=dt>
<i>rghRows</i></p>
<p class=indent>
[in]<br>
An array of handles of rows for which to return the status. This array is allocated by the consumer and must not be freed by the provider.</p>
<p class=dt>
<i>rgPendingStatus</i></p>
<p class=indent>
[out]<br>
An array of DBPENDINGSTATUS values. <b>GetRowStatus</b> returns the DBPENDINGSTATUS values for all rows specified in the <i>rghRows</i> array. The DBPENDINGSTATUS_INVALIDROW value is used to indicate an invalid row handle. For information about the DBPENDINGSTATUS type, see "<a href="ch05pr_3b5f.htm">Row States</a>" in Chapter 5.</p>
<p class=tl>
The <i>rgPendingStatus</i> array is allocated, but not necessarily initialized, by the caller and must not be freed by the provider.</P><p class=tl>
</P><p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded. Status values were successfully retrieved for all rows and each element of <i>rgPendingStatus</i> is set to DBPENDINGSTATUS_NEW, DBPENDINGSTATUS_CHANGED, DBPENDINGSTATUS_DELETED, or DBPENDINGSTATUS_UNCHANGED.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_ERRORSOCCURRED<br>
An error occurred while getting the status of a row, but the status of at least one row was successfully retrieved. Successes can occur for the reasons listed under S_OK. The following error can occur:
<ul type=disc>
<li>
A row handle in <i>rghRows</i> was invalid. The corresponding element of <i>rgRowStatus</i> contains DBPENDINGSTATUS_INVALIDROW.</li>
</ul>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
E_INVALIDARG<br>
<i>cRows</i> was greater than zero and either <i>rghRows</i> was a null pointer or <i>rgPendingStatus</i> was a null pointer.</p>
<p class=dt>
</p>
<p class=indent>
E_UNEXPECTED<br>
<b>ITransaction::Commit</b> or <b>ITransaction::Abort</b> was called and the object is in a zombie state.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_BADCHAPTER<br>
The rowset was chaptered and <i>hChapter</i> was invalid.</p>
<p class=tl>
The rowset was single-chaptered and the specified chapter was not the currently open chapter. The consumer must use the currently open chapter or release the currently open chapter before specifying a new chapter.</P><p class=dt>
</p>
<p class=indent>
DB_E_ERRORSOCCURRED<br>
Errors occurred getting the status of all of the rows. Errors can occur for the reason listed under DB_S_ERRORSOCCURRED.</p>
<p class=dt>
</p>
<p class=label>
<b>Comments</b></p>
<p>
If multiple changes are made to a single row, <b>GetRowStatus</b> returns the status as described in <b>GetPendingRows</b>. If <b>IRowsetChange::DeleteRows</b> is called for a pending insert row, a status of DBPENDINGSTATUS_INVALIDROW is returned for the row.</p>
<p>
For a complete description of row states, see "<a href="ch05pr_3b5f.htm">Row States</a>" in Chapter 5.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="rowupd_3ar7.htm">IRowsetUpdate::GetPendingRows</a></p>
</font></BODY>
</HTML>
