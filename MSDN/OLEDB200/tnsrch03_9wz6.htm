<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Formula Solve Order</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="formulasolveorder"></a>Formula Solve Order</h1>
<p>
When a dataset has multiple formulas, there can be a problem with the order of formula evaluation. To understand the problem, consider the MDX statement</p>
<pre><code>WITH
 &nbsp; MEMBER [Year].[Annual Growth] AS ([1996] - [1997])
 &nbsp; MEMBER [Status].[Performance] AS (([Actual] - [Planned]) / 
 &nbsp;&nbsp;&nbsp;&nbsp; [Planned] * 100)
SELECT
 &nbsp; {[1994], [1995], [Annual Growth]} ON COLUMNS,
 &nbsp; {[Actual], [Planned], [Performance]} ON ROWS
FROM SalesBitmap
</code></pre>
<p>
This produces a dataset that looks like this:</p>
<p>
<img src="te_ch0205.gif" border=0></p>
<p>
The cell shaded in gray could be either Annual Growth of Performance or Performance of Annual Growth. If it is Annual Growth of Performance, then the value in the cell is 75 – 50 = 25. If it is Performance of Annual Growth, the value in the cell is (80 – 20)/20 * 100 = 300.</p>
<p>
This shows the clear need to establish an order for applying the formulas. To do this, you assign a “solve order” to each formula. When two formulas are in conflict, the one with the lower solve order gets resolved first.</p>
<p>
Solve orders are assigned for calculated members by using the <i>solve_order_specification</i> clause. This clause is part of <i>member_specification</i>. For the example above, to get Annual Growth of Performance, the MDX statement looks like this (the text in bold indicates the changes):</p>
<pre><code>WITH
MEMBER [Year].[Annual Growth] AS 
  ([1997] - [1996])<b>, SOLVE_ORDER = 1</b>
MEMBER [Status].[Performance] AS 
  (([Actual] - [Planned]) / [Planned] * 100), <b>SOLVE_ORDER = 2</b>
SELECT
{[1996], [1997], [Annual Growth]} ON COLUMNS,
{[Actual], [Planned], [Performance]} ON ROWS
FROM SalesBitmap
</code></pre>
<p>
To get Performance of Annual Growth, the MDX statement looks like this (the text in bold indicates the changes):</p>
<pre><code>WITH
MEMBER [Year].[Annual Growth] AS 
  ([1997] - [1996])<b>, SOLVE_ORDER = 2</b>
MEMBER [Status].[Performance] AS 
  (([Actual] - [Planned]) / [Planned] * 100), <b>SOLVE_ORDER = 1</b>
SELECT
{[1996], [1997], [Annual Growth]} ON COLUMNS,
{[Actual], [Planned], [Performance]} ON ROWS
FROM SalesBitmap
</code></pre>
<p>
The following rules define the semantics of SOLVE_ORDER:
<ul type=disc>
<li>
When multiple expressions are in conflict, the statements with the lower solve orders get resolved first, followed by those with the higher solve order. What happens when conflicting expressions have the same solve order is provider-specific.<br><br></li>
<li>
Solve orders must always be greater than or equal to 0.<br><br></li>
<li>
The default solve order of a formula is 0.</li>
</ul>
</font></BODY>
</HTML>
