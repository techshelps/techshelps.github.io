<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview of Migrating ICursor-Based ActiveX Controls to OLE DB</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="overviewofmigratingicursorbasedactivexcontrolstooledb"></a>Overview of Migrating ICursor-Based ActiveX Controls to OLE DB</h1>
<p>
The complexity of the conversion process varies based on design and implementation techniques used for a particular control. For the most part, you can expect to make modifications in the following areas:
<ul type=disc>
<li>
Row fetching and data caching code. You’ll spend most of your time in this area because of the major difference between the two data access methods.<br><br></li>
<li>
Updating row data, adding and deleting rows. This area also may require some effort.<br><br></li>
<li>
Column information and bindings. The concept is the same between the two, so conversion should not be difficult.<br><br></li>
<li>
Notification handling. Nearly all <b>ICursor</b> type events have an OLE DB equivalent. This is facilitated by OLE DB's organized approach to notifications.</li>
</ul>
<p>
You can expect very little change in:
<ul type=disc>
<li>
How your control behaves from a user’s point of view. Your non-data-bind properties virtually remain the same. The control's user interface should not change.<br><br></li>
<li>
Your paint routines. If they are encapsulated properly from the start, the routines should remain intact.</li>
</ul>
<h1>Considerations Before Migrating</h1>
<p>
Migrating an existing <b>ICursor</b>-based ActiveX control to OLE DB requires that you understand:
<ul type=disc>
<li>
How rowsets are consumed (see Chapter 1, “Consuming Rowsets” for more information).<br><br></li>
<li>
Basic differences between simple and complex controls (see Chapters 2 and 3).<br><br></li>
<li>
Which OLE DB interfaces provide the same functionality as their <b>ICursor</b> equivalents (see “Interface Mapping Reference” later in this chapter).</li>
</ul>
<p>
Before proceeding, you may want to review the samples shipped with this SDK. Experiment with them to get accustomed to using OLE DB before starting your migration. It may be helpful to look for similarities in the way your existing control and the samples handle data access.</p>
<p>
Once you’ve reviewed the samples, you have to decide whether to migrate or rewrite your control. If you decide to migrate, you may want to go through your existing code, and restructure and redesign it to make migration easier. This means removing any <b>ICursor</b>-dependent code from code sections you want to keep.</p>
</font></BODY>
</HTML>
