<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Standard Bookmarks</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbstandard_bookmarks"></a>Standard Bookmarks</h1>
<p>
Three standard bookmark values are provided: DBBMK_INVALID, DBBMK_FIRST, and DBBMK_LAST. All single-byte (length 1) bookmark values of type DBTYPE_BYTES are reserved for standard bookmarks. Ordinary bookmarks of type DBTYPE_BYTES must be at least length 2. The following constant is defined in OLEDB.H as the standard bookmark length:</p>
<pre><code>#define STD_BOOKMARKLENGTH 1
</code></pre>
<p>
The values of the following standard bookmarks are guaranteed to be the same for all providers.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=26%><b>Value</b></td>
<td class=label width=74%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=26%>DBBMK_INVALID</td>
<td width=74%>DBBMK_INVALID has no special meaning in this version of OLE DB. It can be used by applications to initialize and subsequently check bookmark validity, and may be used in future releases to indicate an unused parameter in a method that may take bookmark values.</td>
</tr>
<tr valign=top>
<td width=26%>DBBMK_FIRST</td>
<td width=74%>The first row of the rowset.<p>
A consumer can fetch forward from this point. For example, if <i>cRows</i> is greater than zero and <i>lRowsOffset</i> is zero, <b>IRowsetLocate::GetRowsAt</b> returns the first <i>cRows</i> rows of the rowset.</p>
<p>
A consumer cannot fetch backward before this point. For example, if <i>cRows</i> is less than zero and <i>lRowsOffset</i> is zero, <b>GetRowsAt</b> returns this row; if <i>cRows</i> is less than –1, it then returns DB_S_ENDOFROWSET.</p>
</td>
</tr>
<tr valign=top>
<td width=26%>DBBMK_LAST</td>
<td width=74%>The last row of the rowset. If the rowset is being populated asynchronously, this is the last row identified so far.<p>
A consumer can fetch backward from this point. For example, if <i>cRows</i> is less than zero and <i>lRowsOffset</i> is zero, <b>GetRowsAt</b> returns the last <i>cRows</i> rows of the rowset.</p>
<p>
A consumer cannot fetch forward past this point. For example, if <i>cRows</i> is greater than zero and <i>lRowsOffset</i> is zero, <b>GetRowsAt</b> returns this row; if <i>cRows</i> is greater than one, it then returns DB_S_ENDOFROWSET.</p>
</td>
</tr>
</table><br>
<p>
The consumer can begin a sequential scan at either the first or last row.</p>
</font></BODY>
</HTML>
