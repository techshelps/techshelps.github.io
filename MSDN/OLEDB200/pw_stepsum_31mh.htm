<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Building a Simple Provider: Step Summary</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbpwk_stepsummary"></a><sup></sup>Building a Simple Provider: Step Summary</h1>
<p>
The OLE DB Simple Provider Toolkit simplifies the provider creation process. In most cases, you should only need to implement the OSP methods, code a data source object, fill out a copy of the supplied <a href="pw_reg_77j9.htm">registration template</a>, and register the <a href="pw_toverview_4fxz.htm#oledbpwk_oledbmappinglayer">OLE DB Simple Provider DLL</a> (MSDAOSP.DLL) and the <a href="pw_toverview_4fxz.htm#oledbpwk_odooverview">OSP Data Object</a> (which will be a compiled DLL in Visual Basic and Visual C++, and a Java class in Visual J++). The other files supplied with each language implementation (header and library files) do not normally require modification. </p>
<p>
Following is a summary of the main steps you need to follow when building a Simple Provider:
<ol>
<li>
<b>Choose a language</b>. You can write a Simple Provider using <a href="pw_langs_4jxi.htm">Visual Basic</a>, <a href="pw_langs_8kfa.htm">Visual C++</a>, or <a href="pw_langs_6nvq.htm">Visual J++</a>. The general process of creating a provider is the same in each environment, although certain implementation details vary. The Toolkit contains a set of <a href="pw_langs_98xb.htm">code samples</a> for each visual language. <br><br></li>
<li>
<b>Implement OSP</b>. Most of your work will be implementing the OSP functions described in the <a href="pw_ospintro_7ai7.htm">OSP language reference</a>. You can use the Toolkit's sample OSP implementation file in the language of your choice as a starting point, changing the implementations so that the methods work with your data.<br><br></li>
<li>
<b>Implement a data source object.</b> You need to implement a data source object (as part of the OSP Data Object) to expose the correct OSP implementation to the OLE DB Simple Provider DLL (MSDAOSP.DLL). Use either <a href="pw_id_6xid.htm">IDataSource</a> (in Visual C++ implementations) or <a href="pw_msdso_36t0.htm">msDataSourceObject</a> and the appropriate <b>IDispatch</b> methods (in Visual Basic or Visual J++ implementations).<br><br></li>
<li>
<b>Implement notifications</b>. Several of the OSP methods require notifications. Code your <a href="pw_notify_4rlj.htm">notifications</a> in the OSP methods where applicable (for example, implementing the OSP notification methods <b>aboutToChangeCell </b>and <b>cellChanged</b> in the body of <b>SetVariant</b>). <br><br></li>
<li>
<b>Register the OLE DB Simple Provider DLL (MSDAOSP.DLL)</b>. Register MSDAOSP.DLL using regsvr32.exe. <br><br></li>
<li>
<b>Register the OSP Data Object</b>. Once you have finished coding the OSP Data Object, you need to assign it a GUID and register it using regsvr32.exe (in Visual Basic and Visual C++ implementations) or javareg (in Visual J++).<br><br></li>
<li>
<b>Choose a registration option.</b> <ul type=disc>
<li>
If you are <a href="pw_reg_8e93.htm">fully registering</a> a Simple Provider, you need to fill out a copy of the supplied <a href="pw_reg_77j9.htm">registration template</a> (the RegisterProvider.reg file) supplied with the Toolkit, and import that file's settings into the Windows registry. This eliminates the need to write code that loads the OSP Data Object and hands it off to MSDAOSP.DLL.<br><br></li>
<li>
If you want to write your own consumer code to instantiate the provider, do <i>not</i> use the RegisterProvider.reg template file. (See <a href="pw_reg_6nxj.htm">Registration Without a .reg File</a>.)</li>
</ul>
</li>
</ol>
</font></BODY>
</HTML>
