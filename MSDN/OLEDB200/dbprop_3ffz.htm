<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDBProperties::GetPropertyInfo</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbidbproperties__getpropertyinfo"></a>IDBProperties::GetPropertyInfo</h1>
<p>
<b>GetPropertyInfo</b> returns information about all properties supported by the provider.</p>
<pre><code>HRESULT GetPropertyInfo(
   ULONG                  cPropertyIDSets,
   const DBPROPIDSET   rgPropertyIDSets[],
   ULONG *                  pcPropertyInfoSets,
   DBPROPINFOSET **   prgPropertyInfoSets,
   OLECHAR **            ppDescBuffer);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>cPropertyIDSets</i></p>
<p class=indent>
[in]<br>
The number of DBPROPIDSET structures in <i>rgPropertyIDSets</i>.</p>
<p class=tl>
If <i>cPropertyIDSets</i> is zero, the provider ignores <i>rgPropertyIDSets</i>. When called on the enumerator, the provider returns information about all properties in the Initialization property group. When called on the data source object, if the data source object has not been initialized, the provider returns information about all properties in the Initialization property group. If the data source object has been initialized, the provider returns information about all of the properties in all of the property sets it supports.</P><p class=tl>
If <i>cPropertyIDSets</i> is not zero, the provider returns information about the requested properties. If a property is not supported, or if the method is called on an enumerator or an uninitialized data source object and the value of a property in a group other than the Initialization property group is requested, the returned value of <i>dwStatus</i> in the returned DBPROPINFO structure for that property is DBPROPFLAGS_NOTSUPPORTED and the values of the <i>pwszDescription</i>, <i>vtType</i>, and <i>vValues</i> elements are undefined.</P><p class=dt>
<i>rgPropertyIDSets</i></p>
<p class=indent>
[in]<br>
An array of <i>cPropertyIDSets</i> DBPROPIDSET structures. When called on the enumerator, the properties specified in these structures must belong to the Initialization property group. When called on the data source object, if the data source object has not been initialized, the properties must belong to the Initialization property group. If the data source object has been initialized, the properties can belong to any property group. The provider returns information about the properties specified in these structures. If <i>cPropertyIDSets</i> is zero, then this parameter is ignored. For information about the DBPROPIDSET structure, see "<a href="ch11pr_3gbp.htm">DBPROPIDSET Structure</a>" in Chapter 11.</p>
<p class=tl>
The following special GUIDs are defined for use with <b>GetPropertyInfo</b>. All of these GUIDs can be used on data source objects; only the DBPROPSET_DBINITALL GUID can be used on enumerators. If any of these GUIDs are specified in the <i>guidPropertySet</i> element of a DBPROPIDSET structure, the <i>cPropertyIDs</i> and <i>rgPropertyIDs</i> elements of that structure are ignored. However, the consumer should set these to zero and a null pointer, respectively, because the provider might attempt to verify that they are valid values. Consumers cannot pass special GUIDs and the GUIDs of other property sets in the same call to <b>GetPropertyInfo</b>. That is, if one element of <i>rgPropertyIDSets</i> contains a special GUID, all elements of <i>rgPropertyIDSets</i> must contain special GUIDs. These GUIDs are not returned in the <i>guidPropertySet</i> element of the DBPROPINFOSET structures returned in <i>rgPropertyInfoSets</i>. Instead, the GUID of the property set to which the property belongs is returned.</P><table border=1 cellpadding=5 cols=2 frame=below rules=rows width=571>
<tr valign=top>
<td class=label width=55%><b>Property Set GUID</b></td>
<td class=label width=45%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=55%>DBPROPSET_DATASOURCEALL</td>
<td width=45%>Returns all properties in the Data Source property group, including provider-specific properties.</td>
</tr>
<tr valign=top>
<td width=55%>DBPROPSET_DATASOURCEINFOALL</td>
<td width=45%>Returns all properties in the Data Source Information property group, including provider-specific properties.</td>
</tr>
<tr valign=top>
<td width=55%>DBPROPSET_DBINITALL</td>
<td width=45%>Returns all properties in the Initialization property group, including provider-specific properties.</td>
</tr>
<tr valign=top>
<td width=55%>DBPROPSET_ROWSETALL </td>
<td width=45%>Returns all properties in the Rowset property group, including provider-specific properties.</td>
</tr>
<tr valign=top>
<td width=55%>DBPROPSET_SESSIONALL</td>
<td width=45%>Returns all properties in the Session property group, including provider-specific properties.</td>
</tr>
</table><br>
<p class=dt>
<i>pcPropertyInfoSets</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return the number of DBPROPINFOSET structures returned in *<i>prgPropertyInfoSets</i>. If <i>cPropertyIDSets</i> is zero, *<i>pcPropertyInfoSets</i> is the total number of property sets for which the provider supports at least one property. If <i>*pcPropertyInfoSets</i> is not zero and one of the special GUIDs listed in <i>rgPropertyIDSets</i> was used, *<i>pcPropertyInfoSets</i> may differ from <i>cPropertyInfoSets</i>. If an error other than DB_E_ERRORSOCCURRED occurs, *<i>pcPropertyInfoSets</i> is set to zero.</p>
<p class=dt>
<i>prgPropertyInfoSets</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return an array of DBPROPINFOSET structures. If <i>cPropertyIDSets</i> is zero, then one structure is returned for each property set that contains at least one property supported by the provider. If <i>cPropertyIDSets</i> is not zero, then one structure is returned for each property set specified in <i>rgPropertyIDSets</i>.</p>
<p class=tl>
If <i>cPropertyIDSets</i> is not zero, the DBPROPINFOSET structures in *<i>prgPropertyInfoSets</i> are returned in the same order as the DBPROPIDSET structures in <i>rgPropertyIDSets</i>; that is, for corresponding elements of each array, the <i>guidPropertySet</i> elements are the same. If <i>cPropertyIDs</i>, in an element of <i>rgPropertyIDSets</i>, is not zero, the DBPROPINFO structures in the corresponding element of *<i>prgPropertyInfoSets</i> are returned in the same order as the DBPROPID values in <i>rgPropertyIDs</i>; that is, for corresponding elements of each array, the property IDs are the same. The only exception to these rules is when one of the special GUIDs listed in <i>rgPropertyIDSets</i> was used. In this case, the order of the property information returned may differ from the order specified in <i>rgPropertyIDSets.</i></P><p class=tl>
The provider allocates memory for the structures and returns the address to this memory; the consumer releases this memory with <b>IMalloc::Free</b> when it no longer needs the structures. Before calling <b>IMalloc::Free</b> for *<i>prgPropertyInfoSets</i>, the consumer should call <b>IMalloc::Free</b> for the <i>rgPropertyInfos</i> element within each element of *<i>prgPropertyInfoSets</i>. If *<i>pcPropertyInfoSets</i> is zero on output or if an error other than DB_E_ERRORSOCCURRED occurs, then *<i>prgPropertyInfoSets</i> must be a null pointer on output.</P><p class=tl>
For information about the DBPROPINFOSET and DBPROPINFO structures, see "<a href="ch11pr_34o5.htm">DBPROPINFOSET Structure</a>" and "DBPROPINFO Structure" in Chapter 11.</P><p class=dt>
<i>ppDescBuffer</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return a pointer to storage for all string values returned in the *<i>pwszDescription</i> element of the DBPROPINFO structure. The provider allocates this memory with <b>IMalloc</b> and the consumer frees it with <b>IMalloc::Free</b> when it no longer needs the property descriptions. If <i>ppDescBuffer</i> is a null pointer on input, <b>GetPropertyInfo</b> does not return the property descriptions. If *<i>pcPropertyInfoSets</i> is zero on output or if an error occurs, the provider does not allocate any memory and ensures that *<i>ppDescBuffer</i> is a null pointer on output. Each of the individual string values stored in this buffer is terminated by a null-termination character. Therefore, the buffer may contain one or more strings, each with its own null-termination character, and may contain embedded null-termination characters.<br>
</p>
<p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded. In all DBPROPINFO structures returned by the method, <i>dwFlags</i> is set to a value other than DBPROPFLAGS_NOTSUPPORTED.</p>
<p class=dt>
</p>
<p class=indent>
DB_S_ERRORSOCCURRED<br>
In an element of <i>rgPropertyIDSets</i>, a property specified in <i>rgPropertyIDs</i> was not supported by the provider; this includes the case in which the property set to which the property belongs is not supported by the provider. In the DBPROPINFO structures returned for the property, <i>dwFlags</i> is set to DBPROPFLAGS_NOTSUPPORTED.</p>
<p class=tl>
In an element of <i>rgPropertyIDSets</i>, the property set specified in <i>guidPropertySet</i> was not supported by the provider. In the DBPROPINFOSET structure returned for the property set, <i>cPropertyInfos</i> is set to zero, and <i>rgPropertyInfos</i> is set to a null pointer.</P><p class=tl>
The method was called on the enumerator and, in an element of <i>rgPropertyIDSets</i>, a property belonged to a group other than the Initialization property group.</P><p class=tl>
The method was called on an uninitialized data source object and, in an element of <i>rgPropertyIDSets</i>, a property belonged to a group other than the Initialization property group.</P><p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
E_INVALIDARG<br>
<i>pcPropertyInfoSets</i> or <i>prgPropertyInfoSets</i> was a null pointer.</p>
<p class=tl>
<i>cPropertyIDSets</i> was not equal to zero and <i>rgPropertyIDSets</i> was a null pointer.</P><p class=tl>
In an element of <i>rgPropertyIDSets</i>, <i>cPropertyIDs</i> was not zero and <i>rgPropertyIDs</i> was a null pointer.</P><p class=tl>
In one element of <i>rgPropertyIDSets</i>, <i>guidPropertySet</i> specified one of the special GUIDs listed in the description of <i>rgPropertyIDSets</i>. In a different element of <i>rgPropertyIDSets</i>, <i>guidPropertySet</i> specified the GUID of a normal property set.</P><p class=dt>
</p>
<p class=indent>
E_OUTOFMEMORY<br>
The provider was unable to allocate sufficient memory in which to return the DBPROPINFOSET or DBPROPINFO structures or the property descriptions.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_ERRORSOCCURRED<br>
Errors occurred while attempting to return information about all properties. The provider allocates memory for *<i>prgPropertyInfoSets</i> and the consumer checks <i>dwFlags</i> in the DBPROPINFO structures to determine why information about each property was not returned. The consumer frees this memory when it no longer needs the information. The method can fail to return information about properties for any of the reasons specified in DB_S_ERRORSOCCURRED.<br>
</p>
<p class=label>
<b>Comments</b></p>
<p>
<b>GetPropertyInfo</b> returns information about supported properties, including the property set to which they belong, their ID, their data type, the object to which they apply, and whether they can be read or written. Properties in the Initialization and Data Source Creation property groups for which the consumer must supply a value before calling <b>Initialize</b> are marked with the DBPROPFLAGS_REQUIRED bit in the <i>dwFlags</i> element of the DBPROPINFO structure.</p>
<p>
Whether a property is supported is different from its value. For example, if a provider supports <b>IRowsetLocate</b>, it supports the DBPROP_IRowsetLocate property. Whether a rowset actually exposes <b>IRowsetLocate</b> depends on whether the consumer sets the value of the corresponding property to VARIANT_TRUE or VARIANT_FALSE.</p>
<p>
The rowset properties returned by GetPropertyInfo indicate the set of properties that the provider knows about.&nbsp; The properties that may actually be supported for any particular rowset may be a subset of these properties.&nbsp; For example, a schema rowset may not be able to support all of the same properties as a rowset resulting from calling <b>OpenRowset</b>, or the properties that can be supported on a rowset generated from a command may vary depending on the command text.&nbsp; In general, consumers should not make assumptions based on the information returned by <b>GetPropertyInfo</b>.&nbsp; When opening a rowset, consumers should specify DBPROPOPTIONS_REQUIRED for the minimum number of properties required to be able to consume the rowset, and should set <i>dwOptions</i> for properties that provide the consumer additional functionality to DBPROPTIONS_OPTIONAL.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="dbprop_3vzn.htm">IDBProperties::GetProperties</a>, <a href="dbprop_8n8z.htm">IDBProperties::SetProperties</a></p>
</font></BODY>
</HTML>
