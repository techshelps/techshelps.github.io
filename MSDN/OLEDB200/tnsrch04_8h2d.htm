<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MDAXISINFO Structure</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="mdaxisinfostructure"></a>MDAXISINFO Structure</h1>
<p>
This structure contains information about an axis in the dataset. The method <b>IMDDataset::GetAxisInfo</b> returns an array of these structures, one for each axis in the dataset. It looks like this:</p>
<pre><code>typedef struct MDAXISINFO
{
 &nbsp; ULONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cbSize;
 &nbsp; ULONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iAxis;
 &nbsp; ULONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cDimensions;
 &nbsp; ULONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cCoordinates;
 &nbsp; ULONG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *rgcColumns;
 &nbsp; LPOLESTR&nbsp;&nbsp; *rgpwszDimensionNames;
} MDAXISINFO
</code></pre>
<p>
The <i>cbSize</i> field contains the size of the structure, in bytes. The <i>iAxis</i> field contains the number of the axis. Axes in a dataset are numbered starting from 0. Axis 0 is the column axis; axis 1 is the row axis; additional axes have numbers 2, 3, and so on. <i>cDimensions</i> indicates the count of dimensions on the axis. <i>cCoordinates</i> contains the count of coordinates on the axis. <i>rgcColumns</i> is a pointer to an array of integers, and each element of this array contains the count of columns in the axis rowset for this particular dimension. (For more information, see “Axis Rowsets.”) The field <i>rgpwszDimensionNames</i> is a pointer to an array of strings. The provider allocates this array. It contains the names of each dimension. Obviously, the cardinality of both these arrays is <i>cDimensions</i>.</p>
<p>
Providers must make sure to modify the structure only within the bounds of <i>cbSize</i>. Consumers must make sure to use the structure only within the bounds of <i>cbSize</i>.</p>
<p>
Consumers must use the <b>IMDDataset::FreeAxisInfo</b> method to free the array of MDAXISINFO structures returned by the <b>IMDDataset::GetAxisInfo</b> method. This ensures that all the memory allocated by the provider for this array and for the fields in each element of this array is properly freed. Use of <b>IMalloc::Free</b> on the array pointer does not guarantee that all this memory will be freed.</p>
<p>
For providers, the presence of <b>IMDDataset::FreeAxisInfo</b> method means that the memory for MDAXISINFO array and the fields of each of its elements need not all be allocated in one contiguous block. The memory can be allocated in any convenient set of blocks which can be freed when the consumer calls <b>IMDDataset::FreeAxisInfo</b>.</p>
<p>
For more information on how consumers should move from one element to the next in the MDAXISINFO array, see the page describing <b>IMDDataset::GetAxisInfo</b> in Chapter 4.</p>
</font></BODY>
</HTML>
