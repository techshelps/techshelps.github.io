<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Axis Expressions</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="axisexpressions"></a>Axis Expressions</h1>
<p>
Each axis specification<i> </i>results in an SQL SELECT statement, the select list of which has one column for each dimension oriented on that axis, and a RANK column, which represents the rank of a tuple on the axis. (Recall that sets are ordered in MDX.) For example, the axis specification</p>
<pre><code>CROSSJOIN({MSAccess, MSWord}, {Kansas, Buffalo, Topeka, USA, Canada}) 
 &nbsp; ON COLUMNS
</code></pre>
<p>
will result in a SELECT statement that generates the following virtual table:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=37%><b>Name1</b></td>
<td class=label width=48%><b>Name2</b></td>
<td class=label width=15%><b>Rank</b></td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Access</td>
<td width=48%>Geography.All.USA.Kansas</td>
<td width=15%>1</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Access</td>
<td width=48%>Geography.All.USA.NewYork.Buffalo</td>
<td width=15%>2</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Access</td>
<td width=48%>Geography.All.USA.KansasTopeka</td>
<td width=15%>3</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Access</td>
<td width=48%>Geography.All.USA </td>
<td width=15%>4</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Access</td>
<td width=48%>Geography.All.Canada</td>
<td width=15%>5</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Word</td>
<td width=48%>Geography.All.USAKansas</td>
<td width=15%>6</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Word</td>
<td width=48%>Geography.All.USA.NewYork.Buffalo</td>
<td width=15%>7</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Word</td>
<td width=48%>Geography.All.USA.KansasTopeka</td>
<td width=15%>8</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Word</td>
<td width=48%>Geography.All.USA </td>
<td width=15%>9</td>
</tr>
<tr valign=top>
<td width=37%>Products.All.Office.Word</td>
<td width=48%>Geography.All.Canada</td>
<td width=15%>10</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This table can be joined with the MEMBERS table to yield the axis rowset.</p>
<p>
The generation of this table requires multiple SQL statements, which operate on the MEMBERS and LEVELS tables. The virtual tables generated by the intermediate SELECT statements are used as input to the subsequent SELECT statements. The section “A Complete Example” has several examples that make this process clear.</p>
</font></BODY>
</HTML>
