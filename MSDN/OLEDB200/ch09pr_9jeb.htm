<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>States and State Transitions in Consumers</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbstates_and_state_transitions_in_consumers"></a>States and State Transitions in Consumers</h1>
<p>
The following diagram displays finite states and the text describes the actions that can take place within a consumer inside each method of the <b>IRowsetNotify</b> interface.</p>
<p class=label>
<b>Consumer state/state transition diagram</b></p>
<p>
<img src="ch0902.gif" border=0></p>
<h1>States</h1>
<ul type=disc>
<li>
Initial is a conceptual state denoting the initial state of any <b>IRowsetNotify</b> method before any phase starts. Full phased events such as DBREASON_COLUMN_SET can at this point receive an OKTODO or FAILEDTODO phase. Any other phase at this point is unexpected, causing the method to undergo a transition to the Undo Work2 state that returns S_FALSE.<br><br></li>
<li>
OKTODO, ABOUTTODO, SYNCHAFTER, and DIDEVENT are states to which the method undergoes a transition upon receiving the phase of the same name. All these states may involve some internal work by the consumer. All states, except DIDEVENT, may receive a FAILEDTODO notification, which causes the method to undergo a transition to the Undo Work1 state.<br><br></li>
<li>
Undo Work1 is an internal state to which the listener undergoes a transition from any state (except DIDEVENT) upon reception of a FAILEDTODO phase. In this state, any work done by the consumer is undone. After the work is undone, the method reverts&nbsp; back to the Initial state and returns S_OK.<br><br></li>
<li>
Undo Work2 is an internal state that captures any unexpected phase. In this state, any work done by the consumer is undone. Once the work is undone, the method reverts&nbsp; back to the Initial state and returns S_FALSE.</li>
</ul>
<h1>Transitions</h1>
<ul type=disc>
<li>
Arrows with a continuous heavy line represent transitions within states upon reception of some expected phase.<br><br></li>
<li>
Arrows with a continuous light line represent transitions resulting from receiving an unexpected phase.<br><br></li>
<li>
Arrows with a dashed line represent an internal transition by the consumer.<br><br></li>
</ul>
</font></BODY>
</HTML>
