<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Range Rowsets</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="rangerowsets"></a>Range Rowsets</h1>
<p>
The <i>range rowset</i> is a rowset of which each row corresponds to a cell in the dataset. Each selected cell property appears as a column in this rowset. The range rowset can be created from the dataset by the <b>IMDRangeRowset::GetRangeRowset</b> method. The range rowset does not have to contain all the cells of the dataset. A subset of cells may be chosen in a manner similar to <b>IMDDataset::GetCellData</b>. <b>IMDRangeRowset </b>is an optional interface on the dataset object. For information on how to find out if the range rowset is supported by the provider or not, see “Data Source Property, MDPROP_RANGEROWSET.”</p>
<p>
Consider the dataset in “Cube and Dataset Example.” The call</p>
<pre><code>IMDRangeRowset::GetRangeRowset(NULL, 1, 19, cProperties, rgPropertySets, 
 &nbsp; &amp;pIRowsetChange);
</code></pre>
<p>
returns the following rowsets, assuming that the default properties — CELL_ORDINAL, VALUE, and FORMATTED_VALUE — were selected:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=378>
<tr valign=top>
<td class=label width=34%><b>CELL_ORDINAL</b></td>
<td class=label width=19%><b>VALUE</b></td>
<td class=label width=47%><b>FORMATTED_VALUE</b></td>
</tr>
<tr valign=top>
<td width=34%>1</td>
<td width=19%>10</td>
<td width=47%>“10”</td>
</tr>
<tr valign=top>
<td width=34%>2</td>
<td width=19%>20</td>
<td width=47%>“20”</td>
</tr>
<tr valign=top>
<td width=34%>3</td>
<td width=19%>30</td>
<td width=47%>“30”</td>
</tr>
<tr valign=top>
<td width=34%>9</td>
<td width=19%>11</td>
<td width=47%>“11”</td>
</tr>
<tr valign=top>
<td width=34%>10</td>
<td width=19%>21</td>
<td width=47%>“21”</td>
</tr>
<tr valign=top>
<td width=34%>11</td>
<td width=19%>31</td>
<td width=47%>“31”</td>
</tr>
<tr valign=top>
<td width=34%>17</td>
<td width=19%>12</td>
<td width=47%>“12”</td>
</tr>
<tr valign=top>
<td width=34%>18</td>
<td width=19%>22</td>
<td width=47%>“22”</td>
</tr>
<tr valign=top>
<td width=34%>19</td>
<td width=19%>32</td>
<td width=47%>“32”</td>
</tr>
</table><br>
<p class=indent>
<b><B>Note</B>&nbsp;&nbsp;&nbsp;</b>The quotation marks around values in the FORMATTED_VALUE column are there as a visual aid to point out that they are strings. The provider does not return the quotes.</p>
<p>
The primary uses of the range rowset are:
<ul type=disc>
<li>
Remoting. Remoting a dataset amounts to remoting the axis rowsets, the MDAXISINFO structures associated with each axis, and the range rowset. The advantage is that if a provider knows how to remote a rowset, then implementing dataset remoting is a straightforward step.<br><br></li>
<li>
Updating. Updating the cells of a cube is tantamount to updating the range rowset. The section “Updating Cell Data” discusses this in detail.</li>
</ul>
<p>
The following rules govern the structure of the range rowset:
<ol>
<li>
The range rowset always contains CELL_ORDINAL as the first column, regardless of whether it was specified in the CELL PROPERTIES clause of the dataset. The other properties appear as subsequent columns, according to the following rules:<ul type=disc>
<li>
If the MDX statement that created the dataset had a CELL PROPERTIES clause, then the columns appear in the order specified in that clause.<br><br></li>
<li>
Otherwise, the columns are CELL_ORDINAL, VALUE, and FORMATTED_VALUE, in that order.<br><br></li>
<li>
What happens in these cases is provider-specific:<p class=tl>
Either the MDX statement has CELL_ORDINAL specified in the CELL PROPERTIES clause, but not as the first property (for example, CELL PROPERTIES VALUE, CELL_ORDINAL), or the MDX statement has a property specified multiple times in the CELL PROPERTIES clause (for example, CELL PROPERTIES CELL_ORDINAL, VALUE, FORMATTED_VALUE, VALUE).</P></li>
</ul>
</li>
<li>
The CELL_ORDINAL column is always read-only.<br><br></li>
<li>
The other columns may or may not be read-only, based on provider-defined conditions. If the range rowset can be updated (that is, if it supports the <b>IRowsetChange</b> interface), then usually at least one column, frequently the VALUE column, can be updated. Providers usually support the updating of other columns as well. To determine if a column can be updated, consumers must check <i>dwFlags</i> in the DBCOLUMNSINFO structure for the column.<br><br></li>
<li>
The rows in the range rowset are ordered by CELL_ORDINAL column.</li>
</ol>
</font></BODY>
</HTML>
