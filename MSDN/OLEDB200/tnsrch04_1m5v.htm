<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Axis Rowsets</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="axisrowsets"></a>Axis Rowsets</h1>
<p>
There is one rowset for every axis. This rowset has at least 5<i>n+</i>1 columns where <i>n </i>is the number of dimensions projected along the axis (because there are five default properties that are available for each axis, and one more column for the TUPLE_ORDINAL). In addition to this, there may be provider-specific default properties, or the application may have selected additional properties by using the DIMENSION PROPERTIES clause. Because of this, it is possible that the number of columns corresponding to a dimension is more than five. The field <i>rgcColumns</i> in the MDAXISINFO structure for this axis points to an array containing the number of columns in the axis rowset for this dimension.</p>
<p>
The axis rowset has columns in the following order:
<ul type=disc>
<li>
TUPLE_ORDINAL column.<br><br></li>
<li>
Columns for the outermost dimension.<br><br></li>
<li>
Columns for dimensions with inner nestings.<br><br></li>
<li>
Within the columns for each dimension, the five default properties occur first, followed by any provider-specific properties, followed by the properties explicitly selected in the DIMENSION PROPERTIES clause.</li>
</ul>
<p>
The five default properties for each dimension, in order of their occurrence in the axis rowset, are:
<ul type=disc>
<li>
MEMBER_UNIQUE_NAME. The unique name of the member. This is the same as MEMBER_UNIQUE_NAME in the MEMBERS rowset.<br><br></li>
<li>
MEMBER_CAPTION. The display name of the member. This is the same as the MEMBER_CAPTION column of the MEMBERS rowset.<br><br></li>
<li>
LEVEL_UNIQUE_NAME. The name of the level to which this member belongs. This is the same as the LEVEL_UNIQUE_NAME column of the MEMBERS rowset.<br><br></li>
<li>
LEVEL_NUMBER. The distance of the member from the root (zero based, root = 0). This is the same as the LEVEL_NUMBER column of the MEMBERS rowset.<br><br></li>
<li>
DISPLAY_INFO. This property contains various items of information that help an application render the axis. It is a 4-byte value. The value of the least significant 2 bytes is a 16-bit unsigned integer that contains the number of children of a member. In the most significant 2 bytes, each bit potentially conveys one piece of display information. For OLE DB,meanings are defined for only 2 bits (the least significant bits), as below:<p>
<img src="te_ch0210.gif" border=0></P><ul type=disc>
<li>
The least significant bit (rightmost bit), if set, indicates that this member is drilled down. That is, at least one child of this member appears on the axis, immediately following the member. This can be tested by the bitmask MDDISPINFO_DRILLED_DOWN. This bit can be used by applications to display a “+” or a “–“ next to the member.<br><br></li>
<li>
The next bit (the second least significant bit), if set, indicates that the parent of this member is the same as the parent of the immediately preceding member. This can be tested by the bitmask MDDISPINFO_SAME_PARENT_AS_PREV. The use of this bit becomes clear when one considers the problem of displaying the dataset shown in “Cube and Dataset Example” in Chapter 2. Specifically, how does the application get information about the ancestors of Seattle and Boston (“USA_North” and “USA”)? It can do so by using the MDTREEOP_ANCESTORS property on the members rowset. After getting the list of ancestors for Seattle, it must do the same for Boston. This is wasteful because the application already got the information when it got the ancestors for Seattle. The bit MDDISPINFO_SAME_PARENT_AS_PREV is useful in this scenario. It will be set for “Boston,” and the application can use the ancestor information that it already has instead of querying the schema rowset again.</li>
</ul>
<p class=tl>
Note the following rules about DISPLAY_INFO:</P><ul type=disc>
<li>
The value in the first 2 bytes of DISPLAY_INFO (the count of children) is an unsigned value.<br><br></li>
<li>
If the number of children exceeds 65535 (the largest 16-bit number possible), the provider still returns 65535 in the first 2 bytes of DISPLAY_INFO. Therefore, the application’s interpretation of the number 65535 in this field should be “greater than or equal to 65535 children.” If the application wants to know the count of children beyond 65535, then it should ask for the CHILDREN_CARDINALITY property in the DIMENSION_PROPERTIES clause.<br><br></li>
<li>
Just like the CHILDREN_CARDINALITY property, the count of children returned in the first 2 bytes of DISPLAY_INFO may not be exact.<br><br></li>
<li>
MDDISPINFO_DRILLED_DOWN is set only if a child <i>immediately follows </i>a member on the axis. For instance, if the axis has {North_America, South_America, USA}, then the MDDISPINFO_DRILLED_DOWN bit is not set for North_America because USA does not immediately follow North_America.<br><br></li>
<li>
MDDISPINFO_DRILLED_DOWN does not require that <i>all</i> the children of a member be present on the axis, immediately following the member. It just requires <i>at least</i> one child to be present immediately following the member.<br><br></li>
<li>
The bitmasks MDDISPINFO_DRILLED_DOWN and MDDISPINFO_SAME_PARENT_AS_PREV are 32-bit bitmasks. The application should apply it to all the 4 bytes of DISPLAY_INFO.</li>
</ul>
</li>
</ul>
<p>
To distinguish these column names, they are prefixed by <i>dimension_name</i><b>.</b> For example, the column names for the SalesRep dimension are: “[SalesRep].[MEMBER_UNIQUE_NAME]”, “[SalesRep].[MEMBER_CAPTION]”, “[SalesRep].[LEVEL_UNIQUE_NAME]”, “[SalesRep].[LEVEL_NUMBER]”, “[SalesRep].[DISPLAY_INFO]”.</p>
<p>
The data types for TUPLE_ORDINAL and the five mandatory properties are:
<ul type=disc>
<li>
TUPLE_ORDINAL — DBTYPE_UI4<br><br></li>
<li>
MEMBER_UNIQUE_NAME — DBTYPE_WSTR<br><br></li>
<li>
MEMBER_CAPTION — DBTYPE_WSTR<br><br></li>
<li>
LEVEL_UNIQUE_NAME — DBTYPE_WSTR<br><br></li>
<li>
LEVEL_NUMBER — DBTYPE_I4<br><br></li>
<li>
DISPLAY_INFO — DBTYPE_UI4.</li>
</ul>
<p>
The data types of provider-specific properties and properties selected by using the DIMENSION PROPERTIES clause are available in the PROPERTIES schema rowset. This information is also available by calling <b>IColumnsInfo</b> on the <b>Rowset </b>object corresponding to an axis rowset.</p>
<h4>An Example</h4>
<p>
Consider a dataset that looks like this:</p>
<p>
<img src="te_ch0302.gif" border=0></p>
<p>
This dataset has two axes, x and y (0 and 1).</p>
<p>
The x-axis has the following elements:
<ul type=disc>
<li>
Two dimensions: Salesperson and Geography.<br><br></li>
<li>
Salesperson dimension has members from the Name level.<br><br></li>
<li>
Geography dimension has members from the Country, Region, and City levels.<p class=tl>
Note that the country JAPAN has no regions defined in this database. Note also that USA_North has its cities expanded while USA_South does not have its cities expanded.</P></li>
</ul>
<p>
The y-axis has the following elements:
<ul type=disc>
<li>
One dimension: Time.<br><br></li>
<li>
Two levels: Quarters and Month.<p class=tl>
Qtr1 and Qtr4 have their months expanded while Qtr2 and Qtr3 do not.</P></li>
</ul>
<p>
The MDAXISINFO structure for the x-axis has:
<ul type=disc>
<li>
<i>cbSize</i> = 24 (assuming ULONG values and pointers are 4 bytes each)<br><br></li>
<li>
<i>iAxis</i> = 0<br><br></li>
<li>
<i>cDimensions</i> = 2<br><br></li>
<li>
<i>cCoordinates</i> = 8<br><br></li>
<li>
<i>rgcColumns</i> = pointer to array [5, 5]. There are no provider-specific mandatory properties<br><br></li>
<li>
<i>rgpwszDimensionNames</i> = pointer to array [SalesRep, Geography]</li>
</ul>
<p>
The MDAXISINFO structure for the y-axis has:
<ul type=disc>
<li>
<i>cbSize</i> = 24 (assuming ULONG values and pointers are 4 bytes each)<br><br></li>
<li>
<i>iAxis</i> = 1<br><br></li>
<li>
<i>cDimensions</i> = 1<br><br></li>
<li>
<i>cCoordinates</i> = 8<br><br></li>
<li>
<i>rgcColumns</i> = pointer to array [5]. There are no provider-specific mandatory properties<br><br></li>
<li>
<i>rgpwszDimensionNames</i> = pointer to array [Quarters]</li>
</ul>
<p>
The axis rowset for the x-axis is shown in the table below. (The value of DISPLAY_INFO is shown in the form “x, y, z” where z = number of children, y = MDDISPINFO_DRILLED_DOWN and x = MDDISPINFO_SAME_PARENT_AS_PREV.)</p>
<table border=1 cellpadding=5 cols=6 frame=below rules=rows width=594>
<tr valign=top>
<td class=label width=14%><b><br>
<br>
TUPLE_<br>
ORDINAL</b></td>
<td class=label width=17%><b>[SalesRep].<br>
[MEMBER_<br>
UNIQUE_<br>
NAME]</b></td>
<td class=label width=17%><b><br>
[SalesRep].<br>
[MEMBER_<br>
CAPTION]</b></td>
<td class=label width=17%><b>[SalesRep].<br>
[LEVEL_<br>
UNIQUE_<br>
NAME]</b></td>
<td class=label width=17%><b><br>
[SalesRep].<br>
[LEVEL_<br>
NUMBER]</b></td>
<td class=label width=18%><b><br>
[SalesRep].<br>
[DISPLAY_<br>
INFO]</b></td>
</tr>
<tr valign=top>
<td width=14%>0</td>
<td width=17%>[SalesRep].<br>
[Venkatrao]</td>
<td width=17%>Venkatrao</td>
<td width=17%>RepName</td>
<td width=17%>1</td>
<td width=18%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=14%>1</td>
<td width=17%>[SalesRep].<br>
[Venkatrao]</td>
<td width=17%>Venkatrao</td>
<td width=17%>RepName</td>
<td width=17%>1</td>
<td width=18%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=14%>2</td>
<td width=17%>[SalesRep].<br>
[Venkatrao]</td>
<td width=17%>Venkatrao</td>
<td width=17%>RepName</td>
<td width=17%>1</td>
<td width=18%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=14%>3</td>
<td width=17%>[SalesRep].<br>
[Venkatrao]</td>
<td width=17%>Venkatrao</td>
<td width=17%>RepName</td>
<td width=17%>1</td>
<td width=18%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=14%>4</td>
<td width=17%>[SalesRep].<br>
[Netz]</td>
<td width=17%>Netz</td>
<td width=17%>RepName</td>
<td width=17%>1</td>
<td width=18%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=14%>5</td>
<td width=17%>[SalesRep].<br>
[Netz]</td>
<td width=17%>Netz</td>
<td width=17%>RepName</td>
<td width=17%>1</td>
<td width=18%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=14%>6</td>
<td width=17%>[SalesRep].<br>
[Netz]</td>
<td width=17%>Netz</td>
<td width=17%>RepName</td>
<td width=17%>1</td>
<td width=18%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=14%>7</td>
<td width=17%>[SalesRep].<br>
[Netz]</td>
<td width=17%>Netz</td>
<td width=17%>RepName</td>
<td width=17%>1</td>
<td width=18%>0, 0, 0</td>
</tr>
</table><br>
<p>
&nbsp;(This is the same table continued.)</p>
<table border=1 cellpadding=5 cols=5 frame=below rules=rows width=582>
<tr valign=top>
<td class=label width=21%><b>[Geography].<br>
[MEMBER_<br>
UNIQUE_<br>
NAME]</b></td>
<td class=label width=20%><b><br>
[Geography].<br>
[MEMBER_<br>
CAPTION]</b></td>
<td class=label width=19%><b>[Geography].<br>
[LEVEL_<br>
UNIQUE_<br>
NAME]</b></td>
<td class=label width=20%><b><br>
[Geography].<br>
[LEVEL_<br>
NUMBER]</b></td>
<td class=label width=20%><b><br>
[Geography].<br>
[DISPLAY_<br>
INFO]</b></td>
</tr>
<tr valign=top>
<td width=21%>[The World].<br>
[North America].<br>
[USA].<br>
[USA_North].<br>
[Seattle]</td>
<td width=20%>Seattle</td>
<td width=19%>City</td>
<td width=20%>5</td>
<td width=20%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=21%>[The World].<br>
[North America].<br>
[USA].<br>
[USA_North].<br>
[Boston]</td>
<td width=20%>Boston</td>
<td width=19%>City</td>
<td width=20%>5</td>
<td width=20%>1, 0, 0</td>
</tr>
<tr valign=top>
<td width=21%>[The World].<br>
[North America].<br>
[USA].<br>
[USA_South]</td>
<td width=20%>Southern Region, USA</td>
<td width=19%>Region</td>
<td width=20%>3</td>
<td width=20%>0, 0, 25</td>
</tr>
<tr valign=top>
<td width=21%>[The World].<br>
[Asia].<br>
[Japan]</td>
<td width=20%>Japan</td>
<td width=19%>Country</td>
<td width=20%>2</td>
<td width=20%>0, 0, 12</td>
</tr>
<tr valign=top>
<td width=21%>[The World].<br>
[North America].<br>
[USA].<br>
[USA_North].<br>
[Seattle]</td>
<td width=20%>Seattle</td>
<td width=19%>City</td>
<td width=20%>5</td>
<td width=20%>0, 0, 0</td>
</tr>
<tr valign=top>
<td width=21%>[The World].<br>
[North America].<br>
[USA].<br>
[USA_North].<br>
[Boston]</td>
<td width=20%>Boston</td>
<td width=19%>City</td>
<td width=20%>5</td>
<td width=20%>1, 0, 0</td>
</tr>
<tr valign=top>
<td width=21%>[The World].<br>
[North America].<br>
[USA].<br>
[USA_South]</td>
<td width=20%>Southern Region, USA</td>
<td width=19%>Region</td>
<td width=20%>3</td>
<td width=20%>0, 0, 25</td>
</tr>
<tr valign=top>
<td width=21%>[The World].<br>
[Asia].<br>
[Japan]</td>
<td width=20%>Japan</td>
<td width=19%>Country</td>
<td width=20%>2</td>
<td width=20%>0, 0, 12</td>
</tr>
</table><br>
<p>
The axis rowset for the y-axis is as shown below. (The value of DISPLAY_INFO is shown in the form “x, y, z” where z = number of children, y = MDDISPINFO_DRILLED_DOWN, and x = MDDISPINFO_ SAME_PARENT_AS_PREV.)</p>
<table border=1 cellpadding=5 cols=6 frame=below rules=rows width=582>
<tr valign=top>
<td class=label width=14%><b><br>
<br>
TUPLE_<br>
ORDINAL</b></td>
<td class=label width=16%><b>[Quarters].<br>
[MEMBER_<br>
UNIQUE_<br>
NAME]</b></td>
<td class=label width=18%><b><br>
[Quarters].<br>
[MEMBER_<br>
CAPTION]</b></td>
<td class=label width=16%><b>[Quarters].<br>
[LEVEL_<br>
UNIQUE_<br>
NAME]</b></td>
<td class=label width=18%><b><br>
[Quarters].<br>
[LEVEL_<br>
NUMBER]</b></td>
<td class=label width=18%><b><br>
[Quarters].<br>
[DISPLAY_<br>
INFO]</b></td>
</tr>
<tr valign=top>
<td width=14%>0</td>
<td width=16%>Jan</td>
<td width=18%>January</td>
<td width=16%>Month</td>
<td width=18%>2</td>
<td width=18%>0, 0, 31</td>
</tr>
<tr valign=top>
<td width=14%>1</td>
<td width=16%>Feb</td>
<td width=18%>February</td>
<td width=16%>Month</td>
<td width=18%>2</td>
<td width=18%>1, 0, 29</td>
</tr>
<tr valign=top>
<td width=14%>2</td>
<td width=16%>Mar</td>
<td width=18%>March</td>
<td width=16%>Month</td>
<td width=18%>2</td>
<td width=18%>1, 0, 31</td>
</tr>
<tr valign=top>
<td width=14%>3</td>
<td width=16%>Qtr2</td>
<td width=18%>Quarter 2</td>
<td width=16%>Quarter</td>
<td width=18%>1</td>
<td width=18%>0, 0, 3</td>
</tr>
<tr valign=top>
<td width=14%>4</td>
<td width=16%>Qtr3</td>
<td width=18%>Quarter 3</td>
<td width=16%>Quarter</td>
<td width=18%>1</td>
<td width=18%>1, 0, 3</td>
</tr>
<tr valign=top>
<td width=14%>5</td>
<td width=16%>Oct</td>
<td width=18%>October</td>
<td width=16%>Month</td>
<td width=18%>2</td>
<td width=18%>0, 0, 31</td>
</tr>
<tr valign=top>
<td width=14%>6</td>
<td width=16%>Nov</td>
<td width=18%>November</td>
<td width=16%>Month</td>
<td width=18%>2</td>
<td width=18%>1, 0, 30</td>
</tr>
<tr valign=top>
<td width=14%>7</td>
<td width=16%>Dec</td>
<td width=18%>December</td>
<td width=16%>Month</td>
<td width=18%>2</td>
<td width=18%>1, 0, 31</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In this example, it is assumed that the members of the SalesRep and Geography dimensions need to be qualified and members from all other dimensions need not be qualified (for ensuring uniqueness). It is also assumed that all level names are unique without qualification.</p>
<h2>Effect of DIMENSION PROPERTIES Clause on Axis Rowsets</h2>
<p>
If the MDX expression contains a DIMENSION PROPERTIES clause that selects properties of members, these properties are available in the axis rowset. Each property appears as a column in the axis rowset, whose name is &lt;level_name&gt;<b>.&lt;</b>property_name&gt;, where &lt;level_name&gt; is the unique name of the level to which the property belogs. The property columns (if any) come after the mandatory columns (MEMBER_UNIQUE_NAME, MEMBER_CAPTION, LEVEL_UNIQUE_NAME, LEVEL_NUMBER, and DISPLAY_INFO) for each dimension.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;As mentioned before, MEMBER_UNIQUE_NAME, MEMBER_CAPTION, LEVEL_UNIQUE_NAME, LEVEL_NUMBER, and DISPLAY_INFO are always available in the axis rowset. If these properties are specified in the DIMENSION PROPERTIES clause, they are ignored. The effect is as if they were not in the DIMENSION PROPERTIES clause.</p>
<h2>Mandatory Member Properties</h2>
<p>
All providers are required to support the following mandatory properties for each member:
<ul type=disc>
<li>
CATALOG_NAME<br><br></li>
<li>
SCHEMA_NAME<br><br></li>
<li>
CUBE_NAME<br><br></li>
<li>
DIMENSION_UNIQUE_NAME<br><br></li>
<li>
HIERARCHY_UNIQUE_NAME<br><br></li>
<li>
LEVEL_UNIQUE_NAME<br><br></li>
<li>
LEVEL_NUMBER<br><br></li>
<li>
MEMBER_UNIQUE_NAME<br><br></li>
<li>
MEMBER_NAME<br><br></li>
<li>
MEMBER_TYPE<br><br></li>
<li>
MEMBER_GUID<br><br></li>
<li>
MEMBER_CAPTION<br><br></li>
<li>
MEMBER_ORDINAL<br><br></li>
<li>
CHILDREN_CARDINALITY<br><br></li>
<li>
PARENT_LEVEL<br><br></li>
<li>
PARENT_UNIQUE_NAME<br><br></li>
<li>
PARENT_COUNT<br><br></li>
<li>
DESCRIPTION</li>
</ul>
<p>
The meanings of these properties are the same as the respective columns of the MEMBERS rowset. (See “MEMBERS Rowset” in this chapter.)</p>
<p>
The consumer can include any of these properties in the axis rowset by specifying them on the DIMENSION PROPERTIES clause.</p>
<h2>Axis Rowsets and Calculated Members</h2>
<p>
Calculated members have well-defined values for all the mandatory member properties. They have a name, a unique name (which can be the qualified name or a different unique name generated by the provider), and so on. Most of these are derived from the member definition in the WITH clause or in the CREATE clause.</p>
<p>
The following properties need special mention:
<ul type=disc>
<li>
MEMBER_GUID is always NULL.<br><br></li>
<li>
MEMBER_CAPTION is the same as the member name.<br><br></li>
<li>
CHILDREN_CARDINALITY is usually zero.</li>
</ul>
<p>
The values of the nonmandatory member properties, if any, are provider-defined.</p>
</font></BODY>
</HTML>
