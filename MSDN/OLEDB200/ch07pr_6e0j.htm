<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPersist* Objects</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbipersist_objects"></a>IPersist* Objects</h1>
<p>
OLE objects can be stored in columns in a rowset. Such objects are required to expose either <b>IPersistStream</b>, <b>IPersistStreamInit</b>, or <b>IPersistStorage</b>. The rowset has to know how to create instances of these objects, so it must store the objects’ class IDs. How this is done is provider specific. For example, the provider might do one of the following:
<ul type=disc>
<li>
Store a separate class ID in the data source with each object (as might be the case for a column that can store objects that use arbitrary class IDs).<br><br></li>
<li>
Store a single class ID for an entire column in the metadata for that column (as might be the case when a column can store only a single type of object). See DBCOLUMN_CLSID in <b>IColumnsRowset::GetColumnsRowset</b>.<b> </b><br><br></li>
<li>
Not store a class ID at all and always use a default class ID (as might be the case when the provider can support only a single type of object).</li>
</ul>
</font></BODY>
</HTML>
