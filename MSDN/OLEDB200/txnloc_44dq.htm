<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITransactionLocal::StartTransaction</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbitransactionlocal__starttransaction"></a>ITransactionLocal::StartTransaction</h1>
<p>
Begins a new transaction.</p>
<pre><code>HRESULT StartTransaction (
   ISOLEVEL               isoLevel,
   ULONG                  isoFlags,
   ITransactionOptions *   pOtherOptions,
   ULONG *                  pulTransactionLevel);
</code></pre>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>isoLevel</i></p>
<p class=indent>
[in]<br>
The isolation level to be used with this transaction. For more information, see "<a href="ch12pr_5mgj.htm">Isolation Levels</a>" in Chapter 12.<br>
</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=571>
<tr valign=top>
<td class=label width=33%><b>Value</b></td>
<td class=label width=67%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
UNSPECIFIED</td>
<td width=67%>Applicable only to <b>ITransactionJoin::JoinTransaction</b>. Invalid for <b>ITransactionLocal</b> or for setting isolation level while in autocommit mode.</td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
CHAOS</td>
<td width=67%>Cannot overwrite the dirty data of other transactions at higher isolation levels.</td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
READUNCOMMITTED</td>
<td width=67%>Read Uncommitted.</td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
BROWSE</td>
<td width=67%>Synonym for ISOLATIONLEVEL_READUNCOMMITTED.</td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
READCOMMITTED</td>
<td width=67%>Read Committed.</td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
CURSORSTABILITY</td>
<td width=67%>Synonym for ISOLATIONLEVEL_READCOMMITTED.</td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
REPEATABLEREAD</td>
<td width=67%>Repeatable Read.</td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
SERIALIZABLE</td>
<td width=67%>Serializable.</td>
</tr>
<tr valign=top>
<td width=33%>ISOLATIONLEVEL_<br>
ISOLATED</td>
<td width=67%>Synonym for ISOLATIONLEVEL_SERIALIZABLE.</td>
</tr>
</table><br>
<p class=dt>
</p>
<p class=dt>
<i>isoFlags</i></p>
<p class=indent>
[in]<br>
Must be zero.</p>
<p class=dt>
<i>pOtherOptions</i></p>
<p class=indent>
[in]<br>
Optionally a null pointer. If this is not a null pointer, it is a pointer to an object previously returned from <b>GetOptionsObject</b> called on this session instance. </p>
<p class=dt>
<i>pulTransactionLevel</i></p>
<p class=indent>
[out]<br>
A pointer to memory in which to return the level of the new transaction. The value of the top-level transaction is 1. If <i>pulTransactionLevel</i> is a null pointer, the level is not returned.</p>
<p class=dt>
</p>
<p class=label>
<b>Return Code</b></p>
<p class=indent>
S_OK<br>
The method succeeded.</p>
<p class=dt>
</p>
<p class=indent>
DB_E_OBJECTOPEN</p>
<p class=indent>
A rowset object was open and the provider does not support starting a new transaction with existing open rowset objects.</p>
<p class=dt>
</p>
<p class=indent>
E_FAIL<br>
A provider-specific error occurred.</p>
<p class=dt>
</p>
<p class=indent>
E_UNEXPECTED<br>
An unknown error occurred and the method failed.</p>
<p class=dt>
</p>
<p class=indent>
XACT_E_CONNECTION_DENIED<br>
This session could not create a new transaction at the present time due to unspecified capacity issues.</p>
<p class=dt>
</p>
<p class=indent>
XACT_E_CONNECTION_DOWN<br>
This session is having communication difficulties with its internal implementation.</p>
<p class=dt>
</p>
<p class=indent>
XACT_E_ISOLATIONLEVEL<br>
Neither the requested isolation level nor a strengthening of it can be supported by this transaction implementation or <i>isoLevel</i> was not valid.</p>
<p class=dt>
</p>
<p class=indent>
XACT_E_LOGFULL<br>
A transaction could not be created because this session uses logging to a device that lacks available space.</p>
<p class=dt>
</p>
<p class=indent>
XACT_E_NOISORETAIN<br>
The requested semantics of retention of isolation across retaining commit and abort boundaries cannot be supported by this transaction implementation or <i>isoFlags</i> was not equal to zero.</p>
<p class=dt>
</p>
<p class=indent>
XACT_E_NOTIMEOUT<br>
A noninfinite time-out value was requested, but time-outs are not supported by this transaction.</p>
<p class=dt>
</p>
<p class=indent>
XACT_E_XTIONEXISTS<br>
This session can handle only one extant transaction at a time, and there is presently such a transaction.</p>
<p class=tl>
The session supports a limited number of nested transactions, and that limit has been reached.</P><p class=label>
<b>Comments</b></p>
<p>
<b>ITransactionLocal</b> starts a new local transaction. If there is already an active transaction on the session (that is, <b>StartTransaction</b> has been called with no matching Commit or Abort), then the new transaction is started as a nested transaction below the current transaction. Calling Commit or Abort always commits or aborts the transaction at the lowest level, respectively. If the provider does not support nested transactions, calling <b>StartTransaction</b> when there is already an active transaction on the session returns XACT_E_XTIONEXISTS.</p>
<p class=label>
<b>See Also</b></p>
<p>
<a href="txnopt_0bn7.htm">ITransactionOptions::SetOptions</a></p>
</font></BODY>
</HTML>
