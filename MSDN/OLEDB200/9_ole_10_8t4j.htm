<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BLOBs and OLE Objects</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="blobs_and_ole_objects"></a>BLOBs and OLE Objects</h1>
<p>
SQLOLEDB exposes the <b>ISequentialStream</b> interface to support consumer access to SQL Server <b>text</b> and <b>image</b> data types as Binary Large Objects (BLOBs). The <b>Read</b> method on <b>ISequentialStream</b> allows the consumer to retrieve large amounts of data in manageable chunks.</p>
<p>
SQLOLEDB can use a consumer-implemented <b>IStorage</b> interface when the consumer provides the interface pointer in an accessor bound for data modification.</p>
<h3>SQLOLEDB Storage Object Limitations</h3>
<ul type=disc>
<li>
SQLOLEDB can support only a single open storage object. Attempts to open more than one storage object (attempts to get a reference on more than one <b>ISequentialStream</b> interface pointer) return DBSTATUS_E_CANTCREATE.<br><br></li>
<li>
SQLOLEDB storage objects are not blocking.<br><br></li>
<li>
The length of data presented by a consumer-implemented storage object must be made known to SQLOLEDB when the row accessor that references the storage object is created. The consumer must bind a length indicator in the DBBINDING structure used for accessor creation.<br><br></li>
<li>
SQLOLEDB supports <b>ISequentialStream::Write</b> for zero-length strings and NULL values only. Attempts to write more than zero bytes through <b>ISequentialStream::Write</b> fail.<br><br></li>
<li>
If a row contains more than a single large data value, the consumer must either use a SQLOLEDB cursor-supported rowset to retrieve row data or process all large data values prior to retrieving other row values.</li>
</ul>
</font></BODY>
</HTML>
