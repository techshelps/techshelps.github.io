<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Threading and OLE Objects</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="oledbthreading_and_ole_objects"></a>Threading and OLE Objects</h1>
<p>
OLE DB supports two kinds of OLE objects in columns and parameters: storage objects and <b>IPersist*</b> objects.</p>
<p>
Rowsets are factories of storage objects and determine the threading model of these objects. While accessing a storage object through <b>IRowset::GetData</b>, free-threaded rowsets return free-threaded objects, and apartment rowsets return apartment objects that will belong to the same thread.</p>
<p>
<b>IPersist*</b> objects are implemented by the other parties. Their threading model is dictated by threading marking of their class factory. This marking may be absent and, if present, it can be either "Apartment" or "Both." Consumers need mechanisms to obtain information about the <b>IPersist*</b> object's threading marking when <b>GetData</b> returns the object. </p>
<p>
For more information about storage objects and <b>IPersist*</b> objects, see Chapter 7, "<a href="ch07pr_5ipf.htm">BLOBs and OLE Objects</a>."</p>
</font></BODY>
</HTML>
