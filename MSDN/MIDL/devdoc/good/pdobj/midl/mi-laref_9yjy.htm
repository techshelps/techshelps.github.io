<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>oleautomation</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_oleautomation"></a>oleautomation</h1>
<p>
<b>[&nbsp;oleautomation,&nbsp;uuid(</b><i>string-uuid</i><b>)</b>[&nbsp;<b>,&nbsp;</b><i>interface-attribute-list</i>]&nbsp;<b>]&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interface</b>&nbsp;<i>interface-name</i>&nbsp;<b>:</b>&nbsp;<i>base-interface</i>
<dl>
<dt>
<i>string-uuid</i></dt>
<dd>
Specifies a UUID string generated by the <b>uuidgen</b> utility.</dd>
<dt>
<i>interface-attribute-list</i></dt>
<dd>
Specifies other attributes that apply to the interface as a whole.</dd>
<dt>
<i>interface-name</i></dt>
<dd>
Specifies the name of the interface.</dd>
<dt>
<i>base-interface</i></dt>
<dd>
Specifies the name of an OLE Automation interface from which this derived interface inherits member functions, status codes, and interface attributes. All OLE Automation interfaces are derived from <b>IUnknown</b> or <b>IDispatch</b>.
</dd>
</dl>
<h4>Example</h4>
<pre><code>library Hello
{
 importlib("stdole32.tlb");
    [
      uuid( . . .),
      helpstring("Application object for the Hello application."),
      oleautomation,
      dual
    ]
    interface IHello : IDispatch
    {. . .} 
 </code></pre>
<h4>Remarks</h4>
<p>
The <b>oleautomation</b> attribute indicates that an interface is compatible with OLE Automation. The parameters and return types specified for its members must be OLE Automation-compatible, as listed in the following table.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=31%>Type</th>
<th align=left width=69%>Description</th>
</tr>
<tr valign=top>
<td width=31%><b>boolean</b></td>
<td width=69%>The MIDL base type <b>boolean </b>is incompatible with the <b>oleautomation </b>attribute. Use VARIANT_BOOL instead.</td>
</tr>
<tr valign=top>
<td width=31%><b>unsigned char</b></td>
<td width=69%>8-bit unsigned data item.</td>
</tr>
<tr valign=top>
<td width=31%><b>Double</b></td>
<td width=69%>64-bit IEEE floating-point number.</td>
</tr>
<tr valign=top>
<td width=31%><b>Float</b></td>
<td width=69%>32-bit IEEE floating-point number.</td>
</tr>
<tr valign=top>
<td width=31%><b>Int</b></td>
<td width=69%>Integer whose size is system dependent. On 32-bit platforms, MIDL treats <b>int </b>as a 32-bit signed integer.</td>
</tr>
<tr valign=top>
<td width=31%><b>Long</b></td>
<td width=69%>32-bit signed integer.</td>
</tr>
<tr valign=top>
<td width=31%><b>Short</b></td>
<td width=69%>16-bit signed integer.</td>
</tr>
<tr valign=top>
<td width=31%><b>BSTR</b></td>
<td width=69%>Length-prefixed string, as described in the OLE Automation topic <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_bstr">
</object><a href=JavaScript:alink_1.Click()>BSTR</a>.</td>
</tr>
<tr valign=top>
<td width=31%><b>CY</b></td>
<td width=69%>(Formerly CURRENCY) 8-byte fixed-point number.</td>
</tr>
<tr valign=top>
<td width=31%><b>DATE</b></td>
<td width=69%>64-bit floating-point fractional number of days since December 30, 1899.</td>
</tr>
<tr valign=top>
<td width=31%><b>SCODE</b></td>
<td width=69%>Built-in error type that corresponds to HRESULT.</td>
</tr>
<tr valign=top>
<td width=31%><b>Enum</b></td>
<td width=69%>Signed integer, whose size is system-dependent. In remote operations, <b>enum </b>objects are treated as 16-bit unsigned entities. Applying the <b>v1_enum</b> attribute to an <b>enum</b> type definition allows <b>enum </b>objects to be transmitted as 32-bit entities.</td>
</tr>
<tr valign=top>
<td width=31%><b>IDispatch *</b></td>
<td width=69%>Pointer to<b> IDispatch</b> interface (VT_DISPATCH).</td>
</tr>
<tr valign=top>
<td width=31%><b>IUnknown *</b></td>
<td width=69%>Pointer to interface that is not derived from <b>IDispatch</b> (VT_UNKNOWN). (Any OLE interface can be represented by its <b>IUnknown </b>interface.)</td>
</tr>
</table><br>
<p>
A parameter is compatible with OLE Automation if its type is an OLE Automation-compatible type, a pointer to an OLE Automation-compatible type, or a SAFEARRAY of an OLE Automation-compatible type.</p>
<p>
A return type is compatible with OLE Automation if its type is an HRESULT, SCODE or <b>void</b>. However, MIDL requires that interface methods return either HRESULT or SCODE. Returning <b>void</b> generates a compiler error.</p>
<p>
A member is compatible with OLE Automation if its return type and all its parameters are OLE-Automation compatible.</p>
<p>
An interface is compatible with OLE Automation if it is derived from <b>IDispatch</b> or<b> IUnknown</b>, it has the <b>oleautomation</b> attribute, and all of its VTBL entries are OLE-Automation compatible. For 32-bit platforms, the calling convention for all methods in the interface must be STDCALL. For 16-bit systems, all methods must have the CDECL calling convention. </p>
<p>
Every <b>dispinterface</b> is implicitly OLE Automation-compatible. Therefore you should not use the <b>oleautomation</b> attribute on <b>dispinterfaces</b>. </p>
<p>
The <b>oleautomation</b> attribute is not available when you compile using the MIDL compiler <b>/<a href="mi-cmdln_4tk6.htm">osf</a></b> switch.</p>
<h4>Flags</h4>
<p>
TYPEFLAG_FOLEAUTOMATION</p>
<h4>See Also</h4>
<p>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_odl_file_syntax">
</object><a href=JavaScript:alink_2.Click()>ODL File Syntax</a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_odl_file_example">
</object><a href=JavaScript:alink_3.Click()>ODL File Example</a>, <a href="mi-files_7jl8.htm">Generating a Type Library With MIDL</a>, <a href="mi-files_6q3m.htm">Differences Between MIDL and MKTYPLIB</a>, <a href="mi-laref_49v0.htm"><b>IDL</b></a>, <a href="mi-laref_2g10.htm"><b>uuid</b></a></p>
<p>&nbsp;</p></body>
</HTML>
