<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>library</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_library"></a>library</h1>
<p>
<b>[uuid&nbsp;</b>[,&nbsp;<i>optional-attribute-list</i>]<b>]&nbsp;library&nbsp;</b><i>libname<b>&nbsp;</b></i><b>{</b><i>definitions</i><b>};</b>
<dl>
<dt>
<i>optional-attribute-list</i></dt>
<dd>
Specifies additional attributes that apply to the entire<b> library </b>statement. Allowable attributes include <b>control, helpcontext, helpfile,</b> <b>helpstring</b>, <b>hidden</b>, <b>lcid</b>, <b>restricted</b>, and <b>version</b>.</dd>
<dt>
<i>libname</i></dt>
<dd>
The name by which the type library is known.</dd>
<dt>
<i>definitions</i></dt>
<dd>
Descriptions of any imported libraries, data types, modules, interfaces, dispinterfaces, and coclasses relevant to the object being exposed. 
</dd>
</dl>
<h4>Example</h4>
<pre><code>[uuid(. . .), helpstring("Hello 2.0 Type Library"), 
    lcid(0x0409), version(2.0)] 
library Hello 
{. . .}; 
 </code></pre>
<h4>Remarks</h4>
<p>
The library statement contains all the information that the MIDL compiler uses to generate a type library. In addition to elements defined inside of the library block, statements inside the library block can use elements that are declared outside of the library block by using those elements as base types, inheriting from those elements, or by simply referencing them on a line, as follows:</p>
<pre><code>interface MyFace {. . .};
[library attributes] library
{
interface My Face;
};
</code></pre>
<p>
The MIDL compiler will create a type library that includes definitions for every element inside the library block, plus definitions for any elements defined outside and referenced from within the library block.</p>
<p>
For information on generating both a type library and proxy stubs and headers from a single IDL file see <a href="mi-files_6l0l.htm">Generating a Proxy DLL and a Type Library From a Single IDL File</a>.</p>
<h4>See Also</h4>
<p>
<a href="mi-files_7jl8.htm">Generating a Type Library With MIDL</a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_contents_of_a_type_library">
</object><a href=JavaScript:alink_1.Click()>Contents of a Type Library</a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_odl_file_syntax">
</object><a href=JavaScript:alink_2.Click()>ODL File Syntax</a></p>
<p>&nbsp;</p></body>
</HTML>
