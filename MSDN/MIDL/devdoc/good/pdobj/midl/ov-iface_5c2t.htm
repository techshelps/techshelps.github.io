<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface Definition (IDL) File</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_interface_definition_idl_file"></a>Interface Definition (IDL) File</h1>
<p>
By convention, the file that contains interface and type library definitions is called an IDL file, and has an .idl extension. In reality, the MIDL compiler will parse an interface definition file regardless of its file name extension. An interface is identified by the keyword <a href="mi-laref_1hut.htm"><b>interface</b></a>.</p>
<p>
Each interface consists of a header, which contains attributes that apply to the entire interface, and a body, which contains the remaining interface definitions.</p>
<p>
The interface header has the following format:</p>
<p>
<b>[</b><i> interface-attribute-list</i><b>]</b> <b>interface</b> <i>interface-name</i></p>
<p>
See <a href="ov-iface_3dmb.htm">IDL Attributes</a> for a summary of attributes that can replace <i>interface-attribute-list</i> in an interface header. </p>
<p>
The interface body, which is enclosed in braces ({ }), contains the data types that will be used in remote procedure calls and prototypes for the functions that will be executed remotely. An interface body can contain imports, pragmas, constant declarations, type declarations, and function declarations. Except in OSF-compatibility mode, the MIDL compiler also allows implicit declarations in the form of variable definitions.</p>
<p>
Note that the OSF-DCE specification for RPC interfaces does not allow multiple interfaces. Therefore, if you are compiling in MIDL's OSF-compatibility mode (<a href="mi-cmdln_4tk6.htm"><b>/osf</b></a>), your IDL file can have only one interface.</p>
<p>
For more information on IDL syntax and restrictions, see the reference page for <a href="mi-laref_49v0.htm">IDL</a> in the MIDL Language Reference.</p>
<p>
For details on using the MIDL compiler to produce type libraries, see <a href="mi-files_7jl8.htm">Generating a Type Library with MIDL</a>. </p>
<p>&nbsp;</p></body>
</HTML>
