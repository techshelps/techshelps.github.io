<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>out</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_out_idl"></a>out</h1>
<p>
[&nbsp;<b>[</b><i>function-attribute-list</i><b>]&nbsp;</b>]&nbsp;<i>type-specifier&nbsp;</i>[<i>pointer-declarator</i>]&nbsp;<i>function-name</i><b>(</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>[&nbsp;out&nbsp;</b>[&nbsp;<b>,</b>&nbsp;<i>parameter-attribute-list</i>&nbsp;]&nbsp;<b>]</b>&nbsp;<i>type-specifier&nbsp;</i>[<i>declarator</i>]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>,</b>&nbsp;<b>...</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;<b>);</b>
<dl>
<dt>
<i>function-attribute-list</i></dt>
<dd>
Specifies zero or more attributes that apply to the function. Valid function attributes are <b>callback</b>, <b>local</b>; the pointer attribute <b>ref</b>, <b>unique</b>, or <b>ptr</b>; and the usage attributes <b>string</b>, <b>ignore</b>, and <b>context_handle</b>.</dd>
<dt>
<i>type-specifier</i></dt>
<dd>
Specifies a <b>base_type</b>, <b>struct</b>, <b>union</b>, or <b>enum</b> type or type identifier. An optional storage specification can precede <i>type-specifier</i>.</dd>
<dt>
<i>pointer-declarator</i></dt>
<dd>
Specifies zero or more pointer declarators. A pointer declarator is the same as the pointer declarator used in C; it is constructed from the <b>*</b> designator, modifiers such as <b>far</b>, and the qualifier <b>const</b>.</dd>
<dt>
<i>function-name</i></dt>
<dd>
Specifies the name of the remote procedure.</dd>
<dt>
<i>parameter-attribute-list</i></dt>
<dd>
Specifies zero or more attributes appropriate for a specified parameter type. Parameter attributes with the <b>out</b> attribute can also take the directional attribute <b>out</b>; the field attributes <b>first_is</b>, <b>last_is</b>, <b>length_is</b>, <b>max_is</b>, <b>size_is</b>, and <b>switch_type</b>; the pointer attribute <b>ref</b>, <b>unique</b>, or <b>ptr</b>; and the usage attributes <b>context_handle</b> and <b>string</b>. The usage attribute <b>ignore</b> cannot be used as a parameter attribute. Separate multiple attributes with commas.</dd>
<dt>
<i>declarator</i></dt>
<dd>
Specifies standard C declarators, such as identifiers, pointer declarators, and array declarators. For more information, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_pointers">
</object><a href=JavaScript:alink_1.Click()><b>pointers</b></a> and <a href="mi-laref_0vzl.htm"><b>arrays</b></a>. The parameter declarator in the function declarator, such as the parameter name, is optional.
</dd>
</dl>
<h4>Example</h4>
<pre><code>HRESULT MyFunction([out] short * pcount); 
 </code></pre>
<h4>Remarks</h4>
<p>
The <b>out</b> attribute identifies pointer parameters that are returned from the called procedure to the calling procedure (from the server to the client).</p>
<p>
The <b>out</b> attribute indicates that a parameter that acts as a pointer and its associated data in memory are to be passed back from the called procedure to the calling procedure.</p>
<p>
The <b>out</b> attribute must be a pointer. DCE IDL compilers require the presence of an explicit <b>*</b> as a pointer declarator in the parameter declaration. Microsoft IDL offers an extension that drops this requirement and allows an array or a previously defined pointer type.</p>
<p>
A related attribute, <b>in</b>, indicates that the parameter is passed from the calling procedure to the called procedure. The <b>in</b> and <b>out</b> attributes specify the direction in which the parameters are passed. A parameter can be defined as <b>in</b>-only, <b>out</b>-only, or <b>in</b>, <b>out</b>.</p>
<p>
An <b>out</b>-only parameter is assumed to be undefined when the remote procedure is called and memory for the object is allocated by the server. Since top-level pointer/parameters must always point to valid storage, and therefore cannot be null, <b>out</b> cannot be applied to top-level <b>unique</b> or <b>ptr</b> pointers. Parameters that are <b>ref</b> pointers must be either <b>in</b> or <b>in</b>, <b>out</b> parameters.</p>
<h4>See Also</h4>
<p>
<a href="mi-laref_081a.htm"><b>in</b></a>, <a href="mi-laref_52cm.htm"><b>ref</b></a></p>
<p>&nbsp;</p></body>
</HTML>
