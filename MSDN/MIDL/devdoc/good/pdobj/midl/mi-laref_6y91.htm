<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>enable_allocate</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_enable_allocate"></a>enable_allocate</h1>
<h4>Remarks</h4>
<p>
The keyword <b>enable_allocate</b> specifies that the server stub code should enable the stub memory management environment. In default mode, the server stub enables the memory environment only when the <b>enable_allocate</b> attribute is used. The memory management environment must be enabled before memory can be allocated using <b>RpcSmAllocate</b>. In <b>osf</b> mode (when you compile using the /<b>osf</b> switch), the stub enables this environment automatically when the remote operation includes full pointers or pointers that provide for the stub or the user to allocate memory, or on request when the <b>enable_allocate</b> attribute is used.</p>
<p>
The client side stub may be sensitive to the <b>Rpcss</b> memory management environment. If a sensitive client stub is executed when the <b>Rpcss</b> package is disabled, the default user allocator/deallocators are called (for example, <b>midl_user_allocate</b>/<b>midl_user_free</b>). When enabled, the <b>Rpcss</b> package uses the allocator/deallocator pair from the package. In the default mode, the client is sensitive only when the <b>enable_allocate</b> attribute is used. Typically, the client side stub operates in the disabled environment. In <b>osf</b> mode (when you compile using the /<b>osf</b> switch), the client is always sensitive to the <b>Rpcss</b> memory management environment and, therefore, the <b>enable_allocate</b> attribute will not affect the client stubs. </p>
<h4>See Also</h4>
<p>
<a href="mi-laref_1e5o.htm"><b>ACF</b></a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_rpcsmdisableallocate">
</object><a href=JavaScript:alink_1.Click()><b>RpcSmDisableAllocate</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_rpcsmenableallocate">
</object><a href=JavaScript:alink_2.Click()><b>RpcSmEnableAllocate</b></a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_rpcsmfree">
</object><a href=JavaScript:alink_3.Click()><b>RpcSmFree</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
