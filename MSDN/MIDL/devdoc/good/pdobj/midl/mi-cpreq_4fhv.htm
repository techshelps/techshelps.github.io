<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C-Compiler Definitions for Proxy/Stubs</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_c_compiler_definitions_for_proxy_stubs"></a>C-Compiler Definitions for Proxy/Stubs</h1>
<p>
The header file RPCPROXY.H includes the following macro definitions, which you can invoke with the /D (or -D) preprocessor switch at compile time:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>MACRO</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>REGISTER_PROXY_DLL</td>
<td width=52%>Generates DllMain, DllRegisterServer, and DllUnregisterServer functions for automatically registering a proxy DLL.</td>
</tr>
<tr valign=top>
<td width=48%>PROXY_CLSID=&lt;clsid&gt;</td>
<td width=52%>Specifies a class ID for the server. If this macro is not defined, the default CLSID is the first interface ID that the MIDL compiler encounters in the IDL specification for the Proxy/Stub server.</td>
</tr>
<tr valign=top>
<td width=48%>PROXY_CLSID_IS={0x<i>8hexdigits</i>, 0x<i>4hexdigits</i>,0x<i>4hexdigits</i>,{0x<i>2hexdigits</i>,0x<i>2hexdigits</i>,0x<i>2hexdigits</i>,0x<i>2hexdigits</i>,0x<i>2hexdigits</i>,0x<i>2hexdigits</i>,0x<i>2hexdigits</i>,0x<i>2hexdigits</i>,}}</td>
<td width=52%>Specifies the value of the server's class ID in binary hex format.</td>
</tr>
<tr valign=top>
<td width=48%>NT35_STRICT</td>
<td width=52%>Specifies that the target platform is Windows NT 3.5. This switch disables the new functions added after the Windows NT 3.5 release.</td>
</tr>
</table><br>
<p>
By defining the REGISTER_PROXY_DLL macro when compiling DLLDATA.C, your proxy/stub marshalling DLL will automatically include default definitions for the DllMain, DllRegisterServer, and DllUnregisterServer functions.You can use these functions to self-register your proxy DLL in the system registry as described in Building and Registering the Proxy DLL in the COM Programmer's Guide.</p>
<p>
This default registration code uses the GUID of the first interface encountered as the CLSID for registering the entire proxy/stub DLL server. COM later uses this CLSID to locate and load the compiled proxy/stub server for the marshaling of any of the interfaces the server is registered to handle.  When an application makes an interface method call that crosses thread, process, or machine boundaries, COM uses the interface's IID registry entry to locate the CLSID registry entry for the proxy/stub marshaling server. It then uses this CLSID to load the server (if it isn't already loaded) so the Interface call can then be marshaled.</p>
<p>
Use the PROXY_CLSID=&lt;clsid&gt; macro when you want to explicitly specify the proxy/stub server's CLSID rather than rely on the default CLSID. For example, if you are building a standard marshaling DLL as your own in-process COM server, or if you need to define your own DllMain to handle  DLL_PROCESS_ATTACH.</p>
<p>
Use PROXY_CLSID_IS= macro instead of PROXY_CLSID to define the value of the CLSID in the binary hexadecimal format that the DEFINE_GUID macro uses.</p>
<p>
Also note that when the default DllRegisterServer function runs, it registers the server with ThreadingModel=Both.</p>
<p>
The following makefile example uses the REGISTER_PROXY_DLL and PROXY_CLSID= macros:</p>
<pre><code>example.h example.tlb example_p.c example_i.c dlldata.c : example.idl
    midl example.idl
dlldata.obj : dlldata.c
    CL /c /DWIN32 /DREGISTER_PROXY_DLL dlldata.c
example.obj : example_p.c
    CL /c /DWIN32 /DREGISTER_PROXY_DLL \
    /DPROXY_CLSID=7a98c250-6808-11cf-b73b-00aa00b677a7
example_p.c
iids.obj : example_i.c
PROXYSTUBOBJS = dlldata.obj example.obj iids.obj
PROXYSTUBLIBS = kernel32.lib rpcndr.lib rpcns4.lib rpcrt4.lib uuid.lib
proxy.dll : $(PROXYSTUBOBJX) example.def
    link /dll /out:proxy.dll /def:example.def
        $(PROXYSTUBOBJS) $(ORIXYSTUBLIBS)
    regsvr32 /s proxy.dll
</code></pre>
<p>
For more information on the /D preprocessor option, see your C compiler documentation .</p>
<p>&nbsp;</p></body>
</HTML>
