<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>code</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_code"></a>code</h1>
<p>
<b>[ code </b>[<b> , </b><i>ACF-interface-attributes </i>]<i> </i><b>] interface</b> <i>interface-name</i><br>
<b>{<br>
&nbsp;&nbsp;&nbsp;&nbsp;</b>[ <b>include</b> <i>filename-list </i><b>; </b>] <b>...</b> <br>
&nbsp;&nbsp;&nbsp;&nbsp;[ <b>typedef [</b><i>type-attribute-list</i><b>]</b> <i>typename</i><b>;</b> ] <b>...</b> <br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;[ <b>[ code </b>[<b> , </b><i>ACF-function-attributes </i>]<i> </i><b>]</b> <i>function-name </i><b>(</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;<b>&nbsp;&nbsp;&nbsp;&nbsp;[ </b><i>ACF-parameter-attributes </i><b>]</b> <i>parameter-name </i><b>;</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;<b>&nbsp;&nbsp;&nbsp;&nbsp;...</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;</b>]<br>
&nbsp;&nbsp;&nbsp;&nbsp;<b>...</b><br>
<b>}</b>
<dl>
<dt>
<i>ACF-interface-attributes</i></dt>
<dd>
Specifies a list of one or more attributes that apply to the interface as a whole. Valid attributes include either <b>auto_handle</b> or <b>implicit_handle</b> and either <b>code</b>, <b>nocode</b>, or <b>optimize</b>. When two or more interface attributes are present, they must be separated by commas. </dd>
<dt>
<i>interface-name</i></dt>
<dd>
Specifies the name of the interface. In DCE-compatibility mode, the interface name must match the name of the interface specified in the IDL file. When you use the MIDL compiler switch <b>/acf</b>, the interface name in the ACF and the interface name in the IDL file can be different.</dd>
<dt>
<i>filename-list</i></dt>
<dd>
Specifies a list of one or more C-header filenames, separated by commas. You must supply the full filename, including the extension.</dd>
<dt>
<i>type-attribute-list</i></dt>
<dd>
Specifies a list of one or more attributes, separated by commas, that apply to the specified type. Valid type attributes include <b>allocate</b> and <b>represent_as</b>.</dd>
<dt>
<i>typename</i></dt>
<dd>
Specifies a type defined in the IDL file. Type attributes in the ACF can only be applied to types previously defined in the IDL file.</dd>
<dt>
<i>ACF-function-attributes</i></dt>
<dd>
Specifies zero or more attributes that apply to the function as a whole, such as <b>comm_status</b>. Function attributes are enclosed in square brackets. Separate multiple function attributes with commas.</dd>
<dt>
<i>function-name</i></dt>
<dd>
Specifies the name of the function as defined in the IDL file.</dd>
<dt>
<i>ACF-parameter-attributes</i></dt>
<dd>
Specifies ACF attributes that apply to a parameter. Note that zero, one, or more attributes can be applied to the parameter. Separate multiple parameter attributes with commas. ACF parameter attributes are enclosed in square brackets. </dd>
<dt>
<i>parameter-name</i></dt>
<dd>
Specifies a parameter of the function as defined in the IDL file. Each parameter for the function must be specified in the same sequence and using the same name as defined in the IDL file.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>code</b> attribute can appear in the ACF header or be applied to an individual function.</p>
<p>
When the <b>code</b> attribute appears in the ACF header, client stub code is generated for all remote functions that do not have the <b>nocode</b> function attribute. You can override the <b>code</b> attribute in the header for an individual function by specifying the <b>nocode</b> attribute as a function attribute.</p>
<p>
When the <b>code</b> attribute appears in the remote function's attribute list, client stub code is generated for the function. Client stub code is not generated when:
<ul>
<li>
The ACF header includes the <b>nocode</b> attribute.</li>
<li>
The <b>nocode</b> attribute is applied to the function.</li>
<li>
The <b>local</b> attribute applies to the function in the interface file.</li>
</ul>
<p>
Either <b>code</b> or <b>nocode</b> can appear in the interface or function attribute list, but the one you choose can appear only once in the list. </p>
<h4>See Also</h4>
<p>
<a href="mi-laref_1e5o.htm"><b>ACF</b></a>, <a href="mi-laref_7c6d.htm"><b>nocode</b></a></p>
<p>&nbsp;</p></body>
</HTML>
