<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>midl_user_allocate</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_midl_user_allocate_1"></a>midl_user_allocate</h1>
<p>
<b>void&nbsp;__RPC_FAR&nbsp;*&nbsp;__RPC_API&nbsp;midl_user_allocate&nbsp;(size_t</b>&nbsp;<i>cBytes</i><b>);</b>
<dl>
<dt>
<i>cBytes</i></dt>
<dd>
Specifies the count of bytes to allocate.
</dd>
</dl>
<h4>Example</h4>
<pre><code>void __RPC_FAR * __RPC_API midl_user_allocate(size_t cBytes) 
{ 
    return(malloc(cBytes)); 
} 
 </code></pre>
<h4>Remarks</h4>
<p>
Both client applications and server applications must implement the <b>midl_user_allocate</b> function, unless you are compiling in OSF-compatibility (/<b>osf</b>) mode. Applications and generated stubs call <b>midl_user_allocate</b> when dealing with objects referenced by pointers:
<ul>
<li>
The server application should call <b>midl_user_allocate</b> to allocate memory for the application&nbsp;—&nbsp;for example, when creating a new node.</li>
<li>
The server stub calls <b>midl_user_allocate</b> when unmarshalling pointed-at data into the server address space. </li>
<li>
The client stub calls <b>midl_user_allocate</b> when unmarshalling data from the server that is referenced by an <b>out </b>pointer. Note that for <b>in</b>,<b> out</b>,<b> </b>and<b> unique</b> pointers, the client stub calls <b>midl_user_allocate</b> only if the <b>unique</b> pointer value was NULL on input and changes to a non-null value during the call. If the <b>unique</b> pointer was non-null on input, the client stub writes the associated data into existing memory.</li>
</ul>
<p>
If <b>midl_user_allocate</b> fails to allocate memory, it must return a null pointer.</p>
<p>
It is recommended that <b>midl_user_allocate</b> return a pointer that is 8 bytes aligned.</p>
<h4>See Also</h4>
<p>
<a href="mi-laref_4oyt.htm"><b>allocate</b></a>, <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_midl_user_free">
</object><a href=JavaScript:alink_1.Click()><b>midl_user_free</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_pointers">
</object><a href=JavaScript:alink_2.Click()><b>pointers</b></a>, <a href="mi-laref_4ws2.htm"><b>ptr</b></a>, <a href="mi-laref_52cm.htm"><b>ref</b></a>, <a href="mi-laref_9r1h.htm"><b>unique</b></a></p>
<p>&nbsp;</p></body>
</HTML>
