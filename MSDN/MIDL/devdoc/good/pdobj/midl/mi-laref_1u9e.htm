<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>pointers</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_pointers_2"></a>pointers</h1>
<p>
MIDL supports three kinds of pointers: reference pointers, unique pointers, and full pointers. These pointers are specified by the pointer attributes <b>ref</b>, <b>unique</b>, and <b>ptr</b>.</p>
<p>
A pointer attribute can be applied as a type attribute; as a field attribute that applies to a structure member, union member, or parameter; or as a function attribute that applies to the function return type. The pointer attribute can also appear with the <b>pointer_default</b> keyword.</p>
<p>
To allow a pointer parameter to change in value during a remote function, you must provide another level of indirection by supplying multiple pointer declarators. The explicit pointer attribute applied to the parameter affects only the rightmost pointer declarator for the parameter. When there are multiple pointer declarators in a parameter declaration, the other declarators default to the pointer attribute specified by the <b>pointer_default</b> attribute. To apply different pointer attributes to multiple pointer declarators, you must define intermediate types that specify the explicit pointer attributes.</p>

<h4><a name="_rpc_default_pointer_attribute_values"></a>Default Pointer-Attribute Values</h4>
<p>
When no pointer attribute is associated with a pointer that is a parameter, the pointer is assumed to be a <b>ref</b> pointer.</p>
<p>
When no pointer attribute is associated with a pointer that is a member of a structure or union, the MIDL compiler assigns pointer attributes using the following priority rules (1 is highest):
<ol>
<li>
Attributes explicitly applied to the pointer type</li>
<li>
Attributes explicitly applied to the pointer parameter or member</li>
<li>
<b>Pointer_default</b> attribute in the IDL file that defines the type</li>
<li>
<b>Pointer_default</b> attribute in the IDL file that imports the type</li>
<li>
<b>Ptr</b> (<b>osf</b> mode); <b>unique</b> (Microsoft RPC default mode)</li>
</ol>
<p>
When the IDL file is compiled in default mode, imported files can inherit pointer attributes from importing files. This feature is not available when you compile using the /<b>osf</b> switch. For more information, see <a href="mi-laref_156c.htm"><b>import</b></a>.</p>

<h4><a name="_rpc_function_return_types"></a>Function Return Types</h4>
<p>
A pointer returned by a function must be a <b>unique</b> pointer or a full pointer. The MIDL compiler reports an error if a function result is a reference pointer, either explicitly or by default. The returned pointer always indicates new storage.</p>
<p>
Functions that return a pointer value can specify a pointer attribute as a function attribute. If a pointer attribute is not present, the function-result pointer uses the value provided as the <b>pointer_default</b> attribute.</p>

<h4><a name="_rpc_pointer_attributes_in_type_definitions"></a>Pointer Attributes in Type Definitions</h4>
<p>
When you specify a pointer attribute at the top level of a <b>typedef</b> statement, the specified attribute is applied to the pointer declarator, as expected. When no pointer attribute is specified, pointer declarators at the top level of a <b>typedef</b> statement inherits the pointer attribute type when used.</p>
<p>
DCE IDL does not allow the same pointer attribute to be explicitly applied twice&nbsp;—&nbsp;for example, in both the <b>typedef</b> declaration and the parameter attribute list. When you use the default (Microsoft-extensions) mode of the MIDL compiler, this constraint is relaxed.</p>
<h4>See Also</h4>
<p>
<a href="mi-laref_4oyt.htm"><b>allocate</b></a>, <a href="mi-laref_49v0.htm"><b>IDL</b></a>, <a href="mi-laref_156c.htm"><b>import</b></a>, <a href="mi-cmdln_4tk6.htm"><b>/osf</b></a>, <a href="mi-laref_3cdw.htm"><b>pointer_default</b></a>, <a href="mi-laref_4ws2.htm"><b>ptr</b></a>, <a href="mi-laref_52cm.htm"><b>ref</b></a>, <a href="mi-laref_9r1h.htm"><b>unique</b></a></p>
<p>&nbsp;</p></body>
</HTML>
