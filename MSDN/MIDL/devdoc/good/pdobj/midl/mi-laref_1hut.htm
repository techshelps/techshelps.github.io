<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>interface</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_interface"></a>interface</h1>
<p>
<b>[</b> <i>interface-attribute-list</i> <b>]</b> <b>interface</b><i> interface-name</i> [ <b>: </b><i>base-interface</i><b> </b>]</p>
<p>
/*IDL file <b>typedef</b> syntax */<br>
<b>typedef</b> <b>interface</b> <i>interface-name declarator-list</i>
<dl>
<dt>
<i>interface-attribute-list</i></dt>
<dd>
Specifies attributes that apply to the interface as a whole. Valid interface attributes for an IDL file include <b>endpoint</b>, <b>local</b>, <b>object</b>, <b>pointer_default</b>, <b>uuid</b>, and <b>version</b>. Valid interface attributes for an ACF include <b>encode</b>, <b>decode</b>, either <b>auto_handle</b> or <b>implicit_handle</b>, and either <b>code</b> or <b>nocode</b>.</dd>
<dt>
<i>interface-name</i></dt>
<dd>
Specifies the name of the interface. The interface name must be a unique name and must start with an alphabetic or underscore character.</dd>
<dt>
<i>base-interface</i></dt>
<dd>
Specifies the name of an interface from which this derived interface inherits member functions, status codes, and interface attributes. The derived interface does not inherit type definitions. To do this, use the <b>import</b> keyword to import the IDL file of the base interface.</dd>
<dt>
<i>declarator-list</i></dt>
<dd>
Specifies standard C declarators, such as identifiers, pointer declarators, and array declarators. For more information, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_pointers">
</object><a href=JavaScript:alink_1.Click()><b>pointers</b></a> and <a href="mi-laref_0vzl.htm"><b>arrays</b></a>. The <i>declarator-list</i> consists of one or more declarators, separated by commas.
</dd>
</dl>
<h4>Examples</h4>
<pre><code>/* use of interface keyword in IDL file for an RPC interface */ 
  [ uuid (00000000-0000-0000-0000-000000000000), 
    version (1.0) ] 
  interface remote_if_2 
  {  
  } 
 
/* use of interface keyword in ACF for an RPC interface */ 
  [ implicit_handle( handle_t xa_bhandle ) ] 
  interface remote_if_2 
  { 
  } 
 
/* use of interface keyword in IDL file for an OLE interface */ 
  [ object, uuid (00000000-0000-0000-0000-000000000000) ] 
  interface IDerivedInterface : IBaseInterface 
  {  
    import "base.idl" 
    Save(); 
  } 
 
/* use of interface keyword to define an interface pointer type */ 
  typedef interface IStorage *LPSTORAGE; 
 </code></pre>
<h4>Remarks</h4>
<p>
The <b>interface</b> keyword specifies the name of the interface. The interface name must be provided in both the IDL file and the ACF.</p>
<p>
The interface names in the IDL file and ACF must be the same, except when you use the MIDL compiler switch <b>/acf</b>. For more information, see <a href="mi-laref_1e5o.htm"><b>/acf</b></a>.</p>
<p>
The interface name forms the first part of the name of interface-handle data structures that are parameters to the RPC run-time functions. For more information, see <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_rpc_if_handle">
</object><a href=JavaScript:alink_2.Click()><b>RPC_IF_HANDLE</b></a>.</p>
<p>
If the interface header includes the <b>object</b> attribute to indicate an OLE interface, it must also include the <b>uuid</b> attribute and must specify the base OLE interface from which it is derived. For more information about OLE interfaces, see <a href="mi-laref_52yc.htm"><b>object</b></a>. </p>
<p>
You can also use the <b>interface</b> keyword with the <a href="mi-laref_9l7q.htm"><b>typedef</b></a> keyword to define an interface data type. </p>
<h4>See Also</h4>
<p>
<a href="mi-cmdln_3kiu.htm"><b>ACF</b></a>, <a href="mi-laref_4sqc.htm"><b>endpoint</b></a>, <a href="mi-laref_49v0.htm"><b>IDL</b></a>, <a href="mi-laref_5woc.htm"><b>local</b></a>, <a href="mi-laref_3cdw.htm"><b>pointer_default</b></a>, <a href="mi-laref_2g10.htm"><b>uuid</b></a>, <a href="mi-laref_1df2.htm"><b>version</b></a></p>
<p>&nbsp;</p></body>
</HTML>
