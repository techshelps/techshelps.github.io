<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>byte_count</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_byte_count"></a>byte_count</h1>
<p>
[ <i>function-attribute-list </i>] <i>function-name</i><b>(<br>
</b>&nbsp;&nbsp;&nbsp;&nbsp;<b>[byte_count(</b><i>length-variable-name</i><b>)] </b><i>pointer-parameter-name</i><b>);<br>
</b>&nbsp;&nbsp;&nbsp;&nbsp;<b>...</b><br>
<b>);</b>
<dl>
<dt>
<i>function-attribute-list</i></dt>
<dd>
Specifies zero or more ACF function attributes.</dd>
<dt>
<i>function-name</i></dt>
<dd>
Specifies the name of the function defined in the IDL file. The function name is required.</dd>
<dt>
<i>length-variable-name</i></dt>
<dd>
Specifies the name of the <b>in</b>-only parameter that specifies the size, in bytes, of the memory area referenced by <i>pointer-parameter-name</i>.</dd>
<dt>
<i>pointer-parameter-name</i></dt>
<dd>
Specifies the name of the <b>out</b>-only pointer parameter defined in the IDL file.
</dd>
</dl>
<h4>Examples</h4>
<pre><code>/* IDL file */ 
HRESULT proc1([in] unsigned long length, [out] struct foo * pFoo);  
 
/* ACF file */ 
proc1([byte_count(length)] pFoo);  
 </code></pre>
<h4>Remarks</h4>
<p>
<b>Note</b>&nbsp;&nbsp;The ACF attribute <b>byte_count</b> represents a Microsoft extension to DCE IDL. Therefore, this attribute is not available when you use the MIDL compiler switch /<b>osf</b>.</p>
<p>
The <b>byte_count</b> attribute is a parameter attribute that associates a size, in bytes, with the memory area indicated by the pointer.</p>
<p>
Memory referenced by the pointer parameter is contiguous and is not allocated or freed by the client stubs. This feature of the <b>byte_count</b> attribute lets you create a persistent buffer area in client memory that can be reused during more than one call to the remote procedure.</p>
<p>
The ability to turn off the client stub memory allocation lets you tune the application for efficiency. For example, the <b>byte_count</b> attribute can be used by service-provider functions that use Microsoft RPC. When a user application calls the service-provider API and provides a pointer to a buffer, the service provider can pass the buffer pointer on to the remote function and reuse the buffer during multiple remote calls without forcing the user to reallocate the memory area. </p>
<p>
The memory area can contain complex data structures that consist of multiple pointers. Because the memory area is contiguous, the application does not have to make many calls to individually free each pointer and structure. The memory area can be allocated or freed with one call to the memory allocation or free routine. </p>
<p>
The buffer must be an <b>out</b>-only parameter, while the buffer length in bytes must be an <b>in</b>-only parameter.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Specify a buffer that is large enough to contain all the <b>out</b> parameters. Pointers are unmarshalled on a 4-byte aligned boundary. Therefore, the alignment padding the stubs will perform must be accounted for in the space for the buffer. In addition, packing levels used during C-language compilation can vary. Use a byte count value that accounts for additional packing bytes added for the packing level used during C-language compilation. </p>
<h4>See Also</h4>
<p>
<a href="mi-laref_1e5o.htm"><b>ACF</b></a>, <a href="mi-laref_081a.htm"><b>in</b></a>, <a href="mi-laref_2njn.htm"><b>length_is</b></a>, <a href="mi-laref_48vg.htm"><b>out</b></a>, <a href="mi-laref_3zxv.htm"><b>size_is</b></a></p>
<p>&nbsp;</p></body>
</HTML>
