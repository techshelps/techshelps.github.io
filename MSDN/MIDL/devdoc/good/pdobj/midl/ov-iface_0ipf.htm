<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MIDL Base Types</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_midl_base_types"></a>MIDL Base Types</h1>
<p>
To be transmitted over a network, all data types must resolve to a MIDL base type or predefined type.</p>
<p>
MIDL supports the following base and predefined types:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=23%>Data Type</th>
<th align=left width=51%>Description</th>
<th align=left width=26%>Default sign</th>
</tr>
<tr valign=top>
<td width=23%><b>boolean</b></td>
<td width=51%>8 bits. Not compatible with <b>oleautomation </b>interfaces; use VARIANT_BOOL instead.</td>
<td width=26%>unsigned</td>
</tr>
<tr valign=top>
<td width=23%><b>byte</b></td>
<td width=51%>8 bits</td>
<td width=26%>(not applicable)</td>
</tr>
<tr valign=top>
<td width=23%><b>char</b></td>
<td width=51%>8 bits</td>
<td width=26%>unsigned</td>
</tr>
<tr valign=top>
<td width=23%><b>double</b></td>
<td width=51%>64-bit floating point number</td>
<td width=26%>(not applicable)</td>
</tr>
<tr valign=top>
<td width=23%><b>error_status_t</b></td>
<td width=51%>32-bit unsigned integer for returning status values for error handling.</td>
<td width=26%>unsigned</td>
</tr>
<tr valign=top>
<td width=23%><b>float</b></td>
<td width=51%>32-bit floating point number</td>
<td width=26%>(not applicable)</td>
</tr>
<tr valign=top>
<td width=23%><b>handle_t</b></td>
<td width=51%>primitive handle type for binding</td>
<td width=26%>(not applicable)</td>
</tr>
<tr valign=top>
<td width=23%><b>hyper</b></td>
<td width=51%>56-bit integer</td>
<td width=26%>signed</td>
</tr>
<tr valign=top>
<td width=23%><b>int</b></td>
<td width=51%>32-bit integer. On 16-bit platforms, cannot appear in remote functions without a size qualifier such as <b>short</b>,<b> small</b>, <b>long </b>or<b> hyper</b>.</td>
<td width=26%>signed</td>
</tr>
<tr valign=top>
<td width=23%><b>long</b></td>
<td width=51%>32-bit integer</td>
<td width=26%>signed</td>
</tr>
<tr valign=top>
<td width=23%><b>short</b></td>
<td width=51%>16-bt integer</td>
<td width=26%>signed</td>
</tr>
<tr valign=top>
<td width=23%><b>small</b></td>
<td width=51%>8-bit integer</td>
<td width=26%>signed</td>
</tr>
<tr valign=top>
<td width=23%><b>void</b></td>
<td width=51%>Indicates that procedure does not return a value.</td>
<td width=26%>(not applicable)</td>
</tr>
<tr valign=top>
<td width=23%><b>void *</b></td>
<td width=51%>32-bit pointer for context handles only.</td>
<td width=26%>(not applicable)</td>
</tr>
<tr valign=top>
<td width=23%><b>wchar_t</b></td>
<td width=51%>16-bit predefined type for wide characters.</td>
<td width=26%>unsigned</td>
</tr>
</table><br>
<h4>Signed vs. Unsigned Types</h4>
<p>
Compilers that use different defaults for signed and unsigned types can cause software errors in your distributed application. You can avoid these problems by explicitly declaring your character types as signed or unsigned. Note that DCE IDL compilers do not recognize the keyword <b>signed</b>. Therefore, this feature is not available when you use the MIDL compiler /<b>osf</b> switch.</p>
<p>
MIDL defines the <b>small</b> type to take the same default sign as the <b>char</b> type in the target C compiler. If the compiler assumes that <b>char</b> is unsigned, <b>small</b> will also be defined as unsigned. Many C compilers let you change the default as a command-line option. For example, in the Microsoft® Visual C++® development environment, the <b>/J</b> command-line option changes the default sign of <b>char</b> from signed to unsigned.</p>
<p>
You can also control the sign of variables of type <b>char</b> and <b>small</b> with the MIDL compiler command-line switch <a href="mi-cmdln_05o2.htm"><b>/char</b></a>. This switch allows you to specify the default sign used by your compiler. The MIDL compiler explicitly declares the sign of all <b>char</b> types that do not match your C-compiler default type in the generated header file.</p>
<p>&nbsp;</p></body>
</HTML>
