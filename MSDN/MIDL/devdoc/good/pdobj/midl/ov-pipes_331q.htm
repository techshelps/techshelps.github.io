<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Server-Side Pipe Implementation</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_server_side_pipe_implementation"></a>Server-Side Pipe Implementation</h1>
<p>
The server application performs pipe transfer by calling the server stub's <i>pull</i> or <i>push</i> routine in a loop. Normal termination of the loop occurs when a zero-sized chunk of data is passed.</p>
<pre><code>//file: server.c (fragment)
uc_server.c
#define PIPE_TRANSFER_SIZE    100 /* Transfer 100 pipe elements at one time */
 
void InPipe(LONG_PIPE     long_pipe )
{
    long   local_pipe_buf[PIPE_TRANSFER_SIZE];
    ulong   actual_transfer_count = PIPE_TRANSFER_SIZE;
 
    while(actual_transfer_count &gt; 0) /* Loop to get all 
                                        the pipe data elements */
    {
        long_pipe.pull(    long_pipe.state,
                            local_pipe_buf,
                            PIPE_TRANSFER_SIZE,
                            &amp;actual_transfer_count);
        /* process the elements */
    } // end while
    return;
} //end InPipe
 
void OutPipe(LONG_PIPE *long_pipe )
{
 long   *long_pipe_data;
 ulong   index = 0;
 ulong   elts_to_send = PIPE_TRANSFER_SIZE;
 
/* Allocate memory for the data to be passed back in the pipe */
 long_pipe_data = (long *)malloc( sizeof(long) * PIPE_SIZE );
    
 while(elts_to_send &gt;0) /* Loop to send pipe data elements */
 {
  if (index &gt;= PIPE_SIZE)
     elts_to_send = 0;
  else
    {
     if ( (index + PIPE_TRANSFER_SIZE) &gt; PIPE_SIZE )
          elts_to_send = PIPE_SIZE - index;
     else
          elts_to_send = PIPE_TRANSFER_SIZE;
    }
                    
  long_pipe-&gt;push( long_pipe-&gt;state,
                   &amp;(long_pipe_data[index]),
                   elts_to_send ); 
  index += elts_to_send;
 
  } //end while
 
 free((void *)long_pipe_data);
 
 return;
}
</code></pre>
<h4>See Also</h4>
<p>
<a href="mi-laref_3b39.htm"><b>pipe</b></a>, <a href="mi-cmdln_08bt.htm">/<b>Oi</b></a></p>
<p>&nbsp;</p></body>
</HTML>
