<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C-Compiler Requirements for MIDL</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_rpc_c_compiler_requirements_for_midl"></a>C-Compiler Requirements for MIDL</h2>
<p>
The MIDL compiler requires the C compiler to support a packing level of 1, 2, 4, or 8. The command-line option for Microsoft C compilers that controls packing is <b>/Zp</b><i>level</i>, where <i>level</i> is the packing level 1, 2, 4, or 8. The following rules govern the alignment of compound types:
<ul>
<li>
Base-type fields of <i>size</i> &lt; <i>packing level</i> start on a (0 modulo <i>size</i>) address.</li>
<li>
Base-type fields of <i>size</i> &gt;= <i>packing level</i> start on a (0 modulo <i>packing level</i>) address.</li>
<li>
The compound type itself (and any field of compound type) is aligned according to the strictest alignment requirement on any of its fields.</li>
<li>
Compound types are padded to the next (0 modulo <i>level</i>) address. This padding appears in the size returned by the C SIZEOF macro.</li>
</ul>
<p>
As an example, consider a compound type consisting of a 1-byte character, an integer 4 bytes long, and a 1-byte character:</p>
<pre><code>struct mystructtype {    
    char c1;  /* requires 1 byte  */
    long l2;  /* requires 4 bytes */
    char c3;  /* requires 1 byte  */
 } mystruct;
 </code></pre>
<p>
For packing level 4, the structure <i>mystruct</i> is aligned on a (0 mod 4) boundary and sizeof(struct mystructtype) = 12. </p>
<p>
For packing level 2, the structure <i>mystruct</i> is aligned on a (0 mod 2) boundary and sizeof(struct mystructtype) = 8.</p>
<p>&nbsp;</p></body>
</HTML>
