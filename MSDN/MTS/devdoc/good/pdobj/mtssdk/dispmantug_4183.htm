<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Allocating Resources</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<p>
<a name="asallocatingresources"></a>Allocating Resources</p>
<p>
Each time a resource dispenser chooses to allocate a resource from its holder, the following occurs:
<ol>
<li>
The resource dispenser declares a resource type identifier (RESTYPID), which describes the type of resource required.</li>
<li>
The resource dispenser calls the holder's <b>IHolder::AllocResource</b> method passing this RESTYPID.</li>
<li>
The holder generates a candidate list from the available resources. Candidates are resources which are either not enlisted in a transaction, or already enlisted in the calling object's transaction.</li>
<li>
These candidates are individually passed to the resource dispenser's <b>IDispenserDriver::RateResource</b> interface where they are rated (on a scale of 0 to 100) by how well the candidate resource matches the desired RESTYPID.</li>
<li>
The holder chooses the resource which the resource dispenser rates as highest.</li>
<li>
The resource dispenser can terminate the rating loop early by assigning the candidate a resource rating of 100 (a perfect fit). A rating of 100 would normally be reserved for candidate resources that are already properly enlisted, unless the resource dispenser concludes that enlistment is an inexpensive operation. If all candidate resources (if any) are rated 0 (unuseable) then a new resource will be created by calling <b>IDispenserDriver::CreateResource</b>.</li>
<li>
If the resource chosen previously is not already enlisted in the calling object's transaction, then the resource dispenser's <b>IDispenserDriver::EnlistResource</b> interface is called.</li>
<li>
The <b>AllocResource</b> method call returns to the resource dispenser with the enlisted resource.</li>
</ol>
<p>&nbsp; </p></body>
</HTML>
