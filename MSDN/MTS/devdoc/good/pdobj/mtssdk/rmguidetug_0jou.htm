<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Updating Two Databases from a Single Application</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asupdatingtwodatabasesfromasingleapplication"></a>Updating Two Databases from a Single Application</h1>
<p>
MS DTC is useful when an application must update two or more independent but related databases that are controlled by different resource managers. Consider an order entry application that registers an order and generates a bill for the customer. Order information is kept in the Order Item database. Billing information is kept in the Billing database. When an order is placed, both the Order Item database and the Billing database must be updated. The application developer can use MS DTC to ensure that these databases remain consistent by:
<ol>
<li>
Starting an MS DTC transaction.</li>
<li>
Enlisting the Order Item database and the Billing database on the transaction.</li>
<li>
Updating each of the databases by invoking the appropriate SQL statements or database-stored procedures.</li>
<li>
Committing the MS DTC transaction.</li>
</ol>
<p>
<b>Updating Two Databases from a Single Application</b></p>
<p>
<img src="images/virm01.gif" border=0></p>
<p>
When the transaction commits, MS DTC ensures that the updates to both databases are committed. In the event of a client application failure, a network connection failure, an Order Item database server failure, a Billing database server failure, or any combination of these failures, MS DTC aborts the transaction and instructs the resource managers to undo the effects of the transaction from both databases.</p>
<p>&nbsp; </p></body>
</HTML>
