<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IResourceManager::Enlist</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<p>
<a name="asiresourcemanagerenlist"></a>IResourceManager::Enlist</p>
<p>
Enlists a resource manager in a transaction.</p>
<pre><b>HRESULT Enlist (</b></pre>
<table cellspacing=5 cols=2>
<tr valign=top>
<td width=56%><pre><b>ITransaction *</b></pre>
</td>
<td width=44%><pre><i>pTransaction</i><b>,</b></pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre><b>ITransactionResourceAsync *</b></pre>
</td>
<td width=44%><pre><i>pRes</i><b>,</b></pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre><b>GUID *</b></pre>
</td>
<td width=44%><pre><i>pUOW</i><b>,</b></pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre><b>LONG *</b></pre>
</td>
<td width=44%><pre><i>pisoLevel</i><b>,</b></pre>
</td>
</tr>
<tr valign=top>
<td width=56%><pre><b>ITransactionEnlistmentAsync **</b></pre>
</td>
<td width=44%><pre><i>ppEnlist</i><b>);</b></pre>
</td>
</tr>
</table><br>
<p>
<b>Parameters</b></p>
<p>
<i>pTransaction</i> [in]<br>
Pointer to the transaction object in which the resource manager wishes to enlist.</p>
<p>
<i>pRes</i> [in]<br>
Pointer to the resource manager's <b>ITransactionResourceAsync</b> interface. The resource manager developer must implement the methods on this interface.</p>
<p>
<i>PUOW </i>[in/out]<i><br>
</i>Pointer to the transaction identifier GUID.</p>
<p>
<i>pisoLevel</i> [out]<br>
Pointer to the value of the client specified isolation level.</p>
<p>
<i>ppEnlist</i> [out]<br>
Pointer to the pointer to the <b>ITransactionEnlistAsync</b> interface on the enlistment object.</p>
<p>
<b>Return Values</b></p>
<p>
S_OK<b><br>
</b>Success.</p>
<p>
E_INVALIDARG<b><br>
</b>One or more parameters were invalid.</p>
<p>
E_OUTOFMEMORY<br>
Unable to allocate memory.</p>
<p>
E_UNEXPECTED<br>
Something unexpected happened.</p>
<p>
XACT_E_ABORT<br>
The transaction has aborted.</p>
<p>
XACT_E_CONNECTION_DOWN<br>
Lost connection with the TM.</p>
<p>
XACT_E_NOTRANSACTION<br>
For some reason the transaction could not be found. Perhaps it was not exported or it could have been aborted and forgotten before the enlist call was made.</p>
<p>
XACT_E_LOGFULL<br>
Unable to enlist as the LOG is full.</p>
<p>
XACT_E_TOOMANY_ENLISTMENTS<br>
The coordinator already has maximum number of Resources Enlisted in the transaction is unable to enlist any more. Typically Coordinators should not have an arbitrary limit as to the maximum number of enlistments they can support.</p>
<p>
<b>Comments</b></p>
<p>
An instance of <b>ITransactionResourceAsync</b> is pass as an argument. This interface is implemented by the RM and there is an instance of it per transaction. If the Coordinator is successful in enlisting the RM on the requested transaction then the RM will receive an instance of <b>ITransactionEnlistmentAsync</b> as an out parameter to the Enlist method. The thing to note is that an ITransaction instance is being provided to the method as in argument, however the transaction in the general case would have been begun by the application. The RM somehow needs to obtain that transaction from the client before it can request to be enlisted in it. The process for propagating the transaction from the application to the RM is discussed later. In brief the application calls a function or invokes a method in the RM proxy, asking it to enlist in the transaction. The RM proxy then with the help of MS DTC proxy is responsible for propagating the transaction to the resource manager server.</p>
<p>&nbsp; </p></body>
</HTML>
