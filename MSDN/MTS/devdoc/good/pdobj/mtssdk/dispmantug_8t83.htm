<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Resource Dispensers</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<p>
<a name="asresourcedispensers"></a>Resource Dispensers</p>
<p>
<i>Resource dispensers</i> are part of the Microsoft Transaction Server (MTS) programming model and run-time environment. Application components use resource dispensers to access shared information.</p>
<p>
A resource dispenser can be any component that is compatible with MTS in a standard way, regardless of the interface that it presents to the user.</p>
<p>
The MTS programming model includes <i>declarative transactions</i>, which protect the work performed by an application object during its lifetime. When an application object uses resource dispensers, the work it performs is automatically <i>transactional</i>; that is,the component doesn't have to explicitly declare transactions. These transactions are defined in the <i>OLE Transactions</i> specification, implemented by the Microsoft Distributed Transaction Coordinator (MS DTC), and initiated on behalf of the application object by MTS. See the <i>Resource Managers Guide</i> for more information.</p>
<p>
At runtime, dynamic pools of resources are made available to resource dispensers, such as database connections, network connections, connections to queues, threads, objects, and memory blocks. The application process achieves high performance by using a minimum number of frequently used resources.</p>
<p>
Resource dispensers are managed by the <i>Resource Dispenser Manager </i>(DispMan). DispMan provides <i>resource pooling</i> for the resource dispensers, and ensures that a resource supplied by a resource dispenser is correctly enlisted in the application object's transaction. DispMan automatically reclaims resources that are still reserved at the end of an object's lifetime, eliminating the possibility of resource "leaks."</p>
<p>
DispMan uses the <i>Inventory Statistics Manager</i> to manage pool resource inventory levels. DispMan can request a resource dispenser to create a new resource, or to destroy idle resources when necessary to adjust for inventory levels, rather than using static settings.</p>
<p>
A resource dispenser can also function independently of MTS, providing only resource pooling capabilities. When MTS is present, it can automate transactions and reclamation. </p>
<p>
<img src="images/virm41.gif" border=0></p>
<p>&nbsp; </p></body>
</HTML>
