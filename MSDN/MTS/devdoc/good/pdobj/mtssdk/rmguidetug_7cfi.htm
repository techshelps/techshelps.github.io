<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Read-Only Commit Optimization</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asreadonlycommitoptimization"></a>Read-Only Commit Optimization</h1>
<p>
MS DTC permits resource managers that have read but not updated transaction-protected data to reply "read-only" at phase one. In this case, the transaction manager will not deliver the second phase notification to the resource manager. This optimization reduces the expense of committing the transaction, but it also reduces the <i>degree of isolation</i> from degree three to degree one. If a resource manager chooses to provide degree three isolation, it must hold its locks until phase two of commit. A resource manager that releases its locks and replies “read only” at phase one is reduced to providing degree one isolation.</p>
<p>
The read-only optimization is also used between transaction managers to optimize the commitment of whole sub-trees of the transaction tree. A transaction manager replies “read-only” if all of the resource managers and transaction managers subordinate to it reply “read-only.” This signifies that this transaction manager and the entire sub-tree it controls need not receive notification at phase two of commit.</p>
<p>&nbsp; </p></body>
</HTML>
