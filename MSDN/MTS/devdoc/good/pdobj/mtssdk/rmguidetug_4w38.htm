<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Data Replication for Decision Support</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asdatareplicationfordecisionsupport"></a>Data Replication for Decision Support</h1>
<p>
Many customers establish data warehouses for their <i>decision support applications</i>. These customers need a way to replicate data from their <i>operational database</i> to their <i>decision support database</i>. MS DTC is not intended for replicating decision support data. Instead, it is recommended that you use the data replication services provided with your relational database application. Typically, these database replication services asynchronously propagate changes from the operational database to the decision support database. This is more efficient than updating both databases synchronously using MS DTC. Using the database replication service may also improve system availability. Database replication services permit the operational database to be updated when the decision support database is unavailable. Changes to the operational database are queued and applied to the decision support database when it becomes available. When MS DTC is used for replication, both databases must be available whenever the operational database is updated. Alternatively, applications that update the operational database must tolerate decision support database failures. There must also be some way to resynchronize the two databases following the failure.</p>
<p>
MS DTC is effective for building a reliable queue to send information from one system to another. An application can implement its own replication scheme using this reliable queue. For example, when the application updates the operation database, it queues an update request for the decision support database. A corresponding application on the data warehouse system would then remove the update requests from the queue and update the decision support database, thereby keeping the distributed queue consistent.</p>
<p>&nbsp; </p></body>
</HTML>
