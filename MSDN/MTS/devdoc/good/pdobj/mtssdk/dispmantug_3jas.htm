<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing a Resource Dispenser as a COM Component</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<p>
<a name="asimplementingaresourcedispenserasacomcomponent"></a>Implementing a Resource Dispenser as a COM Component</p>
<p>
Resource dispenser interfaces exposed to the application are not required to be Component Object Model (COM) interfaces. This allows DispMan to be used in a process without initializing COM, for example, to support the ODBC Resource Dispenser.</p>
<p>
A resource dispenser maybe implemented as a COM component. If a resource dispenser exposes an API (like ODBC), then the resource dispenser might only be a DLL accessed by the application via an import library (or using <b>LoadLibrary</b> and <b>GetProcAddress</b>). A resource dispenser may also be a COM component which an application accesses by calling <b>CoCreateInstance</b>. If the resource dispenser is an Automation component, then the resource dispenser may be accessed from Microsoft Visual Basic™.</p>
<p>&nbsp; </p></body>
</HTML>
