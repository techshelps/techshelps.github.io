<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transaction Commit</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="astransactioncommit"></a>Transaction Commit</h1>
<p>
The participant who called <b>BeginTransaction </b>is the only party who can call <b>Commit. </b>No other participant in the transaction can commit the transaction.</p>
<p>
An application program should not call <b>Commit</b> while a resource manager operation is outstanding for the transaction. An application program which invokes asynchronous operations must wait for all asynchronous operations to complete before committing the transaction.  An application program which violates this rule runs the risk of committing the transaction prematurely. MS DTC does nothing to prevent transactions from committing prematurely. Resource managers must be capable of handling premature commit requests. If a resource manager receives a commit request while doing work on behalf of a transaction, it can either abort the transaction or complete the request before committing the transaction.</p>
<p>&nbsp; </p></body>
</HTML>
