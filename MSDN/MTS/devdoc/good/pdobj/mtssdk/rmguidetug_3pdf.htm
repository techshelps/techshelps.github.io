<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Life of a Transaction: Transaction Commit Phase 1-Prepare I (Phases)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="aslifeofatransactiontransactioncommitphase1prepareiphases"></a>Life of a Transaction: Transaction Commit Phase 1–Prepare I (Phases)</h1>
<table cellspacing=5 cols=2>
<tr valign=top>
<td width=11%>j1</td>
<td width=89%>The client invokes the <b>ITransaction::Commit</b> method in the MS DTC proxy.</td>
</tr>
<tr valign=top>
<td width=11%>j2</td>
<td width=89%>The MS DTC proxy communicates with the client’s transaction manager.</td>
</tr>
<tr valign=top>
<td width=11%>j3.1</td>
<td width=89%>The client’s transaction manager initiates phase one of the two-phase commit process. All of the work of preparing the transaction is done in parallel. The client’s transaction manager determines if any resource managers on the client’s system have enlisted in the transaction. If so, the client’s transaction manager asks each of these resource managers to prepare. In our example, no resource managers on the client’s system participated in the transaction.</td>
</tr>
<tr valign=top>
<td width=11%>j3.2</td>
<td width=89%>The client’s transaction manager determines which subordinate transaction managers have participated in the transaction and sends each of them a Prepare message. These Prepare messages are sent to the subordinate transaction managers in parallel.</td>
</tr>
<tr valign=top>
<td width=11%>j4.1</td>
<td width=89%>The resource manager’s transaction manager determines whether any transaction managers are subordinate to it. In our example, the resource manager’s transaction manager has no subordinates. If the resource manager’s transaction manager has subordinates, it sends each of them a Prepare message. These Prepare messages are sent to the subordinate transaction managers in parallel.</td>
</tr>
<tr valign=top>
<td width=11%>j4.2</td>
<td width=89%>The resource manager’s transaction manager uses its internal enlistment objects to determine which resource managers have enlisted in the transactions. It sends a Prepare message to the MS DTC proxy of each enlisted resource manager. These Prepare messages are sent to the MS DTC Proxies in parallel.</td>
</tr>
<tr valign=top>
<td width=11%>j4.3</td>
<td width=89%>The resource manager’s transaction manager awaits notification from all of the resource managers involved in the transaction that they have completed their prepare work.</td>
</tr>
<tr valign=top>
<td width=11%>j5</td>
<td width=89%>Each MS DTC proxy invokes the resource manager's <b>ITransactionResourceAsync::PrepareRequest</b> method. This method invocation informs the resource manager that it should perform phase one of the two-phase commit protocol.</td>
</tr>
<tr valign=top>
<td width=11%>j6</td>
<td width=89%>Each resource manager immediately responds to the <b>PrepareRequest, </b>thereby acknowledging that the <b>PrepareRequest</b> has been received. After responding to the <b>PrepareRequest</b> method invocation, the resource manager begins the work necessary to prepare the transaction.</td>
</tr>
</table>
<p>&nbsp; </p></body>
</HTML>
