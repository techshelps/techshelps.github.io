<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transaction Propagation: Resource Manager to Application Program</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="astransactionpropagationresourcemanagertoapplicationprogram"></a>Transaction Propagation: Resource Manager to Application Program</h1>
<p>
Some resource managers are capable of calling application code from within the resource manager. This permits the application programmer to perform operations that the resource manager and its stored procedure programming language do not directly support. If your resource manager supports this capability, you may choose to provide a way to propagate transactions from your resource manager to the application.</p>
<p>
<b>Resource Manager-to-Application Program Transaction Propagation</b></p>
<p>
<img src="images/virm08.gif" border=0></p>
<p>
For example, your resource manager could provide a callback that returns the current transaction to the application program. The callback might have an interface such as this:</p>
<pre><code>int rm_getdtcxact (SRVPROC *srvproc, void **ppv);</code></pre>
<p>
This interface returns a pointer to the current transaction object through ppv. If no transaction is active, ppv is null. The interface returns SUCCEED if successful, or FAIL if the server callback was not registered in the server. (This would only happen due to a DLL mismatch.)</p>
<p>&nbsp; </p></body>
</HTML>
