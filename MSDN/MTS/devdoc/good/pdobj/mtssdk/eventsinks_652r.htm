<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How MTS Spy Works</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="ashowmtsspyworks"></a>How MTS Spy Works</h1>
<p>
MTS Spy implements notification sinks for the various MTS Event interfaces. These interfaces encapsulate areas of MTS functionality such as transactions, threading, and activation. See the <a href="eventsinks_78kl.htm">Reference</a> topic for more information.</p>
<p>
MTS Spy receives notifications from the MTSEvents DLL. MTSEvents receives events from the MTS Executive and maintains an event queue. Event notifications are then dispatched to listeners, and optionally logged in the MtsAudit SQL Server table.</p>
<p>
When events are enabled through the registry key setting, you will incur a performance cost of an extra method call per event and the memory needed to allocate the event. MTSEvents does not guarantee the delivery of an event; see the <b>IUserInfo</b> reference topic for more information.</p>
<p>
Every event has a timestamp. This is the time when the event was added to the queue, not the time that it was dispatched or received.</p>
<p>
<b>Important</b>   You cannot use a MTS Event Sink to affect the state of a running server process. You should never call into an object returned by a MTS Event Sink. They are not intended for application-specific initialization work.</p>
<p>&nbsp; </p></body>
</HTML>
