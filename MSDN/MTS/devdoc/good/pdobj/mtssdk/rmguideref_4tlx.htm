<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IResourceManager::ReenlistmentComplete</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<p>
<a name="asiresourcemanagerreenlistmentcomplete"></a>IResourceManager::ReenlistmentComplete</p>
<p>
The resource manager calls <b>ReenlistmentComplete</b> after resolving all the in-doubt transactions it knows about.</p>
<pre><b>HRESULT ReenlistmentComplete ();</b></pre>
<p>
<b>Return Values</b></p>
<p>
S_OK<b><br>
</b>Success.</p>
<p>
E_INVALIDARG<b><br>
</b>One or more arguments are invalid.</p>
<p>
E_OUTOFMEMORY<br>
Unable to allocate memory.</p>
<p>
E_UNEXPECTED<br>
Something unexpected occurred.</p>
<p>
XACT_E_CONNECTION_DOWN<br>
Lost connection with the TM.</p>
<p>
XACT_E_RECOVERYALREADYDONE<br>
The <b>ReenlistmentComplete</b> method was called at least once after this interface was obtained. Therefore, the recovery is already complete.</p>
<p>
<b>Comments</b></p>
<p>
This lets the Coordinator forget any transactions that it was remembering, as it had an obligation to remember those transactions until it was certain that the resource manager knew the outcome of those transactions. An RM will forget a transaction before responding to the second phase, this allows for a window in which an RM would have forgotten a transaction but not the TM. It is so because, the COMMITTED message from the RM to the Coordinator can get lost on its way due to some fault. A Coordinator would not know if the resource manager has received the COMMIT notification or not, unless it receives the COMMITTED message from the RM. Until it receives the COMMITTED message, it cannot forget the transaction. The RM when it reestablishes a relationship with the Coordinator will query the status for all the in-doubt transactions but it will not ask for the transactions that it had already forgotten. After resolving all the in-doubt transactions, it simply calls the <b>IResourceManager::ReenlistmentComplete</b> method  which then lets the TM to forget the transactions.</p>
<p>
This protocol lets the recovery process be repeated multiple times without affecting the outcome of transactions. Any number of failures such as crashes can occur during recovery, but the results will always be the same. This protocol also lets the resource managers enlist in new transactions while the in-doubt transactions are being resolved. The Coordinator is able to discern between the new transactions and the old transactions. New transactions are the ones that the RM enlists in from the point the new RM-Coordinator relationship is established, and all the old transactions are the ones that it had enlisted in prior to the establishment of the new relationship.</p>
<p>&nbsp; </p></body>
</HTML>
