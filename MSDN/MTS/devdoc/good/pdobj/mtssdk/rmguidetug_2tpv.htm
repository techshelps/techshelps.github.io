<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Distributed Transactions</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asdistributedtransactions"></a>Distributed Transactions</h1>
<p>
A <i>distributed transaction</i> is a transaction that updates data on two or more networked computer systems. Distributed transactions extend the benefits of transactions to applications that must update distributed data. Implementing robust distributed applications is difficult because these applications are subject to multiple failures, including failure of the client, the server, and the network connection between the client and server. In the absence of distributed transactions, the application program itself must detect and recover from these failures.</p>
<p>
For distributed transactions, each computer has a <i>local transaction manager</i>. When a transaction does work at multiple computers, the transaction managers track incoming and outgoing transactions. Each transaction manager performs all the enlistment, prepare, commit, and abort calls for <i>local resource managers</i> (those that reside on that particular computer). When committing a transaction that is distributed among several computers, the transaction manager sends prepare, commit, and abort messages to all its outgoing transaction managers. When a transaction manager is in-doubt about a distributed transaction, the transaction manager queries the incoming transaction manager. The <i>root transaction manager</i> is never in-doubt. If an in-doubt transaction persists for too long, the system operator can force the transaction to commit or abort.</p>
<p>
See <a href="rmguidetug_2qnf.htm">How Distributed Transactions Work</a> for more information.</p>
<p>&nbsp; </p></body>
</HTML>
