<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Obtaining a Transaction Dispenser from a Transaction</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asobtainingatransactiondispenserfromatransaction"></a>Obtaining a Transaction Dispenser from a Transaction</h1>
<p>
When the application client calls the <b>RM_Enlist</b> function, passing it the <b>ITransaction</b> interface to the transaction object, the RM proxy needs to know the transaction dispenser from which the transaction object was obtained. This is essential because there can be multiple transaction dispensers, and the transaction can be propagated only by the transaction coordinator which dispensed the transaction. To get to the appropriate transaction dispenser from a transaction:
<ol>
<li>
Invoke the <b>ITransaction::QueryInterface</b> method obtain the <b>IGetDispenser</b> interface.</li>
<li>
Invoke the <b>IGetDispenser::GetDispenser</b> method to obtain the <b>ITransactionDispenser</b> interface.</li>
<li>
Then invoke the <b>ITransactionDispenser::QueryInterface</b> to obtain the <b>ITransactionExportFactory</b> interface.</li>
</ol>
<p>&nbsp; </p></body>
</HTML>
