<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Passing Object References</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asconpassingobjectreferences"></a>Passing Object References</h1>
<p>
You must ensure that MTS object references are only exchanged in the following ways:
<ul>
<li>
Through return from an object creation interface, such as <b>CoCreateInstance</b> (or its equivalent), <b>ITransactionContext::CreateInstance</b>, or <b>IObjectContext::CreateInstance</b>.</li>
<li>
Through a call to <b>QueryInterface</b>.</li>
<li>
Through a method that has called <b>SafeRef</b> to obtain the object reference.</li>
</ul>
<p>
An object reference that is obtained in these ways is called a <i>safe</i> <i>reference</i>. MTS ensures that methods invoked using safe references execute within the correct context.</p>
<p>
<b>Using SafeRef to pass a reference to an object</b></p>
<p>
<img src="images/vi0407.gif" border=0></p>
<p>
<b>Note   </b>It is not safe to exchange references by any other means. In particular, do not pass interfaces outside the object by using global variables. These restrictions are similar to those imposed by <a href="vipdef01_1yih.htm#asdefcom">COM</a> for references passed between apartments.</p>
<p>
Calls that use safe references always pass through the MTS run-time environment. This allows MTS to manage context switches and allows MTS objects to have lifetimes that are independent of client references. For more information, see <a href="mtxpg04_5s37.htm">Deactivating Objects</a>.</p>
<p>
Callbacks</p>
<p>
It is possible to make <i>callbacks</i> to clients and to other MTS components. For example, you can have an object that creates another object. The creating object can pass a reference to itself to the created object; the created object can then use this reference to call the creating object.</p>
<p>
If you choose to use callbacks, note the following restrictions:
<ul>
<li>
Calling back to the base client or another package requires Access-level security on the client. Additionally, the client must be a DCOM server.</li>
<li>
Intervening firewalls may block calls back to the client.</li>
<li>
Work done on the callback executes in the environment of the object being called. It may be part of the same transaction, a different transaction, or no transaction.</li>
<li>
The creating object must call <b>SafeRef</b> and pass the returned reference to the created object in order to call back to itself.</li>
</ul>
<h6>See Also</h6>
<p>
<a href="disamb01_7jty.htm"><b>SafeRef</b></a></p>
<p>&nbsp; </p></body>
</HTML>
