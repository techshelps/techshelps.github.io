<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SharedPropertyGroupManager Object (Visual Basic)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<p>
<a name="asobjsharedpropertygroupmanagervb"></a>SharedPropertyGroupManager Object</p>
<p>
The <b>SharedPropertyGroupManager</b> object is used to create shared property groups and to obtain access to existing shared property groups.</p>
<p>
<a href="#asobjsharedpropertygroupmanagervb"><img src="images/objspgm.gif" border=0></a><br>
<img src="images/space.gif" border=0><img src="images/space.gif" border=0><img src="images/parchild.gif" border=0><a href="spamrefvb_9q76.htm"><img src="images/objspg.gif" border=0></a><br>
<img src="images/space.gif" border=0><img src="images/space.gif" border=0><img src="images/space.gif" border=0><img src="images/space.gif" border=0><img src="images/space.gif" border=0><img src="images/parchild.gif" border=0><a href="spamrefvb_20gy.htm"><img src="images/objsp.gif" border=0></a></p>
<p>
<b>Remarks</b></p>
<p>
To use the <b>SharedPropertyGroupManager</b> object, you must set a reference to the Shared Property Manager Type Library (mtxspm.dll). </p>
<p>
You can access the <b>SharedPropertyGroupManager</b> object by using either the <b>CreateObject</b> function or the <a href="objctxvb_60v6.htm"><b>CreateInstance</b></a> method of the <b>ObjectContext</b> object. It makes no difference which you use.</p>
<p>
The Shared Property Manager is a <a href="vipdef01_1yih.htm#asdefresourcedispenser">resource dispenser</a> that you can use to share state among multiple objects within a <a href="vipdef01_1yih.htm#asdefasp">server process</a>. You can't use global variables in a distributed environment because of <a href="vipdef01_1yih.htm#asdefconcurrency">concurrency</a> and name collision issues. The Shared Property Manager eliminates name collisions by providing shared property groups, which establish unique name spaces for the <a href="vipdef01_1yih.htm#asdefsharedproperty">shared properties</a> they contain. The Shared Property Manager also implements locks and <a href="vipdef01_1yih.htm#asdefsemaphore">semaphores</a> to protect shared properties from simultaneous access, which could result in lost updates and could leave the properties in an unpredictable state.</p>
<p>
Shared properties can be shared only by objects running in the same process. If you want instances of different components to share properties, you have to install the components in the same MTS <a href="vipdef01_1yih.htm#asdefpackage">package</a>. Because there is a risk that administrators will move components from one package to another, it's safest to limit the use of a shared property group to instances of components that are defined in the same <a href="vipdef01_1yih.htm#asdefdll">DLL</a>. </p>
<p>
It's also important for components sharing properties to have the same activation attribute. If two components in the same package have different activation attributes, they generally won't be able to share properties. For example, if one component is configured to run in a client's process and the other is configured to run in a server process, their objects will usually run in different processes, even though they're in the same package.</p>
<p>
You should always instantiate the <b>SharedPropertyGroupManager</b>, <b>SharedPropertyGroup</b>, and <b>SharedProperty</b> objects from MTS objects rather than from a <a href="vipdef01_1yih.htm#asdefbaseclient">base client</a>. If a base client creates shared property groups and properties, the shared properties are inside the base client's process, not in a server process. This means MTS objects can't share the properties unless the objects, too, are running in the client's process (which is generally not a good idea).</p>
<p>
<b>Note</b>   When you set the isolation mode to <b>LockMethod</b>, the Shared Property Manager requires access to the calling object's <b>ObjectContext</b>. You can't use this isolation mode to create a shared property group from within an object's <a href="vipdef01_1yih.htm#asdefconstructor">constructor</a> or from a non-MTS object because <b>ObjectContext</b> isn't available during object construction and a non-MTS object doesn't have an <b>ObjectContext</b>.</p>
<p>
The<b> SharedPropertyGroupManager </b>object provides the following methods and properties.</p>
<table cellspacing=5 cols=2>
<tr valign=top>
<th align=left width=41%>Method </th>
<th align=left width=59%>Description </th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=41%><a href="spamrefvb_2siq.htm"><b>CreatePropertyGroup</b></a></td>
<td width=59%>Creates a new <b>SharedPropertyGroup</b> with a string name as an identifier. If a group with the specified name already exists, <b>CreatePropertyGroup </b>returns a reference to the existing group.</td>
</tr>
<tr valign=top>
<td width=41%><a href="spamrefvb_359e.htm"><b>Group</b></a></td>
<td width=59%>Returns a reference to an existing shared property group, given a string name by which it can be identified.</td>
</tr>
</table><br>
<p>
<b>See Also</b></p>
<p>
<a href="mtxpg08vb_4hnp.htm">Sharing State</a></p>
<p>&nbsp; </p></body>
</HTML>
