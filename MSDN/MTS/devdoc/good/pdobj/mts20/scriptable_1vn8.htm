<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Automating Enumerating Through Installed MTS Components to Delete a Component</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asscriptingenumeratingthroughinstalledcomponentstodeleteacomponent"></a>Automating Enumerating Through Installed MTS Components to Delete a Component</h1>
<h5><img src="images/prcarrow.gif" border=0>To enumerate through installed components to delete a component:</h5>
<ol>
<li>
Declare the objects that you will be using to enumerate through installed components to delete a specific component.<pre><code>Dim catalog As Object
Dim packages As Object
Dim pack As Object
Dim componentsInPack As Object
Dim util As Object</code></pre>
</li>
<li>
Use the <b>On Error</b> statement to handle run-time errors if a method returns a failure HRESULT. You can test and respond to MTS trappable errors using the <b>On Error</b> statement and the <b>Err</b> object.<pre><code>On Error GoTo failed</code></pre>
</li>
<li>
Call the <b>CreateObject</b> method to instantiate the Catalog object. Retrieve the Packages collection by calling the <b>GetCollection</b> method. Then call the <b>Populate</b> method to fill the collection with packages installed in the <a href="vipdef01_1yih.htm#asdefcatalog">catalog</a>.<pre><code>Set catalog = CreateObject("MTSAdmin.Catalog.1")
Set packages = catalog.GetCollection("Packages")
packages.Populate</code></pre>
</li>
<li>
Enumerate through the collection to look for the package named “My Package.” Then call the <b>GetCollection</b> method to get the ComponentsInPackage collection. Fill the ComponentInPackages collection using the <b>Populate</b> method, and then enumerate through the collection to find the “Bank.Account” component. Call the <b>Remove</b> method to delete the component, and save changes to the collection by calling the <b>SaveChanges</b> method.<pre><code>For Each pack In packages
        If pack.Name = "My Package" Then
            Set componentsInPack = packages.GetCollection("ComponentsInPackage", pack.Key)
            componentsInPack.Populate
            For i = 0 To componentsInPack.Count
                Set comp = componentsInPack.Item(i)
                If comp.Name = "Bank.Account" Then
                    componentsInPack.Remove (i)
                    componentsInPack.savechanges
                    Exit For
                End If
Next
            Exit For
        End If
    Next
           
    Exit Sub</code></pre>
</li>
<li>
Use the <b>Err</b> object to display an error message if the installation of the package fails.<pre><code>failed:
    MsgBox "Failure code " + Str$(Err.Number)

End Sub</code></pre>
</li>
</ol>
<p>
<b>See Also</b></p>
<p>
<a href="adminref_21o3.htm">MTS Administration Objects</a>, <a href="adminref_4eur.htm">MTS Collection Types</a>, <a href="adminref_3fqr.htm">MTS Administration Object Methods</a>, <a href="scriptable_363y.htm">Automating Advanced MTS Administration with Visual Basic</a></p>
<p>&nbsp; </p></body>
</HTML>
