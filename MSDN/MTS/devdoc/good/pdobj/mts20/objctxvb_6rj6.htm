<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DisableCommit Method (Visual Basic)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asmthdisablecommitvb"></a>DisableCommit Method</h1>
<p>
Declares that the object's transactional updates are inconsistent and can't be committed in their present state.</p>
<p>
<b>Applies To</b></p>
<p>
<a href="objctxvb_24te.htm"><b>ObjectContext Object</b></a></p>
<p>
<b>Syntax</b></p>
<p>
<i>objectcontext</i>.<b>DisableCommit</b></p>
<p>
The <i>objectcontext</i> placeholder represents an <a href="vipdef01_1yih.htm#asdefobjectvariable">object variable</a> that evaluates to the <b>ObjectContext</b> associated with the current object.</p>
<p>
<b>Remarks</b></p>
<p>
An object that invokes <a href="disamb01_7k50.htm"><b>DisableCommit</b></a> is <a href="vipdef01_1yih.htm#asdefstatefulinstance">stateful</a>.</p>
<p>
You can use the <b>DisableCommit</b> method to prevent a <a href="vipdef01_1yih.htm#asdeftransaction">transaction</a> from committing prematurely between method calls in a stateful object. When an object invokes <b>DisableCommit</b>, it indicates that its work is inconsistent and that it can't complete its work until it receives further method invocations from the <a href="vipdef01_1yih.htm#asdefclient">client</a>. It also indicates that it needs to maintain its state to perform that work. This prevents the MTS run-time environment from deactivating the object and reclaiming its resources on return from a method call. Once an object has called <b>DisableCommit</b>, if a client attempts to commit the transaction before the object has called <b>EnableCommit</b> or <b>SetComplete</b>, the transaction will abort.</p>
<p>
For example, suppose you have a General Ledger <a href="vipdef01_1yih.htm#asdefvipercomponent">component</a> that updates a database. A client makes multiple calls to a General Ledger object to post entries to various accounts. There's an integrity constraint that says the debits must equal the credits when the final method invocation returns, or the transaction must abort. The General Ledger object has an initialization method in which the client informs it of the sequence of calls the client is going to make, and the General Ledger object calls <b>DisableCommit</b>. The object maintains its state between calls so that after the final call in the sequence is made the object can make sure the integrity constraint is satisfied before allowing its work to be committed.</p>
<p>
<a href="objctxvb_2y60.htm"><b>Example</b></a></p>
<p>
<b>See Also</b></p>
<p>
<a href="mtxpg04_5soj.htm">Transactions</a></p>
<p>&nbsp; </p></body>
</HTML>
