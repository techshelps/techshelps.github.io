<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MTx.SafeRef Method (Visual J++)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asfctsaferefvj"></a>MTx.SafeRef Method</h1>
<p>
Used by an object to obtain a reference to itself that's safe to pass outside its <a href="vipdef01_1yih.htm#asdefcontext">context</a>.</p>
<p>
<b>SafeRef</b> is a static method of the <b>MTx</b> class, which is declared in the package <code>com.ms.mtx.</code></p>
<p>
<b>Note</b>  The <a href="vipdef01_1yih.htm#asdefclass">class</a> <b>MTx</b> has only static methods and has no public <a href="vipdef01_1yih.htm#asdefconstructor">constructor</a>. You can't create an <a href="vipdef01_1yih.htm#asdefinstance">instance</a> of this class. </p>
<pre><b>IUnknown SafeRef (
    IUnknown</b> <i>obj</i>
<b>);</b></pre>
<p>
<b>Parameter</b></p>
<p>
<i>obj<br>
</i>[in] A reference to an interface on the current object.</p>
<p>
<b>Return Value</b></p>
<p>
A reference to the <b>IUnknown</b> interface on the current object that's safe to pass outside the current object's context.</p>
<p>
<b>Remarks</b></p>
<p>
When an <a href="vipdef01_1yih.htm#asdefmicrosofttransactionserverobject">MTS object</a> wants to pass a self-reference to a <a href="vipdef01_1yih.htm#asdefclient">client</a> or another object (for example, for use as a callback), it should always call <b>SafeRef</b> first and then pass the reference returned by this call. An object should never pass a reference to <b>this</b> to a client or to any other object. Once such a reference is passed outside the object's context, it's no longer a valid reference.</p>
<p>
Regardless of the interface ID you pass to <b>SafeRef</b>, it always returns the <b>IUnknown</b> interface on the object that calls it. You should immediately cast the returned value to the interface that you want to pass outside the object.</p>
<p>
Calling <b>SafeRef</b> on a reference that is already safe returns the safe reference unchanged, except that the reference count on the interface is incremented.</p>
<p>
<a href="objctxvj_8tfc.htm"><b>Example</b></a></p>
<p>
<b>See Also</b></p>
<p>
<a href="mtxpg04_3voz.htm">Passing Object References</a></p>
<p>&nbsp; </p></body>
</HTML>
