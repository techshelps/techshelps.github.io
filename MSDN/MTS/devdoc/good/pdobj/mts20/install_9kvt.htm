<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enabling MTS Package Security</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asenablingpackagesecurity"></a>Enabling MTS Package Security</h1>
<p>
MTS offers two types of <a href="vipdef01_1yih.htm#asdefpackage">package</a> security:
<ul>
<li>
<a href="vipdef01_1yih.htm#asdefprogrammaticsecurity">Programmatic security</a></li>
</ul>
<p>
Provides <a href="vipdef01_1yih.htm#asdefinterface">interfaces</a> that you can use to create customized security within your application logic. See the <i>MTS Programmer’s Guide</i> for more information about using programmatic security.
<ul>
<li>
<a href="vipdef01_1yih.htm#asdefdeclarativesecurity">Declarative security</a> </li>
</ul>
<p>
Allows you to define <a href="vipdef01_1yih.htm#asdefrole">roles</a> and assign Windows NT users or groups of users to roles using the MTS Explorer. </p>
<p>
<b>Important</b> <a href="vipdef01_1yih.htm#asdeflibrarypackage">Library package</a> do not support role checking. In order to enable security, you must change the activation setting to a <a href="vipdef01_1yih.htm#asdefserverpackage">server package</a>. See the <a href="create_8z03.htm">Setting MTS Activation Properties</a> topic for more information about library and server packages.</p>
<p>
Administrators use declarative security to secure packages, ensuring that only clients with access privileges can run the package. Access is granted through the Explorer using MTS roles and Windows NT-based user and group accounts. Note that since declarative security uses Windows NT accounts for <a href="vipdef01_1yih.htm#asdefauthentication">authentication</a>, you will not be able to use declarative security for a package running on a Windows 95 computer.</p>
<p>
To set up declarative security for a package, perform the following steps:
<ol>
<li>
Define roles at the package level using the <b>New Role</b> dialog box.</li>
</ol>
<p>
<img src="images/newrole.gif" border=0></p>
<p>
See the <a href="install_9q05.htm">Adding a New MTS Role</a> topic for a description of how to add a new role.
<ol>
<li>
Map users to roles using the Add New Users to Roles dialog box. Note that a package with no valid users in any Role cannot be called. </li>
</ol>
<p>
<img src="images/newuser1.gif" border=0></p>
<p>
See the <a href="install_9qwj.htm">Mapping MTS Roles to Users and Groups</a> topic to learn how to add users and groups to a role.
<ol>
<li>
Assign the role that you defined to the Role Membership folder of a <a href="vipdef01_1yih.htm#asdefcomponent">component</a> or <a href="vipdef01_1yih.htm#asdefinterface">interface</a> if you want to restrict access to a specific component or interface.</li>
<li>
Enable security for the package on the <b>Security</b> tab of the Package property sheets. This topic contains a description for how to enable authorization checking.</li>
</ol>
<p>
If you do not map the user account you're currently using to the Administrator role before enabling System package security, you will be refused access to MTS Explorer functions that modify configuration (such as adding users to roles). If this happens, you need to log on as a user that has been mapped to the Administrator role. To protect administrators from being locked out of the System package, the MTS Explorer displays an error message if you try to:
<ul>
<li>
Enable security for the System package when no users are mapped to the administrator role</li>
<li>
Delete the last user from the Administrator role when security has been enabled for the System package </li>
</ul>
<p>
<b>Note</b> If MTS is installed on a server whose role is a primary or backup domain controller, a user must be a domain administrator in order to manage packages in the MTS Explorer.</p>
<p>
If you do not enable security for the package, then roles for the component or interface will not be checked by MTS. In addition, if you do not have security enabled for a component, MTS will not check roles for the component's interface.</p>
<p>
See the <a href="install_9q05.htm">Adding a New MTS Role</a> topic for a description of how to assign a role to the Role Membership folder.</p>
<p>
<b>Note</b>  Turning off declarative security for individual components or the package is useful during debugging of your package.</p>
<p>
Consider setting up access restrictions to an inventory server package. As the system administrator, you may want to restrict access to the Inventory package to members of the sales department. In order to do so, first select the Role folder for the Inventory package, click the <b>New</b> option on the <b>Action</b> menu, and type "Sales" as the name of the new role. Then select the Users folder, click <b>New</b> on the <b>Action</b> menu, and enter the name of the Windows NT group account for the sales department. Add the Sales role to each component's Role Membership folder. At this point, only members of the sales department are allowed to access the Inventory package. Finally, select that package, go to the Security tab of the property sheets, and select the <b>Enable authorization checking</b> checkbox in order to turn on the new security settings for the package.</p>
<p>
If you want to restrict access to a specific component within a package, you must understand how components in the package call one another. If a component is directly called by a base client, MTS will check roles for the component. If one component calls another component in the same package, MTS will not check roles because components within the same package are assumed to "trust" one another.</p>
<p>
Let's say that you wanted to configure roles to permit a client to call the CheckInventory component, and restrict the client from calling the Backorder component directly. Both the CheckInventory and Backorder components are in the Inventory package. You must first set the appropriate role on the CheckInventory component for the client. Then ensure that the Backorder component has no roles that could map to the client identity. Since the CheckInventory and Backorder components share a package, no role checking will be performed when the CheckInventory component calls the Backorder component. </p>
<p>
The CheckInventory component may call the Backorder component on behalf of the client, though, if the following conditions are fulfilled:
<ul>
<li>
The client identity maps to the appropriate CheckInventory role</li>
<li>
Any programmatic security requirements are satisfied.</li>
</ul>
<p>
This allows you to create packages containing mutually trusted components while restricting access to select components.</p>
<p>
To set up role checking for <a href="vipdef01_1yih.htm#asdeforiginalcaller">original callers</a> that directly call the Backorder component, select the Role Membership folder for the Backorder component, click <b>New</b> on the <b>Action</b> menu, and choose the <b>Sales</b> role. Now that the <b>Sales</b> role (with mapped users) is assigned to the Backorder component, only members of the sales department will be able to run the Backorder component to view out-of-stock items. To activate the new security setting, select the <b>Enable authorization checking </b>checkbox for the Inventory package as well as the Backorder component.</p>
<p>
For more information about role checking, see the <a href="mtxpg04_7i49.htm">Programmatic Security</a> topic in the <i>MTS Programmer's Guide</i>.</p>
<h5><img src="images/prcarrow.gif" border=0>To enable security authorization:</h5>
<ol>
<li>
Map your user account to the <b>Administrator</b> role of the System Package if you have not already done so. </li>
<li>
Select the System Package, and choose <b>Properties</b> from the <b>Action</b> or right-click menu.</li>
<li>
Go to the security tab and select the <b>Enable authorization checking</b> checkbox. </li>
<li>
Stop the System Package server process by selecting System Package, right-clicking, and choosing the <b>Shut Down</b> option.</li>
</ol>
<p>
You can also shut down all server packages at one time, which combines steps 4 and 7. To shut down all server packages, select <b>My Computer</b> and choose the <b>Shut Down Server Processes</b> option in the <b>Action</b> menu.
<ol>
<li>
Select the package for which you want to enable security.</li>
<li>
Go to the security tab and select the <b>Authorization checking enabled</b> checkbox. </li>
<li>
Stop the System Package server process by selecting that package, right-clicking, and choosing the <b>Shut Down</b> option.</li>
</ol>
<p>
After you install and configure your package on the deployment server, you may want to lock your package so that component configurations cannot be modified. Refer to the <a href="create_96p1.htm">Locking Your Package</a> topic for more information about locking your package configuration.</p>
<p>
<b>See Also</b></p>
<p>
<a href="roadmap_0x0l.htm">System Package</a>, <a href="roadmap_5qnn.htm">Roles Folder</a>, <a href="roadmap_6eer.htm">Users Folder</a>, <a href="roadmap_6xf4.htm">Role Membership Folder</a>, <a href="maintain_7aat.htm">Managing Users for MTS Roles</a>, <a href="parti_6i9f.htm">Microsoft Transaction Server Programmer's Guide</a></p>
<p>&nbsp; </p></body>
</HTML>
