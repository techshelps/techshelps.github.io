<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetOriginalCallerName Method (Visual Basic)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asmthgetoriginalcallername"></a>GetOriginalCallerName Method</h1>
<p>
Retrieves the user name associated with the <a href="vipdef01_1yih.htm#asdefbaseprocess">base process</a> that initiated the sequence of calls from which the call into the current object originated. </p>
<p>
<b>Applies To</b></p>
<p>
<a href="progsecrefvb_5s9u.htm"><b>SecurityProperty Object</b></a></p>
<p>
<b>Syntax</b></p>
<pre><i>username</i> = <i>securityproperty</i>.<b>GetOriginalCallerName( )</b></pre>
<p>
<b>Part</b></p>
<p>
<i>username<br>
</i>The user name associated with the base process that initiated the call sequence from which the current method was called.</p>
<p>
<i>securityproperty</i><br>
An <a href="vipdef01_1yih.htm#asdefobjectvariable">object variable</a> that evaluates to a <b>SecurityProperty</b> object.</p>
<p>
<b>Remarks</b></p>
<p>
You use the <b>GetOriginalCallerName</b> method to determine the user name associated with the original process that initiated the call sequence from which the current method was called. The following scenario illustrates the functionality of the <b>GetOriginalCallerName</b> method.</p>
<p>
<img src="images/vips03.gif" border=0></p>
<p>
Base process 1, running on server A as user A, creates object X on server B, running as user B. Then base process 1 passes its reference on object X to base process 2, running on server D as user D. Base process 2 uses that reference to call into object X. object X then calls into object Y, running on server C. If object Y then calls <b>GetOriginalCallerName</b>, the name of user D is returned.</p>
<p>
<b>Note</b>   Usually, an object's <a href="vipdef01_1yih.htm#asdeforiginalcaller">original caller</a> is the same process as its <a href="vipdef01_1yih.htm#asdeforiginalcreator">original creator</a>. The only situation in which the original caller and the original creator would be different is one in which the original creator passes a reference to another process, and the other process initiates the call sequence (as in the preceding example).</p>
<p>
<b>Note   </b>The path to the original caller is broken if any object along the chain was created by some other means than <b>IObjectContext::CreateInstance</b> or <b>ITransactionContext::CreateInstance</b>. For example, if base process 1 uses <b>CoCreateInstance</b> to create X, when Y calls <b>GetOriginalCallerName,</b> the name it gets back will be the name of user B, not user D. This is because the call sequence is traced back through the objects' <a href="vipdef01_1yih.htm#asdefcontext">context</a> and MTS can only create a context for an object that's created with either <b>IObjectContext::CreateInstance</b> or <b>ITransactionContext::CreateInstance</b>.</p>
<p>
<a href="progsecrefvb_062g.htm"><b>Example</b></a></p>
<p>
<b>See Also</b></p>
<p>
<a href="mtxpg04_7i49.htm">Programmatic Security</a>, <a href="mtxpg04_4xkj.htm">Advanced Security Methods</a>, <a href="objctxvb_24te.htm"><b>ObjectContext</b> Object</a></p>
<p>&nbsp; </p></body>
</HTML>
