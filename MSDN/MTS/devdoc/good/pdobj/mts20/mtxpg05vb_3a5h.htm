<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Design Notes: Sharing Resources (Visual Basic)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="ashowapplicationdesignnotesresourceusage"></a>Application Design Notes: Sharing Resources</h1>
<p>
Each time the <b>Account</b> object's <b>Post</b> method is called, it obtains, uses, and then releases its database connection. A database connection is a valuable resource. The most efficient model for resource usage in scalable applications is to use them sparingly, acquire them only when you really need them, and return them as soon as possible.</p>
<p>
Historically, acquiring resources has been an expensive operation in terms of system performance. Many programs have adopted a strategy of acquiring resources and holding onto them until program termination. While this strategy is effective for single-user systems, building scalable server applications requires sharing these resources.</p>
<p>
Microsoft Transaction Server provides an architecture for resource sharing through its <a href="vipdef01_1yih.htm#asdefresourcedispensermanager">Resource Dispenser Manager</a> and <a href="vipdef01_1yih.htm#asdefresourcedispenser">resource dispensers</a>. The Resource Dispenser Manager works with specific resource dispensers to automatically pool and recycle resources. The <a href="vipdef01_1yih.htm#asdefodbc">ODBC</a> version 3.0 Driver Manager is a Microsoft Transaction Server resource dispenser, also referred to as the <a href="vipdef01_1yih.htm#asdefodbcresourcedispenser">ODBC resource dispenser</a>.</p>
<p>
Although the Account component hasn't implemented any of the MTS-specific APIs, when you run it, MTS uses the ODBC resource dispenser. This happens automatically when the Post method uses ActiveX Data Objects (ADO) to access the database, because ADO in turn uses ODBC. Whenever any component running in the MTS run-time environment uses ODBC directly or indirectly, the component automatically uses the ODBC resource dispenser.</p>
<p>
When the <b>Account</b> object releases the database connection, the connection is returned to a pool. When the <b>Post</b> method is called again, it requests the same database connection. Instead of creating a new connection, the ODBC resource dispenser recycles the pooled connection, which saves time and server resources.</p>
<p>
The topic <a href="mtxpg06vb_2ygj.htm">Building Scalable Components</a>, shows you how to use just-in-time activation to use server resources even more efficiently, resulting in more scalable applications and improved performance.</p>
<p>
<b>See Also</b></p>
<p>
<a href="#ashowapplicationdesignnotesresourceusage">Application Design Notes: Resource Usage</a>, <a href="mtxpg06vb_2ygj.htm">Building Scalable Components</a>, <a href="mtxpg05vb_14ac.htm">Modifying the Account Component</a>, <a href="mtxpg05vb_9ywk.htm">Creating the Account Component</a>, <a href="mtxpg05vb_45mc.htm">Creating a Simple ActiveX Component</a></p>
<p>&nbsp; </p></body>
</HTML>
