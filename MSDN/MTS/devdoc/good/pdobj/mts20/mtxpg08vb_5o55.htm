<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Application Design Notes: Sharing State by Using the Shared Property Manager (Visual Basic)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asconreadingavaluefromasharedproperty"></a>Application Design Notes: Sharing State by Using the Shared Property Manager</h1>
<p>
Using the<b> </b>Shared Property Manager makes sharing state in a multiuser environment as easy as it is in a single-user environment. Without the use of the<b> </b>Shared Property Manager, the application would require much more code that has nothing to do with the business problem at hand.</p>
<p>
One alternate way to create the same functionality would be to maintain the receipt number as a member variable of the Receipt <a href="vipdef01_1yih.htm#asdefvipercomponent">component</a>. However, this complicates coding the Receipt component immensely. The Receipt component would have to remain persistent in memory during the life of the <a href="vipdef01_1yih.htm#asdefasp">server process</a>. This would require the following additional code:
<ul>
<li>
Referencing all instances of MoveMoney to the Receipt object.</li>
<li>
Maintaining a locking mechanism to prevent concurrent access to the Receipt object.</li>
</ul>
<p>
Even after adding this code, the application wouldn't be extensible for additional <a href="vipdef01_1yih.htm#asdefsharedproperty">shared properties</a>. The Shared Property Manager is another example of how Microsoft Transaction Server provides the infrastructure for server applications so that you can concentrate on coding business logic.</p>
<p>
<b>Location Transparency and the Shared Property Manager</b></p>
<p>
For objects to share state, they all must be running in the same server process with the Shared Property Manager.</p>
<p>
To maintain location transparency, it's a good idea to limit the use of a shared property group to objects created by the same component, or to objects created by components implemented within the same <a href="vipdef01_1yih.htm#asdefdll">DLL</a>. When components provided by different DLLs use the same shared property group, you run the risk of an administrator moving one or more of those components into a different <a href="vipdef01_1yih.htm#asdefpackage">package</a>. Because components in different packages generally run in different processes, objects created by those components would no longer be able to share properties.</p>
<h5>See Also</h5>
<p>
<a href="mtxpg03_09gz.htm">Resource Dispensers</a>, <a href="mtxpg09vb_5kvn.htm">Stateful Components</a>, <a href="spamrefvb_4g2q.htm"><b>SharedPropertyGroupManager</b> object</a></p>
<p>&nbsp; </p></body>
</HTML>
