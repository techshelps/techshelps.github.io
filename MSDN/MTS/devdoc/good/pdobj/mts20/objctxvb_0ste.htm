<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetAbort Method (Visual Basic)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asmthsetabortvb"></a>SetAbort Method</h1>
<p>
Declares that the <a href="vipdef01_1yih.htm#asdeftransaction">transaction</a> in which the object is executing must be aborted, and that the object should be deactivated on returning from the currently executing method call.</p>
<p>
<b>Applies To</b></p>
<p>
<a href="objctxvb_24te.htm"><b>ObjectContext Object</b></a> </p>
<p>
<b>Syntax</b></p>
<pre><i>objectcontext</i>.<b>SetAbort</b></pre>
<p>
The <i>objectcontext</i> placeholder represents an <a href="vipdef01_1yih.htm#asdefobjectvariable">object variable</a> that evaluates to the <b>ObjectContext</b> associated with the current object.</p>
<p>
<b>Remarks</b></p>
<p>
The object is deactivated automatically on return from the method in which it called <b>SetAbort</b>. If the object is the root of an <a href="vipdef01_1yih.htm#asdefautomatictransaction">automatic transaction</a>, MTS aborts the transaction. If the object is transactional, but not the root of an automatic transaction, the transaction in which it's participating is doomed to abort. (An object is the root of a transaction if the MTS run-time environment has to initiate a new transaction for it. This is the case when the component that provides the object is configured to require a transaction and the object's <a href="vipdef01_1yih.htm#asdefcreator">creator</a> doesn't have one, or when the component is configured to require a new transaction.)</p>
<p>
You can call<b> SetAbort</b> in error handlers to ensure that a transaction aborts when an error occurs. You can also call <b>SetAbort</b> at the beginning of a method to protect your object from committing prematurely in the event of an unexpected return and then call <b>SetComplete</b> just before the method returns, if all goes well.</p>
<p>
<a href="objctxvb_18c8.htm"><b>Example</b></a></p>
<p>
<b>See Also</b></p>
<p>
<a href="mtxpg04_5soj.htm">Transactions</a>, <a href="mtxpg04_8b8z.htm">Context Objects</a>, <a href="mtxpg04_5s37.htm">Deactivating Objects</a></p>
<p>&nbsp; </p></body>
</HTML>
