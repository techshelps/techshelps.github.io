<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the UpdateReceipt Component (Visual Basic)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asconcreatingtheupdatereceiptcomponent"></a>Creating the UpdateReceipt Component</h1>
<p>
To implement the <a href="mtxpg10vb_57dx.htm">scenario</a> for this section, you will build the UpdateReceipt <a href="vipdef01_1yih.htm#asdefcomponent">component</a>. You will also modify the Receipt component's Update <a href="vipdef01_1yih.htm#asdefmethod">method</a> to use UpdateReceipt. Update adds 100 to the maximum receipt value stored in the database.</p>
<p>
<a href="sampcodevb_2mpk.htm"><img src="images/chiclet.gif" border=0>Click here to see the Update method</a></p>
<p>
You also need to add code to the GetNextReciept method of the Receipt component to check whether the maximum receipt value has been reached. If so, the Update method is called.</p>
<p>
<a href="sampcodevb_88zc.htm"><img src="images/chiclet.gif" border=0>Click here to see the GetNextReceipt method</a></p>
<h5><img src="images/prcarrow.gif" border=0>To create the UpdateReceipt component</h5>
<ol>
<li>
Open the \MTx\Samples\Account.VB\Step7\Account.vbp project.</li>
<li>
Build the component as a <a href="vipdef01_1yih.htm#asdefdll">dynamic-link library (DLL)</a> and save it as \MTx\Samples\Account.VB\Step7\VBAcct.dll.</li>
</ol>
<p>
By adding a new class module, you add a new <a href="vipdef01_1yih.htm#asdefcom">COM</a> component to this DLL. Therefore, you need to delete the existing components in the <a href="vipdef01_1yih.htm#asdefmicrosofttransactionserverexplorer">Microsoft Transaction Server Explorer</a> and then install the new components.</p>
<h5><img src="images/prcarrow.gif" border=0>To reinstall your components</h5>
<ol>
<li>
Remove the Account, MoveMoney, CreateTable, and Receipt components from the Transaction Server Explorer.</li>
</ol>
<p>
<a href="create_4gpx.htm"><img src="images/chiclet.gif" border=0>How?</a>
<ol>
<li>
Add the new components. Use the DLL you created in \MTx\Samples\Account.VB\Step7\VBAcct.dll.</li>
</ol>
<p>
<a href="create_1bj9.htm"><img src="images/chiclet.gif" border=0>How?</a></p>
<h5><img src="images/prcarrow.gif" border=0>To set the transaction attributes for your components</h5>
<ol>
<li>
For the Account and MoveMoney components, set the transaction attribute to <b>Requires a transaction</b>.</li>
</ol>
<p>
<a href="create_6gqb.htm"><img src="images/chiclet.gif" border=0>How?</a>
<ol>
<li>
For the Receipt component, set the transaction attribute to <b>Does not support transactions</b>. This is the default value.</li>
<li>
For the CreateTable and UpdateReceipt components, set the transaction attribute to <b>Requires a new transaction</b>.</li>
</ol>
<p>
The code you added here is similar to the code you added in "<a href="mtxpg07vb_7qr3.htm">Building Transactional Components</a>." However, choosing <b>Requires a new transaction</b> causes the UpdateReceipt component to run in a new transaction. The <a href="mtxpg10vb_320j.htm">next section</a> discusses how this affects application behavior.</p>
<h5>See Also</h5>
<p>
<a href="mtxpg04_5soj.htm">Transactions</a>, <a href="mtxpg04_8ier.htm">Transaction Attributes</a></p>
<p>&nbsp; </p></body>
</HTML>
