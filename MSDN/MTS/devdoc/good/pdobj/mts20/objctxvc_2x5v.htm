<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IObjectContext::IsCallerInRole Method (Visual C++)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asmthiscallerinrolevc"></a>IObjectContext::IsCallerInRole Method</h1>
<p>
Indicates whether an object's <a href="vipdef01_1yih.htm#asdefdirectcaller">direct caller</a> is in a specified <a href="vipdef01_1yih.htm#asdefrole">role</a> (either individually or as part of a <a href="vipdef01_1yih.htm#asdefgroup">group</a>).</p>
<p>
<b>Provided By</b></p>
<p>
<a href="objctxvc_24tf.htm"><b>IObjectContext</b></a></p>
<pre><b>HRESULT IObjectContext::IsCallerInRole (
    BSTR</b> <i>bstrRole</i>, 
    <b>BOOL*</b> <i>pfIsInRole</i>
<b>);</b></pre>
<p>
<b>Parameters</b></p>
<p>
<i>bstrRole<br>
</i>[in] The name of the role in which you want to determine whether the caller is acting.</p>
<p>
<i>pfIsInRole<br>
</i>[out] TRUE if the caller is in the specified role, FALSE if not. This parameter will also be set to TRUE if security is not enabled.</p>
<p>
<b>Return Values</b></p>
<p>
S_OK<br>
The role specified in the <i>bstrRole</i> parameter is a recognized role, and the <a href="vipdef01_1yih.htm#asdefboolean">Boolean</a> result returned in the <i>pfIsInRole</i> parameter indicates whether or not the caller is in that role.</p>
<p>
CONTEXT_E_<br>
ROLENOTFOUND<br>
The role specified in the <i>bstrRole</i> parameter does not exist.</p>
<p>
E_INVALIDARG<br>
One or more of the arguments passed in is invalid.</p>
<p>
E_UNEXPECTED<br>
An unexpected error occurred. This can happen if one object passes its <b>IObjectContext</b> pointer to another object and the other object calls <b>IsCallerInRole</b> using this pointer. An <b>IObjectContext</b> pointer is not valid outside the context of the object that originally obtained it.</p>
<p>
<b>Remarks</b></p>
<p>
You use this method to determine whether the direct caller of the currently executing method is associated with a specific role. A role is a symbolic name that represents a user or group of users who have specific access permissions to all <a href="vipdef01_1yih.htm#asdefvipercomponent">components</a> in a given <a href="vipdef01_1yih.htm#asdefpackage">package</a>. Developers define roles when they create a component, and roles are mapped to individual <a href="vipdef01_1yih.htm#asdefusername">users</a> or <a href="vipdef01_1yih.htm#asdefgroup">groups</a> at deployment time.</p>
<p>
<b>IsCallerInRole</b> only applies to the direct caller of the currently executing method. (The direct caller is the process calling into the current <a href="vipdef01_1yih.htm#asdefasp">server process</a>. It can be either a <a href="vipdef01_1yih.htm#asdefbaseclient">base client</a> process or a server process.) <b>IsCallerInRole</b> doesn't apply to the process that initiated the call sequence from which the current method was called, or to any other callers in that sequence.</p>
<p>
Because <b>IsCallerInRole</b> returns TRUE when the object that invokes it is executing in a client's process, it's a good idea to call <b>IsSecurityEnabled</b> before calling <b>IsCallerInRole</b>. If security isn't enabled, <b>IsCallerInRole</b> won't return an accurate result.</p>
<p>
<a href="objctxvc_6yig.htm"><b>Example</b></a></p>
<p>
<b>See Also</b></p>
<p>
<a href="mtxpg04_7i49.htm">Programmatic Security</a>, <a href="mtxpg04_6icz.htm">Basic Security Methods</a>, <a href="mtxpg11vb_8pdf.htm">Secured Components</a></p>
<p>&nbsp; </p></body>
</HTML>
