<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Server Processes</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asconserverprocesses"></a>Server Processes</h1>
<p>
A <i>server process</i> is a system process that hosts the execution of an application component. A server process can host multiple <a href="vipdef01_1yih.htm#asdefvipercomponent">components</a> and can service tens, hundreds, or potentially thousands of <a href="vipdef01_1yih.htm#asdefclient">clients</a>. You can configure multiple <a href="vipdef01_1yih.htm#asdefasp">server processes</a> to execute on a single computer. Each server process reflects a separate trust boundary and <a href="vipdef01_1yih.htm#asdeffaultisolation">fault isolation</a> domain.</p>
<p>
Other process environments can also host application components. As a result, you can deploy applications that meet varying distribution, performance, and fault isolation requirements. For example, you can configure MTS components to be loaded directly into Microsoft Internet Information Server (IIS). You can also configure them to load directly into client processes.</p>
<p>
<b>Server Process</b></p>
<p>
<img src="images/vi0302.gif" border=0></p>
<p>&nbsp; </p></body>
</HTML>
