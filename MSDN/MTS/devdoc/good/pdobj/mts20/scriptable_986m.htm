<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Automating Access to MTS Property Information</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asscriptingaccesstopropertyinformation"></a>Automating Access to MTS Property Information</h1>
<p>
The PropertyInfo collection stores information about each property in a collection. See the PropertyInfo topic in the MTS Administrative Reference for more information about this collection.</p>
<h5><img src="images/prcarrow.gif" border=0>To access and list the name of each property in a collection:</h5>
<ol>
<li>
Declare the objects that you will be using to access property information stored in the <a href="vipdef01_1yih.htm#asdefcatalog">catalog</a>.<pre><code>Dim catalog As Object
Dim packages As Object
Dim propertyInfo As Object
Dim property As Object</code></pre>
</li>
<li>
Use the <b>On Error</b> statement to handle run-time errors if a method returns a failure HRESULT. You can test and respond to MTS trappable errors using the <b>On Error</b> statement and the <b>Err</b> object.<pre><code>On Error GoTo failed</code></pre>
</li>
<li>
Call the <b>CreateObject</b> method to instantiate the Catalog object. Retrieve the <b>Packages</b> collection by calling the <b>GetCollection</b> method. Call the <b>GetCollection</b> method on the <b>Packages</b> collection to obtain the PropertyInfo collection. Note that the key value is left blank when calling <b>GetCollection</b> to access the PropertyInfo<b> </b>collection. The key value is not used because the information in PropertyInfo<b> </b>will be the same for all packages. Fill the PropertyInfo collection with information from the Catalog by using the <b>Populate</b> method.<pre><code>Set catalog = CreateObject("MTSAdmin.Catalog.1")
Set packages = catalog.GetCollection("Packages")
Set propertyInfo = packages.GetCollection("PropertyInfo", "")
propertyInfo.Populate</code></pre>
</li>
<li>
Enumerate through the PropertyInfo collection and list the names of each property in the collection.<pre><code>For Each property In propertyInfo
        Debug.Print property.Name
    Next
           
    Exit Sub</code></pre>
</li>
<li>
Use the <b>Err</b> object to display an error message if the installation of the package fails.<pre><code>failed:
    MsgBox "Failure code " + Str$(Err.Number)

End Sub</code></pre>
</li>
</ol>
<p>
<b>See Also</b></p>
<p>
<a href="adminref_21o3.htm">MTS Administration Objects</a>, <a href="adminref_4eur.htm">MTS Collection Types</a>, <a href="adminref_3fqr.htm">MTS Administration Object Methods</a>, <a href="scriptable_2n8u.htm">Automating MTS Administration with Visual Basic</a></p>
<p>&nbsp; </p></body>
</HTML>
