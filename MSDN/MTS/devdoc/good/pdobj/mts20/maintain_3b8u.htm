<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using MTS Replication</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asusingmtsreplication"></a>Using MTS Replication</h1>
<p>
MTS provides replication for use with Microsoft Cluster Server (MSCS). If an MTS server in a cluster fails or is taken offline, the other server takes over the failed server's operations.</p>
<h2>How to Replicate an MTS Server</h2>
<h5><img src="images/prcarrow.gif" border=0> To replicate an MTS server</h5>
<ol>
<li>
Install MTS on both computers. For more information, see <a href="settingup_1d4i.htm">Configuring MTS with Microsoft Cluster Server</a>.</li>
<li>
Designate a master computer and install your packages on that computer.</li>
<li>
Register any imported components on both computers.</li>
<li>
Ensure dependencies such as runtime libraries are installed on both computers. (See the Limitations section in this topic.)</li>
<li>
Specify a <b>Replication Share</b> name for the master on the <b>Options</b> tab on the <b>My Computer</b> property sheet (see the Package Contents Replication section in this topic).</li>
<li>
Run the MTXREPL.EXE command-line utility.</li>
</ol>
<p>
You use the MTXREPL.EXE command-line utility to replicate an MTS server. Both the master and destination computers must be running. MTXREPL.EXE takes the following arguments:</p>
<pre><code>MTXREPL.EXE <i>master</i> <i>destination</i></code></pre>
<p>
MTS replication uses a single-master approach, copying MTS <a href="vipdef01_1yih.htm#asdefcatalog">catalog</a> information from a master computer to a destination computer. To replicate to another destination computer, run the MTXREPL.EXE utility again. The single-master approach is not strictly enforced, however, so you can in turn use the destination computer as the master for another MTS server replication.</p>
<p>
During replication, MTS <i>completely</i> replaces the catalog on the destination with the catalog on the source, except where noted below in the What MTS Replication Does Not Do section in this topic. You cannot do partial replication. If MTS replication fails, run the MTXREPL.EXE utility again.</p>
<p>
Administrators are responsible for initiating MTS replication and must ensure that package changes to the master server are replicated to all computers within the cluster.</p>
<p>
It is recommended that replication be performed when the destination is not currently running MTS components. There is a window of failure on MTS startup while reading catalog information. If the replication were to occur at this time, package startup will fail, requiring the client to retry.</p>
<h3>Replicating IIS Packages</h3>
<p>
Use the Microsoft Internet Information Server (IIS) version 4.0 replication utility to replicate IIS packages. IIS replication copies all MTS catalog information automatically. Because of this, running the MTS replication utility is not necessary; in fact, it will not run if IIS 4.0 is installed.</p>
<h2>Package Contents Replication</h2>
<p>
MTS replication copies all necessary component <a href="vipdef01_1yih.htm#asdefdll">dynamic-link libraries (DLL)</a>s, type <a href="vipdef01_1yih.htm#asdeftypelibrary">type libraries</a>, and proxy-stub DLLs. To allow destination computers to access these files, you must specify a <b>Replication Share</b> name for the master on the <b>Options</b> tab on the <b>My Computer</b> property sheet. You must create this share on the master and grant read-only privileges to destination computers. The <b>Replication Share</b> name is the share name, not the directory that the share name maps to. For example, if you have d:\mtx\repl shared as MyReplPoint, then <b>Replication Share</b> should be MyReplPoint, not d:\mtx\repl.</p>
<p>
The <b>Replication Share</b> must grant read-only permission to the identity of the destination computer's System package. If the destination's System package performs role checking, then the identity of the System package on the master must belong to the Administrator role in the destination's System package.</p>
<p>
The location of the first component DLL in a package determines where files are installed on the destination computer. If this component is located in a subdirectory beneath the default package directory, the subdirectory is mirrored on the destination computer. The default package directory is determined during MTS setup; for example, if you install MTS into c:\program files\mtx, then the default package install directory is c:\program files\mtx\packages.</p>
<p>
If your packages are installed beneath this directory, they will be installed in the same location relative to the default package install directory on the destination computer. For example:</p>
<table cellspacing=5 cols=3>
<tr valign=top>
<th align=left width=17%>Computer</th>
<th align=left width=40%>Default Package Directory</th>
<th align=left width=43%>Package Install Directory</th>
</tr>
<tr valign=top>
<td colspan=3 width=100%></td>
</tr>
<tr valign=top>
<td width=17%>Master</td>
<td width=40%>c:\program files\mtx\packages</td>
<td width=43%>c:\program files\mtx\packages\MyPak</td>
</tr>
<tr valign=top>
<td width=17%>Destination</td>
<td width=40%>d:\mts\packages</td>
<td width=43%>d:\mts\packages\MyPak</td>
</tr>
</table><br>
<p>
Packages installed outside the default package install directory are installed in the "external" subdirectory on the destination computer. For the above example:</p>
<table cellspacing=5 cols=2>
<tr valign=top>
<th align=left width=28%>Computer</th>
<th align=left width=72%>Package Install Directory</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=28%>Master</td>
<td width=72%>Package A in c:\program files\mtx\packages\MyPak<br>
Package B in d:\misc</td>
</tr>
<tr valign=top>
<td width=28%>Destination</td>
<td width=72%>Package A and B in d:\mts\packages\MyPak</td>
</tr>
</table><br>
<p>
It is recommended you install packages beneath the default package directory. It is also recommended that all files of the same package reside in the same directory.</p>
<h2>Administering MTS Server Clusters</h2>
<p>
Administrators must always use physical computer names for administration in an MSCS cluster. If you are on the master computer in an MSCS cluster and you want to view the copy, use its physical computer name. To replicate between the master and copy, use the physical computer names.</p>
<p>
You must specify the virtual server name in the <b>Remote Server Name</b> on the <b>Options</b> tab on the <b>My Computer</b> property sheet for deploying MTS applications on an MSCS cluster. When you export a package using the <a href="vipdef01_1yih.htm#asdefapplicationexe">application executable utility</a>, clients which then install the application will be directed to the virtual server. If you do not set the <b>Remote Server Name</b>, clients will be directed to the physical computer, which is not the proper configuration for failover protection.</p>
<p>
You can also perform static <a href="vipdef01_1yih.htm#asdefloadbalancing">load balancing</a> with failover protection by specifying different virtual server names. By having two virtual server names, one for each physical computer, you can create a client installation executable for a package installed on both computers. By dividing their distribution among clients, static load balancing is achieved.</p>
<h5><img src="images/prcarrow.gif" border=0> To load balance an MTS application using virtual servers</h5>
<ol>
<li>
Decide on how you want to balance load.</li>
</ol>
<p>
For example, you can run all packages on only one computer at a time, run all packages on both computers, or run some packages on one computer and some on the other.
<ol>
<li>
Use the MSCS Cluster Administrator to create virtual server names for both computers.</li>
<li>
Export packages using the virtual server names that you created in Step 2.</li>
</ol>
<p>
If you want to run all packages on only a single computer at a time, export all packages under a single virtual server name. If you want to run all packages on both computers at the same time, export all packages twice, one for each virtual server name You must then distribute the two different sets of client installation executables to among your clients. If you want to run half the packages on one computer and half the packages on the other, export each half using a different virtual server name.
<ol>
<li>
Run the client executables on the client machines. Depending on how you chose to load balance in Step 1, you may have several executables to run on each client.</li>
</ol>
<h2>What MTS Replication Does Not Do</h2>
<p>
MTS replication does not do the following:
<ul>
<li>
Install MTS. You must setup MTS on each destination computer before running MTS replication.</li>
<li>
Replace MTS system and utilities packages and the IIS utilities packages. You must configure these packages identically on the master and destination (although file paths can differ). MTS does not enforce this; it is the responsibility of the administrator to synchronize both sets of packages as needed.</li>
<li>
Replicate computer-specific information such as the <b>Replication Share</b> and <b>Remote Server Name</b> properties.</li>
<li>
Replicate MTS component dependencies that cannot be detected by MTS such as run-time libraries. You must copy these files on each destination computer in order for applications to execute properly.</li>
<li>
Replicate local computer security accounts. Such accounts are not recommended for use within clusters for roles or package identities.</li>
<li>
Replicate persisted data that your application relies on. For example, SQL Server provides automatic failover for its databases; you must ensure that the database is configured to failover for your application.</li>
</ul>
<h2>Limitations</h2>
<ul>
<li>
MTS replication to or from Windows 95 computers is not supported.</li>
<li>
MTS replication will fail if there are any remote components on the master which are set to run on the destination computer.</li>
<li>
Imported components can only be replicated if they are already registered on the destination computers. Installed components are automatically registered and configured on the copy by the replication utility. When replicating components that were imported on the master, the replication utility expects to find the components already registered on the copy. It is your responsibly to manually register imported components on each destination computer prior to running the replication utility.</li>
<li>
Replication to or from versions of MTS prior to MTS 2.0 is not supported.</li>
</ul>
<p>
<b>See Also</b></p>
<p>
<a href="settingup_1d4i.htm">Configuring MTS with Microsoft Cluster Server</a>, <a href="roadmap_4vjm.htm">Options Tab (Computer)</a></p>
<p>&nbsp; </p></body>
</HTML>
