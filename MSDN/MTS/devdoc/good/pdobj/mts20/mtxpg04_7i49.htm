<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Programmatic Security</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asconocprogrammaticsecurity"></a>Programmatic Security</h1>
<p>
The MTS security model consists of <a href="vipdef01_1yih.htm#asdefdeclarativesecurity">declarative security</a> and <a href="vipdef01_1yih.htm#asdefprogrammaticsecurity">programmatic security</a>. Developers can build both declarative and programmatic security into their components prior to deploying them on a Windows NT security <a href="vipdef01_1yih.htm#asdefdomain">domain</a>.</p>
<p>
<b>Important</b>   Security is not supported on Windows 95. Note the following application behavior when running MTS on Windows 95:
<ul>
<li>
All identities are mapped to "Windows 95".</li>
<li>
Role configuration is not supported.</li>
<li>
Checking roles always return success.</li>
</ul>
<p>
<a href="vipdef01_1yih.htm#asdefrole">Roles</a> are central to the MTS security model. A role is an abstraction that defines a logical group of users. At development time, you use roles to define declarative authorization and programmatic security logic. At deployment time, you bind these roles to specific <a href="vipdef01_1yih.htm#asdefgroup">groups</a> and <a href="vipdef01_1yih.htm#asdefusername">users</a>.</p>
<p>
You can administer <a href="vipdef01_1yih.htm#asdefpackage">package</a> security with the <a href="vipdef01_1yih.htm#asdefmicrosofttransactionserverexplorer">MTS Explorer</a>. This is a form of declarative security, which does no't require any component programming is based on standard Windows NT security.</p>
<p>
MTS also allows component applications to implement additional access control programmatically. MTS security is integrated with <a href="vipdef01_1yih.htm#asdefdcom">DCOM</a> and Windows NT security. See the Microsoft Platform SDK for further information on <a href="vipdef01_1yih.htm#asdefcom">COM</a> security APIs.</p>
<h6>See Also</h6>
<p>
<a href="mtxpg04_6icz.htm">Basic Security Methods</a>, <a href="mtxpg04_4xkj.htm">Advanced Security Methods</a></p>
<p>&nbsp; </p></body>
</HTML>
