<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transaction Attributes</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="ascontransactionattributes"></a>Transaction Attributes</h1>
<p>
Every <a href="vipdef01_1yih.htm#asdefvipercomponent">MTS component</a> has a transaction attribute. The transaction attribute can have one of the following values:
<ul>
<li>
<b>Requires a transaction.</b> This value indicates that the component's <a href="vipdef01_1yih.htm#asdefmicrosofttransactionserverobject">objects</a> must execute within the scope of a <a href="vipdef01_1yih.htm#asdeftransaction">transaction</a>. When a new object is created, its object <a href="vipdef01_1yih.htm#asdefcontext">context</a> inherits the transaction from the context of the <a href="vipdef01_1yih.htm#asdefclient">client</a>. If the client does not have a transaction, MTS automatically creates a new transaction for the object.</li>
<li>
<b>Requires</b> <b>a new transaction.</b> This value indicates that the component's objects must execute within their own transactions. When a new object is created, MTS <i>automatically</i> creates a new transaction for the object, regardless of whether its client has a transaction.</li>
<li>
<b>Supports transactions. </b>This value indicates that the component's objects can execute within the scope of their client's transactions. When a new object is created, its object context inherits the transaction from the context of the client. If the client does not have a transaction, the new context is also created without one.</li>
<li>
<b>Does not support transactions.</b> This value indicates that the component's objects do not run within the scope of transactions. When a new object is created, its object context is created without a transaction, regardless of whether the client has a transaction.</li>
</ul>
<p>
Most MTS components are declared as either <b>Supports transactions</b> or <b>Requires a transaction</b>. These values allow an object to execute within the scope of its client's transaction. You can see the difference between these values when an object is created from a context that does not have a transaction. If the component's transaction attribute is <b>Supports transactions</b>, the new object runs without a transaction. If it is declared as <b>Requires a transaction</b>, <u>MTS</u> automatically initiates a transaction for the new object.</p>
<p>
Declaring a component as <b>Requires a new transaction </b>is similar to using <b>Requires a transaction </b>in that the component's objects are guaranteed to execute within transactions. However, when you declare the transaction attribute this way, an object never runs inside the scope of its client's transaction. Instead, the system always creates independent transactions for the new objects. For example, you can use this for auditing components that record work done on behalf of another transaction regardless of whether the original transaction commits or aborts.</p>
<p>
Specifying <b>Does not support transactions</b> ensures that an object's context does not contain a transaction. This value is the default setting and is primarily used with versions of <a href="vipdef01_1yih.htm#asdefcom">COM</a> components that precede <u>MTS</u>.</p>
<p>
Setting the Transaction Attribute</p>
<p>
The transaction attribute is part of a component definition. The component developer determines it, and changes to it are not recommended.</p>
<p>
You can set a transaction attribute at development time by:
<ul>
<li>
Using values defined in Mtxattr.h. You can specify these values in an .odl file to encode them into the component's <a href="vipdef01_1yih.htm#asdeftypelibrary">type library</a>.</li>
<li>
Using the <a href="vipdef01_1yih.htm#asdefmicrosofttransactionserverexplorer">MTS Explorer</a> to create a <a href="vipdef01_1yih.htm#asdefpackagedefinitionfile">package file</a> for deploying your components.</li>
</ul>
<p>
Because Because Microsoft Visual Basic automatically generates a type library, Visual Basic developers must use the MTS Explorer to set the transaction attribute.</p>
<h6>See Also</h6>
<p>
<a href="mtxpg03_7b77.htm">Application Components</a>, <a href="mtxpg04_5soj.htm">Transactions</a></p>
<p>&nbsp; </p></body>
</HTML>
