<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IObjectContext.CreateInstance Method (Visual J++)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asmthcreateinstanceobjvj"></a>IObjectContext.CreateInstance Method</h1>
<p>
Instantiates an <a href="vipdef01_1yih.htm#asdefmicrosofttransactionserverobject">MTS object</a>.</p>
<p>
<b>Provided By</b></p>
<p>
<a href="#asmthcreateinstanceobjvj">IObjectContext Interface</a></p>
<pre><b>IUnknown CreateInstance (
</b>    <b>_Guid </b><i>clsid</i>,
    <b>_Guid</b> <i>iid</i>,
<b>);</b></pre>
<p>
<b>Parameter</b></p>
<p>
<i>clsid<br>
</i>[in] The clsid of the type of object to instantiate.</p>
<p>
<i>iid<br>
</i>[in] Any interface that's implemented by the object you want to instantiate.</p>
<p>
<b>Return Value</b></p>
<p>
A reference to the <b>IUnknown</b> interface on the newly created object.</p>
<p>
<b>Remarks</b></p>
<p>
<b>CreateInstance</b> creates a COM object. However, the object will have context only if its component is registered with MTS.</p>
<p>
When you create an object by using <b>CreateInstance</b>, the new object's context is derived from the current object's <b>ObjectContext</b> and the declarative properties of the new object's component. The new object always executes within the same <a href="vipdef01_1yih.htm#asdefactivity">activity</a> as the object that created it. If the current object has a <a href="vipdef01_1yih.htm#asdeftransaction">transaction</a>, the transaction attribute of the new object's component determines whether or not the new object will execute within the scope of that transaction.</p>
<p>
If the component's transaction attribute is set to either <b>Requires a transaction</b> or <b>Supports transactions</b>, the new object inherits its <a href="vipdef01_1yih.htm#asdefcreator">creator</a>'s transaction. If the component's transaction attribute is set to <b>Requires a new transaction</b>, MTS initiates a new transaction for the new object. If the component's transaction attribute is set to <b>Does not support transactions</b>, the new object doesn't execute under any transaction.</p>
<p>
<b>CreateInstance</b> always returns the <b>IUnknown</b> interface on the newly instantiated object. You should immediately cast the returned value to the interface through which you want to communicate with the new object. The interface ID you pass in the <i>iid </i>parameter doesn't have to be the same interface as the one to which you cast the returned value, but it must be an interface that's implemented by the object you're instantiating.</p>
<p>
MTS always uses standard <a href="vipdef01_1yih.htm#asdefmarshaling">marshaling</a>. Even if a component exposes the <b>IMarshal</b> interface, its <b>IMarshal</b> methods will never be called by the MTS run-time environment.</p>
<p>
You can't create MTS objects as part of an aggregation.</p>
<p>
<a href="objctxvj_02uw.htm"><b>Example</b></a></p>
<p>
<b>See Also</b></p>
<p>
<a href="mtxpg04_0eb7.htm">Creating MTS Objects</a>, <a href="mtxpg04_8ier.htm">Transaction Attributes</a>, <a href="building_212r.htm">MTS Component Requirements</a></p>
<p>&nbsp; </p></body>
</HTML>
