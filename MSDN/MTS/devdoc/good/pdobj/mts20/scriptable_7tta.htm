<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Automating MTS Role Configuration</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="asscriptingroleconfiguration"></a>Automating MTS Role Configuration</h1>
<h5><img src="images/prcarrow.gif" border=0>To configure a role a package and component, and assign administrative privileges to a user:</h5>
<ol>
<li>
Declare the objects that you will be using to configure a role for a specific component.<pre><code>Dim catalog As Object
Dim packages As Object
Dim pack As Object
Dim comp As Object
Dim newUser As Object
Dim newRole As Object
Dim componentsInPack As Object
Dim RolesInPackage As Object
Dim usersInRole As Object
Dim rolesForComponent As Object
Dim util As Object</code></pre>
</li>
<li>
Use the <b>On Error</b> statement to handle run-time errors if a method returns a failure HRESULT. You can test and respond to MTS trappable errors using the <b>On Error</b> statement and the <b>Err</b> object.<pre><code>On Error GoTo failed</code></pre>
</li>
<li>
Call the <b>CreateObject</b> method to instantiate the Catalog object. Retrieve the Packages collection by calling the <b>GetCollection</b> method. Then populate the Packages collections with data from the <a href="vipdef01_1yih.htm#asdefcatalog">catalog</a>.<pre><code>Set catalog = CreateObject("MTSAdmin.Catalog.1")
Set packages = catalog.GetCollection("Packages")
packages.Populate</code></pre>
</li>
<li>
Enumerate through the Packages collection to look for the package named “My Package.” When “My Package” is located, call the <b>GetCollection</b> method to obtain the RolesInPackage collection. Add a new role to package using the <b>Add</b> method. Name the new role “R1,” and save changes to the collection.<pre><code>If pack.Name = "My Package" Then
 Set rolesInPack = packages.GetCollection("RolesInPackage", pack.Key)
            Set newRole = rolesInPack.Add
            newRole.Value("Name") = "R1"
            rolesInPack.savechanges</code></pre>
</li>
<li>
Call the <b>GetCollection</b> method on the RolesInPackage collection to get the UsersInRole collection. Use the <b>Add</b> function to add an existing NT user to the role. Set the user name to “administrator.” Save changes to the UsersInRole collection.<pre><code>Set usersInRole = RolesInPackage.GetCollection("UsersInRole",                 newRole.Key)
            Set newUser = usersInRole.Add
            newUser.Value("User") = "administrator"
            usersInRole.savechanges</code></pre>
</li>
<li>
Get the ComponentsInPackage collection using the <b>GetCollection</b> method. Populate the ComponentsInPackage collection, and enumerate through the collection to find the Bank.Account component. To associate the new role with the component, instantiate the RoleAssociationUtil object using the <b>GetUtilInterface </b>method. Then associate the new role with the component by calling the <b>AssociateRole</b> method.<pre><code>Set componentsInPack = packages.GetCollection("ComponentsInPackage", pack.Key)
            componentsInPack.Populate
            For Each comp In componentsInPack
                If comp.Name = "Bank.Account" Then
                    Set rolesForComponent = componentsInPack.GetCollection("RolesForPackageComponent", comp.Key)
                    Set util = rolesForComponent.GetUtilInterface
                    util.associateRole (newRole.Key)
                    Exit For
                End If
            Next
            Exit For
        End If
    Next
           
    Exit Sub</code></pre>
</li>
<li>
Use the Err object to display an error message if the installation of the component fails.<pre><code>failed:
    MsgBox "Failure code " + Str$(Err.Number)

End Sub</code></pre>
</li>
</ol>
<p>
<b>See Also</b></p>
<p>
<a href="adminref_21o3.htm">MTS Administration Objects</a>, <a href="adminref_4eur.htm">MTS Collection Types</a>, <a href="adminref_3fqr.htm">MTS Administration Object Methods</a>, <a href="scriptable_2n8u.htm">Automating MTS Administration with Visual Basic</a></p>
<p>&nbsp; </p></body>
</HTML>
