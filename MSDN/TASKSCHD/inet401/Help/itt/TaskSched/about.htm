<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About the Task Scheduler</TITLE>

<META NAME=MS-HKWD CONTENT="About the Task Scheduler">
<META NAME="Keywords" CONTENT="Internet Tools & Technologies">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT, Mac">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


<SCRIPT>
//<!--
var g_isIE = false, g_isNav = false, g_iMaj = 0, g_sPlat = "";
// -->
</SCRIPT>
<SCRIPT SRC="../../code/ver.js"></SCRIPT>


<SCRIPT DEFER SRC="../../code/common.js"></SCRIPT>
<SCRIPT DEFER>
//<!--
function InitPage()
{
	if (g_isIE && g_iMaj >= 4)	
	{
		SetTOC();
	}
}
//-->
</SCRIPT>

<LINK REL="stylesheet" HREF="/msdn/sdk/inetsdk/help/basicsdkIE4.css" TYPE="text/css">
<!-- STYLE_START -->


<SCRIPT>
//<!--
   var sVR = '../../'	// Set root for the style sheet
   var sCSS = '<LINK REL="stylesheet" HREF="' + sVR;

   if(g_isIE)
   {
	   if (g_iMaj >= 4) // For MSIE 4.0 or later
	   {
		   sCSS += 'basicSDKIE4';
		   if (g_sPlat == "Win") // Windows only for now
		   {
			   document.createStyleSheet(sVR + 'advSDKIE4.css');
		   }
	   }
	   else // For MSIE 3.0 or earlier
	   {
		   sCSS += 'basicSDKIE3';
	   }
   }
   else if (g_isNav) // For all Nav versions
   {
	   sCSS += 'basicSDKNAV';
   }
   else
   {
	   sCSS += 'basicSDKIE3'; // default to IE3 sheet
   }

   sCSS += (sCSS == '' ? '' : '.css" TYPE="text/css">');

   document.write(sCSS);
//-->
</SCRIPT>
<!-- STYLE_END -->
</HEAD>
<BODY onload="InitPage()" BGCOLOR="#FFFFFF">

<A NAME="pagetop"></A><A NAME="ch_task_about"></A>
<!-- NAV_LINKS_START -->
<TABLE class=main BORDER=0 CELLSPACING="0" CELLPADDING="0" WIDTH="10%"><TR><TD ROWSPAN="3" VALIGN="TOP" WIDTH="121"><IMG SRC="../../art/headbar2.gif" WIDTH="121" HEIGHT="82" BORDER=0 ALT="About the Task Scheduler"></TD><TD ROWSPAN="2" VALIGN="TOP" WIDTH="186"><IMG SRC="../../art/headbard.gif" WIDTH="186" HEIGHT="44" BORDER=0 ALT="About the Task Scheduler"></TD><TD VALIGN="TOP" WIDTH="470"><IMG SRC="../../art/replace1.gif" WIDTH="470" HEIGHT="17" BORDER=0 ALT="*"></TD></TR>
<TR><TD><PRE><IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_1" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Contents>
</object><A STYLE="color:black" ID=TOC HREF=JavaScript:hhal_1.Click()>Contents</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><object id="hhal_2" type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Item1" value="">
<PARAM name="Item2" value=_win32_Index_1sz1>
</object><A STYLE="color:black" HREF=JavaScript:hhal_2.Click()>Index</A>  <IMG SRC="../../art/arrowrht.gif" WIDTH="14" HEIGHT="14" ALIGN="MIDDLE" BORDER=0 ALT="*"><A STYLE="color:black" HREF="task.htm#book_task">Topic Contents</A></PRE></TD></TR>
<TR><TD COLSPAN="2"><PRE><IMG SRC="../../art/arrowlft.gif" WIDTH="17" HEIGHT="15" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Previous Topic:</B> <A STYLE="color:black" HREF="task.htm">Task Scheduler API</A>
<IMG SRC="../../art/arrownxt.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER=0 ALT="*"><B>Next Topic:</B> <A  STYLE="color:black" HREF="using.htm">Programming the Task Scheduler</A></PRE></TD></TR>
</TABLE>
<!-- NAV_LINKS_END -->
<BLOCKQUOTE class="body">
<!-- CONTENTS_START -->
<H1>About the Task Scheduler</H1>

<P>The Task Scheduler allows you to perform automated tasks on a chosen computer. The Task Scheduler monitors whatever criteria you choose and executes the task when the criteria for executing the task have been met. For example, you can have the computer run ScanDisk at 7:00 <SMALL>P.M.</SMALL> every Sunday.
<P><A CLASS=tctop HREF="about.htm#What_Is_a_Task_"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">What Is a Task?</A><BR>
<P><A CLASS=tctop HREF="about.htm#What_Is_a_Trigger_"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">What Is a Trigger?</A><BR>
<P><A CLASS=tctop HREF="about.htm#Idle_Triggers"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">What Is an Idle Trigger?</A><BR>
<P><A CLASS=tctop HREF="about.htm#Scheduled_WorkItem"><IMG SRC="../../art/arrowy.gif" WIDTH="6" HEIGHT="11" BORDER=0 ALT="arrowy.gif">What Is a Scheduled Work Item?</A><BR>
<H2><A NAME="What_Is_a_Task_">What Is a Task?</A></H2>
<P>A task is any object that the Task Scheduler can execute. These include any of the following (as supported by the operating system on which the task will execute): Win32&#174; application, Win16 application, OS/2 application, MS-DOS&#174; application, batch file (*.bat), command file (*.cmd), or any properly registered file type. A task has one or more <I>triggers</I> that determine when the task should be executed.

<P>You use the <A HREF="ifaces/itask/ITask.htm#ITask">ITask</A> interface to control and modify tasks.

 
<H2><A NAME="What_Is_a_Trigger_">What Is a Trigger?</A></H2>
<P>A trigger is a set of criteria that, when met, will activate and cause a task to be executed. There are two types of triggers: time-based and event-based. 

<P>Time-based triggers activate at a specified point in time. Not only can you set the time that they become active, but you can also have them activate once, daily, weekly, monthly, on a specified day of the month (the third day of the month), or on a specified day of the week of a month (the second Tuesday of the month).

<P>Event-based triggers activate in response to certain system events. There are event-based triggers that become active when the system starts up, when a user logs on to the local computer, or when the system becomes idle. The last of these are known as <I>idle triggers</I>.

<P>You use the <A HREF="ifaces/itasktrigger/ITaskTrigger.htm#ITaskTrigger">ITaskTrigger</A> interface to control and modify triggers.

 
<H2><A NAME="Idle_Triggers">What Is an Idle Trigger?</A></H2>
<P>When no keyboard or mouse input occurs, the computer is considered to be in an idle state. An idle trigger is an event-based trigger that becomes active a specified amount of time after the computer becomes idle. When you set the idle-related flags for a task, you create an idle trigger. You use the <A HREF="ifaces/ischeduledworkitem/SetIdleWait.htm#IScheduledWorkItem__">IScheduledWorkItem::SetIdleWait</A> method to set the amount of time that the system is idle before the task is executed. You can use the <A HREF="ifaces/ischeduledworkitem/GetIdleWait.htm#IScheduledWorkItem__">IScheduledWorkItem::GetIdleWait</A> method to retrieve this same value. There are three idle-related flags that can be set on a given task: TASK_FLAG_START_ONLY_IF_IDLE, TASK_FLAG_KILL_ON_IDLE_END, and TASK_FLAG_RESTART_ON_IDLE_RESUME (see <A HREF="ifaces/itask/SetTaskFlags.htm#ITask__SetTaskFlags">ITask::SetTaskFlags</A>).

<P><B>Note</B>  The Task Scheduler service that monitors triggers on Microsoft&#174; Windows NT&#174; does not monitor idle conditions and does not activate any idle triggers. This does not, however, affect the task itself. The TASK_EVENT_TRIGGER_ON_IDLE trigger type and the task idle time can be set and retrieved on Windows NT. The information associated with these triggers and flags is persistent. The only difference is that, on Windows NT, the idle trigger is never activated.
<H2><A NAME="Scheduled_WorkItem">What Is a Scheduled Work Item?</A></H2>
<P>A scheduled work item is an item that the Task Scheduler service runs at a time specified by the item's trigger(s). Currently the only type of scheduled work item is a task. 

<P>The <A HREF="ifaces/ischeduledworkitem/IScheduledWorkItem.htm#IScheduledWorkItem">IScheduledWorkItem</A> interface contains methods that are supported by all types of scheduled work items. Tasks are manipulated using the <A HREF="ifaces/itask/ITask.htm#ITask">ITask</A> interface, which derives from <B>IScheduledWorkItem</B>.

<!-- CONTENTS_END -->
<!-- START PAGE FOOTER -->
<H6><HR size=1></H6>
<P><A ID=line HREF="#pagetop"><IMG src="../../art/arrowup1.gif" WIDTH="17" HEIGHT="16" ALIGN="MIDDLE" BORDER="0" ALT="Up">&nbsp;Top of Page</A>
<BR><A ID=line HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
<!-- END PAGE FOOTER -->
</BLOCKQUOTE>
</BODY>
</HTML>