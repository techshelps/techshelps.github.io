<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Selecting an Address</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tapi3_selecting_an_address"></a>Selecting an Address</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The following code fragment demonstrates creating the TAPI object, checking its addresses, and examining an address's media capabilities.</p>
<pre><code>// Create TAPI entry point object
CoCreateInstance(CLSID_TAPI,
                 NULL,
                 CLSCTX_INPROC_SERVER,
                 IID_ITTAPI,
                 (void **) &amp;pTAPI);

// Initialize
pTAPI-&gt;Initialize;

// Enumerate addresses
pTAPI-&gt;_EnumerateAddresses(&amp;pIEnumAddresses);

// Go through addresses
while ( S_OK == pEnumAddresses-&gt;Next(1,
                                     &amp;pAddress,
                                     NULL)))
{
    // determine the media support
    pAddress-&gt;QueryInterface(IID_ITMediaSupport
                             &amp;pMediaSupport);
    // in this fragment, the media desired is already known.
    // the application can also use the address object to
    // enumerate the media supported, then choose from there.
    pMediaSupport-&gt;QueryMediaType(bstrMediaTypeImInterestedIn,
                                  &amp;bSupport);
    if (bSupport)
    {
        break;
    }
}
// pAddress is now an address I can use.

// determine the terminal support
hr = pAddress-&gt;QueryInterface(IID_ITTerminalSupport,
                              &amp;pTerminalSupport);

// just use the default terminal
pTerminalSupport-&gt;GetDefaultTerminal(pMediaTypeImInterestedIn,
                                     &amp;pTerminal);

if (!SUCCEEDED(hr))
{
    //failure
}

// now we have a terminal, and we already knew the media, so
// make the call
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
