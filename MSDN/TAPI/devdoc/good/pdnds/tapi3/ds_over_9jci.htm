<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PCM Mixer Filter</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tapi3_pcm_mixer_filter"></a>PCM Mixer Filter</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The audio mixer will accept input formats of WAVE_FORMAT_PCM and WAVE_FORMAT_MULAW. The only output format is WAVE_FORMAT_PCM. This means that the mixer will do a minimal translation from muLaw to PCM.</p>
<p>
It can mix 8-bit or 16-bit samples. When the input format is WAVE_FORMAT_PCM, the input and output sample sizes must be the same. If the input format is WAVE_FORMAT_MULAW the output sample size can be 8 or 16 bits.</p>
<p>
The mixer can mix with any buffer size or sampling frequency. The only restriction is that the buffer size and frequency must be the same for all inputs and output. The only exception is when the input format is muLaw and the output sample size is 16 bits. Then the output buffer size must be exactly twice the input buffer size.</p>
<p>
The mixer operates on a timed basis and thus does not wait for input to all its sources in order to mix. Using a delay that is determined by the buffer size, bits per sample, and sampling frequency, the mixer will periodically check all its inputs for data, then mix and deliver whatever data is available. When no data is available on any input, the mixer will deliver artificial silence.</p>
<p>&nbsp;</p></body>
</HTML>
