<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RTP Send Payload Handler (SPH) Filter</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tapi3_rtp_send_payload_handler_sph_filter"></a>RTP Send Payload Handler (SPH) Filter</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <a href="ds_ref_3x9u.htm"><b>RTP Send Payload Handler Filter</b></a> exposes a single input pin and a single output pin. The output pin of this filter is of type MEDIATYPE_RTP_Single_Stream/ MEDIASUBTYPE_RTP_Payload_XXXX. The input pin of this filter is of the corresponding media type. This filter is responsible for segmenting multimedia buffers into RTP packets as well as prepending appropriate RTP headers with RTP timestamps.</p>
<p>
Certain payload types require special encoding to be fragmented correctly by a payload handler. Typically, an <i>extended bitstream</i> is attached to the end of the multimedia data. To indicate to a codec that this alternative encoding is necessary, the SPH filter will expose input pins with a unique media type. For example, rather than exposing an input pin of type MEDIATYPE_Video/MEDIASUBTYPE_H263, the filter would expose one of type MEDIATYPE_Video/MEDIASUBTYPE_H263_Extended. Encoders unable to support this extended bitstream (which thus cannot be used to produce legal RTP H.263 streams) would have to be used with the generic RTP SPH, which accepts any payload type and subtype.</p>
<p>&nbsp;</p></body>
</HTML>
