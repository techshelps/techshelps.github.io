<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDispatch::Invoke</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tapi3_idispatch_invoke"></a>IDispatch::Invoke</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Provides access to properties and methods exposed by an object. The dispatch function <b>DispInvoke</b> provides a standard implementation of <b>IDispatch::Invoke</b>.</p>
<pre><code><b>HRESULT</b> <b>Invoke(</b>
<b>  DISPID</b> <i>dispIdMember</i><b>,</b>
<b>  REFIID</b> <i>riid</i><b>,</b>
<b>  LCID</b> <i>lcid</i><b>,</b>
<b>  WORD</b> <i>wFlags</i><b>,</b>
<b>  DISPPARAMS</b> <b>FAR</b>* <i>pDispParams</i><b>,</b>
<b>  VARIANT</b> <b>FAR</b>* <i>pVarResult</i><b>,</b>
<b>  EXCEPINFO</b> <b>FAR</b>* <i>pExcepInfo</i><b>,</b>
  <b>unsigned int FAR</b>* puArgErr
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dispIdMember</i></dt>
<dd>
Identifies the member. Use <b>GetIDsOfNames</b> or the object's documentation to obtain the dispatch identifier.</dd>
<dt>
<i>riid</i></dt>
<dd>
Reserved for future use. Must be IID_NULL.</dd>
<dt>
<i>lcid</i></dt>
<dd>
The locale context in which to interpret arguments. The <i>lcid</i> is used by the <b>GetIDsOfNames</b> function, and is also passed to Invoke to allow the object to interpret its arguments specific to a locale. 
<p>
Applications that do not support multiple national languages can ignore this parameter.
</dd>
<dt>
<i>wFlags</i></dt>
<dd>
Flags describing the context of the <b>Invoke</b> call, include:
<dl>
<dt>
DISPATCH_METHOD</dt>
<dd>
The member is invoked as a method. If a property has the same name, both this and the DISPATCH_PROPERTYGET flag may be set.</dd>
<dt>
DISPATCH_PROPERTYGET</dt>
<dd>
The member is retrieved as a property or data member.</dd>
<dt>
DISPATCH_PROPERTYPUT</dt>
<dd>
The member is changed as a property or data member.</dd>
<dt>
DISPATCH_PROPERTYPUTREF</dt>
<dd>
The member is changed by a reference assignment, rather than a value assignment. This flag is valid only when the property accepts a reference to an object.</dd>
</dl>
</dd>
<dt>
<i>pDispParams</i></dt>
<dd>
Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</dd>
<dt>
<i>pVarResult</i></dt>
<dd>
Pointer to the location where the result is to be stored, or Null if the caller expects no result. This argument is ignored if DISPATCH_PROPERTYPUT or DISPATCH_PROPERTYPUTREF is specified.</dd>
<dt>
<i>pExcepInfo</i></dt>
<dd>
Pointer to a structure that contains exception information. This structure should be filled in if DISP_E_EXCEPTION is returned. Can be Null.</dd>
<dt>
<i>puArgErr</i></dt>
<dd>
The index within rgvarg of the first argument that has an error. Arguments are stored in pDispParams-&gt;rgvarg in reverse order, so the first argument is the one with the highest index in the array. This parameter is returned only when the resulting return value is DISP_E_TYPEMISMATCH or DISP_E_PARAMNOTFOUND.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Success.</dd>
<dt>
DISP_E_BADPARAMCOUNT</dt>
<dd>
The number of elements provided to DISPPARAMS is different from the number of arguments accepted by the method or property.</dd>
<dt>
DISP_E_BADVARTYPE</dt>
<dd>
One of the arguments in rgvarg is not a valid variant type.</dd>
<dt>
DISP_E_EXCEPTION</dt>
<dd>
The application needs to raise an exception. In this case, the structure passed in <i>pExcepInfo</i> should be filled in.</dd>
<dt>
DISP_E_MEMBERNOTFOUND</dt>
<dd>
The requested member does not exist, or the call to <b>Invoke</b> tried to set the value of a read-only property.</dd>
<dt>
DISP_E_NONAMEDARGS</dt>
<dd>
This implementation of <b>IDispatch</b> does not support named arguments.</dd>
<dt>
DISP_E_OVERFLOW</dt>
<dd>
One of the arguments in rgvarg could not be coerced to the specified type.</dd>
<dt>
DISP_E_PARAMNOTFOUND</dt>
<dd>
One of the parameter DISPIDs does not correspond to a parameter on the method. In this case, <i>puArgErr</i> should be set to the first argument that contains the error.</dd>
<dt>
DISP_E_TYPEMISMATCH</dt>
<dd>
One or more of the arguments could not be coerced. The index within rgvarg of the first parameter with the incorrect type is returned in the <i>puArgErr</i> parameter.</dd>
<dt>
DISP_E_UNKNOWNINTERFACE</dt>
<dd>
The interface identifier passed in riid is not IID_NULL.</dd>
<dt>
DISP_E_UNKNOWNLCID</dt>
<dd>
The member being invoked interprets string arguments according to the LCID, and the LCID is not recognized. If the LCID is not needed to interpret arguments, this error should not be returned.</dd>
<dt>
DISP_E_PARAMNOTOPTIONAL</dt>
<dd>
A required parameter was omitted.
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
