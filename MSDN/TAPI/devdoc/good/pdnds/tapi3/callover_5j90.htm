<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Call Object</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tapi3_call_object"></a>Call Object</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The call object represents an address's connection between the local address and one or more other addresses. The following diagram represents a two-person phone call. The call objects are <i>pCallA</i> and <i>pCallB</i> , and the call hub is <i>pCallHub</i>. Users are represented as A and B.</p>
<p>
<img src="images/tapi3d.gif" border=0></p>
<p>
All call control is done through the call object. You can think of the call object as a first party view of the telephone call. Using the CallHub object, a user with the required security can discover and potentially control other participants in a call. For example, in the earlier picture, user A's application uses <i>pCallA</i> to do all call control, and user B's application uses <i>pCallB</i> to do all call control. A's application can use the <i>pCallHub</i> to get <i>pCallB</i>. A's application can use <i>pCallB</i> to discover information about B. If A has been granted sufficient rights, A's application can also use <i>pCallB</i> to perform call control from B's point of view.</p>
<p>
To make a call, an application selects an address object, then invokes the <a href="callref_5ylo.htm"><b>CreateCall</b></a> method as shown in the following code fragment:</p>
<pre><code>pAddress-&gt;CreateCall(pszDestAddress,
                         &amp;pCall);
    pCall-&gt;SelectMediaTerminals(…);
    pCall-&gt;Connect(TRUE);
 </code></pre>
<p>
After <a href="callref_8mr8.htm"><b>Connect</b></a> is called, the call has been started. At this point, the application can retrieve the CallHub object to find the other associated call objects. The following code fragment demonstrates the method calls. </p>
<pre><code>pCall-&gt;QueryInterface(IID_ITCallInfo,
                          &amp;pCallInfo);
    pCallInfo-&gt;get_CallHub(&amp;pCallHub);
    pCallHub-&gt;_EnumerateCalls(&amp;pEnumCalls);</code></pre>
<p>
<b>Note</b>  The application's own <i>pCall</i> is included when <a href="callref_5ek3.htm"><b>_EnumerateCalls</b></a> is invoked.</p>
<p>&nbsp;</p></body>
</HTML>
