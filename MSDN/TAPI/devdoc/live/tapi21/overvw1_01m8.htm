<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Call Ownership</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_call_ownership"></a>Call Ownership</h2>
<p>
The mechanism with which applications control calls is based on the concept of <i>ownership</i>. At any given time, one or more applications can own a call. While an application has ownership of a call, it is allowed to manipulate the call in ways that affect the state of the call. An application that does not own a call (but has a handle to it) is a <i>monitor</i> of the call and is prevented from manipulating it. It can only perform status- and information-query operations on that call. While one or more applications are owners of a call, still other applications can be monitoring the call. </p>
<p>
Ownership of a call is assigned to applications according to the following rules: 
<ul>
<li>
An application that makes an outgoing call is the initial sole owner of that call. Other applications monitoring the line will be informed of the outgoing call at the time the first <a href="msgs_1eud.htm">LINE_CALLSTATE</a> message is received. Usually, this notification occurs when a dial tone is initially detected. </li>
<li>
Ownership of an incoming call is assigned to one application only. This assignment avoids the situation in which, depending on timing, different applications may seize control at different times, causing unpredictable results. </li>
<li>
An application that is currently an owner of a call can pass ("hand off") ownership to another application that has the call's line open. While handing off ownership of a call, the original owner application can specify the new media type of the call. When the handoff succeeds, the original application remains an owner of the call, and it can then choose to either deallocate its handle (if it is no longer interested in the call), change to being a monitor (using <a href="func2_2m1x.htm"><b>lineSetCallPrivilege</b></a>), or remain an owner (although doing so is discouraged). The original application's privilege is <i>not</i> automatically changed by <a href="func1_0b52.htm"><b>lineHandoff</b></a>. For more information on the two types of call handoffs (<i>directed</i> and <i>media-mode</i>), see <a href="overvw1_8v03.htm">Directed Handoffs</a> and <a href="overvw1_0dtf.htm">Media Mode Handoffs</a>. </li>
<li>
If a target application for the handoff is found, and if it is already a co-owner of the call, it will see no effect caused by the handoff, although it will receive a <a href="msgs_1eud.htm">LINE_CALLSTATE</a> message. This message repeats the fact that it is an owner to alert it that another application has explicitly asked it to take control of the call. The application initiating the handoff is informed about the success of the handoff. </li>
<li>
If there is no target application for the requested handoff and the call is active, an error is returned. No handoff takes place. </li>
<li>
Handing off a call between applications never affects the state of the physical call as perceived by the switch or the service provider. </li>
<li>
An application that does not have (but wants) ownership of a call may request ownership. The application can select calls based on a number of criteria, ranging from all calls on a particular line or address (a phone number assigned to the line, using <a href="func1_88s3.htm"><b>lineGetNewCalls</b></a>), to calls related to a specified call (using <a href="func1_97xv.htm"><b>lineGetConfRelatedCalls</b></a>). An application that calls <b>lineGetNewCalls</b> or <b>lineGetConfRelatedCalls</b> will always receive a monitor handle. If it wants to become an owner of a call it receives, it must then call <a href="func2_2m1x.htm"><b>lineSetCallPrivilege</b></a>. If it determines that it is not interested in one or more of the calls to which it receives handles using <b>lineGetNewCalls</b> or <b>lineGetConfRelatedCalls</b>, it must call <a href="func1_6q5o.htm"><b>lineDeallocateCall</b></a> for each such handle to release the internal resources maintained to track the call ownership. </li>
<li>
Any application that asks for ownership receives it; any application that is offered ownership cannot refuse it. An application that becomes an owner through a handoff actually becomes a co-owner of the call. When the call is initially presented by the provider, the initial owner is the sole owner of the call. </li>
<li>
The originally owning applications are informed about the existence of every new owner. Monitoring applications are informed as well. </li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;<i>Co-owned calls</i> (calls simultaneously owned by more than one application), no protection is offered to prevent the applications from interfering with each other. For this reason, maintaining ownership after a handoff or after ownership is taken by another application is discouraged. </p>
<p>
Because media streams are not managed by the Telephony API, call handoff does not handle the handoff of the call's media stream. Media-stream handoff must be carried out using commands from an appropriate media-control API or directly coordinated between the applications involved. </p>
<p>&nbsp;</p></body>
</HTML>
