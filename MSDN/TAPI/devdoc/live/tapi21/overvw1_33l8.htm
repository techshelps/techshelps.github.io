<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dialing the Call</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_dialing_the_call"></a>Dialing the Call</h3>
<p>
The <a href="func1_0fsc.htm"><b>lineMakeCall</b></a> function first attempts to obtain a <i>call appearance</i> on an address on the line, then waits for a dial tone, and finally dials the specified address. A call appearance is a connection to the switch over which a call can be made. Once the connection is established, the call appearance exists, even if no call is placed. After the call is established, the call appearance remains in existence until the call transitions to the idle state. If calls controlled by other applications exist on the line, these calls would normally have to be on hold, and would typically be forced to stay on hold until the application either drops its call or places it on hold. If dialing is successful, a handle to a call with <i>owner</i> privileges is returned to the application. </p>
<p>
Before invoking <a href="func1_0fsc.htm"><b>lineMakeCall</b></a>, an application can set up parameters for the call and store them in the <a href="struc1_1tgy.htm"><b>LINECALLPARAMS</b></a> data structure. A pointer to this structure is then used as a parameter of <b>lineMakeCall</b>. In the members of <b>LINECALLPARAMS</b>, the application can specify the quality of service requested from the network, as well as a variety of ISDN call setup parameters. If no <b>LINECALLPARAMS</b> structure is supplied to <b>lineMakeCall</b>, a default POTS voice-grade call is requested with a set of default values. However, it is a good idea to use <b>LINECALLPARAMS</b> so that monitoring applications can report this call information (such as the identification of the called party) accurately. </p>
<p>
The call's origination address also appears in <b>LINECALLPARAMS</b>. Using this field, the application can specify the address on the line where it wants the call to originate. It can do so by specifying an address identifier, though in some configurations it is more practical to identify the originating address by its directory number. </p>
<p>
<b>Note</b>&nbsp;&nbsp;Do not mix function calls of TAPI with the those of Assisted Telephony because it creates needless repetition and additional overhead.</p>
<p>
Once dialing is complete and the call is being established, it passes through a number of different states. These states (the progress of the call) are provided to the application with <a href="msgs_1eud.htm">LINE_CALLSTATE</a> messages. This mechanism lets the application track whether the call is reaching the called party. It is important that every telephony application base its behavior on the information received in these messages, and not on any other assumptions about a call's state. An application must not assume that a requested state change has occurred until notification of that state change arrives. It can be helpful to display user-friendly interpretations of call states as indicators of a call's progress, especially for calls expected to pass through states slowly. </p>
<p>
If special call setup parameters are to be taken into consideration, the application must supply them to <a href="func1_0fsc.htm"><b>lineMakeCall</b></a>. Call setup parameters are required for actions such as the following: 
<ul>
<li>
Requesting a special bearer mode, bandwidth, or media mode for the call </li>
<li>
Sending user-user information (with ISDN) </li>
<li>
Securing the call </li>
<li>
Blocking sending of caller ID to the called party </li>
<li>
Taking the phone offhook automatically at the originator and/or the called party </li>
</ul>
<p>&nbsp;</p></body>
</HTML>
