<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>lineHold</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_linehold"></a>lineHold</h1>
<p>
The <b>lineHold</b> function places the specified call on hold. </p>
<pre><code><b>LONG lineHold(
  HCALL</b><i> hCall  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCall</i> </dt>
<dd>
A handle to the call to be placed on hold. The application must be an owner of the call. The call state of <i>hCall</i> must be <i>connected</i>. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns a positive request identifier if the function is completed asynchronously or a negative error number if an error occurs. The <i>dwParam2</i> parameter of the corresponding <a href="msgs_2ayh.htm">LINE_REPLY</a> message is zero if the function succeeds or it is a negative error number if an error occurs. Possible return values are: </p>
<p>
LINEERR_INVALCALLHANDLE, LINEERR_OPERATIONUNAVAIL, LINEERR_INVALCALLSTATE, LINEERR_OPERATIONFAILED, LINEERR_NOMEM, LINEERR_RESOURCEUNAVAIL, LINEERR_NOTOWNER, LINEERR_UNINITIALIZED.</p>
<h4>Remarks</h4>
<p>
The call on hold is temporarily disconnected allowing the application to use the line device for making or answering other calls. The <b>lineHold</b> function performs a so-called "hard hold" of the specified call (as opposed to a "consultation call"). A call on hard hold typically cannot be transferred or included in a conference call, but a consultation call can. Consultation calls are initiated using <a href="func2_25rm.htm"><b>lineSetupTransfer</b></a>, <a href="func2_84kl.htm"><b>lineSetupConference</b></a>, or <a href="func2_7vdx.htm"><b>linePrepareAddToConference</b></a>. </p>
<p>
After a call has been successfully placed on hold, the call state typically transitions to <i>onHold</i>. A held call is retrieved by <a href="func2_8zxg.htm"><b>lineUnhold</b></a>. While a call is on hold, the application can receive <a href="msgs_1eud.htm">LINE_CALLSTATE</a> messages about state changes of the held call. For example, if the held party hangs up, the call state can transition to <i>disconnected</i>. </p>
<p>
In a bridged situation, a <b>lineHold</b> operation may possibly not actually place the call on hold, because the status of other stations on the call can govern (for example, attempting to "hold" a call when other stations are participating is not be possible); instead, the call can simply be changed to the LINECONNECTEDMODE_INACTIVE mode if it remains <i>connected</i> at other stations. </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with tapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="quickref_9s85.htm">TAPI Reference Overview</a>, <a href="quickref_2bg3.htm">Supplementary Line Services Functions</a>, <a href="msgs_1eud.htm">LINE_CALLSTATE</a>, <a href="func2_7vdx.htm"><b>linePrepareAddToConference</b></a>, <a href="func2_84kl.htm"><b>lineSetupConference</b></a>, <a href="func2_25rm.htm"><b>lineSetupTransfer</b></a>, <a href="func2_8zxg.htm"><b>lineUnhold</b></a></p>
<p>&nbsp;</p></body>
</HTML>
