<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>lineSendUserUserInfo</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_linesenduseruserinfo"></a>lineSendUserUserInfo</h1>
<p>
The <b>lineSendUserUserInfo</b> function sends user-user information to the remote party on the specified call. </p>
<pre><code><b>LONG lineSendUserUserInfo(
  HCALL</b><i> hCall</i><b>,             </b>
<b>  LPCSTR</b><i> lpsUserUserInfo</i><b>,  </b>
<b>  DWORD</b><i> dwSize             </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCall</i> </dt>
<dd>
A handle to the call on which to send user-user information. The application must be an owner of the call. The call state of <i>hCall</i> must be <i>connected</i>, <i>offering</i>, <i>accepted</i>, or <i>ringback</i>. </dd>
<dt>
<i>lpsUserUserInfo</i> </dt>
<dd>
A pointer to a string containing user-user information to be sent to the remote party. User-user information is only sent if supported by the underlying network (see <a href="struc2_30mq.htm"><b>LINEDEVCAPS</b></a>). The protocol discriminator field for the user-user information, if required, should appear as the first byte of the buffer pointed to by <i>lpsUserUserInfo</i>, and must be accounted for in <i>dwSize</i>. </dd>
<dt>
<i>dwSize</i> </dt>
<dd>
The size in bytes of the user-user information in <i>lpsUserUserInfo</i>. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns a positive request identifier if the function is completed asynchronously, or a negative error number if an error occurs. The <i>dwParam2</i> parameter of the corresponding <a href="msgs_2ayh.htm">LINE_REPLY</a> message is zero if the function succeeds or it is a negative error number if an error occurs. Possible return values are: </p>
<p>
LINEERR_INVALCALLHANDLE, LINEERR_OPERATIONUNAVAIL, LINEERR_INVALCALLSTATE, LINEERR_OPERATIONFAILED, LINEERR_INVALPOINTER, LINEERR_RESOURCEUNAVAIL, LINEERR_NOMEM, LINEERR_USERUSERINFOTOOBIG, LINEERR_NOTOWNER, LINEERR_UNINITIALIZED.</p>
<h4>Remarks</h4>
<p>
This function can be used to send user-user information at any time during a connected call. If the size of the specified information to be sent is larger than what can fit into a single network message (as in ISDN), the service provider is responsible for dividing the information into a sequence of chained network messages (using "more data"). </p>
<p>
User-user information can also be sent as part of call accept, call reject, and call redirect, and when making calls. User-user information can also be received. The received information is available through the call's call-information record. Whenever user-user information arrives after call offering or prior to call disconnect, a LINE_CALLINFO message with a <i>UserUserInfo</i> parameter notifies the application that user-user information in the call-information record has changed. If multiple network messages are chained, the information is assembled by the service provider and a single message is sent to the application. </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with tapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="quickref_9s85.htm">TAPI Reference Overview</a>, <a href="quickref_2bg3.htm">Supplementary Line Services Functions</a>, <a href="msgs_22cv.htm">LINE_CALLINFO</a>, <a href="msgs_2ayh.htm">LINE_REPLY</a>, <a href="struc2_30mq.htm"><b>LINEDEVCAPS</b></a></p>
<p>&nbsp;</p></body>
</HTML>
