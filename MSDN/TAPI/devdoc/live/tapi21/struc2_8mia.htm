<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINEMEDIACONTROLCALLSTATE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_linemediacontrolcallstate_str"></a>LINEMEDIACONTROLCALLSTATE</h1>
<p>
The <b>LINEMEDIACONTROLCALLSTATE</b> structure describes a media action to be executed when detecting transitions into one or more call states. </p>
<pre><code>typedef struct linemediacontrolcallstate_tag {
    DWORD  dwCallStates;
    DWORD  dwMediaControl;
} LINEMEDIACONTROLCALLSTATE, FAR *LPLINEMEDIACONTROLCALLSTATE; 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwCallStates</b> </dt>
<dd>
Specifies one or more call states. This member uses the following LINECALLSTATE_ constants: 
<dl>
<dt>
LINECALLSTATE_IDLE </dt>
<dd>
The call is idle—no call exists. </dd>
<dt>
LINECALLSTATE_OFFERING </dt>
<dd>
The call is being offered to the station, signaling the arrival of a new call. In some environments, a call in the offering state does not automatically alert the user. Alerting is done by the switch instructing the line to ring, and it does not affect any call states. </dd>
<dt>
LINECALLSTATE_ACCEPTED </dt>
<dd>
The call was offering and has been accepted. This indicates to other (monitoring) applications that the current owner application has claimed responsibility for answering the call. In ISDN, this also initiates alerting to both parties. </dd>
<dt>
LINECALLSTATE_DIALTONE </dt>
<dd>
The call is receiving a dial tone from the switch, which means that the switch is ready to receive a dialed number. </dd>
<dt>
LINECALLSTATE_DIALING </dt>
<dd>
Destination address information (a phone number) is being sent to the switch over the call. The function <a href="func1_1c37.htm"><b>lineGenerateDigits</b></a> does not place the line into the <i>dialing</i> state. </dd>
<dt>
LINECALLSTATE_RINGBACK </dt>
<dd>
The call is receiving ringback from the called address. Ringback indicates that the other station has been reached and is being alerted. </dd>
<dt>
LINECALLSTATE_BUSY </dt>
<dd>
The call is receiving a busy tone. Busy tone indicates that the call cannot be completed because either a circuit (trunk) or the remote party's station are in use. </dd>
<dt>
LINECALLSTATE_SPECIALINFO </dt>
<dd>
Special information is sent by the network. Special information is typically sent when the destination cannot be reached. </dd>
<dt>
LINECALLSTATE_CONNECTED </dt>
<dd>
The call has been established, and the connection is made. Information is able to flow over the call between the originating address and the destination address. </dd>
<dt>
LINECALLSTATE_PROCEEDING </dt>
<dd>
Dialing has completed and the call is proceeding through the switch or telephone network. </dd>
<dt>
LINECALLSTATE_ONHOLD </dt>
<dd>
The call is on hold by the switch. </dd>
<dt>
LINECALLSTATE_CONFERENCED </dt>
<dd>
The call is currently a member of a multiparty conference call. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDCONF </dt>
<dd>
The call is currently on hold while it is being added to a conference. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDTRANSF </dt>
<dd>
The call is currently on hold awaiting transfer to another number. </dd>
<dt>
LINECALLSTATE_DISCONNECTED </dt>
<dd>
The remote party has disconnected from the call. </dd>
<dt>
LINECALLSTATE_UNKNOWN </dt>
<dd>
The state of the call is not known. This may be due to limitations of the call-progress detection implementation. </dd>
</dl>
</dd>
<dt>
<b>dwMediaControl</b> </dt>
<dd>
The media control action. This member uses the following LINEMEDIACONTROL_ constants: 
<dl>
<dt>
LINEMEDIACONTROL_NONE </dt>
<dd>
No change is to be made to the media stream. </dd>
<dt>
LINEMEDIACONTROL_RESET </dt>
<dd>
Reset the media stream. Equivalent to an end-of-input. All buffers are released. </dd>
<dt>
LINEMEDIACONTROL_PAUSE </dt>
<dd>
Temporarily pause the media stream. </dd>
<dt>
LINEMEDIACONTROL_RESUME </dt>
<dd>
Start or resume a paused media stream. </dd>
<dt>
LINEMEDIACONTROL_RATEUP </dt>
<dd>
The speed of the media stream is increased by some stream-defined quantity. </dd>
<dt>
LINEMEDIACONTROL_RATEDOWN </dt>
<dd>
The speed of the media stream is decreased by some stream-defined quantity. </dd>
<dt>
LINEMEDIACONTROL_RATENORMAL </dt>
<dd>
The speed of the media stream is returned to normal. </dd>
<dt>
LINEMEDIACONTROL_VOLUMEUP </dt>
<dd>
The amplitude of the media stream is increased by some stream-defined quantity. </dd>
<dt>
LINEMEDIACONTROL_VOLUMEDOWN </dt>
<dd>
The amplitude of the media stream is decreased by some stream-defined quantity. </dd>
<dt>
LINEMEDIACONTROL_VOLUMENORMAL </dt>
<dd>
The amplitude of the media stream is returned to normal. 
</dd>
</dl>
</dd>
</dl>
<h4>Remarks</h4>
<p>
No extensions. </p>
<p>
The <b>LINEMEDIACONTROLCALLSTATE</b> structure defines a triple &lt;call state(s), media-control action&gt;. An array of these triples is passed to the <b>lineSetMediaControl</b> function to set the media control actions triggered by the transition to the call state of the given call. When a transition to a listed call state is detected, the corresponding action on the media stream is invoked. </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.</p>
<h4>See Also</h4>
<p>
<a href="func1_1c37.htm"><b>lineGenerateDigits</b></a>, <a href="func2_4hbg.htm"><b>lineSetMediaControl</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
