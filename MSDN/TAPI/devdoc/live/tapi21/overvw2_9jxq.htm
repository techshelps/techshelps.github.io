<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Memory Allocation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_memory_allocation"></a>Memory Allocation</h2>
<p>
Memory for all data structures used by TAPI must be allocated by the application. The application passes a pointer to the API function that returns the information, and the function fills the data structure with the requested information. If the operation is asynchronous, then the information is not available until the asynchronous reply message indicates success. </p>
<p>
All data structures used to pass information between the application and the TAPI are <i>flattened</i>. This means that data structures do not contain pointers to substructures that contain variably sized components of information. Instead, data structures that are used to pass variable amounts of information back to the application have the following meta structure: </p>
<pre><code>DWORD  dwTotalSize;
    DWORD  dwNeededSize;
    DWORD  dwUsedSize; 
      &lt;fixed size fields&gt; 
    DWORD  dw&lt;VarSizeField1&gt;Size;
    DWORD  dw&lt;VarSizeField1&gt;Offset; 
      &lt;fixed size fields&gt; 
    DWORD  dw&lt;VarSizeField2&gt;Size;
    DWORD  dw&lt;VarSizeField2&gt;Offset; 
      &lt;common extensions&gt; 
      &lt;var sized field1&gt; 
      &lt;var sized field2&gt; 
 </code></pre>
<p>
The <b>dwTotalSize</b> member is the size in bytes allocated to this data structure. It marks the end of the data structure and is set by the application before it invokes the function that uses this data structure. The function does not read or write beyond this size. An application must set the <b>dwTotalSize</b> member to indicate the total number of bytes allocated for TAPI to return the contents of the structure. </p>
<p>
The <b>dwNeededSize</b> member is filled in by TAPI. It indicates how many bytes are needed to return all the information requested. The existence of variably sized fields often makes it impossible for the application to estimate the data structure size it needs to allocate. This field simply returns the number of bytes actually needed for the information. This number could be smaller than, equal to, or larger than <b>dwTotalSize</b>, and it includes space for the <b>dwTotalSize</b> member itself. If larger, the returned structure is only partially filled. If the fields the application is interested in are available in the partial structure, nothing else must be done. Otherwise, the application should allocate a structure at least the size of <b>dwNeededSize</b> and invoke the function again. Usually, enough space is available this time to return all the information, although it is possible the size could have increased again. </p>
<p>
The <b>dwUsedSize</b> member is filled in by TAPI if it returns information to the application to indicate the actual size in bytes of the portion of the data structure that contains useful information. If, for example, a structure that was allocated was too small and the truncated field is a variably sized field, <b>dwNeededSize</b> is larger than <b>dwTotalSize</b>, and the truncated field is left empty. The <b>dwUsedSize</b> member could therefore be smaller than <b>dwTotalSize</b>. Partial field values are not returned. </p>
<p>
Following this header is the fixed part of the data structure. It contains regular fields and size/offset pairs that describe the actual variably sized fields. The offset field contains the offset in bytes of the variably sized field from the beginning of the record. The size field contains the size in bytes of the variably sized field. If a variably sized field is empty, then the size field is zero and the offset is set to zero. Variably sized fields that would be truncated if the total structure size is insufficient are left empty. That is, their size field is set to zero and the offset is set to zero. The variably sized fields follow the fixed fields. </p>
<p>&nbsp;</p></body>
</HTML>
