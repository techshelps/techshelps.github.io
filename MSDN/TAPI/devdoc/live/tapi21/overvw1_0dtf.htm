<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Media Mode Handoffs</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_media_mode_handoffs"></a>Media Mode Handoffs</h3>
<p>
A <i>media mode handoff</i> takes place when there is a new, targeted media mode, usually when the owning application determines that the media mode needed for the call is not present or is about to change. The process for a media-dependent handoff can be a probing process if the UNKNOWN bit is on, and is virtually the same as for the initial assignment of a call to an application. The difference is the fact that <a href="func1_0b52.htm"><b>lineHandoff</b></a> can have only one media-mode bit set. </p>
<p>
Because only a single media mode bit can be specified, the call is given to the highest priority application for that media mode. However, it is possible that more than one media mode is to be considered for the handoff. In this case, the handing-off application should specify the highest priority of the possible media modes as a parameter for <b>lineHandoff</b>. If an application specifies the UNKNOWN bit when performing a media-mode handoff and the handoff fails, this means that no unknown application is currently running. The application that is handing off should then try to hand the call off to the highest priority application registered for the next higher media mode. </p>
<p>
The receiving application is now responsible for the call. It now probes for the call's actual media mode. If the call's media mode matches that handled by the application, it must ensure that it is the highest-priority application registered for that media mode. If so, it keeps the call and processes it normally. If not, it hands the call off to another application registered for that media mode. </p>
<p>
If, however, the probe for that media mode fails, the application probes again, attempting the remaining media-mode possibilities. It determines these by examining the <b>dwMediaMode</b> member in the <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a> structure. But first, using the <a href="func2_5bl1.htm"><b>lineSetMediaMode</b></a> function, the owning application turns off the bit for the current (disproved) media mode in the <b>dwMediaMode</b> member. </p>
<p>
This process of probing and handing off continues, and the remaining media modes are eliminated one by one. Along the way, one of the applications may see that the media mode it handles is on the call, and the handoff is successful. The application should now perform a final <a href="func2_5bl1.htm"><b>lineSetMediaMode</b></a> to set the correct media mode and clear all other media-mode bits. This informs other interested applications of the correct media mode. These other applications receive a LINE_CALLINFO message stating that the call's media mode has changed. To determine the correct media mode, they invoke <a href="func1_5zov.htm"><b>lineGetCallInfo</b></a> and examine the <b>dwMediaMode</b> member in the <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a> structure. </p>
<p>
It is the responsibility of the owning application to cycle through media modes to find the highest-priority application. TAPI does this cycling only on the initial incoming call to find the first owner. It does not do it when <a href="func1_0b52.htm"><b>lineHandoff</b></a> is called. </p>
<p>
To sum up the media-mode handoff process, TAPI <i>does not</i> check for other media bits during <b>lineHandoff</b>. TAPI only attempts to hand off to the <i>single</i> media mode indicated in the parameter to <b>lineHandoff</b>. It is up to the application to turn off the bit corresponding to the media mode that failed to hand off, and to try other media modes until the handoff succeeds or all the possible media modes are exhausted. If it gets to a point where all of the bits are off except for UNKNOWN, it must abandon the call by calling <a href="func1_0zhs.htm"><b>lineDrop</b></a> and then deallocating the handle. </p>
<p>&nbsp;</p></body>
</HTML>
