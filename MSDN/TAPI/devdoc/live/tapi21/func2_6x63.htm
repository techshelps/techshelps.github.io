<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>linePark</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_linepark"></a>linePark</h1>
<p>
The <b>linePark</b> function parks the specified call according to the specified park mode. </p>
<pre><code><b>LONG linePark(
  HCALL</b><i> hCall</i><b>,                 </b>
<b>  DWORD</b><i> dwParkMode</i><b>,            </b>
<b>  LPCSTR</b><i> lpszDirAddress</i><b>,       </b>
<b>  LPVARSTRING</b><i> lpNonDirAddress  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCall</i> </dt>
<dd>
A handle to the call to be parked. The application must be an owner of the call. The call state of <i>hCall</i> must be <i>connected</i>. </dd>
<dt>
<i>dwParkMode</i> </dt>
<dd>
The park mode with which the call is to be parked. This parameter can have only a single flag set, and uses the following LINEPARKMODE_ constants: 
<dl>
<dt>
LINEPARKMODE_DIRECTED </dt>
<dd>
The application specifies at which address the call is to be parked in <i>lpszDirAddress</i>. </dd>
<dt>
LINEPARKMODE_NONDIRECTED </dt>
<dd>
This operation reports to the application where the call has been parked in <i>lpNonDirAddress</i>. 
</dd>
</dl>
</dd>
<dt>
<i>lpszDirAddress</i> </dt>
<dd>
A pointer to a NULL-terminated string that indicates the address where the call is to be parked when using directed park. The address is in dialable number format. This parameter is ignored for nondirected park. </dd>
<dt>
<i>lpNonDirAddress</i> </dt>
<dd>
A pointer to a structure of type <a href="struc2_90xe.htm"><b>VARSTRING</b></a>. For nondirected park, the address where the call is parked is returned in this structure. This parameter is ignored for directed park. Within the <b>VARSTRING</b> structure, <b>dwStringFormat</b> must be set to STRINGFORMAT_ASCII (an ASCII string buffer containing a NULL-terminated string), and the terminating NULL must be accounted for in the <b>dwStringSize</b>. Prior to calling <b>linePark</b>, the application should set the <b>dwTotalSize</b> member of this structure to indicate the amount of memory available to TAPI for returning information. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns a positive request identifier if the function is completed asynchronously, or a negative error number if an error occurs. The <i>dwParam2</i> parameter of the corresponding <a href="msgs_2ayh.htm">LINE_REPLY</a> message is zero if the function succeeds or it is a negative error number if an error occurs. Possible return values are: </p>
<p>
LINEERR_INVALADDRESS, LINEERR_NOTOWNER, LINEERR_INVALCALLHANDLE, LINEERR_OPERATIONUNAVAIL, LINEERR_INVALCALLSTATE, LINEERR_OPERATIONFAILED, LINEERR_INVALPARKMODE, LINEERR_RESOURCEUNAVAIL, LINEERR_INVALPOINTER, LINEERR_STRUCTURETOOSMALL, LINEERR_NOMEM, LINEERR_UNINITIALIZED.</p>
<h4>Remarks</h4>
<p>
With directed park, the application determines the address at which it wants to park the call. With nondirected park, the switch determines the address and provides this to the application. In either case, a parked call can be unparked by specifying this address. </p>
<p>
The parked call typically enters the <i>idle</i> state after it has been successfully parked, and the application should then deallocate its handle to the call. If the application performs a <a href="func2_2q5n.htm"><b>lineUnpark</b></a> on the parked call, a new call handle is created for the unparked call even if the application has not deallocated its old call handle. </p>
<p>
Some switches can remind the user after a call has been parked for some long amount of time. The application sees an <i>offering</i> call with a call reason set to <i>reminder</i>. </p>
<p>
On a nondirected park, if the <b>dwTotalSize</b> member in the <b>VARSTRING</b> structure does not specify a sufficient amount of memory to receive the park address, the corresponding reply message returns a LINEERR_STRUCTURETOOSMALL error value. In such cases, there is no way to retrieve the complete park address. When a LINEERR_STRUCTURETOOSMALL error value is returned, the <b>dwNeededSize</b> member of the NonDirAddress structure does not contain a valid value. If a LINEERR_STRUCTURETOOSMALL error value is received from a nondirected <b>linePark</b>, then increase the size of the buffer and call <b>linePark</b> again until it returns either success or a different LINEERR_XXX result. </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with tapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="quickref_9s85.htm">TAPI Reference Overview</a>, <a href="quickref_2bg3.htm">Supplementary Line Services Functions</a>, <a href="msgs_2ayh.htm">LINE_REPLY</a>, <a href="func2_2q5n.htm"><b>lineUnpark</b></a>, <a href="struc2_90xe.htm"><b>VARSTRING</b></a></p>
<p>&nbsp;</p></body>
</HTML>
