<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINE_CALLSTATE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_line_callstate"></a>LINE_CALLSTATE</h1>
<p>
The LINE_CALLSTATE message is sent when the status of the specified call has changed. Typically, several such messages are received during the lifetime of a call. Applications are notified of new incoming calls with this message; the new call is in the <i>offering</i> state. The application can use <a href="func1_106r.htm"><b>lineGetCallStatus</b></a> to retrieve more detailed information about the current status of the call. </p>
<pre><code>LINE_CALLSTATE
dwDevice = (DWORD) hCall;
dwCallbackInstance = (DWORD) hCallback;
dwParam1 = (DWORD) CallState;
dwParam2 = (DWORD) CallStateDetail;
dwParam3 = (DWORD) CallPrivilege;
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwDevice</i> </dt>
<dd>
A handle to the call. </dd>
<dt>
<i>dwCallbackInstance</i> </dt>
<dd>
The callback instance supplied when opening the call's line. </dd>
<dt>
<i>dwParam1</i> </dt>
<dd>
The new call state. This parameter must be one and only one of the following LINECALLSTATE_ values: 
<dl>
<dt>
LINECALLSTATE_IDLE </dt>
<dd>
The call is idle—no call actually exists. </dd>
<dt>
LINECALLSTATE_OFFERING </dt>
<dd>
The call is being offered to the station, signaling the arrival of a new call. In some environments, a call in the offering state does not automatically alert the user. Alerting is done by the switch instructing the line to ring; it does not affect any call states. </dd>
<dt>
LINECALLSTATE_ACCEPTED </dt>
<dd>
The call was offering and has been accepted. This indicates to other (monitoring) applications that the current owner application has claimed responsibility for answering the call. In ISDN, this also indicates that alerting to both parties has started. </dd>
<dt>
LINECALLSTATE_DIALTONE </dt>
<dd>
The call is receiving a dial tone from the switch, which means that the switch is ready to receive a dialed number. </dd>
<dt>
LINECALLSTATE_DIALING </dt>
<dd>
Destination address information (a phone number) is being sent to the switch over the call. Note that <a href="func1_1c37.htm"><b>lineGenerateDigits</b></a> does not place the line into the <i>dialing</i> state. </dd>
<dt>
LINECALLSTATE_RINGBACK </dt>
<dd>
The call is receiving ringback from the called address. Ringback indicates that the other station has been reached and is being alerted. </dd>
<dt>
LINECALLSTATE_BUSY </dt>
<dd>
The call is receiving a busy tone. Busy tone indicates that the call cannot be completed—either a circuit (trunk) or the remote party's station are in use. </dd>
<dt>
LINECALLSTATE_SPECIALINFO </dt>
<dd>
Special information is sent by the network. Special information is typically sent when the destination cannot be reached. </dd>
<dt>
LINECALLSTATE_CONNECTED </dt>
<dd>
The call has been established and the connection is made. Information is able to flow over the call between the originating address and the destination address. </dd>
<dt>
LINECALLSTATE_PROCEEDING </dt>
<dd>
Dialing has completed and the call is proceeding through the switch or telephone network. </dd>
<dt>
LINECALLSTATE_ONHOLD </dt>
<dd>
The call is on hold by the switch. </dd>
<dt>
LINECALLSTATE_CONFERENCED </dt>
<dd>
The call is currently a member of a multiparty conference call. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDCONF </dt>
<dd>
The call is currently on hold while it is being added to a conference. </dd>
<dt>
LINECALLSTATE_ONHOLDPENTRANSFER </dt>
<dd>
The call is currently on hold awaiting transfer to another number. </dd>
<dt>
LINECALLSTATE_DISCONNECTED </dt>
<dd>
The remote party has disconnected from the call. </dd>
<dt>
LINECALLSTATE_UNKNOWN </dt>
<dd>
The state of the call is not known. This may be due to limitations of the call-progress detection implementation. 
</dd>
</dl>
</dd>
<dt>
<i>dwParam2</i> </dt>
<dd>
Call-state-dependent information. 
<p>
If <i>dwParam1</i> is LINECALLSTATE_BUSY, <i>dwParam2</i> contains details about the busy mode. This parameter uses the following LINEBUSYMODE_ constants: 

<dl>
<dt>
LINEBUSYMODE_STATION </dt>
<dd>
The busy signal indicates that the called party's station is busy. This is usually signaled by means of a "normal" busy tone. </dd>
<dt>
LINEBUSYMODE_TRUNK </dt>
<dd>
The busy signal indicates that a trunk or circuit is busy. This is usually signaled with a "long" busy tone. </dd>
<dt>
LINEBUSYMODE_UNKNOWN </dt>
<dd>
The busy signal's specific mode is currently unknown, but may become known later. </dd>
<dt>
LINEBUSYMODE_UNAVAIL </dt>
<dd>
The busy signal's specific mode is unavailable and cannot become known. 
</dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_CONNECTED, <i>dwParam2</i> contains details about the connected mode. This parameter uses the following LINECONNECTEDMODE_ constants: 

<dl>
<dt>
LINECONNECTEDMODE_ACTIVE </dt>
<dd>
Indicates that the call is connected at the current station (the current station is a participant in the call). </dd>
<dt>
LINECONNECTEDMODE_INACTIVE </dt>
<dd>
Indicates that the call is active at one or more other stations, but the current station is not a participant in the call. 
</dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_DIALTONE, <i>dwParam2</i> contains the details about the dial tone mode. This parameter uses the following LINEDIALTONEMODE_ constants: 

<dl>
<dt>
LINEDIALTONEMODE_NORMAL </dt>
<dd>
This is a "normal" dial tone, which typically is a continuous tone. </dd>
<dt>
LINEDIALTONEMODE_SPECIAL </dt>
<dd>
This is a special dial tone indicating that a certain condition is currently in effect. </dd>
<dt>
LINEDIALTONEMODE_INTERNAL </dt>
<dd>
This is an internal dial tone, as within a PBX. </dd>
<dt>
LINEDIALTONEMODE_EXTERNAL </dt>
<dd>
This is an external (public network) dial tone. </dd>
<dt>
LINEDIALTONEMODE_UNKNOWN </dt>
<dd>
The dial tone mode is currently unknown, but may become known later. </dd>
<dt>
LINEDIALTONEMODE_UNAVAIL </dt>
<dd>
The dial tone mode is unavailable and cannot become known. 
</dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_OFFERING, <i>dwParam2</i> contains details about the connected mode. This parameter uses the following LINEOFFERINGMODE_ constants: 

<dl>
<dt>
LINEOFFERINGMODE_ACTIVE </dt>
<dd>
Indicates that the call is alerting at the current station (is accompanied by LINEDEVSTATE_RINGING messages), and if any application is set up to automatically answer, it may do so. </dd>
<dt>
LINEOFFERINGMODE_INACTIVE </dt>
<dd>
Indicates that the call is being offered at more than one station, but the current station is not alerting (for example, it may be an attendant station where the offering status is advisory, such as blinking a light). 
</dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_SPECIALINFO, <i>dwParam2</i> contains the details about the special information mode. This parameter uses the following LINESPECIALINFO_ constants: 

<dl>
<dt>
LINESPECIALINFO_NOCIRCUIT </dt>
<dd>
This special information tone precedes a "no circuit" or emergency announcement (trunk blockage category). </dd>
<dt>
LINESPECIALINFO_CUSTIRREG </dt>
<dd>
This special information tone precedes a vacant number, AIS, Centrex number change and nonworking station, access code not dialed or dialed in error, or manual intercept operator message (customer irregularity category). </dd>
<dt>
LINESPECIALINFO_REORDER </dt>
<dd>
This special information tone precedes a reorder announcement (equipment irregularity category). </dd>
<dt>
LINESPECIALINFO_UNKNOWN </dt>
<dd>
Specifics about the special information tone are currently unknown but may become known later. </dd>
<dt>
LINESPECIALINFO_UNAVAIL </dt>
<dd>
Specifics about the special information tone are unavailable and cannot become known. 
</dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_DISCONNECTED, <i>dwParam2</i> contains details about the disconnect mode. This parameter uses the following LINEDISCONNECTMODE_ constants: 

<dl>
<dt>
LINEDISCONNECTMODE_NORMAL </dt>
<dd>
This is a "normal" disconnect request by the remote party, the call was terminated normally. </dd>
<dt>
LINEDISCONNECTMODE_UNKNOWN </dt>
<dd>
The reason for the disconnect request is unknown. </dd>
<dt>
LINEDISCONNECTMODE_REJECT </dt>
<dd>
The remote user has rejected the call. </dd>
<dt>
LINEDISCONNECTMODE_PICKUP </dt>
<dd>
The call was picked up from elsewhere. </dd>
<dt>
LINEDISCONNECTMODE_FORWARDED </dt>
<dd>
The call was forwarded by the switch. </dd>
<dt>
LINEDISCONNECTMODE_BUSY </dt>
<dd>
The remote user's station is busy. </dd>
<dt>
LINEDISCONNECTMODE_NOANSWER </dt>
<dd>
The remote user's station does not answer. </dd>
<dt>
LINEDISCONNECTMODE_NODIALTONE </dt>
<dd>
A dial tone was not detected within a service-provider defined timeout, at a point during dialing when one was expected (such as at a "W" in the dialable string). This can also occur without a service-provider-defined timeout period or without a value specified in the <b>dwWaitForDialTone</b> member of the <a href="struc2_5u9e.htm"><b>LINEDIALPARAMS</b></a> structure. </dd>
<dt>
LINEDISCONNECTMODE_BADADDRESS </dt>
<dd>
The destination address in invalid. </dd>
<dt>
LINEDISCONNECTMODE_UNREACHABLE </dt>
<dd>
The remote user could not be reached. </dd>
<dt>
LINEDISCONNECTMODE_CONGESTION </dt>
<dd>
The network is congested. </dd>
<dt>
LINEDISCONNECTMODE_INCOMPATIBLE </dt>
<dd>
The remote user's station equipment is incompatible for the type of call requested. </dd>
<dt>
LINEDISCONNECTMODE_UNAVAIL </dt>
<dd>
The reason for the disconnect is unavailable and cannot become known later. 
</dd>
</dl>

<p>
<b>Note</b>&nbsp;&nbsp;In circumstances where a <i>delayed</i> response is appropriate, use LINEDISCONNECTMODE_TEMPFAILURE. Where a <i>blacklisted</i> response is appropriate, use LINEDISCONNECT_BLOCKED. For further information, see <a href="constnts_2hv7.htm">LINEDISCONNECTMODE_ Constants</a>. 


<p>
If <i>dwParam1</i> is LINECALLSTATE_CONFERENCED, <i>dwParam2</i> contains the <i>hConfCall</i> parameter of the parent call of the conference of which the subject <i>hCall</i> is a member. If the call specified in <i>dwParam2</i> was not previously considered by the application to be a parent conference call (<i>hConfCall)</i>, the application must do so as a result of this message. If the application does not have a handle to the parent call of the conference (because it has previously called <a href="func1_6q5o.htm"><b>lineDeallocateCall</b></a> on that handle) <i>dwParam2</i> is set to NULL. 
</dd>
<dt>
<i>dwParam3</i> </dt>
<dd>
If zero, this parameter indicates that there has been no change in the application's privilege for the call. 
<p>
If nonzero, it specifies the application's privilege to the call. This occurs in the following situations: (1) The first time that the application is given a handle to this call; (2) When the application is the target of a call handoff (even if the application already was an owner of the call). This parameter uses the following LINECALLPRIVILEGE_ constants: 

<dl>
<dt>
LINECALLPRIVILEGE_MONITOR </dt>
<dd>
The application has monitor privilege. </dd>
<dt>
LINECALLPRIVILEGE_OWNER </dt>
<dd>
The application has owner privilege. 
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<p>
No return value. </p>
<h4>Remarks</h4>
<p>
This message is sent to any application that has a handle for the call. The LINE_CALLSTATE message also notifies applications that monitor calls on a line about the existence and state of outbound calls established by other applications or manually by the user (for example, on an attached phone device). The call state of such calls reflects the actual state of the call, which is not <i>offering</i>. By examining the call state, the application can determine whether the call is an inbound call that needs to be answered or not. </p>
<p>
A LINE_CALLSTATE message with an unknown call state can be sent to a monitoring application as the result of a successful <a href="func1_0fsc.htm"><b>lineMakeCall</b></a>, <a href="func1_6nvo.htm"><b>lineForward</b></a>, <a href="func2_2q5n.htm"><b>lineUnpark</b></a>, <a href="func2_25rm.htm"><b>lineSetupTransfer</b></a>, <a href="func2_2j00.htm"><b>linePickup</b></a>, <a href="func2_84kl.htm"><b>lineSetupConference</b></a>, or <a href="func2_7vdx.htm"><b>linePrepareAddToConference</b></a> that has been requested by another application. At the same time that the requesting application is sent a <a href="msgs_2ayh.htm">LINE_REPLY</a> (success) for the requested operation, any monitoring applications on the line are sent the LINE_CALLSTATE (unknown) message. A LINE_CALLSTATE message indicating the "real" call state of the newly generated call is sent (using information provided by the service provider) to the requesting and monitoring applications shortly thereafter. </p>
<p>
A LINE_CALLSTATE (unknown) message is sent to monitoring applications only if <b>lineCompleteTransfer</b> causes calls to be resolved into a three-way conference. </p>
<p>
For backward compatibility, older applications are not expecting any particular value in <i>dwParam2</i> of a LINECALLSTATE_CONFERENCED message. TAPI therefore passes the parent call <i>hConfCall</i> in <i>dwParam2</i> regardless of the API version of the application receiving the message. In the case of a conference call initiated by the service provider, the older application is not aware that the parent call has become a conference call unless it happens to spontaneously examine other information (for example, call <b>lineGetConfRelatedCalls</b>) </p>
<p>
This message cannot be disabled. </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.</p>
<h4>See Also</h4>
<p>
<a href="msgs_2ayh.htm">LINE_REPLY</a>, <a href="func1_8sdu.htm"><b>lineCompleteTransfer</b></a>, <a href="func1_6q5o.htm"><b>lineDeallocateCall</b></a>, <a href="struc2_5u9e.htm"><b>LINEDIALPARAMS</b></a>, <a href="func1_6nvo.htm"><b>lineForward</b></a>, <a href="func1_1c37.htm"><b>lineGenerateDigits</b></a>, <a href="func1_106r.htm"><b>lineGetCallStatus</b></a>, <a href="func1_97xv.htm"><b>lineGetConfRelatedCalls</b></a>, <a href="func1_0fsc.htm"><b>lineMakeCall</b></a>, <a href="func2_2j00.htm"><b>linePickup</b></a>, <a href="func2_7vdx.htm"><b>linePrepareAddToConference</b></a>, <a href="func2_25rm.htm"><b>lineSetupTransfer</b></a>, <a href="func2_2q5n.htm"><b>lineUnpark</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
