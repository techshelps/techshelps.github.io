<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>lineMonitorMedia</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_linemonitormedia"></a>lineMonitorMedia</h1>
<p>
The <b>lineMonitorMedia</b> function enables and disables the detection of media modes on the specified call. When a media mode is detected, a message is sent to the application. </p>
<pre><code><b>LONG lineMonitorMedia(
  HCALL</b><i> hCall</i><b>,        </b>
<b>  DWORD</b><i> dwMediaModes  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCall</i> </dt>
<dd>
A handle to the call. The call state of <i>hCall</i> can be any state except <i>idle</i>. </dd>
<dt>
<i>dwMediaModes</i> </dt>
<dd>
The media modes to be monitored. A value of 0 for the <i>dwMediaModes</i> parameter cancels all media mode detection. This parameter can have multiple flags set. This parameter uses the following LINEMEDIAMODE_ constants: 
<dl>
<dt>
LINEMEDIAMODE_INTERACTIVEVOICE </dt>
<dd>
The application can handle calls of the interactive voice media type (it manages live voice calls). </dd>
<dt>
LINEMEDIAMODE_AUTOMATEDVOICE </dt>
<dd>
Voice energy is present on the call and the voice is locally handled by an automated application. </dd>
<dt>
LINEMEDIAMODE_DATAMODEM </dt>
<dd>
The application can handle calls with the data modem media mode. </dd>
<dt>
LINEMEDIAMODE_G3FAX </dt>
<dd>
The application can handle calls of the group 3 fax media type. </dd>
<dt>
LINEMEDIAMODE_G4FAX </dt>
<dd>
The application can handle calls of the group 4 fax media type. </dd>
<dt>
LINEMEDIAMODE_TDD </dt>
<dd>
The application can handle calls with the TDD (Telephony Devices for the Deaf) media mode. </dd>
<dt>
LINEMEDIAMODE_DIGITALDATA </dt>
<dd>
The application can handle calls of the digital data media type </dd>
<dt>
LINEMEDIAMODE_TELETEX </dt>
<dd>
The application can handle calls with the teletex media mode. </dd>
<dt>
LINEMEDIAMODE_VIDEOTEX </dt>
<dd>
The application can handle calls with the videotex media mode. </dd>
<dt>
LINEMEDIAMODE_TELEX </dt>
<dd>
The application can handle calls with the telex media mode. </dd>
<dt>
LINEMEDIAMODE_MIXED </dt>
<dd>
The application can handle calls with the ISDN mixed media mode. </dd>
<dt>
LINEMEDIAMODE_ADSI </dt>
<dd>
The application can handle calls with the ADSI (Analog Display Services Interface) media mode. </dd>
<dt>
LINEMEDIAMODE_VOICEVIEW </dt>
<dd>
The media mode of the call is VoiceView. 
</dd>
</dl>
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns zero if the request succeeds or a negative error number if an error occurs. Possible return values are: </p>
<p>
LINEERR_INVALCALLHANDLE, LINEERR_OPERATIONUNAVAIL, LINEERR_INVALCALLSTATE, LINEERR_OPERATIONFAILED, LINEERR_INVALMEDIAMODE, LINEERR_RESOURCEUNAVAIL, LINEERR_NOMEM, LINEERR_UNINITIALIZED.</p>
<h4>Remarks</h4>
<p>
The media modes specified with <a href="func2_2lny.htm"><b>lineOpen</b></a> relate only to enabling the detection of these media modes by the service provider for the purpose of handing off new incoming calls to the proper application. They do not impact any of the media-mode notification messages that are expected because of a previous invocation of <b>lineMonitorMedia</b>. </p>
<p>
This function is considered successful if media mode monitoring has been correctly initiated, not when media mode monitoring has terminated. Media monitoring for a given media mode remains in effect until it is explicitly disabled by calling <b>lineMonitorMedia</b> with a <i>dwMediaModes</i> parameter set to zero, until the call transitions to <i>idle</i>, or when the application deallocates its call handle for the call. The <b>lineMonitorMedia</b> function is primarily an event reporting mechanism. The media mode of the call, as indicated in <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a>, is not affected by the service provider's detection of the media mode. Only the controlling application can change a call's media mode. </p>
<p>
Default media monitoring performed by the service provider corresponds to the union of all media modes specified on <b>lineOpen</b>. </p>
<p>
Although this function can be invoked in any call state, a call's media mode can typically only be detected while the call is in certain call states. These states can be device specific. For example, in ISDN, a message can indicate the media mode of the media stream before the media stream exists. Similarly, distinctive ringing or the called identifier information about the call can be used to identify the media mode of a call. Otherwise, the call may have to be answered (call in the <i>connected</i> state) to allow a service provider to determine the call's media mode by filtering the media stream. Because filtering a call's media stream implies a computational overhead, applications should disable media monitoring when not required. By default, media monitoring is enabled for newly incoming calls, because a call's media mode selects the application that should handle the call. </p>
<p>
An outgoing application that deals with voice media modes may want to monitor the call for silence (a tone) to distinguish who or what is at the called end of a call. For example, a person at home can answer calls with just a short "hello." A person in the office can provide a longer greeting, indicating name and company name. An answering machine can typically have an even longer greeting. </p>
<p>
Because media-mode detection enabled by <b>lineMonitorMedia</b> is implemented as a read-only operation of the call's media stream, it is not disruptive. </p>
<p>
Monitoring of media on a conference call applies only to the <i>hConfCall </i>parameter, not to the individual participating calls. </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with tapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="quickref_9s85.htm">TAPI Reference Overview</a>, <a href="quickref_2bg3.htm">Supplementary Line Services Functions</a>, <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a>, <a href="func2_2lny.htm"><b>lineOpen</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
