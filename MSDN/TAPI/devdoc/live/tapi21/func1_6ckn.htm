<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>lineGetDevConfig</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_linegetdevconfig"></a>lineGetDevConfig</h1>
<p>
The <b>lineGetDevConfig</b> function returns an "opaque" data structure object, the contents of which are specific to the line (service provider) and device class. The data structure object stores the current configuration of a media-stream device associated with the line device. </p>
<pre><code><b>LONG lineGetDevConfig(
  DWORD</b><i> dwDeviceID</i><b>,            </b>
<b>  LPVARSTRING</b><i> lpDeviceConfig</i><b>,  </b>
<b>  LPCSTR</b><i> lpszDeviceClass       </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwDeviceID</i> </dt>
<dd>
The line device to be configured. </dd>
<dt>
<i>lpDeviceConfig</i> </dt>
<dd>
A pointer to the memory location of type <a href="struc2_90xe.htm"><b>VARSTRING</b></a> where the device configuration structure is returned. Upon successful completion of the request, this location is filled with the device configuration. The <b>dwStringFormat</b> member in the <b>VARSTRING</b> structure is set to STRINGFORMAT_BINARY. Prior to calling <b>lineGetDevConfig</b>, the application should set the <b>dwTotalSize</b> member of this structure to indicate the amount of memory available to TAPI for returning information. </dd>
<dt>
<i>lpszDeviceClass</i> </dt>
<dd>
A pointer to a NULL-terminated ASCII string that specifies the device class of the device whose configuration is requested. Valid device class <a href="func1_99r8.htm"><b>lineGetID</b></a> strings are the same as those specified for the function. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns zero if the function succeeds or a negative error number if an error occurs. Possible return values are: </p>
<p>
LINEERR_BADDEVICEID, LINEERR_NODRIVER, LINEERR_INVALDEVICECLASS, LINEERR_OPERATIONUNAVAIL, LINEERR_INVALPOINTER, LINEERR_RESOURCEUNAVAIL, LINEERR_STRUCTURETOOSMALL, LINEERR_OPERATIONFAILED, LINEERR_NOMEM, LINEERR_UNINITIALIZED, LINEERR_NODEVICE.</p>
<h4>Remarks</h4>
<p>
Call states are device specific. </p>
<p>
The <b>lineGetDevConfig</b> function can be used to retrieve a data structure from TAPI that specifies the configuration of a media stream device associated with a particular line device. For example, the contents of this structure could specify data rate, character format, modulation schemes, and error control protocol settings for a "datamodem" media device associated with the line. </p>
<p>
Typically, an application calls <a href="func1_99r8.htm"><b>lineGetID</b></a> to identify the media stream device associated with a line, and then calls <a href="func1_195z.htm"><b>lineConfigDialog</b></a> to allow the user to set up the device configuration. It could then call <b>lineGetDevConfig</b>, and save the configuration information in a phone book (or other database) associated with a particular call destination. When the user later wishes to call the same destination again, <a href="func2_6qhz.htm"><b>lineSetDevConfig</b></a> can be used to restore the configuration settings selected by the user. The functions <b>lineSetDevConfig</b>, <b>lineConfigDialog</b>, and <b>lineGetDevConfig</b> can be used, in that order, to allow the user to view and update the settings. </p>
<p>
The exact format of the data contained within the structure is specific to the line and media stream API (device class), is undocumented, and is undefined. The structure returned by this function cannot be directly accessed or manipulated by the application, but can only be stored intact and later used in <b>lineSetDevConfig</b> to restore the settings. The structure also cannot necessarily be passed to other devices, even of the same device class (although this can work in some instances, it is not guaranteed). </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with tapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="quickref_9s85.htm">TAPI Reference Overview</a>, <a href="quickref_7uzp.htm">Basic Telephony Services Reference</a>, <a href="func1_195z.htm"><b>lineConfigDialog</b></a>, <a href="func1_99r8.htm"><b>lineGetID</b></a>, <a href="func2_6qhz.htm"><b>lineSetDevConfig</b></a>, <a href="struc2_90xe.htm"><b>VARSTRING</b></a></p>
<p>&nbsp;</p></body>
</HTML>
