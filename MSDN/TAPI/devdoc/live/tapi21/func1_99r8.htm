<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>lineGetID</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_linegetid"></a>lineGetID</h1>
<p>
The <b>lineGetID</b> function returns a device identifier for the specified device class associated with the selected line, address, or call. </p>
<pre><code><b>LONG lineGetID(
  HLINE</b><i> hLine</i><b>,            </b>
<b>  DWORD</b><i> dwAddressID</i><b>,      </b>
<b>  HCALL</b><i> hCall</i><b>,            </b>
<b>  DWORD</b><i> dwSelect</i><b>,         </b>
<b>  LPVARSTRING</b><i> lpDeviceID</i><b>,  </b>
<b>  LPCSTR</b><i> lpszDeviceClass  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hLine</i> </dt>
<dd>
A handle to an open line device. </dd>
<dt>
<i>dwAddressID</i> </dt>
<dd>
An address on the given open line device. </dd>
<dt>
<i>hCall</i> </dt>
<dd>
A handle to a call. </dd>
<dt>
<i>dwSelect</i> </dt>
<dd>
Specifies whether the requested device identifier is associated with the line, address or a single call. The <i>dwSelect</i> parameter can only have a single flag set. This parameter uses the following LINECALLSELECT_ constants: 
<dl>
<dt>
LINECALLSELECT_LINE </dt>
<dd>
Selects the specified line device. The <i>hLine</i> parameter must be a valid line handle; <i>hCall</i> and <i>dwAddressID</i> are ignored. </dd>
<dt>
LINECALLSELECT_ADDRESS </dt>
<dd>
Selects the specified address on the line. Both <i>hLine</i> and <i>dwAddressID</i> must be valid; <i>hCall</i> is ignored. </dd>
<dt>
LINECALLSELECT_CALL </dt>
<dd>
Selects the specified call. <i>hCall</i> must be valid; <i>hLine</i> and <i>dwAddressID</i> are both ignored. 
</dd>
</dl>
</dd>
<dt>
<i>lpDeviceID</i> </dt>
<dd>
A pointer to a memory location of type <a href="struc2_90xe.htm"><b>VARSTRING</b></a>, where the device identifier is returned. Upon successful completion of the request, this location is filled with the device identifier. The format of the returned information depends on the method used by the device class API for naming devices. Prior to calling <b>lineGetID</b>, the application should set the <b>dwTotalSize</b> member of this structure to indicate the amount of memory available to TAPI for returning information. </dd>
<dt>
<i>lpszDeviceClass</i> </dt>
<dd>
A pointer to a NULL-terminated ASCII string that specifies the device class of the device whose identifier is requested. Valid device class strings are those used in the SYSTEM.INI section to identify device classes. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns zero if the request succeeds or a negative error number if an error occurs. Possible return values are: </p>
<p>
LINEERR_INVALLINEHANDLE, LINEERR_NOMEM, LINEERR_INVALADDRESSID, LINEERR_OPERATIONUNAVAIL, LINEERR_INVALCALLHANDLE, LINEERR_OPERATIONFAILED, LINEERR_INVALCALLSELECT, LINEERR_RESOURCEUNAVAIL, LINEERR_INVALPOINTER, LINEERR_STRUCTURETOOSMALL, LINEERR_NODEVICE, LINEERR_UNINITIALIZED.</p>
<h4>Remarks</h4>
<p>
The <b>lineGetID</b> function can be used to retrieve a line-device identifier when given a line handle. This is useful after a line device has been opened using LINEMAPPER as a device identifier in order to determine the real line-device identifier of the opened line. This function can also be used to obtain the device identifier of a phone device or media device (for device classes such as COM, wave, MIDI, phone, line, or NDIS) associated with a call, address or line. This identifier can then be used with the appropriate API (such as phone, MIDI, wave) to select the corresponding media device associated with the specified call. </p>
<p>
See <a href="overvw1_9trd.htm">Device Classes in TAPI</a> for device class names. </p>
<p>
A vendor that defines a device-specific media mode also needs to define the corresponding device-specific (proprietary) API to manage devices of the media mode. To avoid collisions on device class names assigned independently by different vendors, a vendor should select a name that uniquely identifies both the vendor and, following it, the media type. For example: "intel/video". </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with tapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="quickref_9s85.htm">TAPI Reference Overview</a>, <a href="quickref_7uzp.htm">Basic Telephony Services Reference</a>, <a href="struc2_90xe.htm"><b>VARSTRING</b></a></p>
<p>&nbsp;</p></body>
</HTML>
