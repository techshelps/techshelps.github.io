<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>lineCompleteCall</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_linecompletecall"></a>lineCompleteCall</h1>
<p>
The <b>lineCompleteCall</b> function specifies how a call that could not be connected normally should be completed instead. The network or switch may not be able to complete a call because network resources are busy or the remote station is busy or doesn't answer. The application can request that the call be completed in one of a number of ways. </p>
<pre><code><b>LONG lineCompleteCall(
  HCALL</b><i> hCall</i><b>,             </b>
<b>  LPDWORD</b><i> lpdwCompletionID</i><b>,  </b>
<b>  DWORD</b><i> dwCompletionMode</i><b>,  </b>
<b>  DWORD</b><i> dwMessageID        </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCall</i> </dt>
<dd>
A handle to the call whose completion is requested. The application must be an owner of the call. The call state of <i>hCall</i> must be <i>busy, ringback</i>. </dd>
<dt>
<i>lpdwCompletionID</i> </dt>
<dd>
A pointer to a <b>DWORD</b>-sized memory location. The completion identifier is used to identify individual completion requests in progress. A completion identifier becomes invalid and can be reused after the request completes or after an outstanding request is canceled. </dd>
<dt>
<i>dwCompletionMode</i> </dt>
<dd>
The way in which the call is to be completed. Note that <i>dwCompletionMode</i> is allowed to have only a single flag set. This parameter uses the following LINECALLCOMPLMODE_ constants: 
<dl>
<dt>
LINECALLCOMPLMODE_CAMPON </dt>
<dd>
Queues the call until the call can be completed. The call remains in the <i>busy</i> state while queued. </dd>
<dt>
LINECALLCOMPLMODE_CALLBACK </dt>
<dd>
Requests the called station to return the call when it returns to <i>idle</i>. </dd>
<dt>
LINECALLCOMPLMODE_INTRUDE </dt>
<dd>
Adds the application to the existing physical call at the called station (barges in). </dd>
<dt>
LINECALLCOMPLMODE_MESSAGE </dt>
<dd>
Leave a short predefined message for the called station ("Leave Word Calling"). The message to be sent is specified by <i>dwMessageID</i>. 
</dd>
</dl>
</dd>
<dt>
<i>dwMessageID</i> </dt>
<dd>
The message that is to be sent when completing the call using LINECALLCOMPLMODE_MESSAGE. This identifier selects the message from a small number of predefined messages. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns a positive request identifier if the function is completed asynchronously, or a negative error number if an error occurs. The <i>dwParam2</i> parameter of the corresponding <a href="msgs_2ayh.htm">LINE_REPLY</a> message is zero if the function succeeds or it is a negative error number if an error occurs. Possible return values are: </p>
<p>
LINEERR_COMPLETIONOVERRUN, LINEERR_NOMEM, LINEERR_INVALCALLCOMPLMODE, LINEERR_NOTOWNER, LINEERR_INVALCALLSTATE, LINEERR_OPERATIONUNAVAIL, LINEERR_INVALCALLHANDLE, LINEERR_OPERATIONFAILED, LINEERR_INVALMESSAGEID, LINEERR_RESOURCEUNAVAIL, LINEERR_INVALPOINTER, LINEERR_UNINITIALIZED.</p>
<h4>Remarks</h4>
<p>
This function is considered complete when the request has been accepted by the network or switch; not when the request is fully completed in the way specified. After this function completes, the call typically transitions to <i>idle</i>. When the called station or network enters a state where the call can be completed as requested, the application is notified by a LINE_CALLSTATE message with the call state equal to <i>offering</i>. The call's <b>LINECALLINFO</b> record lists the reason for the call as CALLCOMPLETION and provides the completion identifier as well. It is possible to have multiple outstanding call completion requests; the maximum number is device dependent. The completion identifier is also used to refer to each individual request so requests can be canceled by calling <b>lineUncompleteCall</b>. </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Version:</b> Use TAPI version 1.4 and later.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in tapi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with tapi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="quickref_9s85.htm">TAPI Reference Overview</a>, <a href="quickref_2bg3.htm">Supplementary Line Services Functions</a>, <a href="msgs_1eud.htm">LINE_CALLSTATE</a>, <a href="msgs_2ayh.htm">LINE_REPLY</a>, <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a>, <a href="func2_7y7g.htm"><b>lineUncompleteCall</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
