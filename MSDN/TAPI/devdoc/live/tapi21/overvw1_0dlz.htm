<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>An Unknown Application Is Running</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_an_unknown_application_is_running"></a>An Unknown Application Is Running</h3>
<p>
If at least one unknown application has opened the line, the TAPI dynamic-link library gives an ownership handle for the incoming call to the highest priority unknown application. It also passes monitoring handles to the other applications that have the line open for monitoring. The unknown application receives a <a href="msgs_1eud.htm">LINE_CALLSTATE</a> message with <i>dwParam3</i> set to owner. </p>
<p>
This unknown application can then try to perform media determination itself, or use the assistance of the other media applications, allowing them to perform probes for their media mode(s), if appropriate. The unknown application can pass the call to another media application using <a href="func1_0b52.htm"><b>lineHandoff</b></a>. The unknown application would examine <b>dwMediaMode</b> in <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a> to determine the possible remaining candidate media. In doing so, it uses the highest priority media to determine the initial handoff target. It calls <b>lineHandoff</b>, specifying the single highest priority destination media mode as the target. </p>
<p>
The following is the default priority of media modes, listed in order from first tried to last tried when used during media-type handoffs. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=16%>Order </th>
<th align=left width=84%>Media Mode </th>
</tr>
<tr valign=top>
<td width=16%>1 </td>
<td width=84%>LINEMEDIAMODE_INTERACTIVEVOICE </td>
</tr>
<tr valign=top>
<td width=16%>2 </td>
<td width=84%>LINEMEDIAMODE_DATAMODEM </td>
</tr>
<tr valign=top>
<td width=16%>3 </td>
<td width=84%>LINEMEDIAMODE_G3FAX </td>
</tr>
<tr valign=top>
<td width=16%>4 </td>
<td width=84%>LINEMEDIAMODE_TDD </td>
</tr>
<tr valign=top>
<td width=16%>5 </td>
<td width=84%>LINEMEDIAMODE_G4FAX </td>
</tr>
<tr valign=top>
<td width=16%>6 </td>
<td width=84%>LINEMEDIAMODE_DIGITALDATA </td>
</tr>
<tr valign=top>
<td width=16%>7 </td>
<td width=84%>LINEMEDIAMODE_TELETEX </td>
</tr>
<tr valign=top>
<td width=16%>8 </td>
<td width=84%>LINEMEDIAMODE_VIDEOTEX </td>
</tr>
<tr valign=top>
<td width=16%>9 </td>
<td width=84%>LINEMEDIAMODE_TELEX </td>
</tr>
<tr valign=top>
<td width=16%>10 </td>
<td width=84%>LINEMEDIAMODE_MIXED </td>
</tr>
<tr valign=top>
<td width=16%>11 </td>
<td width=84%>LINEMEDIAMODE_ADSI </td>
</tr>
</table><br>
<p>
Automated voice is a media mode that has no meaningful distinction with interactivevoice at this level, and is therefore not listed. </p>
<p>
If the handoff fails, the unknown application should clear that media mode flag in the <b>dwMediaMode</b> member of <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a>. This action moves the probe for the call one step closer to a final determination of the media mode. If the handoff indicates TARGETSELF, it means that the unknown application is the highest priority application for the media mode for which it was trying to hand off the call, so it should go ahead and do the probing itself. </p>
<p>
If the handoff indicates SUCCESS, it means that a different application is the highest priority application for the media mode for which the call was being handed off. The unknown application should deallocate the call handle or change to being a monitor while the new owner has control and proceeds with probing. </p>
<p>
The receiving application controls the call. If the probe is successful, it should set the correct media mode bit. If the probe fails, the application should clear the failed media mode bit in <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a> and hand the call off to the next highest priority application. If no more media mode bits are set, the handoff fails, because no suitable owner application exists for the call. </p>
<p>
Eventually, the media mode may be identified through monitoring or successful probing, though the UNKNOWN bit still may be set in <b>dwMediaMode</b> in the data structure <b>LINECALLINFO</b>. In this case, the application that has received the call cannot be sure that it is the highest priority application for the identified media mode. It is now the duty of that application to ensure that the call goes to the highest priority application. To do so, the application follows these steps: 
<ul>
<li>
It calls <a href="func2_5bl1.htm"><b>lineSetMediaMode</b></a>, which writes into the <b>dwMediaMode</b> member of the call to turn off the UNKNOWN bit and specify the newly identified media mode bit. </li>
<li>
It calls <a href="func1_0b52.htm"><b>lineHandoff</b></a> to return the call to TAPI. The TAPI dynamic-link library is not explicitly specified in this command, but rather a media-type handoff is performed, through which the TAPI library knows that it must look for other applications to find the highest priority application for that media mode. </li>
<li>
If this application is itself the highest priority application for this media mode, it receives a LINEERR_TARGETSELF return value (for the <b>lineHandoff</b> function call). This error means "No, you already are the highest priority application for that media mode." The application never loses control of the call, and it continues handling the call normally. If the <b>lineHandoff</b> succeeds, then there was a higher priority application for the identified media mode, and the application that called <b>lineHandoff</b> should deallocate its handle or change to being a monitor while the highest-priority application handles the call. </li>
</ul>
<p>
As long as the UNKNOWN bit is still on, the receiving application still does not know that the highest-priority media mode is present on the call, so it still needs to probe for it. It only considers the media mode to be present if the UNKNOWN bit is off—only then can it use the call as a call of that media mode. </p>
<p>&nbsp;</p></body>
</HTML>
