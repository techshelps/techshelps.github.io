<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Only One Media Mode Bit Is Set</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_only_one_media_mode_bit_is_set"></a>Only One Media Mode Bit Is Set</h3>
<p>
If only one media mode bit (<i>not</i> the UNKNOWN bit) has been set in the <b>dwMediaMode</b> member of the <a href="struc1_0twy.htm"><b>LINECALLINFO</b></a> data structure, TAPI distributes calls by following a consistent procedure based on the current state of the system and on information saved by the user in the registry. These are the steps it takes: 
<ul>
<li>
The TAPI DLL is notified by the service provider that a call is arriving. </li>
<li>
The TAPI DLL uses the information in the <b>HandoffPriorities</b> subkey of the registry to know which applications are listed, possibly through a <b>Preferences</b> option in the application's user interface, as being interested in calls having the incoming call's media mode. </li>
<li>
The first such application listed, reading left to right, is the highest priority application. If that application is currently running and has the arriving call's line open for that media mode, it is given ownership of the call. If it is not running or it does not have that line open, TAPI again uses the information in the registry to find an interested application in the correct state, and it gives the call to it. </li>
<li>
If none of the applications listed in the registry are in the proper state, TAPI looks for other applications that are currently executing and have the line open for that media mode (though they are not listed in the registry). The relative priority among these unlisted applications is arbitrary and not necessarily associated with the sequence in which they were launched or opened the line. </li>
<li>
Every application that has the line open for monitoring also receives a handle to a call, and any of them could step up, claim ownership (by calling <a href="func2_2m1x.htm"><b>lineSetCallPrivilege</b></a>), and answer the call. However, this behavior could result in race conditions<i> </i>and unpredictable call handling, and is therefore discouraged. </li>
<li>
If no application becomes an owner of the call, the call is eventually dropped. Calls can be dropped by TAPI only if no owner is found for the call and the call state is not <i>idle</i> or <i>offering</i>. The calling party can also drop the call. (On an ISDN network, this event becomes known when a "call-disconnect" frame is received.) If the call is not explicitly dropped, it can go idle after the expiration of a timeout based on the absence of ringing. (The service provider would need to assume that the call has been dropped by the calling party, and implement the timeout.) Because there were no applications that could take the call successfully, this situation usually means that the incoming call reached a wrong number. </li>
</ul>
<p>&nbsp;</p></body>
</HTML>
