<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TSPI_lineMonitorMedia</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_tspi_linemonitormedia"></a>TSPI_lineMonitorMedia</h1>
<p>
The <b>TSPI_lineMonitorMedia</b> function enables and disables the detection of media modes on the specified call. When a media mode is detected, a <a href="messgs_1nkx.htm">LINE_MONITORMEDIA</a> message is sent to TAPI.</p>
<pre><code><b>LONG TSPI_lineMonitorMedia(
  HDRVCALL</b><i> hdCall</i><b>,    </b>
<b>  DWORD</b><i> dwMediaModes  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdCall</i></dt>
<dd>
The handle to the call for which media monitoring is to be set. The call state of <i>hdCall</i> can be any state except <i>idle</i>.</dd>
<dt>
<i>dwMediaModes</i></dt>
<dd>
The media modes to be monitored. The <i>dwMediaModes</i> parameter can have any of the following LINEMEDIAMODE_ flags set: 
<dl>
<dt>
LINEMEDIAMODE_INTERACTIVEVOICE </dt>
<dd>
One or more client applications wants to monitor the call for the presence of voice. 
<p>
<b>Note</b> INTERACTIVEVOICE and AUTOMATEDVOICE are equivalent for monitoring purposes.
</dd>
<dt>
LINEMEDIAMODE_AUTOMATEDVOICE </dt>
<dd>
One or more client applications wants to monitor the call for the presence of voice.
<p>
<b>Note</b> INTERACTIVEVOICE and AUTOMATEDVOICE are equivalent for monitoring purposes. 
</dd>
<dt>
LINEMEDIAMODE_DATAMODEM </dt>
<dd>
One or more client applications wants to monitor the call for the presence of data modem signals. </dd>
<dt>
LINEMEDIAMODE_G3FAX </dt>
<dd>
One or more client applications wants to monitor the call for the presence of group 3 fax signals. </dd>
<dt>
LINEMEDIAMODE_TDD </dt>
<dd>
One or more client applications wants to monitor the call for the presence of TDD (Telephony Devices for the Deaf) signals. </dd>
<dt>
LINEMEDIAMODE_G4FAX </dt>
<dd>
One or more client applications wants to monitor the call for the presence of group 4 fax signals. </dd>
<dt>
LINEMEDIAMODE_DIGITALDATA </dt>
<dd>
One or more client applications wants to monitor the call for the presence of unclassified digital data. </dd>
<dt>
LINEMEDIAMODE_TELETEX </dt>
<dd>
One or more client applications wants to monitor the call for the presence of teletex signals. </dd>
<dt>
LINEMEDIAMODE_VIDEOTEX </dt>
<dd>
One or more client applications wants to monitor the call for the presence of videotex signals. </dd>
<dt>
LINEMEDIAMODE_TELEX </dt>
<dd>
One or more client applications wants to monitor the call for the presence of telex signals. </dd>
<dt>
LINEMEDIAMODE_MIXED </dt>
<dd>
One or more client applications wants to monitor the call for the presence of ISDN mixed media data. </dd>
<dt>
LINEMEDIAMODE_ADSI </dt>
<dd>
One or more client applications wants to monitor the call for the presence of ADSI (Analog Display Services Interface) signals. </dd>
<dt>
LINEMEDIAMODE_VOICEVIEW </dt>
<dd>
The media mode of the call is VoiceView. </dd>
</dl>

<p>
A value of 0 for the <i>dwMediaModes</i> parameter cancels all media mode monitoring.

</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns zero if the function succeeds, or an error number if an error occurs. Possible return values are as follows: </p>
<p>
LINEERR_INVALCALLHANDLE, LINEERR_OPERATIONUNAVAIL, LINEERR_INVALCALLSTATE, LINEERR_OPERATIONFAILED, LINEERR_INVALMEDIAMODE, LINEERR_RESOURCEUNAVAIL, LINEERR_NOMEM. </p>
<h4>Remarks</h4>
<p>
The service provider returns LINEERR_INVALMEDIAMODE if the list of media types to be monitored contains invalid information.</p>
<p>
This function returns zero (success) when media mode monitoring has been correctly initiated, not when media mode monitoring has terminated. Media monitoring for a given media mode remains in effect until it is explicitly disabled by calling <b>TSPI_lineMonitorMedia</b> with a <i>dwMediaModes</i> parameter with the media mode set to zero, or until the call transitions to <i>idle</i>.</p>
<p>
<b>TSPI_lineMonitorMedia</b> is primarily an event reporting mechanism. The media mode of a call, as indicated in <a href="struc1_1ks2.htm"><b>LINECALLINFO</b></a>, is not affected by the service provider's detection of the media mode. Only TAPI or a client application can change a call's indicated media mode using <a href="func2_6i5h.htm"><b>TSPI_lineSetMediaMode</b></a>. The actual use of a particular media mode occurs through separate media stream APIs (such as Comm or WAVE).</p>
<p>
Default media monitoring performed by the service provider for a new call appearance corresponds to the union of all media modes specified by <a href="func2_2z3i.htm"><b>TSPI_lineSetDefaultMediaDetection</b></a>. Shortly after a new call is established, TAPI typically calls <b>TSPI_lineMonitorMedia</b> to reduce the set of media modes detected and reported for this call to the union of all media modes desired by the call's client applications.</p>
<p>
The service provider must cancel media monitoring when a call goes idle. TAPI must compute the union of media modes desired by all clients, and pass the result to this function. The service provider uses the set passed to this function by TAPI.</p>
<p>
Although this function can be invoked in any call state, a call's media mode can typically only be detected while the call is in certain call states. These states can be device specific. For example, in ISDN a message can indicate the media mode of the media stream before the media stream exists. Similarly, distinctive ringing or the called ID information about the call can be used to identify the media mode of a call. Otherwise, the call may have to be answered (call in the <i>connected</i> state) to allow a service provider to determine the call's media mode by filtering of the media stream. Because filtering of a call's media stream implies a computational overhead, TAPI typically uses this procedure to disable media monitoring when it is not required.</p>
<p>
Because media-mode detection enabled by <b>TSPI_lineMonitorMedia</b> is implemented as a read-only operation of the call's media stream, it is not disruptive. No signals are sent on the line as a result of setting <b>TSPI_lineMonitorMedia</b>.</p>
<p>
Regarding the passed media mode, TAPI guarantees that there are no reserved bits set. The service provider must perform any further validity checks on the media modes, such as checking whether any media modes are indeed supported by the service provider.</p>
<h4>See Also</h4>
<p>
<a href="messgs_1nkx.htm">LINE_MONITORMEDIA</a>, <a href="struc1_1ks2.htm"><b>LINECALLINFO</b></a>, <a href="struc2_0j1u.htm"><b>LINEDEVCAPS</b></a>, <a href="cnstant_4cxf.htm">LINEMEDIAMODE_ Constants</a> <a href="func1_6tri.htm"><b>TSPI_lineConditionalMediaDetection</b></a>, <a href="func2_5lo3.htm"><b>TSPI_lineGetDevCaps</b></a>, <a href="func2_2z3i.htm"><b>TSPI_lineSetDefaultMediaDetection</b></a>, <a href="func2_4h7w.htm"><b>TSPI_lineSetMediaControl</b></a>, <a href="func2_6i5h.htm"><b>TSPI_lineSetMediaMode</b></a></p>
<p>&nbsp;</p></body>
</HTML>
