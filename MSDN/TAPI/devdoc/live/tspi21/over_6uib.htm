<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Call States and Events</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_call_states_and_events"></a>Call States and Events</h1>
<p>
A connection is not fully established until both parties are communicating. To reach that point, the establishment of the call goes through several stages, as does the clearing (termination) of the call. A call's events cause it to transition through <i>call states</i> as it comes into existence, is used to exchange information, and terminates. This topic lists and describes the various call states.</p>
<p>
Call-state transitions result from both <i>solicited</i> and <i>unsolicited </i>events. A solicited event is one caused by the application controlling the call (as when it invokes TAPI operations), while unsolicited events are caused by the switch, the telephone network, or the actions of the remote party. Some operations on line devices, addresses, and calls may first require that the line, address, or call upon which they operate be in certain specific states.</p>
<p>
Different call states indicate that connections exist to different parts of the switch. For example, a <i>dial tone</i> is a particular state of a switch that means the switch is ready to receive digits.</p>
<p>
Whenever a call changes state, the service provider reports the new state in a callback to tapi32.dll. Due to the asynchronous way in which these reports arrive and are forwarded to the tapi32.dll client applications, the programming model the application developer should follow is not one that presumes a rigid call state machine, but one where the application can react to the events reported to the application. In other words, call-state notification tells the application what the call's new state is instead of reporting the transitions between two states.</p>
<p>
Some of the call states and events defined by TAPI are exclusive to incoming or outgoing call processing, while others occur in both cases. Several of these call states provide additional information that can be used by the application. For example, the <i>busy</i> state signifies that a call cannot be completed because a resource between the originator and the destination is unavailable, as when an intermediate switch has reached its capacity and cannot handle an additional call. Information supplied with the <i>busy</i> state includes <i>station busy</i> or <i>trunk busy</i>. Station busy means that the destination's station is busy (the phone is offhook), while trunk busy means that a circuit in the switch or network is busy. The call states defined in Win32 Telephony are listed below: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Call State </th>
<th align=left width=59%>Description </th>
</tr>
<tr valign=top>
<td width=41%><i>idle</i> </td>
<td width=59%>This corresponds to the null state: No activity exists on the call, which means that no call is currently active. This state occurs at the end of a call, but never at the beginning of a new call.<p>
If a service provider changes the call state to <i>idle</i>, it must <i>not</i> subsequently change the call to any other state. The <i>idle</i> state should be the last state a call enters and it should remain in that state until <a href="func1_4964.htm"><b>TSPI_lineCloseCall</b></a> is called to dispose of it. </p>
</td>
</tr>
<tr valign=top>
<td width=41%><i>offering</i> (incoming) </td>
<td width=59%>When the switch informs the computer of the arrival of a new incoming call, that call is in the offering state. The <i>offering</i> state is not the same as causing a phone or computer to ring. When a call is offered, the computer is not necessarily instructed to alert the user. </td>
</tr>
<tr valign=top>
<td width=41%></td>
<td width=59%>For example, an incoming call on a shared call appearance is offered to all stations that share the appearance, but typically only the station that has the appearance as its primary address is instructed to ring. If that station does not answer after some amount of time, the bridging stations may be instructed to ring as well. </td>
</tr>
<tr valign=top>
<td width=41%><i>accepted</i> (incoming) </td>
<td width=59%>An application has taken responsibility for an incoming call. In ISDN, the <i>accepted</i> state is entered when the called-party equipment sends a message to the switch indicating that it is willing to present the call to the called person; this has the side effect of alerting the users at both sides of the call: the caller's and the called party's. An incoming call can always be immediately answered without first being separately accepted. </td>
</tr>
<tr valign=top>
<td width=41%><i>dial tone</i> (outgoing) </td>
<td width=59%>Indicates that the switch is ready to receive a dialable number. In most telephony environments, this state is entered when an audible dial tone is detected by the line device. Additional information includes: </td>
</tr>
<tr valign=top>
<td width=41%>—<i>normal dial tone</i> </td>
<td width=59%>The "normal" or everyday dial tone, usually a continuous tone. </td>
</tr>
<tr valign=top>
<td width=41%>—s<i>pecial dial tone</i> </td>
<td width=59%>A special dial tone is often used to signal certain conditions such as message-waiting. This is usually an interrupted dial tone. </td>
</tr>
<tr valign=top>
<td width=41%><i>dialing</i> (outgoing) </td>
<td width=59%>The originator is dialing digits on the call. The dialed digits are collected by the switch. </td>
</tr>
<tr valign=top>
<td width=41%><i>proceeding</i> (outgoing) </td>
<td width=59%>The call is proceeding through the network. This occurs after dialing is complete and before the call reaches the dialed party, as indicated by <i>ringback</i>, <i>busy</i>, or <i>answer</i>. </td>
</tr>
<tr valign=top>
<td width=41%><i>special info</i> (outgoing) </td>
<td width=59%>The call is receiving a special information signal. A special information signal precedes a prerecorded announcement indicating why a call cannot be completed. Such announcements can be of these types: </td>
</tr>
<tr valign=top>
<td width=41%>—<i>no circuit</i> </td>
<td width=59%>A no-circuit or emergency announcement. </td>
</tr>
<tr valign=top>
<td width=41%>—<i>customer irregularity</i> </td>
<td width=59%>An announcement meaning that the dialed number is not correct. </td>
</tr>
<tr valign=top>
<td width=41%>—<i>reorder</i> </td>
<td width=59%>A reorder or equipment-irregularity announcement. </td>
</tr>
<tr valign=top>
<td width=41%><i>busy</i> (outgoing) </td>
<td width=59%>The call is receiving a busy signal. <i>Busy</i> indicates that some resource is not available and the call cannot be normally completed at this time. Additional information consists of: </td>
</tr>
<tr valign=top>
<td width=41%>—<i>station busy</i> </td>
<td width=59%>The station at the other end is offhook. </td>
</tr>
<tr valign=top>
<td width=41%>—<i>trunk busy</i> </td>
<td width=59%>The network is congested. This usually produces a fast busy signal. </td>
</tr>
<tr valign=top>
<td width=41%><i>ringback</i> (outgoing) </td>
<td width=59%>The station to be called has been reached, and the destination's switch is generating a ring tone back to the originator. A <i>ringback</i> means that the destination address is being alerted to the call. </td>
</tr>
<tr valign=top>
<td width=41%><i>connected</i> (incoming and outgoing) </td>
<td width=59%>Information is being exchanged over the call. </td>
</tr>
<tr valign=top>
<td width=41%><i>onHold</i> (incoming and outgoing) </td>
<td width=59%>The call is currently held by the switch. This frees the physical line, which allows another call to use the line. </td>
</tr>
<tr valign=top>
<td width=41%><i>conferenced</i> (incoming and outgoing) </td>
<td width=59%>The call is a member of a conference call and is logically in the connected state (to the conference bridge). Every call in the <i>conferenced</i> state is linked to the parent conference call, which will be in a state such as <i>connected</i>, <i>onHold</i>, and so forth). </td>
</tr>
<tr valign=top>
<td width=41%><i>on hold pending conference</i> (incoming and outgoing) </td>
<td width=59%>The conference call is currently on hold and waiting for the user to add another party. </td>
</tr>
<tr valign=top>
<td width=41%><i>on hold pending transfer</i> (incoming and outgoing) </td>
<td width=59%>The call is on hold in preparation of being transferred. </td>
</tr>
<tr valign=top>
<td width=41%><i>disconnected</i> (incoming and outgoing) </td>
<td width=59%>The call has been disconnected by the remote party. </td>
</tr>
<tr valign=top>
<td width=41%><i>unknown</i> (incoming and outgoing) </td>
<td width=59%>The call exists, but its state is currently unknown. This may be the result of poor call progress detection by the service provider. A call state message with the call state set to <i>unknown</i> may also be generated to inform TAPI about a new call at a time that the actual call state of the call is not exactly known. </td>
</tr>
</table><br>
<p>
Although under normal circumstances an outgoing call is likely to transition to <i>connected</i> through a number of intermediate states (such as <i>dial tone</i>, <i>dialing</i>, <i>proceeding</i>, and <i>ringback</i>), other paths are possible as well. For example, the <i>ringback</i> state may be skipped, as when a "hot phone" (or other nondialed phone) transitions directly to <i>connected</i>.</p>
<p>
An application should always process call-state event notifications. Call-state transitions valid for one switch or configuration may be invalid for another. For example, consider a line from the switch that (using a simple Y-connector) physically terminates both at the computer and at a separate phone set, creating a party line configuration between the computer and the phone set. The computer termination and, therefore, the application using TAPI, may not know of the activities on the line handled by the phone set. That is, the line may be in use without the service provider being aware of it. An application that wants to make an outgoing call will succeed in allocating a call appearance from the API, but ends up sharing the active call on the line. In this case, blindly sending a DTMF dial string without first checking for a dial tone may not result in intended (or polite) behavior.</p>
<p>&nbsp;</p></body>
</HTML>
