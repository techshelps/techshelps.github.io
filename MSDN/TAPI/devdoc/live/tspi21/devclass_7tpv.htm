<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TSPI Device Classes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_tspi_device_classes"></a>TSPI Device Classes</h1>
<p>
A <i>device class</i> is a group of related physical devices or device drivers through which applications send and receive the information or data that makes up a call. Every device class has a <i>device class name</i> that uniquely identifies the class and provides information about the programming interface and commands that can be used to open and communicate with the devices in the class.</p>
<p>
The Telephony Application Programming Interface (TAPI) associates devices from one or more device classes to each line or phone device. You access one of these devices by retrieving the device identifier for the device using the <b>lineGetID</b> or <b>phoneGetID</b> function. You supply the device class name, and the function returns the specific port name, device name, device handle, or device identifier that you need to open and access the device. The format of the returned information depends on the device class and is described in this section.</p>
<p>
<b>Note</b>&nbsp;&nbsp;The device identifier definitions apply to 16-bit and 32-bit TAPI. In some cases, the datatype of a media handle in the device identifier definition may be different from that specified by the Microsoft Windows version 3.<i>x</i> or Microsoft Win32 application programming interface (API). For example, Windows 3.<i>x</i> and Win32 define wave device identifiers with the <b>UINT</b> type, but TAPI defines this device identifier with the <b>DWORD</b> type. In such cases, you cast the media handle to the appropriate datatype when using it with the Windows version 3.<i>x</i> or Win32 API.</p>
<p>
You also use device class names with the <b>lineConfigDialog</b> and <b>phoneConfigDialog</b> functions to enable the user to set configuration options for the given device; with the <b>lineGetIcon</b> and <b>phoneGetIcon</b> functions to retrieve an icon to represent the given device; and with the <b>lineGetDevConfig</b> and <b>lineSetDevConfig</b> functions to directly retrieve and set configuration options for the given device.</p>
<p>
Following are the default device class names. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=33%>Device Class Name</th>
<th align=left width=67%>Description</th>
</tr>
<tr valign=top>
<td width=33%>comm </td>
<td width=67%>Communications port </td>
</tr>
<tr valign=top>
<td width=33%>comm/datamodem </td>
<td width=67%>Modem through a communications port </td>
</tr>
<tr valign=top>
<td width=33%>comm/datamodem/portname </td>
<td width=67%>Name of the device to which a modem is connected </td>
</tr>
<tr valign=top>
<td width=33%>wave/in </td>
<td width=67%>Wave audio device (input only) </td>
</tr>
<tr valign=top>
<td width=33%>wave/out </td>
<td width=67%>Wave audio device (output only) </td>
</tr>
<tr valign=top>
<td width=33%>midi/in </td>
<td width=67%>Midi sequencer (input only) </td>
</tr>
<tr valign=top>
<td width=33%>midi/out </td>
<td width=67%>Midi sequencer (output only) </td>
</tr>
<tr valign=top>
<td width=33%>tapi/line </td>
<td width=67%>Line device </td>
</tr>
<tr valign=top>
<td width=33%>tapi/phone </td>
<td width=67%>Phone device </td>
</tr>
<tr valign=top>
<td width=33%>ndis </td>
<td width=67%>Network device </td>
</tr>
<tr valign=top>
<td width=33%>tapi/terminal </td>
<td width=67%>Terminal device </td>
</tr>
</table><br>
<p>
These names are not case sensitive, so you can use any combination of uppercase and lowercase letters.</p>
<p>
Additional device classes and device class names may be available on a given system. In general, if a device does not belong to one of the default device classes, the manufacturer typically defines a new device class and assigns a unique device class name. You must check the documentation for the device to determine what additional device classes are available for it. Note, however, that although the device class and media mode are related, they are not the same. A <i>media mode</i> describes a format of information on a call, and a <i>device class</i> defines the programming interface used to manage that information. So, even if a manufacturer defines a new media mode, it may not be true that the manufacturer must also define a new device class to support the mode.</p>
<p>
The format of the configuration data used with the <b>lineSetDevConfig</b> and <b>lineGetDevConfig</b> functions also depends on the device class. In general, you use <b>lineGetDevConfig</b> to save a copy of the current device configuration data and then later use <b>lineSetDevConfig</b> with the saved configuration data to restore the device configuration to the previous state. This is a convenient way to temporarily change the configuration without requiring the user to manually restore it to the previous state. Because the exact format of the device configuration data may be different with each service provider, do not use <b>lineSetDevConfig</b> and <b>lineGetDevConfig</b> to manipulate the device configuration data directly. Some formats are provided for information only.</p>
<p>&nbsp;</p></body>
</HTML>
