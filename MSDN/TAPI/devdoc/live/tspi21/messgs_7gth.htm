<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINE_CALLSTATE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_line_callstate"></a>LINE_CALLSTATE</h1>
<p>
The LINE_CALLSTATE message is sent to the <a href="func3_7q7o.htm"><b>LINEEVENT</b></a> callback function whenever the status of the specified call has changed. Several such messages are typically sent during the lifetime of a call. The first such message for an incoming call indicates the <i>offering</i> state. TAPI can use <a href="func2_6oj7.htm"><b>TSPI_lineGetCallStatus</b></a> to find out more detailed information about the current status of the call.</p>
<pre><code>LINE_CALLSTATE
htLine = (HTAPILINE) hLineDevice;
htCall = (HTAPICALL) hCallDevice;
dwMsg = (DWORD) LINE_CALLSTATE;
dwParam1 = (DWORD) LineCallState;
dwParam2 = (DWORD) StateData;
dwParam3 = (DWORD) MediaMode;
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>htLine</i></dt>
<dd>
The TAPI opaque object handle to the line device.</dd>
<dt>
<i>htCall</i></dt>
<dd>
The TAPI opaque object handle to the call device.</dd>
<dt>
<i>dwMsg</i></dt>
<dd>
The value LINE_CALLSTATE.</dd>
<dt>
<i>dwParam1</i></dt>
<dd>
The new call state. This parameter can be one of the following LINECALLSTATE_ constants: 
<dl>
<dt>
LINECALLSTATE_IDLE </dt>
<dd>
The call is idle; no call actually exists. </dd>
<dt>
LINECALLSTATE_OFFERING </dt>
<dd>
The call is being offered to the station, signaling the arrival of a new call. In some environments, a call in the <i>offering</i> state does not automatically alert the user; alerting is done by the switch instructing the line to ring. It does not affect any call states. </dd>
<dt>
LINECALLSTATE_ACCEPTED </dt>
<dd>
The call was offering and has been accepted. Note that in ISDN, the transition to the <i>accepted</i> state implicitly initiates altering to both parties. </dd>
<dt>
LINECALLSTATE_DIALTONE </dt>
<dd>
The call is receiving a dial tone from the switch, which means that the switch is ready to receive a dialed number. </dd>
<dt>
LINECALLSTATE_DIALING </dt>
<dd>
Destination address information (a phone number) is being sent to the switch through the call. Note that the operation <a href="func1_4m7n.htm"><b>TSPI_lineGenerateDigits</b></a> does not place the line into the <i>dialing</i> state. </dd>
<dt>
LINECALLSTATE_RINGBACK </dt>
<dd>
The call is receiving ringback from the called address. Ringback indicates that the other station has been reached and is being alerted. </dd>
<dt>
LINECALLSTATE_BUSY </dt>
<dd>
The call is receiving a busy tone. Busy tone indicates that the call cannot be completed; either a circuit (trunk) or the remote party's station are in use. </dd>
<dt>
LINECALLSTATE_SPECIALINFO </dt>
<dd>
Special information is sent by the network. Special information is typically sent when the destination cannot be reached. </dd>
<dt>
LINECALLSTATE_CONNECTED </dt>
<dd>
The call has been established, the connection is made. Information is able to flow over the call between the originating address and the destination address. </dd>
<dt>
LINECALLSTATE_PROCEEDING </dt>
<dd>
Dialing has completed and the call is proceeding through the switch or telephone network. </dd>
<dt>
LINECALLSTATE_ONHOLD </dt>
<dd>
The call is on hold by the switch. </dd>
<dt>
LINECALLSTATE_CONFERENCED </dt>
<dd>
The call is currently a member of a multiparty conference call. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDCONF </dt>
<dd>
The call is currently on hold while it is being added to a conference. </dd>
<dt>
LINECALLSTATE_ONHOLDPENDTRANSFER </dt>
<dd>
The call is currently on hold awaiting transfer to another number. </dd>
<dt>
LINECALLSTATE_DISCONNECTED </dt>
<dd>
The remote party has disconnected from the call. </dd>
<dt>
LINECALLSTATE_UNKNOWN </dt>
<dd>
The state of the call is not known. This can be due to limitations of the call progress detection implementation. </dd>
</dl>
</dd>
<dt>
<i>dwParam2</i></dt>
<dd>
Specifies call-state-dependent information.
<p>
If <i>dwParam1</i> is LINECALLSTATE_BUSY, the <i>dwParam2</i> parameter contains the details about the busy mode, and uses the following LINEBUSYMODE_ constants: 

<dl>
<dt>
LINEBUSYMODE_STATION </dt>
<dd>
The busy signal indicates that the called party's station is busy. This is usually signaled with a "normal" busy tone. </dd>
<dt>
LINEBUSYMODE_TRUNK </dt>
<dd>
The busy signal indicates that a trunk or circuit is busy. This is usually signaled with a "long" busy tone. </dd>
<dt>
LINEBUSYMODE_UNKNOWN </dt>
<dd>
The busy signal's specific mode is currently unknown, but can become known later. </dd>
<dt>
LINEBUSYMODE_UNAVAIL </dt>
<dd>
The busy signal's specific mode is unavailable and cannot become known. </dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_DIALTONE, the <i>dwParam2</i> contains the details about the dial tone mode, and uses the following LINEDIALTONEMODE_ constants: 

<dl>
<dt>
LINEDIALTONEMODE_NORMAL </dt>
<dd>
This is a "normal" dial tone that typically is a continuous tone. </dd>
<dt>
LINEDIALTONEMODE_SPECIAL </dt>
<dd>
This is a special dial tone indicating a certain condition is currently in effect. </dd>
<dt>
LINEDIALTONEMODE_INTERNAL </dt>
<dd>
This an internal dial tone, as within a PBX. </dd>
<dt>
LINEDIALTONEMODE_EXTERNAL </dt>
<dd>
This is an external (public network) dial tone. </dd>
<dt>
LINEDIALTONEMODE_UNKNOWN </dt>
<dd>
The dial tone mode is currently unknown, but can become known later. </dd>
<dt>
LINEDIALTONEMODE_UNAVAIL </dt>
<dd>
The dial tone mode is unavailable and cannot become known. </dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_SPECIALINFO, the <i>dwParam2</i> parameter contains the details about the special info mode and uses the following LINESPECIALINFO_ constants: 

<dl>
<dt>
LINESPECIALINFO_NOCIRCUIT </dt>
<dd>
This special information tone precedes a no-circuit or emergency announcement (trunk blockage category). </dd>
<dt>
LINESPECIALINFO_CUSTIRREG </dt>
<dd>
This special information tone precedes a vacant number, AIS, Centrex number change and nonworking station, access code not dialed or dialed in error, or manual intercept operator message (customer irregularity category). </dd>
<dt>
LINESPECIALINFO_REORDER </dt>
<dd>
This special information tone precedes a reorder announcement (equipment irregularity category). </dd>
<dt>
LINESPECIALINFO_UNKNOWN </dt>
<dd>
Specifics about the special information tone are currently unknown but can become known later. </dd>
<dt>
LINESPECIALINFO_UNAVAIL </dt>
<dd>
Specifics about the special information tone are unavailable, and cannot become known. </dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_DISCONNECTED, the <i>dwParam2</i> parameter contains the details about the disconnect mode, and uses the following LINEDISCONNECTMODE_ constants: 

<dl>
<dt>
LINEDISCONNECTMODE_NORMAL </dt>
<dd>
This is a "normal" disconnect request by the remote party. The call was terminated normally. </dd>
<dt>
LINEDISCONNECTMODE_UNKNOWN </dt>
<dd>
The reason for the disconnect request is unknown. </dd>
<dt>
LINEDISCONNECTMODE_REJECT </dt>
<dd>
The remote user has rejected the call. </dd>
<dt>
LINEDISCONNECTMODE_PICKUP </dt>
<dd>
The call was picked up from elsewhere. </dd>
<dt>
LINEDISCONNECTMODE_FORWARDED </dt>
<dd>
The call was forwarded by the switch. </dd>
<dt>
LINEDISCONNECTMODE_BUSY </dt>
<dd>
The remote user's station is busy. </dd>
<dt>
LINEDISCONNECTMODE_NOANSWER </dt>
<dd>
The remote user's station does not answer. </dd>
<dt>
LINEDISCONNECTMODE_BADADDRESS </dt>
<dd>
The destination address in invalid. </dd>
<dt>
LINEDISCONNECTMODE_CONGESTION </dt>
<dd>
The network is congested. </dd>
<dt>
LINEDISCONNECTMODE_INCOMPATIBLE </dt>
<dd>
The remote user's station equipment is incompatible for the type of call requested. </dd>
<dt>
LINEDISCONNECTMODE_UNAVAIL </dt>
<dd>
The reason for the disconnect is unavailable and cannot become known later. </dd>
<dt>
LINEDISCONNECTMODE_NODIALTONE </dt>
<dd>
A dial tone was not detected within a service provider-defined timeout, at a point during dialing when one was expected (such as at a "W" in the dialable string). This can also occur without a service provider-defined timeout period or without a value specified in the <b>dwWaitForDialTone</b> member of the <a href="struc2_2e0i.htm"><b>LINEDIALPARAMS</b></a> structure. </dd>
</dl>

<p>
If <i>dwParam1</i> is LINECALLSTATE_CONFERENCED, <i>dwParam2</i> contains the <i>htCall</i> of the parent call of the conference of which the subject <i>htCall</i> is a member. If the call specified in <i>dwParam2</i> was not previously considered by TAPI to be a parent conference call, this message causes it to be so treated. The call specified in <i>dwParam2</i> must already exist; it was most likely previously created by a <a href="messgs_8bn0.htm">LINE_NEWCALL</a> message and set to LINECALLSTATE_ONHOLDPENDCONF.
</dd>
<dt>
<i>dwParam3</i></dt>
<dd>
The media mode of the call, as far as it is known. This is a combination of LINEMEDIAMODE_ constants. If the service provider does not know the media mode, it should include the "UNKNOWN" bit together with all media modes currently being monitored for.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The LINE_CALLSTATE message (with LINECALLSTATE_OFFERING) should be sent as the next message for an incoming call after LINE_NEWCALL. Other call state changes are reported whenever they occur; the message cannot be disabled.</p>
<p>
The LINE_CALLSTATE message also notifies TAPI about the existence and state of outbound calls established as a side effect of other calls (for example, when an active call is put on hold and replaced by a new call in the <i>dialtone</i> state) or manually by the user (for example, on an attached phone device). The call state of such calls reflects the actual state of the call, which is not <i>offering</i>. By examining the call state, TAPI can determine whether the call is an inbound call that needs to be answered.</p>
<p>
The corresponding message at the TAPI level is used to inform applications of new incoming calls. This is not the case at the TSPI level; the <a href="messgs_8bn0.htm">LINE_NEWCALL</a> message informs TAPI of new incoming calls. The LINE_NEWCALL message must precede this message.</p>
<p>
The <i>dwParam3</i> parameter is used at the TAPI level to inform the recipient of the privilege level it has over the call.</p>
<p>
For backward compatibility, older service providers do not pass a valid <i>htCall</i> in <i>dwParam2</i>. TAPI must check the value passed, and ignore it if it is not a valid <i>htCall</i>. If the value is a valid <i>htCall</i>, TAPI also checks the API version in use on the line device, and establishes a conference call internally only if the API version is 1.4 or later (for example, if the API version on the line is later than 1.4, this parameter should be ignored).</p>
<h4>See Also</h4>
<p>
<a href="messgs_8bn0.htm">LINE_NEWCALL</a>, <a href="cnstant_3dgz.htm">LINEBUSYMODE_ Constants</a>, <a href="cnstant_08s3.htm">LINECALLSTATE_ Constants</a>, <a href="struc1_790y.htm"><b>LINECALLSTATUS</b></a>, <a href="cnstant_4uer.htm">LINEDIALTONEMODE_ Constants</a>, <a href="cnstant_8dpv.htm">LINESPECIALINFO_ Constants</a>, <a href="func2_6oj7.htm"><b>TSPI_lineGetCallStatus</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
