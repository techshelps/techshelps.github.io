<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error Checking</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tspi_error_checking"></a>Error Checking</h3>
<p>
At the TAPI level, an application can pass a variety of different parameters, many of which may be invalid. tapi32.dll checks for bad parameters and returns errors to the application without calling the service provider. Each function description at the TSPI level describes the parameter errors that have already been tested. The service provider does not have to repeat these tests, though it must perform any additional validity tests appropriate to the function. Titles and descriptions of common parameter validity tests that appear in many functions are listed below. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Validity Test</th>
<th align=left width=59%>Description</th>
</tr>
<tr valign=top>
<td width=41%><b>Pointer validity</b> </td>
<td width=59%>tapi32.dll has already tested pointers to data storage to make sure that they point to readable or writeable memory of the size appropriate to the operation. In addition, for variably sized data structures starting with a <b>dwTotalSize</b> member, the data structure has been verified to ensure that the indicated total size is really available. </td>
</tr>
<tr valign=top>
<td width=41%><b>Fixed size validity</b> </td>
<td width=59%>For variably sized data strucutres, the data structure has been checked to make sure that there is at least enough space for the fixed size part of the data structure and that <b>dwTotalSize</b> is sufficient to cover the fixed part. </td>
</tr>
<tr valign=top>
<td width=41%><b>Offset/size zeroed</b> </td>
<td width=59%>For variably sized data structures, the "...<b>Offset</b>" and "...<b>Size</b>" fields corresponding to parts that the service provider fills in have been preset with zero values before the service provider was called. </td>
</tr>
<tr valign=top>
<td width=41%><b>Handle validity</b> </td>
<td width=59%>tapi32.dll guarantees that line, phone, and call handles (of defined types <a href="datype_7t2d.htm">HDRVLINE</a>, <a href="datype_2j51.htm">HDRVPHONE</a>, and <a href="datype_6j8s.htm">HDRVCALL</a>) are valid. That is, they are values that have been returned without error as handles in <a href="func2_9u0e.htm"><b>TSPI_lineOpen</b></a>, <a href="func3_9bn2.htm"><b>TSPI_phoneOpen</b></a>, or one of the following that starts the lifetime of a call handle:<p>
<a href="func2_0r8s.htm"><b>TSPI_lineMakeCall</b></a></p>
<p>
<a href="func1_8m2a.htm"><b>TSPI_lineCompleteTransfer</b></a></p>
<p>
<a href="func1_61k4.htm"><b>TSPI_lineForward</b></a></p>
<p>
<a href="func2_42wg.htm"><b>TSPI_linePickup</b></a></p>
<p>
<a href="func2_3zqd.htm"><b>TSPI_linePrepareAddToConference</b></a></p>
<p>
<a href="func3_84h1.htm"><b>TSPI_lineSetupConference</b></a></p>
<p>
<a href="func3_7u42.htm"><b>TSPI_lineSetupTransfer</b></a></p>
<p>
<a href="func3_4a23.htm"><b>TSPI_lineUnpark</b></a></p>
<p>
<a href="messgs_8bn0.htm">LINE_NEWCALL</a> messages </p>
</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
