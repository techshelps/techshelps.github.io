<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening and Closing Line Devices</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tspi_opening_and_closing_line_devices"></a>Opening and Closing Line Devices</h3>
<p>
After performing basic initialization and possibly having retrieved device capabilities, tapi32.dll must open the line device before it can access telephony functions on that line. When a line device is opened successfully, tapi32.dll is returned a handle representing the open line. The <a href="func2_9u0e.htm"><b>TSPI_lineOpen</b></a> function opens a specified line device for providing subsequent monitoring and/or control of the line. <a href="func1_2mxx.htm"><b>TSPI_lineClose</b></a> closes a specified line device.</p>
<p>
At the TAPI level, a line device can be specified to <b>lineOpen</b> in one of two ways:
<ul>
<li>
A specific line device is selected by means of its line device identifier. The <b>lineOpen</b> request opens the specified line device, possibly resulting in a <b>TSPI_lineOpen</b> call to the service provider (that is, if the line was not already open). Applications interested in handling inbound calls typically use specific line devices.</li>
<li>
The application can specify that it wants to use any line device that has certain properties. The LINEMAPPER indication is used instead of a specific line device identifier. The properties are specified by means of the call parameters that the application intends to use. The tapi32.dll satisfies this Open request with any available line device that supports the specified call parameters, but this may fail. If successful, the caller can determine the line device identifier by calling <b>lineGetID</b> on the handle to the open line device returned by <b>lineOpen</b>.</li>
</ul>
<p>
To support LINEMAPPER selection of lines, the service provider must implement the <a href="func1_6tri.htm"><b>TSPI_lineConditionalMediaDetection</b></a> function. This function does two things: (1) it tests a line's ability to support the requested call parameters and media mode, and (2) if successful, it commits the service provider to monitoring for the new media mode. The tapi32.dll uses this function for different line devices to hunt for a line that meets the application's Open requirements.</p>
<p>&nbsp;</p></body>
</HTML>
