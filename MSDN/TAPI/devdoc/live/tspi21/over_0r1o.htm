<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Conference Call</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tspi_conference_call"></a>Conference Call</h3>
<p>
Conference calls are calls that include more than two parties simultaneously. They can be set up using either a switch-based conference bridge or an external server-based bridge. Typically, only switch-based conferencing allows the level of conference control provided by TSPI. In server-based conference calls, all participating parties dial into the server, which mixes the media streams together and sends each participant the mix. There may be no notion of individual parties in the conference call, only that of a single call between the application and the bridge server.</p>
<p>
A conference call can be established in a number of ways, depending on device capabilities:
<ul>
<li>
A conference call can start out as a regular two-party call, that is, a call established with <a href="func2_0r8s.htm"><b>TSPI_lineMakeCall</b></a>. After the two-party call exists, additional parties can be added, one at a time. Preparing to add the third party establishes the conference call using <a href="func3_84h1.htm"><b>TSPI_lineSetupConference</b></a>. This operation takes the original two-party call as input, allocates a conference call, connects the original call to the conference, and allocates a consultation call whose handle is returned to tapi32.dll.</li>
<li>
tapi32.dll can then use <a href="func1_7ep8.htm"><b>TSPI_lineDial</b></a> on the consultation call to establish a connection to the next party to be added. <a href="func1_87u8.htm"><b>TSPI_lineDrop</b></a> can be used to abandon this call attempt. The third party is added with <a href="func1_7in9.htm"><b>TSPI_lineAddToConference</b></a>, which specifies both the conference call and the consultation call.</li>
<li>
A three-way conference call can be established by resolving a transfer request for a three-way conference. In this scenario, a two-party call is established as either an inbound or outbound call. Next the call is placed on transfer hold with <a href="func3_7u42.htm"><b>TSPI_lineSetupTransfer</b></a> which returns a consultation call handle. After a period of consultation, tapi32.dll may have the option to resolve the transfer setup by selecting the three-way conference option, which conferences all three parties together in a conference call using <a href="func1_8m2a.htm"><b>TSPI_lineCompleteTransfer</b></a> with the <i>conference</i> option (instead of the <i>transfer</i> option). Under this option, a conference call handle representing the conference call is allocated and returned to the application.</li>
<li>
A conference call may need to be established with <a href="func3_84h1.htm"><b>TSPI_lineSetupConference</b></a> without an existing two-party call. This returns a handle for the conference call, and allocates a consultation call. After a period of consultation, the consultation call can be added using <a href="func1_7in9.htm"><b>TSPI_lineAddToConference</b></a>. Additional parties are added with <a href="func2_3zqd.htm"><b>TSPI_linePrepareAddToConference</b></a> followed by <b>TSPI_lineAddToConference</b>.</li>
</ul>
<p>
To add additional parties after a conference call exists, tapi32.dll uses <b>TSPI_linePrepareAddToConference</b>, which specifies the conference call handle and returns a consultation call handle. After the consultation call exists, it can be added using <b>TSPI_lineAddToConference </b>(as described earlier).</p>
<p>
After a call becomes a member of a conference call, the member's call state becomes <i>conferenced</i>. The state of the conference call typically becomes <i>connected</i>. The call handle to the conference call and all the added parties remain valid as individual calls. <a href="messgs_7gth.htm">LINE_CALLSTATE</a> events can be received about all calls, for example, if one of the members disconnects by hanging up, an appropriate call state message can inform the application of this fact; such a call is no longer a member of the conference.</p>
<p>
As is the case with call transfer, the application may toggle between the consultation call and the conference call using <a href="func3_7wpw.htm"><b>TSPI_lineSwapHold</b></a>.</p>
<p>
The tapi32.dll can use the call handle for the member calls to later remove any or all members from the conference, and it does this by invoking <a href="func2_1wdh.htm"><b>TSPI_lineRemoveFromConference</b></a> on the call handle. This operation is not commonly available in its fully general form. Some switches may not allow it at all, or only allow the most recently added party to be removed. The line's device capabilities describe which type of <b>TSPI_lineRemoveFromConference</b> is possible.</p>
<p>&nbsp;</p></body>
</HTML>
