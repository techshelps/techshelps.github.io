<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LINECALLPARAMS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tspi_linecallparams_str"></a>LINECALLPARAMS</h1>
<p>
The <b>LINECALLPARAMS</b> structure describes parameters supplied when making calls with <a href="func2_0r8s.htm"><b>TSPI_lineMakeCall</b></a>. The <b>LINECALLPARAMS</b> structure is also used as a parameter in other operations. The comments on the right indicate the default values used when this structure is not provided to <b>TSPI_lineMakeCall</b>.</p>
<pre><code>typedef struct linecallparams_tag {  // Defaults:
    DWORD  dwTotalSize;  // ---------

    DWORD  dwBearerMode;  // voice
    DWORD  dwMinRate;  // (3.1kHz)
    DWORD  dwMaxRate;  // (3.1kHz)
    DWORD  dwMediaMode;  // interactiveVoice

    DWORD  dwCallParamFlags;  // 0
    DWORD  dwAddressMode;  // addressID
    DWORD  dwAddressID  // (any available)

    LINEDIALPARAMS DialParams;  // (0, 0, 0, 0)

    DWORD  dwOrigAddressSize;  // 0
    DWORD  dwOrigAddressOffset;

    DWORD  dwDisplayableAddressSize;  // 0
    DWORD  dwDisplayableAddressOffset;

    DWORD  dwCalledPartySize;  // 0
    DWORD  dwCalledPartyOffset;

    DWORD  dwCommentSize;  // 0
    DWORD  dwCommentOffset;

    DWORD  dwUserUserInfoSize;  // 0
    DWORD  dwUserUserInfoOffset;

    DWORD  dwHighLevelCompSize;  // 0
    DWORD  dwHighLevelCompOffset;

    DWORD  dwLowLevelCompSize;  // 0
    DWORD  dwLowLevelCompOffset;

    DWORD  dwDevSpecificSize;  // 0
    DWORD  dwDevSpecificOffset;
} LINECALLPARAMS, FAR *LPLINECALLPARAMS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwTotalSize</b></dt>
<dd>
The total size in bytes allocated to this data structure. This size should be big enough to hold all the fixed and variably sized portions of this data structure.</dd>
<dt>
<b>dwBearerMode</b></dt>
<dd>
The bearer mode for the call. This member uses the following LINEBEARERMODE_ constants: 
<dl>
<dt>
LINEBEARERMODE_VOICE </dt>
<dd>
A regular 3.1kHz analog voice grade bearer service. Bit integrity is not assured. Voice can support fax and modem media modes. </dd>
<dt>
LINEBEARERMODE_SPEECH </dt>
<dd>
Corresponds to G.711 speech transmission on the call. The network can use processing techniques such as analog transmission, echo cancellation and compression/decompression. Bit integrity is not assured. Speech is not intended to support fax and modem media modes. </dd>
<dt>
LINEBEARERMODE_MULTIUSE </dt>
<dd>
The multiuse mode defined by ISDN. </dd>
<dt>
LINEBEARERMODE_DATA </dt>
<dd>
The unrestricted data transfer on the call. The data rate is specified separately. </dd>
<dt>
LINEBEARERMODE_ALTSPEECHDATA </dt>
<dd>
The alternate transfer of speech or unrestricted data on the same call (ISDN). </dd>
<dt>
LINEBEARERMODE_NONCALLSIGNALING </dt>
<dd>
Corresponds to a non-call-associated signaling connection from the application to the service provider or switch (treated as a media stream by the Telephony API). </dd>
<dt>
LINEBEARERMODE_PASSTHROUGH</dt>
<dd>
When a call is active in LINEBEARERMODE_PASSTHROUGH, the service provider gives direct access to the attached hardware for control by the application. This mode is used primarily by applications desiring temporary direct control over asynchronous modems, accessed through the Win32 comm functions, for the purpose of configuring or using special features not otherwise supported by the service provider. </dd>
</dl>

<p>
If <b>dwBearerMode</b> is not set (is 0), the LINEBEARERMODE_VOICE value is assumed.
</dd>
<dt>
<b>dwMinRate</b></dt>
<dt>
<b>dwMaxRate</b></dt>
<dd>
The data rate range requested for the call's data stream in bps (bits per second). When making a call, the service provider attempts to provide the highest available rate in the requested range. If a specific data rate is required, both min and max should be set to that value. If an application works best with one rate, but is able the degrade to lower rates, the application specifies these as the max and min rates, respectively.
<p>
If <b>dwMaxRate</b> is not set (is 0), the rate is assumed to be the maximum rate supported by device.
</dd>
<dt>
<b>dwMediaMode</b></dt>
<dd>
The expected media mode of the call. This member uses the following LINEMEDIAMODE_ constants: 
<dl>
<dt>
LINEMEDIAMODE_UNKNOWN </dt>
<dd>
A media stream exists but its mode is not known. This corresponds to a call with an unclassified media type. In typical analog telephony environments, an inbound call's media mode may be unknown until after the call is answered and the media stream is filtered to make a determination. </dd>
<dt>
LINEMEDIAMODE_INTERACTIVEVOICE </dt>
<dd>
The presence of voice energy on the call and the call is treated as an interactive call with humans on both ends. </dd>
<dt>
LINEMEDIAMODE_AUTOMATEDVOICE </dt>
<dd>
The presence of voice energy on the call and the voice is locally handled by an automated application. </dd>
<dt>
LINEMEDIAMODE_DATAMODEM </dt>
<dd>
A data modem session on the call. </dd>
<dt>
LINEMEDIAMODE_G3FAX </dt>
<dd>
A group 3 fax is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_TDD </dt>
<dd>
A TDD (Telephony Devices for the Deaf) session on the call. </dd>
<dt>
LINEMEDIAMODE_G4FAX </dt>
<dd>
A group 4 fax is being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_DIGITALDATA </dt>
<dd>
Digital data being sent or received over the call. </dd>
<dt>
LINEMEDIAMODE_TELETEX </dt>
<dd>
A teletex session on the call. Teletex is one of the telematic services. </dd>
<dt>
LINEMEDIAMODE_VIDEOTEX </dt>
<dd>
A videotex session on the call. Videotex is one the telematic services. </dd>
<dt>
LINEMEDIAMODE_TELEX </dt>
<dd>
A telex session on the call. Telex is one the telematic services. </dd>
<dt>
LINEMEDIAMODE_MIXED </dt>
<dd>
A mixed session on the call. Mixed is one the ISDN telematic services. </dd>
<dt>
LINEMEDIAMODE_ADSI </dt>
<dd>
An ADSI (Analog Display Services Interface) session on the call. </dd>
<dt>
LINEMEDIAMODE_VOICEVIEW </dt>
<dd>
The media mode of the call is VoiceView. </dd>
</dl>

<p>
If <b>dwMediaMode</b> is not set (is 0), the LINEMEDIAMODE_INTERACTIVEVOICE value is assumed.
</dd>
<dt>
<b>dwCallParamFlags</b></dt>
<dd>
These flags specify a collection of boolean call setup parameters, of type LINECALLPARAMFLAGS_. Values are: 
<dl>
<dt>
LINECALLPARAMFLAGS_SECURE </dt>
<dd>
The call is set up as secure. </dd>
<dt>
LINECALLPARAMFLAGS_IDLE </dt>
<dd>
The call gets an idle call appearance. </dd>
<dt>
LINECALLPARAMFLAGS_BLOCKID </dt>
<dd>
The originator identity is concealed (block caller ID). </dd>
<dt>
LINECALLPARAMFLAGS_ORIGOFFHOOK </dt>
<dd>
The originator's phone is automatically taken off hook. </dd>
<dt>
LINECALLPARAMFLAGS_DESTOFFHOOK </dt>
<dd>
The called party's phone is automatically taken off hook. </dd>
</dl>
</dd>
<dt>
<b>dwAddressMode</b></dt>
<dd>
The mode by which the originating address is specified, of type LINEADDRESSMODE_. Values are: 
<dl>
<dt>
LINEADDRESSMODE_ADDRESSID </dt>
<dd>
The address is specified by means of a small integer in the range from 0 to <i>dwNumAddresses </i>minus one, where <i>dwNumAddresses</i> is the value in the line's device capabilities. The selected address is specified in the <b>dwAddressID</b> member. </dd>
<dt>
LINEADDRESSMODE_DIALABLEADDR </dt>
<dd>
The address is specified with its dialable address. The address is contained in the <b>dwOrigAddressSize</b>, <b>dwOrigAddressOffset</b> variably sized field. </dd>
</dl>

<p>
If <b>dwAddressMode</b> is not set (is 0), the LINEADDRESSMODE_ADDRESSID value is assumed.
</dd>
<dt>
<b>dwAddressID</b></dt>
<dd>
The address identifier of the originating address if <b>dwAddressMode</b> is set to LINEADDRESSMODE_ADDRESSID.</dd>
<dt>
<b>DialParams</b></dt>
<dd>
Dial parameters to be used on this call, of type <a href="struc2_2e0i.htm"><b>LINEDIALPARAMS</b></a>. When any member within this field has a value of 0, the default value for the field is used as specified in <b>DefaultDialParams</b> of the <a href="struc2_0j1u.htm"><b>LINEDEVCAPS</b></a> structure. If a nonzero value is specified for a field but the value is outside the range specified by the corresponding fields in <b>MinDialParams</b> and <b>MaxDialParams</b> in the <b>LINEDEVCAPS</b> structure, the nearest value within the valid range is used instead.</dd>
<dt>
<b>dwOrigAddressSize</b></dt>
<dt>
<b>dwOrigAddressOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding the originating address. The format of this address depends on the <b>dwAddressMode</b> member.</dd>
<dt>
<b>dwDisplayableAddressSize</b></dt>
<dt>
<b>dwDisplayableAddressOffset</b></dt>
<dd>
The displayable string is used for logging purposes. The content of these fields is recorded in the <b>dwDisplayableAddressSize/Offset</b> member of the call's <a href="messgs_0fvz.htm">LINE_CALLINFO</a> message. This information is intended for logging purposes. The TAPI function <b>lineTranslateAddress</b> returns appropriate information to be placed in this field in the <b>dwDisplayableAddressSize/Offset</b> members of the <b>LINETRANSLATEOUTPUT</b> structure.</dd>
<dt>
<b>dwCalledPartySize</b></dt>
<dt>
<b>dwCalledPartyOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding called party information. This information can be specified by the application that makes the call and is made available in the call's information structure for logging purposes. The format of this member is that of <b>dwStringFormat</b>, as specified in <a href="struc2_0j1u.htm"><b>LINEDEVCAPS</b></a>.</dd>
<dt>
<b>dwCommentSize</b></dt>
<dt>
<b>dwCommentOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding comments about the call. This information can be specified by the application that makes the call and is made available in the call's information structure for logging purposes. The format of this member is that of <b>dwStringFormat</b>, as specified in <b>LINEDEVCAPS</b>.</dd>
<dt>
<b>dwUserUserInfoSize</b></dt>
<dt>
<b>dwUserUserInfoOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding user-user information.</dd>
<dt>
<b>dwHighLevelCompSize</b></dt>
<dt>
<b>dwHighLevelCompOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding high-level compatibility information.</dd>
<dt>
<b>dwLowLevelCompSize</b></dt>
<dt>
<b>dwLowLevelCompOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding low-level compatibility information.</dd>
<dt>
<b>dwDevSpecificSize</b></dt>
<dt>
<b>dwDevSpecificOffset</b></dt>
<dd>
The size in bytes and the offset from the beginning of this data structure in bytes of the variably sized field holding device-specific information.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Device-specific extensions should use the <b>DevSpecific</b> (<b>dwDevSpecificSize</b> and <b>dwDevSpecificOffset</b>) variably sized area of this data structure.</p>
<p>
This structure is used as a parameter for other operations, such as <a href="func2_0r8s.htm"><b>TSPI_lineMakeCall</b></a> when setting up a call. Its members allow the application to specify the quality of service requested from the network as well as a variety of ISDN call setup parameters. If no <b>LINECALLPARAMS</b> structure is supplied to <b>TSPI_lineMakeCall</b>, a default POTS voice grade call is requested with the default values listed above.</p>
<p>
Note that the parameters <b>DialParams</b> through <b>dwDevSpecificOffset</b> are ignored when an <i>lpCallParams</i> parameter is specified with the function <a href="func1_6tri.htm"><b>TSPI_lineConditionalMediaDetection</b></a>.</p>
<h4>See Also</h4>
<p>
<a href="cnstant_9qib.htm">LINEBEARERMODE_ Constants</a>, <a href="cnstant_5kkz.htm">LINECALLPARAMFLAGS_ Constants</a>, <a href="cnstant_4cxf.htm">LINEMEDIAMODE_ Constants</a>,<b> <a href="func2_0r8s.htm">TSPI_lineMakeCall</a></b></p>
<p>&nbsp;</p></body>
</HTML>
