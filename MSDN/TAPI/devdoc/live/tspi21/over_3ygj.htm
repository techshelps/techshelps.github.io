<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening and Closing Phone Devices</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_tspi_opening_and_closing_phone_devices"></a>Opening and Closing Phone Devices</h4>
<p>
After performing basic initialization and possibly retrieval of device capabilities, tapi32.dll must open the phone device before it can access functions on that phone. After a phone device is successfully opened, tapi32.dll is returned a handle representing the open phone. The function <a href="func3_9bn2.htm"><b>TSPI_phoneOpen</b></a> opens the specified phone device prior to providing access to functions on the phone. <a href="func3_9z8l.htm"><b>TSPI_phoneClose</b></a> closes a specified phone device.</p>
<p>
A phone device is identified to <a href="func2_9u0e.htm"><b>TSPI_lineOpen</b></a> by means of its device identifier. This function returns a handle to an open phone. A handle to an open phone device is used in other operations to identify the open phone device. The only functions on phone devices that take a phone device identifier parameter are the early initialization functions such as <a href="func3_67ar.htm"><b>TSPI_phoneGetDevCaps</b></a>, <a href="func3_6k6m.htm"><b>TSPI_phoneNegotiateTSPIVersion</b></a>, <a href="func3_2f5a.htm"><b>TSPI_phoneNegotiateExtVersion</b></a>, and <b>TSPI_phoneOpen</b>. All other functions take phone handles.</p>
<p>
Given a phone handle, the phone's device identifier can be retrieved with the <a href="func3_9g6c.htm"><b>TSPI_phoneGetID</b></a> function. </p>
<p>
The tapi32.dll client application can obtain device identifiers for various Win32 device classes associated with an opened phone by invoking <b>TSPI_phoneGetID</b> with the TAPI <b>phoneGetID</b> function. This function takes a phone handle and a device class description. It returns the device identifier for the device of the given device class that is associated with the open phone device. If the device class is tapi/phone, the device identifier of the phone device is returned. If the device class is mci/wave, the device identifier of an mci wave audio device (if supported) is returned that allows the manipulation (such as recording or playback) of audio over the phone.</p>
<p>
To subsequently open a phone device for audio playback using the waveform API, an application calls the <b>waveOutOpen</b> function. The implementation of the <b>waveOutOpen</b> call is device specific, and each implementation has a number of options for implementing this function. If the phone's handset is on hook when invoking the function, for example, the <b>waveOutOpen</b> driver may return an error code message to the application that is further mapped in a request (dialog box) to the user to "pick up the phone." This is similar to requesting a CD to play back audio when no compact disc is in the player, and the existing definition of the waveform APIs can deal with it.</p>
<p>
In contrast with line devices, for which the basic line services provide the equivalent of POTS, no minimum guaranteed set of functions is defined for phone devices. While each phone device provides at least the functions and messages listed in this section, these operations only provide a way for the software to refer to the phone; they do not offer any true operations on the physical phone device.</p>
<p>&nbsp;</p></body>
</HTML>
