<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Call States</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tspi_call_states"></a>Call States</h3>
<p>
Most functions on calls only make sense while the call is in one of certain call states. This call state is checked, and the function returns an error if the call is not in one these states. The effect of the successful execution of a request may be some typical call state transitions. The service provider notifies TAPI about call state changes using call state messages. These messages report the state the call has just entered to TAPI and to applications. Because unsolicited events may occur to calls (as when the other party disconnects), tapi32.dll cannot assume that requests it issues always result in certain fixed call state transitions.</p>
<p>
This model gives the service provider designer maximum flexibility across different telephony environments. For example, it allows designs in which requests propagate through a network to a Telelphony server, such as a PBX, while call state change reports propagate back to the local client at some later time. Such a design need not try to maintain a lock-step "view" of the current state of the call in both client and server that is always identical between the two sites.</p>
<p>&nbsp;</p></body>
</HTML>
