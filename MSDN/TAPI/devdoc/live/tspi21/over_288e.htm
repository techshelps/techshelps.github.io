<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Line Initialization</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_tspi_line_initialization"></a>Line Initialization</h3>
<p>
As part of the line device abstraction defined by TSPI, tapi32.dll and the service provider must first perform some basic initialization. The first step is interface version negotiation. The tapi32.dll performs this by calling the <a href="func2_7fvy.htm"><b>TSPI_lineNegotiateTSPIVersion</b></a> function. This function is usually used to negotiate on behalf of an individual line device; different line devices within the same service provider can operate under different interface versions. The tapi32.dll passes a special reserved device identifier value, <a href="datype_8aem.htm">INITIALIZE_NEGOTIATION</a>, to indicate that it is negotiating an overall interface version for initialization functions that affect the entire service provider.</p>
<p>
The result of this negotiation is passed to subsequent procedures until a line device is opened. At that time, the line device becomes committed to a particular interface version. This interface version is implicit until the line is closed, and does not need to be passed to subsequent functions that operate on an opened line or calls on the line.</p>
<p>
Following overall interface version negotiation, tapi32.dll calls the <a href="func1_9pv8.htm"><b>TSPI_providerInit</b></a> function. This function initializes the service provider, and gives it parameters required for subsequent operation. These parameters include the following:
<ul>
<li>
<i>dwPermanentProviderID</i> Specifies the permanent identifier, unique within the service providers on this system, of the service provider being initialized.</li>
<li>
<i>dwLineDeviceIDBase</i> Specifies the lowest device identifier for the line devices supported by this service provider. Devices of the telephony line device class are identified by integers starting at zero. This range of identifiers is contiguous across the full range of line devices. Because there can be multiple service providers managing line devices in a single system, each service provider obtains a contiguous portion of the total range. This parameter tells the service provider the lowest value in its portion of the range. The service provider, rather than tapi32.dll, is responsible for mapping this variable range to its own internal device identifiers. This gives the service-provider vendor sufficient flexibility to use device identifiers in device-specific extensions if it wants. Because the service provider knows what device identifiers appear in the TAPI-defined parameters and data structures, it can use consistent device identifiers in device-specific extension parameters and data structures.</li>
<li>
<i>dwPhoneDeviceIDBase</i> Specifies the lowest device identifier for the phone devices supported by this service provider.</li>
<li>
<i>dwNumLines</i> Specifies the number of line devices that this service provider supports.</li>
<li>
<i>dwNumPhones</i> Specifies the number of phone devices that this service provider supports.</li>
<li>
<i>lpfnCompletionProc</i> Specifies the procedure the service provider calls to report completion of all asynchronously operating procedures on line and phone devices.</li>
</ul>
<p>
Following <a href="func1_9pv8.htm"><b>TSPI_providerInit</b></a>, normal operations such as opening lines can be performed.</p>
<p>&nbsp;</p></body>
</HTML>
